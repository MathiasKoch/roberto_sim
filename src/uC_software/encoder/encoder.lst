GAS LISTING /tmp/cc02TjZy.s 			page 1


   1               		.file	"encoder.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/mathias/ROS/roberto_sim/src/uC_software/encoder/",100,0,2,.Ltext0
   8               		.stabs	"encoder.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  18               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  19               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  20               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  21               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  24               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"short _Fract:t(0,15)=r(0,1);1;0;",128,0,0,0
  27               		.stabs	"_Fract:t(0,16)=r(0,1);2;0;",128,0,0,0
  28               		.stabs	"long _Fract:t(0,17)=r(0,1);4;0;",128,0,0,0
  29               		.stabs	"long long _Fract:t(0,18)=r(0,1);8;0;",128,0,0,0
  30               		.stabs	"unsigned short _Fract:t(0,19)=r(0,1);1;0;",128,0,0,0
  31               		.stabs	"unsigned _Fract:t(0,20)=r(0,1);2;0;",128,0,0,0
  32               		.stabs	"unsigned long _Fract:t(0,21)=r(0,1);4;0;",128,0,0,0
  33               		.stabs	"unsigned long long _Fract:t(0,22)=r(0,1);8;0;",128,0,0,0
  34               		.stabs	"_Sat short _Fract:t(0,23)=r(0,1);1;0;",128,0,0,0
  35               		.stabs	"_Sat _Fract:t(0,24)=r(0,1);2;0;",128,0,0,0
  36               		.stabs	"_Sat long _Fract:t(0,25)=r(0,1);4;0;",128,0,0,0
  37               		.stabs	"_Sat long long _Fract:t(0,26)=r(0,1);8;0;",128,0,0,0
  38               		.stabs	"_Sat unsigned short _Fract:t(0,27)=r(0,1);1;0;",128,0,0,0
  39               		.stabs	"_Sat unsigned _Fract:t(0,28)=r(0,1);2;0;",128,0,0,0
  40               		.stabs	"_Sat unsigned long _Fract:t(0,29)=r(0,1);4;0;",128,0,0,0
  41               		.stabs	"_Sat unsigned long long _Fract:t(0,30)=r(0,1);8;0;",128,0,0,0
  42               		.stabs	"short _Accum:t(0,31)=r(0,1);2;0;",128,0,0,0
  43               		.stabs	"_Accum:t(0,32)=r(0,1);4;0;",128,0,0,0
  44               		.stabs	"long _Accum:t(0,33)=r(0,1);8;0;",128,0,0,0
  45               		.stabs	"long long _Accum:t(0,34)=r(0,1);8;0;",128,0,0,0
  46               		.stabs	"unsigned short _Accum:t(0,35)=r(0,1);2;0;",128,0,0,0
  47               		.stabs	"unsigned _Accum:t(0,36)=r(0,1);4;0;",128,0,0,0
  48               		.stabs	"unsigned long _Accum:t(0,37)=r(0,1);8;0;",128,0,0,0
  49               		.stabs	"unsigned long long _Accum:t(0,38)=r(0,1);8;0;",128,0,0,0
  50               		.stabs	"_Sat short _Accum:t(0,39)=r(0,1);2;0;",128,0,0,0
  51               		.stabs	"_Sat _Accum:t(0,40)=r(0,1);4;0;",128,0,0,0
  52               		.stabs	"_Sat long _Accum:t(0,41)=r(0,1);8;0;",128,0,0,0
  53               		.stabs	"_Sat long long _Accum:t(0,42)=r(0,1);8;0;",128,0,0,0
  54               		.stabs	"_Sat unsigned short _Accum:t(0,43)=r(0,1);2;0;",128,0,0,0
  55               		.stabs	"_Sat unsigned _Accum:t(0,44)=r(0,1);4;0;",128,0,0,0
  56               		.stabs	"_Sat unsigned long _Accum:t(0,45)=r(0,1);8;0;",128,0,0,0
  57               		.stabs	"_Sat unsigned long long _Accum:t(0,46)=r(0,1);8;0;",128,0,0,0
GAS LISTING /tmp/cc02TjZy.s 			page 2


  58               		.stabs	"void:t(0,47)=(0,47)",128,0,0,0
  59               		.stabs	"/usr/lib/avr/include/avr/io.h",130,0,0,0
  60               		.stabs	"/usr/lib/avr/include/avr/sfr_defs.h",130,0,0,0
  61               		.stabs	"/usr/lib/avr/include/inttypes.h",130,0,0,0
  62               		.stabs	"/usr/lib/gcc/avr/4.8.2/include/stdint.h",130,0,0,0
  63               		.stabs	"/usr/lib/avr/include/stdint.h",130,0,0,0
  64               		.stabs	"int8_t:t(5,1)=(0,10)",128,0,121,0
  65               		.stabs	"uint8_t:t(5,2)=(0,11)",128,0,122,0
  66               		.stabs	"int16_t:t(5,3)=(0,1)",128,0,123,0
  67               		.stabs	"uint16_t:t(5,4)=(0,4)",128,0,124,0
  68               		.stabs	"int32_t:t(5,5)=(0,3)",128,0,125,0
  69               		.stabs	"uint32_t:t(5,6)=(0,5)",128,0,126,0
  70               		.stabs	"int64_t:t(5,7)=(0,6)",128,0,128,0
  71               		.stabs	"uint64_t:t(5,8)=(0,7)",128,0,129,0
  72               		.stabs	"intptr_t:t(5,9)=(5,3)",128,0,142,0
  73               		.stabs	"uintptr_t:t(5,10)=(5,4)",128,0,147,0
  74               		.stabs	"int_least8_t:t(5,11)=(5,1)",128,0,159,0
  75               		.stabs	"uint_least8_t:t(5,12)=(5,2)",128,0,164,0
  76               		.stabs	"int_least16_t:t(5,13)=(5,3)",128,0,169,0
  77               		.stabs	"uint_least16_t:t(5,14)=(5,4)",128,0,174,0
  78               		.stabs	"int_least32_t:t(5,15)=(5,5)",128,0,179,0
  79               		.stabs	"uint_least32_t:t(5,16)=(5,6)",128,0,184,0
  80               		.stabs	"int_least64_t:t(5,17)=(5,7)",128,0,192,0
  81               		.stabs	"uint_least64_t:t(5,18)=(5,8)",128,0,199,0
  82               		.stabs	"int_fast8_t:t(5,19)=(5,1)",128,0,213,0
  83               		.stabs	"uint_fast8_t:t(5,20)=(5,2)",128,0,218,0
  84               		.stabs	"int_fast16_t:t(5,21)=(5,3)",128,0,223,0
  85               		.stabs	"uint_fast16_t:t(5,22)=(5,4)",128,0,228,0
  86               		.stabs	"int_fast32_t:t(5,23)=(5,5)",128,0,233,0
  87               		.stabs	"uint_fast32_t:t(5,24)=(5,6)",128,0,238,0
  88               		.stabs	"int_fast64_t:t(5,25)=(5,7)",128,0,246,0
  89               		.stabs	"uint_fast64_t:t(5,26)=(5,8)",128,0,253,0
  90               		.stabs	"intmax_t:t(5,27)=(5,7)",128,0,273,0
  91               		.stabs	"uintmax_t:t(5,28)=(5,8)",128,0,278,0
  92               		.stabn	162,0,0,0
  93               		.stabn	162,0,0,0
  94               		.stabs	"int_farptr_t:t(3,1)=(5,5)",128,0,77,0
  95               		.stabs	"uint_farptr_t:t(3,2)=(5,6)",128,0,81,0
  96               		.stabn	162,0,0,0
  97               		.stabn	162,0,0,0
  98               		.stabs	"/usr/lib/avr/include/avr/fuse.h",130,0,0,0
  99               		.stabs	"__fuse_t:t(6,1)=(6,2)=s3low:(0,11),0,8;high:(0,11),8,8;extended:(0,11),16,8;;",128,0,244,0
 100               		.stabn	162,0,0,0
 101               		.stabn	162,0,0,0
 102               		.stabs	"/usr/lib/avr/include/stdlib.h",130,0,0,0
 103               		.stabs	"/usr/lib/gcc/avr/4.8.2/include/stddef.h",130,0,0,0
 104               		.stabs	"size_t:t(8,1)=(0,4)",128,0,212,0
 105               		.stabs	"wchar_t:t(8,2)=(0,1)",128,0,324,0
 106               		.stabn	162,0,0,0
 107               		.stabs	"div_t:t(7,1)=(7,2)=s4quot:(0,1),0,16;rem:(0,1),16,16;;",128,0,71,0
 108               		.stabs	"ldiv_t:t(7,3)=(7,4)=s8quot:(0,3),0,32;rem:(0,3),32,32;;",128,0,77,0
 109               		.stabs	"__compar_fn_t:t(7,5)=(7,6)=*(7,7)=f(0,1)",128,0,80,0
 110               		.stabn	162,0,0,0
 111               		.stabs	"TWI_slave.h",130,0,0,0
 112               		.stabs	"TWI_statusReg:T(9,1)=u1all:(0,11),0,8;:(9,2)=s1lastTransOK:(0,11),0,1;RxDataInBuf:(0,11),1
 113               		.stabn	162,0,0,0
 114               		.stabs	"AS5048:t(0,48)=(0,49)=s10raw_angle:(5,4),0,16;prev_angle:(5,4),16,16;dTicks:(5,3),32,16;dt
GAS LISTING /tmp/cc02TjZy.s 			page 3


 115               		.stabs	"__vector_14:F(0,47)",36,0,39,__vector_14
 116               	.global	__vector_14
 117               		.type	__vector_14, @function
 118               	__vector_14:
 119               		.stabd	46,0,0
   1:encoder.c     **** #define F_CPU 16000000UL
   2:encoder.c     **** 
   3:encoder.c     **** #include <avr/io.h>
   4:encoder.c     **** #include <avr/interrupt.h>
   5:encoder.c     **** #include <util/delay.h>
   6:encoder.c     **** #include <stdbool.h>
   7:encoder.c     **** #include <stdlib.h>
   8:encoder.c     **** #include "TWI_slave.h"
   9:encoder.c     **** #include "AS5048A.h"
  10:encoder.c     **** 
  11:encoder.c     **** #define DIR_FORWARD 0
  12:encoder.c     **** #define DIR_REVERSE 1
  13:encoder.c     **** 
  14:encoder.c     **** #define COMP_POS 0x00
  15:encoder.c     **** #define COMP_NEG 0x01
  16:encoder.c     **** #define COMP_NONE 0x02
  17:encoder.c     **** 
  18:encoder.c     **** #define TICKS_PR_ROT 16384
  19:encoder.c     **** #define TIMERFREQ 1000
  20:encoder.c     **** 
  21:encoder.c     **** typedef struct{
  22:encoder.c     **** 	uint16_t raw_angle;
  23:encoder.c     **** 	uint16_t prev_angle;
  24:encoder.c     **** 	int16_t  dTicks;
  25:encoder.c     **** 	int16_t  dt; //ms
  26:encoder.c     **** 	uint16_t rotations;
  27:encoder.c     **** } AS5048;
  28:encoder.c     **** 
  29:encoder.c     **** 
  30:encoder.c     **** 
  31:encoder.c     **** unsigned char TWI_Act_On_Failure_In_Last_Transmission(unsigned char TWIerrorMsg);
  32:encoder.c     **** 
  33:encoder.c     **** volatile bool update = false;
  34:encoder.c     **** 
  35:encoder.c     **** uint8_t retryCnt = 0;
  36:encoder.c     **** 
  37:encoder.c     **** unsigned char messageBuf[TWI_BUFFER_SIZE];
  38:encoder.c     **** 
  39:encoder.c     **** ISR(TIMER0_COMPA_vect) {
 120               		.stabn	68,0,39,.LM0-.LFBB1
 121               	.LM0:
 122               	.LFBB1:
 123 0000 1F92      		push r1
 124 0002 0F92      		push r0
 125 0004 0FB6      		in r0,__SREG__
 126 0006 0F92      		push r0
 127 0008 1124      		clr __zero_reg__
 128 000a 8F93      		push r24
 129               	/* prologue: Signal */
 130               	/* frame size = 0 */
 131               	/* stack size = 4 */
 132               	.L__stack_usage = 4
GAS LISTING /tmp/cc02TjZy.s 			page 4


  40:encoder.c     ****     update = true;
 133               		.stabn	68,0,40,.LM1-.LFBB1
 134               	.LM1:
 135 000c 81E0      		ldi r24,lo8(1)
 136 000e 8093 0000 		sts update,r24
 137               	/* epilogue start */
  41:encoder.c     **** }
 138               		.stabn	68,0,41,.LM2-.LFBB1
 139               	.LM2:
 140 0012 8F91      		pop r24
 141 0014 0F90      		pop r0
 142 0016 0FBE      		out __SREG__,r0
 143 0018 0F90      		pop r0
 144 001a 1F90      		pop r1
 145 001c 1895      		reti
 146               		.size	__vector_14, .-__vector_14
 147               	.Lscope1:
 148               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 149               		.stabd	78,0,0
 150               		.stabs	"togglePin:F(0,47)",36,0,43,togglePin
 151               	.global	togglePin
 152               		.type	togglePin, @function
 153               	togglePin:
 154               		.stabd	46,0,0
  42:encoder.c     **** 
  43:encoder.c     **** void togglePin(){
 155               		.stabn	68,0,43,.LM3-.LFBB2
 156               	.LM3:
 157               	.LFBB2:
 158               	/* prologue: function */
 159               	/* frame size = 0 */
 160               	/* stack size = 0 */
 161               	.L__stack_usage = 0
  44:encoder.c     **** 	PORTD ^= (1 << 6);
 162               		.stabn	68,0,44,.LM4-.LFBB2
 163               	.LM4:
 164 001e 8BB1      		in r24,0xb
 165 0020 90E4      		ldi r25,lo8(64)
 166 0022 8927      		eor r24,r25
 167 0024 8BB9      		out 0xb,r24
 168 0026 0895      		ret
 169               		.size	togglePin, .-togglePin
 170               	.Lscope2:
 171               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 172               		.stabd	78,0,0
 173               		.stabs	"TWI_Act_On_Failure_In_Last_Transmission:F(0,11)",36,0,134,TWI_Act_On_Failure_In_Last_Trans
 174               		.stabs	"TWIerrorMsg:P(0,11)",64,0,134,24
 175               	.global	TWI_Act_On_Failure_In_Last_Transmission
 176               		.type	TWI_Act_On_Failure_In_Last_Transmission, @function
 177               	TWI_Act_On_Failure_In_Last_Transmission:
 178               		.stabd	46,0,0
  45:encoder.c     **** }
  46:encoder.c     **** 
  47:encoder.c     **** int main(int argc, const char* argv[]){
  48:encoder.c     **** 
  49:encoder.c     **** 
  50:encoder.c     **** 	// Setup address pins as input
GAS LISTING /tmp/cc02TjZy.s 			page 5


  51:encoder.c     **** 	DDRD &= ~((1 << 2) | (1 << 3));		// PD2 & PD3
  52:encoder.c     **** 
  53:encoder.c     **** 	// PD6 as output for togglePin()
  54:encoder.c     **** 	DDRD |= (1 << 6);		// PD6
  55:encoder.c     **** 
  56:encoder.c     ****   	unsigned char TWI_slaveAddress = (0x10 | (PIND & 0x04) | (PIND & 0x08));
  57:encoder.c     **** 
  58:encoder.c     **** 
  59:encoder.c     **** 	// Initialise TWI module for slave operation. Include address and/or enable General Call.
  60:encoder.c     **** 	TWI_Slave_Initialise((unsigned char)((TWI_slaveAddress<<TWI_ADR_BITS) | (FALSE<<TWI_GEN_BIT))); 
  61:encoder.c     **** 
  62:encoder.c     **** 	AS5048A_Init();
  63:encoder.c     **** 
  64:encoder.c     **** 	AS5048 enc;
  65:encoder.c     **** 	enc.raw_angle = 0;
  66:encoder.c     **** 	enc.prev_angle = 0;
  67:encoder.c     **** 	enc.rotations = 0;
  68:encoder.c     **** 	enc.dt = 0;
  69:encoder.c     **** 	enc.dTicks = 0;
  70:encoder.c     **** 	
  71:encoder.c     ****     // start timer0 at 10 kHz
  72:encoder.c     ****     //16MHz/(8*(OCR0A+1))
  73:encoder.c     **** 	TCCR0A |= (1 << WGM01);
  74:encoder.c     ****     OCR0A = 199;		
  75:encoder.c     ****     TIMSK0=(1<<OCIE0A);
  76:encoder.c     ****     TCCR0B |= (1<<CS01);// prescale 8 // | (1<<CS00); 
  77:encoder.c     **** 	               
  78:encoder.c     **** 	sei();
  79:encoder.c     **** 	
  80:encoder.c     **** 	// Start the TWI transceiver to enable reseption of the first command from the TWI Master.
  81:encoder.c     **** 	messageBuf[0] = 0x00;
  82:encoder.c     **** 	messageBuf[1] = 0x00;
  83:encoder.c     **** 	messageBuf[2] = 0x00;
  84:encoder.c     **** 	messageBuf[3] = 0x00;
  85:encoder.c     **** 	messageBuf[4] = 0x00;
  86:encoder.c     **** 	TWI_Start_Transceiver_With_Data(messageBuf, TWI_BUFFER_SIZE);
  87:encoder.c     **** 
  88:encoder.c     **** 	while(1){
  89:encoder.c     **** 		if(update){
  90:encoder.c     **** 			update = false;
  91:encoder.c     **** 			togglePin();
  92:encoder.c     **** 			enc.raw_angle = AS5048A_getRawRotation();
  93:encoder.c     **** 			
  94:encoder.c     **** 			// Shift to 16 bit to match overflow from 14 bit encoder
  95:encoder.c     **** 			// Calculate speed and return to 14 bits again
  96:encoder.c     **** 			enc.dTicks += ((int16_t)((enc.raw_angle<<2) - (enc.prev_angle<<2)))>>2; //dTicks
  97:encoder.c     **** 			// Update lagged position
  98:encoder.c     **** 			enc.prev_angle = enc.raw_angle;
  99:encoder.c     **** 			enc.dt += 1;
 100:encoder.c     **** 		}
 101:encoder.c     **** 
 102:encoder.c     **** 		// Check if the TWI Transceiver has completed an operation.
 103:encoder.c     **** 		if(!TWI_Transceiver_Busy()){
 104:encoder.c     **** 			// Check if the last operation was successful
 105:encoder.c     **** 			if(TWI_statusReg.lastTransOK){
 106:encoder.c     **** 				// Check if the TWI Transceiver has already been started.
 107:encoder.c     **** 				// If not then restart it to prepare it for new receptions.             
GAS LISTING /tmp/cc02TjZy.s 			page 6


 108:encoder.c     **** 				if(!TWI_Transceiver_Busy()){
 109:encoder.c     **** 					int32_t speed = enc.dTicks/enc.dt;///enc.dt*10000;
 110:encoder.c     **** 
 111:encoder.c     **** 					messageBuf[0] = (speed  >> 24) & 0xFF;
 112:encoder.c     **** 					messageBuf[1] = (speed  >> 16) & 0xFF;
 113:encoder.c     **** 					messageBuf[2] = (speed  >> 8) & 0xFF;
 114:encoder.c     **** 					messageBuf[3] =  speed  & 0xFF;
 115:encoder.c     **** 					messageBuf[4] =  0;
 116:encoder.c     **** 					
 117:encoder.c     **** 					TWI_Start_Transceiver_With_Data(messageBuf, TWI_BUFFER_SIZE);
 118:encoder.c     **** 					
 119:encoder.c     **** 					//if(TWI_statusReg.lastTransOK){
 120:encoder.c     **** 						// Reset counters
 121:encoder.c     **** 						enc.dTicks = 0;
 122:encoder.c     **** 						enc.dt = 0;
 123:encoder.c     **** 						retryCnt = 0;
 124:encoder.c     **** 					//}
 125:encoder.c     **** 				}
 126:encoder.c     **** 			}else{ // Ends up here if the last operation completed unsuccessfully
 127:encoder.c     **** 				TWI_Act_On_Failure_In_Last_Transmission(TWI_Get_State_Info());
 128:encoder.c     **** 			}
 129:encoder.c     **** 		}
 130:encoder.c     **** 	}
 131:encoder.c     **** 	return 0;
 132:encoder.c     **** }
 133:encoder.c     **** 
 134:encoder.c     **** unsigned char TWI_Act_On_Failure_In_Last_Transmission(unsigned char TWIerrorMsg){
 179               		.stabn	68,0,134,.LM5-.LFBB3
 180               	.LM5:
 181               	.LFBB3:
 182 0028 CF93      		push r28
 183 002a DF93      		push r29
 184 002c 1F92      		push __zero_reg__
 185 002e CDB7      		in r28,__SP_L__
 186 0030 DEB7      		in r29,__SP_H__
 187               	/* prologue: function */
 188               	/* frame size = 1 */
 189               	/* stack size = 3 */
 190               	.L__stack_usage = 3
 135:encoder.c     **** 	// A failure has occurred, use TWIerrorMsg to determine the nature of the failure
 136:encoder.c     **** 	// and take appropriate actions.
 137:encoder.c     **** 	// Se header file for a list of possible failures messages.
 138:encoder.c     **** 
 139:encoder.c     **** 	// This very simple example puts the error code on PORTB and restarts the transceiver with
 140:encoder.c     **** 	// all the same data in the transmission buffers.
 141:encoder.c     ****   	//PORTB = TWIerrorMsg;
 142:encoder.c     **** 	messageBuf[4] = ++retryCnt;
 191               		.stabn	68,0,142,.LM6-.LFBB3
 192               	.LM6:
 193 0032 9091 0000 		lds r25,retryCnt
 194 0036 9F5F      		subi r25,lo8(-(1))
 195 0038 9093 0000 		sts retryCnt,r25
 196 003c 9093 0000 		sts messageBuf+4,r25
 143:encoder.c     ****   	TWI_Start_Transceiver();
 197               		.stabn	68,0,143,.LM7-.LFBB3
 198               	.LM7:
 199 0040 8983      		std Y+1,r24
GAS LISTING /tmp/cc02TjZy.s 			page 7


 200 0042 0E94 0000 		call TWI_Start_Transceiver
 144:encoder.c     ****                     
 145:encoder.c     ****   	return TWIerrorMsg; 
 146:encoder.c     **** }...
 201               		.stabn	68,0,146,.LM8-.LFBB3
 202               	.LM8:
 203 0046 8981      		ldd r24,Y+1
 204               	/* epilogue start */
 205 0048 0F90      		pop __tmp_reg__
 206 004a DF91      		pop r29
 207 004c CF91      		pop r28
 208 004e 0895      		ret
 209               		.size	TWI_Act_On_Failure_In_Last_Transmission, .-TWI_Act_On_Failure_In_Last_Transmission
 210               	.Lscope3:
 211               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 212               		.stabd	78,0,0
 213               		.section	.text.startup,"ax",@progbits
 214               		.stabs	"main:F(0,1)",36,0,47,main
 215               		.stabs	"argc:P(0,1)",64,0,47,24
 216               		.stabs	"argv:P(0,50)=*(0,51)=*(0,52)=k(0,2)",64,0,47,22
 217               	.global	main
 218               		.type	main, @function
 219               	main:
 220               		.stabd	46,0,0
  47:encoder.c     **** int main(int argc, const char* argv[]){
 221               		.stabn	68,0,47,.LM9-.LFBB4
 222               	.LM9:
 223               	.LFBB4:
 224               	/* prologue: function */
 225               	/* frame size = 0 */
 226               	/* stack size = 0 */
 227               	.L__stack_usage = 0
  51:encoder.c     **** 	DDRD &= ~((1 << 2) | (1 << 3));		// PD2 & PD3
 228               		.stabn	68,0,51,.LM10-.LFBB4
 229               	.LM10:
 230 0000 8AB1      		in r24,0xa
 231 0002 837F      		andi r24,lo8(-13)
 232 0004 8AB9      		out 0xa,r24
  54:encoder.c     **** 	DDRD |= (1 << 6);		// PD6
 233               		.stabn	68,0,54,.LM11-.LFBB4
 234               	.LM11:
 235 0006 569A      		sbi 0xa,6
  56:encoder.c     ****   	unsigned char TWI_slaveAddress = (0x10 | (PIND & 0x04) | (PIND & 0x08));
 236               		.stabn	68,0,56,.LM12-.LFBB4
 237               	.LM12:
 238 0008 89B1      		in r24,0x9
 239 000a 99B1      		in r25,0x9
 240 000c 8470      		andi r24,lo8(4)
 241 000e 9870      		andi r25,lo8(8)
 242 0010 892B      		or r24,r25
 243 0012 8061      		ori r24,lo8(16)
  60:encoder.c     **** 	TWI_Slave_Initialise((unsigned char)((TWI_slaveAddress<<TWI_ADR_BITS) | (FALSE<<TWI_GEN_BIT))); 
 244               		.stabn	68,0,60,.LM13-.LFBB4
 245               	.LM13:
 246 0014 880F      		lsl r24
 247 0016 0E94 0000 		call TWI_Slave_Initialise
  62:encoder.c     **** 	AS5048A_Init();
GAS LISTING /tmp/cc02TjZy.s 			page 8


 248               		.stabn	68,0,62,.LM14-.LFBB4
 249               	.LM14:
 250 001a 0E94 0000 		call AS5048A_Init
  73:encoder.c     **** 	TCCR0A |= (1 << WGM01);
 251               		.stabn	68,0,73,.LM15-.LFBB4
 252               	.LM15:
 253 001e 84B5      		in r24,0x24
 254 0020 8260      		ori r24,lo8(2)
 255 0022 84BD      		out 0x24,r24
  74:encoder.c     ****     OCR0A = 199;		
 256               		.stabn	68,0,74,.LM16-.LFBB4
 257               	.LM16:
 258 0024 87EC      		ldi r24,lo8(-57)
 259 0026 87BD      		out 0x27,r24
  75:encoder.c     ****     TIMSK0=(1<<OCIE0A);
 260               		.stabn	68,0,75,.LM17-.LFBB4
 261               	.LM17:
 262 0028 82E0      		ldi r24,lo8(2)
 263 002a 8093 6E00 		sts 110,r24
  76:encoder.c     ****     TCCR0B |= (1<<CS01);// prescale 8 // | (1<<CS00); 
 264               		.stabn	68,0,76,.LM18-.LFBB4
 265               	.LM18:
 266 002e 85B5      		in r24,0x25
 267 0030 8260      		ori r24,lo8(2)
 268 0032 85BD      		out 0x25,r24
  78:encoder.c     **** 	sei();
 269               		.stabn	68,0,78,.LM19-.LFBB4
 270               	.LM19:
 271               	/* #APP */
 272               	 ;  78 "encoder.c" 1
 273 0034 7894      		sei
 274               	 ;  0 "" 2
  81:encoder.c     **** 	messageBuf[0] = 0x00;
 275               		.stabn	68,0,81,.LM20-.LFBB4
 276               	.LM20:
 277               	/* #NOAPP */
 278 0036 1092 0000 		sts messageBuf,__zero_reg__
  82:encoder.c     **** 	messageBuf[1] = 0x00;
 279               		.stabn	68,0,82,.LM21-.LFBB4
 280               	.LM21:
 281 003a 1092 0000 		sts messageBuf+1,__zero_reg__
  83:encoder.c     **** 	messageBuf[2] = 0x00;
 282               		.stabn	68,0,83,.LM22-.LFBB4
 283               	.LM22:
 284 003e 1092 0000 		sts messageBuf+2,__zero_reg__
  84:encoder.c     **** 	messageBuf[3] = 0x00;
 285               		.stabn	68,0,84,.LM23-.LFBB4
 286               	.LM23:
 287 0042 1092 0000 		sts messageBuf+3,__zero_reg__
  85:encoder.c     **** 	messageBuf[4] = 0x00;
 288               		.stabn	68,0,85,.LM24-.LFBB4
 289               	.LM24:
 290 0046 1092 0000 		sts messageBuf+4,__zero_reg__
  86:encoder.c     **** 	TWI_Start_Transceiver_With_Data(messageBuf, TWI_BUFFER_SIZE);
 291               		.stabn	68,0,86,.LM25-.LFBB4
 292               	.LM25:
 293 004a 65E0      		ldi r22,lo8(5)
GAS LISTING /tmp/cc02TjZy.s 			page 9


 294 004c 80E0      		ldi r24,lo8(messageBuf)
 295 004e 90E0      		ldi r25,hi8(messageBuf)
 296 0050 0E94 0000 		call TWI_Start_Transceiver_With_Data
  68:encoder.c     **** 	enc.dt = 0;
 297               		.stabn	68,0,68,.LM26-.LFBB4
 298               	.LM26:
 299 0054 00E0      		ldi r16,0
 300 0056 10E0      		ldi r17,0
  69:encoder.c     **** 	enc.dTicks = 0;
 301               		.stabn	68,0,69,.LM27-.LFBB4
 302               	.LM27:
 303 0058 E12C      		mov r14,__zero_reg__
 304 005a F12C      		mov r15,__zero_reg__
  66:encoder.c     **** 	enc.prev_angle = 0;
 305               		.stabn	68,0,66,.LM28-.LFBB4
 306               	.LM28:
 307 005c C0E0      		ldi r28,0
 308 005e D0E0      		ldi r29,0
 309               	.L5:
  89:encoder.c     **** 		if(update){
 310               		.stabn	68,0,89,.LM29-.LFBB4
 311               	.LM29:
 312 0060 8091 0000 		lds r24,update
 313 0064 8823      		tst r24
 314 0066 01F0      		breq .L6
  90:encoder.c     **** 			update = false;
 315               		.stabn	68,0,90,.LM30-.LFBB4
 316               	.LM30:
 317 0068 1092 0000 		sts update,__zero_reg__
  91:encoder.c     **** 			togglePin();
 318               		.stabn	68,0,91,.LM31-.LFBB4
 319               	.LM31:
 320 006c 0E94 0000 		call togglePin
  92:encoder.c     **** 			enc.raw_angle = AS5048A_getRawRotation();
 321               		.stabn	68,0,92,.LM32-.LFBB4
 322               	.LM32:
 323 0070 0E94 0000 		call AS5048A_getRawRotation
  96:encoder.c     **** 			enc.dTicks += ((int16_t)((enc.raw_angle<<2) - (enc.prev_angle<<2)))>>2; //dTicks
 324               		.stabn	68,0,96,.LM33-.LFBB4
 325               	.LM33:
 326 0074 9C01      		movw r18,r24
 327 0076 2C1B      		sub r18,r28
 328 0078 3D0B      		sbc r19,r29
 329 007a 220F      		lsl r18
 330 007c 331F      		rol r19
 331 007e 220F      		lsl r18
 332 0080 331F      		rol r19
 333 0082 3595      		asr r19
 334 0084 2795      		ror r18
 335 0086 3595      		asr r19
 336 0088 2795      		ror r18
 337 008a E20E      		add r14,r18
 338 008c F31E      		adc r15,r19
  99:encoder.c     **** 			enc.dt += 1;
 339               		.stabn	68,0,99,.LM34-.LFBB4
 340               	.LM34:
 341 008e 0F5F      		subi r16,-1
GAS LISTING /tmp/cc02TjZy.s 			page 10


 342 0090 1F4F      		sbci r17,-1
  98:encoder.c     **** 			enc.prev_angle = enc.raw_angle;
 343               		.stabn	68,0,98,.LM35-.LFBB4
 344               	.LM35:
 345 0092 EC01      		movw r28,r24
 346               	.L6:
 103:encoder.c     **** 		if(!TWI_Transceiver_Busy()){
 347               		.stabn	68,0,103,.LM36-.LFBB4
 348               	.LM36:
 349 0094 0E94 0000 		call TWI_Transceiver_Busy
 350 0098 8111      		cpse r24,__zero_reg__
 351 009a 00C0      		rjmp .L5
 105:encoder.c     **** 			if(TWI_statusReg.lastTransOK){
 352               		.stabn	68,0,105,.LM37-.LFBB4
 353               	.LM37:
 354 009c 8091 0000 		lds r24,TWI_statusReg
 355 00a0 80FF      		sbrs r24,0
 356 00a2 00C0      		rjmp .L8
 108:encoder.c     **** 				if(!TWI_Transceiver_Busy()){
 357               		.stabn	68,0,108,.LM38-.LFBB4
 358               	.LM38:
 359 00a4 0E94 0000 		call TWI_Transceiver_Busy
 360 00a8 8111      		cpse r24,__zero_reg__
 361 00aa 00C0      		rjmp .L5
 362               	.LBB2:
 109:encoder.c     **** 					int32_t speed = enc.dTicks/enc.dt;///enc.dt*10000;
 363               		.stabn	68,0,109,.LM39-.LFBB4
 364               	.LM39:
 365 00ac C701      		movw r24,r14
 366 00ae B801      		movw r22,r16
 367 00b0 0E94 0000 		call __divmodhi4
 368 00b4 9B01      		movw r18,r22
 369 00b6 CB01      		movw r24,r22
 370 00b8 AA27      		clr r26
 371 00ba 97FD      		sbrc r25,7
 372 00bc A095      		com r26
 373 00be BA2F      		mov r27,r26
 111:encoder.c     **** 					messageBuf[0] = (speed  >> 24) & 0xFF;
 374               		.stabn	68,0,111,.LM40-.LFBB4
 375               	.LM40:
 376 00c0 B093 0000 		sts messageBuf,r27
 112:encoder.c     **** 					messageBuf[1] = (speed  >> 16) & 0xFF;
 377               		.stabn	68,0,112,.LM41-.LFBB4
 378               	.LM41:
 379 00c4 AD01      		movw r20,r26
 380 00c6 7727      		clr r23
 381 00c8 57FD      		sbrc r21,7
 382 00ca 7095      		com r23
 383 00cc 672F      		mov r22,r23
 384 00ce 4093 0000 		sts messageBuf+1,r20
 113:encoder.c     **** 					messageBuf[2] = (speed  >> 8) & 0xFF;
 385               		.stabn	68,0,113,.LM42-.LFBB4
 386               	.LM42:
 387 00d2 9093 0000 		sts messageBuf+2,r25
 114:encoder.c     **** 					messageBuf[3] =  speed  & 0xFF;
 388               		.stabn	68,0,114,.LM43-.LFBB4
 389               	.LM43:
GAS LISTING /tmp/cc02TjZy.s 			page 11


 390 00d6 2093 0000 		sts messageBuf+3,r18
 115:encoder.c     **** 					messageBuf[4] =  0;
 391               		.stabn	68,0,115,.LM44-.LFBB4
 392               	.LM44:
 393 00da 1092 0000 		sts messageBuf+4,__zero_reg__
 117:encoder.c     **** 					TWI_Start_Transceiver_With_Data(messageBuf, TWI_BUFFER_SIZE);
 394               		.stabn	68,0,117,.LM45-.LFBB4
 395               	.LM45:
 396 00de 65E0      		ldi r22,lo8(5)
 397 00e0 80E0      		ldi r24,lo8(messageBuf)
 398 00e2 90E0      		ldi r25,hi8(messageBuf)
 399 00e4 0E94 0000 		call TWI_Start_Transceiver_With_Data
 123:encoder.c     **** 						retryCnt = 0;
 400               		.stabn	68,0,123,.LM46-.LFBB4
 401               	.LM46:
 402 00e8 1092 0000 		sts retryCnt,__zero_reg__
 122:encoder.c     **** 						enc.dt = 0;
 403               		.stabn	68,0,122,.LM47-.LFBB4
 404               	.LM47:
 405 00ec 00E0      		ldi r16,0
 406 00ee 10E0      		ldi r17,0
 121:encoder.c     **** 						enc.dTicks = 0;
 407               		.stabn	68,0,121,.LM48-.LFBB4
 408               	.LM48:
 409 00f0 E12C      		mov r14,__zero_reg__
 410 00f2 F12C      		mov r15,__zero_reg__
 411 00f4 00C0      		rjmp .L5
 412               	.L8:
 413               	.LBE2:
 127:encoder.c     **** 				TWI_Act_On_Failure_In_Last_Transmission(TWI_Get_State_Info());
 414               		.stabn	68,0,127,.LM49-.LFBB4
 415               	.LM49:
 416 00f6 0E94 0000 		call TWI_Get_State_Info
 417 00fa 0E94 0000 		call TWI_Act_On_Failure_In_Last_Transmission
 418 00fe 00C0      		rjmp .L5
 419               		.size	main, .-main
 420               		.stabs	"speed:r(5,5)",64,0,109,24
 421               		.stabn	192,0,0,.LBB2-.LFBB4
 422               		.stabn	224,0,0,.LBE2-.LFBB4
 423               	.Lscope4:
 424               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 425               		.stabd	78,0,0
 426               		.comm	messageBuf,5,1
 427               	.global	retryCnt
 428               		.section .bss
 429               		.type	retryCnt, @object
 430               		.size	retryCnt, 1
 431               	retryCnt:
 432 0000 00        		.zero	1
 433               	.global	update
 434               		.type	update, @object
 435               		.size	update, 1
 436               	update:
 437 0001 00        		.zero	1
 438               		.comm	position,2,1
 439               		.comm	errorFlag,1,1
 440               		.stabs	"errorFlag:G(5,2)",32,0,31,0
GAS LISTING /tmp/cc02TjZy.s 			page 12


 441               		.stabs	"position:G(5,4)",32,0,33,0
 442               		.stabs	"update:G(0,53)=B(0,54)=@s8;-16;",32,0,33,0
 443               		.stabs	"retryCnt:G(5,2)",32,0,35,0
 444               		.stabs	"messageBuf:G(0,55)=ar(0,56)=r(0,56);0;0177777;;0;4;(0,11)",32,0,37,0
 445               		.text
 446               		.stabs	"",100,0,0,.Letext0
 447               	.Letext0:
 448               		.ident	"GCC: (GNU) 4.8.2"
 449               	.global __do_clear_bss
GAS LISTING /tmp/cc02TjZy.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 encoder.c
     /tmp/cc02TjZy.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc02TjZy.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc02TjZy.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc02TjZy.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc02TjZy.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc02TjZy.s:118    .text:0000000000000000 __vector_14
     /tmp/cc02TjZy.s:436    .bss:0000000000000001 update
     /tmp/cc02TjZy.s:153    .text:000000000000001e togglePin
     /tmp/cc02TjZy.s:177    .text:0000000000000028 TWI_Act_On_Failure_In_Last_Transmission
     /tmp/cc02TjZy.s:431    .bss:0000000000000000 retryCnt
                            *COM*:0000000000000005 messageBuf
     /tmp/cc02TjZy.s:219    .text.startup:0000000000000000 main
                            *COM*:0000000000000002 position
                            *COM*:0000000000000001 errorFlag

UNDEFINED SYMBOLS
TWI_Start_Transceiver
TWI_Slave_Initialise
AS5048A_Init
TWI_Start_Transceiver_With_Data
AS5048A_getRawRotation
TWI_Transceiver_Busy
TWI_statusReg
__divmodhi4
TWI_Get_State_Info
__do_clear_bss
