GAS LISTING /tmp/cchqVnd5.s 			page 1


   1               		.file	"encoder.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/emil/Roberto/roberto_sim/src/uC_software/encoder/",100,0,2,.Ltext0
   8               		.stabs	"encoder.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  18               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  19               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  20               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  21               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  24               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"short _Fract:t(0,15)=r(0,1);1;0;",128,0,0,0
  27               		.stabs	"_Fract:t(0,16)=r(0,1);2;0;",128,0,0,0
  28               		.stabs	"long _Fract:t(0,17)=r(0,1);4;0;",128,0,0,0
  29               		.stabs	"long long _Fract:t(0,18)=r(0,1);8;0;",128,0,0,0
  30               		.stabs	"unsigned short _Fract:t(0,19)=r(0,1);1;0;",128,0,0,0
  31               		.stabs	"unsigned _Fract:t(0,20)=r(0,1);2;0;",128,0,0,0
  32               		.stabs	"unsigned long _Fract:t(0,21)=r(0,1);4;0;",128,0,0,0
  33               		.stabs	"unsigned long long _Fract:t(0,22)=r(0,1);8;0;",128,0,0,0
  34               		.stabs	"_Sat short _Fract:t(0,23)=r(0,1);1;0;",128,0,0,0
  35               		.stabs	"_Sat _Fract:t(0,24)=r(0,1);2;0;",128,0,0,0
  36               		.stabs	"_Sat long _Fract:t(0,25)=r(0,1);4;0;",128,0,0,0
  37               		.stabs	"_Sat long long _Fract:t(0,26)=r(0,1);8;0;",128,0,0,0
  38               		.stabs	"_Sat unsigned short _Fract:t(0,27)=r(0,1);1;0;",128,0,0,0
  39               		.stabs	"_Sat unsigned _Fract:t(0,28)=r(0,1);2;0;",128,0,0,0
  40               		.stabs	"_Sat unsigned long _Fract:t(0,29)=r(0,1);4;0;",128,0,0,0
  41               		.stabs	"_Sat unsigned long long _Fract:t(0,30)=r(0,1);8;0;",128,0,0,0
  42               		.stabs	"short _Accum:t(0,31)=r(0,1);2;0;",128,0,0,0
  43               		.stabs	"_Accum:t(0,32)=r(0,1);4;0;",128,0,0,0
  44               		.stabs	"long _Accum:t(0,33)=r(0,1);8;0;",128,0,0,0
  45               		.stabs	"long long _Accum:t(0,34)=r(0,1);8;0;",128,0,0,0
  46               		.stabs	"unsigned short _Accum:t(0,35)=r(0,1);2;0;",128,0,0,0
  47               		.stabs	"unsigned _Accum:t(0,36)=r(0,1);4;0;",128,0,0,0
  48               		.stabs	"unsigned long _Accum:t(0,37)=r(0,1);8;0;",128,0,0,0
  49               		.stabs	"unsigned long long _Accum:t(0,38)=r(0,1);8;0;",128,0,0,0
  50               		.stabs	"_Sat short _Accum:t(0,39)=r(0,1);2;0;",128,0,0,0
  51               		.stabs	"_Sat _Accum:t(0,40)=r(0,1);4;0;",128,0,0,0
  52               		.stabs	"_Sat long _Accum:t(0,41)=r(0,1);8;0;",128,0,0,0
  53               		.stabs	"_Sat long long _Accum:t(0,42)=r(0,1);8;0;",128,0,0,0
  54               		.stabs	"_Sat unsigned short _Accum:t(0,43)=r(0,1);2;0;",128,0,0,0
  55               		.stabs	"_Sat unsigned _Accum:t(0,44)=r(0,1);4;0;",128,0,0,0
  56               		.stabs	"_Sat unsigned long _Accum:t(0,45)=r(0,1);8;0;",128,0,0,0
  57               		.stabs	"_Sat unsigned long long _Accum:t(0,46)=r(0,1);8;0;",128,0,0,0
GAS LISTING /tmp/cchqVnd5.s 			page 2


  58               		.stabs	"void:t(0,47)=(0,47)",128,0,0,0
  59               		.stabs	"/usr/lib/avr/include/avr/io.h",130,0,0,0
  60               		.stabs	"/usr/lib/avr/include/avr/sfr_defs.h",130,0,0,0
  61               		.stabs	"/usr/lib/avr/include/inttypes.h",130,0,0,0
  62               		.stabs	"/usr/lib/gcc/avr/4.8.2/include/stdint.h",130,0,0,0
  63               		.stabs	"/usr/lib/avr/include/stdint.h",130,0,0,0
  64               		.stabs	"int8_t:t(5,1)=(0,10)",128,0,121,0
  65               		.stabs	"uint8_t:t(5,2)=(0,11)",128,0,122,0
  66               		.stabs	"int16_t:t(5,3)=(0,1)",128,0,123,0
  67               		.stabs	"uint16_t:t(5,4)=(0,4)",128,0,124,0
  68               		.stabs	"int32_t:t(5,5)=(0,3)",128,0,125,0
  69               		.stabs	"uint32_t:t(5,6)=(0,5)",128,0,126,0
  70               		.stabs	"int64_t:t(5,7)=(0,6)",128,0,128,0
  71               		.stabs	"uint64_t:t(5,8)=(0,7)",128,0,129,0
  72               		.stabs	"intptr_t:t(5,9)=(5,3)",128,0,142,0
  73               		.stabs	"uintptr_t:t(5,10)=(5,4)",128,0,147,0
  74               		.stabs	"int_least8_t:t(5,11)=(5,1)",128,0,159,0
  75               		.stabs	"uint_least8_t:t(5,12)=(5,2)",128,0,164,0
  76               		.stabs	"int_least16_t:t(5,13)=(5,3)",128,0,169,0
  77               		.stabs	"uint_least16_t:t(5,14)=(5,4)",128,0,174,0
  78               		.stabs	"int_least32_t:t(5,15)=(5,5)",128,0,179,0
  79               		.stabs	"uint_least32_t:t(5,16)=(5,6)",128,0,184,0
  80               		.stabs	"int_least64_t:t(5,17)=(5,7)",128,0,192,0
  81               		.stabs	"uint_least64_t:t(5,18)=(5,8)",128,0,199,0
  82               		.stabs	"int_fast8_t:t(5,19)=(5,1)",128,0,213,0
  83               		.stabs	"uint_fast8_t:t(5,20)=(5,2)",128,0,218,0
  84               		.stabs	"int_fast16_t:t(5,21)=(5,3)",128,0,223,0
  85               		.stabs	"uint_fast16_t:t(5,22)=(5,4)",128,0,228,0
  86               		.stabs	"int_fast32_t:t(5,23)=(5,5)",128,0,233,0
  87               		.stabs	"uint_fast32_t:t(5,24)=(5,6)",128,0,238,0
  88               		.stabs	"int_fast64_t:t(5,25)=(5,7)",128,0,246,0
  89               		.stabs	"uint_fast64_t:t(5,26)=(5,8)",128,0,253,0
  90               		.stabs	"intmax_t:t(5,27)=(5,7)",128,0,273,0
  91               		.stabs	"uintmax_t:t(5,28)=(5,8)",128,0,278,0
  92               		.stabn	162,0,0,0
  93               		.stabn	162,0,0,0
  94               		.stabs	"int_farptr_t:t(3,1)=(5,5)",128,0,77,0
  95               		.stabs	"uint_farptr_t:t(3,2)=(5,6)",128,0,81,0
  96               		.stabn	162,0,0,0
  97               		.stabn	162,0,0,0
  98               		.stabs	"/usr/lib/avr/include/avr/fuse.h",130,0,0,0
  99               		.stabs	"__fuse_t:t(6,1)=(6,2)=s3low:(0,11),0,8;high:(0,11),8,8;extended:(0,11),16,8;;",128,0,244,0
 100               		.stabn	162,0,0,0
 101               		.stabn	162,0,0,0
 102               		.stabs	"/usr/lib/avr/include/stdlib.h",130,0,0,0
 103               		.stabs	"/usr/lib/gcc/avr/4.8.2/include/stddef.h",130,0,0,0
 104               		.stabs	"size_t:t(8,1)=(0,4)",128,0,212,0
 105               		.stabs	"wchar_t:t(8,2)=(0,1)",128,0,324,0
 106               		.stabn	162,0,0,0
 107               		.stabs	"div_t:t(7,1)=(7,2)=s4quot:(0,1),0,16;rem:(0,1),16,16;;",128,0,71,0
 108               		.stabs	"ldiv_t:t(7,3)=(7,4)=s8quot:(0,3),0,32;rem:(0,3),32,32;;",128,0,77,0
 109               		.stabs	"__compar_fn_t:t(7,5)=(7,6)=*(7,7)=f(0,1)",128,0,80,0
 110               		.stabn	162,0,0,0
 111               		.stabs	"TWI_slave.h",130,0,0,0
 112               		.stabs	"TWI_statusReg:T(9,1)=u1all:(0,11),0,8;:(9,2)=s1lastTransOK:(0,11),0,1;RxDataInBuf:(0,11),1
 113               		.stabn	162,0,0,0
 114               		.stabs	"AS5048:t(0,48)=(0,49)=s10raw_angle:(5,4),0,16;prev_angle:(5,4),16,16;dTicks:(5,3),32,16;dt
GAS LISTING /tmp/cchqVnd5.s 			page 3


 115               		.stabs	"__vector_14:F(0,47)",36,0,40,__vector_14
 116               	.global	__vector_14
 117               		.type	__vector_14, @function
 118               	__vector_14:
 119               		.stabd	46,0,0
   1:encoder.c     **** #define F_CPU 16000000UL
   2:encoder.c     **** 
   3:encoder.c     **** #include <avr/io.h>
   4:encoder.c     **** #include <avr/interrupt.h>
   5:encoder.c     **** #include <util/delay.h>
   6:encoder.c     **** #include <stdbool.h>
   7:encoder.c     **** #include <stdlib.h>
   8:encoder.c     **** #include "TWI_slave.h"
   9:encoder.c     **** #include "AS5048A.h"
  10:encoder.c     **** 
  11:encoder.c     **** #define DIR_FORWARD 0
  12:encoder.c     **** #define DIR_REVERSE 1
  13:encoder.c     **** 
  14:encoder.c     **** #define COMP_POS 0x00
  15:encoder.c     **** #define COMP_NEG 0x01
  16:encoder.c     **** #define COMP_NONE 0x02
  17:encoder.c     **** 
  18:encoder.c     **** #define TICKS_PR_ROT 16384
  19:encoder.c     **** #define TIMERFREQ 1000
  20:encoder.c     **** #define TICKS_TO_RADIANS TIMERFREQ*2*3.14159265359/TICKS_PR_ROT 
  21:encoder.c     **** 
  22:encoder.c     **** typedef struct{
  23:encoder.c     **** 	uint16_t raw_angle;
  24:encoder.c     **** 	uint16_t prev_angle;
  25:encoder.c     **** 	int16_t  dTicks;
  26:encoder.c     **** 	int16_t  dt; //ms
  27:encoder.c     **** 	uint16_t rotations;
  28:encoder.c     **** } AS5048;
  29:encoder.c     **** 
  30:encoder.c     **** 
  31:encoder.c     **** 
  32:encoder.c     **** unsigned char TWI_Act_On_Failure_In_Last_Transmission(unsigned char TWIerrorMsg);
  33:encoder.c     **** void compute(AS5048* enc);
  34:encoder.c     **** 
  35:encoder.c     **** volatile bool update = false;
  36:encoder.c     **** 
  37:encoder.c     **** 
  38:encoder.c     **** 
  39:encoder.c     **** 
  40:encoder.c     **** ISR(TIMER0_COMPA_vect) {
 120               		.stabn	68,0,40,.LM0-.LFBB1
 121               	.LM0:
 122               	.LFBB1:
 123 0000 1F92      		push r1
 124 0002 0F92      		push r0
 125 0004 0FB6      		in r0,__SREG__
 126 0006 0F92      		push r0
 127 0008 1124      		clr __zero_reg__
 128 000a 8F93      		push r24
 129               	/* prologue: Signal */
 130               	/* frame size = 0 */
 131               	/* stack size = 4 */
GAS LISTING /tmp/cchqVnd5.s 			page 4


 132               	.L__stack_usage = 4
  41:encoder.c     ****     update = true;
 133               		.stabn	68,0,41,.LM1-.LFBB1
 134               	.LM1:
 135 000c 81E0      		ldi r24,lo8(1)
 136 000e 8093 0000 		sts update,r24
 137               	/* epilogue start */
  42:encoder.c     **** }
 138               		.stabn	68,0,42,.LM2-.LFBB1
 139               	.LM2:
 140 0012 8F91      		pop r24
 141 0014 0F90      		pop r0
 142 0016 0FBE      		out __SREG__,r0
 143 0018 0F90      		pop r0
 144 001a 1F90      		pop r1
 145 001c 1895      		reti
 146               		.size	__vector_14, .-__vector_14
 147               	.Lscope1:
 148               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 149               		.stabd	78,0,0
 150               		.section	.text.startup,"ax",@progbits
 151               		.stabs	"main:F(0,1)",36,0,44,main
 152               		.stabs	"argc:P(0,1)",64,0,44,24
 153               		.stabs	"argv:P(0,50)=*(0,51)=*(0,52)=k(0,2)",64,0,44,22
 154               	.global	main
 155               		.type	main, @function
 156               	main:
 157               		.stabd	46,0,0
  43:encoder.c     **** 
  44:encoder.c     **** int main(int argc, const char* argv[]){
 158               		.stabn	68,0,44,.LM3-.LFBB2
 159               	.LM3:
 160               	.LFBB2:
 161 0000 CF93      		push r28
 162 0002 DF93      		push r29
 163 0004 00D0      		rcall .
 164 0006 00D0      		rcall .
 165 0008 CDB7      		in r28,__SP_L__
 166 000a DEB7      		in r29,__SP_H__
 167               	/* prologue: function */
 168               	/* frame size = 4 */
 169               	/* stack size = 6 */
 170               	.L__stack_usage = 6
  45:encoder.c     **** 	unsigned char messageBuf[TWI_BUFFER_SIZE];
  46:encoder.c     **** 
  47:encoder.c     **** 
  48:encoder.c     **** 	// Setup address pins as input
  49:encoder.c     **** 	DDRD &= ~((1 << 2) | (1 << 3));		// PD2 & PD3
 171               		.stabn	68,0,49,.LM4-.LFBB2
 172               	.LM4:
 173 000c 8AB1      		in r24,0xa
 174 000e 837F      		andi r24,lo8(-13)
 175 0010 8AB9      		out 0xa,r24
  50:encoder.c     **** 
  51:encoder.c     ****   	unsigned char TWI_slaveAddress = (0x10 | (PIND & 0x04) | (PIND & 0x08));
 176               		.stabn	68,0,51,.LM5-.LFBB2
 177               	.LM5:
GAS LISTING /tmp/cchqVnd5.s 			page 5


 178 0012 89B1      		in r24,0x9
 179 0014 99B1      		in r25,0x9
 180 0016 8470      		andi r24,lo8(4)
 181 0018 9870      		andi r25,lo8(8)
 182 001a 892B      		or r24,r25
 183 001c 8061      		ori r24,lo8(16)
  52:encoder.c     **** 
  53:encoder.c     **** 
  54:encoder.c     **** 	// Initialise TWI module for slave operation. Include address and/or enable General Call.
  55:encoder.c     **** 	TWI_Slave_Initialise((unsigned char)((TWI_slaveAddress<<TWI_ADR_BITS) | (FALSE<<TWI_GEN_BIT))); 
 184               		.stabn	68,0,55,.LM6-.LFBB2
 185               	.LM6:
 186 001e 880F      		lsl r24
 187 0020 0E94 0000 		call TWI_Slave_Initialise
  56:encoder.c     **** 
  57:encoder.c     **** 	AS5048A_Init();
 188               		.stabn	68,0,57,.LM7-.LFBB2
 189               	.LM7:
 190 0024 0E94 0000 		call AS5048A_Init
  58:encoder.c     **** 
  59:encoder.c     **** 	AS5048 enc;
  60:encoder.c     **** 	enc.raw_angle = 0;
  61:encoder.c     **** 	enc.prev_angle = 0;
  62:encoder.c     **** 	enc.rotations = 0;
  63:encoder.c     **** 	enc.dt = 0;
  64:encoder.c     **** 	enc.dTicks = 0;
  65:encoder.c     **** 	
  66:encoder.c     ****     // start timer0 at 1 kHz
  67:encoder.c     ****     //16MHz/(64*(OCR0A+1))
  68:encoder.c     **** 	TCCR0A |= (1 << WGM01);
 191               		.stabn	68,0,68,.LM8-.LFBB2
 192               	.LM8:
 193 0028 84B5      		in r24,0x24
 194 002a 8260      		ori r24,lo8(2)
 195 002c 84BD      		out 0x24,r24
  69:encoder.c     ****     OCR0A = 249;		
 196               		.stabn	68,0,69,.LM9-.LFBB2
 197               	.LM9:
 198 002e 89EF      		ldi r24,lo8(-7)
 199 0030 87BD      		out 0x27,r24
  70:encoder.c     ****     TIMSK0=(1<<OCIE0A);
 200               		.stabn	68,0,70,.LM10-.LFBB2
 201               	.LM10:
 202 0032 82E0      		ldi r24,lo8(2)
 203 0034 8093 6E00 		sts 110,r24
  71:encoder.c     ****     TCCR0B |= (1<<CS01) | (1<<CS00);
 204               		.stabn	68,0,71,.LM11-.LFBB2
 205               	.LM11:
 206 0038 85B5      		in r24,0x25
 207 003a 8360      		ori r24,lo8(3)
 208 003c 85BD      		out 0x25,r24
  72:encoder.c     **** 	               
  73:encoder.c     **** 	sei();
 209               		.stabn	68,0,73,.LM12-.LFBB2
 210               	.LM12:
 211               	/* #APP */
 212               	 ;  73 "encoder.c" 1
GAS LISTING /tmp/cchqVnd5.s 			page 6


 213 003e 7894      		sei
 214               	 ;  0 "" 2
  74:encoder.c     **** 	
  75:encoder.c     **** 	// Start the TWI transceiver to enable reseption of the first command from the TWI Master.
  76:encoder.c     **** 	messageBuf[0] = 0x00;
 215               		.stabn	68,0,76,.LM13-.LFBB2
 216               	.LM13:
 217               	/* #NOAPP */
 218 0040 1982      		std Y+1,__zero_reg__
  77:encoder.c     **** 	messageBuf[1] = 0x00;
 219               		.stabn	68,0,77,.LM14-.LFBB2
 220               	.LM14:
 221 0042 1A82      		std Y+2,__zero_reg__
  78:encoder.c     **** 	//  messageBuf[2] = 0x00;
  79:encoder.c     **** 	//	messageBuf[3] = 0x00;
  80:encoder.c     **** 	//	messageBuf[4] = 0x00;
  81:encoder.c     **** 	TWI_Start_Transceiver_With_Data(messageBuf, TWI_BUFFER_SIZE);
 222               		.stabn	68,0,81,.LM15-.LFBB2
 223               	.LM15:
 224 0044 64E0      		ldi r22,lo8(4)
 225 0046 CE01      		movw r24,r28
 226 0048 0196      		adiw r24,1
 227 004a 0E94 0000 		call TWI_Start_Transceiver_With_Data
  63:encoder.c     **** 	enc.dt = 0;
 228               		.stabn	68,0,63,.LM16-.LFBB2
 229               	.LM16:
 230 004e E12C      		mov r14,__zero_reg__
 231 0050 F12C      		mov r15,__zero_reg__
  64:encoder.c     **** 	enc.dTicks = 0;
 232               		.stabn	68,0,64,.LM17-.LFBB2
 233               	.LM17:
 234 0052 C12C      		mov r12,__zero_reg__
 235 0054 D12C      		mov r13,__zero_reg__
  61:encoder.c     **** 	enc.prev_angle = 0;
 236               		.stabn	68,0,61,.LM18-.LFBB2
 237               	.LM18:
 238 0056 00E0      		ldi r16,0
 239 0058 10E0      		ldi r17,0
 240               	.L3:
  82:encoder.c     **** 
  83:encoder.c     **** 	while(1){
  84:encoder.c     **** 		if(update){
 241               		.stabn	68,0,84,.LM19-.LFBB2
 242               	.LM19:
 243 005a 8091 0000 		lds r24,update
 244 005e 8823      		tst r24
 245 0060 01F0      		breq .L4
  85:encoder.c     **** 			update = false;
 246               		.stabn	68,0,85,.LM20-.LFBB2
 247               	.LM20:
 248 0062 1092 0000 		sts update,__zero_reg__
  86:encoder.c     **** 			enc.raw_angle = AS5048A_getRawRotation();
 249               		.stabn	68,0,86,.LM21-.LFBB2
 250               	.LM21:
 251 0066 0E94 0000 		call AS5048A_getRawRotation
  87:encoder.c     **** 			
  88:encoder.c     **** 			// Shift to 16 bit to match overflow from 14 bit encoder
GAS LISTING /tmp/cchqVnd5.s 			page 7


  89:encoder.c     **** 			// Calculate speed and return to 14 bits again
  90:encoder.c     **** 			enc.dTicks += ((int16_t)((enc.raw_angle<<2) - (enc.prev_angle<<2)))>>2; //dTicks
 252               		.stabn	68,0,90,.LM22-.LFBB2
 253               	.LM22:
 254 006a 9C01      		movw r18,r24
 255 006c 201B      		sub r18,r16
 256 006e 310B      		sbc r19,r17
 257 0070 220F      		lsl r18
 258 0072 331F      		rol r19
 259 0074 220F      		lsl r18
 260 0076 331F      		rol r19
 261 0078 3595      		asr r19
 262 007a 2795      		ror r18
 263 007c 3595      		asr r19
 264 007e 2795      		ror r18
 265 0080 C20E      		add r12,r18
 266 0082 D31E      		adc r13,r19
  91:encoder.c     **** 			// Update lagged position
  92:encoder.c     **** 			enc.prev_angle = enc.raw_angle;
  93:encoder.c     **** 			enc.dt += 1;
 267               		.stabn	68,0,93,.LM23-.LFBB2
 268               	.LM23:
 269 0084 2FEF      		ldi r18,-1
 270 0086 E21A      		sub r14,r18
 271 0088 F20A      		sbc r15,r18
  92:encoder.c     **** 			enc.prev_angle = enc.raw_angle;
 272               		.stabn	68,0,92,.LM24-.LFBB2
 273               	.LM24:
 274 008a 8C01      		movw r16,r24
 275               	.L4:
  94:encoder.c     **** 		}
  95:encoder.c     **** 
  96:encoder.c     **** 		// Check if the TWI Transceiver has completed an operation.
  97:encoder.c     **** 		if(!TWI_Transceiver_Busy()){
 276               		.stabn	68,0,97,.LM25-.LFBB2
 277               	.LM25:
 278 008c 0E94 0000 		call TWI_Transceiver_Busy
 279 0090 8111      		cpse r24,__zero_reg__
 280 0092 00C0      		rjmp .L3
  98:encoder.c     **** 			// Check if the last operation was successful
  99:encoder.c     **** 			if(TWI_statusReg.lastTransOK){
 281               		.stabn	68,0,99,.LM26-.LFBB2
 282               	.LM26:
 283 0094 8091 0000 		lds r24,TWI_statusReg
 284 0098 80FF      		sbrs r24,0
 285 009a 00C0      		rjmp .L6
 100:encoder.c     **** 				// Check if the TWI Transceiver has already been started.
 101:encoder.c     **** 				// If not then restart it to prepare it for new receptions.             
 102:encoder.c     **** 				if(!TWI_Transceiver_Busy()){
 286               		.stabn	68,0,102,.LM27-.LFBB2
 287               	.LM27:
 288 009c 0E94 0000 		call TWI_Transceiver_Busy
 289 00a0 8111      		cpse r24,__zero_reg__
 290 00a2 00C0      		rjmp .L3
 291               	.LBB5:
 103:encoder.c     **** 					int32_t speed = enc.dTicks/enc.dt;///enc.dt*1000;
 292               		.stabn	68,0,103,.LM28-.LFBB2
GAS LISTING /tmp/cchqVnd5.s 			page 8


 293               	.LM28:
 294 00a4 C601      		movw r24,r12
 295 00a6 B701      		movw r22,r14
 296 00a8 0E94 0000 		call __divmodhi4
 297 00ac 9B01      		movw r18,r22
 298 00ae CB01      		movw r24,r22
 299 00b0 AA27      		clr r26
 300 00b2 97FD      		sbrc r25,7
 301 00b4 A095      		com r26
 302 00b6 BA2F      		mov r27,r26
 104:encoder.c     **** 
 105:encoder.c     **** 					messageBuf[0] = (speed  >> 24) & 0xFF;
 303               		.stabn	68,0,105,.LM29-.LFBB2
 304               	.LM29:
 305 00b8 B983      		std Y+1,r27
 106:encoder.c     **** 					messageBuf[1] = (speed  >> 16) & 0xFF;
 306               		.stabn	68,0,106,.LM30-.LFBB2
 307               	.LM30:
 308 00ba AD01      		movw r20,r26
 309 00bc 7727      		clr r23
 310 00be 57FD      		sbrc r21,7
 311 00c0 7095      		com r23
 312 00c2 672F      		mov r22,r23
 313 00c4 4A83      		std Y+2,r20
 107:encoder.c     **** 					messageBuf[2] = (speed  >> 8) & 0xFF;
 314               		.stabn	68,0,107,.LM31-.LFBB2
 315               	.LM31:
 316 00c6 9B83      		std Y+3,r25
 108:encoder.c     **** 					messageBuf[3] = speed  & 0xFF;
 317               		.stabn	68,0,108,.LM32-.LFBB2
 318               	.LM32:
 319 00c8 2C83      		std Y+4,r18
 109:encoder.c     **** 					TWI_Start_Transceiver_With_Data(messageBuf, TWI_BUFFER_SIZE);
 320               		.stabn	68,0,109,.LM33-.LFBB2
 321               	.LM33:
 322 00ca 64E0      		ldi r22,lo8(4)
 323 00cc CE01      		movw r24,r28
 324 00ce 0196      		adiw r24,1
 325 00d0 0E94 0000 		call TWI_Start_Transceiver_With_Data
 110:encoder.c     **** 
 111:encoder.c     **** 					// Reset counters
 112:encoder.c     **** 					enc.dTicks = 0;
 113:encoder.c     **** 					enc.dt = 0;
 326               		.stabn	68,0,113,.LM34-.LFBB2
 327               	.LM34:
 328 00d4 E12C      		mov r14,__zero_reg__
 329 00d6 F12C      		mov r15,__zero_reg__
 112:encoder.c     **** 					enc.dTicks = 0;
 330               		.stabn	68,0,112,.LM35-.LFBB2
 331               	.LM35:
 332 00d8 C12C      		mov r12,__zero_reg__
 333 00da D12C      		mov r13,__zero_reg__
 334 00dc 00C0      		rjmp .L3
 335               	.L6:
 336               	.LBE5:
 114:encoder.c     **** 				}
 115:encoder.c     **** 			}else{ // Ends up here if the last operation completed unsuccessfully
GAS LISTING /tmp/cchqVnd5.s 			page 9


 116:encoder.c     **** 				TWI_Act_On_Failure_In_Last_Transmission(TWI_Get_State_Info());
 337               		.stabn	68,0,116,.LM36-.LFBB2
 338               	.LM36:
 339 00de 0E94 0000 		call TWI_Get_State_Info
 340               	.LBB6:
 341               	.LBB7:
 117:encoder.c     **** 			}
 118:encoder.c     **** 		}
 119:encoder.c     **** 	}
 120:encoder.c     **** 	return 0;
 121:encoder.c     **** }
 122:encoder.c     **** 
 123:encoder.c     **** unsigned char TWI_Act_On_Failure_In_Last_Transmission(unsigned char TWIerrorMsg){
 124:encoder.c     **** 	// A failure has occurred, use TWIerrorMsg to determine the nature of the failure
 125:encoder.c     **** 	// and take appropriate actions.
 126:encoder.c     **** 	// Se header file for a list of possible failures messages.
 127:encoder.c     **** 
 128:encoder.c     **** 	// This very simple example puts the error code on PORTB and restarts the transceiver with
 129:encoder.c     **** 	// all the same data in the transmission buffers.
 130:encoder.c     ****   	//PORTB = TWIerrorMsg;
 131:encoder.c     ****   	TWI_Start_Transceiver();
 342               		.stabn	68,0,131,.LM37-.LFBB2
 343               	.LM37:
 344 00e2 0E94 0000 		call TWI_Start_Transceiver
 345 00e6 00C0      		rjmp .L3
 346               	.LBE7:
 347               	.LBE6:
 348               		.size	main, .-main
 349               		.stabs	"messageBuf:(0,53)=ar(0,54)=r(0,54);0;0177777;;0;3;(0,11)",128,0,45,1
 350               		.stabn	192,0,0,.LFBB2-.LFBB2
 351               		.stabs	"speed:r(5,5)",64,0,103,24
 352               		.stabn	192,0,0,.LBB5-.LFBB2
 353               		.stabn	224,0,0,.LBE5-.LFBB2
 354               		.stabn	224,0,0,.Lscope2-.LFBB2
 355               	.Lscope2:
 356               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 357               		.stabd	78,0,0
 358               		.text
 359               		.stabs	"TWI_Act_On_Failure_In_Last_Transmission:F(0,11)",36,0,123,TWI_Act_On_Failure_In_Last_Trans
 360               		.stabs	"TWIerrorMsg:P(0,11)",64,0,123,24
 361               	.global	TWI_Act_On_Failure_In_Last_Transmission
 362               		.type	TWI_Act_On_Failure_In_Last_Transmission, @function
 363               	TWI_Act_On_Failure_In_Last_Transmission:
 364               		.stabd	46,0,0
 123:encoder.c     **** unsigned char TWI_Act_On_Failure_In_Last_Transmission(unsigned char TWIerrorMsg){
 365               		.stabn	68,0,123,.LM38-.LFBB3
 366               	.LM38:
 367               	.LFBB3:
 368 001e CF93      		push r28
 369 0020 DF93      		push r29
 370 0022 1F92      		push __zero_reg__
 371 0024 CDB7      		in r28,__SP_L__
 372 0026 DEB7      		in r29,__SP_H__
 373               	/* prologue: function */
 374               	/* frame size = 1 */
 375               	/* stack size = 3 */
 376               	.L__stack_usage = 3
GAS LISTING /tmp/cchqVnd5.s 			page 10


 377               		.stabn	68,0,131,.LM39-.LFBB3
 378               	.LM39:
 379 0028 8983      		std Y+1,r24
 380 002a 0E94 0000 		call TWI_Start_Transceiver
 132:encoder.c     ****                     
 133:encoder.c     ****   	return TWIerrorMsg; 
 134:encoder.c     **** }...
 381               		.stabn	68,0,134,.LM40-.LFBB3
 382               	.LM40:
 383 002e 8981      		ldd r24,Y+1
 384               	/* epilogue start */
 385 0030 0F90      		pop __tmp_reg__
 386 0032 DF91      		pop r29
 387 0034 CF91      		pop r28
 388 0036 0895      		ret
 389               		.size	TWI_Act_On_Failure_In_Last_Transmission, .-TWI_Act_On_Failure_In_Last_Transmission
 390               	.Lscope3:
 391               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 392               		.stabd	78,0,0
 393               	.global	update
 394               		.section .bss
 395               		.type	update, @object
 396               		.size	update, 1
 397               	update:
 398 0000 00        		.zero	1
 399               		.comm	position,2,1
 400               		.comm	errorFlag,1,1
 401               		.stabs	"errorFlag:G(5,2)",32,0,31,0
 402               		.stabs	"position:G(5,4)",32,0,33,0
 403               		.stabs	"update:G(0,55)=B(0,56)=@s8;-16;",32,0,35,0
 404               		.text
 405               		.stabs	"",100,0,0,.Letext0
 406               	.Letext0:
 407               		.ident	"GCC: (GNU) 4.8.2"
 408               	.global __do_clear_bss
GAS LISTING /tmp/cchqVnd5.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 encoder.c
     /tmp/cchqVnd5.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cchqVnd5.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cchqVnd5.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cchqVnd5.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cchqVnd5.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cchqVnd5.s:118    .text:0000000000000000 __vector_14
     /tmp/cchqVnd5.s:397    .bss:0000000000000000 update
     /tmp/cchqVnd5.s:156    .text.startup:0000000000000000 main
     /tmp/cchqVnd5.s:363    .text:000000000000001e TWI_Act_On_Failure_In_Last_Transmission
                            *COM*:0000000000000002 position
                            *COM*:0000000000000001 errorFlag

UNDEFINED SYMBOLS
TWI_Slave_Initialise
AS5048A_Init
TWI_Start_Transceiver_With_Data
AS5048A_getRawRotation
TWI_Transceiver_Busy
TWI_statusReg
__divmodhi4
TWI_Get_State_Info
TWI_Start_Transceiver
__do_clear_bss
