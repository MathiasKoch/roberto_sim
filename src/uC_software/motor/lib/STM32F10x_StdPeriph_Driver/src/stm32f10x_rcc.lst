   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f10x_rcc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	1
  20              		.global	RCC_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	RCC_DeInit:
  25              	.LFB29:
  26              		.file 1 "lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c"
   1:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
   2:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
   3:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @file    stm32f10x_rcc.c
   4:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @author  MCD Application Team
   5:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @version V3.5.0
   6:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @date    11-March-2011
   7:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief   This file provides all the RCC firmware functions.
   8:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
   9:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @attention
  10:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  11:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  18:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
  20:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  21:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  22:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Includes ------------------------------------------------------------------*/
  23:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #include "stm32f10x_rcc.h"
  24:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  25:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  27:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  28:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  29:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC 
  30:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief RCC driver modules
  31:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  32:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
  33:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  34:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_TypesDefinitions
  35:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  36:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  37:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  38:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
  39:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
  40:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  41:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  42:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Defines
  43:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  44:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  45:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  46:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  47:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  48:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  49:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CR Register ---*/
  50:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  51:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of HSION bit */
  52:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  53:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define HSION_BitNumber           0x00
  54:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  55:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  56:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of PLLON bit */
  57:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define PLLON_BitNumber           0x18
  58:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  59:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  60:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
  61:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL2ON bit */
  62:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define PLL2ON_BitNumber          0x1A
  63:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CR_PLL2ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL2ON_BitNumber * 4))
  64:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  65:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL3ON bit */
  66:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define PLL3ON_BitNumber          0x1C
  67:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CR_PLL3ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL3ON_BitNumber * 4))
  68:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  69:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  70:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of CSSON bit */
  71:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSSON_BitNumber           0x13
  72:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  73:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  74:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CFGR Register ---*/
  75:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  76:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of USBPRE bit */
  77:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x04)
  78:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  79:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
  80:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define USBPRE_BitNumber          0x16
  81:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_USBPRE_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (USBPRE_BitNumber * 4))
  82:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
  83:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define OTGFSPRE_BitNumber        0x16
  84:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_OTGFSPRE_BB          (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (OTGFSPRE_BitNumber * 4))
  85:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  86:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  87:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- BDCR Register ---*/
  88:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  89:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of RTCEN bit */
  90:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x20)
  91:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define RTCEN_BitNumber           0x0F
  92:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
  93:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  94:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of BDRST bit */
  95:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDRST_BitNumber           0x10
  96:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
  97:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  98:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CSR Register ---*/
  99:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 100:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of LSION bit */
 101:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x24)
 102:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define LSION_BitNumber           0x00
 103:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 104:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 105:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 106:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CFGR2 Register ---*/
 107:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 108:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S2SRC bit */
 109:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_OFFSET              (RCC_OFFSET + 0x2C)
 110:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define I2S2SRC_BitNumber         0x11
 111:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S2SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S2SRC_BitNumber * 4))
 112:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 113:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S3SRC bit */
 114:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define I2S3SRC_BitNumber         0x12
 115:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S3SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S3SRC_BitNumber * 4))
 116:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 117:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 118:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 119:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 120:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CR register bit mask */
 121:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Reset           ((uint32_t)0xFFFBFFFF)
 122:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Set             ((uint32_t)0x00040000)
 123:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEON_Reset            ((uint32_t)0xFFFEFFFF)
 124:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEON_Set              ((uint32_t)0x00010000)
 125:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSITRIM_Mask           ((uint32_t)0xFFFFFF07)
 126:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 127:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR register bit mask */
 128:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 129:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC2FFFF)
 130:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 131:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC0FFFF)
 132:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 133:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 134:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLMull_Mask         ((uint32_t)0x003C0000)
 135:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLSRC_Mask          ((uint32_t)0x00010000)
 136:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLXTPRE_Mask        ((uint32_t)0x00020000)
 137:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_SWS_Mask             ((uint32_t)0x0000000C)
 138:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_SW_Mask              ((uint32_t)0xFFFFFFFC)
 139:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Reset_Mask      ((uint32_t)0xFFFFFF0F)
 140:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Set_Mask        ((uint32_t)0x000000F0)
 141:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Reset_Mask     ((uint32_t)0xFFFFF8FF)
 142:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Set_Mask       ((uint32_t)0x00000700)
 143:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Reset_Mask     ((uint32_t)0xFFFFC7FF)
 144:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Set_Mask       ((uint32_t)0x00003800)
 145:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Reset_Mask    ((uint32_t)0xFFFF3FFF)
 146:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Set_Mask      ((uint32_t)0x0000C000)
 147:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 148:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CSR register bit mask */
 149:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_RMVF_Set              ((uint32_t)0x01000000)
 150:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 151:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 152:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR2 register bit mask */
 153:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1SRC         ((uint32_t)0x00010000)
 154:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1            ((uint32_t)0x0000000F)
 155:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 156:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 157:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV2            ((uint32_t)0x000000F0)
 158:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL2MUL            ((uint32_t)0x00000F00)
 159:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL3MUL            ((uint32_t)0x0000F000)
 160:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 161:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 162:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* RCC Flag Mask */
 163:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define FLAG_Mask                 ((uint8_t)0x1F)
 164:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 165:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 166:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x40021009)
 167:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 168:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 169:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)0x4002100A)
 170:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 171:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR register byte 4 (Bits[31:24]) base address */
 172:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_BYTE4_ADDRESS        ((uint32_t)0x40021007)
 173:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 174:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* BDCR register base address */
 175:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 176:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 177:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 178:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 179:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 180:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 181:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Macros
 182:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 183:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 184:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 185:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 186:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 187:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 188:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 189:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Variables
 190:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 191:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 192:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 193:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 194:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** static __I uint8_t ADCPrescTable[4] = {2, 4, 6, 8};
 195:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 196:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 197:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 198:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 199:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 200:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_FunctionPrototypes
 201:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 202:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 203:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 204:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 205:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 206:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 207:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 208:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Functions
 209:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 210:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 211:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 212:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 213:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 214:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 215:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 216:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 217:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_DeInit(void)
 218:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
  27              		.loc 1 218 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 219:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set HSION bit */
 220:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  32              		.loc 1 220 0
  33 0000 0D4B     		ldr	r3, .L2
  34 0002 1A68     		ldr	r2, [r3]
  35 0004 42F00102 		orr	r2, r2, #1
  36 0008 1A60     		str	r2, [r3]
 221:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 222:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 223:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 224:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  37              		.loc 1 224 0
  38 000a 5968     		ldr	r1, [r3, #4]
  39 000c 0B4A     		ldr	r2, .L2+4
  40 000e 0A40     		ands	r2, r2, r1
  41 0010 5A60     		str	r2, [r3, #4]
 225:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 226:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 227:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */   
 228:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 229:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 230:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  42              		.loc 1 230 0
  43 0012 1A68     		ldr	r2, [r3]
  44 0014 22F08472 		bic	r2, r2, #17301504
  45 0018 22F48032 		bic	r2, r2, #65536
  46 001c 1A60     		str	r2, [r3]
 231:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 232:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 233:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  47              		.loc 1 233 0
  48 001e 1A68     		ldr	r2, [r3]
  49 0020 22F48022 		bic	r2, r2, #262144
  50 0024 1A60     		str	r2, [r3]
 234:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 235:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 236:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
  51              		.loc 1 236 0
  52 0026 5A68     		ldr	r2, [r3, #4]
  53 0028 22F4FE02 		bic	r2, r2, #8323072
  54 002c 5A60     		str	r2, [r3, #4]
 237:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 238:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 239:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset PLL2ON and PLL3ON bits */
 240:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 241:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 242:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 243:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x00FF0000;
 244:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 245:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 246:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;
 247:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 248:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 249:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 250:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 251:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 252:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;      
 253:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 254:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 255:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
  55              		.loc 1 255 0
  56 002e 4FF41F02 		mov	r2, #10420224
  57 0032 9A60     		str	r2, [r3, #8]
  58 0034 7047     		bx	lr
  59              	.L3:
  60 0036 00BF     		.align	2
  61              	.L2:
  62 0038 00100240 		.word	1073876992
  63 003c 0000FFF8 		.word	-117506048
  64              		.cfi_endproc
  65              	.LFE29:
  67              		.align	1
  68              		.global	RCC_HSEConfig
  69              		.thumb
  70              		.thumb_func
  72              	RCC_HSEConfig:
  73              	.LFB30:
 256:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 257:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 258:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 259:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 260:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 261:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 262:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   HSE can not be stopped if it is used directly or through the PLL as system clock.
 263:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 264:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 265:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_OFF: HSE oscillator OFF
 266:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_ON: HSE oscillator ON
 267:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 268:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 269:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 270:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HSEConfig(uint32_t RCC_HSE)
 271:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
  74              		.loc 1 271 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.LVL0:
 272:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 273:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 274:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 275:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON bit */
 276:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEON_Reset;
  80              		.loc 1 276 0
  81 0040 0C4B     		ldr	r3, .L10
 277:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 278:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEBYP_Reset;
 279:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
 280:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch(RCC_HSE)
  82              		.loc 1 280 0
  83 0042 B0F5803F 		cmp	r0, #65536
 276:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
  84              		.loc 1 276 0
  85 0046 1A68     		ldr	r2, [r3]
  86 0048 22F48032 		bic	r2, r2, #65536
  87 004c 1A60     		str	r2, [r3]
 278:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
  88              		.loc 1 278 0
  89 004e 1A68     		ldr	r2, [r3]
  90 0050 22F48022 		bic	r2, r2, #262144
  91 0054 1A60     		str	r2, [r3]
  92              		.loc 1 280 0
  93 0056 03D0     		beq	.L6
  94 0058 B0F5802F 		cmp	r0, #262144
  95 005c 04D0     		beq	.L7
  96 005e 7047     		bx	lr
  97              	.L6:
 281:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 282:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_HSE_ON:
 283:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set HSEON bit */
 284:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEON_Set;
  98              		.loc 1 284 0
  99 0060 1A68     		ldr	r2, [r3]
 100 0062 42F48032 		orr	r2, r2, #65536
 101 0066 02E0     		b	.L8
 102              	.L7:
 285:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 286:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 287:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_HSE_Bypass:
 288:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set HSEBYP and HSEON bits */
 289:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
 103              		.loc 1 289 0
 104 0068 1A68     		ldr	r2, [r3]
 105 006a 42F4A022 		orr	r2, r2, #327680
 106              	.L8:
 107 006e 1A60     		str	r2, [r3]
 108 0070 7047     		bx	lr
 109              	.L11:
 110 0072 00BF     		.align	2
 111              	.L10:
 112 0074 00100240 		.word	1073876992
 113              		.cfi_endproc
 114              	.LFE30:
 116              		.align	1
 117              		.global	RCC_AdjustHSICalibrationValue
 118              		.thumb
 119              		.thumb_func
 121              	RCC_AdjustHSICalibrationValue:
 122              	.LFB32:
 290:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 291:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 292:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
 293:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 294:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 295:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 296:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 297:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 298:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Waits for HSE start-up.
 299:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 300:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval An ErrorStatus enumuration value:
 301:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * - SUCCESS: HSE oscillator is stable and ready to use
 302:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * - ERROR: HSE oscillator not yet ready
 303:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 304:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 305:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 306:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 307:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 308:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   FlagStatus HSEStatus = RESET;
 309:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 310:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 311:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   do
 312:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 313:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 314:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 315:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 316:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 317:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 318:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 319:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     status = SUCCESS;
 320:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 321:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
 322:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 323:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     status = ERROR;
 324:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }  
 325:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return (status);
 326:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 327:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 328:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 329:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 330:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
 331:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter must be a number between 0 and 0x1F.
 332:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 333:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 334:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 335:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 123              		.loc 1 335 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128              	.LVL1:
 336:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 337:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 338:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 339:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CR;
 129              		.loc 1 339 0
 130 0078 034A     		ldr	r2, .L13
 131 007a 1368     		ldr	r3, [r2]
 132              	.LVL2:
 340:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 341:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CR_HSITRIM_Mask;
 133              		.loc 1 341 0
 134 007c 23F0F803 		bic	r3, r3, #248
 135              	.LVL3:
 342:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 343:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 136              		.loc 1 343 0
 137 0080 43EAC000 		orr	r0, r3, r0, lsl #3
 138              	.LVL4:
 344:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 345:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR = tmpreg;
 139              		.loc 1 345 0
 140 0084 1060     		str	r0, [r2]
 141 0086 7047     		bx	lr
 142              	.L14:
 143              		.align	2
 144              	.L13:
 145 0088 00100240 		.word	1073876992
 146              		.cfi_endproc
 147              	.LFE32:
 149              		.align	1
 150              		.global	RCC_HSICmd
 151              		.thumb
 152              		.thumb_func
 154              	RCC_HSICmd:
 155              	.LFB33:
 346:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 347:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 348:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 349:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 350:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   HSI can not be stopped if it is used directly or through the PLL as system clock.
 351:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the HSI. This parameter can be: ENABLE or DISABLE.
 352:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 353:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 354:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 355:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 156              		.loc 1 355 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 161              	.LVL5:
 356:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 357:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 358:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 162              		.loc 1 358 0
 163 008c 014B     		ldr	r3, .L16
 164 008e 1860     		str	r0, [r3]
 165 0090 7047     		bx	lr
 166              	.L17:
 167 0092 00BF     		.align	2
 168              	.L16:
 169 0094 00004242 		.word	1111621632
 170              		.cfi_endproc
 171              	.LFE33:
 173              		.align	1
 174              		.global	RCC_PLLConfig
 175              		.thumb
 176              		.thumb_func
 178              	RCC_PLLConfig:
 179              	.LFB34:
 359:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 360:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 361:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 362:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 363:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 364:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 365:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices or @b STM32_Value_line_devices, 
 366:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   this parameter can be one of the following values:
 367:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 368:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry
 369:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:
 370:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 371:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div1: HSE oscillator clock selected as PLL clock entry
 372:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div2: HSE oscillator clock divided by 2 selected as PLL clock entry 
 373:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor.
 374:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_
 375:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be RCC_PLLMul_x where x:[2,16]  
 376:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 377:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 378:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 379:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 180              		.loc 1 379 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185              	.LVL6:
 380:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 381:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 382:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 383:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 384:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 385:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 386:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 186              		.loc 1 386 0
 187 0098 034A     		ldr	r2, .L19
 188 009a 5368     		ldr	r3, [r2, #4]
 189              	.LVL7:
 190 009c 23F47C13 		bic	r3, r3, #4128768
 191              	.LVL8:
 192 00a0 1943     		orrs	r1, r1, r3
 193              	.LVL9:
 387:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 388:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PLL_Mask;
 389:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL configuration bits */
 390:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLLSource | RCC_PLLMul;
 194              		.loc 1 390 0
 195 00a2 0843     		orrs	r0, r0, r1
 196              	.LVL10:
 391:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 392:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 197              		.loc 1 392 0
 198 00a4 5060     		str	r0, [r2, #4]
 199 00a6 7047     		bx	lr
 200              	.L20:
 201              		.align	2
 202              	.L19:
 203 00a8 00100240 		.word	1073876992
 204              		.cfi_endproc
 205              	.LFE34:
 207              		.align	1
 208              		.global	RCC_PLLCmd
 209              		.thumb
 210              		.thumb_func
 212              	RCC_PLLCmd:
 213              	.LFB35:
 393:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 394:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 395:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 396:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL.
 397:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The PLL can not be disabled if it is used as system clock.
 398:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL. This parameter can be: ENABLE or DISABLE.
 399:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 400:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 401:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 402:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 214              		.loc 1 402 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 219              	.LVL11:
 403:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 404:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 405:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 406:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 220              		.loc 1 406 0
 221 00ac 014B     		ldr	r3, .L22
 222 00ae 1860     		str	r0, [r3]
 223 00b0 7047     		bx	lr
 224              	.L23:
 225 00b2 00BF     		.align	2
 226              	.L22:
 227 00b4 60004242 		.word	1111621728
 228              		.cfi_endproc
 229              	.LFE35:
 231              		.align	1
 232              		.global	RCC_SYSCLKConfig
 233              		.thumb
 234              		.thumb_func
 236              	RCC_SYSCLKConfig:
 237              	.LFB36:
 407:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 408:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 409:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 410:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 411:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 412:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 413:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL is disabled.
 414:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line and Value line 
 415:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     devices.
 416:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Source: specifies the PREDIV1 clock source.
 417:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 418:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_HSE: HSE selected as PREDIV1 clock
 419:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_PLL2: PLL2 selected as PREDIV1 clock
 420:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 421:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Value_line_devices this parameter is always RCC_PREDIV1_Source_HSE  
 422:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 423:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 424:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 425:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 426:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)
 427:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 428:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 429:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 430:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 431:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1_SOURCE(RCC_PREDIV1_Source));
 432:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 433:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 434:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 435:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PREDIV1[3:0] and PREDIV1SRC bits */
 436:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~(CFGR2_PREDIV1 | CFGR2_PREDIV1SRC);
 437:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PREDIV1 clock source and division factor */
 438:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV1_Source | RCC_PREDIV1_Div ;
 439:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 440:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 441:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 442:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 443:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 444:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 445:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 446:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV2 division factor.
 447:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 448:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when both PLL2 and PLL3 are disabled.
 449:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 450:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV2_Div: specifies the PREDIV2 clock division factor.
 451:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV2_Divx where x:[1,16]
 452:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 453:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 454:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PREDIV2Config(uint32_t RCC_PREDIV2_Div)
 455:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 456:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 457:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 458:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 459:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV2(RCC_PREDIV2_Div));
 460:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 461:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 462:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PREDIV2[3:0] bits */
 463:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PREDIV2;
 464:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PREDIV2 division factor */
 465:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV2_Div;
 466:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 467:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 468:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 469:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 470:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 471:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL2 multiplication factor.
 472:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 473:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL2 is disabled.
 474:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 475:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL2Mul: specifies the PLL2 multiplication factor.
 476:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL2Mul_x where x:{[8,14], 16, 20}
 477:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 478:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 479:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL2Config(uint32_t RCC_PLL2Mul)
 480:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 481:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 482:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 483:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 484:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL2_MUL(RCC_PLL2Mul));
 485:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 486:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 487:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLL2Mul[3:0] bits */
 488:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL2MUL;
 489:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL2 configuration bits */
 490:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL2Mul;
 491:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 492:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 493:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 494:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 495:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 496:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 497:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL2.
 498:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 499:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - The PLL2 can not be disabled if it is used indirectly as system clock
 500:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     (i.e. it is used as PLL clock entry that is used as System clock).
 501:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 502:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL2. This parameter can be: ENABLE or DISABLE.
 503:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 504:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 505:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL2Cmd(FunctionalState NewState)
 506:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 507:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 508:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 509:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 510:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL2ON_BB = (uint32_t)NewState;
 511:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 512:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 513:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 514:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 515:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL3 multiplication factor.
 516:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 517:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL3 is disabled.
 518:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 519:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL3Mul: specifies the PLL3 multiplication factor.
 520:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL3Mul_x where x:{[8,14], 16, 20}
 521:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 522:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 523:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL3Config(uint32_t RCC_PLL3Mul)
 524:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 525:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 526:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 527:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 528:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL3_MUL(RCC_PLL3Mul));
 529:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 530:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 531:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLL3Mul[3:0] bits */
 532:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL3MUL;
 533:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL3 configuration bits */
 534:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL3Mul;
 535:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 536:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 537:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 538:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 539:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 540:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 541:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL3.
 542:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
 543:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL3. This parameter can be: ENABLE or DISABLE.
 544:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 545:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 546:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL3Cmd(FunctionalState NewState)
 547:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 548:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 549:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 550:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 551:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL3ON_BB = (uint32_t)NewState;
 552:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 553:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 554:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 555:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 556:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 557:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
 558:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 559:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI: HSI selected as system clock
 560:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE: HSE selected as system clock
 561:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock
 562:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 563:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 564:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 565:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 238              		.loc 1 565 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243              	.LVL12:
 566:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 567:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 568:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 569:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 244              		.loc 1 569 0
 245 00b8 034A     		ldr	r2, .L25
 246 00ba 5368     		ldr	r3, [r2, #4]
 247              	.LVL13:
 570:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear SW[1:0] bits */
 571:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_SW_Mask;
 248              		.loc 1 571 0
 249 00bc 23F00303 		bic	r3, r3, #3
 250              	.LVL14:
 572:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 573:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 251              		.loc 1 573 0
 252 00c0 1843     		orrs	r0, r0, r3
 253              	.LVL15:
 574:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 575:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 254              		.loc 1 575 0
 255 00c2 5060     		str	r0, [r2, #4]
 256 00c4 7047     		bx	lr
 257              	.L26:
 258 00c6 00BF     		.align	2
 259              	.L25:
 260 00c8 00100240 		.word	1073876992
 261              		.cfi_endproc
 262              	.LFE36:
 264              		.align	1
 265              		.global	RCC_GetSYSCLKSource
 266              		.thumb
 267              		.thumb_func
 269              	RCC_GetSYSCLKSource:
 270              	.LFB37:
 576:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 577:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 578:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 579:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Returns the clock source used as system clock.
 580:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 581:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The clock source used as system clock. The returned value can
 582:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   be one of the following:
 583:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x00: HSI used as system clock
 584:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x04: HSE used as system clock
 585:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x08: PLL used as system clock
 586:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 587:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 588:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 271              		.loc 1 588 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 589:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return ((uint8_t)(RCC->CFGR & CFGR_SWS_Mask));
 276              		.loc 1 589 0
 277 00cc 024B     		ldr	r3, .L28
 278 00ce 5868     		ldr	r0, [r3, #4]
 590:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 279              		.loc 1 590 0
 280 00d0 00F00C00 		and	r0, r0, #12
 281 00d4 7047     		bx	lr
 282              	.L29:
 283 00d6 00BF     		.align	2
 284              	.L28:
 285 00d8 00100240 		.word	1073876992
 286              		.cfi_endproc
 287              	.LFE37:
 289              		.align	1
 290              		.global	RCC_HCLKConfig
 291              		.thumb
 292              		.thumb_func
 294              	RCC_HCLKConfig:
 295              	.LFB38:
 591:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 592:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 593:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 594:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 595:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the system clock (SYSCLK).
 596:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 597:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
 598:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
 599:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
 600:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
 601:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
 602:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
 603:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 604:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 605:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 606:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 607:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 608:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 609:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 296              		.loc 1 609 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 301              	.LVL16:
 610:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 611:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 612:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 613:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 302              		.loc 1 613 0
 303 00dc 034A     		ldr	r2, .L31
 304 00de 5368     		ldr	r3, [r2, #4]
 305              	.LVL17:
 614:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear HPRE[3:0] bits */
 615:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_HPRE_Reset_Mask;
 306              		.loc 1 615 0
 307 00e0 23F0F003 		bic	r3, r3, #240
 308              	.LVL18:
 616:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 617:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLK;
 309              		.loc 1 617 0
 310 00e4 1843     		orrs	r0, r0, r3
 311              	.LVL19:
 618:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 619:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 312              		.loc 1 619 0
 313 00e6 5060     		str	r0, [r2, #4]
 314 00e8 7047     		bx	lr
 315              	.L32:
 316 00ea 00BF     		.align	2
 317              	.L31:
 318 00ec 00100240 		.word	1073876992
 319              		.cfi_endproc
 320              	.LFE38:
 322              		.align	1
 323              		.global	RCC_PCLK1Config
 324              		.thumb
 325              		.thumb_func
 327              	RCC_PCLK1Config:
 328              	.LFB39:
 620:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 621:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 622:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 623:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 624:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 625:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 626:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 627:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB1 clock = HCLK
 628:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB1 clock = HCLK/2
 629:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB1 clock = HCLK/4
 630:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
 631:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 632:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 633:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 634:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 635:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 329              		.loc 1 635 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 334              	.LVL20:
 636:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 637:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 638:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 639:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 335              		.loc 1 639 0
 336 00f0 034A     		ldr	r2, .L34
 337 00f2 5368     		ldr	r3, [r2, #4]
 338              	.LVL21:
 640:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PPRE1[2:0] bits */
 641:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE1_Reset_Mask;
 339              		.loc 1 641 0
 340 00f4 23F4E063 		bic	r3, r3, #1792
 341              	.LVL22:
 642:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 643:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK;
 342              		.loc 1 643 0
 343 00f8 1843     		orrs	r0, r0, r3
 344              	.LVL23:
 644:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 645:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 345              		.loc 1 645 0
 346 00fa 5060     		str	r0, [r2, #4]
 347 00fc 7047     		bx	lr
 348              	.L35:
 349 00fe 00BF     		.align	2
 350              	.L34:
 351 0100 00100240 		.word	1073876992
 352              		.cfi_endproc
 353              	.LFE39:
 355              		.align	1
 356              		.global	RCC_PCLK2Config
 357              		.thumb
 358              		.thumb_func
 360              	RCC_PCLK2Config:
 361              	.LFB40:
 646:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 647:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 648:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 649:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 650:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 651:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 652:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 653:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB2 clock = HCLK
 654:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB2 clock = HCLK/2
 655:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB2 clock = HCLK/4
 656:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
 657:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 658:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 659:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 660:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 661:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 362              		.loc 1 661 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366              		@ link register save eliminated.
 367              	.LVL24:
 662:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 663:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 664:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 665:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 368              		.loc 1 665 0
 369 0104 034A     		ldr	r2, .L37
 370 0106 5368     		ldr	r3, [r2, #4]
 371              	.LVL25:
 666:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PPRE2[2:0] bits */
 667:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE2_Reset_Mask;
 372              		.loc 1 667 0
 373 0108 23F46053 		bic	r3, r3, #14336
 374              	.LVL26:
 668:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 669:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 375              		.loc 1 669 0
 376 010c 43EAC000 		orr	r0, r3, r0, lsl #3
 377              	.LVL27:
 670:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 671:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 378              		.loc 1 671 0
 379 0110 5060     		str	r0, [r2, #4]
 380 0112 7047     		bx	lr
 381              	.L38:
 382              		.align	2
 383              	.L37:
 384 0114 00100240 		.word	1073876992
 385              		.cfi_endproc
 386              	.LFE40:
 388              		.align	1
 389              		.global	RCC_ITConfig
 390              		.thumb
 391              		.thumb_func
 393              	RCC_ITConfig:
 394              	.LFB41:
 672:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 673:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 674:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 675:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
 676:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
 677:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
 678:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
 679:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values        
 680:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 681:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 682:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 683:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 684:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 685:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt
 686:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt
 687:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
 688:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
 689:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values        
 690:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 691:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 692:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 693:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 694:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 695:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *       
 696:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
 697:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
 698:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 699:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 700:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
 701:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 395              		.loc 1 701 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400              	.LVL28:
 401 0118 044B     		ldr	r3, .L43
 702:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 703:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 704:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 705:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 706:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 707:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to enable the selected interrupts */
 708:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 402              		.loc 1 708 0
 403 011a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 705:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 404              		.loc 1 705 0
 405 011c 09B1     		cbz	r1, .L40
 406              		.loc 1 708 0
 407 011e 1043     		orrs	r0, r0, r2
 408              	.LVL29:
 409 0120 01E0     		b	.L42
 410              	.LVL30:
 411              	.L40:
 709:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 710:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
 711:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 712:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to disable the selected interrupts */
 713:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 412              		.loc 1 713 0
 413 0122 22EA0000 		bic	r0, r2, r0
 414              	.LVL31:
 415              	.L42:
 416 0126 1870     		strb	r0, [r3]
 417 0128 7047     		bx	lr
 418              	.L44:
 419 012a 00BF     		.align	2
 420              	.L43:
 421 012c 09100240 		.word	1073877001
 422              		.cfi_endproc
 423              	.LFE41:
 425              		.align	1
 426              		.global	RCC_USBCLKConfig
 427              		.thumb
 428              		.thumb_func
 430              	RCC_USBCLKConfig:
 431              	.LFB42:
 714:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 715:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 716:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 717:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 718:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 719:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB clock (USBCLK).
 720:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_USBCLKSource: specifies the USB clock source. This clock is 
 721:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   derived from the PLL output.
 722:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 723:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB 
 724:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *                                     clock source
 725:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
 726:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 727:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 728:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
 729:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 432              		.loc 1 729 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 437              	.LVL32:
 730:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 731:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
 732:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 733:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
 438              		.loc 1 733 0
 439 0130 014B     		ldr	r3, .L46
 440 0132 1860     		str	r0, [r3]
 441 0134 7047     		bx	lr
 442              	.L47:
 443 0136 00BF     		.align	2
 444              	.L46:
 445 0138 D8004242 		.word	1111621848
 446              		.cfi_endproc
 447              	.LFE42:
 449              		.align	1
 450              		.global	RCC_ADCCLKConfig
 451              		.thumb
 452              		.thumb_func
 454              	RCC_ADCCLKConfig:
 455              	.LFB43:
 734:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 735:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 736:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 737:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB OTG FS clock (OTGFSCLK).
 738:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This function applies only to STM32 Connectivity line devices.
 739:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_OTGFSCLKSource: specifies the USB OTG FS clock source.
 740:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This clock is derived from the PLL output.
 741:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 742:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div3: PLL VCO clock divided by 2 selected as USB OTG FS clo
 743:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div2: PLL VCO clock divided by 2 selected as USB OTG FS clo
 744:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 745:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 746:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_OTGFSCLKConfig(uint32_t RCC_OTGFSCLKSource)
 747:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 748:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 749:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_OTGFSCLK_SOURCE(RCC_OTGFSCLKSource));
 750:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 751:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_OTGFSPRE_BB = RCC_OTGFSCLKSource;
 752:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 753:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 754:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 755:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 756:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
 757:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PCLK2: defines the ADC clock divider. This clock is derived from 
 758:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the APB2 clock (PCLK2).
 759:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 760:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div2: ADC clock = PCLK2/2
 761:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div4: ADC clock = PCLK2/4
 762:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div6: ADC clock = PCLK2/6
 763:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div8: ADC clock = PCLK2/8
 764:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 765:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 766:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)
 767:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 456              		.loc 1 767 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461              	.LVL33:
 768:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 769:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 770:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_ADCCLK(RCC_PCLK2));
 771:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 462              		.loc 1 771 0
 463 013c 034A     		ldr	r2, .L49
 464 013e 5368     		ldr	r3, [r2, #4]
 465              	.LVL34:
 772:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear ADCPRE[1:0] bits */
 773:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_ADCPRE_Reset_Mask;
 466              		.loc 1 773 0
 467 0140 23F44043 		bic	r3, r3, #49152
 468              	.LVL35:
 774:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set ADCPRE[1:0] bits according to RCC_PCLK2 value */
 775:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PCLK2;
 469              		.loc 1 775 0
 470 0144 1843     		orrs	r0, r0, r3
 471              	.LVL36:
 776:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 777:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 472              		.loc 1 777 0
 473 0146 5060     		str	r0, [r2, #4]
 474 0148 7047     		bx	lr
 475              	.L50:
 476 014a 00BF     		.align	2
 477              	.L49:
 478 014c 00100240 		.word	1073876992
 479              		.cfi_endproc
 480              	.LFE43:
 482              		.align	1
 483              		.global	RCC_LSEConfig
 484              		.thumb
 485              		.thumb_func
 487              	RCC_LSEConfig:
 488              	.LFB44:
 778:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 779:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 780:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 781:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 782:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S2 clock source(I2S2CLK).
 783:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 784:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S2 APB clock.
 785:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 786:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S2CLKSource: specifies the I2S2 clock source.
 787:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 788:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_SYSCLK: system clock selected as I2S2 clock entry
 789:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S2 clock entry
 790:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 791:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 792:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_I2S2CLKConfig(uint32_t RCC_I2S2CLKSource)
 793:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 794:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 795:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S2CLK_SOURCE(RCC_I2S2CLKSource));
 796:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 797:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S2SRC_BB = RCC_I2S2CLKSource;
 798:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 799:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 800:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 801:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S3 clock source(I2S2CLK).
 802:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 803:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S3 APB clock.
 804:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 805:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S3CLKSource: specifies the I2S3 clock source.
 806:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 807:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_SYSCLK: system clock selected as I2S3 clock entry
 808:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S3 clock entry
 809:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 810:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 811:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_I2S3CLKConfig(uint32_t RCC_I2S3CLKSource)
 812:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 813:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 814:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S3CLK_SOURCE(RCC_I2S3CLKSource));
 815:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 816:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S3SRC_BB = RCC_I2S3CLKSource;
 817:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 818:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 819:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 820:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 821:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 822:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 823:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 824:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_OFF: LSE oscillator OFF
 825:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_ON: LSE oscillator ON
 826:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 827:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 828:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 829:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 830:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 489              		.loc 1 830 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494              	.LVL37:
 831:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 832:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 833:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 834:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEON bit */
 835:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 495              		.loc 1 835 0
 496 0150 064B     		ldr	r3, .L55
 497 0152 0022     		movs	r2, #0
 836:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEBYP bit */
 837:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 838:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 839:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch(RCC_LSE)
 498              		.loc 1 839 0
 499 0154 0128     		cmp	r0, #1
 835:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEBYP bit */
 500              		.loc 1 835 0
 501 0156 1A70     		strb	r2, [r3]
 837:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 502              		.loc 1 837 0
 503 0158 1A70     		strb	r2, [r3]
 504              		.loc 1 839 0
 505 015a 02D0     		beq	.L53
 506 015c 0428     		cmp	r0, #4
 507 015e 02D0     		beq	.L54
 508 0160 7047     		bx	lr
 509              	.L53:
 840:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 841:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_LSE_ON:
 842:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set LSEON bit */
 843:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 510              		.loc 1 843 0
 511 0162 1870     		strb	r0, [r3]
 844:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 512              		.loc 1 844 0
 513 0164 7047     		bx	lr
 514              	.L54:
 845:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 846:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_LSE_Bypass:
 847:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set LSEBYP and LSEON bits */
 848:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 515              		.loc 1 848 0
 516 0166 0522     		movs	r2, #5
 517 0168 1A70     		strb	r2, [r3]
 518 016a 7047     		bx	lr
 519              	.L56:
 520              		.align	2
 521              	.L55:
 522 016c 20100240 		.word	1073877024
 523              		.cfi_endproc
 524              	.LFE44:
 526              		.align	1
 527              		.global	RCC_LSICmd
 528              		.thumb
 529              		.thumb_func
 531              	RCC_LSICmd:
 532              	.LFB45:
 849:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;            
 850:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 851:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
 852:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;      
 853:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 854:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 855:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 856:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 857:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 858:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.
 859:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the LSI. This parameter can be: ENABLE or DISABLE.
 860:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 861:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 862:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 863:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 533              		.loc 1 863 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538              	.LVL38:
 864:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 865:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 866:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 539              		.loc 1 866 0
 540 0170 014B     		ldr	r3, .L58
 541 0172 1860     		str	r0, [r3]
 542 0174 7047     		bx	lr
 543              	.L59:
 544 0176 00BF     		.align	2
 545              	.L58:
 546 0178 80044242 		.word	1111622784
 547              		.cfi_endproc
 548              	.LFE45:
 550              		.align	1
 551              		.global	RCC_RTCCLKConfig
 552              		.thumb
 553              		.thumb_func
 555              	RCC_RTCCLKConfig:
 556              	.LFB46:
 867:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 868:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 869:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 870:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
 871:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   Once the RTC clock is selected it can't be changed unless the Backup domain is reset.
 872:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
 873:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 874:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
 875:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
 876:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock
 877:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 878:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 879:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
 880:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 557              		.loc 1 880 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 562              	.LVL39:
 881:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 882:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 883:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Select the RTC clock source */
 884:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
 563              		.loc 1 884 0
 564 017c 024A     		ldr	r2, .L61
 565 017e 136A     		ldr	r3, [r2, #32]
 566 0180 1843     		orrs	r0, r0, r3
 567              	.LVL40:
 568 0182 1062     		str	r0, [r2, #32]
 569 0184 7047     		bx	lr
 570              	.L62:
 571 0186 00BF     		.align	2
 572              	.L61:
 573 0188 00100240 		.word	1073876992
 574              		.cfi_endproc
 575              	.LFE46:
 577              		.align	1
 578              		.global	RCC_RTCCLKCmd
 579              		.thumb
 580              		.thumb_func
 582              	RCC_RTCCLKCmd:
 583              	.LFB47:
 885:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 886:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 887:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 888:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the RTC clock.
 889:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function must be used only after the RTC clock was selected using the RCC_RTCCLKCo
 890:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
 891:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 892:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 893:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
 894:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 584              		.loc 1 894 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LVL41:
 895:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 896:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 897:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 590              		.loc 1 897 0
 591 018c 014B     		ldr	r3, .L64
 592 018e 1860     		str	r0, [r3]
 593 0190 7047     		bx	lr
 594              	.L65:
 595 0192 00BF     		.align	2
 596              	.L64:
 597 0194 3C044242 		.word	1111622716
 598              		.cfi_endproc
 599              	.LFE47:
 601              		.align	1
 602              		.global	RCC_GetClocksFreq
 603              		.thumb
 604              		.thumb_func
 606              	RCC_GetClocksFreq:
 607              	.LFB48:
 898:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 899:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 900:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 901:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks.
 902:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
 903:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *         the clocks frequencies.
 904:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The result of this function could be not correct when using 
 905:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *         fractional value for HSE crystal.  
 906:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 907:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 908:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 909:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 608              		.loc 1 909 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              	.LVL42:
 910:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 911:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 912:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef  STM32F10X_CL
 913:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 914:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 915:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 916:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 917:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t prediv1factor = 0;
 918:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 919:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     
 920:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 921:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_SWS_Mask;
 613              		.loc 1 921 0
 614 0198 1D4A     		ldr	r2, .L76
 909:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 615              		.loc 1 909 0
 616 019a 10B5     		push	{r4, lr}
 617              	.LCFI0:
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 4, -8
 620              		.cfi_offset 14, -4
 621              		.loc 1 921 0
 622 019c 5368     		ldr	r3, [r2, #4]
 623              	.LVL43:
 922:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 923:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch (tmp)
 624              		.loc 1 923 0
 625 019e 03F00C03 		and	r3, r3, #12
 626              	.LVL44:
 627 01a2 042B     		cmp	r3, #4
 628 01a4 03D0     		beq	.L68
 629 01a6 082B     		cmp	r3, #8
 630 01a8 03D0     		beq	.L69
 631 01aa 1A4B     		ldr	r3, .L76+4
 632              	.LVL45:
 633 01ac 11E0     		b	.L74
 634              	.LVL46:
 635              	.L68:
 924:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 925:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x00:  /* HSI used as system clock */
 926:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 927:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 928:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x04:  /* HSE used as system clock */
 929:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 636              		.loc 1 929 0
 637 01ae 1A4B     		ldr	r3, .L76+8
 638              	.LVL47:
 639 01b0 0FE0     		b	.L74
 640              	.LVL48:
 641              	.L69:
 930:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 931:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 932:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 933:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 934:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 642              		.loc 1 934 0
 643 01b2 5368     		ldr	r3, [r2, #4]
 644              	.LVL49:
 935:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 645              		.loc 1 935 0
 646 01b4 5168     		ldr	r1, [r2, #4]
 647              	.LVL50:
 936:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 937:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL      
 938:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 648              		.loc 1 938 0
 649 01b6 C3F38343 		ubfx	r3, r3, #18, #4
 650              	.LVL51:
 939:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 940:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 651              		.loc 1 940 0
 652 01ba CC03     		lsls	r4, r1, #15
 938:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 653              		.loc 1 938 0
 654 01bc 03F10203 		add	r3, r3, #2
 655              	.LVL52:
 656              		.loc 1 940 0
 657 01c0 01D4     		bmi	.L72
 941:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 942:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 658              		.loc 1 942 0
 659 01c2 1649     		ldr	r1, .L76+12
 660              	.LVL53:
 661 01c4 04E0     		b	.L75
 662              	.LVL54:
 663              	.L72:
 943:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 944:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 945:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {
 946:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 947:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 948:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 949:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 950:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #else
 951:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         /* HSE selected as PLL clock entry */
 952:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 664              		.loc 1 952 0
 665 01c6 5168     		ldr	r1, [r2, #4]
 666              	.LVL55:
 667 01c8 8903     		lsls	r1, r1, #14
 953:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 954:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 668              		.loc 1 954 0
 669 01ca 4CBF     		ite	mi
 670 01cc 1149     		ldrmi	r1, .L76+4
 955:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 956:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         else
 957:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {
 958:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 671              		.loc 1 958 0
 672 01ce 1249     		ldrpl	r1, .L76+8
 673              	.L75:
 674 01d0 4B43     		muls	r3, r1, r3
 675              	.LVL56:
 676              	.L74:
 677 01d2 0360     		str	r3, [r0]
 959:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 960:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #endif
 961:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 962:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 963:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = pllmull >> 18;
 964:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 965:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllmull != 0x0D)
 966:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {
 967:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****          pllmull += 2;
 968:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 969:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 970:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 971:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         pllmull = 13 / 2; 
 972:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 973:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****             
 974:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 975:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 976:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 977:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 978:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 979:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* PREDIV1 selected as PLL clock entry */
 980:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         
 981:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         /* Get PREDIV1 clock source and division factor */
 982:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         prediv1source = RCC->CFGR2 & CFGR2_PREDIV1SRC;
 983:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 984:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         
 985:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if (prediv1source == 0)
 986:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         { /* HSE oscillator clock selected as PREDIV1 clock entry */
 987:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull;          
 988:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 989:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         else
 990:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 991:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           
 992:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 993:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           prediv2factor = ((RCC->CFGR2 & CFGR2_PREDIV2) >> 4) + 1;
 994:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           pll2mull = ((RCC->CFGR2 & CFGR2_PLL2MUL) >> 8 ) + 2; 
 995:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor)
 996:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 997:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 998:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 999:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
1000:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1001:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
1002:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
1003:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
1004:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1005:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1006:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
1007:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get HCLK prescaler */
1008:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 678              		.loc 1 1008 0
 679 01d4 5368     		ldr	r3, [r2, #4]
 680              	.LVL57:
1009:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
1010:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 681              		.loc 1 1010 0
 682 01d6 1249     		ldr	r1, .L76+16
1009:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
 683              		.loc 1 1009 0
 684 01d8 C3F30313 		ubfx	r3, r3, #4, #4
 685              	.LVL58:
 686              		.loc 1 1010 0
 687 01dc CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 688              	.LVL59:
1011:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* HCLK clock frequency */
1012:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 689              		.loc 1 1012 0
 690 01de 0368     		ldr	r3, [r0]
 691              	.LVL60:
 692 01e0 E340     		lsrs	r3, r3, r4
 693 01e2 4360     		str	r3, [r0, #4]
1013:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get PCLK1 prescaler */
1014:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 694              		.loc 1 1014 0
 695 01e4 5468     		ldr	r4, [r2, #4]
 696              	.LVL61:
1015:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 8;
 697              		.loc 1 1015 0
 698 01e6 C4F30224 		ubfx	r4, r4, #8, #3
 699              	.LVL62:
1016:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 700              		.loc 1 1016 0
 701 01ea 0C5D     		ldrb	r4, [r1, r4]	@ zero_extendqisi2
 702              	.LVL63:
1017:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* PCLK1 clock frequency */
1018:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 703              		.loc 1 1018 0
 704 01ec 23FA04F4 		lsr	r4, r3, r4
 705              	.LVL64:
 706 01f0 8460     		str	r4, [r0, #8]
1019:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get PCLK2 prescaler */
1020:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 707              		.loc 1 1020 0
 708 01f2 5468     		ldr	r4, [r2, #4]
 709              	.LVL65:
1021:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 11;
 710              		.loc 1 1021 0
 711 01f4 C4F3C224 		ubfx	r4, r4, #11, #3
 712              	.LVL66:
1022:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 713              		.loc 1 1022 0
 714 01f8 0C5D     		ldrb	r4, [r1, r4]	@ zero_extendqisi2
 715              	.LVL67:
1023:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* PCLK2 clock frequency */
1024:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 716              		.loc 1 1024 0
 717 01fa E340     		lsrs	r3, r3, r4
 718 01fc C360     		str	r3, [r0, #12]
1025:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get ADCCLK prescaler */
1026:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 719              		.loc 1 1026 0
 720 01fe 5268     		ldr	r2, [r2, #4]
 721              	.LVL68:
1027:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 14;
 722              		.loc 1 1027 0
 723 0200 C2F38132 		ubfx	r2, r2, #14, #2
 724              	.LVL69:
1028:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = ADCPrescTable[tmp];
 725              		.loc 1 1028 0
 726 0204 0A44     		add	r2, r2, r1
 727              	.LVL70:
 728 0206 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 729              	.LVL71:
1029:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* ADCCLK clock frequency */
1030:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 730              		.loc 1 1030 0
 731 0208 B3FBF2F3 		udiv	r3, r3, r2
 732 020c 0361     		str	r3, [r0, #16]
 733 020e 10BD     		pop	{r4, pc}
 734              	.L77:
 735              		.align	2
 736              	.L76:
 737 0210 00100240 		.word	1073876992
 738 0214 00127A00 		.word	8000000
 739 0218 0024F400 		.word	16000000
 740 021c 00093D00 		.word	4000000
 741 0220 00000000 		.word	.LANCHOR0
 742              		.cfi_endproc
 743              	.LFE48:
 745              		.align	1
 746              		.global	RCC_AHBPeriphClockCmd
 747              		.thumb
 748              		.thumb_func
 750              	RCC_AHBPeriphClockCmd:
 751              	.LFB49:
1031:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1032:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1033:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1034:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1035:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1036:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1037:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1038:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values:        
1039:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1040:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1041:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1042:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1043:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1044:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS    
1045:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC   
1046:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Tx
1047:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Rx
1048:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1049:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
1050:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:        
1051:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1052:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1053:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1054:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1055:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1056:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FSMC
1057:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SDIO
1058:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1059:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note SRAM and FLITF clock can be disabled only during sleep mode.
1060:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1061:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1062:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1063:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1064:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1065:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 752              		.loc 1 1065 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              		@ link register save eliminated.
 757              	.LVL72:
 758 0224 044B     		ldr	r3, .L82
1066:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1067:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
1068:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1069:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1070:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1071:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1072:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
 759              		.loc 1 1072 0
 760 0226 5A69     		ldr	r2, [r3, #20]
1070:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 761              		.loc 1 1070 0
 762 0228 09B1     		cbz	r1, .L79
 763              		.loc 1 1072 0
 764 022a 1043     		orrs	r0, r0, r2
 765              	.LVL73:
 766 022c 01E0     		b	.L81
 767              	.LVL74:
 768              	.L79:
1073:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1074:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1075:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1076:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
 769              		.loc 1 1076 0
 770 022e 22EA0000 		bic	r0, r2, r0
 771              	.LVL75:
 772              	.L81:
 773 0232 5861     		str	r0, [r3, #20]
 774 0234 7047     		bx	lr
 775              	.L83:
 776 0236 00BF     		.align	2
 777              	.L82:
 778 0238 00100240 		.word	1073876992
 779              		.cfi_endproc
 780              	.LFE49:
 782              		.align	1
 783              		.global	RCC_APB2PeriphClockCmd
 784              		.thumb
 785              		.thumb_func
 787              	RCC_APB2PeriphClockCmd:
 788              	.LFB50:
1077:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1078:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1079:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1080:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1081:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1082:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1083:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1084:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1085:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1086:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1087:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1088:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1089:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1090:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11     
1091:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1092:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1093:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1094:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1095:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1096:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 789              		.loc 1 1096 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 794              	.LVL76:
 795 023c 044B     		ldr	r3, .L88
1097:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1098:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1099:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1100:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1101:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1102:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 796              		.loc 1 1102 0
 797 023e 9A69     		ldr	r2, [r3, #24]
1100:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 798              		.loc 1 1100 0
 799 0240 09B1     		cbz	r1, .L85
 800              		.loc 1 1102 0
 801 0242 1043     		orrs	r0, r0, r2
 802              	.LVL77:
 803 0244 01E0     		b	.L87
 804              	.LVL78:
 805              	.L85:
1103:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1104:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1105:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1106:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 806              		.loc 1 1106 0
 807 0246 22EA0000 		bic	r0, r2, r0
 808              	.LVL79:
 809              	.L87:
 810 024a 9861     		str	r0, [r3, #24]
 811 024c 7047     		bx	lr
 812              	.L89:
 813 024e 00BF     		.align	2
 814              	.L88:
 815 0250 00100240 		.word	1073876992
 816              		.cfi_endproc
 817              	.LFE50:
 819              		.align	1
 820              		.global	RCC_APB1PeriphClockCmd
 821              		.thumb
 822              		.thumb_func
 824              	RCC_APB1PeriphClockCmd:
 825              	.LFB51:
1107:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1108:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1109:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1110:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1111:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1112:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1113:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1114:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1115:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1116:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1117:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1118:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1119:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1120:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1121:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14
1122:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1123:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1124:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1125:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1126:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1127:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 826              		.loc 1 1127 0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              		@ link register save eliminated.
 831              	.LVL80:
 832 0254 044B     		ldr	r3, .L94
1128:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1129:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1130:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1131:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1132:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1133:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 833              		.loc 1 1133 0
 834 0256 DA69     		ldr	r2, [r3, #28]
1131:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 835              		.loc 1 1131 0
 836 0258 09B1     		cbz	r1, .L91
 837              		.loc 1 1133 0
 838 025a 1043     		orrs	r0, r0, r2
 839              	.LVL81:
 840 025c 01E0     		b	.L93
 841              	.LVL82:
 842              	.L91:
1134:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1135:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1136:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1137:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 843              		.loc 1 1137 0
 844 025e 22EA0000 		bic	r0, r2, r0
 845              	.LVL83:
 846              	.L93:
 847 0262 D861     		str	r0, [r3, #28]
 848 0264 7047     		bx	lr
 849              	.L95:
 850 0266 00BF     		.align	2
 851              	.L94:
 852 0268 00100240 		.word	1073876992
 853              		.cfi_endproc
 854              	.LFE51:
 856              		.align	1
 857              		.global	RCC_APB2PeriphResetCmd
 858              		.thumb
 859              		.thumb_func
 861              	RCC_APB2PeriphResetCmd:
 862              	.LFB52:
1138:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1139:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1140:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1141:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
1142:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1143:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1144:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
1145:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1146:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1147:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS 
1148:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC
1149:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1150:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1151:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1152:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1153:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1154:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
1155:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1156:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH_RESET(RCC_AHBPeriph));
1157:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1158:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1159:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1160:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1161:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
1162:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1163:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1164:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1165:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
1166:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1167:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1168:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1169:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1170:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1171:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1172:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1173:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1174:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1175:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1176:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1177:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1178:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1179:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1180:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11  
1181:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1182:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1183:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1184:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1185:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1186:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 863              		.loc 1 1186 0
 864              		.cfi_startproc
 865              		@ args = 0, pretend = 0, frame = 0
 866              		@ frame_needed = 0, uses_anonymous_args = 0
 867              		@ link register save eliminated.
 868              	.LVL84:
 869 026c 044B     		ldr	r3, .L100
1187:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1188:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1189:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1190:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1191:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1192:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 870              		.loc 1 1192 0
 871 026e DA68     		ldr	r2, [r3, #12]
1190:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 872              		.loc 1 1190 0
 873 0270 09B1     		cbz	r1, .L97
 874              		.loc 1 1192 0
 875 0272 1043     		orrs	r0, r0, r2
 876              	.LVL85:
 877 0274 01E0     		b	.L99
 878              	.LVL86:
 879              	.L97:
1193:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1194:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1195:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1196:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 880              		.loc 1 1196 0
 881 0276 22EA0000 		bic	r0, r2, r0
 882              	.LVL87:
 883              	.L99:
 884 027a D860     		str	r0, [r3, #12]
 885 027c 7047     		bx	lr
 886              	.L101:
 887 027e 00BF     		.align	2
 888              	.L100:
 889 0280 00100240 		.word	1073876992
 890              		.cfi_endproc
 891              	.LFE52:
 893              		.align	1
 894              		.global	RCC_APB1PeriphResetCmd
 895              		.thumb
 896              		.thumb_func
 898              	RCC_APB1PeriphResetCmd:
 899              	.LFB53:
1197:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1198:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1199:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1200:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1201:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1202:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1203:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1204:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1205:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1206:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1207:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1208:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1209:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1210:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1211:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14  
1212:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1213:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1214:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1215:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1216:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1217:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 900              		.loc 1 1217 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904              		@ link register save eliminated.
 905              	.LVL88:
 906 0284 044B     		ldr	r3, .L106
1218:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1219:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1220:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1221:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1222:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1223:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 907              		.loc 1 1223 0
 908 0286 1A69     		ldr	r2, [r3, #16]
1221:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 909              		.loc 1 1221 0
 910 0288 09B1     		cbz	r1, .L103
 911              		.loc 1 1223 0
 912 028a 1043     		orrs	r0, r0, r2
 913              	.LVL89:
 914 028c 01E0     		b	.L105
 915              	.LVL90:
 916              	.L103:
1224:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1225:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1226:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1227:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 917              		.loc 1 1227 0
 918 028e 22EA0000 		bic	r0, r2, r0
 919              	.LVL91:
 920              	.L105:
 921 0292 1861     		str	r0, [r3, #16]
 922 0294 7047     		bx	lr
 923              	.L107:
 924 0296 00BF     		.align	2
 925              	.L106:
 926 0298 00100240 		.word	1073876992
 927              		.cfi_endproc
 928              	.LFE53:
 930              		.align	1
 931              		.global	RCC_BackupResetCmd
 932              		.thumb
 933              		.thumb_func
 935              	RCC_BackupResetCmd:
 936              	.LFB54:
1228:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1229:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1230:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1231:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1232:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1233:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1234:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1235:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1236:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1237:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1238:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 937              		.loc 1 1238 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              		@ link register save eliminated.
 942              	.LVL92:
1239:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1240:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1241:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 943              		.loc 1 1241 0
 944 029c 014B     		ldr	r3, .L109
 945 029e 1860     		str	r0, [r3]
 946 02a0 7047     		bx	lr
 947              	.L110:
 948 02a2 00BF     		.align	2
 949              	.L109:
 950 02a4 40044242 		.word	1111622720
 951              		.cfi_endproc
 952              	.LFE54:
 954              		.align	1
 955              		.global	RCC_ClockSecuritySystemCmd
 956              		.thumb
 957              		.thumb_func
 959              	RCC_ClockSecuritySystemCmd:
 960              	.LFB55:
1242:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1243:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1244:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1245:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Clock Security System.
1246:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Clock Security System..
1247:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1248:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1249:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1250:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
1251:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 961              		.loc 1 1251 0
 962              		.cfi_startproc
 963              		@ args = 0, pretend = 0, frame = 0
 964              		@ frame_needed = 0, uses_anonymous_args = 0
 965              		@ link register save eliminated.
 966              	.LVL93:
1252:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1253:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1254:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 967              		.loc 1 1254 0
 968 02a8 014B     		ldr	r3, .L112
 969 02aa 1860     		str	r0, [r3]
 970 02ac 7047     		bx	lr
 971              	.L113:
 972 02ae 00BF     		.align	2
 973              	.L112:
 974 02b0 4C004242 		.word	1111621708
 975              		.cfi_endproc
 976              	.LFE55:
 978              		.align	1
 979              		.global	RCC_MCOConfig
 980              		.thumb
 981              		.thumb_func
 983              	RCC_MCOConfig:
 984              	.LFB56:
1255:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1256:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1257:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1258:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
1259:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_MCO: specifies the clock source to output.
1260:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1261:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1262:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:       
1263:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1264:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1265:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1266:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1267:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1268:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL2CLK: PLL2 clock selected                     
1269:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK_Div2: PLL3 clock divided by 2 selected   
1270:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_XT1: External 3-25 MHz oscillator clock selected  
1271:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK: PLL3 clock selected 
1272:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1273:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For  @b other_STM32_devices, this parameter can be one of the following values:        
1274:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1275:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1276:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1277:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1278:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1279:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1280:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1281:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1282:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCO)
1283:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 985              		.loc 1 1283 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              		@ link register save eliminated.
 990              	.LVL94:
1284:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1285:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCO));
1286:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1287:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Perform Byte access to MCO bits to select the MCO source */
1288:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE4_ADDRESS = RCC_MCO;
 991              		.loc 1 1288 0
 992 02b4 014B     		ldr	r3, .L115
 993 02b6 1870     		strb	r0, [r3]
 994 02b8 7047     		bx	lr
 995              	.L116:
 996 02ba 00BF     		.align	2
 997              	.L115:
 998 02bc 07100240 		.word	1073876999
 999              		.cfi_endproc
 1000              	.LFE56:
 1002              		.align	1
 1003              		.global	RCC_GetFlagStatus
 1004              		.thumb
 1005              		.thumb_func
 1007              	RCC_GetFlagStatus:
 1008              	.LFB57:
1289:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1290:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1291:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1292:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1293:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1294:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1295:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1296:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:
1297:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1298:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1299:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1300:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL2RDY: PLL2 clock ready      
1301:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL3RDY: PLL3 clock ready                           
1302:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1303:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1304:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1305:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1306:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1307:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1308:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1309:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1310:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1311:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1312:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1313:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1314:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1315:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1316:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1317:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1318:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1319:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1320:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1321:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1322:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1323:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1324:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1325:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1326:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1327:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1009              		.loc 1 1327 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 0
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 1013              		@ link register save eliminated.
 1014              	.LVL95:
1328:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0;
1329:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t statusreg = 0;
1330:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   FlagStatus bitstatus = RESET;
1331:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1332:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
1333:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1334:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get the RCC register index */
1335:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG >> 5;
 1015              		.loc 1 1335 0
 1016 02c0 4209     		lsrs	r2, r0, #5
 1017              	.LVL96:
1336:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 1018              		.loc 1 1336 0
 1019 02c2 012A     		cmp	r2, #1
 1020 02c4 074B     		ldr	r3, .L121
 1021 02c6 01D1     		bne	.L118
1337:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1338:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->CR;
 1022              		.loc 1 1338 0
 1023 02c8 1B68     		ldr	r3, [r3]
 1024              	.LVL97:
 1025 02ca 03E0     		b	.L119
 1026              	.LVL98:
 1027              	.L118:
1339:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1340:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 1028              		.loc 1 1340 0
 1029 02cc 022A     		cmp	r2, #2
1341:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1342:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->BDCR;
 1030              		.loc 1 1342 0
 1031 02ce 0CBF     		ite	eq
 1032 02d0 1B6A     		ldreq	r3, [r3, #32]
 1033              	.LVL99:
1343:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1344:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else                       /* The flag to check is in CSR register */
1345:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1346:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->CSR;
 1034              		.loc 1 1346 0
 1035 02d2 5B6A     		ldrne	r3, [r3, #36]
 1036              	.LVL100:
 1037              	.L119:
1347:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1348:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1349:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get the flag position */
1350:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG & FLAG_Mask;
1351:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
1352:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1353:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = SET;
1354:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1355:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1356:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1357:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
1358:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1359:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1360:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Return the flag status */
1361:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return bitstatus;
 1038              		.loc 1 1361 0
 1039 02d4 00F01F00 		and	r0, r0, #31
 1040              	.LVL101:
 1041 02d8 23FA00F0 		lsr	r0, r3, r0
1362:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1042              		.loc 1 1362 0
 1043 02dc 00F00100 		and	r0, r0, #1
 1044 02e0 7047     		bx	lr
 1045              	.L122:
 1046 02e2 00BF     		.align	2
 1047              	.L121:
 1048 02e4 00100240 		.word	1073876992
 1049              		.cfi_endproc
 1050              	.LFE57:
 1052              		.align	1
 1053              		.global	RCC_WaitForHSEStartUp
 1054              		.thumb
 1055              		.thumb_func
 1057              	RCC_WaitForHSEStartUp:
 1058              	.LFB31:
 305:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 1059              		.loc 1 305 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 8
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063 02e8 07B5     		push	{r0, r1, r2, lr}
 1064              	.LCFI1:
 1065              		.cfi_def_cfa_offset 16
 1066              		.cfi_offset 14, -4
 306:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 1067              		.loc 1 306 0
 1068 02ea 0023     		movs	r3, #0
 1069 02ec 0193     		str	r3, [sp, #4]
 1070              	.LVL102:
 1071              	.L125:
 313:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 1072              		.loc 1 313 0 discriminator 2
 1073 02ee 3120     		movs	r0, #49
 1074 02f0 FFF7FEFF 		bl	RCC_GetFlagStatus
 1075              	.LVL103:
 314:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 1076              		.loc 1 314 0 discriminator 2
 1077 02f4 019B     		ldr	r3, [sp, #4]
 1078 02f6 0133     		adds	r3, r3, #1
 1079 02f8 0193     		str	r3, [sp, #4]
 315:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 1080              		.loc 1 315 0 discriminator 2
 1081 02fa 019B     		ldr	r3, [sp, #4]
 1082 02fc B3F5A06F 		cmp	r3, #1280
 1083 0300 01D0     		beq	.L124
 315:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 1084              		.loc 1 315 0 is_stmt 0 discriminator 1
 1085 0302 0028     		cmp	r0, #0
 1086 0304 F3D0     		beq	.L125
 1087              	.L124:
 317:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 1088              		.loc 1 317 0 is_stmt 1
 1089 0306 3120     		movs	r0, #49
 1090              	.LVL104:
 1091 0308 FFF7FEFF 		bl	RCC_GetFlagStatus
 1092              	.LVL105:
 326:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 1093              		.loc 1 326 0
 1094 030c 0030     		adds	r0, r0, #0
 1095              	.LVL106:
 1096 030e 18BF     		it	ne
 1097 0310 0120     		movne	r0, #1
 1098 0312 03B0     		add	sp, sp, #12
 1099              	.LCFI2:
 1100              		.cfi_def_cfa_offset 4
 1101              		@ sp needed
 1102 0314 5DF804FB 		ldr	pc, [sp], #4
 1103              		.cfi_endproc
 1104              	.LFE31:
 1106              		.align	1
 1107              		.global	RCC_ClearFlag
 1108              		.thumb
 1109              		.thumb_func
 1111              	RCC_ClearFlag:
 1112              	.LFB58:
1363:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1364:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1365:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC reset flags.
1366:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST,
1367:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
1368:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
1369:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1370:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1371:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClearFlag(void)
1372:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1113              		.loc 1 1372 0
 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 0
 1116              		@ frame_needed = 0, uses_anonymous_args = 0
 1117              		@ link register save eliminated.
1373:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1374:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CSR |= CSR_RMVF_Set;
 1118              		.loc 1 1374 0
 1119 0318 024A     		ldr	r2, .L132
 1120 031a 536A     		ldr	r3, [r2, #36]
 1121 031c 43F08073 		orr	r3, r3, #16777216
 1122 0320 5362     		str	r3, [r2, #36]
 1123 0322 7047     		bx	lr
 1124              	.L133:
 1125              		.align	2
 1126              	.L132:
 1127 0324 00100240 		.word	1073876992
 1128              		.cfi_endproc
 1129              	.LFE58:
 1131              		.align	1
 1132              		.global	RCC_GetITStatus
 1133              		.thumb
 1134              		.thumb_func
 1136              	RCC_GetITStatus:
 1137              	.LFB59:
1375:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1376:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1377:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1378:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1379:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1380:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1381:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1382:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:
1383:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1384:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1385:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1386:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1387:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1388:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1389:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1390:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1391:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1392:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1393:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1394:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1395:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1396:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1397:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1398:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1399:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1400:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1401:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1402:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1403:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1138              		.loc 1 1403 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142              		@ link register save eliminated.
 1143              	.LVL107:
1404:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ITStatus bitstatus = RESET;
1405:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1406:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
1407:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1408:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the status of the specified RCC interrupt */
1409:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 1144              		.loc 1 1409 0
 1145 0328 034B     		ldr	r3, .L135
 1146 032a 9B68     		ldr	r3, [r3, #8]
 1147              	.LVL108:
1410:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1411:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = SET;
1412:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1413:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1414:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1415:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
1416:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1417:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1418:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Return the RCC_IT status */
1419:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return  bitstatus;
 1148              		.loc 1 1419 0
 1149 032c 1842     		tst	r0, r3
1420:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1150              		.loc 1 1420 0
 1151 032e 14BF     		ite	ne
 1152 0330 0120     		movne	r0, #1
 1153              	.LVL109:
 1154 0332 0020     		moveq	r0, #0
 1155 0334 7047     		bx	lr
 1156              	.L136:
 1157 0336 00BF     		.align	2
 1158              	.L135:
 1159 0338 00100240 		.word	1073876992
 1160              		.cfi_endproc
 1161              	.LFE59:
 1163              		.align	1
 1164              		.global	RCC_ClearITPendingBit
 1165              		.thumb
 1166              		.thumb_func
 1168              	RCC_ClearITPendingBit:
 1169              	.LFB60:
1421:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1422:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1423:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1424:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1425:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1426:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1427:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values:
1428:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1429:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1430:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1431:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1432:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1433:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1434:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1435:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1436:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1437:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the
1438:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:        
1439:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1440:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1441:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1442:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1443:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1444:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1445:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1446:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1447:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1448:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1449:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1170              		.loc 1 1449 0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174              		@ link register save eliminated.
 1175              	.LVL110:
1450:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1451:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
1452:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1453:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1454:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****      pending bits */
1455:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 1176              		.loc 1 1455 0
 1177 033c 014B     		ldr	r3, .L138
 1178 033e 1870     		strb	r0, [r3]
 1179 0340 7047     		bx	lr
 1180              	.L139:
 1181 0342 00BF     		.align	2
 1182              	.L138:
 1183 0344 0A100240 		.word	1073877002
 1184              		.cfi_endproc
 1185              	.LFE60:
 1187              		.data
 1188              		.set	.LANCHOR0,. + 0
 1191              	APBAHBPrescTable:
 1192 0000 00       		.byte	0
 1193 0001 00       		.byte	0
 1194 0002 00       		.byte	0
 1195 0003 00       		.byte	0
 1196 0004 01       		.byte	1
 1197 0005 02       		.byte	2
 1198 0006 03       		.byte	3
 1199 0007 04       		.byte	4
 1200 0008 01       		.byte	1
 1201 0009 02       		.byte	2
 1202 000a 03       		.byte	3
 1203 000b 04       		.byte	4
 1204 000c 06       		.byte	6
 1205 000d 07       		.byte	7
 1206 000e 08       		.byte	8
 1207 000f 09       		.byte	9
 1210              	ADCPrescTable:
 1211 0010 02       		.byte	2
 1212 0011 04       		.byte	4
 1213 0012 06       		.byte	6
 1214 0013 08       		.byte	8
 1215              		.text
 1216              	.Letext0:
 1217              		.file 2 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types.h"
 1218              		.file 3 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 1219              		.file 4 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 1220              		.file 5 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 1221              		.file 6 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_rcc.c
     /tmp/ccq26ckz.s:19     .text:00000000 $t
     /tmp/ccq26ckz.s:24     .text:00000000 RCC_DeInit
     /tmp/ccq26ckz.s:62     .text:00000038 $d
     /tmp/ccq26ckz.s:67     .text:00000040 $t
     /tmp/ccq26ckz.s:72     .text:00000040 RCC_HSEConfig
     /tmp/ccq26ckz.s:112    .text:00000074 $d
     /tmp/ccq26ckz.s:116    .text:00000078 $t
     /tmp/ccq26ckz.s:121    .text:00000078 RCC_AdjustHSICalibrationValue
     /tmp/ccq26ckz.s:145    .text:00000088 $d
     /tmp/ccq26ckz.s:149    .text:0000008c $t
     /tmp/ccq26ckz.s:154    .text:0000008c RCC_HSICmd
     /tmp/ccq26ckz.s:169    .text:00000094 $d
     /tmp/ccq26ckz.s:173    .text:00000098 $t
     /tmp/ccq26ckz.s:178    .text:00000098 RCC_PLLConfig
     /tmp/ccq26ckz.s:203    .text:000000a8 $d
     /tmp/ccq26ckz.s:207    .text:000000ac $t
     /tmp/ccq26ckz.s:212    .text:000000ac RCC_PLLCmd
     /tmp/ccq26ckz.s:227    .text:000000b4 $d
     /tmp/ccq26ckz.s:231    .text:000000b8 $t
     /tmp/ccq26ckz.s:236    .text:000000b8 RCC_SYSCLKConfig
     /tmp/ccq26ckz.s:260    .text:000000c8 $d
     /tmp/ccq26ckz.s:264    .text:000000cc $t
     /tmp/ccq26ckz.s:269    .text:000000cc RCC_GetSYSCLKSource
     /tmp/ccq26ckz.s:285    .text:000000d8 $d
     /tmp/ccq26ckz.s:289    .text:000000dc $t
     /tmp/ccq26ckz.s:294    .text:000000dc RCC_HCLKConfig
     /tmp/ccq26ckz.s:318    .text:000000ec $d
     /tmp/ccq26ckz.s:322    .text:000000f0 $t
     /tmp/ccq26ckz.s:327    .text:000000f0 RCC_PCLK1Config
     /tmp/ccq26ckz.s:351    .text:00000100 $d
     /tmp/ccq26ckz.s:355    .text:00000104 $t
     /tmp/ccq26ckz.s:360    .text:00000104 RCC_PCLK2Config
     /tmp/ccq26ckz.s:384    .text:00000114 $d
     /tmp/ccq26ckz.s:388    .text:00000118 $t
     /tmp/ccq26ckz.s:393    .text:00000118 RCC_ITConfig
     /tmp/ccq26ckz.s:421    .text:0000012c $d
     /tmp/ccq26ckz.s:425    .text:00000130 $t
     /tmp/ccq26ckz.s:430    .text:00000130 RCC_USBCLKConfig
     /tmp/ccq26ckz.s:445    .text:00000138 $d
     /tmp/ccq26ckz.s:449    .text:0000013c $t
     /tmp/ccq26ckz.s:454    .text:0000013c RCC_ADCCLKConfig
     /tmp/ccq26ckz.s:478    .text:0000014c $d
     /tmp/ccq26ckz.s:482    .text:00000150 $t
     /tmp/ccq26ckz.s:487    .text:00000150 RCC_LSEConfig
     /tmp/ccq26ckz.s:522    .text:0000016c $d
     /tmp/ccq26ckz.s:526    .text:00000170 $t
     /tmp/ccq26ckz.s:531    .text:00000170 RCC_LSICmd
     /tmp/ccq26ckz.s:546    .text:00000178 $d
     /tmp/ccq26ckz.s:550    .text:0000017c $t
     /tmp/ccq26ckz.s:555    .text:0000017c RCC_RTCCLKConfig
     /tmp/ccq26ckz.s:573    .text:00000188 $d
     /tmp/ccq26ckz.s:577    .text:0000018c $t
     /tmp/ccq26ckz.s:582    .text:0000018c RCC_RTCCLKCmd
     /tmp/ccq26ckz.s:597    .text:00000194 $d
     /tmp/ccq26ckz.s:601    .text:00000198 $t
     /tmp/ccq26ckz.s:606    .text:00000198 RCC_GetClocksFreq
     /tmp/ccq26ckz.s:737    .text:00000210 $d
     /tmp/ccq26ckz.s:745    .text:00000224 $t
     /tmp/ccq26ckz.s:750    .text:00000224 RCC_AHBPeriphClockCmd
     /tmp/ccq26ckz.s:778    .text:00000238 $d
     /tmp/ccq26ckz.s:782    .text:0000023c $t
     /tmp/ccq26ckz.s:787    .text:0000023c RCC_APB2PeriphClockCmd
     /tmp/ccq26ckz.s:815    .text:00000250 $d
     /tmp/ccq26ckz.s:819    .text:00000254 $t
     /tmp/ccq26ckz.s:824    .text:00000254 RCC_APB1PeriphClockCmd
     /tmp/ccq26ckz.s:852    .text:00000268 $d
     /tmp/ccq26ckz.s:856    .text:0000026c $t
     /tmp/ccq26ckz.s:861    .text:0000026c RCC_APB2PeriphResetCmd
     /tmp/ccq26ckz.s:889    .text:00000280 $d
     /tmp/ccq26ckz.s:893    .text:00000284 $t
     /tmp/ccq26ckz.s:898    .text:00000284 RCC_APB1PeriphResetCmd
     /tmp/ccq26ckz.s:926    .text:00000298 $d
     /tmp/ccq26ckz.s:930    .text:0000029c $t
     /tmp/ccq26ckz.s:935    .text:0000029c RCC_BackupResetCmd
     /tmp/ccq26ckz.s:950    .text:000002a4 $d
     /tmp/ccq26ckz.s:954    .text:000002a8 $t
     /tmp/ccq26ckz.s:959    .text:000002a8 RCC_ClockSecuritySystemCmd
     /tmp/ccq26ckz.s:974    .text:000002b0 $d
     /tmp/ccq26ckz.s:978    .text:000002b4 $t
     /tmp/ccq26ckz.s:983    .text:000002b4 RCC_MCOConfig
     /tmp/ccq26ckz.s:998    .text:000002bc $d
     /tmp/ccq26ckz.s:1002   .text:000002c0 $t
     /tmp/ccq26ckz.s:1007   .text:000002c0 RCC_GetFlagStatus
     /tmp/ccq26ckz.s:1048   .text:000002e4 $d
     /tmp/ccq26ckz.s:1052   .text:000002e8 $t
     /tmp/ccq26ckz.s:1057   .text:000002e8 RCC_WaitForHSEStartUp
     /tmp/ccq26ckz.s:1111   .text:00000318 RCC_ClearFlag
     /tmp/ccq26ckz.s:1127   .text:00000324 $d
     /tmp/ccq26ckz.s:1131   .text:00000328 $t
     /tmp/ccq26ckz.s:1136   .text:00000328 RCC_GetITStatus
     /tmp/ccq26ckz.s:1159   .text:00000338 $d
     /tmp/ccq26ckz.s:1163   .text:0000033c $t
     /tmp/ccq26ckz.s:1168   .text:0000033c RCC_ClearITPendingBit
     /tmp/ccq26ckz.s:1183   .text:00000344 $d
     /tmp/ccq26ckz.s:1191   .data:00000000 APBAHBPrescTable
     /tmp/ccq26ckz.s:1210   .data:00000010 ADCPrescTable
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
