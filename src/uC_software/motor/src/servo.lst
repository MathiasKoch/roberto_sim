   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"servo.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZN5servo9motorTypeEv,"axG",%progbits,_ZN5servo9motorTypeEv,comdat
  20              		.align	1
  21              		.weak	_ZN5servo9motorTypeEv
  22              		.thumb
  23              		.thumb_func
  25              	_ZN5servo9motorTypeEv:
  26              		.fnstart
  27              	.LFB29:
  28              		.file 1 "./inc/servo.h"
   1:./inc/servo.h **** 
   2:./inc/servo.h **** #ifndef _servo_H
   3:./inc/servo.h **** #define	_servo_H
   4:./inc/servo.h **** 
   5:./inc/servo.h **** #include <stm32f10x.h>
   6:./inc/servo.h **** #include "motor.h"
   7:./inc/servo.h **** 
   8:./inc/servo.h **** class servo : public motor
   9:./inc/servo.h **** {
  10:./inc/servo.h **** public:
  11:./inc/servo.h ****     servo(motorSettings *settings);
  12:./inc/servo.h ****     ~servo();
  13:./inc/servo.h **** 
  14:./inc/servo.h ****     virtual void setReference(float setPoint);
  15:./inc/servo.h ****     virtual float getReference();
  16:./inc/servo.h ****     virtual char* motorName();
  17:./inc/servo.h ****     virtual float update(float dt, bool connected);
  18:./inc/servo.h **** 
  19:./inc/servo.h ****     virtual int motorType() { return MOTOR_TYPE_SERVO; }
  29              		.loc 1 19 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              		.loc 1 19 0
  36 0000 0120     		movs	r0, #1
  37              	.LVL1:
  38 0002 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE29:
  41              		.cantunwind
  42              		.fnend
  44              		.global	__aeabi_f2iz
  45              		.text
  46              		.align	1
  47              		.global	_ZN5servo12setReferenceEf
  48              		.thumb
  49              		.thumb_func
  51              	_ZN5servo12setReferenceEf:
  52              		.fnstart
  53              	.LFB38:
  54              		.file 2 "src/servo.cpp"
   1:src/servo.cpp **** 
   2:src/servo.cpp **** #include "servo.h"
   3:src/servo.cpp **** #include "motorSettings.h"
   4:src/servo.cpp **** 
   5:src/servo.cpp **** 
   6:src/servo.cpp **** servo::servo(motorSettings *settings) : motor(settings)
   7:src/servo.cpp **** {
   8:src/servo.cpp **** 
   9:src/servo.cpp **** }
  10:src/servo.cpp **** 
  11:src/servo.cpp **** servo::~servo()
  12:src/servo.cpp **** {
  13:src/servo.cpp **** }
  14:src/servo.cpp **** 
  15:src/servo.cpp **** bool servo::motorInit()
  16:src/servo.cpp **** {
  17:src/servo.cpp **** 
  18:src/servo.cpp **** 	GPIO_InitTypeDef GPIO_InitStructure;
  19:src/servo.cpp **** 
  20:src/servo.cpp **** 	GPIO_InitStructure.GPIO_Pin = m_settings->m_ServoPin;
  21:src/servo.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  22:src/servo.cpp **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  23:src/servo.cpp **** 	GPIO_Init(m_settings->m_ServoPort, &GPIO_InitStructure);
  24:src/servo.cpp **** 
  25:src/servo.cpp **** 
  26:src/servo.cpp **** 
  27:src/servo.cpp **** 
  28:src/servo.cpp **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
  29:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_Period = 59999; // ie 0..29999
  30:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_Prescaler = 23;
  31:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
  32:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
  33:src/servo.cpp **** 
  34:src/servo.cpp **** 	TIM_TimeBaseInit(m_settings->m_Timer, &TIM_TimeBaseStructure);
  35:src/servo.cpp **** 
  36:src/servo.cpp **** 
  37:src/servo.cpp **** 	TIM_OCInitTypeDef TIM_OCInitStructure;
  38:src/servo.cpp **** 	TIM_OCStructInit(&TIM_OCInitStructure); // clears the other 4 fields not used here
  39:src/servo.cpp **** 
  40:src/servo.cpp **** 	/* PWM1 Mode configuration: Channel1 */
  41:src/servo.cpp **** 	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
  42:src/servo.cpp **** 	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
  43:src/servo.cpp **** 	TIM_OCInitStructure.TIM_Pulse = 0x0000;
  44:src/servo.cpp **** 	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
  45:src/servo.cpp **** 
  46:src/servo.cpp **** 	switch(m_settings->m_TimerChannel){
  47:src/servo.cpp **** 		case 1:
  48:src/servo.cpp **** 			TIM_OC1Init(m_settings->m_Timer, &TIM_OCInitStructure);
  49:src/servo.cpp **** 			TIM_OC1PreloadConfig(m_settings->m_Timer, TIM_OCPreload_Enable);
  50:src/servo.cpp **** 			break;
  51:src/servo.cpp **** 		case 2:
  52:src/servo.cpp **** 			TIM_OC2Init(m_settings->m_Timer, &TIM_OCInitStructure);
  53:src/servo.cpp **** 			TIM_OC2PreloadConfig(m_settings->m_Timer, TIM_OCPreload_Enable);
  54:src/servo.cpp **** 			break;
  55:src/servo.cpp **** 		case 3:
  56:src/servo.cpp **** 			TIM_OC3Init(m_settings->m_Timer, &TIM_OCInitStructure);
  57:src/servo.cpp **** 			TIM_OC3PreloadConfig(m_settings->m_Timer, TIM_OCPreload_Enable);
  58:src/servo.cpp **** 			break;
  59:src/servo.cpp **** 		case 4:
  60:src/servo.cpp **** 			TIM_OC4Init(m_settings->m_Timer, &TIM_OCInitStructure);
  61:src/servo.cpp **** 			TIM_OC4PreloadConfig(m_settings->m_Timer, TIM_OCPreload_Enable);
  62:src/servo.cpp **** 			break;
  63:src/servo.cpp **** 		default:
  64:src/servo.cpp **** 			return false;
  65:src/servo.cpp **** 	}
  66:src/servo.cpp **** 
  67:src/servo.cpp **** 
  68:src/servo.cpp **** 	TIM_ARRPreloadConfig(m_settings->m_Timer, ENABLE);
  69:src/servo.cpp **** 
  70:src/servo.cpp **** 	/* TIM Main Output Enable */
  71:src/servo.cpp **** 	TIM_CtrlPWMOutputs(m_settings->m_Timer, ENABLE);
  72:src/servo.cpp **** 
  73:src/servo.cpp **** 	/* TIM enable counter */
  74:src/servo.cpp **** 	TIM_Cmd(m_settings->m_Timer, ENABLE);
  75:src/servo.cpp **** 
  76:src/servo.cpp **** 	return true;
  77:src/servo.cpp **** }
  78:src/servo.cpp **** 
  79:src/servo.cpp **** void servo::setReference(float setPoint){
  55              		.loc 2 79 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              	.LVL2:
  60 0000 10B5     		push	{r4, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 4, -8
  64              		.cfi_offset 14, -4
  65              		.loc 2 79 0
  66 0002 0446     		mov	r4, r0
  80:src/servo.cpp **** 	pos = (int)setPoint;
  67              		.loc 2 80 0
  68 0004 0846     		mov	r0, r1
  69              	.LVL3:
  70 0006 FFF7FEFF 		bl	__aeabi_f2iz
  71              	.LVL4:
  81:src/servo.cpp **** 	if(pos > 180){
  72              		.loc 2 81 0
  73 000a B428     		cmp	r0, #180
  74 000c 01DD     		ble	.L3
  82:src/servo.cpp **** 		pos = 180;
  75              		.loc 2 82 0
  76 000e B423     		movs	r3, #180
  77 0010 04E0     		b	.L6
  78              	.L3:
  83:src/servo.cpp **** 	}else if(pos < 0){
  79              		.loc 2 83 0
  80 0012 0028     		cmp	r0, #0
  81 0014 01DB     		blt	.L5
  80:src/servo.cpp **** 	if(pos > 180){
  82              		.loc 2 80 0
  83 0016 A060     		str	r0, [r4, #8]
  84 0018 10BD     		pop	{r4, pc}
  85              	.LVL5:
  86              	.L5:
  84:src/servo.cpp **** 		pos = 0;
  87              		.loc 2 84 0
  88 001a 0023     		movs	r3, #0
  89              	.L6:
  90 001c A360     		str	r3, [r4, #8]
  91 001e 10BD     		pop	{r4, pc}
  92              		.cfi_endproc
  93              	.LFE38:
  94              		.cantunwind
  95              		.fnend
  97              		.global	__aeabi_i2f
  98              		.align	1
  99              		.global	_ZN5servo12getReferenceEv
 100              		.thumb
 101              		.thumb_func
 103              	_ZN5servo12getReferenceEv:
 104              		.fnstart
 105              	.LFB39:
  85:src/servo.cpp **** 	}
  86:src/servo.cpp **** }
  87:src/servo.cpp **** 
  88:src/servo.cpp **** float servo::getReference(){
 106              		.loc 2 88 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              	.LVL6:
 111 0020 08B5     		push	{r3, lr}
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 3, -8
 115              		.cfi_offset 14, -4
  89:src/servo.cpp **** 	return (float)pos;
 116              		.loc 2 89 0
 117 0022 8068     		ldr	r0, [r0, #8]
 118              	.LVL7:
 119 0024 FFF7FEFF 		bl	__aeabi_i2f
 120              	.LVL8:
  90:src/servo.cpp **** }
 121              		.loc 2 90 0
 122 0028 08BD     		pop	{r3, pc}
 123              		.cfi_endproc
 124              	.LFE39:
 125              		.cantunwind
 126              		.fnend
 128              		.align	1
 129              		.global	_ZN5servo9motorNameEv
 130              		.thumb
 131              		.thumb_func
 133              	_ZN5servo9motorNameEv:
 134              		.fnstart
 135              	.LFB40:
  91:src/servo.cpp **** char* servo::motorName(){
 136              		.loc 2 91 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 141              	.LVL9:
  92:src/servo.cpp **** 	return m_settings->m_motorName;
 142              		.loc 2 92 0
 143 002a 4368     		ldr	r3, [r0, #4]
  93:src/servo.cpp **** }
 144              		.loc 2 93 0
 145 002c 5868     		ldr	r0, [r3, #4]
 146              	.LVL10:
 147 002e 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE40:
 150              		.cantunwind
 151              		.fnend
 153              		.global	__aeabi_fmul
 154              		.global	__aeabi_fsub
 155              		.align	1
 156              		.global	_ZN5servo6updateEfb
 157              		.thumb
 158              		.thumb_func
 160              	_ZN5servo6updateEfb:
 161              		.fnstart
 162              	.LFB41:
  94:src/servo.cpp **** 
  95:src/servo.cpp **** float servo::update(float dt, bool connected){
 163              		.loc 2 95 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              	.LVL11:
  96:src/servo.cpp **** 	float LPF_Beta = 0.06;
  97:src/servo.cpp **** 	int sp = pos * (m_settings->m_ServoLimitMax - m_settings->m_ServoLimitMin) / 180 + m_settings->m_S
 168              		.loc 2 97 0
 169 0030 4268     		ldr	r2, [r0, #4]
 170              	.LVL12:
  95:src/servo.cpp **** 	float LPF_Beta = 0.06;
 171              		.loc 2 95 0
 172 0032 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 173              	.LCFI2:
 174              		.cfi_def_cfa_offset 24
 175              		.cfi_offset 3, -24
 176              		.cfi_offset 4, -20
 177              		.cfi_offset 5, -16
 178              		.cfi_offset 6, -12
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181              		.loc 2 97 0
 182 0034 1169     		ldr	r1, [r2, #16]
 183              	.LVL13:
 184 0036 5569     		ldr	r5, [r2, #20]
 185 0038 8068     		ldr	r0, [r0, #8]
 186              	.LVL14:
 187 003a 491B     		subs	r1, r1, r5
 188 003c 4143     		muls	r1, r0, r1
 189 003e B424     		movs	r4, #180
 190 0040 91FBF4F1 		sdiv	r1, r1, r4
 191 0044 4C19     		adds	r4, r1, r5
 192              	.LVL15:
  98:src/servo.cpp **** 	int curr, newVal;
  99:src/servo.cpp **** 	switch(m_settings->m_TimerChannel){
 193              		.loc 2 99 0
 194 0046 D168     		ldr	r1, [r2, #12]
 195 0048 0139     		subs	r1, r1, #1
 196 004a 0329     		cmp	r1, #3
 197 004c 60D8     		bhi	.L11
 198 004e DFE801F0 		tbb	[pc, r1]
 199              	.L13:
 200 0052 02       		.byte	(.L12-.L13)/2
 201 0053 19       		.byte	(.L14-.L13)/2
 202 0054 30       		.byte	(.L15-.L13)/2
 203 0055 47       		.byte	(.L16-.L13)/2
 204              		.p2align 1
 205              	.L12:
 100:src/servo.cpp **** 		case 1:
 101:src/servo.cpp **** 			curr = (m_settings->m_Timer)->CCR1;
 206              		.loc 2 101 0
 207 0056 9668     		ldr	r6, [r2, #8]
 208 0058 B58E     		ldrh	r5, [r6, #52]
 209 005a ADB2     		uxth	r5, r5
 210              	.LVL16:
 102:src/servo.cpp **** 			newVal = (int)(curr - (LPF_Beta * (curr - sp)));
 211              		.loc 2 102 0
 212 005c 2846     		mov	r0, r5
 213 005e FFF7FEFF 		bl	__aeabi_i2f
 214              	.LVL17:
 215 0062 0746     		mov	r7, r0
 216 0064 281B     		subs	r0, r5, r4
 217 0066 FFF7FEFF 		bl	__aeabi_i2f
 218              	.LVL18:
 219 006a 2B49     		ldr	r1, .L17
 220 006c FFF7FEFF 		bl	__aeabi_fmul
 221              	.LVL19:
 222 0070 0146     		mov	r1, r0
 223 0072 3846     		mov	r0, r7
 224 0074 FFF7FEFF 		bl	__aeabi_fsub
 225              	.LVL20:
 226 0078 FFF7FEFF 		bl	__aeabi_f2iz
 227              	.LVL21:
 103:src/servo.cpp **** 			(m_settings->m_Timer)->CCR1 = newVal;
 228              		.loc 2 103 0
 229 007c 82B2     		uxth	r2, r0
 102:src/servo.cpp **** 			newVal = (int)(curr - (LPF_Beta * (curr - sp)));
 230              		.loc 2 102 0
 231 007e 0346     		mov	r3, r0
 232              	.LVL22:
 233              		.loc 2 103 0
 234 0080 B286     		strh	r2, [r6, #52]	@ movhi
 104:src/servo.cpp **** 			break;
 235              		.loc 2 104 0
 236 0082 45E0     		b	.L11
 237              	.LVL23:
 238              	.L14:
 105:src/servo.cpp **** 		case 2:
 106:src/servo.cpp **** 			curr = (m_settings->m_Timer)->CCR2;
 239              		.loc 2 106 0
 240 0084 9668     		ldr	r6, [r2, #8]
 241 0086 358F     		ldrh	r5, [r6, #56]
 242 0088 ADB2     		uxth	r5, r5
 243              	.LVL24:
 107:src/servo.cpp **** 			newVal = (int)(curr - (LPF_Beta * (curr - sp)));
 244              		.loc 2 107 0
 245 008a 2846     		mov	r0, r5
 246 008c FFF7FEFF 		bl	__aeabi_i2f
 247              	.LVL25:
 248 0090 0746     		mov	r7, r0
 249 0092 281B     		subs	r0, r5, r4
 250 0094 FFF7FEFF 		bl	__aeabi_i2f
 251              	.LVL26:
 252 0098 1F49     		ldr	r1, .L17
 253 009a FFF7FEFF 		bl	__aeabi_fmul
 254              	.LVL27:
 255 009e 0146     		mov	r1, r0
 256 00a0 3846     		mov	r0, r7
 257 00a2 FFF7FEFF 		bl	__aeabi_fsub
 258              	.LVL28:
 259 00a6 FFF7FEFF 		bl	__aeabi_f2iz
 260              	.LVL29:
 108:src/servo.cpp **** 			(m_settings->m_Timer)->CCR2 = newVal;
 261              		.loc 2 108 0
 262 00aa 82B2     		uxth	r2, r0
 107:src/servo.cpp **** 			newVal = (int)(curr - (LPF_Beta * (curr - sp)));
 263              		.loc 2 107 0
 264 00ac 0346     		mov	r3, r0
 265              	.LVL30:
 266              		.loc 2 108 0
 267 00ae 3287     		strh	r2, [r6, #56]	@ movhi
 109:src/servo.cpp **** 			break;
 268              		.loc 2 109 0
 269 00b0 2EE0     		b	.L11
 270              	.LVL31:
 271              	.L15:
 110:src/servo.cpp **** 		case 3:
 111:src/servo.cpp **** 			curr = (m_settings->m_Timer)->CCR3;
 272              		.loc 2 111 0
 273 00b2 9668     		ldr	r6, [r2, #8]
 274 00b4 B58F     		ldrh	r5, [r6, #60]
 275 00b6 ADB2     		uxth	r5, r5
 276              	.LVL32:
 112:src/servo.cpp **** 			newVal = (int)(curr - (LPF_Beta * (curr - sp)));
 277              		.loc 2 112 0
 278 00b8 2846     		mov	r0, r5
 279 00ba FFF7FEFF 		bl	__aeabi_i2f
 280              	.LVL33:
 281 00be 0746     		mov	r7, r0
 282 00c0 281B     		subs	r0, r5, r4
 283 00c2 FFF7FEFF 		bl	__aeabi_i2f
 284              	.LVL34:
 285 00c6 1449     		ldr	r1, .L17
 286 00c8 FFF7FEFF 		bl	__aeabi_fmul
 287              	.LVL35:
 288 00cc 0146     		mov	r1, r0
 289 00ce 3846     		mov	r0, r7
 290 00d0 FFF7FEFF 		bl	__aeabi_fsub
 291              	.LVL36:
 292 00d4 FFF7FEFF 		bl	__aeabi_f2iz
 293              	.LVL37:
 113:src/servo.cpp **** 			(m_settings->m_Timer)->CCR3 = newVal;
 294              		.loc 2 113 0
 295 00d8 82B2     		uxth	r2, r0
 112:src/servo.cpp **** 			newVal = (int)(curr - (LPF_Beta * (curr - sp)));
 296              		.loc 2 112 0
 297 00da 0346     		mov	r3, r0
 298              	.LVL38:
 299              		.loc 2 113 0
 300 00dc B287     		strh	r2, [r6, #60]	@ movhi
 114:src/servo.cpp **** 			break;
 301              		.loc 2 114 0
 302 00de 17E0     		b	.L11
 303              	.LVL39:
 304              	.L16:
 115:src/servo.cpp **** 		case 4:
 116:src/servo.cpp **** 			curr = (m_settings->m_Timer)->CCR4;
 305              		.loc 2 116 0
 306 00e0 9668     		ldr	r6, [r2, #8]
 307 00e2 B6F84050 		ldrh	r5, [r6, #64]
 308 00e6 ADB2     		uxth	r5, r5
 309              	.LVL40:
 117:src/servo.cpp **** 			newVal = (int)(curr - (LPF_Beta * (curr - sp)));
 310              		.loc 2 117 0
 311 00e8 2846     		mov	r0, r5
 312 00ea FFF7FEFF 		bl	__aeabi_i2f
 313              	.LVL41:
 314 00ee 0746     		mov	r7, r0
 315 00f0 281B     		subs	r0, r5, r4
 316 00f2 FFF7FEFF 		bl	__aeabi_i2f
 317              	.LVL42:
 318 00f6 0849     		ldr	r1, .L17
 319 00f8 FFF7FEFF 		bl	__aeabi_fmul
 320              	.LVL43:
 321 00fc 0146     		mov	r1, r0
 322 00fe 3846     		mov	r0, r7
 323 0100 FFF7FEFF 		bl	__aeabi_fsub
 324              	.LVL44:
 325 0104 FFF7FEFF 		bl	__aeabi_f2iz
 326              	.LVL45:
 327 0108 0346     		mov	r3, r0
 328              	.LVL46:
 118:src/servo.cpp **** 			(m_settings->m_Timer)->CCR4 = newVal;
 329              		.loc 2 118 0
 330 010a 82B2     		uxth	r2, r0
 331 010c A6F84020 		strh	r2, [r6, #64]	@ movhi
 332              	.LVL47:
 333              	.L11:
 119:src/servo.cpp **** 			break;
 120:src/servo.cpp **** 	}
 121:src/servo.cpp **** 	return newVal;
 334              		.loc 2 121 0
 335 0110 1846     		mov	r0, r3
 336 0112 FFF7FEFF 		bl	__aeabi_i2f
 337              	.LVL48:
 122:src/servo.cpp **** }...
 338              		.loc 2 122 0
 339 0116 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 340              	.LVL49:
 341              	.L18:
 342              		.align	2
 343              	.L17:
 344 0118 8FC2753D 		.word	1031127695
 345              		.cfi_endproc
 346              	.LFE41:
 347              		.cantunwind
 348              		.fnend
 350              		.align	1
 351              		.global	_ZN5servoD2Ev
 352              		.thumb
 353              		.thumb_func
 355              	_ZN5servoD2Ev:
 356              		.fnstart
 357              	.LFB34:
  11:src/servo.cpp **** servo::~servo()
 358              		.loc 2 11 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              	.LVL50:
 363 011c 10B5     		push	{r4, lr}
 364              		.save {r4, lr}
 365              	.LCFI3:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 4, -8
 368              		.cfi_offset 14, -4
  11:src/servo.cpp **** servo::~servo()
 369              		.loc 2 11 0
 370 011e 0446     		mov	r4, r0
 371              	.LBB2:
 372 0120 024B     		ldr	r3, .L20
 373 0122 0360     		str	r3, [r0]
 374 0124 FFF7FEFF 		bl	_ZN5motorD2Ev
 375              	.LVL51:
 376              	.LBE2:
  13:src/servo.cpp **** }
 377              		.loc 2 13 0
 378 0128 2046     		mov	r0, r4
 379 012a 10BD     		pop	{r4, pc}
 380              	.LVL52:
 381              	.L21:
 382              		.align	2
 383              	.L20:
 384 012c 08000000 		.word	.LANCHOR0+8
 385              		.cfi_endproc
 386              	.LFE34:
 387              		.fnend
 389              		.global	_ZN5servoD1Ev
 390              		.thumb_set _ZN5servoD1Ev,_ZN5servoD2Ev
 391              		.align	1
 392              		.global	_ZN5servoD0Ev
 393              		.thumb
 394              		.thumb_func
 396              	_ZN5servoD0Ev:
 397              		.fnstart
 398              	.LFB36:
  11:src/servo.cpp **** servo::~servo()
 399              		.loc 2 11 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              	.LVL53:
 404 0130 10B5     		push	{r4, lr}
 405              		.save {r4, lr}
 406              	.LCFI4:
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 4, -8
 409              		.cfi_offset 14, -4
  11:src/servo.cpp **** servo::~servo()
 410              		.loc 2 11 0
 411 0132 0446     		mov	r4, r0
  13:src/servo.cpp **** }
 412              		.loc 2 13 0
 413 0134 FFF7FEFF 		bl	_ZN5servoD1Ev
 414              	.LVL54:
 415 0138 2046     		mov	r0, r4
 416 013a FFF7FEFF 		bl	_ZdlPv
 417              	.LVL55:
 418 013e 2046     		mov	r0, r4
 419 0140 10BD     		pop	{r4, pc}
 420              		.cfi_endproc
 421              	.LFE36:
 422              		.fnend
 424              		.align	1
 425              		.global	_ZN5servo9motorInitEv
 426              		.thumb
 427              		.thumb_func
 429              	_ZN5servo9motorInitEv:
 430              		.fnstart
 431              	.LFB37:
  16:src/servo.cpp **** {
 432              		.loc 2 16 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 32
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              	.LVL56:
 437 0142 30B5     		push	{r4, r5, lr}
 438              		.save {r4, r5, lr}
 439              	.LCFI5:
 440              		.cfi_def_cfa_offset 12
 441              		.cfi_offset 4, -12
 442              		.cfi_offset 5, -8
 443              		.cfi_offset 14, -4
  20:src/servo.cpp **** 	GPIO_InitStructure.GPIO_Pin = m_settings->m_ServoPin;
 444              		.loc 2 20 0
 445 0144 4368     		ldr	r3, [r0, #4]
  16:src/servo.cpp **** {
 446              		.loc 2 16 0
 447              		.pad #36
 448 0146 89B0     		sub	sp, sp, #36
 449              	.LCFI6:
 450              		.cfi_def_cfa_offset 48
  20:src/servo.cpp **** 	GPIO_InitStructure.GPIO_Pin = m_settings->m_ServoPin;
 451              		.loc 2 20 0
 452 0148 9A69     		ldr	r2, [r3, #24]
  16:src/servo.cpp **** {
 453              		.loc 2 16 0
 454 014a 0446     		mov	r4, r0
  20:src/servo.cpp **** 	GPIO_InitStructure.GPIO_Pin = m_settings->m_ServoPin;
 455              		.loc 2 20 0
 456 014c ADF80020 		strh	r2, [sp]	@ movhi
  21:src/servo.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 457              		.loc 2 21 0
 458 0150 1822     		movs	r2, #24
  23:src/servo.cpp **** 	GPIO_Init(m_settings->m_ServoPort, &GPIO_InitStructure);
 459              		.loc 2 23 0
 460 0152 D869     		ldr	r0, [r3, #28]
 461              	.LVL57:
  21:src/servo.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 462              		.loc 2 21 0
 463 0154 8DF80320 		strb	r2, [sp, #3]
  23:src/servo.cpp **** 	GPIO_Init(m_settings->m_ServoPort, &GPIO_InitStructure);
 464              		.loc 2 23 0
 465 0158 6946     		mov	r1, sp
  22:src/servo.cpp **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 466              		.loc 2 22 0
 467 015a 0322     		movs	r2, #3
 468 015c 8DF80220 		strb	r2, [sp, #2]
  23:src/servo.cpp **** 	GPIO_Init(m_settings->m_ServoPort, &GPIO_InitStructure);
 469              		.loc 2 23 0
 470 0160 FFF7FEFF 		bl	GPIO_Init
 471              	.LVL58:
  29:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_Period = 59999; // ie 0..29999
 472              		.loc 2 29 0
 473 0164 4EF65F23 		movw	r3, #59999
 474 0168 ADF80830 		strh	r3, [sp, #8]	@ movhi
  30:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_Prescaler = 23;
 475              		.loc 2 30 0
 476 016c 1723     		movs	r3, #23
 477 016e ADF80430 		strh	r3, [sp, #4]	@ movhi
  34:src/servo.cpp **** 	TIM_TimeBaseInit(m_settings->m_Timer, &TIM_TimeBaseStructure);
 478              		.loc 2 34 0
 479 0172 6368     		ldr	r3, [r4, #4]
  31:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
 480              		.loc 2 31 0
 481 0174 0025     		movs	r5, #0
  34:src/servo.cpp **** 	TIM_TimeBaseInit(m_settings->m_Timer, &TIM_TimeBaseStructure);
 482              		.loc 2 34 0
 483 0176 9868     		ldr	r0, [r3, #8]
 484 0178 01A9     		add	r1, sp, #4
  31:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
 485              		.loc 2 31 0
 486 017a ADF80A50 		strh	r5, [sp, #10]	@ movhi
  32:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
 487              		.loc 2 32 0
 488 017e ADF80650 		strh	r5, [sp, #6]	@ movhi
  34:src/servo.cpp **** 	TIM_TimeBaseInit(m_settings->m_Timer, &TIM_TimeBaseStructure);
 489              		.loc 2 34 0
 490 0182 FFF7FEFF 		bl	TIM_TimeBaseInit
 491              	.LVL59:
  38:src/servo.cpp **** 	TIM_OCStructInit(&TIM_OCInitStructure); // clears the other 4 fields not used here
 492              		.loc 2 38 0
 493 0186 04A8     		add	r0, sp, #16
 494 0188 FFF7FEFF 		bl	TIM_OCStructInit
 495              	.LVL60:
  41:src/servo.cpp **** 	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
 496              		.loc 2 41 0
 497 018c 6023     		movs	r3, #96
 498 018e ADF81030 		strh	r3, [sp, #16]	@ movhi
  42:src/servo.cpp **** 	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
 499              		.loc 2 42 0
 500 0192 0123     		movs	r3, #1
 501 0194 ADF81230 		strh	r3, [sp, #18]	@ movhi
  46:src/servo.cpp **** 	switch(m_settings->m_TimerChannel){
 502              		.loc 2 46 0
 503 0198 6368     		ldr	r3, [r4, #4]
  43:src/servo.cpp **** 	TIM_OCInitStructure.TIM_Pulse = 0x0000;
 504              		.loc 2 43 0
 505 019a ADF81650 		strh	r5, [sp, #22]	@ movhi
  46:src/servo.cpp **** 	switch(m_settings->m_TimerChannel){
 506              		.loc 2 46 0
 507 019e DA68     		ldr	r2, [r3, #12]
  44:src/servo.cpp **** 	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
 508              		.loc 2 44 0
 509 01a0 ADF81850 		strh	r5, [sp, #24]	@ movhi
  46:src/servo.cpp **** 	switch(m_settings->m_TimerChannel){
 510              		.loc 2 46 0
 511 01a4 013A     		subs	r2, r2, #1
 512 01a6 032A     		cmp	r2, #3
 513 01a8 3BD8     		bhi	.L31
 514 01aa DFE802F0 		tbb	[pc, r2]
 515              	.L26:
 516 01ae 02       		.byte	(.L25-.L26)/2
 517 01af 0C       		.byte	(.L27-.L26)/2
 518 01b0 16       		.byte	(.L28-.L26)/2
 519 01b1 20       		.byte	(.L29-.L26)/2
 520              		.p2align 1
 521              	.L25:
  48:src/servo.cpp **** 			TIM_OC1Init(m_settings->m_Timer, &TIM_OCInitStructure);
 522              		.loc 2 48 0
 523 01b2 04A9     		add	r1, sp, #16
 524 01b4 9868     		ldr	r0, [r3, #8]
 525 01b6 FFF7FEFF 		bl	TIM_OC1Init
 526              	.LVL61:
  49:src/servo.cpp **** 			TIM_OC1PreloadConfig(m_settings->m_Timer, TIM_OCPreload_Enable);
 527              		.loc 2 49 0
 528 01ba 6368     		ldr	r3, [r4, #4]
 529 01bc 0821     		movs	r1, #8
 530 01be 9868     		ldr	r0, [r3, #8]
 531 01c0 FFF7FEFF 		bl	TIM_OC1PreloadConfig
 532              	.LVL62:
 533 01c4 1CE0     		b	.L30
 534              	.L27:
  52:src/servo.cpp **** 			TIM_OC2Init(m_settings->m_Timer, &TIM_OCInitStructure);
 535              		.loc 2 52 0
 536 01c6 04A9     		add	r1, sp, #16
 537 01c8 9868     		ldr	r0, [r3, #8]
 538 01ca FFF7FEFF 		bl	TIM_OC2Init
 539              	.LVL63:
  53:src/servo.cpp **** 			TIM_OC2PreloadConfig(m_settings->m_Timer, TIM_OCPreload_Enable);
 540              		.loc 2 53 0
 541 01ce 6368     		ldr	r3, [r4, #4]
 542 01d0 0821     		movs	r1, #8
 543 01d2 9868     		ldr	r0, [r3, #8]
 544 01d4 FFF7FEFF 		bl	TIM_OC2PreloadConfig
 545              	.LVL64:
 546 01d8 12E0     		b	.L30
 547              	.L28:
  56:src/servo.cpp **** 			TIM_OC3Init(m_settings->m_Timer, &TIM_OCInitStructure);
 548              		.loc 2 56 0
 549 01da 04A9     		add	r1, sp, #16
 550 01dc 9868     		ldr	r0, [r3, #8]
 551 01de FFF7FEFF 		bl	TIM_OC3Init
 552              	.LVL65:
  57:src/servo.cpp **** 			TIM_OC3PreloadConfig(m_settings->m_Timer, TIM_OCPreload_Enable);
 553              		.loc 2 57 0
 554 01e2 6368     		ldr	r3, [r4, #4]
 555 01e4 0821     		movs	r1, #8
 556 01e6 9868     		ldr	r0, [r3, #8]
 557 01e8 FFF7FEFF 		bl	TIM_OC3PreloadConfig
 558              	.LVL66:
 559 01ec 08E0     		b	.L30
 560              	.L29:
  60:src/servo.cpp **** 			TIM_OC4Init(m_settings->m_Timer, &TIM_OCInitStructure);
 561              		.loc 2 60 0
 562 01ee 9868     		ldr	r0, [r3, #8]
 563 01f0 04A9     		add	r1, sp, #16
 564 01f2 FFF7FEFF 		bl	TIM_OC4Init
 565              	.LVL67:
  61:src/servo.cpp **** 			TIM_OC4PreloadConfig(m_settings->m_Timer, TIM_OCPreload_Enable);
 566              		.loc 2 61 0
 567 01f6 6368     		ldr	r3, [r4, #4]
 568 01f8 0821     		movs	r1, #8
 569 01fa 9868     		ldr	r0, [r3, #8]
 570 01fc FFF7FEFF 		bl	TIM_OC4PreloadConfig
 571              	.LVL68:
 572              	.L30:
  68:src/servo.cpp **** 	TIM_ARRPreloadConfig(m_settings->m_Timer, ENABLE);
 573              		.loc 2 68 0
 574 0200 6368     		ldr	r3, [r4, #4]
 575 0202 0121     		movs	r1, #1
 576 0204 9868     		ldr	r0, [r3, #8]
 577 0206 FFF7FEFF 		bl	TIM_ARRPreloadConfig
 578              	.LVL69:
  71:src/servo.cpp **** 	TIM_CtrlPWMOutputs(m_settings->m_Timer, ENABLE);
 579              		.loc 2 71 0
 580 020a 6368     		ldr	r3, [r4, #4]
 581 020c 0121     		movs	r1, #1
 582 020e 9868     		ldr	r0, [r3, #8]
 583 0210 FFF7FEFF 		bl	TIM_CtrlPWMOutputs
 584              	.LVL70:
  74:src/servo.cpp **** 	TIM_Cmd(m_settings->m_Timer, ENABLE);
 585              		.loc 2 74 0
 586 0214 6368     		ldr	r3, [r4, #4]
 587 0216 0121     		movs	r1, #1
 588 0218 9868     		ldr	r0, [r3, #8]
 589 021a FFF7FEFF 		bl	TIM_Cmd
 590              	.LVL71:
  76:src/servo.cpp **** 	return true;
 591              		.loc 2 76 0
 592 021e 0120     		movs	r0, #1
 593 0220 00E0     		b	.L24
 594              	.L31:
  64:src/servo.cpp **** 			return false;
 595              		.loc 2 64 0
 596 0222 0020     		movs	r0, #0
 597              	.L24:
  77:src/servo.cpp **** }
 598              		.loc 2 77 0
 599 0224 09B0     		add	sp, sp, #36
 600              	.LCFI7:
 601              		.cfi_def_cfa_offset 12
 602              		@ sp needed
 603 0226 30BD     		pop	{r4, r5, pc}
 604              		.cfi_endproc
 605              	.LFE37:
 606              		.fnend
 608              		.align	1
 609              		.global	_ZN5servoC2EP13motorSettings
 610              		.thumb
 611              		.thumb_func
 613              	_ZN5servoC2EP13motorSettings:
 614              		.fnstart
 615              	.LFB31:
   6:src/servo.cpp **** servo::servo(motorSettings *settings) : motor(settings)
 616              		.loc 2 6 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              	.LVL72:
 621 0228 10B5     		push	{r4, lr}
 622              		.save {r4, lr}
 623              	.LCFI8:
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 4, -8
 626              		.cfi_offset 14, -4
   6:src/servo.cpp **** servo::servo(motorSettings *settings) : motor(settings)
 627              		.loc 2 6 0
 628 022a 0446     		mov	r4, r0
 629              	.LBB3:
 630 022c FFF7FEFF 		bl	_ZN5motorC2EP13motorSettings
 631              	.LVL73:
 632 0230 014B     		ldr	r3, .L33
 633              	.LBE3:
   9:src/servo.cpp **** }
 634              		.loc 2 9 0
 635 0232 2046     		mov	r0, r4
 636              	.LBB4:
   6:src/servo.cpp **** servo::servo(motorSettings *settings) : motor(settings)
 637              		.loc 2 6 0
 638 0234 2360     		str	r3, [r4]
 639              	.LBE4:
   9:src/servo.cpp **** }
 640              		.loc 2 9 0
 641 0236 10BD     		pop	{r4, pc}
 642              	.LVL74:
 643              	.L34:
 644              		.align	2
 645              	.L33:
 646 0238 08000000 		.word	.LANCHOR0+8
 647              		.cfi_endproc
 648              	.LFE31:
 649              		.fnend
 651              		.global	_ZN5servoC1EP13motorSettings
 652              		.thumb_set _ZN5servoC1EP13motorSettings,_ZN5servoC2EP13motorSettings
 653              		.global	_ZTS5servo
 654              		.global	_ZTI5servo
 655              		.global	_ZTV5servo
 656              		.section	.rodata
 657              		.align	2
 658              		.set	.LANCHOR0,. + 0
 661              	_ZTV5servo:
 662 0000 00000000 		.word	0
 663 0004 00000000 		.word	_ZTI5servo
 664 0008 00000000 		.word	_ZN5servoD1Ev
 665 000c 00000000 		.word	_ZN5servoD0Ev
 666 0010 00000000 		.word	_ZN5servo9motorTypeEv
 667 0014 00000000 		.word	_ZN5servo9motorInitEv
 668 0018 00000000 		.word	_ZN5servo9motorNameEv
 669 001c 00000000 		.word	_ZN5servo12setReferenceEf
 670 0020 00000000 		.word	_ZN5servo12getReferenceEv
 671 0024 00000000 		.word	_ZN5servo6updateEfb
 674              	_ZTS5servo:
 675 0028 35736572 		.ascii	"5servo\000"
 675      766F00
 676 002f 00       		.space	1
 679              	_ZTI5servo:
 680 0030 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 681 0034 00000000 		.word	_ZTS5servo
 682 0038 00000000 		.word	_ZTI5motor
 683              		.text
 684              	.Letext0:
 685              		.file 3 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types.h"
 686              		.file 4 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 687              		.file 5 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 688              		.file 6 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 689              		.file 7 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_tim.h"
 690              		.file 8 "./inc/motorSettings.h"
 691              		.file 9 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 servo.cpp
     /tmp/ccKYfwy1.s:20     .text._ZN5servo9motorTypeEv:00000000 $t
     /tmp/ccKYfwy1.s:25     .text._ZN5servo9motorTypeEv:00000000 _ZN5servo9motorTypeEv
.ARM.exidx.text._ZN5servo9motorTypeEv:00000000 $d
     /tmp/ccKYfwy1.s:46     .text:00000000 $t
     /tmp/ccKYfwy1.s:51     .text:00000000 _ZN5servo12setReferenceEf
                       .ARM.exidx:00000000 $d
     /tmp/ccKYfwy1.s:103    .text:00000020 _ZN5servo12getReferenceEv
     /tmp/ccKYfwy1.s:133    .text:0000002a _ZN5servo9motorNameEv
     /tmp/ccKYfwy1.s:160    .text:00000030 _ZN5servo6updateEfb
     /tmp/ccKYfwy1.s:200    .text:00000052 $d
     /tmp/ccKYfwy1.s:204    .text:00000056 $t
     /tmp/ccKYfwy1.s:344    .text:00000118 $d
     /tmp/ccKYfwy1.s:350    .text:0000011c $t
     /tmp/ccKYfwy1.s:355    .text:0000011c _ZN5servoD2Ev
     /tmp/ccKYfwy1.s:384    .text:0000012c $d
     /tmp/ccKYfwy1.s:355    .text:0000011c _ZN5servoD1Ev
     /tmp/ccKYfwy1.s:391    .text:00000130 $t
     /tmp/ccKYfwy1.s:396    .text:00000130 _ZN5servoD0Ev
     /tmp/ccKYfwy1.s:429    .text:00000142 _ZN5servo9motorInitEv
     /tmp/ccKYfwy1.s:516    .text:000001ae $d
     /tmp/ccKYfwy1.s:520    .text:000001b2 $t
     /tmp/ccKYfwy1.s:613    .text:00000228 _ZN5servoC2EP13motorSettings
     /tmp/ccKYfwy1.s:646    .text:00000238 $d
     /tmp/ccKYfwy1.s:613    .text:00000228 _ZN5servoC1EP13motorSettings
     /tmp/ccKYfwy1.s:674    .rodata:00000028 _ZTS5servo
     /tmp/ccKYfwy1.s:679    .rodata:00000030 _ZTI5servo
     /tmp/ccKYfwy1.s:661    .rodata:00000000 _ZTV5servo
     /tmp/ccKYfwy1.s:657    .rodata:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_f2iz
__aeabi_i2f
__aeabi_fmul
__aeabi_fsub
_ZN5motorD2Ev
__aeabi_unwind_cpp_pr0
_ZdlPv
GPIO_Init
TIM_TimeBaseInit
TIM_OCStructInit
TIM_OC1Init
TIM_OC1PreloadConfig
TIM_OC2Init
TIM_OC2PreloadConfig
TIM_OC3Init
TIM_OC3PreloadConfig
TIM_OC4Init
TIM_OC4PreloadConfig
TIM_ARRPreloadConfig
TIM_CtrlPWMOutputs
TIM_Cmd
_ZN5motorC2EP13motorSettings
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTI5motor
