   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  20              		.align	1
  21              		.weak	_ZNK8std_msgs4Time9serializeEPh
  22              		.thumb
  23              		.thumb_func
  25              	_ZNK8std_msgs4Time9serializeEPh:
  26              		.fnstart
  27              	.LFB1046:
  28              		.file 1 "./lib/ros_lib/std_msgs/Time.h"
   1:./lib/ros_lib/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:./lib/ros_lib/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:./lib/ros_lib/std_msgs/Time.h **** 
   4:./lib/ros_lib/std_msgs/Time.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Time.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Time.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Time.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Time.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Time.h **** 
  10:./lib/ros_lib/std_msgs/Time.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Time.h **** {
  12:./lib/ros_lib/std_msgs/Time.h **** 
  13:./lib/ros_lib/std_msgs/Time.h ****   class Time : public ros::Msg
  14:./lib/ros_lib/std_msgs/Time.h ****   {
  15:./lib/ros_lib/std_msgs/Time.h ****     public:
  16:./lib/ros_lib/std_msgs/Time.h ****       ros::Time data;
  17:./lib/ros_lib/std_msgs/Time.h **** 
  18:./lib/ros_lib/std_msgs/Time.h ****     Time():
  19:./lib/ros_lib/std_msgs/Time.h ****       data()
  20:./lib/ros_lib/std_msgs/Time.h ****     {
  21:./lib/ros_lib/std_msgs/Time.h ****     }
  22:./lib/ros_lib/std_msgs/Time.h **** 
  23:./lib/ros_lib/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  29              		.loc 1 23 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  24:./lib/ros_lib/std_msgs/Time.h ****     {
  25:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  26:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  35              		.loc 1 26 0
  36 0000 4368     		ldr	r3, [r0, #4]
  37 0002 0B70     		strb	r3, [r1]
  27:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  38              		.loc 1 27 0
  39 0004 4368     		ldr	r3, [r0, #4]
  40 0006 1B0A     		lsrs	r3, r3, #8
  41 0008 4B70     		strb	r3, [r1, #1]
  28:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  42              		.loc 1 28 0
  43 000a C388     		ldrh	r3, [r0, #6]
  44 000c 8B70     		strb	r3, [r1, #2]
  29:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  45              		.loc 1 29 0
  46 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  47 0010 CB70     		strb	r3, [r1, #3]
  48              	.LVL1:
  30:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  31:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  49              		.loc 1 31 0
  50 0012 8368     		ldr	r3, [r0, #8]
  51 0014 0B71     		strb	r3, [r1, #4]
  32:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  52              		.loc 1 32 0
  53 0016 8368     		ldr	r3, [r0, #8]
  54 0018 1B0A     		lsrs	r3, r3, #8
  55 001a 4B71     		strb	r3, [r1, #5]
  33:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  56              		.loc 1 33 0
  57 001c 4389     		ldrh	r3, [r0, #10]
  58 001e 8B71     		strb	r3, [r1, #6]
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  59              		.loc 1 34 0
  60 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  35:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  36:./lib/ros_lib/std_msgs/Time.h ****       return offset;
  37:./lib/ros_lib/std_msgs/Time.h ****     }
  61              		.loc 1 37 0
  62 0022 0820     		movs	r0, #8
  63              	.LVL2:
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  64              		.loc 1 34 0
  65 0024 CB71     		strb	r3, [r1, #7]
  66              	.LVL3:
  67              		.loc 1 37 0
  68 0026 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE1046:
  71              		.cantunwind
  72              		.fnend
  74              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  75              		.align	1
  76              		.weak	_ZN8std_msgs4Time11deserializeEPh
  77              		.thumb
  78              		.thumb_func
  80              	_ZN8std_msgs4Time11deserializeEPh:
  81              		.fnstart
  82              	.LFB1047:
  38:./lib/ros_lib/std_msgs/Time.h **** 
  39:./lib/ros_lib/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  83              		.loc 1 39 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL4:
  40:./lib/ros_lib/std_msgs/Time.h ****     {
  41:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  42:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  89              		.loc 1 42 0
  90 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  91 0002 4360     		str	r3, [r0, #4]
  43:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  92              		.loc 1 43 0
  93 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  94 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  95 000a 4360     		str	r3, [r0, #4]
  44:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  96              		.loc 1 44 0
  97 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  98 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  99 0012 4360     		str	r3, [r0, #4]
  45:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 100              		.loc 1 45 0
 101 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 102 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 103 001a 4360     		str	r3, [r0, #4]
 104              	.LVL5:
  46:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  47:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 105              		.loc 1 47 0
 106 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 107 001e 8360     		str	r3, [r0, #8]
  48:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 108              		.loc 1 48 0
 109 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 110 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 111 0026 8360     		str	r3, [r0, #8]
  49:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 112              		.loc 1 49 0
 113 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 114 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 115 002e 8360     		str	r3, [r0, #8]
  50:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 116              		.loc 1 50 0
 117 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 118 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 119 0036 8360     		str	r3, [r0, #8]
 120              	.LVL6:
  51:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  52:./lib/ros_lib/std_msgs/Time.h ****      return offset;
  53:./lib/ros_lib/std_msgs/Time.h ****     }
 121              		.loc 1 53 0
 122 0038 0820     		movs	r0, #8
 123              	.LVL7:
 124 003a 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE1047:
 127              		.cantunwind
 128              		.fnend
 130              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 131              		.align	1
 132              		.weak	_ZN8std_msgs4Time7getTypeEv
 133              		.thumb
 134              		.thumb_func
 136              	_ZN8std_msgs4Time7getTypeEv:
 137              		.fnstart
 138              	.LFB1048:
  54:./lib/ros_lib/std_msgs/Time.h **** 
  55:./lib/ros_lib/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 139              		.loc 1 55 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144              	.LVL8:
 145              		.loc 1 55 0
 146 0000 0048     		ldr	r0, .L4
 147              	.LVL9:
 148 0002 7047     		bx	lr
 149              	.L5:
 150              		.align	2
 151              	.L4:
 152 0004 00000000 		.word	.LC0
 153              		.cfi_endproc
 154              	.LFE1048:
 155              		.cantunwind
 156              		.fnend
 158              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 159              		.align	1
 160              		.weak	_ZN8std_msgs4Time6getMD5Ev
 161              		.thumb
 162              		.thumb_func
 164              	_ZN8std_msgs4Time6getMD5Ev:
 165              		.fnstart
 166              	.LFB1049:
  56:./lib/ros_lib/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 167              		.loc 1 56 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL10:
 173              		.loc 1 56 0
 174 0000 0048     		ldr	r0, .L7
 175              	.LVL11:
 176 0002 7047     		bx	lr
 177              	.L8:
 178              		.align	2
 179              	.L7:
 180 0004 0E000000 		.word	.LC1
 181              		.cfi_endproc
 182              	.LFE1049:
 183              		.cantunwind
 184              		.fnend
 186              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 187              		.align	1
 188              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 189              		.thumb
 190              		.thumb_func
 192              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 193              		.fnstart
 194              	.LFB1055:
 195              		.file 2 "./lib/ros_lib/rosserial_msgs/TopicInfo.h"
   1:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   4:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   9:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** {
  11:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  12:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   {
  14:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  29:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     TopicInfo():
  30:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_id(0),
  31:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_name(""),
  32:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       message_type(""),
  33:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       md5sum(""),
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       buffer_size(0)
  35:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  36:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  37:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  39:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  40:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  43:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  46:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  51:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  56:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  59:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
  60:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
  61:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  62:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  68:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  69:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       return offset;
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  71:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
  73:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  74:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
  77:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  78:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
  80:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  83:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
  86:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  87:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
  89:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  92:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
  95:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  96:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
  98:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 101:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 104:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 105:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 106:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
 107:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
 108:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 109:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 110:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 111:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 112:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 113:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 115:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 116:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****      return offset;
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
 118:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 119:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 196              		.loc 2 119 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL12:
 202              		.loc 2 119 0
 203 0000 0048     		ldr	r0, .L10
 204              	.LVL13:
 205 0002 7047     		bx	lr
 206              	.L11:
 207              		.align	2
 208              	.L10:
 209 0004 2F000000 		.word	.LC2
 210              		.cfi_endproc
 211              	.LFE1055:
 212              		.cantunwind
 213              		.fnend
 215              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 216              		.align	1
 217              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 218              		.thumb
 219              		.thumb_func
 221              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 222              		.fnstart
 223              	.LFB1056:
 120:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 224              		.loc 2 120 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL14:
 230              		.loc 2 120 0
 231 0000 0048     		ldr	r0, .L13
 232              	.LVL15:
 233 0002 7047     		bx	lr
 234              	.L14:
 235              		.align	2
 236              	.L13:
 237 0004 48000000 		.word	.LC3
 238              		.cfi_endproc
 239              	.LFE1056:
 240              		.cantunwind
 241              		.fnend
 243              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 244              		.align	1
 245              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 246              		.thumb
 247              		.thumb_func
 249              	_ZN14rosserial_msgs3Log7getTypeEv:
 250              		.fnstart
 251              	.LFB1062:
 252              		.file 3 "./lib/ros_lib/rosserial_msgs/Log.h"
   1:./lib/ros_lib/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:./lib/ros_lib/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:./lib/ros_lib/rosserial_msgs/Log.h **** 
   4:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/Log.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/Log.h **** 
   9:./lib/ros_lib/rosserial_msgs/Log.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/Log.h **** {
  11:./lib/ros_lib/rosserial_msgs/Log.h **** 
  12:./lib/ros_lib/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/Log.h ****   {
  14:./lib/ros_lib/rosserial_msgs/Log.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/Log.h ****       uint8_t level;
  16:./lib/ros_lib/rosserial_msgs/Log.h ****       const char* msg;
  17:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  18:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  19:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  20:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  21:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  22:./lib/ros_lib/rosserial_msgs/Log.h **** 
  23:./lib/ros_lib/rosserial_msgs/Log.h ****     Log():
  24:./lib/ros_lib/rosserial_msgs/Log.h ****       level(0),
  25:./lib/ros_lib/rosserial_msgs/Log.h ****       msg("")
  26:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  27:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  28:./lib/ros_lib/rosserial_msgs/Log.h **** 
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  31:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  33:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  36:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  38:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  39:./lib/ros_lib/rosserial_msgs/Log.h ****       return offset;
  40:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  41:./lib/ros_lib/rosserial_msgs/Log.h **** 
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
  43:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  44:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
  46:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  47:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg;
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
  49:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  50:./lib/ros_lib/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
  51:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
  52:./lib/ros_lib/rosserial_msgs/Log.h ****       }
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
  55:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  56:./lib/ros_lib/rosserial_msgs/Log.h ****      return offset;
  57:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  58:./lib/ros_lib/rosserial_msgs/Log.h **** 
  59:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 253              		.loc 3 59 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL16:
 259              		.loc 3 59 0
 260 0000 0048     		ldr	r0, .L16
 261              	.LVL17:
 262 0002 7047     		bx	lr
 263              	.L17:
 264              		.align	2
 265              	.L16:
 266 0004 69000000 		.word	.LC4
 267              		.cfi_endproc
 268              	.LFE1062:
 269              		.cantunwind
 270              		.fnend
 272              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 273              		.align	1
 274              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 275              		.thumb
 276              		.thumb_func
 278              	_ZN14rosserial_msgs3Log6getMD5Ev:
 279              		.fnstart
 280              	.LFB1063:
  60:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 281              		.loc 3 60 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL18:
 287              		.loc 3 60 0
 288 0000 0048     		ldr	r0, .L19
 289              	.LVL19:
 290 0002 7047     		bx	lr
 291              	.L20:
 292              		.align	2
 293              	.L19:
 294 0004 7C000000 		.word	.LC5
 295              		.cfi_endproc
 296              	.LFE1063:
 297              		.cantunwind
 298              		.fnend
 300              		.section	.text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv,"axG",%progbits,_ZN14rosserial_m
 301              		.align	1
 302              		.weak	_ZN14rosserial_msgs19RequestParamRequest7getTypeEv
 303              		.thumb
 304              		.thumb_func
 306              	_ZN14rosserial_msgs19RequestParamRequest7getTypeEv:
 307              		.fnstart
 308              	.LFB1069:
 309              		.file 4 "./lib/ros_lib/rosserial_msgs/RequestParam.h"
   1:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   4:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <string.h>
   5:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   6:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   7:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
   8:./lib/ros_lib/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
   9:./lib/ros_lib/rosserial_msgs/RequestParam.h **** {
  10:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  11:./lib/ros_lib/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  12:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  13:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  14:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  15:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  16:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       const char* name;
  17:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  18:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamRequest():
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       name("")
  20:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  21:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  22:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  24:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  25:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  28:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  30:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  31:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  33:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  35:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  36:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  37:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  39:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  42:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  45:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  46:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  48:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  49:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 310              		.loc 4 49 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL20:
 316              		.loc 4 49 0
 317 0000 0048     		ldr	r0, .L22
 318              	.LVL21:
 319 0002 7047     		bx	lr
 320              	.L23:
 321              		.align	2
 322              	.L22:
 323 0004 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE1069:
 326              		.cantunwind
 327              		.fnend
 329              		.section	.text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev,"axG",%progbits,_ZN14rosserial_ms
 330              		.align	1
 331              		.weak	_ZN14rosserial_msgs19RequestParamRequest6getMD5Ev
 332              		.thumb
 333              		.thumb_func
 335              	_ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:
 336              		.fnstart
 337              	.LFB1070:
  50:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
 338              		.loc 4 50 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343              	.LVL22:
 344              		.loc 4 50 0
 345 0000 0048     		ldr	r0, .L25
 346              	.LVL23:
 347 0002 7047     		bx	lr
 348              	.L26:
 349              		.align	2
 350              	.L25:
 351 0004 9D000000 		.word	.LC6
 352              		.cfi_endproc
 353              	.LFE1070:
 354              		.cantunwind
 355              		.fnend
 357              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 358              		.align	1
 359              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 360              		.thumb
 361              		.thumb_func
 363              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 364              		.fnstart
 365              	.LFB1076:
  51:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  52:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   };
  53:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  54:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  55:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  56:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  57:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  58:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  59:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  60:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  61:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float st_floats;
  62:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float * floats;
  63:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  64:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* st_strings;
  65:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* * strings;
  66:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  67:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamResponse():
  68:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length(0), ints(NULL),
  69:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length(0), floats(NULL),
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length(0), strings(NULL)
  71:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  72:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  73:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  75:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  76:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  82:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  83:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
  84:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
  85:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_intsi;
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  91:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  92:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  98:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  99:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 100:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 101:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_floatsi;
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 107:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 108:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 116:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 119:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 120:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 122:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 124:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 125:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 129:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 132:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 133:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
 134:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 135:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 136:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 137:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 138:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 139:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 140:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 142:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 144:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 148:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 151:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 152:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 153:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 154:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 155:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 156:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 157:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 158:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 161:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 163:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 170:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 172:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 175:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 178:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 180:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 181:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 183:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 184:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 366              		.loc 4 184 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371              	.LVL24:
 372              		.loc 4 184 0
 373 0000 0048     		ldr	r0, .L28
 374              	.LVL25:
 375 0002 7047     		bx	lr
 376              	.L29:
 377              		.align	2
 378              	.L28:
 379 0004 00000000 		.word	.LANCHOR0
 380              		.cfi_endproc
 381              	.LFE1076:
 382              		.cantunwind
 383              		.fnend
 385              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 386              		.align	1
 387              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 388              		.thumb
 389              		.thumb_func
 391              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 392              		.fnstart
 393              	.LFB1077:
 185:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 394              		.loc 4 185 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 399              	.LVL26:
 400              		.loc 4 185 0
 401 0000 0048     		ldr	r0, .L31
 402              	.LVL27:
 403 0002 7047     		bx	lr
 404              	.L32:
 405              		.align	2
 406              	.L31:
 407 0004 BE000000 		.word	.LC7
 408              		.cfi_endproc
 409              	.LFE1077:
 410              		.cantunwind
 411              		.fnend
 413              		.section	.text._ZNK8std_msgs5UInt89serializeEPh,"axG",%progbits,_ZNK8std_msgs5UInt89serializeEPh,c
 414              		.align	1
 415              		.weak	_ZNK8std_msgs5UInt89serializeEPh
 416              		.thumb
 417              		.thumb_func
 419              	_ZNK8std_msgs5UInt89serializeEPh:
 420              		.fnstart
 421              	.LFB1165:
 422              		.file 5 "./lib/ros_lib/std_msgs/UInt8.h"
   1:./lib/ros_lib/std_msgs/UInt8.h **** #ifndef _ROS_std_msgs_UInt8_h
   2:./lib/ros_lib/std_msgs/UInt8.h **** #define _ROS_std_msgs_UInt8_h
   3:./lib/ros_lib/std_msgs/UInt8.h **** 
   4:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/UInt8.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/UInt8.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/UInt8.h **** 
   9:./lib/ros_lib/std_msgs/UInt8.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/UInt8.h **** {
  11:./lib/ros_lib/std_msgs/UInt8.h **** 
  12:./lib/ros_lib/std_msgs/UInt8.h ****   class UInt8 : public ros::Msg
  13:./lib/ros_lib/std_msgs/UInt8.h ****   {
  14:./lib/ros_lib/std_msgs/UInt8.h ****     public:
  15:./lib/ros_lib/std_msgs/UInt8.h ****       uint8_t data;
  16:./lib/ros_lib/std_msgs/UInt8.h **** 
  17:./lib/ros_lib/std_msgs/UInt8.h ****     UInt8():
  18:./lib/ros_lib/std_msgs/UInt8.h ****       data(0)
  19:./lib/ros_lib/std_msgs/UInt8.h ****     {
  20:./lib/ros_lib/std_msgs/UInt8.h ****     }
  21:./lib/ros_lib/std_msgs/UInt8.h **** 
  22:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int serialize(unsigned char *outbuffer) const
 423              		.loc 5 22 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 428              	.LVL28:
  23:./lib/ros_lib/std_msgs/UInt8.h ****     {
  24:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  25:./lib/ros_lib/std_msgs/UInt8.h ****       *(outbuffer + offset + 0) = (this->data >> (8 * 0)) & 0xFF;
 429              		.loc 5 25 0
 430 0000 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  26:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  27:./lib/ros_lib/std_msgs/UInt8.h ****       return offset;
  28:./lib/ros_lib/std_msgs/UInt8.h ****     }
 431              		.loc 5 28 0
 432 0002 0120     		movs	r0, #1
 433              	.LVL29:
  25:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 434              		.loc 5 25 0
 435 0004 0B70     		strb	r3, [r1]
 436              	.LVL30:
 437              		.loc 5 28 0
 438 0006 7047     		bx	lr
 439              		.cfi_endproc
 440              	.LFE1165:
 441              		.cantunwind
 442              		.fnend
 444              		.section	.text._ZN8std_msgs5UInt811deserializeEPh,"axG",%progbits,_ZN8std_msgs5UInt811deserializeE
 445              		.align	1
 446              		.weak	_ZN8std_msgs5UInt811deserializeEPh
 447              		.thumb
 448              		.thumb_func
 450              	_ZN8std_msgs5UInt811deserializeEPh:
 451              		.fnstart
 452              	.LFB1166:
  29:./lib/ros_lib/std_msgs/UInt8.h **** 
  30:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int deserialize(unsigned char *inbuffer)
 453              		.loc 5 30 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 458              	.LVL31:
  31:./lib/ros_lib/std_msgs/UInt8.h ****     {
  32:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  33:./lib/ros_lib/std_msgs/UInt8.h ****       this->data =  ((uint8_t) (*(inbuffer + offset)));
 459              		.loc 5 33 0
 460 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 461 0002 0371     		strb	r3, [r0, #4]
 462              	.LVL32:
  34:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  35:./lib/ros_lib/std_msgs/UInt8.h ****      return offset;
  36:./lib/ros_lib/std_msgs/UInt8.h ****     }
 463              		.loc 5 36 0
 464 0004 0120     		movs	r0, #1
 465              	.LVL33:
 466 0006 7047     		bx	lr
 467              		.cfi_endproc
 468              	.LFE1166:
 469              		.cantunwind
 470              		.fnend
 472              		.section	.text._ZN8std_msgs5UInt87getTypeEv,"axG",%progbits,_ZN8std_msgs5UInt87getTypeEv,comdat
 473              		.align	1
 474              		.weak	_ZN8std_msgs5UInt87getTypeEv
 475              		.thumb
 476              		.thumb_func
 478              	_ZN8std_msgs5UInt87getTypeEv:
 479              		.fnstart
 480              	.LFB1167:
  37:./lib/ros_lib/std_msgs/UInt8.h **** 
  38:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getType(){ return "std_msgs/UInt8"; };
 481              		.loc 5 38 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486              	.LVL34:
 487              		.loc 5 38 0
 488 0000 0048     		ldr	r0, .L36
 489              	.LVL35:
 490 0002 7047     		bx	lr
 491              	.L37:
 492              		.align	2
 493              	.L36:
 494 0004 DF000000 		.word	.LC8
 495              		.cfi_endproc
 496              	.LFE1167:
 497              		.cantunwind
 498              		.fnend
 500              		.section	.text._ZN8std_msgs5UInt86getMD5Ev,"axG",%progbits,_ZN8std_msgs5UInt86getMD5Ev,comdat
 501              		.align	1
 502              		.weak	_ZN8std_msgs5UInt86getMD5Ev
 503              		.thumb
 504              		.thumb_func
 506              	_ZN8std_msgs5UInt86getMD5Ev:
 507              		.fnstart
 508              	.LFB1168:
  39:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getMD5(){ return "7c8164229e7d2c17eb95e9231617fdee"; };
 509              		.loc 5 39 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 514              	.LVL36:
 515              		.loc 5 39 0
 516 0000 0048     		ldr	r0, .L39
 517              	.LVL37:
 518 0002 7047     		bx	lr
 519              	.L40:
 520              		.align	2
 521              	.L39:
 522 0004 EE000000 		.word	.LC9
 523              		.cfi_endproc
 524              	.LFE1168:
 525              		.cantunwind
 526              		.fnend
 528              		.section	.text._ZN8std_msgs6Header7getTypeEv,"axG",%progbits,_ZN8std_msgs6Header7getTypeEv,comdat
 529              		.align	1
 530              		.weak	_ZN8std_msgs6Header7getTypeEv
 531              		.thumb
 532              		.thumb_func
 534              	_ZN8std_msgs6Header7getTypeEv:
 535              		.fnstart
 536              	.LFB1174:
 537              		.file 6 "./lib/ros_lib/std_msgs/Header.h"
   1:./lib/ros_lib/std_msgs/Header.h **** #ifndef _ROS_std_msgs_Header_h
   2:./lib/ros_lib/std_msgs/Header.h **** #define _ROS_std_msgs_Header_h
   3:./lib/ros_lib/std_msgs/Header.h **** 
   4:./lib/ros_lib/std_msgs/Header.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Header.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Header.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Header.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Header.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Header.h **** 
  10:./lib/ros_lib/std_msgs/Header.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Header.h **** {
  12:./lib/ros_lib/std_msgs/Header.h **** 
  13:./lib/ros_lib/std_msgs/Header.h ****   class Header : public ros::Msg
  14:./lib/ros_lib/std_msgs/Header.h ****   {
  15:./lib/ros_lib/std_msgs/Header.h ****     public:
  16:./lib/ros_lib/std_msgs/Header.h ****       uint32_t seq;
  17:./lib/ros_lib/std_msgs/Header.h ****       ros::Time stamp;
  18:./lib/ros_lib/std_msgs/Header.h ****       const char* frame_id;
  19:./lib/ros_lib/std_msgs/Header.h **** 
  20:./lib/ros_lib/std_msgs/Header.h ****     Header():
  21:./lib/ros_lib/std_msgs/Header.h ****       seq(0),
  22:./lib/ros_lib/std_msgs/Header.h ****       stamp(),
  23:./lib/ros_lib/std_msgs/Header.h ****       frame_id("")
  24:./lib/ros_lib/std_msgs/Header.h ****     {
  25:./lib/ros_lib/std_msgs/Header.h ****     }
  26:./lib/ros_lib/std_msgs/Header.h **** 
  27:./lib/ros_lib/std_msgs/Header.h ****     virtual int serialize(unsigned char *outbuffer) const
  28:./lib/ros_lib/std_msgs/Header.h ****     {
  29:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->seq >> (8 * 0)) & 0xFF;
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
  33:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
  34:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
  38:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
  39:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
  43:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
  44:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  45:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id = strlen(this->frame_id);
  46:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
  47:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  48:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, this->frame_id, length_frame_id);
  49:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  50:./lib/ros_lib/std_msgs/Header.h ****       return offset;
  51:./lib/ros_lib/std_msgs/Header.h ****     }
  52:./lib/ros_lib/std_msgs/Header.h **** 
  53:./lib/ros_lib/std_msgs/Header.h ****     virtual int deserialize(unsigned char *inbuffer)
  54:./lib/ros_lib/std_msgs/Header.h ****     {
  55:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq =  ((uint32_t) (*(inbuffer + offset)));
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  59:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  60:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  64:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  65:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  69:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  70:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  71:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id;
  72:./lib/ros_lib/std_msgs/Header.h ****       memcpy(&length_frame_id, (inbuffer + offset), sizeof(uint32_t));
  73:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  74:./lib/ros_lib/std_msgs/Header.h ****       for(unsigned int k= offset; k< offset+length_frame_id; ++k){
  75:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
  76:./lib/ros_lib/std_msgs/Header.h ****       }
  77:./lib/ros_lib/std_msgs/Header.h ****       inbuffer[offset+length_frame_id-1]=0;
  78:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
  79:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  80:./lib/ros_lib/std_msgs/Header.h ****      return offset;
  81:./lib/ros_lib/std_msgs/Header.h ****     }
  82:./lib/ros_lib/std_msgs/Header.h **** 
  83:./lib/ros_lib/std_msgs/Header.h ****     const char * getType(){ return "std_msgs/Header"; };
 538              		.loc 6 83 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 543              	.LVL38:
 544              		.loc 6 83 0
 545 0000 0048     		ldr	r0, .L42
 546              	.LVL39:
 547 0002 7047     		bx	lr
 548              	.L43:
 549              		.align	2
 550              	.L42:
 551 0004 0F010000 		.word	.LC10
 552              		.cfi_endproc
 553              	.LFE1174:
 554              		.cantunwind
 555              		.fnend
 557              		.section	.text._ZN8std_msgs6Header6getMD5Ev,"axG",%progbits,_ZN8std_msgs6Header6getMD5Ev,comdat
 558              		.align	1
 559              		.weak	_ZN8std_msgs6Header6getMD5Ev
 560              		.thumb
 561              		.thumb_func
 563              	_ZN8std_msgs6Header6getMD5Ev:
 564              		.fnstart
 565              	.LFB1175:
  84:./lib/ros_lib/std_msgs/Header.h ****     const char * getMD5(){ return "2176decaecbce78abc3b96ef049fabed"; };
 566              		.loc 6 84 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              		@ link register save eliminated.
 571              	.LVL40:
 572              		.loc 6 84 0
 573 0000 0048     		ldr	r0, .L45
 574              	.LVL41:
 575 0002 7047     		bx	lr
 576              	.L46:
 577              		.align	2
 578              	.L45:
 579 0004 1F010000 		.word	.LC11
 580              		.cfi_endproc
 581              	.LFE1175:
 582              		.cantunwind
 583              		.fnend
 585              		.section	.text._ZN13geometry_msgs5Point7getTypeEv,"axG",%progbits,_ZN13geometry_msgs5Point7getType
 586              		.align	1
 587              		.weak	_ZN13geometry_msgs5Point7getTypeEv
 588              		.thumb
 589              		.thumb_func
 591              	_ZN13geometry_msgs5Point7getTypeEv:
 592              		.fnstart
 593              	.LFB1181:
 594              		.file 7 "./lib/ros_lib/geometry_msgs/Point.h"
   1:./lib/ros_lib/geometry_msgs/Point.h **** #ifndef _ROS_geometry_msgs_Point_h
   2:./lib/ros_lib/geometry_msgs/Point.h **** #define _ROS_geometry_msgs_Point_h
   3:./lib/ros_lib/geometry_msgs/Point.h **** 
   4:./lib/ros_lib/geometry_msgs/Point.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/Point.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/Point.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/Point.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/Point.h **** 
   9:./lib/ros_lib/geometry_msgs/Point.h **** namespace geometry_msgs
  10:./lib/ros_lib/geometry_msgs/Point.h **** {
  11:./lib/ros_lib/geometry_msgs/Point.h **** 
  12:./lib/ros_lib/geometry_msgs/Point.h ****   class Point : public ros::Msg
  13:./lib/ros_lib/geometry_msgs/Point.h ****   {
  14:./lib/ros_lib/geometry_msgs/Point.h ****     public:
  15:./lib/ros_lib/geometry_msgs/Point.h ****       float x;
  16:./lib/ros_lib/geometry_msgs/Point.h ****       float y;
  17:./lib/ros_lib/geometry_msgs/Point.h ****       float z;
  18:./lib/ros_lib/geometry_msgs/Point.h **** 
  19:./lib/ros_lib/geometry_msgs/Point.h ****     Point():
  20:./lib/ros_lib/geometry_msgs/Point.h ****       x(0),
  21:./lib/ros_lib/geometry_msgs/Point.h ****       y(0),
  22:./lib/ros_lib/geometry_msgs/Point.h ****       z(0)
  23:./lib/ros_lib/geometry_msgs/Point.h ****     {
  24:./lib/ros_lib/geometry_msgs/Point.h ****     }
  25:./lib/ros_lib/geometry_msgs/Point.h **** 
  26:./lib/ros_lib/geometry_msgs/Point.h ****     virtual int serialize(unsigned char *outbuffer) const
  27:./lib/ros_lib/geometry_msgs/Point.h ****     {
  28:./lib/ros_lib/geometry_msgs/Point.h ****       int offset = 0;
  29:./lib/ros_lib/geometry_msgs/Point.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->x);
  30:./lib/ros_lib/geometry_msgs/Point.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
  31:./lib/ros_lib/geometry_msgs/Point.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
  32:./lib/ros_lib/geometry_msgs/Point.h ****       return offset;
  33:./lib/ros_lib/geometry_msgs/Point.h ****     }
  34:./lib/ros_lib/geometry_msgs/Point.h **** 
  35:./lib/ros_lib/geometry_msgs/Point.h ****     virtual int deserialize(unsigned char *inbuffer)
  36:./lib/ros_lib/geometry_msgs/Point.h ****     {
  37:./lib/ros_lib/geometry_msgs/Point.h ****       int offset = 0;
  38:./lib/ros_lib/geometry_msgs/Point.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->x));
  39:./lib/ros_lib/geometry_msgs/Point.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
  40:./lib/ros_lib/geometry_msgs/Point.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
  41:./lib/ros_lib/geometry_msgs/Point.h ****      return offset;
  42:./lib/ros_lib/geometry_msgs/Point.h ****     }
  43:./lib/ros_lib/geometry_msgs/Point.h **** 
  44:./lib/ros_lib/geometry_msgs/Point.h ****     const char * getType(){ return "geometry_msgs/Point"; };
 595              		.loc 7 44 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              	.LVL42:
 601              		.loc 7 44 0
 602 0000 0048     		ldr	r0, .L48
 603              	.LVL43:
 604 0002 7047     		bx	lr
 605              	.L49:
 606              		.align	2
 607              	.L48:
 608 0004 40010000 		.word	.LC12
 609              		.cfi_endproc
 610              	.LFE1181:
 611              		.cantunwind
 612              		.fnend
 614              		.section	.text._ZN13geometry_msgs5Point6getMD5Ev,"axG",%progbits,_ZN13geometry_msgs5Point6getMD5Ev
 615              		.align	1
 616              		.weak	_ZN13geometry_msgs5Point6getMD5Ev
 617              		.thumb
 618              		.thumb_func
 620              	_ZN13geometry_msgs5Point6getMD5Ev:
 621              		.fnstart
 622              	.LFB1182:
  45:./lib/ros_lib/geometry_msgs/Point.h ****     const char * getMD5(){ return "4a842b65f413084dc2b10fb484ea7f17"; };
 623              		.loc 7 45 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 628              	.LVL44:
 629              		.loc 7 45 0
 630 0000 0048     		ldr	r0, .L51
 631              	.LVL45:
 632 0002 7047     		bx	lr
 633              	.L52:
 634              		.align	2
 635              	.L51:
 636 0004 54010000 		.word	.LC13
 637              		.cfi_endproc
 638              	.LFE1182:
 639              		.cantunwind
 640              		.fnend
 642              		.section	.text._ZN13geometry_msgs10Quaternion7getTypeEv,"axG",%progbits,_ZN13geometry_msgs10Quater
 643              		.align	1
 644              		.weak	_ZN13geometry_msgs10Quaternion7getTypeEv
 645              		.thumb
 646              		.thumb_func
 648              	_ZN13geometry_msgs10Quaternion7getTypeEv:
 649              		.fnstart
 650              	.LFB1188:
 651              		.file 8 "./lib/ros_lib/geometry_msgs/Quaternion.h"
   1:./lib/ros_lib/geometry_msgs/Quaternion.h **** #ifndef _ROS_geometry_msgs_Quaternion_h
   2:./lib/ros_lib/geometry_msgs/Quaternion.h **** #define _ROS_geometry_msgs_Quaternion_h
   3:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
   4:./lib/ros_lib/geometry_msgs/Quaternion.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/Quaternion.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/Quaternion.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/Quaternion.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
   9:./lib/ros_lib/geometry_msgs/Quaternion.h **** namespace geometry_msgs
  10:./lib/ros_lib/geometry_msgs/Quaternion.h **** {
  11:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
  12:./lib/ros_lib/geometry_msgs/Quaternion.h ****   class Quaternion : public ros::Msg
  13:./lib/ros_lib/geometry_msgs/Quaternion.h ****   {
  14:./lib/ros_lib/geometry_msgs/Quaternion.h ****     public:
  15:./lib/ros_lib/geometry_msgs/Quaternion.h ****       float x;
  16:./lib/ros_lib/geometry_msgs/Quaternion.h ****       float y;
  17:./lib/ros_lib/geometry_msgs/Quaternion.h ****       float z;
  18:./lib/ros_lib/geometry_msgs/Quaternion.h ****       float w;
  19:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
  20:./lib/ros_lib/geometry_msgs/Quaternion.h ****     Quaternion():
  21:./lib/ros_lib/geometry_msgs/Quaternion.h ****       x(0),
  22:./lib/ros_lib/geometry_msgs/Quaternion.h ****       y(0),
  23:./lib/ros_lib/geometry_msgs/Quaternion.h ****       z(0),
  24:./lib/ros_lib/geometry_msgs/Quaternion.h ****       w(0)
  25:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
  26:./lib/ros_lib/geometry_msgs/Quaternion.h ****     }
  27:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
  28:./lib/ros_lib/geometry_msgs/Quaternion.h ****     virtual int serialize(unsigned char *outbuffer) const
  29:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
  30:./lib/ros_lib/geometry_msgs/Quaternion.h ****       int offset = 0;
  31:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->x);
  32:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
  33:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
  34:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->w);
  35:./lib/ros_lib/geometry_msgs/Quaternion.h ****       return offset;
  36:./lib/ros_lib/geometry_msgs/Quaternion.h ****     }
  37:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
  38:./lib/ros_lib/geometry_msgs/Quaternion.h ****     virtual int deserialize(unsigned char *inbuffer)
  39:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
  40:./lib/ros_lib/geometry_msgs/Quaternion.h ****       int offset = 0;
  41:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->x));
  42:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
  43:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
  44:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->w));
  45:./lib/ros_lib/geometry_msgs/Quaternion.h ****      return offset;
  46:./lib/ros_lib/geometry_msgs/Quaternion.h ****     }
  47:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
  48:./lib/ros_lib/geometry_msgs/Quaternion.h ****     const char * getType(){ return "geometry_msgs/Quaternion"; };
 652              		.loc 8 48 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 657              	.LVL46:
 658              		.loc 8 48 0
 659 0000 0048     		ldr	r0, .L54
 660              	.LVL47:
 661 0002 7047     		bx	lr
 662              	.L55:
 663              		.align	2
 664              	.L54:
 665 0004 75010000 		.word	.LC14
 666              		.cfi_endproc
 667              	.LFE1188:
 668              		.cantunwind
 669              		.fnend
 671              		.section	.text._ZN13geometry_msgs10Quaternion6getMD5Ev,"axG",%progbits,_ZN13geometry_msgs10Quatern
 672              		.align	1
 673              		.weak	_ZN13geometry_msgs10Quaternion6getMD5Ev
 674              		.thumb
 675              		.thumb_func
 677              	_ZN13geometry_msgs10Quaternion6getMD5Ev:
 678              		.fnstart
 679              	.LFB1189:
  49:./lib/ros_lib/geometry_msgs/Quaternion.h ****     const char * getMD5(){ return "a779879fadf0160734f906b8c19c7004"; };
 680              		.loc 8 49 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 685              	.LVL48:
 686              		.loc 8 49 0
 687 0000 0048     		ldr	r0, .L57
 688              	.LVL49:
 689 0002 7047     		bx	lr
 690              	.L58:
 691              		.align	2
 692              	.L57:
 693 0004 8E010000 		.word	.LC15
 694              		.cfi_endproc
 695              	.LFE1189:
 696              		.cantunwind
 697              		.fnend
 699              		.section	.text._ZN13geometry_msgs4Pose7getTypeEv,"axG",%progbits,_ZN13geometry_msgs4Pose7getTypeEv
 700              		.align	1
 701              		.weak	_ZN13geometry_msgs4Pose7getTypeEv
 702              		.thumb
 703              		.thumb_func
 705              	_ZN13geometry_msgs4Pose7getTypeEv:
 706              		.fnstart
 707              	.LFB1195:
 708              		.file 9 "./lib/ros_lib/geometry_msgs/Pose.h"
   1:./lib/ros_lib/geometry_msgs/Pose.h **** #ifndef _ROS_geometry_msgs_Pose_h
   2:./lib/ros_lib/geometry_msgs/Pose.h **** #define _ROS_geometry_msgs_Pose_h
   3:./lib/ros_lib/geometry_msgs/Pose.h **** 
   4:./lib/ros_lib/geometry_msgs/Pose.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/Pose.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/Pose.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/Pose.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/Pose.h **** #include "geometry_msgs/Point.h"
   9:./lib/ros_lib/geometry_msgs/Pose.h **** #include "geometry_msgs/Quaternion.h"
  10:./lib/ros_lib/geometry_msgs/Pose.h **** 
  11:./lib/ros_lib/geometry_msgs/Pose.h **** namespace geometry_msgs
  12:./lib/ros_lib/geometry_msgs/Pose.h **** {
  13:./lib/ros_lib/geometry_msgs/Pose.h **** 
  14:./lib/ros_lib/geometry_msgs/Pose.h ****   class Pose : public ros::Msg
  15:./lib/ros_lib/geometry_msgs/Pose.h ****   {
  16:./lib/ros_lib/geometry_msgs/Pose.h ****     public:
  17:./lib/ros_lib/geometry_msgs/Pose.h ****       geometry_msgs::Point position;
  18:./lib/ros_lib/geometry_msgs/Pose.h ****       geometry_msgs::Quaternion orientation;
  19:./lib/ros_lib/geometry_msgs/Pose.h **** 
  20:./lib/ros_lib/geometry_msgs/Pose.h ****     Pose():
  21:./lib/ros_lib/geometry_msgs/Pose.h ****       position(),
  22:./lib/ros_lib/geometry_msgs/Pose.h ****       orientation()
  23:./lib/ros_lib/geometry_msgs/Pose.h ****     {
  24:./lib/ros_lib/geometry_msgs/Pose.h ****     }
  25:./lib/ros_lib/geometry_msgs/Pose.h **** 
  26:./lib/ros_lib/geometry_msgs/Pose.h ****     virtual int serialize(unsigned char *outbuffer) const
  27:./lib/ros_lib/geometry_msgs/Pose.h ****     {
  28:./lib/ros_lib/geometry_msgs/Pose.h ****       int offset = 0;
  29:./lib/ros_lib/geometry_msgs/Pose.h ****       offset += this->position.serialize(outbuffer + offset);
  30:./lib/ros_lib/geometry_msgs/Pose.h ****       offset += this->orientation.serialize(outbuffer + offset);
  31:./lib/ros_lib/geometry_msgs/Pose.h ****       return offset;
  32:./lib/ros_lib/geometry_msgs/Pose.h ****     }
  33:./lib/ros_lib/geometry_msgs/Pose.h **** 
  34:./lib/ros_lib/geometry_msgs/Pose.h ****     virtual int deserialize(unsigned char *inbuffer)
  35:./lib/ros_lib/geometry_msgs/Pose.h ****     {
  36:./lib/ros_lib/geometry_msgs/Pose.h ****       int offset = 0;
  37:./lib/ros_lib/geometry_msgs/Pose.h ****       offset += this->position.deserialize(inbuffer + offset);
  38:./lib/ros_lib/geometry_msgs/Pose.h ****       offset += this->orientation.deserialize(inbuffer + offset);
  39:./lib/ros_lib/geometry_msgs/Pose.h ****      return offset;
  40:./lib/ros_lib/geometry_msgs/Pose.h ****     }
  41:./lib/ros_lib/geometry_msgs/Pose.h **** 
  42:./lib/ros_lib/geometry_msgs/Pose.h ****     const char * getType(){ return "geometry_msgs/Pose"; };
 709              		.loc 9 42 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 714              	.LVL50:
 715              		.loc 9 42 0
 716 0000 0048     		ldr	r0, .L60
 717              	.LVL51:
 718 0002 7047     		bx	lr
 719              	.L61:
 720              		.align	2
 721              	.L60:
 722 0004 AF010000 		.word	.LC16
 723              		.cfi_endproc
 724              	.LFE1195:
 725              		.cantunwind
 726              		.fnend
 728              		.section	.text._ZN13geometry_msgs4Pose6getMD5Ev,"axG",%progbits,_ZN13geometry_msgs4Pose6getMD5Ev,c
 729              		.align	1
 730              		.weak	_ZN13geometry_msgs4Pose6getMD5Ev
 731              		.thumb
 732              		.thumb_func
 734              	_ZN13geometry_msgs4Pose6getMD5Ev:
 735              		.fnstart
 736              	.LFB1196:
  43:./lib/ros_lib/geometry_msgs/Pose.h ****     const char * getMD5(){ return "e45d45a5a1ce597b249e23fb30fc871f"; };
 737              		.loc 9 43 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742              	.LVL52:
 743              		.loc 9 43 0
 744 0000 0048     		ldr	r0, .L63
 745              	.LVL53:
 746 0002 7047     		bx	lr
 747              	.L64:
 748              		.align	2
 749              	.L63:
 750 0004 C2010000 		.word	.LC17
 751              		.cfi_endproc
 752              	.LFE1196:
 753              		.cantunwind
 754              		.fnend
 756              		.section	.text._ZN13geometry_msgs18PoseWithCovariance7getTypeEv,"axG",%progbits,_ZN13geometry_msgs
 757              		.align	1
 758              		.weak	_ZN13geometry_msgs18PoseWithCovariance7getTypeEv
 759              		.thumb
 760              		.thumb_func
 762              	_ZN13geometry_msgs18PoseWithCovariance7getTypeEv:
 763              		.fnstart
 764              	.LFB1202:
 765              		.file 10 "./lib/ros_lib/geometry_msgs/PoseWithCovariance.h"
   1:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** #ifndef _ROS_geometry_msgs_PoseWithCovariance_h
   2:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** #define _ROS_geometry_msgs_PoseWithCovariance_h
   3:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
   4:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** #include "geometry_msgs/Pose.h"
   9:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
  10:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** namespace geometry_msgs
  11:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** {
  12:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
  13:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****   class PoseWithCovariance : public ros::Msg
  14:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****   {
  15:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     public:
  16:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       geometry_msgs::Pose pose;
  17:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       float covariance[36];
  18:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
  19:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     PoseWithCovariance():
  20:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       pose(),
  21:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       covariance()
  22:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
  23:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     }
  24:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
  25:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     virtual int serialize(unsigned char *outbuffer) const
  26:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
  27:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       int offset = 0;
  28:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       offset += this->pose.serialize(outbuffer + offset);
  29:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
  30:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->covariance[i]);
  31:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       }
  32:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       return offset;
  33:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     }
  34:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
  35:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     virtual int deserialize(unsigned char *inbuffer)
  36:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
  37:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       int offset = 0;
  38:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       offset += this->pose.deserialize(inbuffer + offset);
  39:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
  40:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->covariance[i]));
  41:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       }
  42:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****      return offset;
  43:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     }
  44:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
  45:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     const char * getType(){ return "geometry_msgs/PoseWithCovariance"; };
 766              		.loc 10 45 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              		@ link register save eliminated.
 771              	.LVL54:
 772              		.loc 10 45 0
 773 0000 0048     		ldr	r0, .L66
 774              	.LVL55:
 775 0002 7047     		bx	lr
 776              	.L67:
 777              		.align	2
 778              	.L66:
 779 0004 E3010000 		.word	.LC18
 780              		.cfi_endproc
 781              	.LFE1202:
 782              		.cantunwind
 783              		.fnend
 785              		.section	.text._ZN13geometry_msgs18PoseWithCovariance6getMD5Ev,"axG",%progbits,_ZN13geometry_msgs1
 786              		.align	1
 787              		.weak	_ZN13geometry_msgs18PoseWithCovariance6getMD5Ev
 788              		.thumb
 789              		.thumb_func
 791              	_ZN13geometry_msgs18PoseWithCovariance6getMD5Ev:
 792              		.fnstart
 793              	.LFB1203:
  46:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     const char * getMD5(){ return "c23e848cf1b7533a8d7c259073a97e6f"; };
 794              		.loc 10 46 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 799              	.LVL56:
 800              		.loc 10 46 0
 801 0000 0048     		ldr	r0, .L69
 802              	.LVL57:
 803 0002 7047     		bx	lr
 804              	.L70:
 805              		.align	2
 806              	.L69:
 807 0004 04020000 		.word	.LC19
 808              		.cfi_endproc
 809              	.LFE1203:
 810              		.cantunwind
 811              		.fnend
 813              		.section	.text._ZN13geometry_msgs7Vector37getTypeEv,"axG",%progbits,_ZN13geometry_msgs7Vector37get
 814              		.align	1
 815              		.weak	_ZN13geometry_msgs7Vector37getTypeEv
 816              		.thumb
 817              		.thumb_func
 819              	_ZN13geometry_msgs7Vector37getTypeEv:
 820              		.fnstart
 821              	.LFB1209:
 822              		.file 11 "./lib/ros_lib/geometry_msgs/Vector3.h"
   1:./lib/ros_lib/geometry_msgs/Vector3.h **** #ifndef _ROS_geometry_msgs_Vector3_h
   2:./lib/ros_lib/geometry_msgs/Vector3.h **** #define _ROS_geometry_msgs_Vector3_h
   3:./lib/ros_lib/geometry_msgs/Vector3.h **** 
   4:./lib/ros_lib/geometry_msgs/Vector3.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/Vector3.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/Vector3.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/Vector3.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/Vector3.h **** 
   9:./lib/ros_lib/geometry_msgs/Vector3.h **** namespace geometry_msgs
  10:./lib/ros_lib/geometry_msgs/Vector3.h **** {
  11:./lib/ros_lib/geometry_msgs/Vector3.h **** 
  12:./lib/ros_lib/geometry_msgs/Vector3.h ****   class Vector3 : public ros::Msg
  13:./lib/ros_lib/geometry_msgs/Vector3.h ****   {
  14:./lib/ros_lib/geometry_msgs/Vector3.h ****     public:
  15:./lib/ros_lib/geometry_msgs/Vector3.h ****       float x;
  16:./lib/ros_lib/geometry_msgs/Vector3.h ****       float y;
  17:./lib/ros_lib/geometry_msgs/Vector3.h ****       float z;
  18:./lib/ros_lib/geometry_msgs/Vector3.h **** 
  19:./lib/ros_lib/geometry_msgs/Vector3.h ****     Vector3():
  20:./lib/ros_lib/geometry_msgs/Vector3.h ****       x(0),
  21:./lib/ros_lib/geometry_msgs/Vector3.h ****       y(0),
  22:./lib/ros_lib/geometry_msgs/Vector3.h ****       z(0)
  23:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
  24:./lib/ros_lib/geometry_msgs/Vector3.h ****     }
  25:./lib/ros_lib/geometry_msgs/Vector3.h **** 
  26:./lib/ros_lib/geometry_msgs/Vector3.h ****     virtual int serialize(unsigned char *outbuffer) const
  27:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
  28:./lib/ros_lib/geometry_msgs/Vector3.h ****       int offset = 0;
  29:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->x);
  30:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
  31:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
  32:./lib/ros_lib/geometry_msgs/Vector3.h ****       return offset;
  33:./lib/ros_lib/geometry_msgs/Vector3.h ****     }
  34:./lib/ros_lib/geometry_msgs/Vector3.h **** 
  35:./lib/ros_lib/geometry_msgs/Vector3.h ****     virtual int deserialize(unsigned char *inbuffer)
  36:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
  37:./lib/ros_lib/geometry_msgs/Vector3.h ****       int offset = 0;
  38:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->x));
  39:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
  40:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
  41:./lib/ros_lib/geometry_msgs/Vector3.h ****      return offset;
  42:./lib/ros_lib/geometry_msgs/Vector3.h ****     }
  43:./lib/ros_lib/geometry_msgs/Vector3.h **** 
  44:./lib/ros_lib/geometry_msgs/Vector3.h ****     const char * getType(){ return "geometry_msgs/Vector3"; };
 823              		.loc 11 44 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 828              	.LVL58:
 829              		.loc 11 44 0
 830 0000 0048     		ldr	r0, .L72
 831              	.LVL59:
 832 0002 7047     		bx	lr
 833              	.L73:
 834              		.align	2
 835              	.L72:
 836 0004 25020000 		.word	.LC20
 837              		.cfi_endproc
 838              	.LFE1209:
 839              		.cantunwind
 840              		.fnend
 842              		.section	.text._ZN13geometry_msgs7Vector36getMD5Ev,"axG",%progbits,_ZN13geometry_msgs7Vector36getM
 843              		.align	1
 844              		.weak	_ZN13geometry_msgs7Vector36getMD5Ev
 845              		.thumb
 846              		.thumb_func
 848              	_ZN13geometry_msgs7Vector36getMD5Ev:
 849              		.fnstart
 850              	.LFB1210:
  45:./lib/ros_lib/geometry_msgs/Vector3.h ****     const char * getMD5(){ return "4a842b65f413084dc2b10fb484ea7f17"; };
 851              		.loc 11 45 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 856              	.LVL60:
 857              		.loc 11 45 0
 858 0000 0048     		ldr	r0, .L75
 859              	.LVL61:
 860 0002 7047     		bx	lr
 861              	.L76:
 862              		.align	2
 863              	.L75:
 864 0004 54010000 		.word	.LC13
 865              		.cfi_endproc
 866              	.LFE1210:
 867              		.cantunwind
 868              		.fnend
 870              		.section	.text._ZN13geometry_msgs5Twist7getTypeEv,"axG",%progbits,_ZN13geometry_msgs5Twist7getType
 871              		.align	1
 872              		.weak	_ZN13geometry_msgs5Twist7getTypeEv
 873              		.thumb
 874              		.thumb_func
 876              	_ZN13geometry_msgs5Twist7getTypeEv:
 877              		.fnstart
 878              	.LFB1216:
 879              		.file 12 "./lib/ros_lib/geometry_msgs/Twist.h"
   1:./lib/ros_lib/geometry_msgs/Twist.h **** #ifndef _ROS_geometry_msgs_Twist_h
   2:./lib/ros_lib/geometry_msgs/Twist.h **** #define _ROS_geometry_msgs_Twist_h
   3:./lib/ros_lib/geometry_msgs/Twist.h **** 
   4:./lib/ros_lib/geometry_msgs/Twist.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/Twist.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/Twist.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/Twist.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/Twist.h **** #include "geometry_msgs/Vector3.h"
   9:./lib/ros_lib/geometry_msgs/Twist.h **** 
  10:./lib/ros_lib/geometry_msgs/Twist.h **** namespace geometry_msgs
  11:./lib/ros_lib/geometry_msgs/Twist.h **** {
  12:./lib/ros_lib/geometry_msgs/Twist.h **** 
  13:./lib/ros_lib/geometry_msgs/Twist.h ****   class Twist : public ros::Msg
  14:./lib/ros_lib/geometry_msgs/Twist.h ****   {
  15:./lib/ros_lib/geometry_msgs/Twist.h ****     public:
  16:./lib/ros_lib/geometry_msgs/Twist.h ****       geometry_msgs::Vector3 linear;
  17:./lib/ros_lib/geometry_msgs/Twist.h ****       geometry_msgs::Vector3 angular;
  18:./lib/ros_lib/geometry_msgs/Twist.h **** 
  19:./lib/ros_lib/geometry_msgs/Twist.h ****     Twist():
  20:./lib/ros_lib/geometry_msgs/Twist.h ****       linear(),
  21:./lib/ros_lib/geometry_msgs/Twist.h ****       angular()
  22:./lib/ros_lib/geometry_msgs/Twist.h ****     {
  23:./lib/ros_lib/geometry_msgs/Twist.h ****     }
  24:./lib/ros_lib/geometry_msgs/Twist.h **** 
  25:./lib/ros_lib/geometry_msgs/Twist.h ****     virtual int serialize(unsigned char *outbuffer) const
  26:./lib/ros_lib/geometry_msgs/Twist.h ****     {
  27:./lib/ros_lib/geometry_msgs/Twist.h ****       int offset = 0;
  28:./lib/ros_lib/geometry_msgs/Twist.h ****       offset += this->linear.serialize(outbuffer + offset);
  29:./lib/ros_lib/geometry_msgs/Twist.h ****       offset += this->angular.serialize(outbuffer + offset);
  30:./lib/ros_lib/geometry_msgs/Twist.h ****       return offset;
  31:./lib/ros_lib/geometry_msgs/Twist.h ****     }
  32:./lib/ros_lib/geometry_msgs/Twist.h **** 
  33:./lib/ros_lib/geometry_msgs/Twist.h ****     virtual int deserialize(unsigned char *inbuffer)
  34:./lib/ros_lib/geometry_msgs/Twist.h ****     {
  35:./lib/ros_lib/geometry_msgs/Twist.h ****       int offset = 0;
  36:./lib/ros_lib/geometry_msgs/Twist.h ****       offset += this->linear.deserialize(inbuffer + offset);
  37:./lib/ros_lib/geometry_msgs/Twist.h ****       offset += this->angular.deserialize(inbuffer + offset);
  38:./lib/ros_lib/geometry_msgs/Twist.h ****      return offset;
  39:./lib/ros_lib/geometry_msgs/Twist.h ****     }
  40:./lib/ros_lib/geometry_msgs/Twist.h **** 
  41:./lib/ros_lib/geometry_msgs/Twist.h ****     const char * getType(){ return "geometry_msgs/Twist"; };
 880              		.loc 12 41 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884              		@ link register save eliminated.
 885              	.LVL62:
 886              		.loc 12 41 0
 887 0000 0048     		ldr	r0, .L78
 888              	.LVL63:
 889 0002 7047     		bx	lr
 890              	.L79:
 891              		.align	2
 892              	.L78:
 893 0004 3B020000 		.word	.LC21
 894              		.cfi_endproc
 895              	.LFE1216:
 896              		.cantunwind
 897              		.fnend
 899              		.section	.text._ZN13geometry_msgs5Twist6getMD5Ev,"axG",%progbits,_ZN13geometry_msgs5Twist6getMD5Ev
 900              		.align	1
 901              		.weak	_ZN13geometry_msgs5Twist6getMD5Ev
 902              		.thumb
 903              		.thumb_func
 905              	_ZN13geometry_msgs5Twist6getMD5Ev:
 906              		.fnstart
 907              	.LFB1217:
  42:./lib/ros_lib/geometry_msgs/Twist.h ****     const char * getMD5(){ return "9f195f881246fdfa2798d1d3eebca84a"; };
 908              		.loc 12 42 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 912              		@ link register save eliminated.
 913              	.LVL64:
 914              		.loc 12 42 0
 915 0000 0048     		ldr	r0, .L81
 916              	.LVL65:
 917 0002 7047     		bx	lr
 918              	.L82:
 919              		.align	2
 920              	.L81:
 921 0004 4F020000 		.word	.LC22
 922              		.cfi_endproc
 923              	.LFE1217:
 924              		.cantunwind
 925              		.fnend
 927              		.section	.text._ZN13geometry_msgs19TwistWithCovariance7getTypeEv,"axG",%progbits,_ZN13geometry_msg
 928              		.align	1
 929              		.weak	_ZN13geometry_msgs19TwistWithCovariance7getTypeEv
 930              		.thumb
 931              		.thumb_func
 933              	_ZN13geometry_msgs19TwistWithCovariance7getTypeEv:
 934              		.fnstart
 935              	.LFB1223:
 936              		.file 13 "./lib/ros_lib/geometry_msgs/TwistWithCovariance.h"
   1:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** #ifndef _ROS_geometry_msgs_TwistWithCovariance_h
   2:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** #define _ROS_geometry_msgs_TwistWithCovariance_h
   3:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
   4:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** #include "geometry_msgs/Twist.h"
   9:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
  10:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** namespace geometry_msgs
  11:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** {
  12:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
  13:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****   class TwistWithCovariance : public ros::Msg
  14:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****   {
  15:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     public:
  16:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       geometry_msgs::Twist twist;
  17:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       float covariance[36];
  18:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
  19:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     TwistWithCovariance():
  20:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       twist(),
  21:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       covariance()
  22:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
  23:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     }
  24:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
  25:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     virtual int serialize(unsigned char *outbuffer) const
  26:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
  27:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       int offset = 0;
  28:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       offset += this->twist.serialize(outbuffer + offset);
  29:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
  30:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->covariance[i]);
  31:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       }
  32:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       return offset;
  33:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     }
  34:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
  35:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     virtual int deserialize(unsigned char *inbuffer)
  36:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
  37:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       int offset = 0;
  38:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       offset += this->twist.deserialize(inbuffer + offset);
  39:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
  40:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->covariance[i]));
  41:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       }
  42:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****      return offset;
  43:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     }
  44:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
  45:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     const char * getType(){ return "geometry_msgs/TwistWithCovariance"; };
 937              		.loc 13 45 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              		@ link register save eliminated.
 942              	.LVL66:
 943              		.loc 13 45 0
 944 0000 0048     		ldr	r0, .L84
 945              	.LVL67:
 946 0002 7047     		bx	lr
 947              	.L85:
 948              		.align	2
 949              	.L84:
 950 0004 70020000 		.word	.LC23
 951              		.cfi_endproc
 952              	.LFE1223:
 953              		.cantunwind
 954              		.fnend
 956              		.section	.text._ZN13geometry_msgs19TwistWithCovariance6getMD5Ev,"axG",%progbits,_ZN13geometry_msgs
 957              		.align	1
 958              		.weak	_ZN13geometry_msgs19TwistWithCovariance6getMD5Ev
 959              		.thumb
 960              		.thumb_func
 962              	_ZN13geometry_msgs19TwistWithCovariance6getMD5Ev:
 963              		.fnstart
 964              	.LFB1224:
  46:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     const char * getMD5(){ return "1fe8a28e6890a4cc3ae4c3ca5c7d82e6"; };
 965              		.loc 13 46 0
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 0
 968              		@ frame_needed = 0, uses_anonymous_args = 0
 969              		@ link register save eliminated.
 970              	.LVL68:
 971              		.loc 13 46 0
 972 0000 0048     		ldr	r0, .L87
 973              	.LVL69:
 974 0002 7047     		bx	lr
 975              	.L88:
 976              		.align	2
 977              	.L87:
 978 0004 92020000 		.word	.LC24
 979              		.cfi_endproc
 980              	.LFE1224:
 981              		.cantunwind
 982              		.fnend
 984              		.section	.text._ZN8nav_msgs8Odometry7getTypeEv,"axG",%progbits,_ZN8nav_msgs8Odometry7getTypeEv,com
 985              		.align	1
 986              		.weak	_ZN8nav_msgs8Odometry7getTypeEv
 987              		.thumb
 988              		.thumb_func
 990              	_ZN8nav_msgs8Odometry7getTypeEv:
 991              		.fnstart
 992              	.LFB1230:
 993              		.file 14 "./lib/ros_lib/nav_msgs/Odometry.h"
   1:./lib/ros_lib/nav_msgs/Odometry.h **** #ifndef _ROS_nav_msgs_Odometry_h
   2:./lib/ros_lib/nav_msgs/Odometry.h **** #define _ROS_nav_msgs_Odometry_h
   3:./lib/ros_lib/nav_msgs/Odometry.h **** 
   4:./lib/ros_lib/nav_msgs/Odometry.h **** #include <stdint.h>
   5:./lib/ros_lib/nav_msgs/Odometry.h **** #include <string.h>
   6:./lib/ros_lib/nav_msgs/Odometry.h **** #include <stdlib.h>
   7:./lib/ros_lib/nav_msgs/Odometry.h **** #include "ros/msg.h"
   8:./lib/ros_lib/nav_msgs/Odometry.h **** #include "std_msgs/Header.h"
   9:./lib/ros_lib/nav_msgs/Odometry.h **** #include "geometry_msgs/PoseWithCovariance.h"
  10:./lib/ros_lib/nav_msgs/Odometry.h **** #include "geometry_msgs/TwistWithCovariance.h"
  11:./lib/ros_lib/nav_msgs/Odometry.h **** 
  12:./lib/ros_lib/nav_msgs/Odometry.h **** namespace nav_msgs
  13:./lib/ros_lib/nav_msgs/Odometry.h **** {
  14:./lib/ros_lib/nav_msgs/Odometry.h **** 
  15:./lib/ros_lib/nav_msgs/Odometry.h ****   class Odometry : public ros::Msg
  16:./lib/ros_lib/nav_msgs/Odometry.h ****   {
  17:./lib/ros_lib/nav_msgs/Odometry.h ****     public:
  18:./lib/ros_lib/nav_msgs/Odometry.h ****       std_msgs::Header header;
  19:./lib/ros_lib/nav_msgs/Odometry.h ****       const char* child_frame_id;
  20:./lib/ros_lib/nav_msgs/Odometry.h ****       geometry_msgs::PoseWithCovariance pose;
  21:./lib/ros_lib/nav_msgs/Odometry.h ****       geometry_msgs::TwistWithCovariance twist;
  22:./lib/ros_lib/nav_msgs/Odometry.h **** 
  23:./lib/ros_lib/nav_msgs/Odometry.h ****     Odometry():
  24:./lib/ros_lib/nav_msgs/Odometry.h ****       header(),
  25:./lib/ros_lib/nav_msgs/Odometry.h ****       child_frame_id(""),
  26:./lib/ros_lib/nav_msgs/Odometry.h ****       pose(),
  27:./lib/ros_lib/nav_msgs/Odometry.h ****       twist()
  28:./lib/ros_lib/nav_msgs/Odometry.h ****     {
  29:./lib/ros_lib/nav_msgs/Odometry.h ****     }
  30:./lib/ros_lib/nav_msgs/Odometry.h **** 
  31:./lib/ros_lib/nav_msgs/Odometry.h ****     virtual int serialize(unsigned char *outbuffer) const
  32:./lib/ros_lib/nav_msgs/Odometry.h ****     {
  33:./lib/ros_lib/nav_msgs/Odometry.h ****       int offset = 0;
  34:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->header.serialize(outbuffer + offset);
  35:./lib/ros_lib/nav_msgs/Odometry.h ****       uint32_t length_child_frame_id = strlen(this->child_frame_id);
  36:./lib/ros_lib/nav_msgs/Odometry.h ****       memcpy(outbuffer + offset, &length_child_frame_id, sizeof(uint32_t));
  37:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += 4;
  38:./lib/ros_lib/nav_msgs/Odometry.h ****       memcpy(outbuffer + offset, this->child_frame_id, length_child_frame_id);
  39:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += length_child_frame_id;
  40:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->pose.serialize(outbuffer + offset);
  41:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->twist.serialize(outbuffer + offset);
  42:./lib/ros_lib/nav_msgs/Odometry.h ****       return offset;
  43:./lib/ros_lib/nav_msgs/Odometry.h ****     }
  44:./lib/ros_lib/nav_msgs/Odometry.h **** 
  45:./lib/ros_lib/nav_msgs/Odometry.h ****     virtual int deserialize(unsigned char *inbuffer)
  46:./lib/ros_lib/nav_msgs/Odometry.h ****     {
  47:./lib/ros_lib/nav_msgs/Odometry.h ****       int offset = 0;
  48:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->header.deserialize(inbuffer + offset);
  49:./lib/ros_lib/nav_msgs/Odometry.h ****       uint32_t length_child_frame_id;
  50:./lib/ros_lib/nav_msgs/Odometry.h ****       memcpy(&length_child_frame_id, (inbuffer + offset), sizeof(uint32_t));
  51:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += 4;
  52:./lib/ros_lib/nav_msgs/Odometry.h ****       for(unsigned int k= offset; k< offset+length_child_frame_id; ++k){
  53:./lib/ros_lib/nav_msgs/Odometry.h ****           inbuffer[k-1]=inbuffer[k];
  54:./lib/ros_lib/nav_msgs/Odometry.h ****       }
  55:./lib/ros_lib/nav_msgs/Odometry.h ****       inbuffer[offset+length_child_frame_id-1]=0;
  56:./lib/ros_lib/nav_msgs/Odometry.h ****       this->child_frame_id = (char *)(inbuffer + offset-1);
  57:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += length_child_frame_id;
  58:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->pose.deserialize(inbuffer + offset);
  59:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->twist.deserialize(inbuffer + offset);
  60:./lib/ros_lib/nav_msgs/Odometry.h ****      return offset;
  61:./lib/ros_lib/nav_msgs/Odometry.h ****     }
  62:./lib/ros_lib/nav_msgs/Odometry.h **** 
  63:./lib/ros_lib/nav_msgs/Odometry.h ****     const char * getType(){ return "nav_msgs/Odometry"; };
 994              		.loc 14 63 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 998              		@ link register save eliminated.
 999              	.LVL70:
 1000              		.loc 14 63 0
 1001 0000 0048     		ldr	r0, .L90
 1002              	.LVL71:
 1003 0002 7047     		bx	lr
 1004              	.L91:
 1005              		.align	2
 1006              	.L90:
 1007 0004 B3020000 		.word	.LC25
 1008              		.cfi_endproc
 1009              	.LFE1230:
 1010              		.cantunwind
 1011              		.fnend
 1013              		.section	.text._ZN8nav_msgs8Odometry6getMD5Ev,"axG",%progbits,_ZN8nav_msgs8Odometry6getMD5Ev,comda
 1014              		.align	1
 1015              		.weak	_ZN8nav_msgs8Odometry6getMD5Ev
 1016              		.thumb
 1017              		.thumb_func
 1019              	_ZN8nav_msgs8Odometry6getMD5Ev:
 1020              		.fnstart
 1021              	.LFB1231:
  64:./lib/ros_lib/nav_msgs/Odometry.h ****     const char * getMD5(){ return "cd5e73d190d741a2f92e81eda573aca7"; };
 1022              		.loc 14 64 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 1026              		@ link register save eliminated.
 1027              	.LVL72:
 1028              		.loc 14 64 0
 1029 0000 0048     		ldr	r0, .L93
 1030              	.LVL73:
 1031 0002 7047     		bx	lr
 1032              	.L94:
 1033              		.align	2
 1034              	.L93:
 1035 0004 C5020000 		.word	.LC26
 1036              		.cfi_endproc
 1037              	.LFE1231:
 1038              		.cantunwind
 1039              		.fnend
 1041              		.section	.text._ZN12roberto_msgs10MotorState7getTypeEv,"axG",%progbits,_ZN12roberto_msgs10MotorSta
 1042              		.align	1
 1043              		.weak	_ZN12roberto_msgs10MotorState7getTypeEv
 1044              		.thumb
 1045              		.thumb_func
 1047              	_ZN12roberto_msgs10MotorState7getTypeEv:
 1048              		.fnstart
 1049              	.LFB1244:
 1050              		.file 15 "./lib/ros_lib/roberto_msgs/MotorState.h"
   1:./lib/ros_lib/roberto_msgs/MotorState.h **** #ifndef _ROS_roberto_msgs_MotorState_h
   2:./lib/ros_lib/roberto_msgs/MotorState.h **** #define _ROS_roberto_msgs_MotorState_h
   3:./lib/ros_lib/roberto_msgs/MotorState.h **** 
   4:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdint.h>
   5:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <string.h>
   6:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdlib.h>
   7:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "ros/msg.h"
   8:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "std_msgs/Header.h"
   9:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  10:./lib/ros_lib/roberto_msgs/MotorState.h **** namespace roberto_msgs
  11:./lib/ros_lib/roberto_msgs/MotorState.h **** {
  12:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  13:./lib/ros_lib/roberto_msgs/MotorState.h ****   class MotorState : public ros::Msg
  14:./lib/ros_lib/roberto_msgs/MotorState.h ****   {
  15:./lib/ros_lib/roberto_msgs/MotorState.h ****     public:
  16:./lib/ros_lib/roberto_msgs/MotorState.h ****       std_msgs::Header header;
  17:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_angle;
  18:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_velocity;
  19:./lib/ros_lib/roberto_msgs/MotorState.h ****       float speed;
  20:./lib/ros_lib/roberto_msgs/MotorState.h ****       float acceleration;
  21:./lib/ros_lib/roberto_msgs/MotorState.h ****       uint8_t mode;
  22:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_AUTO = 0 };
  23:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_PIVOT = 1 };
  24:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SPIN = 2 };
  25:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SIDEWAYS = 3 };
  26:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  27:./lib/ros_lib/roberto_msgs/MotorState.h ****     MotorState():
  28:./lib/ros_lib/roberto_msgs/MotorState.h ****       header(),
  29:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_angle(0),
  30:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_velocity(0),
  31:./lib/ros_lib/roberto_msgs/MotorState.h ****       speed(0),
  32:./lib/ros_lib/roberto_msgs/MotorState.h ****       acceleration(0),
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****       mode(0)
  34:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  35:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  36:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int serialize(unsigned char *outbuffer) const
  38:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  39:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.serialize(outbuffer + offset);
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
  46:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  47:./lib/ros_lib/roberto_msgs/MotorState.h ****       return offset;
  48:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  49:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  52:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.deserialize(inbuffer + offset);
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
  59:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  60:./lib/ros_lib/roberto_msgs/MotorState.h ****      return offset;
  61:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  62:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  63:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getType(){ return "roberto_msgs/MotorState"; };
 1051              		.loc 15 63 0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 1055              		@ link register save eliminated.
 1056              	.LVL74:
 1057              		.loc 15 63 0
 1058 0000 0048     		ldr	r0, .L96
 1059              	.LVL75:
 1060 0002 7047     		bx	lr
 1061              	.L97:
 1062              		.align	2
 1063              	.L96:
 1064 0004 E6020000 		.word	.LC27
 1065              		.cfi_endproc
 1066              	.LFE1244:
 1067              		.cantunwind
 1068              		.fnend
 1070              		.section	.text._ZN12roberto_msgs10MotorState6getMD5Ev,"axG",%progbits,_ZN12roberto_msgs10MotorStat
 1071              		.align	1
 1072              		.weak	_ZN12roberto_msgs10MotorState6getMD5Ev
 1073              		.thumb
 1074              		.thumb_func
 1076              	_ZN12roberto_msgs10MotorState6getMD5Ev:
 1077              		.fnstart
 1078              	.LFB1245:
  64:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getMD5(){ return "e8b5d1162b85151c49e02b8224796c0e"; };
 1079              		.loc 15 64 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083              		@ link register save eliminated.
 1084              	.LVL76:
 1085              		.loc 15 64 0
 1086 0000 0048     		ldr	r0, .L99
 1087              	.LVL77:
 1088 0002 7047     		bx	lr
 1089              	.L100:
 1090              		.align	2
 1091              	.L99:
 1092 0004 FE020000 		.word	.LC28
 1093              		.cfi_endproc
 1094              	.LFE1245:
 1095              		.cantunwind
 1096              		.fnend
 1098              		.section	.text._ZN13geometry_msgs9Transform7getTypeEv,"axG",%progbits,_ZN13geometry_msgs9Transform
 1099              		.align	1
 1100              		.weak	_ZN13geometry_msgs9Transform7getTypeEv
 1101              		.thumb
 1102              		.thumb_func
 1104              	_ZN13geometry_msgs9Transform7getTypeEv:
 1105              		.fnstart
 1106              	.LFB1251:
 1107              		.file 16 "./lib/ros_lib/geometry_msgs/Transform.h"
   1:./lib/ros_lib/geometry_msgs/Transform.h **** #ifndef _ROS_geometry_msgs_Transform_h
   2:./lib/ros_lib/geometry_msgs/Transform.h **** #define _ROS_geometry_msgs_Transform_h
   3:./lib/ros_lib/geometry_msgs/Transform.h **** 
   4:./lib/ros_lib/geometry_msgs/Transform.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/Transform.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/Transform.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/Transform.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/Transform.h **** #include "geometry_msgs/Vector3.h"
   9:./lib/ros_lib/geometry_msgs/Transform.h **** #include "geometry_msgs/Quaternion.h"
  10:./lib/ros_lib/geometry_msgs/Transform.h **** 
  11:./lib/ros_lib/geometry_msgs/Transform.h **** namespace geometry_msgs
  12:./lib/ros_lib/geometry_msgs/Transform.h **** {
  13:./lib/ros_lib/geometry_msgs/Transform.h **** 
  14:./lib/ros_lib/geometry_msgs/Transform.h ****   class Transform : public ros::Msg
  15:./lib/ros_lib/geometry_msgs/Transform.h ****   {
  16:./lib/ros_lib/geometry_msgs/Transform.h ****     public:
  17:./lib/ros_lib/geometry_msgs/Transform.h ****       geometry_msgs::Vector3 translation;
  18:./lib/ros_lib/geometry_msgs/Transform.h ****       geometry_msgs::Quaternion rotation;
  19:./lib/ros_lib/geometry_msgs/Transform.h **** 
  20:./lib/ros_lib/geometry_msgs/Transform.h ****     Transform():
  21:./lib/ros_lib/geometry_msgs/Transform.h ****       translation(),
  22:./lib/ros_lib/geometry_msgs/Transform.h ****       rotation()
  23:./lib/ros_lib/geometry_msgs/Transform.h ****     {
  24:./lib/ros_lib/geometry_msgs/Transform.h ****     }
  25:./lib/ros_lib/geometry_msgs/Transform.h **** 
  26:./lib/ros_lib/geometry_msgs/Transform.h ****     virtual int serialize(unsigned char *outbuffer) const
  27:./lib/ros_lib/geometry_msgs/Transform.h ****     {
  28:./lib/ros_lib/geometry_msgs/Transform.h ****       int offset = 0;
  29:./lib/ros_lib/geometry_msgs/Transform.h ****       offset += this->translation.serialize(outbuffer + offset);
  30:./lib/ros_lib/geometry_msgs/Transform.h ****       offset += this->rotation.serialize(outbuffer + offset);
  31:./lib/ros_lib/geometry_msgs/Transform.h ****       return offset;
  32:./lib/ros_lib/geometry_msgs/Transform.h ****     }
  33:./lib/ros_lib/geometry_msgs/Transform.h **** 
  34:./lib/ros_lib/geometry_msgs/Transform.h ****     virtual int deserialize(unsigned char *inbuffer)
  35:./lib/ros_lib/geometry_msgs/Transform.h ****     {
  36:./lib/ros_lib/geometry_msgs/Transform.h ****       int offset = 0;
  37:./lib/ros_lib/geometry_msgs/Transform.h ****       offset += this->translation.deserialize(inbuffer + offset);
  38:./lib/ros_lib/geometry_msgs/Transform.h ****       offset += this->rotation.deserialize(inbuffer + offset);
  39:./lib/ros_lib/geometry_msgs/Transform.h ****      return offset;
  40:./lib/ros_lib/geometry_msgs/Transform.h ****     }
  41:./lib/ros_lib/geometry_msgs/Transform.h **** 
  42:./lib/ros_lib/geometry_msgs/Transform.h ****     const char * getType(){ return "geometry_msgs/Transform"; };
 1108              		.loc 16 42 0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 0
 1111              		@ frame_needed = 0, uses_anonymous_args = 0
 1112              		@ link register save eliminated.
 1113              	.LVL78:
 1114              		.loc 16 42 0
 1115 0000 0048     		ldr	r0, .L102
 1116              	.LVL79:
 1117 0002 7047     		bx	lr
 1118              	.L103:
 1119              		.align	2
 1120              	.L102:
 1121 0004 1F030000 		.word	.LC29
 1122              		.cfi_endproc
 1123              	.LFE1251:
 1124              		.cantunwind
 1125              		.fnend
 1127              		.section	.text._ZN13geometry_msgs9Transform6getMD5Ev,"axG",%progbits,_ZN13geometry_msgs9Transform6
 1128              		.align	1
 1129              		.weak	_ZN13geometry_msgs9Transform6getMD5Ev
 1130              		.thumb
 1131              		.thumb_func
 1133              	_ZN13geometry_msgs9Transform6getMD5Ev:
 1134              		.fnstart
 1135              	.LFB1252:
  43:./lib/ros_lib/geometry_msgs/Transform.h ****     const char * getMD5(){ return "ac9eff44abf714214112b05d54a3cf9b"; };
 1136              		.loc 16 43 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140              		@ link register save eliminated.
 1141              	.LVL80:
 1142              		.loc 16 43 0
 1143 0000 0048     		ldr	r0, .L105
 1144              	.LVL81:
 1145 0002 7047     		bx	lr
 1146              	.L106:
 1147              		.align	2
 1148              	.L105:
 1149 0004 37030000 		.word	.LC30
 1150              		.cfi_endproc
 1151              	.LFE1252:
 1152              		.cantunwind
 1153              		.fnend
 1155              		.section	.text._ZN13geometry_msgs16TransformStamped7getTypeEv,"axG",%progbits,_ZN13geometry_msgs16
 1156              		.align	1
 1157              		.weak	_ZN13geometry_msgs16TransformStamped7getTypeEv
 1158              		.thumb
 1159              		.thumb_func
 1161              	_ZN13geometry_msgs16TransformStamped7getTypeEv:
 1162              		.fnstart
 1163              	.LFB1258:
 1164              		.file 17 "./lib/ros_lib/geometry_msgs/TransformStamped.h"
   1:./lib/ros_lib/geometry_msgs/TransformStamped.h **** #ifndef _ROS_geometry_msgs_TransformStamped_h
   2:./lib/ros_lib/geometry_msgs/TransformStamped.h **** #define _ROS_geometry_msgs_TransformStamped_h
   3:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
   4:./lib/ros_lib/geometry_msgs/TransformStamped.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/TransformStamped.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/TransformStamped.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/TransformStamped.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/TransformStamped.h **** #include "std_msgs/Header.h"
   9:./lib/ros_lib/geometry_msgs/TransformStamped.h **** #include "geometry_msgs/Transform.h"
  10:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
  11:./lib/ros_lib/geometry_msgs/TransformStamped.h **** namespace geometry_msgs
  12:./lib/ros_lib/geometry_msgs/TransformStamped.h **** {
  13:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
  14:./lib/ros_lib/geometry_msgs/TransformStamped.h ****   class TransformStamped : public ros::Msg
  15:./lib/ros_lib/geometry_msgs/TransformStamped.h ****   {
  16:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     public:
  17:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       std_msgs::Header header;
  18:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       const char* child_frame_id;
  19:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       geometry_msgs::Transform transform;
  20:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
  21:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     TransformStamped():
  22:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       header(),
  23:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       child_frame_id(""),
  24:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       transform()
  25:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
  26:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     }
  27:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
  28:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     virtual int serialize(unsigned char *outbuffer) const
  29:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
  30:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       int offset = 0;
  31:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += this->header.serialize(outbuffer + offset);
  32:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       uint32_t length_child_frame_id = strlen(this->child_frame_id);
  33:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       memcpy(outbuffer + offset, &length_child_frame_id, sizeof(uint32_t));
  34:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += 4;
  35:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       memcpy(outbuffer + offset, this->child_frame_id, length_child_frame_id);
  36:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += length_child_frame_id;
  37:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += this->transform.serialize(outbuffer + offset);
  38:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       return offset;
  39:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     }
  40:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
  41:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     virtual int deserialize(unsigned char *inbuffer)
  42:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
  43:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       int offset = 0;
  44:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += this->header.deserialize(inbuffer + offset);
  45:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       uint32_t length_child_frame_id;
  46:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       memcpy(&length_child_frame_id, (inbuffer + offset), sizeof(uint32_t));
  47:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += 4;
  48:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       for(unsigned int k= offset; k< offset+length_child_frame_id; ++k){
  49:./lib/ros_lib/geometry_msgs/TransformStamped.h ****           inbuffer[k-1]=inbuffer[k];
  50:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       }
  51:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       inbuffer[offset+length_child_frame_id-1]=0;
  52:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       this->child_frame_id = (char *)(inbuffer + offset-1);
  53:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += length_child_frame_id;
  54:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += this->transform.deserialize(inbuffer + offset);
  55:./lib/ros_lib/geometry_msgs/TransformStamped.h ****      return offset;
  56:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     }
  57:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
  58:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     const char * getType(){ return "geometry_msgs/TransformStamped"; };
 1165              		.loc 17 58 0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 0
 1168              		@ frame_needed = 0, uses_anonymous_args = 0
 1169              		@ link register save eliminated.
 1170              	.LVL82:
 1171              		.loc 17 58 0
 1172 0000 0048     		ldr	r0, .L108
 1173              	.LVL83:
 1174 0002 7047     		bx	lr
 1175              	.L109:
 1176              		.align	2
 1177              	.L108:
 1178 0004 58030000 		.word	.LC31
 1179              		.cfi_endproc
 1180              	.LFE1258:
 1181              		.cantunwind
 1182              		.fnend
 1184              		.section	.text._ZN13geometry_msgs16TransformStamped6getMD5Ev,"axG",%progbits,_ZN13geometry_msgs16T
 1185              		.align	1
 1186              		.weak	_ZN13geometry_msgs16TransformStamped6getMD5Ev
 1187              		.thumb
 1188              		.thumb_func
 1190              	_ZN13geometry_msgs16TransformStamped6getMD5Ev:
 1191              		.fnstart
 1192              	.LFB1259:
  59:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     const char * getMD5(){ return "b5764a33bfeb3588febc2682852579b0"; };
 1193              		.loc 17 59 0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 0
 1196              		@ frame_needed = 0, uses_anonymous_args = 0
 1197              		@ link register save eliminated.
 1198              	.LVL84:
 1199              		.loc 17 59 0
 1200 0000 0048     		ldr	r0, .L111
 1201              	.LVL85:
 1202 0002 7047     		bx	lr
 1203              	.L112:
 1204              		.align	2
 1205              	.L111:
 1206 0004 77030000 		.word	.LC32
 1207              		.cfi_endproc
 1208              	.LFE1259:
 1209              		.cantunwind
 1210              		.fnend
 1212              		.section	.text._ZNK2tf9tfMessage9serializeEPh,"axG",%progbits,_ZNK2tf9tfMessage9serializeEPh,comda
 1213              		.align	1
 1214              		.weak	_ZNK2tf9tfMessage9serializeEPh
 1215              		.thumb
 1216              		.thumb_func
 1218              	_ZNK2tf9tfMessage9serializeEPh:
 1219              		.fnstart
 1220              	.LFB1270:
 1221              		.file 18 "./lib/ros_lib/tf/tfMessage.h"
   1:./lib/ros_lib/tf/tfMessage.h **** #ifndef _ROS_tf_tfMessage_h
   2:./lib/ros_lib/tf/tfMessage.h **** #define _ROS_tf_tfMessage_h
   3:./lib/ros_lib/tf/tfMessage.h **** 
   4:./lib/ros_lib/tf/tfMessage.h **** #include <stdint.h>
   5:./lib/ros_lib/tf/tfMessage.h **** #include <string.h>
   6:./lib/ros_lib/tf/tfMessage.h **** #include <stdlib.h>
   7:./lib/ros_lib/tf/tfMessage.h **** #include "ros/msg.h"
   8:./lib/ros_lib/tf/tfMessage.h **** #include "geometry_msgs/TransformStamped.h"
   9:./lib/ros_lib/tf/tfMessage.h **** 
  10:./lib/ros_lib/tf/tfMessage.h **** namespace tf
  11:./lib/ros_lib/tf/tfMessage.h **** {
  12:./lib/ros_lib/tf/tfMessage.h **** 
  13:./lib/ros_lib/tf/tfMessage.h ****   class tfMessage : public ros::Msg
  14:./lib/ros_lib/tf/tfMessage.h ****   {
  15:./lib/ros_lib/tf/tfMessage.h ****     public:
  16:./lib/ros_lib/tf/tfMessage.h ****       uint8_t transforms_length;
  17:./lib/ros_lib/tf/tfMessage.h ****       geometry_msgs::TransformStamped st_transforms;
  18:./lib/ros_lib/tf/tfMessage.h ****       geometry_msgs::TransformStamped * transforms;
  19:./lib/ros_lib/tf/tfMessage.h **** 
  20:./lib/ros_lib/tf/tfMessage.h ****     tfMessage():
  21:./lib/ros_lib/tf/tfMessage.h ****       transforms_length(0), transforms(NULL)
  22:./lib/ros_lib/tf/tfMessage.h ****     {
  23:./lib/ros_lib/tf/tfMessage.h ****     }
  24:./lib/ros_lib/tf/tfMessage.h **** 
  25:./lib/ros_lib/tf/tfMessage.h ****     virtual int serialize(unsigned char *outbuffer) const
 1222              		.loc 18 25 0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 0
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
 1226              	.LVL86:
 1227 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1228              		.save {r4, r5, r6, r7, r8, lr}
 1229              	.LCFI0:
 1230              		.cfi_def_cfa_offset 24
 1231              		.cfi_offset 4, -24
 1232              		.cfi_offset 5, -20
 1233              		.cfi_offset 6, -16
 1234              		.cfi_offset 7, -12
 1235              		.cfi_offset 8, -8
 1236              		.cfi_offset 14, -4
 1237              		.loc 18 25 0
 1238 0004 0C46     		mov	r4, r1
  26:./lib/ros_lib/tf/tfMessage.h ****     {
  27:./lib/ros_lib/tf/tfMessage.h ****       int offset = 0;
  28:./lib/ros_lib/tf/tfMessage.h ****       *(outbuffer + offset++) = transforms_length;
 1239              		.loc 18 28 0
 1240 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  25:./lib/ros_lib/tf/tfMessage.h ****     {
 1241              		.loc 18 25 0
 1242 0008 0646     		mov	r6, r0
  29:./lib/ros_lib/tf/tfMessage.h ****       *(outbuffer + offset++) = 0;
 1243              		.loc 18 29 0
 1244 000a 0020     		movs	r0, #0
 1245              	.LVL87:
  28:./lib/ros_lib/tf/tfMessage.h ****       *(outbuffer + offset++) = 0;
 1246              		.loc 18 28 0
 1247 000c 0B70     		strb	r3, [r1]
 1248              	.LVL88:
 1249              		.loc 18 29 0
 1250 000e 4870     		strb	r0, [r1, #1]
 1251              	.LVL89:
  30:./lib/ros_lib/tf/tfMessage.h ****       *(outbuffer + offset++) = 0;
 1252              		.loc 18 30 0
 1253 0010 8870     		strb	r0, [r1, #2]
 1254              	.LVL90:
  31:./lib/ros_lib/tf/tfMessage.h ****       *(outbuffer + offset++) = 0;
 1255              		.loc 18 31 0
 1256 0012 C870     		strb	r0, [r1, #3]
 1257              	.LVL91:
 1258 0014 0425     		movs	r5, #4
 1259              	.LBB340:
  32:./lib/ros_lib/tf/tfMessage.h ****       for( uint8_t i = 0; i < transforms_length; i++){
  33:./lib/ros_lib/tf/tfMessage.h ****       offset += this->transforms[i].serialize(outbuffer + offset);
 1260              		.loc 18 33 0
 1261 0016 4FF04408 		mov	r8, #68
 1262              	.LVL92:
 1263              	.L115:
  32:./lib/ros_lib/tf/tfMessage.h ****       for( uint8_t i = 0; i < transforms_length; i++){
 1264              		.loc 18 32 0 discriminator 3
 1265 001a 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 1266 001c 471C     		adds	r7, r0, #1
 1267 001e C0B2     		uxtb	r0, r0
 1268 0020 8342     		cmp	r3, r0
 1269 0022 0AD9     		bls	.L114
 1270              		.loc 18 33 0 discriminator 2
 1271 0024 08FB00F0 		mul	r0, r8, r0
 1272              	.LVL93:
 1273 0028 F36C     		ldr	r3, [r6, #76]
 1274 002a 6119     		adds	r1, r4, r5
 1275 002c 1A58     		ldr	r2, [r3, r0]
 1276 002e 1844     		add	r0, r0, r3
 1277 0030 1268     		ldr	r2, [r2]
 1278 0032 9047     		blx	r2
 1279              	.LVL94:
 1280 0034 0544     		add	r5, r5, r0
 1281              	.LVL95:
  32:./lib/ros_lib/tf/tfMessage.h ****       for( uint8_t i = 0; i < transforms_length; i++){
 1282              		.loc 18 32 0 discriminator 2
 1283 0036 3846     		mov	r0, r7
 1284 0038 EFE7     		b	.L115
 1285              	.LVL96:
 1286              	.L114:
 1287              	.LBE340:
  34:./lib/ros_lib/tf/tfMessage.h ****       }
  35:./lib/ros_lib/tf/tfMessage.h ****       return offset;
  36:./lib/ros_lib/tf/tfMessage.h ****     }
 1288              		.loc 18 36 0
 1289 003a 2846     		mov	r0, r5
 1290              	.LVL97:
 1291 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1292              		.cfi_endproc
 1293              	.LFE1270:
 1294              		.fnend
 1296              		.section	.text._ZN2tf9tfMessage7getTypeEv,"axG",%progbits,_ZN2tf9tfMessage7getTypeEv,comdat
 1297              		.align	1
 1298              		.weak	_ZN2tf9tfMessage7getTypeEv
 1299              		.thumb
 1300              		.thumb_func
 1302              	_ZN2tf9tfMessage7getTypeEv:
 1303              		.fnstart
 1304              	.LFB1272:
  37:./lib/ros_lib/tf/tfMessage.h **** 
  38:./lib/ros_lib/tf/tfMessage.h ****     virtual int deserialize(unsigned char *inbuffer)
  39:./lib/ros_lib/tf/tfMessage.h ****     {
  40:./lib/ros_lib/tf/tfMessage.h ****       int offset = 0;
  41:./lib/ros_lib/tf/tfMessage.h ****       uint8_t transforms_lengthT = *(inbuffer + offset++);
  42:./lib/ros_lib/tf/tfMessage.h ****       if(transforms_lengthT > transforms_length)
  43:./lib/ros_lib/tf/tfMessage.h ****         this->transforms = (geometry_msgs::TransformStamped*)realloc(this->transforms, transforms_l
  44:./lib/ros_lib/tf/tfMessage.h ****       offset += 3;
  45:./lib/ros_lib/tf/tfMessage.h ****       transforms_length = transforms_lengthT;
  46:./lib/ros_lib/tf/tfMessage.h ****       for( uint8_t i = 0; i < transforms_length; i++){
  47:./lib/ros_lib/tf/tfMessage.h ****       offset += this->st_transforms.deserialize(inbuffer + offset);
  48:./lib/ros_lib/tf/tfMessage.h ****         memcpy( &(this->transforms[i]), &(this->st_transforms), sizeof(geometry_msgs::TransformStam
  49:./lib/ros_lib/tf/tfMessage.h ****       }
  50:./lib/ros_lib/tf/tfMessage.h ****      return offset;
  51:./lib/ros_lib/tf/tfMessage.h ****     }
  52:./lib/ros_lib/tf/tfMessage.h **** 
  53:./lib/ros_lib/tf/tfMessage.h ****     const char * getType(){ return "tf/tfMessage"; };
 1305              		.loc 18 53 0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309              		@ link register save eliminated.
 1310              	.LVL98:
 1311              		.loc 18 53 0
 1312 0000 0048     		ldr	r0, .L118
 1313              	.LVL99:
 1314 0002 7047     		bx	lr
 1315              	.L119:
 1316              		.align	2
 1317              	.L118:
 1318 0004 98030000 		.word	.LC33
 1319              		.cfi_endproc
 1320              	.LFE1272:
 1321              		.cantunwind
 1322              		.fnend
 1324              		.section	.text._ZN2tf9tfMessage6getMD5Ev,"axG",%progbits,_ZN2tf9tfMessage6getMD5Ev,comdat
 1325              		.align	1
 1326              		.weak	_ZN2tf9tfMessage6getMD5Ev
 1327              		.thumb
 1328              		.thumb_func
 1330              	_ZN2tf9tfMessage6getMD5Ev:
 1331              		.fnstart
 1332              	.LFB1273:
  54:./lib/ros_lib/tf/tfMessage.h ****     const char * getMD5(){ return "94810edda583a504dfda3829e70d7eec"; };
 1333              		.loc 18 54 0
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 0
 1336              		@ frame_needed = 0, uses_anonymous_args = 0
 1337              		@ link register save eliminated.
 1338              	.LVL100:
 1339              		.loc 18 54 0
 1340 0000 0048     		ldr	r0, .L121
 1341              	.LVL101:
 1342 0002 7047     		bx	lr
 1343              	.L122:
 1344              		.align	2
 1345              	.L121:
 1346 0004 A5030000 		.word	.LC34
 1347              		.cfi_endproc
 1348              	.LFE1273:
 1349              		.cantunwind
 1350              		.fnend
 1352              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv,"axG",%pr
 1353              		.align	1
 1354              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
 1355              		.thumb
 1356              		.thumb_func
 1358              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:
 1359              		.fnstart
 1360              	.LFB1364:
 1361              		.file 19 "./lib/ros_lib/ros/node_handle.h"
   1:./lib/ros_lib/ros/node_handle.h **** /*
   2:./lib/ros_lib/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/node_handle.h ****  *
   4:./lib/ros_lib/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/node_handle.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/node_handle.h ****  *
   7:./lib/ros_lib/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/node_handle.h ****  * are met:
  10:./lib/ros_lib/ros/node_handle.h ****  *
  11:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/node_handle.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/node_handle.h ****  *
  21:./lib/ros_lib/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/node_handle.h ****  */
  34:./lib/ros_lib/ros/node_handle.h **** 
  35:./lib/ros_lib/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:./lib/ros_lib/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:./lib/ros_lib/ros/node_handle.h **** 
  38:./lib/ros_lib/ros/node_handle.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/node_handle.h **** 
  40:./lib/ros_lib/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:./lib/ros_lib/ros/node_handle.h **** 
  45:./lib/ros_lib/ros/node_handle.h **** #define SYNC_SECONDS        5
  46:./lib/ros_lib/ros/node_handle.h **** 
  47:./lib/ros_lib/ros/node_handle.h **** #define MODE_FIRST_FF       0
  48:./lib/ros_lib/ros/node_handle.h **** /*
  49:./lib/ros_lib/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  50:./lib/ros_lib/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  51:./lib/ros_lib/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  52:./lib/ros_lib/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  53:./lib/ros_lib/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  54:./lib/ros_lib/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  55:./lib/ros_lib/ros/node_handle.h ****  */
  56:./lib/ros_lib/ros/node_handle.h **** #define MODE_PROTOCOL_VER   1
  57:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER1		0xff // through groovy
  58:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER2		0xfe // in hydro
  59:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER 		PROTOCOL_VER2
  60:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_L         2
  61:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_H         3
  62:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_CHECKSUM  4   // checksum for msg size received from size L and H
  63:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_L        5   // waiting for topic id
  64:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_H        6
  65:./lib/ros_lib/ros/node_handle.h **** #define MODE_MESSAGE        7
  66:./lib/ros_lib/ros/node_handle.h **** #define MODE_MSG_CHECKSUM   8   // checksum for msg and topic id
  67:./lib/ros_lib/ros/node_handle.h **** 
  68:./lib/ros_lib/ros/node_handle.h **** 
  69:./lib/ros_lib/ros/node_handle.h **** #define MSG_TIMEOUT 20  //20 milliseconds to recieve all of message data
  70:./lib/ros_lib/ros/node_handle.h **** 
  71:./lib/ros_lib/ros/node_handle.h **** #include "msg.h"
  72:./lib/ros_lib/ros/node_handle.h **** 
  73:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  74:./lib/ros_lib/ros/node_handle.h **** 
  75:./lib/ros_lib/ros/node_handle.h ****   class NodeHandleBase_{
  76:./lib/ros_lib/ros/node_handle.h ****     public:
  77:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg* msg)=0;
  78:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce()=0;
  79:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected()=0;
  80:./lib/ros_lib/ros/node_handle.h ****     };
  81:./lib/ros_lib/ros/node_handle.h **** }
  82:./lib/ros_lib/ros/node_handle.h **** 
  83:./lib/ros_lib/ros/node_handle.h **** #include "publisher.h"
  84:./lib/ros_lib/ros/node_handle.h **** #include "subscriber.h"
  85:./lib/ros_lib/ros/node_handle.h **** #include "service_server.h"
  86:./lib/ros_lib/ros/node_handle.h **** #include "service_client.h"
  87:./lib/ros_lib/ros/node_handle.h **** 
  88:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  89:./lib/ros_lib/ros/node_handle.h **** 
  90:./lib/ros_lib/ros/node_handle.h ****   using rosserial_msgs::TopicInfo;
  91:./lib/ros_lib/ros/node_handle.h **** 
  92:./lib/ros_lib/ros/node_handle.h ****   /* Node Handle */
  93:./lib/ros_lib/ros/node_handle.h ****   template<class Hardware,
  94:./lib/ros_lib/ros/node_handle.h ****            int MAX_SUBSCRIBERS=25,
  95:./lib/ros_lib/ros/node_handle.h ****            int MAX_PUBLISHERS=25,
  96:./lib/ros_lib/ros/node_handle.h ****            int INPUT_SIZE=512,
  97:./lib/ros_lib/ros/node_handle.h ****            int OUTPUT_SIZE=512>
  98:./lib/ros_lib/ros/node_handle.h ****   class NodeHandle_ : public NodeHandleBase_
  99:./lib/ros_lib/ros/node_handle.h ****   {
 100:./lib/ros_lib/ros/node_handle.h ****     protected:
 101:./lib/ros_lib/ros/node_handle.h ****       Hardware hardware_;
 102:./lib/ros_lib/ros/node_handle.h **** 
 103:./lib/ros_lib/ros/node_handle.h ****       /* time used for syncing */
 104:./lib/ros_lib/ros/node_handle.h ****       uint32_t rt_time;
 105:./lib/ros_lib/ros/node_handle.h **** 
 106:./lib/ros_lib/ros/node_handle.h ****       /* used for computing current time */
 107:./lib/ros_lib/ros/node_handle.h ****       uint32_t sec_offset, nsec_offset;
 108:./lib/ros_lib/ros/node_handle.h **** 
 109:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_in[INPUT_SIZE];
 110:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_out[OUTPUT_SIZE];
 111:./lib/ros_lib/ros/node_handle.h **** 
 112:./lib/ros_lib/ros/node_handle.h ****       Publisher * publishers[MAX_PUBLISHERS];
 113:./lib/ros_lib/ros/node_handle.h ****       Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 114:./lib/ros_lib/ros/node_handle.h **** 
 115:./lib/ros_lib/ros/node_handle.h ****       /*
 116:./lib/ros_lib/ros/node_handle.h ****        * Setup Functions
 117:./lib/ros_lib/ros/node_handle.h ****        */
 118:./lib/ros_lib/ros/node_handle.h ****     public:
 119:./lib/ros_lib/ros/node_handle.h ****       NodeHandle_() : configured_(false) {
 120:./lib/ros_lib/ros/node_handle.h **** 
 121:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_PUBLISHERS; i++)
 122:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 123:./lib/ros_lib/ros/node_handle.h **** 
 124:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_SUBSCRIBERS; i++)
 125:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 126:./lib/ros_lib/ros/node_handle.h **** 
 127:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< INPUT_SIZE; i++)
 128:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 129:./lib/ros_lib/ros/node_handle.h **** 
 130:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< OUTPUT_SIZE; i++)
 131:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 132:./lib/ros_lib/ros/node_handle.h **** 
 133:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 134:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 135:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats_length = 0;
 136:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats = NULL;
 137:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 138:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 139:./lib/ros_lib/ros/node_handle.h ****       }
 140:./lib/ros_lib/ros/node_handle.h **** 
 141:./lib/ros_lib/ros/node_handle.h ****       Hardware* getHardware(){
 142:./lib/ros_lib/ros/node_handle.h ****         return &hardware_;
 143:./lib/ros_lib/ros/node_handle.h ****       }
 144:./lib/ros_lib/ros/node_handle.h **** 
 145:./lib/ros_lib/ros/node_handle.h ****       /* Start serial, initialize buffers */
 146:./lib/ros_lib/ros/node_handle.h ****       void initNode(){
 147:./lib/ros_lib/ros/node_handle.h ****         hardware_.init();
 148:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 149:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 150:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 151:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 152:./lib/ros_lib/ros/node_handle.h ****       };
 153:./lib/ros_lib/ros/node_handle.h **** 
 154:./lib/ros_lib/ros/node_handle.h ****       /* Start a named port, which may be network server IP, initialize buffers */
 155:./lib/ros_lib/ros/node_handle.h ****       void initNode(char *portName){
 156:./lib/ros_lib/ros/node_handle.h ****         hardware_.init(portName);
 157:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 158:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 159:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 160:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 161:./lib/ros_lib/ros/node_handle.h ****       };
 162:./lib/ros_lib/ros/node_handle.h **** 
 163:./lib/ros_lib/ros/node_handle.h ****     protected:
 164:./lib/ros_lib/ros/node_handle.h ****       //State machine variables for spinOnce
 165:./lib/ros_lib/ros/node_handle.h ****       int mode_;
 166:./lib/ros_lib/ros/node_handle.h ****       int bytes_;
 167:./lib/ros_lib/ros/node_handle.h ****       int topic_;
 168:./lib/ros_lib/ros/node_handle.h ****       int index_;
 169:./lib/ros_lib/ros/node_handle.h ****       int checksum_;
 170:./lib/ros_lib/ros/node_handle.h **** 
 171:./lib/ros_lib/ros/node_handle.h ****       bool configured_;
 172:./lib/ros_lib/ros/node_handle.h **** 
 173:./lib/ros_lib/ros/node_handle.h ****       /* used for syncing the time */
 174:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_time;
 175:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_receive_time;
 176:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_msg_timeout_time;
 177:./lib/ros_lib/ros/node_handle.h **** 
 178:./lib/ros_lib/ros/node_handle.h ****     public:
 179:./lib/ros_lib/ros/node_handle.h ****       /* This function goes in your loop() function, it handles
 180:./lib/ros_lib/ros/node_handle.h ****        *  serial input and callbacks for subscribers.
 181:./lib/ros_lib/ros/node_handle.h ****        */
 182:./lib/ros_lib/ros/node_handle.h **** 
 183:./lib/ros_lib/ros/node_handle.h **** 
 184:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce(){
 185:./lib/ros_lib/ros/node_handle.h **** 
 186:./lib/ros_lib/ros/node_handle.h ****         /* restart if timed out */
 187:./lib/ros_lib/ros/node_handle.h ****         uint32_t c_time = hardware_.time();
 188:./lib/ros_lib/ros/node_handle.h ****         if( (c_time - last_sync_receive_time) > (SYNC_SECONDS*2200) ){
 189:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 190:./lib/ros_lib/ros/node_handle.h ****          }
 191:./lib/ros_lib/ros/node_handle.h **** 
 192:./lib/ros_lib/ros/node_handle.h ****         /* reset if message has timed out */
 193:./lib/ros_lib/ros/node_handle.h ****         if ( mode_ != MODE_FIRST_FF){
 194:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 195:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 196:./lib/ros_lib/ros/node_handle.h ****           }
 197:./lib/ros_lib/ros/node_handle.h ****         }
 198:./lib/ros_lib/ros/node_handle.h **** 
 199:./lib/ros_lib/ros/node_handle.h ****         /* while available buffer, read data */
 200:./lib/ros_lib/ros/node_handle.h ****         while( true )
 201:./lib/ros_lib/ros/node_handle.h ****         {
 202:./lib/ros_lib/ros/node_handle.h ****           int data = hardware_.read();
 203:./lib/ros_lib/ros/node_handle.h ****           if( data < 0 )
 204:./lib/ros_lib/ros/node_handle.h ****             break;
 205:./lib/ros_lib/ros/node_handle.h ****           checksum_ += data;
 206:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 207:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 208:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 209:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 210:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 211:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 212:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 213:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 214:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 215:./lib/ros_lib/ros/node_handle.h ****             }
 216:./lib/ros_lib/ros/node_handle.h ****             else if( hardware_.time() - c_time > (SYNC_SECONDS)){
 217:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 218:./lib/ros_lib/ros/node_handle.h ****               configured_=false;
 219:./lib/ros_lib/ros/node_handle.h ****               return -2;
 220:./lib/ros_lib/ros/node_handle.h ****             }
 221:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_PROTOCOL_VER ){
 222:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 223:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 224:./lib/ros_lib/ros/node_handle.h ****             }else{
 225:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_FIRST_FF;
 226:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 227:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 228:./lib/ros_lib/ros/node_handle.h ****             }
 229:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_SIZE_L ){   /* bottom half of message size */
 230:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 231:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 232:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 233:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 234:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_H ){   /* top half of message size */
 235:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 236:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 237:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 238:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 239:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 240:./lib/ros_lib/ros/node_handle.h **** 	    else
 241:./lib/ros_lib/ros/node_handle.h **** 	      mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 242:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 243:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 244:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 245:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 246:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 247:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 248:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 249:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 250:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 251:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_MSG_CHECKSUM ){ /* do checksum */
 252:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 253:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 254:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 255:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 256:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 258:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 259:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 260:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 261:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 262:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 263:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 264:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 265:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 266:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 267:./lib/ros_lib/ros/node_handle.h ****               }else{
 268:./lib/ros_lib/ros/node_handle.h ****                 if(subscribers[topic_-100])
 269:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 270:./lib/ros_lib/ros/node_handle.h ****               }
 271:./lib/ros_lib/ros/node_handle.h ****             }
 272:./lib/ros_lib/ros/node_handle.h ****           }
 273:./lib/ros_lib/ros/node_handle.h ****         }
 274:./lib/ros_lib/ros/node_handle.h **** 
 275:./lib/ros_lib/ros/node_handle.h ****         /* occasionally sync time */
 276:./lib/ros_lib/ros/node_handle.h ****         if( configured_ && ((c_time-last_sync_time) > (SYNC_SECONDS*500) )){
 277:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 278:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 279:./lib/ros_lib/ros/node_handle.h ****         }
 280:./lib/ros_lib/ros/node_handle.h **** 
 281:./lib/ros_lib/ros/node_handle.h ****         return 0;
 282:./lib/ros_lib/ros/node_handle.h ****       }
 283:./lib/ros_lib/ros/node_handle.h **** 
 284:./lib/ros_lib/ros/node_handle.h **** 
 285:./lib/ros_lib/ros/node_handle.h ****       /* Are we connected to the PC? */
 286:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected() {
 1362              		.loc 19 286 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 0
 1365              		@ frame_needed = 0, uses_anonymous_args = 0
 1366              		@ link register save eliminated.
 1367              	.LVL102:
 287:./lib/ros_lib/ros/node_handle.h ****         return configured_;
 288:./lib/ros_lib/ros/node_handle.h ****       };
 1368              		.loc 19 288 0
 1369 0000 90F8F404 		ldrb	r0, [r0, #1268]	@ zero_extendqisi2
 1370              	.LVL103:
 1371 0004 7047     		bx	lr
 1372              		.cfi_endproc
 1373              	.LFE1364:
 1374              		.cantunwind
 1375              		.fnend
 1377              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh,"axG",%progbits,_ZN3ros10Subscri
 1378              		.align	1
 1379              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 1380              		.thumb
 1381              		.thumb_func
 1383              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:
 1384              		.fnstart
 1385              	.LFB1380:
 1386              		.file 20 "./lib/ros_lib/ros/subscriber.h"
   1:./lib/ros_lib/ros/subscriber.h **** /* 
   2:./lib/ros_lib/ros/subscriber.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/subscriber.h ****  *
   4:./lib/ros_lib/ros/subscriber.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/subscriber.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/subscriber.h ****  *
   7:./lib/ros_lib/ros/subscriber.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/subscriber.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/subscriber.h ****  * are met:
  10:./lib/ros_lib/ros/subscriber.h ****  *
  11:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/subscriber.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/subscriber.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/subscriber.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/subscriber.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/subscriber.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/subscriber.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/subscriber.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/subscriber.h ****  *
  21:./lib/ros_lib/ros/subscriber.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/subscriber.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/subscriber.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/subscriber.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/subscriber.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/subscriber.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/subscriber.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/subscriber.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/subscriber.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/subscriber.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/subscriber.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/subscriber.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/subscriber.h ****  */
  34:./lib/ros_lib/ros/subscriber.h **** 
  35:./lib/ros_lib/ros/subscriber.h **** #ifndef ROS_SUBSCRIBER_H_
  36:./lib/ros_lib/ros/subscriber.h **** #define ROS_SUBSCRIBER_H_
  37:./lib/ros_lib/ros/subscriber.h **** 
  38:./lib/ros_lib/ros/subscriber.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/subscriber.h **** 
  40:./lib/ros_lib/ros/subscriber.h **** namespace ros {
  41:./lib/ros_lib/ros/subscriber.h **** 
  42:./lib/ros_lib/ros/subscriber.h ****   /* Base class for objects subscribers. */
  43:./lib/ros_lib/ros/subscriber.h ****   class Subscriber_
  44:./lib/ros_lib/ros/subscriber.h ****   {
  45:./lib/ros_lib/ros/subscriber.h ****     public:
  46:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char *data)=0;
  47:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType()=0;
  48:./lib/ros_lib/ros/subscriber.h **** 
  49:./lib/ros_lib/ros/subscriber.h ****       // id_ is set by NodeHandle when we advertise 
  50:./lib/ros_lib/ros/subscriber.h ****       int id_;
  51:./lib/ros_lib/ros/subscriber.h **** 
  52:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType()=0;
  53:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5()=0;
  54:./lib/ros_lib/ros/subscriber.h ****       const char * topic_;
  55:./lib/ros_lib/ros/subscriber.h ****   };
  56:./lib/ros_lib/ros/subscriber.h **** 
  57:./lib/ros_lib/ros/subscriber.h **** 
  58:./lib/ros_lib/ros/subscriber.h ****   /* Actual subscriber, templated on message type. */
  59:./lib/ros_lib/ros/subscriber.h ****   template<typename MsgT>
  60:./lib/ros_lib/ros/subscriber.h ****   class Subscriber: public Subscriber_{
  61:./lib/ros_lib/ros/subscriber.h ****     public:
  62:./lib/ros_lib/ros/subscriber.h ****       typedef void(*CallbackT)(const MsgT&);
  63:./lib/ros_lib/ros/subscriber.h ****       MsgT msg;
  64:./lib/ros_lib/ros/subscriber.h **** 
  65:./lib/ros_lib/ros/subscriber.h ****       Subscriber(const char * topic_name, CallbackT cb, int endpoint=rosserial_msgs::TopicInfo::ID_
  66:./lib/ros_lib/ros/subscriber.h ****         cb_(cb),
  67:./lib/ros_lib/ros/subscriber.h ****         endpoint_(endpoint)
  68:./lib/ros_lib/ros/subscriber.h ****       {
  69:./lib/ros_lib/ros/subscriber.h ****         topic_ = topic_name;
  70:./lib/ros_lib/ros/subscriber.h ****       };
  71:./lib/ros_lib/ros/subscriber.h **** 
  72:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char* data){
 1387              		.loc 20 72 0
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 0
 1390              		@ frame_needed = 0, uses_anonymous_args = 0
 1391              		@ link register save eliminated.
 1392              	.LVL104:
 1393              	.LBB341:
 1394              	.LBB342:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 1395              		.loc 5 33 0
 1396 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1397              	.LBE342:
 1398              	.LBE341:
  73:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
  74:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 1399              		.loc 20 74 0
 1400 0002 0C30     		adds	r0, r0, #12
 1401              	.LVL105:
 1402              	.LBB344:
 1403              	.LBB343:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 1404              		.loc 5 33 0
 1405 0004 0371     		strb	r3, [r0, #4]
 1406              	.LVL106:
 1407              	.LBE343:
 1408              	.LBE344:
 1409              		.loc 20 74 0
 1410 0006 8368     		ldr	r3, [r0, #8]
 1411 0008 1847     		bx	r3	@ indirect register sibling call
 1412              	.LVL107:
 1413              		.cfi_endproc
 1414              	.LFE1380:
 1415              		.cantunwind
 1416              		.fnend
 1418              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv,"axG",%progbits,_ZN3ros10
 1419              		.align	1
 1420              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 1421              		.thumb
 1422              		.thumb_func
 1424              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:
 1425              		.fnstart
 1426              	.LFB1381:
  75:./lib/ros_lib/ros/subscriber.h ****       }
  76:./lib/ros_lib/ros/subscriber.h **** 
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType(){ return this->msg.getType(); }
  78:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
  79:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1427              		.loc 20 79 0
 1428              		.cfi_startproc
 1429              		@ args = 0, pretend = 0, frame = 0
 1430              		@ frame_needed = 0, uses_anonymous_args = 0
 1431              		@ link register save eliminated.
 1432              	.LVL108:
 1433              		.loc 20 79 0
 1434 0000 8069     		ldr	r0, [r0, #24]
 1435              	.LVL109:
 1436 0002 7047     		bx	lr
 1437              		.cfi_endproc
 1438              	.LFE1381:
 1439              		.cantunwind
 1440              		.fnend
 1442              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv,"axG",%progbits,_ZN3ros10Subsc
 1443              		.align	1
 1444              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 1445              		.thumb
 1446              		.thumb_func
 1448              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:
 1449              		.fnstart
 1450              	.LFB1382:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1451              		.loc 20 77 0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 0
 1454              		@ frame_needed = 0, uses_anonymous_args = 0
 1455              		@ link register save eliminated.
 1456              	.LVL110:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1457              		.loc 20 77 0
 1458 0000 0048     		ldr	r0, .L127
 1459              	.LVL111:
 1460 0002 7047     		bx	lr
 1461              	.L128:
 1462              		.align	2
 1463              	.L127:
 1464 0004 DF000000 		.word	.LC8
 1465              		.cfi_endproc
 1466              	.LFE1382:
 1467              		.cantunwind
 1468              		.fnend
 1470              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev,"axG",%progbits,_ZN3ros10Subscri
 1471              		.align	1
 1472              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 1473              		.thumb
 1474              		.thumb_func
 1476              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:
 1477              		.fnstart
 1478              	.LFB1383:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1479              		.loc 20 78 0
 1480              		.cfi_startproc
 1481              		@ args = 0, pretend = 0, frame = 0
 1482              		@ frame_needed = 0, uses_anonymous_args = 0
 1483              		@ link register save eliminated.
 1484              	.LVL112:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1485              		.loc 20 78 0
 1486 0000 0048     		ldr	r0, .L130
 1487              	.LVL113:
 1488 0002 7047     		bx	lr
 1489              	.L131:
 1490              		.align	2
 1491              	.L130:
 1492 0004 EE000000 		.word	.LC9
 1493              		.cfi_endproc
 1494              	.LFE1383:
 1495              		.cantunwind
 1496              		.fnend
 1498              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv,"axG",%progbit
 1499              		.align	1
 1500              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 1501              		.thumb
 1502              		.thumb_func
 1504              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:
 1505              		.fnstart
 1506              	.LFB1385:
 1507              		.loc 20 79 0
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 0
 1510              		@ frame_needed = 0, uses_anonymous_args = 0
 1511              		@ link register save eliminated.
 1512              	.LVL114:
 1513              		.loc 20 79 0
 1514 0000 C06B     		ldr	r0, [r0, #60]
 1515              	.LVL115:
 1516 0002 7047     		bx	lr
 1517              		.cfi_endproc
 1518              	.LFE1385:
 1519              		.cantunwind
 1520              		.fnend
 1522              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv,"axG",%progbits,_ZN
 1523              		.align	1
 1524              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 1525              		.thumb
 1526              		.thumb_func
 1528              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:
 1529              		.fnstart
 1530              	.LFB1386:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1531              		.loc 20 77 0
 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 0
 1534              		@ frame_needed = 0, uses_anonymous_args = 0
 1535              		@ link register save eliminated.
 1536              	.LVL116:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1537              		.loc 20 77 0
 1538 0000 0048     		ldr	r0, .L134
 1539              	.LVL117:
 1540 0002 7047     		bx	lr
 1541              	.L135:
 1542              		.align	2
 1543              	.L134:
 1544 0004 E6020000 		.word	.LC27
 1545              		.cfi_endproc
 1546              	.LFE1386:
 1547              		.cantunwind
 1548              		.fnend
 1550              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev,"axG",%progbits,_ZN3r
 1551              		.align	1
 1552              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 1553              		.thumb
 1554              		.thumb_func
 1556              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:
 1557              		.fnstart
 1558              	.LFB1387:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1559              		.loc 20 78 0
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 0
 1562              		@ frame_needed = 0, uses_anonymous_args = 0
 1563              		@ link register save eliminated.
 1564              	.LVL118:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1565              		.loc 20 78 0
 1566 0000 0048     		ldr	r0, .L137
 1567              	.LVL119:
 1568 0002 7047     		bx	lr
 1569              	.L138:
 1570              		.align	2
 1571              	.L137:
 1572 0004 FE020000 		.word	.LC28
 1573              		.cfi_endproc
 1574              	.LFE1387:
 1575              		.cantunwind
 1576              		.fnend
 1578              		.text
 1579              		.align	1
 1580              		.global	_Z6led_cbRKN8std_msgs5UInt8E
 1581              		.thumb
 1582              		.thumb_func
 1584              	_Z6led_cbRKN8std_msgs5UInt8E:
 1585              		.fnstart
 1586              	.LFB1279:
 1587              		.file 21 "src/main.cpp"
   1:src/main.cpp  **** #include <stm32f10x.h>
   2:src/main.cpp  **** 
   3:src/main.cpp  **** #include <stdio.h>
   4:src/main.cpp  **** #include <math.h>
   5:src/main.cpp  **** 
   6:src/main.cpp  **** #include "motor.h"
   7:src/main.cpp  **** #include "motorSettings.h"
   8:src/main.cpp  **** #include "led.h"
   9:src/main.cpp  **** #include "encoder.h"
  10:src/main.cpp  **** #include "stm32_time.h"
  11:src/main.cpp  **** 
  12:src/main.cpp  **** 
  13:src/main.cpp  **** #include <ros.h>
  14:src/main.cpp  **** #include <std_msgs/MultiArrayDimension.h>
  15:src/main.cpp  **** #include <std_msgs/Float32MultiArray.h>
  16:src/main.cpp  **** #include <std_msgs/UInt8.h>
  17:src/main.cpp  **** #include <nav_msgs/Odometry.h>
  18:src/main.cpp  **** #include <sensor_msgs/Joy.h>
  19:src/main.cpp  **** #include <roberto_msgs/MotorState.h>
  20:src/main.cpp  **** #include <tf/tf.h>
  21:src/main.cpp  **** #include <tf/transform_broadcaster.h>
  22:src/main.cpp  **** #include <ros/time.h>
  23:src/main.cpp  **** 
  24:src/main.cpp  **** #define CMDMSGTIMEOUT 500 // millis
  25:src/main.cpp  **** 
  26:src/main.cpp  **** /* Private function prototypes -----------------------------------------------*/
  27:src/main.cpp  **** 
  28:src/main.cpp  **** 
  29:src/main.cpp  **** 
  30:src/main.cpp  **** __IO uint8_t Rx_Idx = 0x00;
  31:src/main.cpp  **** uint8_t slaveAddress;
  32:src/main.cpp  **** uint8_t RxBuffer [RXBUFFERSIZE] = {0};
  33:src/main.cpp  **** __IO uint8_t NumberOfByteToReceive = 0x00;
  34:src/main.cpp  **** __IO uint8_t GenerateStartStatus = 0x00;
  35:src/main.cpp  **** 
  36:src/main.cpp  **** motor *servo_left;
  37:src/main.cpp  **** motor *servo_right;
  38:src/main.cpp  **** motor *front_right;
  39:src/main.cpp  **** motor *front_left;
  40:src/main.cpp  **** motor *rear_right;
  41:src/main.cpp  **** motor *rear_left;
  42:src/main.cpp  **** 
  43:src/main.cpp  **** float d, L;
  44:src/main.cpp  **** 
  45:src/main.cpp  **** float motorCmd[4];
  46:src/main.cpp  **** uint8_t currentMode;
  47:src/main.cpp  **** uint32_t lastMsg;
  48:src/main.cpp  **** 
  49:src/main.cpp  **** ros::NodeHandle nh;
  50:src/main.cpp  **** 
  51:src/main.cpp  **** __IO bool shuttingDown = false;
  52:src/main.cpp  **** __IO bool waitForServos = false;
  53:src/main.cpp  **** 
  54:src/main.cpp  **** void led_cb( const std_msgs::UInt8& cmd_msg){
 1588              		.loc 21 54 0
 1589              		.cfi_startproc
 1590              		@ args = 0, pretend = 0, frame = 0
 1591              		@ frame_needed = 0, uses_anonymous_args = 0
 1592              		@ link register save eliminated.
 1593              	.LVL120:
  55:src/main.cpp  ****   led_set(cmd_msg.data);
 1594              		.loc 21 55 0
 1595 0000 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 1596              	.LVL121:
 1597 0002 FFF7FEBF 		b	led_set
 1598              	.LVL122:
 1599              		.cfi_endproc
 1600              	.LFE1279:
 1601              		.cantunwind
 1602              		.fnend
 1604              		.global	__aeabi_fcmpeq
 1605              		.global	__aeabi_fmul
 1606              		.global	__aeabi_fadd
 1607              		.global	__aeabi_fdiv
 1608              		.global	__aeabi_f2d
 1609              		.global	__aeabi_d2f
 1610              		.global	__aeabi_fsub
 1611              		.global	__aeabi_fcmpgt
 1612              		.global	__aeabi_fcmplt
 1613              		.align	1
 1614              		.global	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 1615              		.thumb
 1616              		.thumb_func
 1618              	_Z8motor_cbRKN12roberto_msgs10MotorStateE:
 1619              		.fnstart
 1620              	.LFB1280:
  56:src/main.cpp  **** }
  57:src/main.cpp  **** 
  58:src/main.cpp  **** 
  59:src/main.cpp  **** 
  60:src/main.cpp  **** void motor_cb( const roberto_msgs::MotorState& cmd_msg){
 1621              		.loc 21 60 0
 1622              		.cfi_startproc
 1623              		@ args = 0, pretend = 0, frame = 0
 1624              		@ frame_needed = 0, uses_anonymous_args = 0
 1625              	.LVL123:
 1626 0006 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1627              		.save {r4, r5, r6, r7, r8, r9, r10, lr}
 1628              	.LCFI1:
 1629              		.cfi_def_cfa_offset 32
 1630              		.cfi_offset 4, -32
 1631              		.cfi_offset 5, -28
 1632              		.cfi_offset 6, -24
 1633              		.cfi_offset 7, -20
 1634              		.cfi_offset 8, -16
 1635              		.cfi_offset 9, -12
 1636              		.cfi_offset 10, -8
 1637              		.cfi_offset 14, -4
 1638              		.loc 21 60 0
 1639 000a 8146     		mov	r9, r0
  61:src/main.cpp  ****   lastMsg = millis();
 1640              		.loc 21 61 0
 1641 000c FFF7FEFF 		bl	millis
 1642              	.LVL124:
 1643 0010 574C     		ldr	r4, .L161
  62:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
 1644              		.loc 21 62 0
 1645 0012 99F82880 		ldrb	r8, [r9, #40]	@ zero_extendqisi2
 1646              	.LVL125:
  63:src/main.cpp  ****   if(intMode == cmd_msg.DRIVE_MODE_AUTO){
  64:src/main.cpp  **** 
  65:src/main.cpp  ****   }
  66:src/main.cpp  **** 
  67:src/main.cpp  ****   if(currentMode != intMode){
 1647              		.loc 21 67 0
 1648 0016 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
  61:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
 1649              		.loc 21 61 0
 1650 0018 2060     		str	r0, [r4]
 1651              		.loc 21 67 0
 1652 001a 4345     		cmp	r3, r8
  68:src/main.cpp  ****     waitForServos = true;
 1653              		.loc 21 68 0
 1654 001c 1CBF     		itt	ne
 1655 001e 0123     		movne	r3, #1
 1656 0020 6371     		strbne	r3, [r4, #5]
 1657              	.LBB345:
  69:src/main.cpp  ****   }
  70:src/main.cpp  **** 
  71:src/main.cpp  ****   if(intMode == cmd_msg.DRIVE_MODE_PIVOT){
 1658              		.loc 21 71 0
 1659 0022 B8F1010F 		cmp	r8, #1
 1660 0026 74D1     		bne	.L142
 1661              	.LVL126:
 1662              	.LBB346:
 1663              	.LBB347:
  72:src/main.cpp  ****     float angle[2] = {0, 0};
  73:src/main.cpp  ****     float speedMult = 1;
  74:src/main.cpp  ****     if (cmd_msg.heading_angle != 0){
 1664              		.loc 21 74 0
 1665 0028 D9F81870 		ldr	r7, [r9, #24]	@ float
 1666 002c 0021     		movs	r1, #0
 1667 002e 3846     		mov	r0, r7
 1668 0030 FFF7FEFF 		bl	__aeabi_fcmpeq
 1669              	.LVL127:
 1670 0034 0028     		cmp	r0, #0
 1671 0036 30D1     		bne	.L158
 1672              	.LBB348:
  75:src/main.cpp  ****       float R = (1+cmd_msg.heading_angle*cmd_msg.heading_angle)/(2*cmd_msg.heading_angle);
 1673              		.loc 21 75 0
 1674 0038 3946     		mov	r1, r7
 1675 003a 3846     		mov	r0, r7
 1676 003c FFF7FEFF 		bl	__aeabi_fmul
 1677              	.LVL128:
 1678 0040 4FF07E51 		mov	r1, #1065353216
 1679 0044 FFF7FEFF 		bl	__aeabi_fadd
 1680              	.LVL129:
 1681 0048 3946     		mov	r1, r7
 1682 004a 0546     		mov	r5, r0
 1683 004c 3846     		mov	r0, r7
 1684 004e FFF7FEFF 		bl	__aeabi_fadd
 1685              	.LVL130:
 1686 0052 0146     		mov	r1, r0
 1687 0054 2846     		mov	r0, r5
 1688 0056 FFF7FEFF 		bl	__aeabi_fdiv
 1689              	.LVL131:
  76:src/main.cpp  ****       //angle[0] = atan(L/(B+R));   // B=L as robot is quadratic
  77:src/main.cpp  ****       angle[0] = atan(L/(L+R));
 1690              		.loc 21 77 0
 1691 005a A568     		ldr	r5, [r4, #8]	@ float
  75:src/main.cpp  ****       float R = (1+cmd_msg.heading_angle*cmd_msg.heading_angle)/(2*cmd_msg.heading_angle);
 1692              		.loc 21 75 0
 1693 005c 8246     		mov	r10, r0
 1694              	.LVL132:
 1695              		.loc 21 77 0
 1696 005e 2946     		mov	r1, r5
 1697 0060 FFF7FEFF 		bl	__aeabi_fadd
 1698              	.LVL133:
 1699 0064 0146     		mov	r1, r0
 1700 0066 2846     		mov	r0, r5
 1701 0068 FFF7FEFF 		bl	__aeabi_fdiv
 1702              	.LVL134:
 1703 006c FFF7FEFF 		bl	__aeabi_f2d
 1704              	.LVL135:
 1705 0070 FFF7FEFF 		bl	atan
 1706              	.LVL136:
 1707 0074 FFF7FEFF 		bl	__aeabi_d2f
 1708              	.LVL137:
  78:src/main.cpp  ****       angle[1] = atan(L/(L-R));
 1709              		.loc 21 78 0
 1710 0078 5146     		mov	r1, r10
  77:src/main.cpp  ****       angle[1] = atan(L/(L-R));
 1711              		.loc 21 77 0
 1712 007a 0646     		mov	r6, r0
 1713              	.LVL138:
 1714              		.loc 21 78 0
 1715 007c 2846     		mov	r0, r5
 1716              	.LVL139:
 1717 007e FFF7FEFF 		bl	__aeabi_fsub
 1718              	.LVL140:
 1719 0082 0146     		mov	r1, r0
 1720 0084 2846     		mov	r0, r5
 1721 0086 FFF7FEFF 		bl	__aeabi_fdiv
 1722              	.LVL141:
 1723 008a FFF7FEFF 		bl	__aeabi_f2d
 1724              	.LVL142:
 1725 008e FFF7FEFF 		bl	atan
 1726              	.LVL143:
 1727 0092 FFF7FEFF 		bl	__aeabi_d2f
 1728              	.LVL144:
 1729 0096 0546     		mov	r5, r0
 1730              	.LVL145:
 1731              	.LBE348:
 1732 0098 01E0     		b	.L143
 1733              	.LVL146:
 1734              	.L158:
 1735              	.LBE347:
  72:src/main.cpp  ****     float speedMult = 1;
 1736              		.loc 21 72 0
 1737 009a 0025     		movs	r5, #0
 1738 009c 2E46     		mov	r6, r5
 1739              	.LVL147:
 1740              	.L143:
  79:src/main.cpp  ****     }
  80:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed*speedMult;
 1741              		.loc 21 80 0
 1742 009e D9F82030 		ldr	r3, [r9, #32]	@ float
  81:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult;
  82:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed*speedMult;
  83:src/main.cpp  ****     motorCmd[3] = cmd_msg.speed*speedMult;
  84:src/main.cpp  **** 
  85:src/main.cpp  ****     angle[0] = angle[0] > MAX_ANGLE_PIVOT? MAX_ANGLE_PIVOT : ( angle[0] < -MAX_ANGLE_PIVOT? -MAX_AN
 1743              		.loc 21 85 0
 1744 00a2 3449     		ldr	r1, .L161+4
  80:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult;
 1745              		.loc 21 80 0
 1746 00a4 E360     		str	r3, [r4, #12]	@ float
  81:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult;
 1747              		.loc 21 81 0
 1748 00a6 2361     		str	r3, [r4, #16]	@ float
  82:src/main.cpp  ****     motorCmd[3] = cmd_msg.speed*speedMult;
 1749              		.loc 21 82 0
 1750 00a8 6361     		str	r3, [r4, #20]	@ float
  83:src/main.cpp  **** 
 1751              		.loc 21 83 0
 1752 00aa A361     		str	r3, [r4, #24]	@ float
 1753              		.loc 21 85 0
 1754 00ac 3046     		mov	r0, r6
 1755 00ae FFF7FEFF 		bl	__aeabi_fcmpgt
 1756              	.LVL148:
 1757 00b2 30B9     		cbnz	r0, .L152
 1758              		.loc 21 85 0 is_stmt 0 discriminator 2
 1759 00b4 3049     		ldr	r1, .L161+8
 1760 00b6 3046     		mov	r0, r6
 1761 00b8 FFF7FEFF 		bl	__aeabi_fcmplt
 1762              	.LVL149:
 1763 00bc 10B1     		cbz	r0, .L145
 1764              		.loc 21 85 0
 1765 00be 2E4E     		ldr	r6, .L161+8
 1766              	.LVL150:
 1767 00c0 00E0     		b	.L145
 1768              	.LVL151:
 1769              	.L152:
 1770 00c2 2C4E     		ldr	r6, .L161+4
 1771              	.LVL152:
 1772              	.L145:
  86:src/main.cpp  ****     angle[1] = angle[1] > MAX_ANGLE_PIVOT? MAX_ANGLE_PIVOT : ( angle[1] < -MAX_ANGLE_PIVOT? -MAX_AN
 1773              		.loc 21 86 0 is_stmt 1 discriminator 8
 1774 00c4 2B49     		ldr	r1, .L161+4
 1775 00c6 2846     		mov	r0, r5
 1776 00c8 FFF7FEFF 		bl	__aeabi_fcmpgt
 1777              	.LVL153:
 1778 00cc 30B9     		cbnz	r0, .L154
 1779              		.loc 21 86 0 is_stmt 0 discriminator 2
 1780 00ce 2A49     		ldr	r1, .L161+8
 1781 00d0 2846     		mov	r0, r5
 1782 00d2 FFF7FEFF 		bl	__aeabi_fcmplt
 1783              	.LVL154:
 1784 00d6 10B1     		cbz	r0, .L146
 1785              		.loc 21 86 0
 1786 00d8 274D     		ldr	r5, .L161+8
 1787              	.LVL155:
 1788 00da 00E0     		b	.L146
 1789              	.LVL156:
 1790              	.L154:
 1791 00dc 254D     		ldr	r5, .L161+4
 1792              	.LVL157:
 1793              	.L146:
  87:src/main.cpp  **** 
  88:src/main.cpp  ****     if(cmd_msg.heading_angle > 0){
 1794              		.loc 21 88 0 is_stmt 1 discriminator 8
 1795 00de 0021     		movs	r1, #0
 1796 00e0 3846     		mov	r0, r7
 1797 00e2 FFF7FEFF 		bl	__aeabi_fcmpgt
 1798              	.LVL158:
 1799 00e6 48B1     		cbz	r0, .L159
  89:src/main.cpp  ****       servo_left->setReference(angle[0]);
 1800              		.loc 21 89 0
 1801 00e8 E069     		ldr	r0, [r4, #28]
 1802 00ea 3146     		mov	r1, r6
 1803 00ec 0368     		ldr	r3, [r0]
 1804 00ee 5B69     		ldr	r3, [r3, #20]
 1805 00f0 9847     		blx	r3
 1806              	.LVL159:
  90:src/main.cpp  ****       servo_right->setReference(angle[1]);
 1807              		.loc 21 90 0
 1808 00f2 206A     		ldr	r0, [r4, #32]
 1809 00f4 2946     		mov	r1, r5
 1810 00f6 0368     		ldr	r3, [r0]
 1811 00f8 5B69     		ldr	r3, [r3, #20]
 1812 00fa 08E0     		b	.L160
 1813              	.L159:
  91:src/main.cpp  **** 
  92:src/main.cpp  ****     }else{
  93:src/main.cpp  ****       servo_left->setReference(angle[1]);
 1814              		.loc 21 93 0
 1815 00fc E069     		ldr	r0, [r4, #28]
 1816 00fe 2946     		mov	r1, r5
 1817 0100 0368     		ldr	r3, [r0]
 1818 0102 5B69     		ldr	r3, [r3, #20]
 1819 0104 9847     		blx	r3
 1820              	.LVL160:
  94:src/main.cpp  ****       servo_right->setReference(angle[0]);
 1821              		.loc 21 94 0
 1822 0106 3146     		mov	r1, r6
 1823 0108 206A     		ldr	r0, [r4, #32]
 1824 010a 0368     		ldr	r3, [r0]
 1825 010c 5B69     		ldr	r3, [r3, #20]
 1826              	.L160:
 1827 010e 9847     		blx	r3
 1828              	.LVL161:
 1829 0110 2AE0     		b	.L149
 1830              	.LVL162:
 1831              	.L142:
 1832              	.LBE346:
 1833              	.LBB349:
  95:src/main.cpp  ****     }
  96:src/main.cpp  **** 
  97:src/main.cpp  ****   }else if(intMode == cmd_msg.DRIVE_MODE_SPIN){
 1834              		.loc 21 97 0
 1835 0112 B8F1020F 		cmp	r8, #2
 1836 0116 12D1     		bne	.L150
 1837              	.LVL163:
 1838              	.LBB350:
  98:src/main.cpp  ****     float h = 45;
  99:src/main.cpp  ****     servo_left->setReference(h);
 1839              		.loc 21 99 0
 1840 0118 E069     		ldr	r0, [r4, #28]
 1841 011a 1849     		ldr	r1, .L161+12
 1842 011c 0368     		ldr	r3, [r0]
 1843 011e 5B69     		ldr	r3, [r3, #20]
 1844 0120 9847     		blx	r3
 1845              	.LVL164:
 100:src/main.cpp  ****     servo_right->setReference(h);
 1846              		.loc 21 100 0
 1847 0122 206A     		ldr	r0, [r4, #32]
 1848 0124 1549     		ldr	r1, .L161+12
 1849 0126 0368     		ldr	r3, [r0]
 1850 0128 5B69     		ldr	r3, [r3, #20]
 1851 012a 9847     		blx	r3
 1852              	.LVL165:
 101:src/main.cpp  **** 
 102:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed;
 1853              		.loc 21 102 0
 1854 012c D9F82030 		ldr	r3, [r9, #32]	@ float
 103:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed;
 1855              		.loc 21 103 0
 1856 0130 03F10042 		add	r2, r3, #-2147483648
 102:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed;
 1857              		.loc 21 102 0
 1858 0134 E360     		str	r3, [r4, #12]	@ float
 1859              		.loc 21 103 0
 1860 0136 2261     		str	r2, [r4, #16]	@ float
 104:src/main.cpp  ****     motorCmd[2] = -cmd_msg.speed;
 1861              		.loc 21 104 0
 1862 0138 6261     		str	r2, [r4, #20]	@ float
 105:src/main.cpp  ****     motorCmd[3] = cmd_msg.speed;
 1863              		.loc 21 105 0
 1864 013a A361     		str	r3, [r4, #24]	@ float
 1865              	.LBE350:
 1866 013c 14E0     		b	.L149
 1867              	.LVL166:
 1868              	.L150:
 1869              	.LBB351:
 106:src/main.cpp  **** 
 107:src/main.cpp  ****   }else if(intMode == cmd_msg.DRIVE_MODE_SIDEWAYS){
 1870              		.loc 21 107 0
 1871 013e B8F1030F 		cmp	r8, #3
 1872 0142 11D1     		bne	.L149
 1873              	.LVL167:
 1874              	.LBB352:
 108:src/main.cpp  ****     float h = 90;
 109:src/main.cpp  ****     servo_left->setReference(h);
 1875              		.loc 21 109 0
 1876 0144 E069     		ldr	r0, [r4, #28]
 1877 0146 0E49     		ldr	r1, .L161+16
 1878 0148 0368     		ldr	r3, [r0]
 1879 014a 5B69     		ldr	r3, [r3, #20]
 1880 014c 9847     		blx	r3
 1881              	.LVL168:
 110:src/main.cpp  ****     servo_right->setReference(h);
 1882              		.loc 21 110 0
 1883 014e 206A     		ldr	r0, [r4, #32]
 1884 0150 0B49     		ldr	r1, .L161+16
 1885 0152 0368     		ldr	r3, [r0]
 1886 0154 5B69     		ldr	r3, [r3, #20]
 1887 0156 9847     		blx	r3
 1888              	.LVL169:
 111:src/main.cpp  **** 
 112:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed;
 1889              		.loc 21 112 0
 1890 0158 D9F82030 		ldr	r3, [r9, #32]	@ float
 113:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed;
 1891              		.loc 21 113 0
 1892 015c 03F10042 		add	r2, r3, #-2147483648
 112:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed;
 1893              		.loc 21 112 0
 1894 0160 E360     		str	r3, [r4, #12]	@ float
 1895              		.loc 21 113 0
 1896 0162 2261     		str	r2, [r4, #16]	@ float
 114:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed;
 1897              		.loc 21 114 0
 1898 0164 6361     		str	r3, [r4, #20]	@ float
 115:src/main.cpp  ****     motorCmd[3] = -cmd_msg.speed;
 1899              		.loc 21 115 0
 1900 0166 A261     		str	r2, [r4, #24]	@ float
 1901              	.LVL170:
 1902              	.L149:
 1903              	.LBE352:
 1904              	.LBE351:
 1905              	.LBE349:
 1906              	.LBE345:
 116:src/main.cpp  ****   }
 117:src/main.cpp  ****   currentMode = intMode;
 1907              		.loc 21 117 0
 1908 0168 84F80480 		strb	r8, [r4, #4]
 1909 016c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1910              	.LVL171:
 1911              	.L162:
 1912              		.align	2
 1913              	.L161:
 1914 0170 00000000 		.word	.LANCHOR1
 1915 0174 00007041 		.word	1097859072
 1916 0178 000070C1 		.word	-1049624576
 1917 017c 00003442 		.word	1110704128
 1918 0180 0000B442 		.word	1119092736
 1919              		.cfi_endproc
 1920              	.LFE1280:
 1921              		.fnend
 1923              		.section	.text._ZNK8std_msgs6Header9serializeEPh,"axG",%progbits,_ZNK8std_msgs6Header9serializeEPh
 1924              		.align	1
 1925              		.weak	_ZNK8std_msgs6Header9serializeEPh
 1926              		.thumb
 1927              		.thumb_func
 1929              	_ZNK8std_msgs6Header9serializeEPh:
 1930              		.fnstart
 1931              	.LFB1172:
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1932              		.loc 6 27 0
 1933              		.cfi_startproc
 1934              		@ args = 0, pretend = 0, frame = 8
 1935              		@ frame_needed = 0, uses_anonymous_args = 0
 1936              	.LVL172:
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1937              		.loc 6 30 0
 1938 0000 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1939              		.loc 6 27 0
 1940 0002 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1941              	.LCFI2:
 1942              		.cfi_def_cfa_offset 24
 1943              		.cfi_offset 4, -16
 1944              		.cfi_offset 5, -12
 1945              		.cfi_offset 6, -8
 1946              		.cfi_offset 14, -4
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1947              		.loc 6 30 0
 1948 0004 0B70     		strb	r3, [r1]
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1949              		.loc 6 31 0
 1950 0006 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1951              		.loc 6 27 0
 1952 0008 0546     		mov	r5, r0
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1953              		.loc 6 31 0
 1954 000a 1B0A     		lsrs	r3, r3, #8
 1955 000c 4B70     		strb	r3, [r1, #1]
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1956              		.loc 6 32 0
 1957 000e C388     		ldrh	r3, [r0, #6]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1958              		.loc 6 27 0
 1959 0010 0C46     		mov	r4, r1
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1960              		.loc 6 32 0
 1961 0012 8B70     		strb	r3, [r1, #2]
  33:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1962              		.loc 6 33 0
 1963 0014 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 1964 0016 CB70     		strb	r3, [r1, #3]
 1965              	.LVL173:
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 1966              		.loc 6 35 0
 1967 0018 8368     		ldr	r3, [r0, #8]
 1968 001a 0B71     		strb	r3, [r1, #4]
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 1969              		.loc 6 36 0
 1970 001c 8368     		ldr	r3, [r0, #8]
 1971 001e 1B0A     		lsrs	r3, r3, #8
 1972 0020 4B71     		strb	r3, [r1, #5]
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 1973              		.loc 6 37 0
 1974 0022 4389     		ldrh	r3, [r0, #10]
 1975 0024 8B71     		strb	r3, [r1, #6]
  38:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1976              		.loc 6 38 0
 1977 0026 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1978 0028 CB71     		strb	r3, [r1, #7]
 1979              	.LVL174:
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 1980              		.loc 6 40 0
 1981 002a C368     		ldr	r3, [r0, #12]
 1982 002c 0B72     		strb	r3, [r1, #8]
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 1983              		.loc 6 41 0
 1984 002e C368     		ldr	r3, [r0, #12]
 1985 0030 1B0A     		lsrs	r3, r3, #8
 1986 0032 4B72     		strb	r3, [r1, #9]
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 1987              		.loc 6 42 0
 1988 0034 C389     		ldrh	r3, [r0, #14]
 1989 0036 8B72     		strb	r3, [r1, #10]
  43:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1990              		.loc 6 43 0
 1991 0038 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 1992 003a CB72     		strb	r3, [r1, #11]
 1993              	.LVL175:
  45:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 1994              		.loc 6 45 0
 1995 003c 0069     		ldr	r0, [r0, #16]
 1996              	.LVL176:
 1997 003e FFF7FEFF 		bl	strlen
 1998              	.LVL177:
 1999 0042 0646     		mov	r6, r0
 2000 0044 02AB     		add	r3, sp, #8
 2001 0046 43F8040D 		str	r0, [r3, #-4]!
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 2002              		.loc 6 46 0
 2003 004a 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 2004              		.loc 6 48 0
 2005 004c 3246     		mov	r2, r6
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 2006              		.loc 6 46 0
 2007 004e E060     		str	r0, [r4, #12]	@ unaligned
 2008              	.LVL178:
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 2009              		.loc 6 48 0
 2010 0050 2969     		ldr	r1, [r5, #16]
 2011 0052 04F11000 		add	r0, r4, #16
 2012 0056 FFF7FEFF 		bl	memcpy
 2013              	.LVL179:
  51:./lib/ros_lib/std_msgs/Header.h **** 
 2014              		.loc 6 51 0
 2015 005a 06F11000 		add	r0, r6, #16
 2016              	.LVL180:
 2017 005e 02B0     		add	sp, sp, #8
 2018              	.LCFI3:
 2019              		.cfi_def_cfa_offset 16
 2020              		@ sp needed
 2021 0060 70BD     		pop	{r4, r5, r6, pc}
 2022              		.cfi_endproc
 2023              	.LFE1172:
 2024              		.cantunwind
 2025              		.fnend
 2027              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 2028              		.align	1
 2029              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 2030              		.thumb
 2031              		.thumb_func
 2033              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 2034              		.fnstart
 2035              	.LFB1074:
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2036              		.loc 4 74 0
 2037              		.cfi_startproc
 2038              		@ args = 0, pretend = 0, frame = 8
 2039              		@ frame_needed = 0, uses_anonymous_args = 0
 2040              	.LVL181:
 2041 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 2042              	.LCFI4:
 2043              		.cfi_def_cfa_offset 40
 2044              		.cfi_offset 4, -28
 2045              		.cfi_offset 5, -24
 2046              		.cfi_offset 6, -20
 2047              		.cfi_offset 7, -16
 2048              		.cfi_offset 8, -12
 2049              		.cfi_offset 9, -8
 2050              		.cfi_offset 14, -4
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2051              		.loc 4 77 0
 2052 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2053              		.loc 4 74 0
 2054 0006 0746     		mov	r7, r0
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2055              		.loc 4 77 0
 2056 0008 0B70     		strb	r3, [r1]
 2057              	.LVL182:
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2058              		.loc 4 78 0
 2059 000a 0023     		movs	r3, #0
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 2060              		.loc 4 80 0
 2061 000c 1A46     		mov	r2, r3
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2062              		.loc 4 74 0
 2063 000e 0C46     		mov	r4, r1
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2064              		.loc 4 78 0
 2065 0010 4B70     		strb	r3, [r1, #1]
 2066              	.LVL183:
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2067              		.loc 4 79 0
 2068 0012 8B70     		strb	r3, [r1, #2]
 2069              	.LVL184:
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 2070              		.loc 4 80 0
 2071 0014 CB70     		strb	r3, [r1, #3]
 2072              	.LVL185:
 2073 0016 0431     		adds	r1, r1, #4
 2074              	.LVL186:
 2075              	.L166:
 2076              	.LBB353:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2077              		.loc 4 81 0 discriminator 3
 2078 0018 3D79     		ldrb	r5, [r7, #4]	@ zero_extendqisi2
 2079 001a 501C     		adds	r0, r2, #1
 2080 001c D2B2     		uxtb	r2, r2
 2081 001e 9542     		cmp	r5, r2
 2082 0020 A1EB0403 		sub	r3, r1, r4
 2083              	.LVL187:
 2084 0024 01F10401 		add	r1, r1, #4
 2085 0028 0FD9     		bls	.L165
 2086              	.LBB354:
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 2087              		.loc 4 86 0 discriminator 2
 2088 002a FB68     		ldr	r3, [r7, #12]
 2089              	.LVL188:
 2090 002c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2091              	.LVL189:
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 2092              		.loc 4 88 0 discriminator 2
 2093 0030 1A0A     		lsrs	r2, r3, #8
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 2094              		.loc 4 87 0 discriminator 2
 2095 0032 01F8043C 		strb	r3, [r1, #-4]
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 2096              		.loc 4 88 0 discriminator 2
 2097 0036 01F8032C 		strb	r2, [r1, #-3]
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 2098              		.loc 4 89 0 discriminator 2
 2099 003a 1A0C     		lsrs	r2, r3, #16
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 2100              		.loc 4 90 0 discriminator 2
 2101 003c 1B0E     		lsrs	r3, r3, #24
 2102              	.LVL190:
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 2103              		.loc 4 89 0 discriminator 2
 2104 003e 01F8022C 		strb	r2, [r1, #-2]
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 2105              		.loc 4 90 0 discriminator 2
 2106 0042 01F8013C 		strb	r3, [r1, #-1]
 2107              	.LVL191:
 2108              	.LBE354:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2109              		.loc 4 81 0 discriminator 2
 2110 0046 0246     		mov	r2, r0
 2111 0048 E6E7     		b	.L166
 2112              	.LVL192:
 2113              	.L165:
 2114              	.LBE353:
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2115              		.loc 4 93 0
 2116 004a 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2117              		.loc 4 94 0
 2118 004c E118     		adds	r1, r4, r3
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2119              		.loc 4 93 0
 2120 004e E254     		strb	r2, [r4, r3]
 2121              	.LVL193:
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2122              		.loc 4 94 0
 2123 0050 0022     		movs	r2, #0
 2124 0052 0433     		adds	r3, r3, #4
 2125              	.LVL194:
 2126 0054 4A70     		strb	r2, [r1, #1]
 2127              	.LVL195:
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2128              		.loc 4 95 0
 2129 0056 8A70     		strb	r2, [r1, #2]
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 2130              		.loc 4 96 0
 2131 0058 CA70     		strb	r2, [r1, #3]
 2132              	.LVL196:
 2133 005a 2344     		add	r3, r3, r4
 2134              	.LVL197:
 2135              	.L168:
 2136              	.LBB355:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2137              		.loc 4 97 0 discriminator 3
 2138 005c 387C     		ldrb	r0, [r7, #16]	@ zero_extendqisi2
 2139 005e 511C     		adds	r1, r2, #1
 2140 0060 D2B2     		uxtb	r2, r2
 2141 0062 9042     		cmp	r0, r2
 2142 0064 A3EB0406 		sub	r6, r3, r4
 2143              	.LVL198:
 2144 0068 03F10403 		add	r3, r3, #4
 2145 006c 0FD9     		bls	.L167
 2146              	.LBB356:
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 2147              		.loc 4 102 0 discriminator 2
 2148 006e B869     		ldr	r0, [r7, #24]
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 2149              		.loc 4 103 0 discriminator 2
 2150 0070 50F82220 		ldr	r2, [r0, r2, lsl #2]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 2151              		.loc 4 104 0 discriminator 2
 2152 0074 100A     		lsrs	r0, r2, #8
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 2153              		.loc 4 103 0 discriminator 2
 2154 0076 03F8042C 		strb	r2, [r3, #-4]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 2155              		.loc 4 104 0 discriminator 2
 2156 007a 03F8030C 		strb	r0, [r3, #-3]
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 2157              		.loc 4 105 0 discriminator 2
 2158 007e 100C     		lsrs	r0, r2, #16
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 2159              		.loc 4 106 0 discriminator 2
 2160 0080 120E     		lsrs	r2, r2, #24
 2161 0082 03F8012C 		strb	r2, [r3, #-1]
 2162              	.LVL199:
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 2163              		.loc 4 105 0 discriminator 2
 2164 0086 03F8020C 		strb	r0, [r3, #-2]
 2165              	.LBE356:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2166              		.loc 4 97 0 discriminator 2
 2167 008a 0A46     		mov	r2, r1
 2168 008c E6E7     		b	.L168
 2169              	.LVL200:
 2170              	.L167:
 2171              	.LBE355:
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2172              		.loc 4 109 0
 2173 008e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2174              		.loc 4 110 0
 2175 0090 A219     		adds	r2, r4, r6
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2176              		.loc 4 109 0
 2177 0092 A355     		strb	r3, [r4, r6]
 2178              	.LVL201:
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2179              		.loc 4 110 0
 2180 0094 0023     		movs	r3, #0
 2181 0096 5370     		strb	r3, [r2, #1]
 2182              	.LVL202:
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2183              		.loc 4 111 0
 2184 0098 9370     		strb	r3, [r2, #2]
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2185              		.loc 4 112 0
 2186 009a 0436     		adds	r6, r6, #4
 2187              	.LVL203:
 2188 009c D370     		strb	r3, [r2, #3]
 2189              	.LVL204:
 2190              	.L170:
 2191              	.LBB357:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 2192              		.loc 4 113 0 discriminator 3
 2193 009e 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 2194 00a0 DDB2     		uxtb	r5, r3
 2195 00a2 AA42     		cmp	r2, r5
 2196 00a4 03F10109 		add	r9, r3, #1
 2197 00a8 15D9     		bls	.L169
 2198              	.LBB358:
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 2199              		.loc 4 114 0 discriminator 2
 2200 00aa 7B6A     		ldr	r3, [r7, #36]
 2201              	.LVL205:
 2202 00ac 53F82500 		ldr	r0, [r3, r5, lsl #2]
 2203 00b0 FFF7FEFF 		bl	strlen
 2204              	.LVL206:
 2205 00b4 8046     		mov	r8, r0
 2206 00b6 02AB     		add	r3, sp, #8
 2207 00b8 43F8040D 		str	r0, [r3, #-4]!
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2208              		.loc 4 115 0 discriminator 2
 2209 00bc 1868     		ldr	r0, [r3]	@ unaligned
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 2210              		.loc 4 117 0 discriminator 2
 2211 00be 4246     		mov	r2, r8
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2212              		.loc 4 115 0 discriminator 2
 2213 00c0 A051     		str	r0, [r4, r6]	@ unaligned
 2214              	.LVL207:
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 2215              		.loc 4 117 0 discriminator 2
 2216 00c2 7B6A     		ldr	r3, [r7, #36]
 2217 00c4 0436     		adds	r6, r6, #4
 2218              	.LVL208:
 2219 00c6 53F82510 		ldr	r1, [r3, r5, lsl #2]
 2220 00ca A019     		adds	r0, r4, r6
 2221 00cc FFF7FEFF 		bl	memcpy
 2222              	.LVL209:
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2223              		.loc 4 118 0 discriminator 2
 2224 00d0 4644     		add	r6, r6, r8
 2225              	.LVL210:
 2226              	.LBE358:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 2227              		.loc 4 113 0 discriminator 2
 2228 00d2 4B46     		mov	r3, r9
 2229 00d4 E3E7     		b	.L170
 2230              	.LVL211:
 2231              	.L169:
 2232              	.LBE357:
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2233              		.loc 4 121 0
 2234 00d6 3046     		mov	r0, r6
 2235 00d8 03B0     		add	sp, sp, #12
 2236              	.LCFI5:
 2237              		.cfi_def_cfa_offset 28
 2238              		@ sp needed
 2239 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2240              		.cfi_endproc
 2241              	.LFE1074:
 2242              		.cantunwind
 2243              		.fnend
 2245              		.section	.text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh,"axG",%progbits,_ZNK14rosser
 2246              		.align	1
 2247              		.weak	_ZNK14rosserial_msgs19RequestParamRequest9serializeEPh
 2248              		.thumb
 2249              		.thumb_func
 2251              	_ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:
 2252              		.fnstart
 2253              	.LFB1067:
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2254              		.loc 4 23 0
 2255              		.cfi_startproc
 2256              		@ args = 0, pretend = 0, frame = 8
 2257              		@ frame_needed = 0, uses_anonymous_args = 0
 2258              	.LVL212:
 2259 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 2260              	.LCFI6:
 2261              		.cfi_def_cfa_offset 24
 2262              		.cfi_offset 4, -16
 2263              		.cfi_offset 5, -12
 2264              		.cfi_offset 6, -8
 2265              		.cfi_offset 14, -4
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2266              		.loc 4 23 0
 2267 0002 0646     		mov	r6, r0
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
 2268              		.loc 4 26 0
 2269 0004 4068     		ldr	r0, [r0, #4]
 2270              	.LVL213:
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2271              		.loc 4 23 0
 2272 0006 0C46     		mov	r4, r1
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
 2273              		.loc 4 26 0
 2274 0008 FFF7FEFF 		bl	strlen
 2275              	.LVL214:
 2276 000c 02AB     		add	r3, sp, #8
 2277 000e 43F8040D 		str	r0, [r3, #-4]!
 2278 0012 0546     		mov	r5, r0
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2279              		.loc 4 27 0
 2280 0014 1868     		ldr	r0, [r3]	@ unaligned
 2281 0016 2346     		mov	r3, r4
 2282 0018 43F8040B 		str	r0, [r3], #4	@ unaligned
 2283              	.LVL215:
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
 2284              		.loc 4 29 0
 2285 001c 2A46     		mov	r2, r5
 2286 001e 7168     		ldr	r1, [r6, #4]
 2287 0020 1846     		mov	r0, r3
 2288 0022 FFF7FEFF 		bl	memcpy
 2289              	.LVL216:
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2290              		.loc 4 32 0
 2291 0026 281D     		adds	r0, r5, #4
 2292              	.LVL217:
 2293 0028 02B0     		add	sp, sp, #8
 2294              	.LCFI7:
 2295              		.cfi_def_cfa_offset 16
 2296              		@ sp needed
 2297 002a 70BD     		pop	{r4, r5, r6, pc}
 2298              		.cfi_endproc
 2299              	.LFE1067:
 2300              		.cantunwind
 2301              		.fnend
 2303              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 2304              		.align	1
 2305              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 2306              		.thumb
 2307              		.thumb_func
 2309              	_ZNK14rosserial_msgs3Log9serializeEPh:
 2310              		.fnstart
 2311              	.LFB1060:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2312              		.loc 3 29 0
 2313              		.cfi_startproc
 2314              		@ args = 0, pretend = 0, frame = 8
 2315              		@ frame_needed = 0, uses_anonymous_args = 0
 2316              	.LVL218:
 2317 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 2318              	.LCFI8:
 2319              		.cfi_def_cfa_offset 24
 2320              		.cfi_offset 4, -16
 2321              		.cfi_offset 5, -12
 2322              		.cfi_offset 6, -8
 2323              		.cfi_offset 14, -4
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2324              		.loc 3 32 0
 2325 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2326              		.loc 3 29 0
 2327 0004 0646     		mov	r6, r0
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2328              		.loc 3 32 0
 2329 0006 0B70     		strb	r3, [r1]
 2330              	.LVL219:
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 2331              		.loc 3 34 0
 2332 0008 8068     		ldr	r0, [r0, #8]
 2333              	.LVL220:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2334              		.loc 3 29 0
 2335 000a 0D46     		mov	r5, r1
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 2336              		.loc 3 34 0
 2337 000c FFF7FEFF 		bl	strlen
 2338              	.LVL221:
 2339 0010 0446     		mov	r4, r0
 2340 0012 02AB     		add	r3, sp, #8
 2341 0014 43F8040D 		str	r0, [r3, #-4]!
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 2342              		.loc 3 35 0
 2343 0018 1868     		ldr	r0, [r3]	@ unaligned
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2344              		.loc 3 37 0
 2345 001a 2246     		mov	r2, r4
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 2346              		.loc 3 35 0
 2347 001c C5F80100 		str	r0, [r5, #1]	@ unaligned
 2348              	.LVL222:
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2349              		.loc 3 37 0
 2350 0020 B168     		ldr	r1, [r6, #8]
 2351 0022 681D     		adds	r0, r5, #5
 2352 0024 FFF7FEFF 		bl	memcpy
 2353              	.LVL223:
  40:./lib/ros_lib/rosserial_msgs/Log.h **** 
 2354              		.loc 3 40 0
 2355 0028 601D     		adds	r0, r4, #5
 2356              	.LVL224:
 2357 002a 02B0     		add	sp, sp, #8
 2358              	.LCFI9:
 2359              		.cfi_def_cfa_offset 16
 2360              		@ sp needed
 2361 002c 70BD     		pop	{r4, r5, r6, pc}
 2362              		.cfi_endproc
 2363              	.LFE1060:
 2364              		.cantunwind
 2365              		.fnend
 2367              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 2368              		.align	1
 2369              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 2370              		.thumb
 2371              		.thumb_func
 2373              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 2374              		.fnstart
 2375              	.LFB1053:
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2376              		.loc 2 38 0
 2377              		.cfi_startproc
 2378              		@ args = 0, pretend = 0, frame = 16
 2379              		@ frame_needed = 0, uses_anonymous_args = 0
 2380              	.LVL225:
 2381 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 2382              	.LCFI10:
 2383              		.cfi_def_cfa_offset 40
 2384              		.cfi_offset 4, -24
 2385              		.cfi_offset 5, -20
 2386              		.cfi_offset 6, -16
 2387              		.cfi_offset 7, -12
 2388              		.cfi_offset 8, -8
 2389              		.cfi_offset 14, -4
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 2390              		.loc 2 41 0
 2391 0004 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2392              		.loc 2 38 0
 2393 0006 0646     		mov	r6, r0
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 2394              		.loc 2 41 0
 2395 0008 0B70     		strb	r3, [r1]
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2396              		.loc 2 42 0
 2397 000a 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2398              		.loc 2 38 0
 2399 000c 0D46     		mov	r5, r1
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2400              		.loc 2 42 0
 2401 000e 1B0A     		lsrs	r3, r3, #8
 2402 0010 4B70     		strb	r3, [r1, #1]
 2403              	.LVL226:
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 2404              		.loc 2 44 0
 2405 0012 8068     		ldr	r0, [r0, #8]
 2406              	.LVL227:
 2407 0014 FFF7FEFF 		bl	strlen
 2408              	.LVL228:
 2409 0018 0446     		mov	r4, r0
 2410 001a 04AB     		add	r3, sp, #16
 2411 001c 43F80C0D 		str	r0, [r3, #-12]!
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2412              		.loc 2 45 0
 2413 0020 1868     		ldr	r0, [r3]	@ unaligned
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 2414              		.loc 2 47 0
 2415 0022 2246     		mov	r2, r4
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2416              		.loc 2 45 0
 2417 0024 C5F80200 		str	r0, [r5, #2]	@ unaligned
 2418              	.LVL229:
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 2419              		.loc 2 47 0
 2420 0028 B168     		ldr	r1, [r6, #8]
 2421 002a A81D     		adds	r0, r5, #6
 2422 002c FFF7FEFF 		bl	memcpy
 2423              	.LVL230:
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 2424              		.loc 2 49 0
 2425 0030 F068     		ldr	r0, [r6, #12]
 2426 0032 FFF7FEFF 		bl	strlen
 2427              	.LVL231:
 2428 0036 0746     		mov	r7, r0
 2429 0038 04AB     		add	r3, sp, #16
 2430 003a 43F8080D 		str	r0, [r3, #-8]!
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2431              		.loc 2 50 0
 2432 003e 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 2433              		.loc 2 48 0
 2434 0040 04F10608 		add	r8, r4, #6
 2435              	.LVL232:
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2436              		.loc 2 50 0
 2437 0044 45F80800 		str	r0, [r5, r8]	@ unaligned
 2438              	.LVL233:
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2439              		.loc 2 52 0
 2440 0048 0A34     		adds	r4, r4, #10
 2441 004a 3A46     		mov	r2, r7
 2442 004c F168     		ldr	r1, [r6, #12]
 2443 004e 2819     		adds	r0, r5, r4
 2444 0050 FFF7FEFF 		bl	memcpy
 2445              	.LVL234:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 2446              		.loc 2 54 0
 2447 0054 3069     		ldr	r0, [r6, #16]
 2448 0056 FFF7FEFF 		bl	strlen
 2449              	.LVL235:
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 2450              		.loc 2 53 0
 2451 005a 3C44     		add	r4, r4, r7
 2452              	.LVL236:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 2453              		.loc 2 54 0
 2454 005c 0746     		mov	r7, r0
 2455 005e 04AB     		add	r3, sp, #16
 2456 0060 43F8040D 		str	r0, [r3, #-4]!
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2457              		.loc 2 55 0
 2458 0064 1868     		ldr	r0, [r3]	@ unaligned
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2459              		.loc 2 57 0
 2460 0066 3A46     		mov	r2, r7
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2461              		.loc 2 55 0
 2462 0068 2851     		str	r0, [r5, r4]	@ unaligned
 2463              	.LVL237:
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2464              		.loc 2 57 0
 2465 006a 0434     		adds	r4, r4, #4
 2466              	.LVL238:
 2467 006c 2819     		adds	r0, r5, r4
 2468 006e 3169     		ldr	r1, [r6, #16]
 2469 0070 FFF7FEFF 		bl	memcpy
 2470              	.LVL239:
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 2471              		.loc 2 63 0
 2472 0074 7369     		ldr	r3, [r6, #20]
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 2473              		.loc 2 58 0
 2474 0076 3819     		adds	r0, r7, r4
 2475              	.LVL240:
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 2476              		.loc 2 64 0
 2477 0078 2B54     		strb	r3, [r5, r0]
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 2478              		.loc 2 65 0
 2479 007a 1A0A     		lsrs	r2, r3, #8
 2480 007c 0544     		add	r5, r5, r0
 2481              	.LVL241:
 2482 007e 6A70     		strb	r2, [r5, #1]
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2483              		.loc 2 70 0
 2484 0080 0430     		adds	r0, r0, #4
 2485              	.LVL242:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 2486              		.loc 2 66 0
 2487 0082 1A0C     		lsrs	r2, r3, #16
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2488              		.loc 2 67 0
 2489 0084 1B0E     		lsrs	r3, r3, #24
 2490              	.LVL243:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 2491              		.loc 2 66 0
 2492 0086 AA70     		strb	r2, [r5, #2]
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2493              		.loc 2 67 0
 2494 0088 EB70     		strb	r3, [r5, #3]
 2495              	.LVL244:
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2496              		.loc 2 70 0
 2497 008a 04B0     		add	sp, sp, #16
 2498              	.LCFI11:
 2499              		.cfi_def_cfa_offset 24
 2500              		@ sp needed
 2501 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2502              		.cfi_endproc
 2503              	.LFE1053:
 2504              		.cantunwind
 2505              		.fnend
 2507              		.section	.text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh,"axG",%progbits,_ZN14rosse
 2508              		.align	1
 2509              		.weak	_ZN14rosserial_msgs19RequestParamRequest11deserializeEPh
 2510              		.thumb
 2511              		.thumb_func
 2513              	_ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:
 2514              		.fnstart
 2515              	.LFB1068:
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2516              		.loc 4 34 0
 2517              		.cfi_startproc
 2518              		@ args = 0, pretend = 0, frame = 8
 2519              		@ frame_needed = 0, uses_anonymous_args = 0
 2520              	.LVL245:
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2521              		.loc 4 38 0
 2522 0000 0B46     		mov	r3, r1
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2523              		.loc 4 34 0
 2524 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2525              	.LCFI12:
 2526              		.cfi_def_cfa_offset 24
 2527              		.cfi_offset 4, -12
 2528              		.cfi_offset 5, -8
 2529              		.cfi_offset 14, -4
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2530              		.loc 4 34 0
 2531 0004 0446     		mov	r4, r0
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2532              		.loc 4 38 0
 2533 0006 53F8040B 		ldr	r0, [r3], #4	@ unaligned
 2534              	.LVL246:
 2535 000a 0190     		str	r0, [sp, #4]	@ unaligned
 2536              	.LVL247:
 2537              	.LBB359:
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2538              		.loc 4 40 0
 2539 000c 019A     		ldr	r2, [sp, #4]
 2540 000e 101D     		adds	r0, r2, #4
 2541              	.LVL248:
 2542              	.L176:
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2543              		.loc 4 40 0 is_stmt 0 discriminator 3
 2544 0010 5D1A     		subs	r5, r3, r1
 2545              	.LVL249:
 2546 0012 A842     		cmp	r0, r5
 2547 0014 04D9     		bls	.L175
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2548              		.loc 4 41 0 is_stmt 1 discriminator 2
 2549 0016 13F8015B 		ldrb	r5, [r3], #1	@ zero_extendqisi2
 2550              	.LVL250:
 2551 001a 03F8025C 		strb	r5, [r3, #-2]
 2552              	.LVL251:
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2553              		.loc 4 40 0 discriminator 2
 2554 001e F7E7     		b	.L176
 2555              	.LVL252:
 2556              	.L175:
 2557              	.LBE359:
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
 2558              		.loc 4 43 0
 2559 0020 0A44     		add	r2, r2, r1
 2560 0022 0023     		movs	r3, #0
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
 2561              		.loc 4 44 0
 2562 0024 0331     		adds	r1, r1, #3
 2563              	.LVL253:
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
 2564              		.loc 4 43 0
 2565 0026 D370     		strb	r3, [r2, #3]
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
 2566              		.loc 4 44 0
 2567 0028 6160     		str	r1, [r4, #4]
 2568              	.LVL254:
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2569              		.loc 4 47 0
 2570 002a 03B0     		add	sp, sp, #12
 2571              	.LCFI13:
 2572              		.cfi_def_cfa_offset 12
 2573              		@ sp needed
 2574 002c 30BD     		pop	{r4, r5, pc}
 2575              		.cfi_endproc
 2576              	.LFE1068:
 2577              		.cantunwind
 2578              		.fnend
 2580              		.section	.text._ZN8std_msgs6Header11deserializeEPh,"axG",%progbits,_ZN8std_msgs6Header11deserializ
 2581              		.align	1
 2582              		.weak	_ZN8std_msgs6Header11deserializeEPh
 2583              		.thumb
 2584              		.thumb_func
 2586              	_ZN8std_msgs6Header11deserializeEPh:
 2587              		.fnstart
 2588              	.LFB1173:
  53:./lib/ros_lib/std_msgs/Header.h ****     {
 2589              		.loc 6 53 0
 2590              		.cfi_startproc
 2591              		@ args = 0, pretend = 0, frame = 8
 2592              		@ frame_needed = 0, uses_anonymous_args = 0
 2593              	.LVL255:
 2594 0000 0346     		mov	r3, r0
 2595 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2596              	.LCFI14:
 2597              		.cfi_def_cfa_offset 24
 2598              		.cfi_offset 4, -12
 2599              		.cfi_offset 5, -8
 2600              		.cfi_offset 14, -4
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2601              		.loc 6 56 0
 2602 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2603 0006 01F11004 		add	r4, r1, #16
 2604 000a 4260     		str	r2, [r0, #4]
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2605              		.loc 6 57 0
 2606 000c 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 2607              	.LVL256:
 2608 000e 42EA0022 		orr	r2, r2, r0, lsl #8
 2609 0012 5A60     		str	r2, [r3, #4]
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2610              		.loc 6 58 0
 2611 0014 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 2612 0016 42EA0042 		orr	r2, r2, r0, lsl #16
 2613 001a 5A60     		str	r2, [r3, #4]
  59:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 2614              		.loc 6 59 0
 2615 001c C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 2616 001e 42EA0062 		orr	r2, r2, r0, lsl #24
 2617 0022 5A60     		str	r2, [r3, #4]
 2618              	.LVL257:
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2619              		.loc 6 61 0
 2620 0024 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 2621 0026 9A60     		str	r2, [r3, #8]
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2622              		.loc 6 62 0
 2623 0028 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 2624 002a 42EA0022 		orr	r2, r2, r0, lsl #8
 2625 002e 9A60     		str	r2, [r3, #8]
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2626              		.loc 6 63 0
 2627 0030 8879     		ldrb	r0, [r1, #6]	@ zero_extendqisi2
 2628 0032 42EA0042 		orr	r2, r2, r0, lsl #16
 2629 0036 9A60     		str	r2, [r3, #8]
  64:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 2630              		.loc 6 64 0
 2631 0038 C879     		ldrb	r0, [r1, #7]	@ zero_extendqisi2
 2632 003a 42EA0062 		orr	r2, r2, r0, lsl #24
 2633 003e 9A60     		str	r2, [r3, #8]
 2634              	.LVL258:
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2635              		.loc 6 66 0
 2636 0040 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 2637 0042 DA60     		str	r2, [r3, #12]
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2638              		.loc 6 67 0
 2639 0044 487A     		ldrb	r0, [r1, #9]	@ zero_extendqisi2
 2640 0046 42EA0022 		orr	r2, r2, r0, lsl #8
 2641 004a DA60     		str	r2, [r3, #12]
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2642              		.loc 6 68 0
 2643 004c 887A     		ldrb	r0, [r1, #10]	@ zero_extendqisi2
 2644 004e 42EA0042 		orr	r2, r2, r0, lsl #16
 2645 0052 DA60     		str	r2, [r3, #12]
  69:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 2646              		.loc 6 69 0
 2647 0054 C87A     		ldrb	r0, [r1, #11]	@ zero_extendqisi2
 2648 0056 42EA0062 		orr	r2, r2, r0, lsl #24
 2649 005a DA60     		str	r2, [r3, #12]
 2650              	.LVL259:
  72:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 2651              		.loc 6 72 0
 2652 005c C868     		ldr	r0, [r1, #12]	@ unaligned
 2653 005e 0190     		str	r0, [sp, #4]	@ unaligned
 2654              	.LVL260:
 2655              	.LBB360:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2656              		.loc 6 74 0
 2657 0060 019A     		ldr	r2, [sp, #4]
 2658 0062 02F11000 		add	r0, r2, #16
 2659              	.LVL261:
 2660              	.L180:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2661              		.loc 6 74 0 is_stmt 0 discriminator 3
 2662 0066 651A     		subs	r5, r4, r1
 2663              	.LVL262:
 2664 0068 A842     		cmp	r0, r5
 2665 006a 04D9     		bls	.L179
  75:./lib/ros_lib/std_msgs/Header.h ****       }
 2666              		.loc 6 75 0 is_stmt 1 discriminator 2
 2667 006c 14F8015B 		ldrb	r5, [r4], #1	@ zero_extendqisi2
 2668              	.LVL263:
 2669 0070 04F8025C 		strb	r5, [r4, #-2]
 2670              	.LVL264:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2671              		.loc 6 74 0 discriminator 2
 2672 0074 F7E7     		b	.L180
 2673              	.LVL265:
 2674              	.L179:
 2675              	.LBE360:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 2676              		.loc 6 77 0
 2677 0076 0A44     		add	r2, r2, r1
 2678 0078 0024     		movs	r4, #0
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 2679              		.loc 6 78 0
 2680 007a 0F31     		adds	r1, r1, #15
 2681              	.LVL266:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 2682              		.loc 6 77 0
 2683 007c D473     		strb	r4, [r2, #15]
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 2684              		.loc 6 78 0
 2685 007e 1961     		str	r1, [r3, #16]
 2686              	.LVL267:
  81:./lib/ros_lib/std_msgs/Header.h **** 
 2687              		.loc 6 81 0
 2688 0080 03B0     		add	sp, sp, #12
 2689              	.LCFI15:
 2690              		.cfi_def_cfa_offset 12
 2691              		@ sp needed
 2692 0082 30BD     		pop	{r4, r5, pc}
 2693              		.cfi_endproc
 2694              	.LFE1173:
 2695              		.cantunwind
 2696              		.fnend
 2698              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 2699              		.align	1
 2700              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 2701              		.thumb
 2702              		.thumb_func
 2704              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 2705              		.fnstart
 2706              	.LFB1054:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2707              		.loc 2 72 0
 2708              		.cfi_startproc
 2709              		@ args = 0, pretend = 0, frame = 16
 2710              		@ frame_needed = 0, uses_anonymous_args = 0
 2711              	.LVL268:
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2712              		.loc 2 75 0
 2713 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2714              		.loc 2 72 0
 2715 0002 30B5     		push	{r4, r5, lr}
 2716              	.LCFI16:
 2717              		.cfi_def_cfa_offset 12
 2718              		.cfi_offset 4, -12
 2719              		.cfi_offset 5, -8
 2720              		.cfi_offset 14, -4
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2721              		.loc 2 75 0
 2722 0004 8380     		strh	r3, [r0, #4]	@ movhi
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2723              		.loc 2 76 0
 2724 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2725              		.loc 2 72 0
 2726 0008 0446     		mov	r4, r0
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2727              		.loc 2 76 0
 2728 000a 43EA0223 		orr	r3, r3, r2, lsl #8
 2729 000e 8380     		strh	r3, [r0, #4]	@ movhi
 2730              	.LVL269:
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2731              		.loc 2 79 0
 2732 0010 D1F80200 		ldr	r0, [r1, #2]	@ unaligned
 2733              	.LVL270:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2734              		.loc 2 72 0
 2735 0014 85B0     		sub	sp, sp, #20
 2736              	.LCFI17:
 2737              		.cfi_def_cfa_offset 32
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2738              		.loc 2 79 0
 2739 0016 0190     		str	r0, [sp, #4]	@ unaligned
 2740              	.LVL271:
 2741              	.LBB361:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2742              		.loc 2 81 0
 2743 0018 019D     		ldr	r5, [sp, #4]
 2744 001a 8A1D     		adds	r2, r1, #6
 2745 001c AB1D     		adds	r3, r5, #6
 2746              	.LVL272:
 2747              	.L184:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2748              		.loc 2 81 0 is_stmt 0 discriminator 3
 2749 001e 501A     		subs	r0, r2, r1
 2750              	.LVL273:
 2751 0020 8342     		cmp	r3, r0
 2752 0022 04D9     		bls	.L183
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2753              		.loc 2 82 0 is_stmt 1 discriminator 2
 2754 0024 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 2755              	.LVL274:
 2756 0028 02F8020C 		strb	r0, [r2, #-2]
 2757              	.LVL275:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2758              		.loc 2 81 0 discriminator 2
 2759 002c F7E7     		b	.L184
 2760              	.LVL276:
 2761              	.L183:
 2762              	.LBE361:
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 2763              		.loc 2 84 0
 2764 002e 4A19     		adds	r2, r1, r5
 2765 0030 0020     		movs	r0, #0
 2766              	.LVL277:
 2767 0032 5071     		strb	r0, [r2, #5]
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 2768              		.loc 2 85 0
 2769 0034 4A1D     		adds	r2, r1, #5
 2770 0036 A260     		str	r2, [r4, #8]
 2771              	.LVL278:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2772              		.loc 2 88 0
 2773 0038 C858     		ldr	r0, [r1, r3]	@ unaligned
 2774              	.LBB362:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2775              		.loc 2 90 0
 2776 003a 1A1D     		adds	r2, r3, #4
 2777              	.LBE362:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2778              		.loc 2 88 0
 2779 003c 0290     		str	r0, [sp, #8]	@ unaligned
 2780              	.LVL279:
 2781              	.LBB363:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2782              		.loc 2 90 0
 2783 003e 029B     		ldr	r3, [sp, #8]
 2784 0040 05F10A00 		add	r0, r5, #10
 2785 0044 1344     		add	r3, r3, r2
 2786 0046 0844     		add	r0, r0, r1
 2787              	.LVL280:
 2788              	.L186:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2789              		.loc 2 90 0 is_stmt 0 discriminator 3
 2790 0048 451A     		subs	r5, r0, r1
 2791              	.LVL281:
 2792 004a AB42     		cmp	r3, r5
 2793 004c 04D9     		bls	.L185
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2794              		.loc 2 91 0 is_stmt 1 discriminator 2
 2795 004e 10F8015B 		ldrb	r5, [r0], #1	@ zero_extendqisi2
 2796              	.LVL282:
 2797 0052 00F8025C 		strb	r5, [r0, #-2]
 2798              	.LVL283:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2799              		.loc 2 90 0 discriminator 2
 2800 0056 F7E7     		b	.L186
 2801              	.LVL284:
 2802              	.L185:
 2803              	.LBE363:
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2804              		.loc 2 94 0
 2805 0058 013A     		subs	r2, r2, #1
 2806              	.LVL285:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 2807              		.loc 2 93 0
 2808 005a C818     		adds	r0, r1, r3
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2809              		.loc 2 94 0
 2810 005c 0A44     		add	r2, r2, r1
 2811              	.LVL286:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 2812              		.loc 2 93 0
 2813 005e 0025     		movs	r5, #0
 2814              	.LVL287:
 2815 0060 00F8015C 		strb	r5, [r0, #-1]
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2816              		.loc 2 94 0
 2817 0064 E260     		str	r2, [r4, #12]
 2818              	.LVL288:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2819              		.loc 2 97 0
 2820 0066 0068     		ldr	r0, [r0]	@ unaligned
 2821              	.LBB364:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2822              		.loc 2 99 0
 2823 0068 0433     		adds	r3, r3, #4
 2824              	.LVL289:
 2825              	.LBE364:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2826              		.loc 2 97 0
 2827 006a 0390     		str	r0, [sp, #12]	@ unaligned
 2828              	.LVL290:
 2829              	.LBB365:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2830              		.loc 2 99 0
 2831 006c 0398     		ldr	r0, [sp, #12]
 2832 006e CA18     		adds	r2, r1, r3
 2833 0070 1844     		add	r0, r0, r3
 2834              	.LVL291:
 2835              	.L188:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2836              		.loc 2 99 0 is_stmt 0 discriminator 3
 2837 0072 551A     		subs	r5, r2, r1
 2838              	.LVL292:
 2839 0074 A842     		cmp	r0, r5
 2840 0076 04D9     		bls	.L187
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2841              		.loc 2 100 0 is_stmt 1 discriminator 2
 2842 0078 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 2843              	.LVL293:
 2844 007c 02F8025C 		strb	r5, [r2, #-2]
 2845              	.LVL294:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2846              		.loc 2 99 0 discriminator 2
 2847 0080 F7E7     		b	.L188
 2848              	.LVL295:
 2849              	.L187:
 2850              	.LBE365:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2851              		.loc 2 103 0
 2852 0082 013B     		subs	r3, r3, #1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 2853              		.loc 2 102 0
 2854 0084 0D18     		adds	r5, r1, r0
 2855              	.LVL296:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2856              		.loc 2 103 0
 2857 0086 0B44     		add	r3, r3, r1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 2858              		.loc 2 102 0
 2859 0088 0022     		movs	r2, #0
 2860              	.LVL297:
 2861 008a 05F8012C 		strb	r2, [r5, #-1]
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2862              		.loc 2 103 0
 2863 008e 2361     		str	r3, [r4, #16]
 2864              	.LVL298:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2865              		.loc 2 114 0
 2866 0090 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 2867 0092 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 2868 0094 1B04     		lsls	r3, r3, #16
 2869 0096 43EA0223 		orr	r3, r3, r2, lsl #8
 2870 009a 0A5C     		ldrb	r2, [r1, r0]	@ zero_extendqisi2
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2871              		.loc 2 117 0
 2872 009c 0430     		adds	r0, r0, #4
 2873              	.LVL299:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2874              		.loc 2 114 0
 2875 009e 1343     		orrs	r3, r3, r2
 2876 00a0 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 2877 00a2 43EA0263 		orr	r3, r3, r2, lsl #24
 2878 00a6 6361     		str	r3, [r4, #20]
 2879              	.LVL300:
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2880              		.loc 2 117 0
 2881 00a8 05B0     		add	sp, sp, #20
 2882              	.LCFI18:
 2883              		.cfi_def_cfa_offset 12
 2884              		@ sp needed
 2885 00aa 30BD     		pop	{r4, r5, pc}
 2886              		.cfi_endproc
 2887              	.LFE1054:
 2888              		.cantunwind
 2889              		.fnend
 2891              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
 2892              		.align	1
 2893              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 2894              		.thumb
 2895              		.thumb_func
 2897              	_ZN14rosserial_msgs3Log11deserializeEPh:
 2898              		.fnstart
 2899              	.LFB1061:
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2900              		.loc 3 42 0
 2901              		.cfi_startproc
 2902              		@ args = 0, pretend = 0, frame = 8
 2903              		@ frame_needed = 0, uses_anonymous_args = 0
 2904              	.LVL301:
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2905              		.loc 3 45 0
 2906 0000 0B46     		mov	r3, r1
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2907              		.loc 3 42 0
 2908 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2909              	.LCFI19:
 2910              		.cfi_def_cfa_offset 24
 2911              		.cfi_offset 4, -12
 2912              		.cfi_offset 5, -8
 2913              		.cfi_offset 14, -4
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2914              		.loc 3 45 0
 2915 0004 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2916              		.loc 3 42 0
 2917 0008 0446     		mov	r4, r0
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2918              		.loc 3 45 0
 2919 000a 0271     		strb	r2, [r0, #4]
 2920              	.LVL302:
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 2921              		.loc 3 48 0
 2922 000c 1868     		ldr	r0, [r3]	@ unaligned
 2923              	.LVL303:
 2924 000e 4A1D     		adds	r2, r1, #5
 2925 0010 0190     		str	r0, [sp, #4]	@ unaligned
 2926              	.LVL304:
 2927              	.LBB366:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2928              		.loc 3 50 0
 2929 0012 019B     		ldr	r3, [sp, #4]
 2930 0014 581D     		adds	r0, r3, #5
 2931              	.LVL305:
 2932              	.L194:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2933              		.loc 3 50 0 is_stmt 0 discriminator 3
 2934 0016 551A     		subs	r5, r2, r1
 2935              	.LVL306:
 2936 0018 A842     		cmp	r0, r5
 2937 001a 04D9     		bls	.L193
  51:./lib/ros_lib/rosserial_msgs/Log.h ****       }
 2938              		.loc 3 51 0 is_stmt 1 discriminator 2
 2939 001c 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 2940              	.LVL307:
 2941 0020 02F8025C 		strb	r5, [r2, #-2]
 2942              	.LVL308:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2943              		.loc 3 50 0 discriminator 2
 2944 0024 F7E7     		b	.L194
 2945              	.LVL309:
 2946              	.L193:
 2947              	.LBE366:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 2948              		.loc 3 53 0
 2949 0026 0B44     		add	r3, r3, r1
 2950 0028 0022     		movs	r2, #0
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2951              		.loc 3 54 0
 2952 002a 0431     		adds	r1, r1, #4
 2953              	.LVL310:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 2954              		.loc 3 53 0
 2955 002c 1A71     		strb	r2, [r3, #4]
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2956              		.loc 3 54 0
 2957 002e A160     		str	r1, [r4, #8]
 2958              	.LVL311:
  57:./lib/ros_lib/rosserial_msgs/Log.h **** 
 2959              		.loc 3 57 0
 2960 0030 03B0     		add	sp, sp, #12
 2961              	.LCFI20:
 2962              		.cfi_def_cfa_offset 12
 2963              		@ sp needed
 2964 0032 30BD     		pop	{r4, r5, pc}
 2965              		.cfi_endproc
 2966              	.LFE1061:
 2967              		.cantunwind
 2968              		.fnend
 2970              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 2971              		.align	1
 2972              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 2973              		.thumb
 2974              		.thumb_func
 2976              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 2977              		.fnstart
 2978              	.LFB1075:
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2979              		.loc 4 123 0
 2980              		.cfi_startproc
 2981              		@ args = 0, pretend = 0, frame = 8
 2982              		@ frame_needed = 0, uses_anonymous_args = 0
 2983              	.LVL312:
 2984 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2985              	.LCFI21:
 2986              		.cfi_def_cfa_offset 32
 2987              		.cfi_offset 4, -20
 2988              		.cfi_offset 5, -16
 2989              		.cfi_offset 6, -12
 2990              		.cfi_offset 7, -8
 2991              		.cfi_offset 14, -4
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 2992              		.loc 4 126 0
 2993 0002 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 2994              	.LVL313:
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2995              		.loc 4 127 0
 2996 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2997              		.loc 4 123 0
 2998 0006 0446     		mov	r4, r0
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2999              		.loc 4 127 0
 3000 0008 AB42     		cmp	r3, r5
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 3001              		.loc 4 123 0
 3002 000a 0E46     		mov	r6, r1
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 3003              		.loc 4 127 0
 3004 000c 04D2     		bcs	.L197
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 3005              		.loc 4 128 0
 3006 000e A900     		lsls	r1, r5, #2
 3007              	.LVL314:
 3008 0010 C068     		ldr	r0, [r0, #12]
 3009              	.LVL315:
 3010 0012 FFF7FEFF 		bl	realloc
 3011              	.LVL316:
 3012 0016 E060     		str	r0, [r4, #12]
 3013              	.L197:
 3014              	.LVL317:
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 3015              		.loc 4 130 0
 3016 0018 2571     		strb	r5, [r4, #4]
 3017              	.LVL318:
 3018 001a 321D     		adds	r2, r6, #4
 3019 001c 0021     		movs	r1, #0
 3020              	.LVL319:
 3021              	.L199:
 3022              	.LBB367:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 3023              		.loc 4 131 0 discriminator 3
 3024 001e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3025 0020 4F1C     		adds	r7, r1, #1
 3026 0022 C9B2     		uxtb	r1, r1
 3027 0024 8B42     		cmp	r3, r1
 3028 0026 A2EB0605 		sub	r5, r2, r6
 3029              	.LVL320:
 3030 002a 02F10402 		add	r2, r2, #4
 3031 002e 14D9     		bls	.L198
 3032              	.LVL321:
 3033              	.LBB368:
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 3034              		.loc 4 141 0 discriminator 2
 3035 0030 12F8023C 		ldrb	r3, [r2, #-2]	@ zero_extendqisi2
 3036              	.LVL322:
 3037 0034 12F8030C 		ldrb	r0, [r2, #-3]	@ zero_extendqisi2
 3038              	.LVL323:
 3039 0038 1B04     		lsls	r3, r3, #16
 3040              	.LVL324:
 3041 003a 43EA0023 		orr	r3, r3, r0, lsl #8
 3042 003e 12F8040C 		ldrb	r0, [r2, #-4]	@ zero_extendqisi2
 3043              	.LVL325:
 3044 0042 0343     		orrs	r3, r3, r0
 3045 0044 12F8010C 		ldrb	r0, [r2, #-1]	@ zero_extendqisi2
 3046 0048 43EA0063 		orr	r3, r3, r0, lsl #24
 3047 004c A360     		str	r3, [r4, #8]
 3048              	.LVL326:
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 3049              		.loc 4 143 0 discriminator 2
 3050 004e A068     		ldr	r0, [r4, #8]	@ unaligned
 3051 0050 E368     		ldr	r3, [r4, #12]
 3052 0052 43F82100 		str	r0, [r3, r1, lsl #2]	@ unaligned
 3053              	.LVL327:
 3054              	.LBE368:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 3055              		.loc 4 131 0 discriminator 2
 3056 0056 3946     		mov	r1, r7
 3057 0058 E1E7     		b	.L199
 3058              	.LVL328:
 3059              	.L198:
 3060              	.LBE367:
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 3061              		.loc 4 145 0
 3062 005a 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 3063              	.LVL329:
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 3064              		.loc 4 146 0
 3065 005c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 3066 005e BB42     		cmp	r3, r7
 3067 0060 04D2     		bcs	.L200
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 3068              		.loc 4 147 0
 3069 0062 B900     		lsls	r1, r7, #2
 3070 0064 A069     		ldr	r0, [r4, #24]
 3071 0066 FFF7FEFF 		bl	realloc
 3072              	.LVL330:
 3073 006a A061     		str	r0, [r4, #24]
 3074              	.L200:
 3075              	.LVL331:
 3076 006c 2B1D     		adds	r3, r5, #4
 3077              	.LVL332:
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 3078              		.loc 4 149 0
 3079 006e 2774     		strb	r7, [r4, #16]
 3080              	.LVL333:
 3081 0070 3344     		add	r3, r3, r6
 3082              	.LVL334:
 3083 0072 0022     		movs	r2, #0
 3084              	.LVL335:
 3085              	.L202:
 3086              	.LBB369:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 3087              		.loc 4 150 0 discriminator 3
 3088 0074 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 3089 0076 571C     		adds	r7, r2, #1
 3090 0078 D2B2     		uxtb	r2, r2
 3091 007a 9142     		cmp	r1, r2
 3092 007c A3EB0605 		sub	r5, r3, r6
 3093              	.LVL336:
 3094 0080 03F10403 		add	r3, r3, #4
 3095 0084 14D9     		bls	.L201
 3096              	.LVL337:
 3097              	.LBB370:
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 3098              		.loc 4 159 0 discriminator 2
 3099 0086 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 3100 008a 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 3101 008e 0904     		lsls	r1, r1, #16
 3102              	.LVL338:
 3103 0090 41EA0021 		orr	r1, r1, r0, lsl #8
 3104              	.LVL339:
 3105 0094 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 3106 0098 0143     		orrs	r1, r1, r0
 3107 009a 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 3108              	.LVL340:
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 3109              		.loc 4 160 0 discriminator 2
 3110 009e 41EA0061 		orr	r1, r1, r0, lsl #24
 3111 00a2 6161     		str	r1, [r4, #20]	@ float
 3112              	.LVL341:
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 3113              		.loc 4 162 0 discriminator 2
 3114 00a4 6069     		ldr	r0, [r4, #20]	@ unaligned
 3115 00a6 A169     		ldr	r1, [r4, #24]
 3116 00a8 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 3117              	.LVL342:
 3118              	.LBE370:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 3119              		.loc 4 150 0 discriminator 2
 3120 00ac 3A46     		mov	r2, r7
 3121 00ae E1E7     		b	.L202
 3122              	.LVL343:
 3123              	.L201:
 3124              	.LBE369:
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 3125              		.loc 4 164 0
 3126 00b0 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 3127              	.LVL344:
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 3128              		.loc 4 165 0
 3129 00b2 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 3130 00b4 BB42     		cmp	r3, r7
 3131 00b6 04D2     		bcs	.L203
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 3132              		.loc 4 166 0
 3133 00b8 B900     		lsls	r1, r7, #2
 3134 00ba 606A     		ldr	r0, [r4, #36]
 3135 00bc FFF7FEFF 		bl	realloc
 3136              	.LVL345:
 3137 00c0 6062     		str	r0, [r4, #36]
 3138              	.L203:
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 3139              		.loc 4 167 0
 3140 00c2 2B1D     		adds	r3, r5, #4
 3141              	.LVL346:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 3142              		.loc 4 168 0
 3143 00c4 0025     		movs	r5, #0
 3144              	.LBB371:
 3145              	.LBB372:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 3146              		.loc 4 176 0
 3147 00c6 AE46     		mov	lr, r5
 3148              	.LBE372:
 3149              	.LBE371:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 3150              		.loc 4 168 0
 3151 00c8 2777     		strb	r7, [r4, #28]
 3152              	.LVL347:
 3153              	.L207:
 3154              	.LBB376:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 3155              		.loc 4 169 0 discriminator 1
 3156 00ca 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 3157 00cc EFB2     		uxtb	r7, r5
 3158 00ce BA42     		cmp	r2, r7
 3159 00d0 19D9     		bls	.L204
 3160              	.LBB375:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 3161              		.loc 4 171 0
 3162 00d2 F058     		ldr	r0, [r6, r3]	@ unaligned
 3163              	.LBB373:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3164              		.loc 4 173 0
 3165 00d4 1A1D     		adds	r2, r3, #4
 3166              	.LBE373:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 3167              		.loc 4 171 0
 3168 00d6 0190     		str	r0, [sp, #4]	@ unaligned
 3169              	.LVL348:
 3170              	.LBB374:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3171              		.loc 4 173 0
 3172 00d8 019B     		ldr	r3, [sp, #4]
 3173 00da B118     		adds	r1, r6, r2
 3174 00dc 1344     		add	r3, r3, r2
 3175              	.LVL349:
 3176              	.L206:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3177              		.loc 4 173 0 is_stmt 0 discriminator 3
 3178 00de 881B     		subs	r0, r1, r6
 3179              	.LVL350:
 3180 00e0 8342     		cmp	r3, r0
 3181 00e2 04D9     		bls	.L205
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 3182              		.loc 4 174 0 is_stmt 1 discriminator 2
 3183 00e4 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 3184              	.LVL351:
 3185 00e8 01F8020C 		strb	r0, [r1, #-2]
 3186              	.LVL352:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3187              		.loc 4 173 0 discriminator 2
 3188 00ec F7E7     		b	.L206
 3189              	.LVL353:
 3190              	.L205:
 3191              	.LBE374:
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 3192              		.loc 4 177 0 discriminator 2
 3193 00ee 013A     		subs	r2, r2, #1
 3194              	.LVL354:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 3195              		.loc 4 176 0 discriminator 2
 3196 00f0 F118     		adds	r1, r6, r3
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 3197              		.loc 4 177 0 discriminator 2
 3198 00f2 3244     		add	r2, r2, r6
 3199              	.LVL355:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 3200              		.loc 4 176 0 discriminator 2
 3201 00f4 01F801EC 		strb	lr, [r1, #-1]
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 3202              		.loc 4 177 0 discriminator 2
 3203 00f8 2262     		str	r2, [r4, #32]
 3204              	.LVL356:
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 3205              		.loc 4 179 0 discriminator 2
 3206 00fa 216A     		ldr	r1, [r4, #32]	@ unaligned
 3207 00fc 626A     		ldr	r2, [r4, #36]
 3208 00fe 0135     		adds	r5, r5, #1
 3209              	.LVL357:
 3210 0100 42F82710 		str	r1, [r2, r7, lsl #2]	@ unaligned
 3211              	.LVL358:
 3212              	.LBE375:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 3213              		.loc 4 169 0 discriminator 2
 3214 0104 E1E7     		b	.L207
 3215              	.LVL359:
 3216              	.L204:
 3217              	.LBE376:
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 3218              		.loc 4 182 0
 3219 0106 1846     		mov	r0, r3
 3220 0108 03B0     		add	sp, sp, #12
 3221              	.LCFI22:
 3222              		.cfi_def_cfa_offset 20
 3223              		@ sp needed
 3224 010a F0BD     		pop	{r4, r5, r6, r7, pc}
 3225              		.cfi_endproc
 3226              	.LFE1075:
 3227              		.cantunwind
 3228              		.fnend
 3230              		.section	.text._ZN3ros3Msg19serializeAvrFloat64EPhf,"axG",%progbits,_ZN3ros3Msg19serializeAvrFloat
 3231              		.align	1
 3232              		.weak	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3233              		.thumb
 3234              		.thumb_func
 3236              	_ZN3ros3Msg19serializeAvrFloat64EPhf:
 3237              		.fnstart
 3238              	.LFB1021:
 3239              		.file 22 "./lib/ros_lib/ros/msg.h"
   1:./lib/ros_lib/ros/msg.h **** /* 
   2:./lib/ros_lib/ros/msg.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/msg.h ****  *
   4:./lib/ros_lib/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/msg.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/msg.h ****  *
   7:./lib/ros_lib/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/msg.h ****  * are met:
  10:./lib/ros_lib/ros/msg.h ****  *
  11:./lib/ros_lib/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/msg.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/msg.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/msg.h ****  *
  21:./lib/ros_lib/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/msg.h ****  */
  34:./lib/ros_lib/ros/msg.h **** 
  35:./lib/ros_lib/ros/msg.h **** #ifndef _ROS_MSG_H_
  36:./lib/ros_lib/ros/msg.h **** #define _ROS_MSG_H_
  37:./lib/ros_lib/ros/msg.h **** 
  38:./lib/ros_lib/ros/msg.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/msg.h **** 
  40:./lib/ros_lib/ros/msg.h **** namespace ros {
  41:./lib/ros_lib/ros/msg.h **** 
  42:./lib/ros_lib/ros/msg.h **** /* Base Message Type */
  43:./lib/ros_lib/ros/msg.h **** class Msg
  44:./lib/ros_lib/ros/msg.h **** {
  45:./lib/ros_lib/ros/msg.h **** public:
  46:./lib/ros_lib/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  47:./lib/ros_lib/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  48:./lib/ros_lib/ros/msg.h ****   virtual const char * getType() = 0;
  49:./lib/ros_lib/ros/msg.h ****   virtual const char * getMD5() = 0;
  50:./lib/ros_lib/ros/msg.h **** 
  51:./lib/ros_lib/ros/msg.h ****   /**
  52:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  53:./lib/ros_lib/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  54:./lib/ros_lib/ros/msg.h ****    *        fields, despite AVV having no native support for double.
  55:./lib/ros_lib/ros/msg.h ****    *
  56:./lib/ros_lib/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  57:./lib/ros_lib/ros/msg.h ****    * @param[in] f value to serialize.
  58:./lib/ros_lib/ros/msg.h ****    *
  59:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  60:./lib/ros_lib/ros/msg.h ****    *
  61:./lib/ros_lib/ros/msg.h ****    */
  62:./lib/ros_lib/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
 3240              		.loc 22 62 0
 3241              		.cfi_startproc
 3242              		@ args = 0, pretend = 0, frame = 0
 3243              		@ frame_needed = 0, uses_anonymous_args = 0
 3244              	.LVL360:
 3245 0000 38B5     		push	{r3, r4, r5, lr}
 3246              	.LCFI23:
 3247              		.cfi_def_cfa_offset 16
 3248              		.cfi_offset 3, -16
 3249              		.cfi_offset 4, -12
 3250              		.cfi_offset 5, -8
 3251              		.cfi_offset 14, -4
  63:./lib/ros_lib/ros/msg.h ****   {
  64:./lib/ros_lib/ros/msg.h ****     const int32_t* val = (int32_t*) &f;
  65:./lib/ros_lib/ros/msg.h ****     int32_t exp = ((*val >> 23) & 255);
 3252              		.loc 22 65 0
 3253 0002 C1F3C753 		ubfx	r3, r1, #23, #8
 3254              	.LVL361:
  62:./lib/ros_lib/ros/msg.h ****   {
 3255              		.loc 22 62 0
 3256 0006 0546     		mov	r5, r0
 3257              		.loc 22 65 0
 3258 0008 0A46     		mov	r2, r1
  62:./lib/ros_lib/ros/msg.h ****   {
 3259              		.loc 22 62 0
 3260 000a 0846     		mov	r0, r1
 3261              	.LVL362:
  66:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 3262              		.loc 22 66 0
 3263 000c 0BB1     		cbz	r3, .L210
  67:./lib/ros_lib/ros/msg.h ****     {
  68:./lib/ros_lib/ros/msg.h ****       exp += 1023 - 127;
 3264              		.loc 22 68 0
 3265 000e 03F56073 		add	r3, r3, #896
 3266              	.LVL363:
 3267              	.L210:
  69:./lib/ros_lib/ros/msg.h ****     }
  70:./lib/ros_lib/ros/msg.h **** 
  71:./lib/ros_lib/ros/msg.h ****     int32_t sig = *val;
  72:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3268              		.loc 22 72 0
 3269 0012 0021     		movs	r1, #0
 3270              	.LVL364:
 3271 0014 2970     		strb	r1, [r5]
 3272              	.LVL365:
  73:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3273              		.loc 22 73 0
 3274 0016 6970     		strb	r1, [r5, #1]
 3275              	.LVL366:
  74:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3276              		.loc 22 74 0
 3277 0018 A970     		strb	r1, [r5, #2]
 3278              	.LVL367:
  75:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 3279              		.loc 22 75 0
 3280 001a 5101     		lsls	r1, r2, #5
 3281 001c E970     		strb	r1, [r5, #3]
 3282              	.LVL368:
  76:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 3283              		.loc 22 76 0
 3284 001e D110     		asrs	r1, r2, #3
 3285 0020 2971     		strb	r1, [r5, #4]
 3286              	.LVL369:
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 3287              		.loc 22 77 0
 3288 0022 D112     		asrs	r1, r2, #11
  78:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 3289              		.loc 22 78 0
 3290 0024 C2F3C342 		ubfx	r2, r2, #19, #4
 3291 0028 42EA0312 		orr	r2, r2, r3, lsl #4
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 3292              		.loc 22 77 0
 3293 002c 6971     		strb	r1, [r5, #5]
 3294              	.LVL370:
 3295              		.loc 22 78 0
 3296 002e AA71     		strb	r2, [r5, #6]
 3297              	.LVL371:
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
  80:./lib/ros_lib/ros/msg.h **** 
  81:./lib/ros_lib/ros/msg.h ****     // Mark negative bit as necessary.
  82:./lib/ros_lib/ros/msg.h ****     if (f < 0)
 3298              		.loc 22 82 0
 3299 0030 0021     		movs	r1, #0
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 3300              		.loc 22 79 0
 3301 0032 C3F30714 		ubfx	r4, r3, #4, #8
 3302              		.loc 22 82 0
 3303 0036 FFF7FEFF 		bl	__aeabi_fcmplt
 3304              	.LVL372:
 3305 003a 08B9     		cbnz	r0, .L211
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 3306              		.loc 22 79 0
 3307 003c EC71     		strb	r4, [r5, #7]
 3308 003e 02E0     		b	.L212
 3309              	.L211:
  83:./lib/ros_lib/ros/msg.h ****     {
  84:./lib/ros_lib/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
 3310              		.loc 22 84 0
 3311 0040 64F07F03 		orn	r3, r4, #127
 3312 0044 EB71     		strb	r3, [r5, #7]
 3313              	.L212:
  85:./lib/ros_lib/ros/msg.h ****     }
  86:./lib/ros_lib/ros/msg.h **** 
  87:./lib/ros_lib/ros/msg.h ****     return 8;
  88:./lib/ros_lib/ros/msg.h ****   }
 3314              		.loc 22 88 0
 3315 0046 0820     		movs	r0, #8
 3316 0048 38BD     		pop	{r3, r4, r5, pc}
 3317              		.cfi_endproc
 3318              	.LFE1021:
 3319              		.cantunwind
 3320              		.fnend
 3322              		.section	.text._ZNK12roberto_msgs10MotorState9serializeEPh,"axG",%progbits,_ZNK12roberto_msgs10Mot
 3323              		.align	1
 3324              		.weak	_ZNK12roberto_msgs10MotorState9serializeEPh
 3325              		.thumb
 3326              		.thumb_func
 3328              	_ZNK12roberto_msgs10MotorState9serializeEPh:
 3329              		.fnstart
 3330              	.LFB1242:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3331              		.loc 15 37 0
 3332              		.cfi_startproc
 3333              		@ args = 0, pretend = 0, frame = 0
 3334              		@ frame_needed = 0, uses_anonymous_args = 0
 3335              	.LVL373:
 3336 0000 70B5     		push	{r4, r5, r6, lr}
 3337              	.LCFI24:
 3338              		.cfi_def_cfa_offset 16
 3339              		.cfi_offset 4, -16
 3340              		.cfi_offset 5, -12
 3341              		.cfi_offset 6, -8
 3342              		.cfi_offset 14, -4
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3343              		.loc 15 37 0
 3344 0002 0546     		mov	r5, r0
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3345              		.loc 15 40 0
 3346 0004 0430     		adds	r0, r0, #4
 3347              	.LVL374:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3348              		.loc 15 37 0
 3349 0006 0E46     		mov	r6, r1
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3350              		.loc 15 40 0
 3351 0008 FFF7FEFF 		bl	_ZNK8std_msgs6Header9serializeEPh
 3352              	.LVL375:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 3353              		.loc 15 41 0
 3354 000c A969     		ldr	r1, [r5, #24]	@ float
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3355              		.loc 15 40 0
 3356 000e 0446     		mov	r4, r0
 3357              	.LVL376:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 3358              		.loc 15 41 0
 3359 0010 3018     		adds	r0, r6, r0
 3360              	.LVL377:
 3361 0012 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3362              	.LVL378:
 3363 0016 0444     		add	r4, r4, r0
 3364              	.LVL379:
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
 3365              		.loc 15 42 0
 3366 0018 E969     		ldr	r1, [r5, #28]	@ float
 3367 001a 3019     		adds	r0, r6, r4
 3368 001c FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3369              	.LVL380:
 3370 0020 0444     		add	r4, r4, r0
 3371              	.LVL381:
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
 3372              		.loc 15 43 0
 3373 0022 296A     		ldr	r1, [r5, #32]	@ float
 3374 0024 3019     		adds	r0, r6, r4
 3375 0026 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3376              	.LVL382:
 3377 002a 0444     		add	r4, r4, r0
 3378              	.LVL383:
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
 3379              		.loc 15 44 0
 3380 002c 696A     		ldr	r1, [r5, #36]	@ float
 3381 002e 3019     		adds	r0, r6, r4
 3382 0030 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3383              	.LVL384:
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3384              		.loc 15 45 0
 3385 0034 95F82830 		ldrb	r3, [r5, #40]	@ zero_extendqisi2
 3386 0038 2044     		add	r0, r0, r4
 3387              	.LVL385:
 3388 003a 3354     		strb	r3, [r6, r0]
 3389              	.LVL386:
  48:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3390              		.loc 15 48 0
 3391 003c 0130     		adds	r0, r0, #1
 3392              	.LVL387:
 3393 003e 70BD     		pop	{r4, r5, r6, pc}
 3394              		.cfi_endproc
 3395              	.LFE1242:
 3396              		.cantunwind
 3397              		.fnend
 3399              		.section	.text._ZNK13geometry_msgs7Vector39serializeEPh,"axG",%progbits,_ZNK13geometry_msgs7Vector
 3400              		.align	1
 3401              		.weak	_ZNK13geometry_msgs7Vector39serializeEPh
 3402              		.thumb
 3403              		.thumb_func
 3405              	_ZNK13geometry_msgs7Vector39serializeEPh:
 3406              		.fnstart
 3407              	.LFB1207:
  26:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
 3408              		.loc 11 26 0
 3409              		.cfi_startproc
 3410              		@ args = 0, pretend = 0, frame = 0
 3411              		@ frame_needed = 0, uses_anonymous_args = 0
 3412              	.LVL388:
 3413 0000 70B5     		push	{r4, r5, r6, lr}
 3414              	.LCFI25:
 3415              		.cfi_def_cfa_offset 16
 3416              		.cfi_offset 4, -16
 3417              		.cfi_offset 5, -12
 3418              		.cfi_offset 6, -8
 3419              		.cfi_offset 14, -4
  26:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
 3420              		.loc 11 26 0
 3421 0002 0D46     		mov	r5, r1
 3422 0004 0646     		mov	r6, r0
  29:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
 3423              		.loc 11 29 0
 3424 0006 4168     		ldr	r1, [r0, #4]	@ float
 3425              	.LVL389:
 3426 0008 2846     		mov	r0, r5
 3427              	.LVL390:
 3428 000a FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3429              	.LVL391:
  30:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
 3430              		.loc 11 30 0
 3431 000e B168     		ldr	r1, [r6, #8]	@ float
  29:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
 3432              		.loc 11 29 0
 3433 0010 0446     		mov	r4, r0
 3434              	.LVL392:
  30:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
 3435              		.loc 11 30 0
 3436 0012 2818     		adds	r0, r5, r0
 3437              	.LVL393:
 3438 0014 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3439              	.LVL394:
 3440 0018 0444     		add	r4, r4, r0
 3441              	.LVL395:
  31:./lib/ros_lib/geometry_msgs/Vector3.h ****       return offset;
 3442              		.loc 11 31 0
 3443 001a F168     		ldr	r1, [r6, #12]	@ float
 3444 001c 2819     		adds	r0, r5, r4
 3445 001e FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3446              	.LVL396:
  33:./lib/ros_lib/geometry_msgs/Vector3.h **** 
 3447              		.loc 11 33 0
 3448 0022 2044     		add	r0, r0, r4
 3449              	.LVL397:
 3450 0024 70BD     		pop	{r4, r5, r6, pc}
 3451              		.cfi_endproc
 3452              	.LFE1207:
 3453              		.cantunwind
 3454              		.fnend
 3456              		.section	.text._ZNK13geometry_msgs5Twist9serializeEPh,"axG",%progbits,_ZNK13geometry_msgs5Twist9se
 3457              		.align	1
 3458              		.weak	_ZNK13geometry_msgs5Twist9serializeEPh
 3459              		.thumb
 3460              		.thumb_func
 3462              	_ZNK13geometry_msgs5Twist9serializeEPh:
 3463              		.fnstart
 3464              	.LFB1214:
  25:./lib/ros_lib/geometry_msgs/Twist.h ****     {
 3465              		.loc 12 25 0
 3466              		.cfi_startproc
 3467              		@ args = 0, pretend = 0, frame = 0
 3468              		@ frame_needed = 0, uses_anonymous_args = 0
 3469              	.LVL398:
 3470 0000 70B5     		push	{r4, r5, r6, lr}
 3471              	.LCFI26:
 3472              		.cfi_def_cfa_offset 16
 3473              		.cfi_offset 4, -16
 3474              		.cfi_offset 5, -12
 3475              		.cfi_offset 6, -8
 3476              		.cfi_offset 14, -4
  25:./lib/ros_lib/geometry_msgs/Twist.h ****     {
 3477              		.loc 12 25 0
 3478 0002 0546     		mov	r5, r0
  28:./lib/ros_lib/geometry_msgs/Twist.h ****       offset += this->angular.serialize(outbuffer + offset);
 3479              		.loc 12 28 0
 3480 0004 0430     		adds	r0, r0, #4
 3481              	.LVL399:
  25:./lib/ros_lib/geometry_msgs/Twist.h ****     {
 3482              		.loc 12 25 0
 3483 0006 0E46     		mov	r6, r1
  28:./lib/ros_lib/geometry_msgs/Twist.h ****       offset += this->angular.serialize(outbuffer + offset);
 3484              		.loc 12 28 0
 3485 0008 FFF7FEFF 		bl	_ZNK13geometry_msgs7Vector39serializeEPh
 3486              	.LVL400:
 3487 000c 0446     		mov	r4, r0
 3488              	.LVL401:
  29:./lib/ros_lib/geometry_msgs/Twist.h ****       return offset;
 3489              		.loc 12 29 0
 3490 000e 3118     		adds	r1, r6, r0
 3491 0010 05F11400 		add	r0, r5, #20
 3492              	.LVL402:
 3493 0014 FFF7FEFF 		bl	_ZNK13geometry_msgs7Vector39serializeEPh
 3494              	.LVL403:
  31:./lib/ros_lib/geometry_msgs/Twist.h **** 
 3495              		.loc 12 31 0
 3496 0018 2044     		add	r0, r0, r4
 3497              	.LVL404:
 3498 001a 70BD     		pop	{r4, r5, r6, pc}
 3499              		.cfi_endproc
 3500              	.LFE1214:
 3501              		.cantunwind
 3502              		.fnend
 3504              		.section	.text._ZNK13geometry_msgs19TwistWithCovariance9serializeEPh,"axG",%progbits,_ZNK13geometr
 3505              		.align	1
 3506              		.weak	_ZNK13geometry_msgs19TwistWithCovariance9serializeEPh
 3507              		.thumb
 3508              		.thumb_func
 3510              	_ZNK13geometry_msgs19TwistWithCovariance9serializeEPh:
 3511              		.fnstart
 3512              	.LFB1221:
  25:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 3513              		.loc 13 25 0
 3514              		.cfi_startproc
 3515              		@ args = 0, pretend = 0, frame = 0
 3516              		@ frame_needed = 0, uses_anonymous_args = 0
 3517              	.LVL405:
 3518 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3519              	.LCFI27:
 3520              		.cfi_def_cfa_offset 24
 3521              		.cfi_offset 3, -24
 3522              		.cfi_offset 4, -20
 3523              		.cfi_offset 5, -16
 3524              		.cfi_offset 6, -12
 3525              		.cfi_offset 7, -8
 3526              		.cfi_offset 14, -4
  25:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 3527              		.loc 13 25 0
 3528 0002 0446     		mov	r4, r0
  28:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
 3529              		.loc 13 28 0
 3530 0004 0430     		adds	r0, r0, #4
 3531              	.LVL406:
  25:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 3532              		.loc 13 25 0
 3533 0006 0F46     		mov	r7, r1
  28:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
 3534              		.loc 13 28 0
 3535 0008 FFF7FEFF 		bl	_ZNK13geometry_msgs5Twist9serializeEPh
 3536              	.LVL407:
 3537 000c 0546     		mov	r5, r0
 3538              	.LVL408:
 3539 000e 04F12406 		add	r6, r4, #36
 3540 0012 B434     		adds	r4, r4, #180
 3541              	.LVL409:
 3542              	.L220:
 3543              	.LBB377:
  30:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       }
 3544              		.loc 13 30 0 discriminator 2
 3545 0014 56F8041F 		ldr	r1, [r6, #4]!	@ float
 3546 0018 7819     		adds	r0, r7, r5
 3547 001a FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3548              	.LVL410:
  29:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->covariance[i]);
 3549              		.loc 13 29 0 discriminator 2
 3550 001e A642     		cmp	r6, r4
  30:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       }
 3551              		.loc 13 30 0 discriminator 2
 3552 0020 0544     		add	r5, r5, r0
 3553              	.LVL411:
  29:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->covariance[i]);
 3554              		.loc 13 29 0 discriminator 2
 3555 0022 F7D1     		bne	.L220
 3556              	.LBE377:
  33:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
 3557              		.loc 13 33 0
 3558 0024 2846     		mov	r0, r5
 3559 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3560              		.cfi_endproc
 3561              	.LFE1221:
 3562              		.cantunwind
 3563              		.fnend
 3565              		.section	.text._ZNK13geometry_msgs10Quaternion9serializeEPh,"axG",%progbits,_ZNK13geometry_msgs10Q
 3566              		.align	1
 3567              		.weak	_ZNK13geometry_msgs10Quaternion9serializeEPh
 3568              		.thumb
 3569              		.thumb_func
 3571              	_ZNK13geometry_msgs10Quaternion9serializeEPh:
 3572              		.fnstart
 3573              	.LFB1186:
  28:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 3574              		.loc 8 28 0
 3575              		.cfi_startproc
 3576              		@ args = 0, pretend = 0, frame = 0
 3577              		@ frame_needed = 0, uses_anonymous_args = 0
 3578              	.LVL412:
 3579 0000 70B5     		push	{r4, r5, r6, lr}
 3580              	.LCFI28:
 3581              		.cfi_def_cfa_offset 16
 3582              		.cfi_offset 4, -16
 3583              		.cfi_offset 5, -12
 3584              		.cfi_offset 6, -8
 3585              		.cfi_offset 14, -4
  28:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 3586              		.loc 8 28 0
 3587 0002 0D46     		mov	r5, r1
 3588 0004 0646     		mov	r6, r0
  31:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
 3589              		.loc 8 31 0
 3590 0006 4168     		ldr	r1, [r0, #4]	@ float
 3591              	.LVL413:
 3592 0008 2846     		mov	r0, r5
 3593              	.LVL414:
 3594 000a FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3595              	.LVL415:
  32:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
 3596              		.loc 8 32 0
 3597 000e B168     		ldr	r1, [r6, #8]	@ float
  31:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
 3598              		.loc 8 31 0
 3599 0010 0446     		mov	r4, r0
 3600              	.LVL416:
  32:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
 3601              		.loc 8 32 0
 3602 0012 2818     		adds	r0, r5, r0
 3603              	.LVL417:
 3604 0014 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3605              	.LVL418:
 3606 0018 0444     		add	r4, r4, r0
 3607              	.LVL419:
  33:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->w);
 3608              		.loc 8 33 0
 3609 001a F168     		ldr	r1, [r6, #12]	@ float
 3610 001c 2819     		adds	r0, r5, r4
 3611 001e FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3612              	.LVL420:
 3613 0022 0444     		add	r4, r4, r0
 3614              	.LVL421:
  34:./lib/ros_lib/geometry_msgs/Quaternion.h ****       return offset;
 3615              		.loc 8 34 0
 3616 0024 3169     		ldr	r1, [r6, #16]	@ float
 3617 0026 2819     		adds	r0, r5, r4
 3618 0028 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3619              	.LVL422:
  36:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
 3620              		.loc 8 36 0
 3621 002c 2044     		add	r0, r0, r4
 3622              	.LVL423:
 3623 002e 70BD     		pop	{r4, r5, r6, pc}
 3624              		.cfi_endproc
 3625              	.LFE1186:
 3626              		.cantunwind
 3627              		.fnend
 3629              		.section	.text._ZNK13geometry_msgs9Transform9serializeEPh,"axG",%progbits,_ZNK13geometry_msgs9Tran
 3630              		.align	1
 3631              		.weak	_ZNK13geometry_msgs9Transform9serializeEPh
 3632              		.thumb
 3633              		.thumb_func
 3635              	_ZNK13geometry_msgs9Transform9serializeEPh:
 3636              		.fnstart
 3637              	.LFB1249:
  26:./lib/ros_lib/geometry_msgs/Transform.h ****     {
 3638              		.loc 16 26 0
 3639              		.cfi_startproc
 3640              		@ args = 0, pretend = 0, frame = 0
 3641              		@ frame_needed = 0, uses_anonymous_args = 0
 3642              	.LVL424:
 3643 0000 70B5     		push	{r4, r5, r6, lr}
 3644              	.LCFI29:
 3645              		.cfi_def_cfa_offset 16
 3646              		.cfi_offset 4, -16
 3647              		.cfi_offset 5, -12
 3648              		.cfi_offset 6, -8
 3649              		.cfi_offset 14, -4
  26:./lib/ros_lib/geometry_msgs/Transform.h ****     {
 3650              		.loc 16 26 0
 3651 0002 0546     		mov	r5, r0
  29:./lib/ros_lib/geometry_msgs/Transform.h ****       offset += this->rotation.serialize(outbuffer + offset);
 3652              		.loc 16 29 0
 3653 0004 0430     		adds	r0, r0, #4
 3654              	.LVL425:
  26:./lib/ros_lib/geometry_msgs/Transform.h ****     {
 3655              		.loc 16 26 0
 3656 0006 0E46     		mov	r6, r1
  29:./lib/ros_lib/geometry_msgs/Transform.h ****       offset += this->rotation.serialize(outbuffer + offset);
 3657              		.loc 16 29 0
 3658 0008 FFF7FEFF 		bl	_ZNK13geometry_msgs7Vector39serializeEPh
 3659              	.LVL426:
 3660 000c 0446     		mov	r4, r0
 3661              	.LVL427:
  30:./lib/ros_lib/geometry_msgs/Transform.h ****       return offset;
 3662              		.loc 16 30 0
 3663 000e 3118     		adds	r1, r6, r0
 3664 0010 05F11400 		add	r0, r5, #20
 3665              	.LVL428:
 3666 0014 FFF7FEFF 		bl	_ZNK13geometry_msgs10Quaternion9serializeEPh
 3667              	.LVL429:
  32:./lib/ros_lib/geometry_msgs/Transform.h **** 
 3668              		.loc 16 32 0
 3669 0018 2044     		add	r0, r0, r4
 3670              	.LVL430:
 3671 001a 70BD     		pop	{r4, r5, r6, pc}
 3672              		.cfi_endproc
 3673              	.LFE1249:
 3674              		.cantunwind
 3675              		.fnend
 3677              		.section	.text._ZNK13geometry_msgs16TransformStamped9serializeEPh,"axG",%progbits,_ZNK13geometry_m
 3678              		.align	1
 3679              		.weak	_ZNK13geometry_msgs16TransformStamped9serializeEPh
 3680              		.thumb
 3681              		.thumb_func
 3683              	_ZNK13geometry_msgs16TransformStamped9serializeEPh:
 3684              		.fnstart
 3685              	.LFB1256:
  28:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 3686              		.loc 17 28 0
 3687              		.cfi_startproc
 3688              		@ args = 0, pretend = 0, frame = 8
 3689              		@ frame_needed = 0, uses_anonymous_args = 0
 3690              	.LVL431:
 3691 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 3692              	.LCFI30:
 3693              		.cfi_def_cfa_offset 32
 3694              		.cfi_offset 4, -24
 3695              		.cfi_offset 5, -20
 3696              		.cfi_offset 6, -16
 3697              		.cfi_offset 7, -12
 3698              		.cfi_offset 8, -8
 3699              		.cfi_offset 14, -4
  28:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 3700              		.loc 17 28 0
 3701 0004 0646     		mov	r6, r0
  31:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       uint32_t length_child_frame_id = strlen(this->child_frame_id);
 3702              		.loc 17 31 0
 3703 0006 0430     		adds	r0, r0, #4
 3704              	.LVL432:
  28:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 3705              		.loc 17 28 0
 3706 0008 0F46     		mov	r7, r1
  31:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       uint32_t length_child_frame_id = strlen(this->child_frame_id);
 3707              		.loc 17 31 0
 3708 000a FFF7FEFF 		bl	_ZNK8std_msgs6Header9serializeEPh
 3709              	.LVL433:
 3710 000e 0546     		mov	r5, r0
 3711              	.LVL434:
  32:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       memcpy(outbuffer + offset, &length_child_frame_id, sizeof(uint32_t));
 3712              		.loc 17 32 0
 3713 0010 B069     		ldr	r0, [r6, #24]
 3714              	.LVL435:
 3715 0012 FFF7FEFF 		bl	strlen
 3716              	.LVL436:
 3717 0016 8046     		mov	r8, r0
 3718 0018 02AB     		add	r3, sp, #8
 3719 001a 43F8040D 		str	r0, [r3, #-4]!
  33:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += 4;
 3720              		.loc 17 33 0
 3721 001e 1868     		ldr	r0, [r3]	@ unaligned
  35:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += length_child_frame_id;
 3722              		.loc 17 35 0
 3723 0020 2C1D     		adds	r4, r5, #4
  33:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += 4;
 3724              		.loc 17 33 0
 3725 0022 7851     		str	r0, [r7, r5]	@ unaligned
 3726              	.LVL437:
  35:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += length_child_frame_id;
 3727              		.loc 17 35 0
 3728 0024 4246     		mov	r2, r8
 3729 0026 B169     		ldr	r1, [r6, #24]
 3730 0028 3819     		adds	r0, r7, r4
  36:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += this->transform.serialize(outbuffer + offset);
 3731              		.loc 17 36 0
 3732 002a 4444     		add	r4, r4, r8
 3733              	.LVL438:
  35:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += length_child_frame_id;
 3734              		.loc 17 35 0
 3735 002c FFF7FEFF 		bl	memcpy
 3736              	.LVL439:
  37:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       return offset;
 3737              		.loc 17 37 0
 3738 0030 3919     		adds	r1, r7, r4
 3739 0032 06F11C00 		add	r0, r6, #28
 3740 0036 FFF7FEFF 		bl	_ZNK13geometry_msgs9Transform9serializeEPh
 3741              	.LVL440:
  39:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
 3742              		.loc 17 39 0
 3743 003a 2044     		add	r0, r0, r4
 3744              	.LVL441:
 3745 003c 02B0     		add	sp, sp, #8
 3746              	.LCFI31:
 3747              		.cfi_def_cfa_offset 24
 3748              		@ sp needed
 3749 003e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3750              		.cfi_endproc
 3751              	.LFE1256:
 3752              		.cantunwind
 3753              		.fnend
 3755              		.section	.text._ZNK13geometry_msgs5Point9serializeEPh,"axG",%progbits,_ZNK13geometry_msgs5Point9se
 3756              		.align	1
 3757              		.weak	_ZNK13geometry_msgs5Point9serializeEPh
 3758              		.thumb
 3759              		.thumb_func
 3761              	_ZNK13geometry_msgs5Point9serializeEPh:
 3762              		.fnstart
 3763              	.LFB1179:
  26:./lib/ros_lib/geometry_msgs/Point.h ****     {
 3764              		.loc 7 26 0
 3765              		.cfi_startproc
 3766              		@ args = 0, pretend = 0, frame = 0
 3767              		@ frame_needed = 0, uses_anonymous_args = 0
 3768              	.LVL442:
 3769 0000 70B5     		push	{r4, r5, r6, lr}
 3770              	.LCFI32:
 3771              		.cfi_def_cfa_offset 16
 3772              		.cfi_offset 4, -16
 3773              		.cfi_offset 5, -12
 3774              		.cfi_offset 6, -8
 3775              		.cfi_offset 14, -4
  26:./lib/ros_lib/geometry_msgs/Point.h ****     {
 3776              		.loc 7 26 0
 3777 0002 0D46     		mov	r5, r1
 3778 0004 0646     		mov	r6, r0
  29:./lib/ros_lib/geometry_msgs/Point.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
 3779              		.loc 7 29 0
 3780 0006 4168     		ldr	r1, [r0, #4]	@ float
 3781              	.LVL443:
 3782 0008 2846     		mov	r0, r5
 3783              	.LVL444:
 3784 000a FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3785              	.LVL445:
  30:./lib/ros_lib/geometry_msgs/Point.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
 3786              		.loc 7 30 0
 3787 000e B168     		ldr	r1, [r6, #8]	@ float
  29:./lib/ros_lib/geometry_msgs/Point.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
 3788              		.loc 7 29 0
 3789 0010 0446     		mov	r4, r0
 3790              	.LVL446:
  30:./lib/ros_lib/geometry_msgs/Point.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
 3791              		.loc 7 30 0
 3792 0012 2818     		adds	r0, r5, r0
 3793              	.LVL447:
 3794 0014 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3795              	.LVL448:
 3796 0018 0444     		add	r4, r4, r0
 3797              	.LVL449:
  31:./lib/ros_lib/geometry_msgs/Point.h ****       return offset;
 3798              		.loc 7 31 0
 3799 001a F168     		ldr	r1, [r6, #12]	@ float
 3800 001c 2819     		adds	r0, r5, r4
 3801 001e FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3802              	.LVL450:
  33:./lib/ros_lib/geometry_msgs/Point.h **** 
 3803              		.loc 7 33 0
 3804 0022 2044     		add	r0, r0, r4
 3805              	.LVL451:
 3806 0024 70BD     		pop	{r4, r5, r6, pc}
 3807              		.cfi_endproc
 3808              	.LFE1179:
 3809              		.cantunwind
 3810              		.fnend
 3812              		.section	.text._ZNK13geometry_msgs4Pose9serializeEPh,"axG",%progbits,_ZNK13geometry_msgs4Pose9seri
 3813              		.align	1
 3814              		.weak	_ZNK13geometry_msgs4Pose9serializeEPh
 3815              		.thumb
 3816              		.thumb_func
 3818              	_ZNK13geometry_msgs4Pose9serializeEPh:
 3819              		.fnstart
 3820              	.LFB1193:
  26:./lib/ros_lib/geometry_msgs/Pose.h ****     {
 3821              		.loc 9 26 0
 3822              		.cfi_startproc
 3823              		@ args = 0, pretend = 0, frame = 0
 3824              		@ frame_needed = 0, uses_anonymous_args = 0
 3825              	.LVL452:
 3826 0000 70B5     		push	{r4, r5, r6, lr}
 3827              	.LCFI33:
 3828              		.cfi_def_cfa_offset 16
 3829              		.cfi_offset 4, -16
 3830              		.cfi_offset 5, -12
 3831              		.cfi_offset 6, -8
 3832              		.cfi_offset 14, -4
  26:./lib/ros_lib/geometry_msgs/Pose.h ****     {
 3833              		.loc 9 26 0
 3834 0002 0546     		mov	r5, r0
  29:./lib/ros_lib/geometry_msgs/Pose.h ****       offset += this->orientation.serialize(outbuffer + offset);
 3835              		.loc 9 29 0
 3836 0004 0430     		adds	r0, r0, #4
 3837              	.LVL453:
  26:./lib/ros_lib/geometry_msgs/Pose.h ****     {
 3838              		.loc 9 26 0
 3839 0006 0E46     		mov	r6, r1
  29:./lib/ros_lib/geometry_msgs/Pose.h ****       offset += this->orientation.serialize(outbuffer + offset);
 3840              		.loc 9 29 0
 3841 0008 FFF7FEFF 		bl	_ZNK13geometry_msgs5Point9serializeEPh
 3842              	.LVL454:
 3843 000c 0446     		mov	r4, r0
 3844              	.LVL455:
  30:./lib/ros_lib/geometry_msgs/Pose.h ****       return offset;
 3845              		.loc 9 30 0
 3846 000e 3118     		adds	r1, r6, r0
 3847 0010 05F11400 		add	r0, r5, #20
 3848              	.LVL456:
 3849 0014 FFF7FEFF 		bl	_ZNK13geometry_msgs10Quaternion9serializeEPh
 3850              	.LVL457:
  32:./lib/ros_lib/geometry_msgs/Pose.h **** 
 3851              		.loc 9 32 0
 3852 0018 2044     		add	r0, r0, r4
 3853              	.LVL458:
 3854 001a 70BD     		pop	{r4, r5, r6, pc}
 3855              		.cfi_endproc
 3856              	.LFE1193:
 3857              		.cantunwind
 3858              		.fnend
 3860              		.section	.text._ZNK13geometry_msgs18PoseWithCovariance9serializeEPh,"axG",%progbits,_ZNK13geometry
 3861              		.align	1
 3862              		.weak	_ZNK13geometry_msgs18PoseWithCovariance9serializeEPh
 3863              		.thumb
 3864              		.thumb_func
 3866              	_ZNK13geometry_msgs18PoseWithCovariance9serializeEPh:
 3867              		.fnstart
 3868              	.LFB1200:
  25:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 3869              		.loc 10 25 0
 3870              		.cfi_startproc
 3871              		@ args = 0, pretend = 0, frame = 0
 3872              		@ frame_needed = 0, uses_anonymous_args = 0
 3873              	.LVL459:
 3874 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3875              	.LCFI34:
 3876              		.cfi_def_cfa_offset 24
 3877              		.cfi_offset 3, -24
 3878              		.cfi_offset 4, -20
 3879              		.cfi_offset 5, -16
 3880              		.cfi_offset 6, -12
 3881              		.cfi_offset 7, -8
 3882              		.cfi_offset 14, -4
  25:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 3883              		.loc 10 25 0
 3884 0002 0446     		mov	r4, r0
  28:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
 3885              		.loc 10 28 0
 3886 0004 0430     		adds	r0, r0, #4
 3887              	.LVL460:
  25:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 3888              		.loc 10 25 0
 3889 0006 0F46     		mov	r7, r1
  28:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
 3890              		.loc 10 28 0
 3891 0008 FFF7FEFF 		bl	_ZNK13geometry_msgs4Pose9serializeEPh
 3892              	.LVL461:
 3893 000c 0546     		mov	r5, r0
 3894              	.LVL462:
 3895 000e 04F12806 		add	r6, r4, #40
 3896 0012 B834     		adds	r4, r4, #184
 3897              	.LVL463:
 3898              	.L228:
 3899              	.LBB378:
  30:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       }
 3900              		.loc 10 30 0 discriminator 2
 3901 0014 56F8041F 		ldr	r1, [r6, #4]!	@ float
 3902 0018 7819     		adds	r0, r7, r5
 3903 001a FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3904              	.LVL464:
  29:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->covariance[i]);
 3905              		.loc 10 29 0 discriminator 2
 3906 001e A642     		cmp	r6, r4
  30:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       }
 3907              		.loc 10 30 0 discriminator 2
 3908 0020 0544     		add	r5, r5, r0
 3909              	.LVL465:
  29:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->covariance[i]);
 3910              		.loc 10 29 0 discriminator 2
 3911 0022 F7D1     		bne	.L228
 3912              	.LBE378:
  33:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
 3913              		.loc 10 33 0
 3914 0024 2846     		mov	r0, r5
 3915 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3916              		.cfi_endproc
 3917              	.LFE1200:
 3918              		.cantunwind
 3919              		.fnend
 3921              		.section	.text._ZNK8nav_msgs8Odometry9serializeEPh,"axG",%progbits,_ZNK8nav_msgs8Odometry9serializ
 3922              		.align	1
 3923              		.weak	_ZNK8nav_msgs8Odometry9serializeEPh
 3924              		.thumb
 3925              		.thumb_func
 3927              	_ZNK8nav_msgs8Odometry9serializeEPh:
 3928              		.fnstart
 3929              	.LFB1228:
  31:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 3930              		.loc 14 31 0
 3931              		.cfi_startproc
 3932              		@ args = 0, pretend = 0, frame = 8
 3933              		@ frame_needed = 0, uses_anonymous_args = 0
 3934              	.LVL466:
 3935 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 3936              	.LCFI35:
 3937              		.cfi_def_cfa_offset 32
 3938              		.cfi_offset 4, -24
 3939              		.cfi_offset 5, -20
 3940              		.cfi_offset 6, -16
 3941              		.cfi_offset 7, -12
 3942              		.cfi_offset 8, -8
 3943              		.cfi_offset 14, -4
  31:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 3944              		.loc 14 31 0
 3945 0004 0646     		mov	r6, r0
  34:./lib/ros_lib/nav_msgs/Odometry.h ****       uint32_t length_child_frame_id = strlen(this->child_frame_id);
 3946              		.loc 14 34 0
 3947 0006 0430     		adds	r0, r0, #4
 3948              	.LVL467:
  31:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 3949              		.loc 14 31 0
 3950 0008 0F46     		mov	r7, r1
  34:./lib/ros_lib/nav_msgs/Odometry.h ****       uint32_t length_child_frame_id = strlen(this->child_frame_id);
 3951              		.loc 14 34 0
 3952 000a FFF7FEFF 		bl	_ZNK8std_msgs6Header9serializeEPh
 3953              	.LVL468:
 3954 000e 0546     		mov	r5, r0
 3955              	.LVL469:
  35:./lib/ros_lib/nav_msgs/Odometry.h ****       memcpy(outbuffer + offset, &length_child_frame_id, sizeof(uint32_t));
 3956              		.loc 14 35 0
 3957 0010 B069     		ldr	r0, [r6, #24]
 3958              	.LVL470:
 3959 0012 FFF7FEFF 		bl	strlen
 3960              	.LVL471:
 3961 0016 8046     		mov	r8, r0
 3962 0018 02AB     		add	r3, sp, #8
 3963 001a 43F8040D 		str	r0, [r3, #-4]!
  36:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += 4;
 3964              		.loc 14 36 0
 3965 001e 1868     		ldr	r0, [r3]	@ unaligned
  38:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += length_child_frame_id;
 3966              		.loc 14 38 0
 3967 0020 2C1D     		adds	r4, r5, #4
  36:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += 4;
 3968              		.loc 14 36 0
 3969 0022 7851     		str	r0, [r7, r5]	@ unaligned
 3970              	.LVL472:
  38:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += length_child_frame_id;
 3971              		.loc 14 38 0
 3972 0024 4246     		mov	r2, r8
 3973 0026 B169     		ldr	r1, [r6, #24]
 3974 0028 3819     		adds	r0, r7, r4
  39:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->pose.serialize(outbuffer + offset);
 3975              		.loc 14 39 0
 3976 002a 4444     		add	r4, r4, r8
 3977              	.LVL473:
  38:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += length_child_frame_id;
 3978              		.loc 14 38 0
 3979 002c FFF7FEFF 		bl	memcpy
 3980              	.LVL474:
  40:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->twist.serialize(outbuffer + offset);
 3981              		.loc 14 40 0
 3982 0030 3919     		adds	r1, r7, r4
 3983 0032 06F11C00 		add	r0, r6, #28
 3984 0036 FFF7FEFF 		bl	_ZNK13geometry_msgs18PoseWithCovariance9serializeEPh
 3985              	.LVL475:
 3986 003a 0444     		add	r4, r4, r0
 3987              	.LVL476:
  41:./lib/ros_lib/nav_msgs/Odometry.h ****       return offset;
 3988              		.loc 14 41 0
 3989 003c 3919     		adds	r1, r7, r4
 3990 003e 06F1D800 		add	r0, r6, #216
 3991 0042 FFF7FEFF 		bl	_ZNK13geometry_msgs19TwistWithCovariance9serializeEPh
 3992              	.LVL477:
  43:./lib/ros_lib/nav_msgs/Odometry.h **** 
 3993              		.loc 14 43 0
 3994 0046 2044     		add	r0, r0, r4
 3995              	.LVL478:
 3996 0048 02B0     		add	sp, sp, #8
 3997              	.LCFI36:
 3998              		.cfi_def_cfa_offset 24
 3999              		@ sp needed
 4000 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4001              		.cfi_endproc
 4002              	.LFE1228:
 4003              		.cantunwind
 4004              		.fnend
 4006              		.section	.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf,"axG",%progbits,_ZN3ros3Msg21deserializeAv
 4007              		.align	1
 4008              		.weak	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4009              		.thumb
 4010              		.thumb_func
 4012              	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf:
 4013              		.fnstart
 4014              	.LFB1022:
  89:./lib/ros_lib/ros/msg.h **** 
  90:./lib/ros_lib/ros/msg.h ****   /**
  91:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
  92:./lib/ros_lib/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
  93:./lib/ros_lib/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
  94:./lib/ros_lib/ros/msg.h ****    *
  95:./lib/ros_lib/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
  96:./lib/ros_lib/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
  97:./lib/ros_lib/ros/msg.h ****    *
  98:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  99:./lib/ros_lib/ros/msg.h ****    */
 100:./lib/ros_lib/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 4015              		.loc 22 100 0
 4016              		.cfi_startproc
 4017              		@ args = 0, pretend = 0, frame = 0
 4018              		@ frame_needed = 0, uses_anonymous_args = 0
 4019              	.LVL479:
 4020 0000 30B5     		push	{r4, r5, lr}
 4021              	.LCFI37:
 4022              		.cfi_def_cfa_offset 12
 4023              		.cfi_offset 4, -12
 4024              		.cfi_offset 5, -8
 4025              		.cfi_offset 14, -4
 101:./lib/ros_lib/ros/msg.h ****   {
 102:./lib/ros_lib/ros/msg.h ****     uint32_t* val = (uint32_t*)f;
 103:./lib/ros_lib/ros/msg.h ****     inbuffer += 3;
 104:./lib/ros_lib/ros/msg.h **** 
 105:./lib/ros_lib/ros/msg.h ****     // Copy truncated mantissa.
 106:./lib/ros_lib/ros/msg.h ****     *val = ((uint32_t)(*(inbuffer++)) >> 5 & 0x07);
 4026              		.loc 22 106 0
 4027 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 4028 0004 5B09     		lsrs	r3, r3, #5
 4029 0006 0B60     		str	r3, [r1]
 4030              	.LVL480:
 107:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 4031              		.loc 22 107 0
 4032 0008 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 4033 000a 43EAC203 		orr	r3, r3, r2, lsl #3
 4034 000e 0B60     		str	r3, [r1]
 4035              	.LVL481:
 108:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 4036              		.loc 22 108 0
 4037 0010 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 4038 0012 43EAC222 		orr	r2, r3, r2, lsl #11
 4039 0016 0A60     		str	r2, [r1]
 109:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 4040              		.loc 22 109 0
 4041 0018 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 4042 001a DB04     		lsls	r3, r3, #19
 4043 001c 03F4F003 		and	r3, r3, #7864320
 4044 0020 1343     		orrs	r3, r3, r2
 4045 0022 0B60     		str	r3, [r1]
 4046              	.LVL482:
 110:./lib/ros_lib/ros/msg.h **** 
 111:./lib/ros_lib/ros/msg.h ****     // Copy truncated exponent.
 112:./lib/ros_lib/ros/msg.h ****     uint32_t exp = ((uint32_t)(*(inbuffer++)) & 0xf0)>>4;
 113:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 4047              		.loc 22 113 0
 4048 0024 C479     		ldrb	r4, [r0, #7]	@ zero_extendqisi2
 112:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 4049              		.loc 22 112 0
 4050 0026 8579     		ldrb	r5, [r0, #6]	@ zero_extendqisi2
 4051              	.LVL483:
 4052              		.loc 22 113 0
 4053 0028 2401     		lsls	r4, r4, #4
 4054 002a 04F4FE62 		and	r2, r4, #2032
 4055              	.LVL484:
 114:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 4056              		.loc 22 114 0
 4057 002e 52EA1512 		orrs	r2, r2, r5, lsr #4
 4058              	.LVL485:
 115:./lib/ros_lib/ros/msg.h ****     {
 116:./lib/ros_lib/ros/msg.h ****       *val |= ((exp) - 1023 + 127) << 23;
 4059              		.loc 22 116 0
 4060 0032 1EBF     		ittt	ne
 4061 0034 A2F56072 		subne	r2, r2, #896
 4062              	.LVL486:
 4063 0038 43EAC253 		orrne	r3, r3, r2, lsl #23
 4064 003c 0B60     		strne	r3, [r1]
 4065              	.LVL487:
 117:./lib/ros_lib/ros/msg.h ****     }  
 118:./lib/ros_lib/ros/msg.h **** 
 119:./lib/ros_lib/ros/msg.h ****     // Copy negative sign.
 120:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0x80) << 24;
 4066              		.loc 22 120 0
 4067 003e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 121:./lib/ros_lib/ros/msg.h **** 
 122:./lib/ros_lib/ros/msg.h ****     return 8;
 123:./lib/ros_lib/ros/msg.h ****   }
 4068              		.loc 22 123 0
 4069 0040 0820     		movs	r0, #8
 4070              	.LVL488:
 120:./lib/ros_lib/ros/msg.h **** 
 4071              		.loc 22 120 0
 4072 0042 23F07F02 		bic	r2, r3, #127
 4073 0046 0B68     		ldr	r3, [r1]
 4074 0048 43EA0263 		orr	r3, r3, r2, lsl #24
 4075 004c 0B60     		str	r3, [r1]
 4076              		.loc 22 123 0
 4077 004e 30BD     		pop	{r4, r5, pc}
 4078              		.cfi_endproc
 4079              	.LFE1022:
 4080              		.cantunwind
 4081              		.fnend
 4083              		.section	.text._ZN12roberto_msgs10MotorState11deserializeEPh,"axG",%progbits,_ZN12roberto_msgs10Mo
 4084              		.align	1
 4085              		.weak	_ZN12roberto_msgs10MotorState11deserializeEPh
 4086              		.thumb
 4087              		.thumb_func
 4089              	_ZN12roberto_msgs10MotorState11deserializeEPh:
 4090              		.fnstart
 4091              	.LFB1243:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 4092              		.loc 15 50 0
 4093              		.cfi_startproc
 4094              		@ args = 0, pretend = 0, frame = 0
 4095              		@ frame_needed = 0, uses_anonymous_args = 0
 4096              	.LVL489:
 4097 0000 70B5     		push	{r4, r5, r6, lr}
 4098              	.LCFI38:
 4099              		.cfi_def_cfa_offset 16
 4100              		.cfi_offset 4, -16
 4101              		.cfi_offset 5, -12
 4102              		.cfi_offset 6, -8
 4103              		.cfi_offset 14, -4
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 4104              		.loc 15 50 0
 4105 0002 0546     		mov	r5, r0
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 4106              		.loc 15 53 0
 4107 0004 0430     		adds	r0, r0, #4
 4108              	.LVL490:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 4109              		.loc 15 50 0
 4110 0006 0E46     		mov	r6, r1
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 4111              		.loc 15 53 0
 4112 0008 FFF7FEFF 		bl	_ZN8std_msgs6Header11deserializeEPh
 4113              	.LVL491:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 4114              		.loc 15 54 0
 4115 000c 05F11801 		add	r1, r5, #24
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 4116              		.loc 15 53 0
 4117 0010 0446     		mov	r4, r0
 4118              	.LVL492:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 4119              		.loc 15 54 0
 4120 0012 3018     		adds	r0, r6, r0
 4121              	.LVL493:
 4122 0014 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4123              	.LVL494:
 4124 0018 0444     		add	r4, r4, r0
 4125              	.LVL495:
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
 4126              		.loc 15 55 0
 4127 001a 05F11C01 		add	r1, r5, #28
 4128 001e 3019     		adds	r0, r6, r4
 4129 0020 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4130              	.LVL496:
 4131 0024 0444     		add	r4, r4, r0
 4132              	.LVL497:
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
 4133              		.loc 15 56 0
 4134 0026 05F12001 		add	r1, r5, #32
 4135 002a 3019     		adds	r0, r6, r4
 4136 002c FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4137              	.LVL498:
 4138 0030 0444     		add	r4, r4, r0
 4139              	.LVL499:
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
 4140              		.loc 15 57 0
 4141 0032 05F12401 		add	r1, r5, #36
 4142 0036 3019     		adds	r0, r6, r4
 4143 0038 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4144              	.LVL500:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 4145              		.loc 15 58 0
 4146 003c 2044     		add	r0, r0, r4
 4147              	.LVL501:
 4148 003e 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 4149              		.loc 15 61 0
 4150 0040 0130     		adds	r0, r0, #1
 4151              	.LVL502:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 4152              		.loc 15 58 0
 4153 0042 85F82830 		strb	r3, [r5, #40]
 4154              	.LVL503:
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 4155              		.loc 15 61 0
 4156 0046 70BD     		pop	{r4, r5, r6, pc}
 4157              		.cfi_endproc
 4158              	.LFE1243:
 4159              		.cantunwind
 4160              		.fnend
 4162              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh,"axG",%progbits,_ZN3r
 4163              		.align	1
 4164              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 4165              		.thumb
 4166              		.thumb_func
 4168              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:
 4169              		.fnstart
 4170              	.LFB1384:
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 4171              		.loc 20 72 0
 4172              		.cfi_startproc
 4173              		@ args = 0, pretend = 0, frame = 0
 4174              		@ frame_needed = 0, uses_anonymous_args = 0
 4175              	.LVL504:
 4176 0000 70B5     		push	{r4, r5, r6, lr}
 4177              	.LCFI39:
 4178              		.cfi_def_cfa_offset 16
 4179              		.cfi_offset 4, -16
 4180              		.cfi_offset 5, -12
 4181              		.cfi_offset 6, -8
 4182              		.cfi_offset 14, -4
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 4183              		.loc 20 72 0
 4184 0002 0546     		mov	r5, r0
  73:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 4185              		.loc 20 73 0
 4186 0004 00F10C04 		add	r4, r0, #12
 4187 0008 2046     		mov	r0, r4
 4188              	.LVL505:
 4189 000a FFF7FEFF 		bl	_ZN12roberto_msgs10MotorState11deserializeEPh
 4190              	.LVL506:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 4191              		.loc 20 74 0
 4192 000e AB6B     		ldr	r3, [r5, #56]
 4193 0010 2046     		mov	r0, r4
  75:./lib/ros_lib/ros/subscriber.h **** 
 4194              		.loc 20 75 0
 4195 0012 BDE87040 		pop	{r4, r5, r6, lr}
 4196              	.LCFI40:
 4197              		.cfi_restore 14
 4198              		.cfi_restore 6
 4199              		.cfi_restore 5
 4200              		.cfi_restore 4
 4201              		.cfi_def_cfa_offset 0
 4202              	.LVL507:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 4203              		.loc 20 74 0
 4204 0016 1847     		bx	r3	@ indirect register sibling call
 4205              	.LVL508:
 4206              		.cfi_endproc
 4207              	.LFE1384:
 4208              		.cantunwind
 4209              		.fnend
 4211              		.section	.text._ZN13geometry_msgs10Quaternion11deserializeEPh,"axG",%progbits,_ZN13geometry_msgs10
 4212              		.align	1
 4213              		.weak	_ZN13geometry_msgs10Quaternion11deserializeEPh
 4214              		.thumb
 4215              		.thumb_func
 4217              	_ZN13geometry_msgs10Quaternion11deserializeEPh:
 4218              		.fnstart
 4219              	.LFB1187:
  38:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 4220              		.loc 8 38 0
 4221              		.cfi_startproc
 4222              		@ args = 0, pretend = 0, frame = 0
 4223              		@ frame_needed = 0, uses_anonymous_args = 0
 4224              	.LVL509:
 4225 0000 70B5     		push	{r4, r5, r6, lr}
 4226              	.LCFI41:
 4227              		.cfi_def_cfa_offset 16
 4228              		.cfi_offset 4, -16
 4229              		.cfi_offset 5, -12
 4230              		.cfi_offset 6, -8
 4231              		.cfi_offset 14, -4
  38:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 4232              		.loc 8 38 0
 4233 0002 0D46     		mov	r5, r1
 4234 0004 0646     		mov	r6, r0
  41:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
 4235              		.loc 8 41 0
 4236 0006 011D     		adds	r1, r0, #4
 4237              	.LVL510:
 4238 0008 2846     		mov	r0, r5
 4239              	.LVL511:
 4240 000a FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4241              	.LVL512:
  42:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
 4242              		.loc 8 42 0
 4243 000e 06F10801 		add	r1, r6, #8
  41:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
 4244              		.loc 8 41 0
 4245 0012 0446     		mov	r4, r0
 4246              	.LVL513:
  42:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
 4247              		.loc 8 42 0
 4248 0014 2818     		adds	r0, r5, r0
 4249              	.LVL514:
 4250 0016 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4251              	.LVL515:
 4252 001a 0444     		add	r4, r4, r0
 4253              	.LVL516:
  43:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->w));
 4254              		.loc 8 43 0
 4255 001c 06F10C01 		add	r1, r6, #12
 4256 0020 2819     		adds	r0, r5, r4
 4257 0022 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4258              	.LVL517:
 4259 0026 0444     		add	r4, r4, r0
 4260              	.LVL518:
  44:./lib/ros_lib/geometry_msgs/Quaternion.h ****      return offset;
 4261              		.loc 8 44 0
 4262 0028 06F11001 		add	r1, r6, #16
 4263 002c 2819     		adds	r0, r5, r4
 4264 002e FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4265              	.LVL519:
  46:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
 4266              		.loc 8 46 0
 4267 0032 2044     		add	r0, r0, r4
 4268              	.LVL520:
 4269 0034 70BD     		pop	{r4, r5, r6, pc}
 4270              		.cfi_endproc
 4271              	.LFE1187:
 4272              		.cantunwind
 4273              		.fnend
 4275              		.section	.text._ZN13geometry_msgs7Vector311deserializeEPh,"axG",%progbits,_ZN13geometry_msgs7Vecto
 4276              		.align	1
 4277              		.weak	_ZN13geometry_msgs7Vector311deserializeEPh
 4278              		.thumb
 4279              		.thumb_func
 4281              	_ZN13geometry_msgs7Vector311deserializeEPh:
 4282              		.fnstart
 4283              	.LFB1208:
  35:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
 4284              		.loc 11 35 0
 4285              		.cfi_startproc
 4286              		@ args = 0, pretend = 0, frame = 0
 4287              		@ frame_needed = 0, uses_anonymous_args = 0
 4288              	.LVL521:
 4289 0000 70B5     		push	{r4, r5, r6, lr}
 4290              	.LCFI42:
 4291              		.cfi_def_cfa_offset 16
 4292              		.cfi_offset 4, -16
 4293              		.cfi_offset 5, -12
 4294              		.cfi_offset 6, -8
 4295              		.cfi_offset 14, -4
  35:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
 4296              		.loc 11 35 0
 4297 0002 0D46     		mov	r5, r1
 4298 0004 0646     		mov	r6, r0
  38:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
 4299              		.loc 11 38 0
 4300 0006 011D     		adds	r1, r0, #4
 4301              	.LVL522:
 4302 0008 2846     		mov	r0, r5
 4303              	.LVL523:
 4304 000a FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4305              	.LVL524:
  39:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
 4306              		.loc 11 39 0
 4307 000e 06F10801 		add	r1, r6, #8
  38:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
 4308              		.loc 11 38 0
 4309 0012 0446     		mov	r4, r0
 4310              	.LVL525:
  39:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
 4311              		.loc 11 39 0
 4312 0014 2818     		adds	r0, r5, r0
 4313              	.LVL526:
 4314 0016 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4315              	.LVL527:
 4316 001a 0444     		add	r4, r4, r0
 4317              	.LVL528:
  40:./lib/ros_lib/geometry_msgs/Vector3.h ****      return offset;
 4318              		.loc 11 40 0
 4319 001c 06F10C01 		add	r1, r6, #12
 4320 0020 2819     		adds	r0, r5, r4
 4321 0022 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4322              	.LVL529:
  42:./lib/ros_lib/geometry_msgs/Vector3.h **** 
 4323              		.loc 11 42 0
 4324 0026 2044     		add	r0, r0, r4
 4325              	.LVL530:
 4326 0028 70BD     		pop	{r4, r5, r6, pc}
 4327              		.cfi_endproc
 4328              	.LFE1208:
 4329              		.cantunwind
 4330              		.fnend
 4332              		.section	.text._ZN13geometry_msgs9Transform11deserializeEPh,"axG",%progbits,_ZN13geometry_msgs9Tra
 4333              		.align	1
 4334              		.weak	_ZN13geometry_msgs9Transform11deserializeEPh
 4335              		.thumb
 4336              		.thumb_func
 4338              	_ZN13geometry_msgs9Transform11deserializeEPh:
 4339              		.fnstart
 4340              	.LFB1250:
  34:./lib/ros_lib/geometry_msgs/Transform.h ****     {
 4341              		.loc 16 34 0
 4342              		.cfi_startproc
 4343              		@ args = 0, pretend = 0, frame = 0
 4344              		@ frame_needed = 0, uses_anonymous_args = 0
 4345              	.LVL531:
 4346 0000 70B5     		push	{r4, r5, r6, lr}
 4347              	.LCFI43:
 4348              		.cfi_def_cfa_offset 16
 4349              		.cfi_offset 4, -16
 4350              		.cfi_offset 5, -12
 4351              		.cfi_offset 6, -8
 4352              		.cfi_offset 14, -4
  34:./lib/ros_lib/geometry_msgs/Transform.h ****     {
 4353              		.loc 16 34 0
 4354 0002 0546     		mov	r5, r0
  37:./lib/ros_lib/geometry_msgs/Transform.h ****       offset += this->rotation.deserialize(inbuffer + offset);
 4355              		.loc 16 37 0
 4356 0004 0430     		adds	r0, r0, #4
 4357              	.LVL532:
  34:./lib/ros_lib/geometry_msgs/Transform.h ****     {
 4358              		.loc 16 34 0
 4359 0006 0E46     		mov	r6, r1
  37:./lib/ros_lib/geometry_msgs/Transform.h ****       offset += this->rotation.deserialize(inbuffer + offset);
 4360              		.loc 16 37 0
 4361 0008 FFF7FEFF 		bl	_ZN13geometry_msgs7Vector311deserializeEPh
 4362              	.LVL533:
 4363 000c 0446     		mov	r4, r0
 4364              	.LVL534:
  38:./lib/ros_lib/geometry_msgs/Transform.h ****      return offset;
 4365              		.loc 16 38 0
 4366 000e 3118     		adds	r1, r6, r0
 4367 0010 05F11400 		add	r0, r5, #20
 4368              	.LVL535:
 4369 0014 FFF7FEFF 		bl	_ZN13geometry_msgs10Quaternion11deserializeEPh
 4370              	.LVL536:
  40:./lib/ros_lib/geometry_msgs/Transform.h **** 
 4371              		.loc 16 40 0
 4372 0018 2044     		add	r0, r0, r4
 4373              	.LVL537:
 4374 001a 70BD     		pop	{r4, r5, r6, pc}
 4375              		.cfi_endproc
 4376              	.LFE1250:
 4377              		.cantunwind
 4378              		.fnend
 4380              		.section	.text._ZN13geometry_msgs16TransformStamped11deserializeEPh,"axG",%progbits,_ZN13geometry_
 4381              		.align	1
 4382              		.weak	_ZN13geometry_msgs16TransformStamped11deserializeEPh
 4383              		.thumb
 4384              		.thumb_func
 4386              	_ZN13geometry_msgs16TransformStamped11deserializeEPh:
 4387              		.fnstart
 4388              	.LFB1257:
  41:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 4389              		.loc 17 41 0
 4390              		.cfi_startproc
 4391              		@ args = 0, pretend = 0, frame = 8
 4392              		@ frame_needed = 0, uses_anonymous_args = 0
 4393              	.LVL538:
 4394 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 4395              	.LCFI44:
 4396              		.cfi_def_cfa_offset 24
 4397              		.cfi_offset 4, -16
 4398              		.cfi_offset 5, -12
 4399              		.cfi_offset 6, -8
 4400              		.cfi_offset 14, -4
  41:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 4401              		.loc 17 41 0
 4402 0002 0646     		mov	r6, r0
  44:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       uint32_t length_child_frame_id;
 4403              		.loc 17 44 0
 4404 0004 0430     		adds	r0, r0, #4
 4405              	.LVL539:
  41:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 4406              		.loc 17 41 0
 4407 0006 0D46     		mov	r5, r1
  44:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       uint32_t length_child_frame_id;
 4408              		.loc 17 44 0
 4409 0008 FFF7FEFF 		bl	_ZN8std_msgs6Header11deserializeEPh
 4410              	.LVL540:
 4411 000c 0346     		mov	r3, r0
 4412              	.LVL541:
  46:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += 4;
 4413              		.loc 17 46 0
 4414 000e 2858     		ldr	r0, [r5, r0]	@ unaligned
 4415              	.LVL542:
 4416 0010 0190     		str	r0, [sp, #4]	@ unaligned
 4417              	.LVL543:
 4418              	.LBB379:
  48:./lib/ros_lib/geometry_msgs/TransformStamped.h ****           inbuffer[k-1]=inbuffer[k];
 4419              		.loc 17 48 0
 4420 0012 019C     		ldr	r4, [sp, #4]
 4421 0014 181D     		adds	r0, r3, #4
 4422              	.LVL544:
 4423 0016 0444     		add	r4, r4, r0
 4424 0018 2B18     		adds	r3, r5, r0
 4425              	.LVL545:
 4426              	.L243:
  48:./lib/ros_lib/geometry_msgs/TransformStamped.h ****           inbuffer[k-1]=inbuffer[k];
 4427              		.loc 17 48 0 is_stmt 0 discriminator 3
 4428 001a 5A1B     		subs	r2, r3, r5
 4429              	.LVL546:
 4430 001c 9442     		cmp	r4, r2
 4431 001e 04D9     		bls	.L242
  49:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       }
 4432              		.loc 17 49 0 is_stmt 1 discriminator 2
 4433 0020 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 4434              	.LVL547:
 4435 0024 03F8022C 		strb	r2, [r3, #-2]
 4436              	.LVL548:
  48:./lib/ros_lib/geometry_msgs/TransformStamped.h ****           inbuffer[k-1]=inbuffer[k];
 4437              		.loc 17 48 0 discriminator 2
 4438 0028 F7E7     		b	.L243
 4439              	.LVL549:
 4440              	.L242:
 4441              	.LBE379:
  52:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += length_child_frame_id;
 4442              		.loc 17 52 0
 4443 002a 0138     		subs	r0, r0, #1
 4444              	.LVL550:
  51:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       this->child_frame_id = (char *)(inbuffer + offset-1);
 4445              		.loc 17 51 0
 4446 002c 2919     		adds	r1, r5, r4
 4447 002e 0023     		movs	r3, #0
  52:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += length_child_frame_id;
 4448              		.loc 17 52 0
 4449 0030 2844     		add	r0, r0, r5
 4450              	.LVL551:
  51:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       this->child_frame_id = (char *)(inbuffer + offset-1);
 4451              		.loc 17 51 0
 4452 0032 01F8013C 		strb	r3, [r1, #-1]
  52:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += length_child_frame_id;
 4453              		.loc 17 52 0
 4454 0036 B061     		str	r0, [r6, #24]
 4455              	.LVL552:
  54:./lib/ros_lib/geometry_msgs/TransformStamped.h ****      return offset;
 4456              		.loc 17 54 0
 4457 0038 06F11C00 		add	r0, r6, #28
 4458 003c FFF7FEFF 		bl	_ZN13geometry_msgs9Transform11deserializeEPh
 4459              	.LVL553:
  56:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
 4460              		.loc 17 56 0
 4461 0040 2044     		add	r0, r0, r4
 4462              	.LVL554:
 4463 0042 02B0     		add	sp, sp, #8
 4464              	.LCFI45:
 4465              		.cfi_def_cfa_offset 16
 4466              		@ sp needed
 4467 0044 70BD     		pop	{r4, r5, r6, pc}
 4468              		.cfi_endproc
 4469              	.LFE1257:
 4470              		.cantunwind
 4471              		.fnend
 4473              		.section	.text._ZN2tf9tfMessage11deserializeEPh,"axG",%progbits,_ZN2tf9tfMessage11deserializeEPh,c
 4474              		.align	1
 4475              		.weak	_ZN2tf9tfMessage11deserializeEPh
 4476              		.thumb
 4477              		.thumb_func
 4479              	_ZN2tf9tfMessage11deserializeEPh:
 4480              		.fnstart
 4481              	.LFB1271:
  38:./lib/ros_lib/tf/tfMessage.h ****     {
 4482              		.loc 18 38 0
 4483              		.cfi_startproc
 4484              		@ args = 0, pretend = 0, frame = 0
 4485              		@ frame_needed = 0, uses_anonymous_args = 0
 4486              	.LVL555:
 4487 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4488              	.LCFI46:
 4489              		.cfi_def_cfa_offset 32
 4490              		.cfi_offset 4, -32
 4491              		.cfi_offset 5, -28
 4492              		.cfi_offset 6, -24
 4493              		.cfi_offset 7, -20
 4494              		.cfi_offset 8, -16
 4495              		.cfi_offset 9, -12
 4496              		.cfi_offset 10, -8
 4497              		.cfi_offset 14, -4
  41:./lib/ros_lib/tf/tfMessage.h ****       if(transforms_lengthT > transforms_length)
 4498              		.loc 18 41 0
 4499 0004 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 4500              	.LVL556:
  42:./lib/ros_lib/tf/tfMessage.h ****         this->transforms = (geometry_msgs::TransformStamped*)realloc(this->transforms, transforms_l
 4501              		.loc 18 42 0
 4502 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  38:./lib/ros_lib/tf/tfMessage.h ****     {
 4503              		.loc 18 38 0
 4504 0008 0446     		mov	r4, r0
  42:./lib/ros_lib/tf/tfMessage.h ****         this->transforms = (geometry_msgs::TransformStamped*)realloc(this->transforms, transforms_l
 4505              		.loc 18 42 0
 4506 000a AB42     		cmp	r3, r5
  38:./lib/ros_lib/tf/tfMessage.h ****     {
 4507              		.loc 18 38 0
 4508 000c 8846     		mov	r8, r1
  42:./lib/ros_lib/tf/tfMessage.h ****         this->transforms = (geometry_msgs::TransformStamped*)realloc(this->transforms, transforms_l
 4509              		.loc 18 42 0
 4510 000e 05D2     		bcs	.L246
  43:./lib/ros_lib/tf/tfMessage.h ****       offset += 3;
 4511              		.loc 18 43 0
 4512 0010 4421     		movs	r1, #68
 4513              	.LVL557:
 4514 0012 6943     		muls	r1, r5, r1
 4515 0014 C06C     		ldr	r0, [r0, #76]
 4516              	.LVL558:
 4517 0016 FFF7FEFF 		bl	realloc
 4518              	.LVL559:
 4519 001a E064     		str	r0, [r4, #76]
 4520              	.L246:
 4521              	.LVL560:
  45:./lib/ros_lib/tf/tfMessage.h ****       for( uint8_t i = 0; i < transforms_length; i++){
 4522              		.loc 18 45 0
 4523 001c 2571     		strb	r5, [r4, #4]
 4524              	.LVL561:
 4525 001e 0020     		movs	r0, #0
  44:./lib/ros_lib/tf/tfMessage.h ****       transforms_length = transforms_lengthT;
 4526              		.loc 18 44 0
 4527 0020 0426     		movs	r6, #4
 4528              	.LBB380:
  47:./lib/ros_lib/tf/tfMessage.h ****         memcpy( &(this->transforms[i]), &(this->st_transforms), sizeof(geometry_msgs::TransformStam
 4529              		.loc 18 47 0
 4530 0022 04F10807 		add	r7, r4, #8
  48:./lib/ros_lib/tf/tfMessage.h ****       }
 4531              		.loc 18 48 0
 4532 0026 4FF0440A 		mov	r10, #68
 4533              	.LVL562:
 4534              	.L248:
  46:./lib/ros_lib/tf/tfMessage.h ****       offset += this->st_transforms.deserialize(inbuffer + offset);
 4535              		.loc 18 46 0 discriminator 3
 4536 002a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4537 002c C5B2     		uxtb	r5, r0
 4538 002e AB42     		cmp	r3, r5
 4539 0030 00F10109 		add	r9, r0, #1
 4540 0034 0ED9     		bls	.L247
  47:./lib/ros_lib/tf/tfMessage.h ****         memcpy( &(this->transforms[i]), &(this->st_transforms), sizeof(geometry_msgs::TransformStam
 4541              		.loc 18 47 0 discriminator 2
 4542 0036 08EB0601 		add	r1, r8, r6
 4543 003a 3846     		mov	r0, r7
 4544              	.LVL563:
 4545 003c FFF7FEFF 		bl	_ZN13geometry_msgs16TransformStamped11deserializeEPh
 4546              	.LVL564:
 4547 0040 0644     		add	r6, r6, r0
 4548              	.LVL565:
  48:./lib/ros_lib/tf/tfMessage.h ****       }
 4549              		.loc 18 48 0 discriminator 2
 4550 0042 E06C     		ldr	r0, [r4, #76]
 4551 0044 4422     		movs	r2, #68
 4552 0046 3946     		mov	r1, r7
 4553 0048 0AFB0500 		mla	r0, r10, r5, r0
 4554 004c FFF7FEFF 		bl	memcpy
 4555              	.LVL566:
  46:./lib/ros_lib/tf/tfMessage.h ****       offset += this->st_transforms.deserialize(inbuffer + offset);
 4556              		.loc 18 46 0 discriminator 2
 4557 0050 4846     		mov	r0, r9
 4558 0052 EAE7     		b	.L248
 4559              	.LVL567:
 4560              	.L247:
 4561              	.LBE380:
  51:./lib/ros_lib/tf/tfMessage.h **** 
 4562              		.loc 18 51 0
 4563 0054 3046     		mov	r0, r6
 4564              	.LVL568:
 4565 0056 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4566              		.cfi_endproc
 4567              	.LFE1271:
 4568              		.cantunwind
 4569              		.fnend
 4571              		.section	.text._ZN13geometry_msgs5Twist11deserializeEPh,"axG",%progbits,_ZN13geometry_msgs5Twist11
 4572              		.align	1
 4573              		.weak	_ZN13geometry_msgs5Twist11deserializeEPh
 4574              		.thumb
 4575              		.thumb_func
 4577              	_ZN13geometry_msgs5Twist11deserializeEPh:
 4578              		.fnstart
 4579              	.LFB1215:
  33:./lib/ros_lib/geometry_msgs/Twist.h ****     {
 4580              		.loc 12 33 0
 4581              		.cfi_startproc
 4582              		@ args = 0, pretend = 0, frame = 0
 4583              		@ frame_needed = 0, uses_anonymous_args = 0
 4584              	.LVL569:
 4585 0000 70B5     		push	{r4, r5, r6, lr}
 4586              	.LCFI47:
 4587              		.cfi_def_cfa_offset 16
 4588              		.cfi_offset 4, -16
 4589              		.cfi_offset 5, -12
 4590              		.cfi_offset 6, -8
 4591              		.cfi_offset 14, -4
  33:./lib/ros_lib/geometry_msgs/Twist.h ****     {
 4592              		.loc 12 33 0
 4593 0002 0546     		mov	r5, r0
  36:./lib/ros_lib/geometry_msgs/Twist.h ****       offset += this->angular.deserialize(inbuffer + offset);
 4594              		.loc 12 36 0
 4595 0004 0430     		adds	r0, r0, #4
 4596              	.LVL570:
  33:./lib/ros_lib/geometry_msgs/Twist.h ****     {
 4597              		.loc 12 33 0
 4598 0006 0E46     		mov	r6, r1
  36:./lib/ros_lib/geometry_msgs/Twist.h ****       offset += this->angular.deserialize(inbuffer + offset);
 4599              		.loc 12 36 0
 4600 0008 FFF7FEFF 		bl	_ZN13geometry_msgs7Vector311deserializeEPh
 4601              	.LVL571:
 4602 000c 0446     		mov	r4, r0
 4603              	.LVL572:
  37:./lib/ros_lib/geometry_msgs/Twist.h ****      return offset;
 4604              		.loc 12 37 0
 4605 000e 3118     		adds	r1, r6, r0
 4606 0010 05F11400 		add	r0, r5, #20
 4607              	.LVL573:
 4608 0014 FFF7FEFF 		bl	_ZN13geometry_msgs7Vector311deserializeEPh
 4609              	.LVL574:
  39:./lib/ros_lib/geometry_msgs/Twist.h **** 
 4610              		.loc 12 39 0
 4611 0018 2044     		add	r0, r0, r4
 4612              	.LVL575:
 4613 001a 70BD     		pop	{r4, r5, r6, pc}
 4614              		.cfi_endproc
 4615              	.LFE1215:
 4616              		.cantunwind
 4617              		.fnend
 4619              		.section	.text._ZN13geometry_msgs5Point11deserializeEPh,"axG",%progbits,_ZN13geometry_msgs5Point11
 4620              		.align	1
 4621              		.weak	_ZN13geometry_msgs5Point11deserializeEPh
 4622              		.thumb
 4623              		.thumb_func
 4625              	_ZN13geometry_msgs5Point11deserializeEPh:
 4626              		.fnstart
 4627              	.LFB1180:
  35:./lib/ros_lib/geometry_msgs/Point.h ****     {
 4628              		.loc 7 35 0
 4629              		.cfi_startproc
 4630              		@ args = 0, pretend = 0, frame = 0
 4631              		@ frame_needed = 0, uses_anonymous_args = 0
 4632              	.LVL576:
 4633 0000 70B5     		push	{r4, r5, r6, lr}
 4634              	.LCFI48:
 4635              		.cfi_def_cfa_offset 16
 4636              		.cfi_offset 4, -16
 4637              		.cfi_offset 5, -12
 4638              		.cfi_offset 6, -8
 4639              		.cfi_offset 14, -4
  35:./lib/ros_lib/geometry_msgs/Point.h ****     {
 4640              		.loc 7 35 0
 4641 0002 0D46     		mov	r5, r1
 4642 0004 0646     		mov	r6, r0
  38:./lib/ros_lib/geometry_msgs/Point.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
 4643              		.loc 7 38 0
 4644 0006 011D     		adds	r1, r0, #4
 4645              	.LVL577:
 4646 0008 2846     		mov	r0, r5
 4647              	.LVL578:
 4648 000a FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4649              	.LVL579:
  39:./lib/ros_lib/geometry_msgs/Point.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
 4650              		.loc 7 39 0
 4651 000e 06F10801 		add	r1, r6, #8
  38:./lib/ros_lib/geometry_msgs/Point.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
 4652              		.loc 7 38 0
 4653 0012 0446     		mov	r4, r0
 4654              	.LVL580:
  39:./lib/ros_lib/geometry_msgs/Point.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
 4655              		.loc 7 39 0
 4656 0014 2818     		adds	r0, r5, r0
 4657              	.LVL581:
 4658 0016 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4659              	.LVL582:
 4660 001a 0444     		add	r4, r4, r0
 4661              	.LVL583:
  40:./lib/ros_lib/geometry_msgs/Point.h ****      return offset;
 4662              		.loc 7 40 0
 4663 001c 06F10C01 		add	r1, r6, #12
 4664 0020 2819     		adds	r0, r5, r4
 4665 0022 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4666              	.LVL584:
  42:./lib/ros_lib/geometry_msgs/Point.h **** 
 4667              		.loc 7 42 0
 4668 0026 2044     		add	r0, r0, r4
 4669              	.LVL585:
 4670 0028 70BD     		pop	{r4, r5, r6, pc}
 4671              		.cfi_endproc
 4672              	.LFE1180:
 4673              		.cantunwind
 4674              		.fnend
 4676              		.section	.text._ZN13geometry_msgs4Pose11deserializeEPh,"axG",%progbits,_ZN13geometry_msgs4Pose11de
 4677              		.align	1
 4678              		.weak	_ZN13geometry_msgs4Pose11deserializeEPh
 4679              		.thumb
 4680              		.thumb_func
 4682              	_ZN13geometry_msgs4Pose11deserializeEPh:
 4683              		.fnstart
 4684              	.LFB1194:
  34:./lib/ros_lib/geometry_msgs/Pose.h ****     {
 4685              		.loc 9 34 0
 4686              		.cfi_startproc
 4687              		@ args = 0, pretend = 0, frame = 0
 4688              		@ frame_needed = 0, uses_anonymous_args = 0
 4689              	.LVL586:
 4690 0000 70B5     		push	{r4, r5, r6, lr}
 4691              	.LCFI49:
 4692              		.cfi_def_cfa_offset 16
 4693              		.cfi_offset 4, -16
 4694              		.cfi_offset 5, -12
 4695              		.cfi_offset 6, -8
 4696              		.cfi_offset 14, -4
  34:./lib/ros_lib/geometry_msgs/Pose.h ****     {
 4697              		.loc 9 34 0
 4698 0002 0546     		mov	r5, r0
  37:./lib/ros_lib/geometry_msgs/Pose.h ****       offset += this->orientation.deserialize(inbuffer + offset);
 4699              		.loc 9 37 0
 4700 0004 0430     		adds	r0, r0, #4
 4701              	.LVL587:
  34:./lib/ros_lib/geometry_msgs/Pose.h ****     {
 4702              		.loc 9 34 0
 4703 0006 0E46     		mov	r6, r1
  37:./lib/ros_lib/geometry_msgs/Pose.h ****       offset += this->orientation.deserialize(inbuffer + offset);
 4704              		.loc 9 37 0
 4705 0008 FFF7FEFF 		bl	_ZN13geometry_msgs5Point11deserializeEPh
 4706              	.LVL588:
 4707 000c 0446     		mov	r4, r0
 4708              	.LVL589:
  38:./lib/ros_lib/geometry_msgs/Pose.h ****      return offset;
 4709              		.loc 9 38 0
 4710 000e 3118     		adds	r1, r6, r0
 4711 0010 05F11400 		add	r0, r5, #20
 4712              	.LVL590:
 4713 0014 FFF7FEFF 		bl	_ZN13geometry_msgs10Quaternion11deserializeEPh
 4714              	.LVL591:
  40:./lib/ros_lib/geometry_msgs/Pose.h **** 
 4715              		.loc 9 40 0
 4716 0018 2044     		add	r0, r0, r4
 4717              	.LVL592:
 4718 001a 70BD     		pop	{r4, r5, r6, pc}
 4719              		.cfi_endproc
 4720              	.LFE1194:
 4721              		.cantunwind
 4722              		.fnend
 4724              		.section	.text._ZN13geometry_msgs18PoseWithCovariance11deserializeEPh,"axG",%progbits,_ZN13geometr
 4725              		.align	1
 4726              		.weak	_ZN13geometry_msgs18PoseWithCovariance11deserializeEPh
 4727              		.thumb
 4728              		.thumb_func
 4730              	_ZN13geometry_msgs18PoseWithCovariance11deserializeEPh:
 4731              		.fnstart
 4732              	.LFB1201:
  35:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 4733              		.loc 10 35 0
 4734              		.cfi_startproc
 4735              		@ args = 0, pretend = 0, frame = 0
 4736              		@ frame_needed = 0, uses_anonymous_args = 0
 4737              	.LVL593:
 4738 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4739              	.LCFI50:
 4740              		.cfi_def_cfa_offset 24
 4741              		.cfi_offset 3, -24
 4742              		.cfi_offset 4, -20
 4743              		.cfi_offset 5, -16
 4744              		.cfi_offset 6, -12
 4745              		.cfi_offset 7, -8
 4746              		.cfi_offset 14, -4
  35:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 4747              		.loc 10 35 0
 4748 0002 0446     		mov	r4, r0
  38:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
 4749              		.loc 10 38 0
 4750 0004 0430     		adds	r0, r0, #4
 4751              	.LVL594:
  35:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 4752              		.loc 10 35 0
 4753 0006 0F46     		mov	r7, r1
  38:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
 4754              		.loc 10 38 0
 4755 0008 FFF7FEFF 		bl	_ZN13geometry_msgs4Pose11deserializeEPh
 4756              	.LVL595:
 4757 000c 0546     		mov	r5, r0
 4758              	.LVL596:
 4759 000e 04F12C06 		add	r6, r4, #44
 4760 0012 BC34     		adds	r4, r4, #188
 4761              	.LVL597:
 4762              	.L253:
 4763              	.LBB381:
  40:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       }
 4764              		.loc 10 40 0 discriminator 2
 4765 0014 3146     		mov	r1, r6
 4766 0016 7819     		adds	r0, r7, r5
 4767 0018 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4768              	.LVL598:
 4769 001c 0436     		adds	r6, r6, #4
  39:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->covariance[i]));
 4770              		.loc 10 39 0 discriminator 2
 4771 001e A642     		cmp	r6, r4
  40:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       }
 4772              		.loc 10 40 0 discriminator 2
 4773 0020 0544     		add	r5, r5, r0
 4774              	.LVL599:
  39:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->covariance[i]));
 4775              		.loc 10 39 0 discriminator 2
 4776 0022 F7D1     		bne	.L253
 4777              	.LBE381:
  43:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
 4778              		.loc 10 43 0
 4779 0024 2846     		mov	r0, r5
 4780 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4781              		.cfi_endproc
 4782              	.LFE1201:
 4783              		.cantunwind
 4784              		.fnend
 4786              		.section	.text._ZN13geometry_msgs19TwistWithCovariance11deserializeEPh,"axG",%progbits,_ZN13geomet
 4787              		.align	1
 4788              		.weak	_ZN13geometry_msgs19TwistWithCovariance11deserializeEPh
 4789              		.thumb
 4790              		.thumb_func
 4792              	_ZN13geometry_msgs19TwistWithCovariance11deserializeEPh:
 4793              		.fnstart
 4794              	.LFB1222:
  35:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 4795              		.loc 13 35 0
 4796              		.cfi_startproc
 4797              		@ args = 0, pretend = 0, frame = 0
 4798              		@ frame_needed = 0, uses_anonymous_args = 0
 4799              	.LVL600:
 4800 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4801              	.LCFI51:
 4802              		.cfi_def_cfa_offset 24
 4803              		.cfi_offset 3, -24
 4804              		.cfi_offset 4, -20
 4805              		.cfi_offset 5, -16
 4806              		.cfi_offset 6, -12
 4807              		.cfi_offset 7, -8
 4808              		.cfi_offset 14, -4
  35:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 4809              		.loc 13 35 0
 4810 0002 0446     		mov	r4, r0
  38:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
 4811              		.loc 13 38 0
 4812 0004 0430     		adds	r0, r0, #4
 4813              	.LVL601:
  35:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 4814              		.loc 13 35 0
 4815 0006 0F46     		mov	r7, r1
  38:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
 4816              		.loc 13 38 0
 4817 0008 FFF7FEFF 		bl	_ZN13geometry_msgs5Twist11deserializeEPh
 4818              	.LVL602:
 4819 000c 0546     		mov	r5, r0
 4820              	.LVL603:
 4821 000e 04F12806 		add	r6, r4, #40
 4822 0012 B834     		adds	r4, r4, #184
 4823              	.LVL604:
 4824              	.L256:
 4825              	.LBB382:
  40:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       }
 4826              		.loc 13 40 0 discriminator 2
 4827 0014 3146     		mov	r1, r6
 4828 0016 7819     		adds	r0, r7, r5
 4829 0018 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4830              	.LVL605:
 4831 001c 0436     		adds	r6, r6, #4
  39:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->covariance[i]));
 4832              		.loc 13 39 0 discriminator 2
 4833 001e A642     		cmp	r6, r4
  40:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       }
 4834              		.loc 13 40 0 discriminator 2
 4835 0020 0544     		add	r5, r5, r0
 4836              	.LVL606:
  39:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->covariance[i]));
 4837              		.loc 13 39 0 discriminator 2
 4838 0022 F7D1     		bne	.L256
 4839              	.LBE382:
  43:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
 4840              		.loc 13 43 0
 4841 0024 2846     		mov	r0, r5
 4842 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4843              		.cfi_endproc
 4844              	.LFE1222:
 4845              		.cantunwind
 4846              		.fnend
 4848              		.section	.text._ZN8nav_msgs8Odometry11deserializeEPh,"axG",%progbits,_ZN8nav_msgs8Odometry11deseri
 4849              		.align	1
 4850              		.weak	_ZN8nav_msgs8Odometry11deserializeEPh
 4851              		.thumb
 4852              		.thumb_func
 4854              	_ZN8nav_msgs8Odometry11deserializeEPh:
 4855              		.fnstart
 4856              	.LFB1229:
  45:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 4857              		.loc 14 45 0
 4858              		.cfi_startproc
 4859              		@ args = 0, pretend = 0, frame = 8
 4860              		@ frame_needed = 0, uses_anonymous_args = 0
 4861              	.LVL607:
 4862 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 4863              	.LCFI52:
 4864              		.cfi_def_cfa_offset 24
 4865              		.cfi_offset 4, -16
 4866              		.cfi_offset 5, -12
 4867              		.cfi_offset 6, -8
 4868              		.cfi_offset 14, -4
  45:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 4869              		.loc 14 45 0
 4870 0002 0646     		mov	r6, r0
  48:./lib/ros_lib/nav_msgs/Odometry.h ****       uint32_t length_child_frame_id;
 4871              		.loc 14 48 0
 4872 0004 0430     		adds	r0, r0, #4
 4873              	.LVL608:
  45:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 4874              		.loc 14 45 0
 4875 0006 0D46     		mov	r5, r1
  48:./lib/ros_lib/nav_msgs/Odometry.h ****       uint32_t length_child_frame_id;
 4876              		.loc 14 48 0
 4877 0008 FFF7FEFF 		bl	_ZN8std_msgs6Header11deserializeEPh
 4878              	.LVL609:
 4879 000c 0346     		mov	r3, r0
 4880              	.LVL610:
  50:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += 4;
 4881              		.loc 14 50 0
 4882 000e 2858     		ldr	r0, [r5, r0]	@ unaligned
 4883              	.LVL611:
 4884 0010 0190     		str	r0, [sp, #4]	@ unaligned
 4885              	.LVL612:
 4886              	.LBB383:
  52:./lib/ros_lib/nav_msgs/Odometry.h ****           inbuffer[k-1]=inbuffer[k];
 4887              		.loc 14 52 0
 4888 0012 019C     		ldr	r4, [sp, #4]
 4889 0014 181D     		adds	r0, r3, #4
 4890              	.LVL613:
 4891 0016 0444     		add	r4, r4, r0
 4892 0018 2B18     		adds	r3, r5, r0
 4893              	.LVL614:
 4894              	.L260:
  52:./lib/ros_lib/nav_msgs/Odometry.h ****           inbuffer[k-1]=inbuffer[k];
 4895              		.loc 14 52 0 is_stmt 0 discriminator 3
 4896 001a 5A1B     		subs	r2, r3, r5
 4897              	.LVL615:
 4898 001c 9442     		cmp	r4, r2
 4899 001e 04D9     		bls	.L259
  53:./lib/ros_lib/nav_msgs/Odometry.h ****       }
 4900              		.loc 14 53 0 is_stmt 1 discriminator 2
 4901 0020 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 4902              	.LVL616:
 4903 0024 03F8022C 		strb	r2, [r3, #-2]
 4904              	.LVL617:
  52:./lib/ros_lib/nav_msgs/Odometry.h ****           inbuffer[k-1]=inbuffer[k];
 4905              		.loc 14 52 0 discriminator 2
 4906 0028 F7E7     		b	.L260
 4907              	.LVL618:
 4908              	.L259:
 4909              	.LBE383:
  56:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += length_child_frame_id;
 4910              		.loc 14 56 0
 4911 002a 0138     		subs	r0, r0, #1
 4912              	.LVL619:
  55:./lib/ros_lib/nav_msgs/Odometry.h ****       this->child_frame_id = (char *)(inbuffer + offset-1);
 4913              		.loc 14 55 0
 4914 002c 2919     		adds	r1, r5, r4
 4915 002e 0023     		movs	r3, #0
  56:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += length_child_frame_id;
 4916              		.loc 14 56 0
 4917 0030 2844     		add	r0, r0, r5
 4918              	.LVL620:
  55:./lib/ros_lib/nav_msgs/Odometry.h ****       this->child_frame_id = (char *)(inbuffer + offset-1);
 4919              		.loc 14 55 0
 4920 0032 01F8013C 		strb	r3, [r1, #-1]
  56:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += length_child_frame_id;
 4921              		.loc 14 56 0
 4922 0036 B061     		str	r0, [r6, #24]
 4923              	.LVL621:
  58:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->twist.deserialize(inbuffer + offset);
 4924              		.loc 14 58 0
 4925 0038 06F11C00 		add	r0, r6, #28
 4926 003c FFF7FEFF 		bl	_ZN13geometry_msgs18PoseWithCovariance11deserializeEPh
 4927              	.LVL622:
 4928 0040 0444     		add	r4, r4, r0
 4929              	.LVL623:
  59:./lib/ros_lib/nav_msgs/Odometry.h ****      return offset;
 4930              		.loc 14 59 0
 4931 0042 2919     		adds	r1, r5, r4
 4932 0044 06F1D800 		add	r0, r6, #216
 4933 0048 FFF7FEFF 		bl	_ZN13geometry_msgs19TwistWithCovariance11deserializeEPh
 4934              	.LVL624:
  61:./lib/ros_lib/nav_msgs/Odometry.h **** 
 4935              		.loc 14 61 0
 4936 004c 2044     		add	r0, r0, r4
 4937              	.LVL625:
 4938 004e 02B0     		add	sp, sp, #8
 4939              	.LCFI53:
 4940              		.cfi_def_cfa_offset 16
 4941              		@ sp needed
 4942 0050 70BD     		pop	{r4, r5, r6, pc}
 4943              		.cfi_endproc
 4944              	.LFE1229:
 4945              		.cantunwind
 4946              		.fnend
 4948              		.section	.text._ZN3ros9Publisher7publishEPKNS_3MsgE,"axG",%progbits,_ZN3ros9Publisher7publishEPKNS
 4949              		.align	1
 4950              		.weak	_ZN3ros9Publisher7publishEPKNS_3MsgE
 4951              		.thumb
 4952              		.thumb_func
 4954              	_ZN3ros9Publisher7publishEPKNS_3MsgE:
 4955              		.fnstart
 4956              	.LFB1081:
 4957              		.file 23 "./lib/ros_lib/ros/publisher.h"
   1:./lib/ros_lib/ros/publisher.h **** /* 
   2:./lib/ros_lib/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/publisher.h ****  *
   4:./lib/ros_lib/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/publisher.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/publisher.h ****  *
   7:./lib/ros_lib/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/publisher.h ****  * are met:
  10:./lib/ros_lib/ros/publisher.h ****  *
  11:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/publisher.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/publisher.h ****  *
  21:./lib/ros_lib/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/publisher.h ****  */
  34:./lib/ros_lib/ros/publisher.h **** 
  35:./lib/ros_lib/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:./lib/ros_lib/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:./lib/ros_lib/ros/publisher.h **** 
  38:./lib/ros_lib/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/publisher.h **** #include "node_handle.h"
  40:./lib/ros_lib/ros/publisher.h **** 
  41:./lib/ros_lib/ros/publisher.h **** namespace ros {
  42:./lib/ros_lib/ros/publisher.h **** 
  43:./lib/ros_lib/ros/publisher.h ****   /* Generic Publisher */
  44:./lib/ros_lib/ros/publisher.h ****   class Publisher
  45:./lib/ros_lib/ros/publisher.h ****   {
  46:./lib/ros_lib/ros/publisher.h ****     public:
  47:./lib/ros_lib/ros/publisher.h ****       Publisher( const char * topic_name, Msg * msg, int endpoint=rosserial_msgs::TopicInfo::ID_PUB
  48:./lib/ros_lib/ros/publisher.h ****         topic_(topic_name), 
  49:./lib/ros_lib/ros/publisher.h ****         msg_(msg),
  50:./lib/ros_lib/ros/publisher.h ****         endpoint_(endpoint) {};
  51:./lib/ros_lib/ros/publisher.h **** 
  52:./lib/ros_lib/ros/publisher.h ****       int publish( const Msg * msg ) { return nh_->publish(id_, msg); };
 4958              		.loc 23 52 0
 4959              		.cfi_startproc
 4960              		@ args = 0, pretend = 0, frame = 0
 4961              		@ frame_needed = 0, uses_anonymous_args = 0
 4962              		@ link register save eliminated.
 4963              	.LVL626:
 4964 0000 C368     		ldr	r3, [r0, #12]
 4965 0002 10B4     		push	{r4}
 4966              	.LCFI54:
 4967              		.cfi_def_cfa_offset 4
 4968              		.cfi_offset 4, -4
 4969              		.loc 23 52 0
 4970 0004 1A68     		ldr	r2, [r3]
 4971 0006 1468     		ldr	r4, [r2]
 4972 0008 0A46     		mov	r2, r1
 4973 000a 8168     		ldr	r1, [r0, #8]
 4974              	.LVL627:
 4975 000c 1846     		mov	r0, r3
 4976              	.LVL628:
 4977 000e 2346     		mov	r3, r4
 4978 0010 10BC     		pop	{r4}
 4979              	.LCFI55:
 4980              		.cfi_restore 4
 4981              		.cfi_def_cfa_offset 0
 4982 0012 1847     		bx	r3
 4983              	.LVL629:
 4984              		.cfi_endproc
 4985              	.LFE1081:
 4986              		.cantunwind
 4987              		.fnend
 4989              		.section	.text._ZN15ArduinoHardware4initEv,"axG",%progbits,_ZN15ArduinoHardware4initEv,comdat
 4990              		.align	1
 4991              		.weak	_ZN15ArduinoHardware4initEv
 4992              		.thumb
 4993              		.thumb_func
 4995              	_ZN15ArduinoHardware4initEv:
 4996              		.fnstart
 4997              	.LFB1136:
 4998              		.file 24 "./lib/ros_lib/ArduinoHardware.h"
   1:./lib/ros_lib/ArduinoHardware.h **** /* 
   2:./lib/ros_lib/ArduinoHardware.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ArduinoHardware.h ****  *
   4:./lib/ros_lib/ArduinoHardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ArduinoHardware.h ****  * All rights reserved.
   6:./lib/ros_lib/ArduinoHardware.h ****  *
   7:./lib/ros_lib/ArduinoHardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ArduinoHardware.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ArduinoHardware.h ****  * are met:
  10:./lib/ros_lib/ArduinoHardware.h ****  *
  11:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ArduinoHardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ArduinoHardware.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ArduinoHardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ArduinoHardware.h ****  *    with the distribution.
  17:./lib/ros_lib/ArduinoHardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ArduinoHardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ArduinoHardware.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ArduinoHardware.h ****  *
  21:./lib/ros_lib/ArduinoHardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ArduinoHardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ArduinoHardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ArduinoHardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ArduinoHardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ArduinoHardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ArduinoHardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ArduinoHardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ArduinoHardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ArduinoHardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ArduinoHardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ArduinoHardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ArduinoHardware.h ****  */
  34:./lib/ros_lib/ArduinoHardware.h **** 
  35:./lib/ros_lib/ArduinoHardware.h **** #ifndef ROS_ARDUINO_HARDWARE_H_
  36:./lib/ros_lib/ArduinoHardware.h **** #define ROS_ARDUINO_HARDWARE_H_
  37:./lib/ros_lib/ArduinoHardware.h **** 
  38:./lib/ros_lib/ArduinoHardware.h **** #include "stm32f10x.h"
  39:./lib/ros_lib/ArduinoHardware.h **** #include "stm32_time.h"
  40:./lib/ros_lib/ArduinoHardware.h **** #include "led.h"
  41:./lib/ros_lib/ArduinoHardware.h **** 
  42:./lib/ros_lib/ArduinoHardware.h **** #define BUFFER_SIZE 512
  43:./lib/ros_lib/ArduinoHardware.h **** 
  44:./lib/ros_lib/ArduinoHardware.h **** 
  45:./lib/ros_lib/ArduinoHardware.h **** volatile uint16_t USART_FIFO[BUFFER_SIZE];
  46:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTIN;
  47:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTOUT;
  48:./lib/ros_lib/ArduinoHardware.h **** 
  49:./lib/ros_lib/ArduinoHardware.h **** class ArduinoHardware {
  50:./lib/ros_lib/ArduinoHardware.h ****   public:
  51:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(USART_TypeDef* io , long baud= 115200){
  52:./lib/ros_lib/ArduinoHardware.h ****       iostream = io;
  53:./lib/ros_lib/ArduinoHardware.h ****       baud_ = baud;
  54:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  55:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  56:./lib/ros_lib/ArduinoHardware.h ****     }
  57:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware()
  58:./lib/ros_lib/ArduinoHardware.h ****     {
  59:./lib/ros_lib/ArduinoHardware.h ****       /* Leonardo support */
  60:./lib/ros_lib/ArduinoHardware.h ****       iostream = USART1;
  61:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  63:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  64:./lib/ros_lib/ArduinoHardware.h ****     }
  65:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(ArduinoHardware& h){
  66:./lib/ros_lib/ArduinoHardware.h ****       this->iostream = iostream;
  67:./lib/ros_lib/ArduinoHardware.h ****       this->baud_ = h.baud_;
  68:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  69:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  70:./lib/ros_lib/ArduinoHardware.h ****     }
  71:./lib/ros_lib/ArduinoHardware.h ****   
  72:./lib/ros_lib/ArduinoHardware.h ****     void setBaud(long baud){
  73:./lib/ros_lib/ArduinoHardware.h ****       this->baud_= baud;
  74:./lib/ros_lib/ArduinoHardware.h ****     }
  75:./lib/ros_lib/ArduinoHardware.h ****   
  76:./lib/ros_lib/ArduinoHardware.h ****     int getBaud(){return baud_;}
  77:./lib/ros_lib/ArduinoHardware.h **** 
  78:./lib/ros_lib/ArduinoHardware.h ****     void init(){
 4999              		.loc 24 78 0
 5000              		.cfi_startproc
 5001              		@ args = 0, pretend = 0, frame = 24
 5002              		@ frame_needed = 0, uses_anonymous_args = 0
 5003              	.LVL630:
 5004 0000 70B5     		push	{r4, r5, r6, lr}
 5005              		.save {r4, r5, r6, lr}
 5006              	.LCFI56:
 5007              		.cfi_def_cfa_offset 16
 5008              		.cfi_offset 4, -16
 5009              		.cfi_offset 5, -12
 5010              		.cfi_offset 6, -8
 5011              		.cfi_offset 14, -4
 5012 0002 0446     		mov	r4, r0
 5013              		.pad #24
 5014 0004 86B0     		sub	sp, sp, #24
 5015              	.LCFI57:
 5016              		.cfi_def_cfa_offset 40
  79:./lib/ros_lib/ArduinoHardware.h ****       USART_InitTypeDef usart1_init_struct;
  80:./lib/ros_lib/ArduinoHardware.h ****       /* Bit configuration structure for GPIOA PIN9 and PIN10 */
  81:./lib/ros_lib/ArduinoHardware.h ****       GPIO_InitTypeDef gpioa_init_struct;
  82:./lib/ros_lib/ArduinoHardware.h **** 
  83:./lib/ros_lib/ArduinoHardware.h ****       /* Enalbe clock for USART1, AFIO and GPIOA */
  84:./lib/ros_lib/ArduinoHardware.h ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2Periph_AFIO | 
  85:./lib/ros_lib/ArduinoHardware.h ****                            RCC_APB2Periph_GPIOA, ENABLE);
  86:./lib/ros_lib/ArduinoHardware.h ****                             
  87:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Tx */
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_9;
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  90:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
  91:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 5017              		.loc 24 91 0
 5018 0006 214D     		ldr	r5, .L264
  85:./lib/ros_lib/ArduinoHardware.h ****                             
 5019              		.loc 24 85 0
 5020 0008 0121     		movs	r1, #1
 5021 000a 44F20500 		movw	r0, #16389
 5022              	.LVL631:
 5023 000e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 5024              	.LVL632:
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 5025              		.loc 24 88 0
 5026 0012 4FF40073 		mov	r3, #512
 5027 0016 ADF80430 		strh	r3, [sp, #4]	@ movhi
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 5028              		.loc 24 89 0
 5029 001a 0326     		movs	r6, #3
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 5030              		.loc 24 90 0
 5031 001c 1823     		movs	r3, #24
 5032              		.loc 24 91 0
 5033 001e 01A9     		add	r1, sp, #4
 5034 0020 2846     		mov	r0, r5
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 5035              		.loc 24 90 0
 5036 0022 8DF80730 		strb	r3, [sp, #7]
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 5037              		.loc 24 89 0
 5038 0026 8DF80660 		strb	r6, [sp, #6]
 5039              		.loc 24 91 0
 5040 002a FFF7FEFF 		bl	GPIO_Init
 5041              	.LVL633:
  92:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
  93:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_10;
 5042              		.loc 24 93 0
 5043 002e 4FF48063 		mov	r3, #1024
 5044 0032 ADF80430 		strh	r3, [sp, #4]	@ movhi
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  95:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 5045              		.loc 24 95 0
 5046 0036 0423     		movs	r3, #4
  96:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 5047              		.loc 24 96 0
 5048 0038 0DEB0301 		add	r1, sp, r3
 5049 003c 2846     		mov	r0, r5
  95:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 5050              		.loc 24 95 0
 5051 003e 8DF80730 		strb	r3, [sp, #7]
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 5052              		.loc 24 94 0
 5053 0042 8DF80660 		strb	r6, [sp, #6]
 5054              		.loc 24 96 0
 5055 0046 FFF7FEFF 		bl	GPIO_Init
 5056              	.LVL634:
  97:./lib/ros_lib/ArduinoHardware.h **** 
  98:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 */
  99:./lib/ros_lib/ArduinoHardware.h ****       USART_Cmd(iostream, ENABLE);  
 5057              		.loc 24 99 0
 5058 004a 2068     		ldr	r0, [r4]
 5059 004c 0121     		movs	r1, #1
 5060 004e FFF7FEFF 		bl	USART_Cmd
 5061              	.LVL635:
 100:./lib/ros_lib/ArduinoHardware.h ****       /* Baud rate 115200, 8-bit data, One stop bit
 101:./lib/ros_lib/ArduinoHardware.h ****       * No parity, Do both Rx and Tx, No HW flow control
 102:./lib/ros_lib/ArduinoHardware.h ****       */
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_BaudRate = baud_;   
 5062              		.loc 24 103 0
 5063 0052 6368     		ldr	r3, [r4, #4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 5064              		.loc 24 107 0
 5065 0054 0C22     		movs	r2, #12
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 5066              		.loc 24 103 0
 5067 0056 0293     		str	r3, [sp, #8]
 108:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 109:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 110:./lib/ros_lib/ArduinoHardware.h ****       USART_Init(iostream, &usart1_init_struct);
 5068              		.loc 24 110 0
 5069 0058 02A9     		add	r1, sp, #8
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 5070              		.loc 24 104 0
 5071 005a 0023     		movs	r3, #0
 5072              		.loc 24 110 0
 5073 005c 2068     		ldr	r0, [r4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 5074              		.loc 24 104 0
 5075 005e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 5076              		.loc 24 105 0
 5077 0062 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 5078              		.loc 24 106 0
 5079 0066 ADF81030 		strh	r3, [sp, #16]	@ movhi
 108:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 5080              		.loc 24 108 0
 5081 006a ADF81430 		strh	r3, [sp, #20]	@ movhi
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 5082              		.loc 24 107 0
 5083 006e ADF81220 		strh	r2, [sp, #18]	@ movhi
 5084              		.loc 24 110 0
 5085 0072 FFF7FEFF 		bl	USART_Init
 5086              	.LVL636:
 111:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 112:./lib/ros_lib/ArduinoHardware.h ****       USART_ITConfig(iostream, USART_IT_RXNE, ENABLE);
 5087              		.loc 24 112 0
 5088 0076 0122     		movs	r2, #1
 5089 0078 40F22551 		movw	r1, #1317
 5090 007c 2068     		ldr	r0, [r4]
 5091 007e FFF7FEFF 		bl	USART_ITConfig
 5092              	.LVL637:
 5093              	.LBB384:
 5094              	.LBB385:
 5095              		.file 25 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
   1:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**************************************************************************//**
   2:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @file     core_cm3.h
   3:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @version  V1.30
   5:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @date     30. October 2009
   6:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
   7:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @note
   8:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  10:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  11:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  15:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  16:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  22:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
  23:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  24:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CORE_H__
  26:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  27:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  29:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 10: \n
  31:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  34:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 530: \n
  35:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     return(__regBasePri); \n
  36:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * . 
  38:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 550: \n
  39:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  42:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 754: \n
  43:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  46:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 750: \n
  47:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  50:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 528: \n
  51:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  54:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 751: \n
  55:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  58:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  60:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  61:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  62:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -save */
  63:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e10  */
  64:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e530 */
  65:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e550 */
  66:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e754 */
  67:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e750 */
  68:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e528 */
  69:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e751 */
  70:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  71:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  72:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - CMSIS version number
  75:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
  78:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  79:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  80:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
  81:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  extern "C" {
  82:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif 
  83:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  84:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  88:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  90:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  92:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__ICCARM__)
  93:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
  95:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  96:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  97:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * IO definitions
 106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
 111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                 Register Abstraction
 122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  @{
 125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
 126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }  NVIC_Type;                                               
 148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SCB_Type;                                                
 177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                                      
 314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for SysTick
 363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SysTick_Type;
 372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  union  
 413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   {
 414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } ITM_Type;                                                
 445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 505:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0;
 506:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 510:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1;
 511:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 512:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } InterruptType_Type;
 513:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 514:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 518:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 522:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 525:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 529:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 530:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 534:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 535:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 536:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 537:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } MPU_Type;                                                
 549:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 550:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Type Register */
 551:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 554:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 557:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 560:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Control Register */
 561:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 564:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 567:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 570:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Number Register */
 571:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 574:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Base Address Register */
 575:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 578:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 581:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 584:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 588:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 591:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 594:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 597:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 600:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 603:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 606:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 609:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 612:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 614:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 615:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 616:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 619:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 620:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 621:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 622:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } CoreDebug_Type;
 627:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 628:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 632:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 635:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 638:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 641:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 644:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 647:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 650:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 653:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 656:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 659:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 662:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 665:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 669:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 672:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 676:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 679:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 682:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 685:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 688:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 691:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 694:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 697:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 700:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 703:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 706:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 709:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 713:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 714:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 722:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 729:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 733:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 734:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 736:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 737:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 738:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 740:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 741:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 745:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 749:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 753:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 757:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 758:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 759:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 760:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 762:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ARM armcc specific functions */
 764:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 765:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 768:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                             __nop
 769:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFI                             __wfi
 770:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFE                             __wfe
 771:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __SEV                             __sev
 772:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __REV                             __rev
 776:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __RBIT                            __rbit
 777:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 784:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 785:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 790:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 791:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 792:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 794:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
 795:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 796:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
 797:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 798:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 800:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 801:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 803:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 805:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 808:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 810:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 811:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 813:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
 814:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 815:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
 817:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 818:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 820:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 821:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 823:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 825:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 828:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 830:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 831:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 833:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 834:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 835:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 836:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 838:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 840:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 841:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 843:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 844:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 845:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 846:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 848:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 850:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 851:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 853:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 854:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 856:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 858:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __CLREX(void);
 859:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 860:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 861:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 863:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 864:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 865:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 866:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 867:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 869:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 870:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 872:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 873:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 874:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 875:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 876:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 878:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 879:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 881:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 882:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 883:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 885:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 887:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 888:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 890:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   priMask  PriMask
 891:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 892:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 894:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 896:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 897:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 899:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 900:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 901:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 902:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 903:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 905:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 906:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 908:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask faultMask value
 909:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 910:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
 911:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 912:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 914:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 915:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
 916:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
 917:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
 918:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 919:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
 920:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 921:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 923:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 924:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
 925:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 926:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
 927:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 928:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
 929:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 930:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 932:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 934:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 935:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 937:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 939:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CLREX                           __clrex
 940:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 941:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 942:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 944:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 945:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 946:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 947:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 948:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 950:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regBasePri);
 952:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 953:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 954:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 955:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 957:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 958:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 959:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 960:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 961:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 963:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 966:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 967:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 968:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 970:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 971:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 972:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 974:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 976:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regPriMask);
 978:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 979:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 980:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 981:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 983:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
 984:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 985:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 987:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 989:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regPriMask = (priMask);
 991:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 992:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 993:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 994:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 996:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 997:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 998:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 999:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1000:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1002:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regFaultMask);
1004:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1005:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1006:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1007:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1009:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1011:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1012:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1013:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1015:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1018:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1019:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1020:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1021:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1022:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
1023:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1024:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1025:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1026:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1028:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regControl);
1030:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1031:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1032:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1033:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1034:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1035:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1036:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1037:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1038:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1039:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1041:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regControl = control;
1043:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1044:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1045:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1047:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1048:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1049:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* IAR iccarm specific functions */
1051:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1052:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1055:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1058:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1064:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1076:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1077:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1078:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1080:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1081:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1082:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1083:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1084:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1086:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1087:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1089:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1091:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1094:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1096:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1097:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1099:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* GNU gcc specific functions */
1203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
1261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
1263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
1265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
1270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
1272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
1274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
1281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
1290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
1299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
1301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** * 
1316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** *  @return Control value
1317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in integer value
1338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* TASKING carm specific functions */
1437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*
1439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Including the CMSIS ones.
1442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
1445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   Core  Function Interface containing:
1449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core NVIC Functions
1450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core SysTick Functions
1451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core Reset Functions
1452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
1453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@{*/
1454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t reg_value;
1471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   
1473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return priority grouping field 
1485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 5096              		.loc 25 1504 0
 5097 0082 034B     		ldr	r3, .L264+4
 5098 0084 2022     		movs	r2, #32
 5099 0086 5A60     		str	r2, [r3, #4]
 5100              	.LVL638:
 5101              	.LBE385:
 5102              	.LBE384:
 113:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 global interrupt */
 114:./lib/ros_lib/ArduinoHardware.h ****       NVIC_EnableIRQ(USART1_IRQn);
 115:./lib/ros_lib/ArduinoHardware.h ****     }
 5103              		.loc 24 115 0
 5104 0088 06B0     		add	sp, sp, #24
 5105              	.LCFI58:
 5106              		.cfi_def_cfa_offset 16
 5107              		@ sp needed
 5108 008a 70BD     		pop	{r4, r5, r6, pc}
 5109              	.LVL639:
 5110              	.L265:
 5111              		.align	2
 5112              	.L264:
 5113 008c 00080140 		.word	1073809408
 5114 0090 00E100E0 		.word	-536813312
 5115              		.cfi_endproc
 5116              	.LFE1136:
 5117              		.fnend
 5119              		.text
 5120              		.align	1
 5121              		.global	USART1_IRQHandler
 5122              		.thumb
 5123              		.thumb_func
 5125              	USART1_IRQHandler:
 5126              		.fnstart
 5127              	.LFB1140:
 116:./lib/ros_lib/ArduinoHardware.h **** 
 117:./lib/ros_lib/ArduinoHardware.h ****     int read(){
 118:./lib/ros_lib/ArduinoHardware.h ****       if(USART_CNTIN == USART_CNTOUT)
 119:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 120:./lib/ros_lib/ArduinoHardware.h ****       
 121:./lib/ros_lib/ArduinoHardware.h ****       int returnVal = USART_FIFO[USART_CNTOUT];
 122:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 123:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 124:./lib/ros_lib/ArduinoHardware.h ****     }
 125:./lib/ros_lib/ArduinoHardware.h **** 
 126:./lib/ros_lib/ArduinoHardware.h ****     void write(uint8_t* data, int length){
 127:./lib/ros_lib/ArduinoHardware.h ****       for(int i=0; i<length; i++){
 128:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 129:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 130:./lib/ros_lib/ArduinoHardware.h ****       }
 131:./lib/ros_lib/ArduinoHardware.h ****     }
 132:./lib/ros_lib/ArduinoHardware.h **** 
 133:./lib/ros_lib/ArduinoHardware.h ****     uint32_t time(){
 134:./lib/ros_lib/ArduinoHardware.h ****       return millis();
 135:./lib/ros_lib/ArduinoHardware.h ****     }
 136:./lib/ros_lib/ArduinoHardware.h **** 
 137:./lib/ros_lib/ArduinoHardware.h ****   protected:
 138:./lib/ros_lib/ArduinoHardware.h ****     USART_TypeDef* iostream;
 139:./lib/ros_lib/ArduinoHardware.h ****     long baud_;
 140:./lib/ros_lib/ArduinoHardware.h **** 
 141:./lib/ros_lib/ArduinoHardware.h **** };
 142:./lib/ros_lib/ArduinoHardware.h **** 
 143:./lib/ros_lib/ArduinoHardware.h **** 
 144:./lib/ros_lib/ArduinoHardware.h **** 
 145:./lib/ros_lib/ArduinoHardware.h **** extern "C"{
 146:./lib/ros_lib/ArduinoHardware.h ****   void USART1_IRQHandler(void){
 5128              		.loc 24 146 0
 5129              		.cfi_startproc
 5130              		@ args = 0, pretend = 0, frame = 0
 5131              		@ frame_needed = 0, uses_anonymous_args = 0
 5132 0184 38B5     		push	{r3, r4, r5, lr}
 5133              		.save {r3, r4, r5, lr}
 5134              	.LCFI59:
 5135              		.cfi_def_cfa_offset 16
 5136              		.cfi_offset 3, -16
 5137              		.cfi_offset 4, -12
 5138              		.cfi_offset 5, -8
 5139              		.cfi_offset 14, -4
 147:./lib/ros_lib/ArduinoHardware.h **** 
 148:./lib/ros_lib/ArduinoHardware.h ****     if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET 
 5140              		.loc 24 148 0
 5141 0186 40F22551 		movw	r1, #1317
 5142 018a 0F48     		ldr	r0, .L273
 5143 018c FFF7FEFF 		bl	USART_GetITStatus
 5144              	.LVL640:
 149:./lib/ros_lib/ArduinoHardware.h ****       && USART_CNTIN != (( USART_CNTOUT - 1 + BUFFER_SIZE) % BUFFER_SIZE)){
 5145              		.loc 24 149 0
 5146 0190 40B1     		cbz	r0, .L267
 5147              		.loc 24 149 0 is_stmt 0 discriminator 1
 5148 0192 0E4C     		ldr	r4, .L273+4
 5149 0194 636A     		ldr	r3, [r4, #36]
 5150 0196 A26A     		ldr	r2, [r4, #40]
 5151 0198 03F2FF13 		addw	r3, r3, #511
 5152 019c C3F30803 		ubfx	r3, r3, #0, #9
 5153 01a0 9342     		cmp	r3, r2
 5154 01a2 04D1     		bne	.L268
 5155              	.L267:
 150:./lib/ros_lib/ArduinoHardware.h **** 
 151:./lib/ros_lib/ArduinoHardware.h ****       USART_FIFO[USART_CNTIN] = USART_ReceiveData(USART1);
 152:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 153:./lib/ros_lib/ArduinoHardware.h ****     }else{
 154:./lib/ros_lib/ArduinoHardware.h ****       // Should NEVER reach this point!
 155:./lib/ros_lib/ArduinoHardware.h ****       (void)USART_ReceiveData(USART1);  // Clear inerrupt flag by reading byte
 156:./lib/ros_lib/ArduinoHardware.h ****     }
 157:./lib/ros_lib/ArduinoHardware.h ****   }   
 5156              		.loc 24 157 0 is_stmt 1
 5157 01a4 BDE83840 		pop	{r3, r4, r5, lr}
 5158              	.LCFI60:
 5159              		.cfi_remember_state
 5160              		.cfi_restore 14
 5161              		.cfi_restore 5
 5162              		.cfi_restore 4
 5163              		.cfi_restore 3
 5164              		.cfi_def_cfa_offset 0
 155:./lib/ros_lib/ArduinoHardware.h ****     }
 5165              		.loc 24 155 0
 5166 01a8 0748     		ldr	r0, .L273
 5167 01aa FFF7FEBF 		b	USART_ReceiveData
 5168              	.LVL641:
 5169              	.L268:
 5170              	.LCFI61:
 5171              		.cfi_restore_state
 151:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 5172              		.loc 24 151 0
 5173 01ae 0648     		ldr	r0, .L273
 5174 01b0 A56A     		ldr	r5, [r4, #40]
 5175 01b2 FFF7FEFF 		bl	USART_ReceiveData
 5176              	.LVL642:
 5177 01b6 04EB4505 		add	r5, r4, r5, lsl #1
 5178 01ba A885     		strh	r0, [r5, #44]	@ movhi
 152:./lib/ros_lib/ArduinoHardware.h ****     }else{
 5179              		.loc 24 152 0
 5180 01bc A36A     		ldr	r3, [r4, #40]
 5181 01be 0133     		adds	r3, r3, #1
 5182 01c0 C3F30803 		ubfx	r3, r3, #0, #9
 5183 01c4 A362     		str	r3, [r4, #40]
 5184 01c6 38BD     		pop	{r3, r4, r5, pc}
 5185              	.L274:
 5186              		.align	2
 5187              	.L273:
 5188 01c8 00380140 		.word	1073821696
 5189 01cc 00000000 		.word	.LANCHOR1
 5190              		.cfi_endproc
 5191              	.LFE1140:
 5192              		.fnend
 5194              		.section	.text._ZN13geometry_msgs16TransformStampedC2Ev,"axG",%progbits,_ZN13geometry_msgs16Transf
 5195              		.align	1
 5196              		.weak	_ZN13geometry_msgs16TransformStampedC2Ev
 5197              		.thumb
 5198              		.thumb_func
 5200              	_ZN13geometry_msgs16TransformStampedC2Ev:
 5201              		.fnstart
 5202              	.LFB1254:
  21:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       header(),
 5203              		.loc 17 21 0
 5204              		.cfi_startproc
 5205              		@ args = 0, pretend = 0, frame = 0
 5206              		@ frame_needed = 0, uses_anonymous_args = 0
 5207              		@ link register save eliminated.
 5208              	.LVL643:
 5209              	.LBB411:
  24:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 5210              		.loc 17 24 0
 5211 0000 0C4A     		ldr	r2, .L276
 5212              	.LBB412:
 5213              	.LBB413:
 5214              	.LBB414:
 5215              	.LBB415:
  24:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 5216              		.loc 8 24 0
 5217 0002 0D49     		ldr	r1, .L276+4
 5218              	.LBE415:
 5219              	.LBE414:
 5220              	.LBE413:
 5221              	.LBE412:
  24:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 5222              		.loc 17 24 0
 5223 0004 0260     		str	r2, [r0]
 5224              	.LVL644:
 5225              	.LBB424:
 5226              	.LBB425:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 5227              		.loc 6 23 0
 5228 0006 0D4A     		ldr	r2, .L276+8
 5229              	.LBE425:
 5230              	.LBE424:
 5231              	.LBB429:
 5232              	.LBB422:
 5233              	.LBB418:
 5234              	.LBB416:
  24:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 5235              		.loc 8 24 0
 5236 0008 0163     		str	r1, [r0, #48]
 5237              	.LBE416:
 5238              	.LBE418:
 5239              	.LBE422:
 5240              	.LBE429:
 5241              	.LBB430:
 5242              	.LBB428:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 5243              		.loc 6 23 0
 5244 000a 4260     		str	r2, [r0, #4]
 5245 000c 0022     		movs	r2, #0
 5246 000e 8260     		str	r2, [r0, #8]
 5247              	.LVL645:
 5248              	.LBB426:
 5249              	.LBB427:
 5250              		.file 26 "./lib/ros_lib/ros/time.h"
   1:./lib/ros_lib/ros/time.h **** /*
   2:./lib/ros_lib/ros/time.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/time.h ****  *
   4:./lib/ros_lib/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/time.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/time.h ****  *
   7:./lib/ros_lib/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/time.h ****  * are met:
  10:./lib/ros_lib/ros/time.h ****  *
  11:./lib/ros_lib/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/time.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/time.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/time.h ****  *
  21:./lib/ros_lib/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/time.h ****  */
  34:./lib/ros_lib/ros/time.h **** 
  35:./lib/ros_lib/ros/time.h **** #ifndef ROS_TIME_H_
  36:./lib/ros_lib/ros/time.h **** #define ROS_TIME_H_
  37:./lib/ros_lib/ros/time.h **** 
  38:./lib/ros_lib/ros/time.h **** #include <math.h>
  39:./lib/ros_lib/ros/time.h **** #include <stdint.h>
  40:./lib/ros_lib/ros/time.h **** 
  41:./lib/ros_lib/ros/time.h **** #include "ros/duration.h"
  42:./lib/ros_lib/ros/time.h **** 
  43:./lib/ros_lib/ros/time.h **** namespace ros
  44:./lib/ros_lib/ros/time.h **** {
  45:./lib/ros_lib/ros/time.h ****   void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  46:./lib/ros_lib/ros/time.h **** 
  47:./lib/ros_lib/ros/time.h ****   class Time
  48:./lib/ros_lib/ros/time.h ****   {
  49:./lib/ros_lib/ros/time.h ****     public:
  50:./lib/ros_lib/ros/time.h ****       uint32_t sec, nsec;
  51:./lib/ros_lib/ros/time.h **** 
  52:./lib/ros_lib/ros/time.h ****       Time() : sec(0), nsec(0) {}
 5251              		.loc 26 52 0
 5252 0010 C260     		str	r2, [r0, #12]
 5253 0012 0261     		str	r2, [r0, #16]
 5254              	.LVL646:
 5255              	.LBE427:
 5256              	.LBE426:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 5257              		.loc 6 23 0
 5258 0014 0A4A     		ldr	r2, .L276+12
 5259 0016 4261     		str	r2, [r0, #20]
 5260              	.LVL647:
 5261              	.LBE428:
 5262              	.LBE430:
  24:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 5263              		.loc 17 24 0
 5264 0018 8261     		str	r2, [r0, #24]
 5265              	.LVL648:
 5266              	.LBB431:
 5267              	.LBB423:
  22:./lib/ros_lib/geometry_msgs/Transform.h ****     {
 5268              		.loc 16 22 0
 5269 001a 0A4A     		ldr	r2, .L276+16
 5270 001c C261     		str	r2, [r0, #28]
 5271              	.LVL649:
 5272              	.LBB419:
 5273              	.LBB420:
  22:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
 5274              		.loc 11 22 0
 5275 001e 0A4A     		ldr	r2, .L276+20
 5276 0020 0262     		str	r2, [r0, #32]
 5277 0022 0022     		movs	r2, #0
 5278 0024 4262     		str	r2, [r0, #36]	@ float
 5279 0026 8262     		str	r2, [r0, #40]	@ float
 5280 0028 C262     		str	r2, [r0, #44]	@ float
 5281              	.LVL650:
 5282              	.LBE420:
 5283              	.LBE419:
 5284              	.LBB421:
 5285              	.LBB417:
  24:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 5286              		.loc 8 24 0
 5287 002a 4263     		str	r2, [r0, #52]	@ float
 5288 002c 8263     		str	r2, [r0, #56]	@ float
 5289 002e C263     		str	r2, [r0, #60]	@ float
 5290 0030 0264     		str	r2, [r0, #64]	@ float
 5291              	.LVL651:
 5292              	.LBE417:
 5293              	.LBE421:
 5294              	.LBE423:
 5295              	.LBE431:
 5296              	.LBE411:
  26:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
 5297              		.loc 17 26 0
 5298 0032 7047     		bx	lr
 5299              	.L277:
 5300              		.align	2
 5301              	.L276:
 5302 0034 08000000 		.word	_ZTVN13geometry_msgs16TransformStampedE+8
 5303 0038 08000000 		.word	_ZTVN13geometry_msgs10QuaternionE+8
 5304 003c 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 5305 0040 C6030000 		.word	.LC35
 5306 0044 08000000 		.word	_ZTVN13geometry_msgs9TransformE+8
 5307 0048 08000000 		.word	_ZTVN13geometry_msgs7Vector3E+8
 5308              		.cfi_endproc
 5309              	.LFE1254:
 5310              		.cantunwind
 5311              		.fnend
 5313              		.weak	_ZN13geometry_msgs16TransformStampedC1Ev
 5314              		.thumb_set _ZN13geometry_msgs16TransformStampedC1Ev,_ZN13geometry_msgs16TransformStampedC2Ev
 5315              		.text
 5316              		.align	1
 5317              		.global	EXTI2_IRQHandler
 5318              		.thumb
 5319              		.thumb_func
 5321              	EXTI2_IRQHandler:
 5322              		.fnstart
 5323              	.LFB1333:
 118:src/main.cpp  **** }
 119:src/main.cpp  **** 
 120:src/main.cpp  **** 
 121:src/main.cpp  **** ros::Subscriber<roberto_msgs::MotorState> motor_sub("throttled_joy_vel", &motor_cb);
 122:src/main.cpp  **** //ros::Subscriber<sensor_msgs::Joy> motor_sub("joy", &motor_cb);
 123:src/main.cpp  **** ros::Subscriber<std_msgs::UInt8> led_sub("led", &led_cb);
 124:src/main.cpp  **** 
 125:src/main.cpp  **** geometry_msgs::TransformStamped odom_trans;
 126:src/main.cpp  **** tf::TransformBroadcaster odom_broadcaster;
 127:src/main.cpp  **** 
 128:src/main.cpp  **** 
 129:src/main.cpp  **** nav_msgs::Odometry odom;
 130:src/main.cpp  **** ros::Publisher odom_pub("odom", &odom);
 131:src/main.cpp  **** 
 132:src/main.cpp  **** int main(){
 133:src/main.cpp  ****   /* System Clocks Configuration */
 134:src/main.cpp  ****   RCC_Configuration();
 135:src/main.cpp  **** 
 136:src/main.cpp  ****   GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
 137:src/main.cpp  ****   I2C1_Init();
 138:src/main.cpp  ****   SysTick_Init();
 139:src/main.cpp  ****   DEBUG_Init();
 140:src/main.cpp  ****   SHUTDOWN_Init();
 141:src/main.cpp  ****   LED_Init();
 142:src/main.cpp  **** 
 143:src/main.cpp  ****   /*str_msg.data = (float *)malloc(sizeof(float)*4);
 144:src/main.cpp  ****   str_msg.data_length = 4;*/
 145:src/main.cpp  **** 
 146:src/main.cpp  ****   nh.initNode();
 147:src/main.cpp  **** 
 148:src/main.cpp  ****   nh.subscribe(motor_sub);
 149:src/main.cpp  ****   nh.subscribe(led_sub);
 150:src/main.cpp  ****   nh.advertise(odom_pub);
 151:src/main.cpp  ****   odom_broadcaster.init(nh);
 152:src/main.cpp  **** 
 153:src/main.cpp  ****   while(!nh.connected()){
 154:src/main.cpp  ****     nh.spinOnce();
 155:src/main.cpp  ****   }
 156:src/main.cpp  **** 
 157:src/main.cpp  ****   shuttingDown = false;
 158:src/main.cpp  **** 
 159:src/main.cpp  ****   
 160:src/main.cpp  **** 
 161:src/main.cpp  ****   float KP;
 162:src/main.cpp  ****   if(!nh.getParam("serial_node/KP", &KP, 1)){
 163:src/main.cpp  ****     KP = 5000;
 164:src/main.cpp  ****   }
 165:src/main.cpp  ****   float KI;
 166:src/main.cpp  ****   if(!nh.getParam("serial_node/KI", &KI, 1)){
 167:src/main.cpp  ****     KI = 5000;
 168:src/main.cpp  ****   }
 169:src/main.cpp  ****   float KD;
 170:src/main.cpp  ****   if(!nh.getParam("serial_node/KD", &KD, 1)){
 171:src/main.cpp  ****     KD = 4;
 172:src/main.cpp  ****   }
 173:src/main.cpp  ****   float integralSaturation;
 174:src/main.cpp  ****   if(!nh.getParam("serial_node/integralSaturation", &integralSaturation, 1)){
 175:src/main.cpp  ****     integralSaturation = 10000;
 176:src/main.cpp  ****   }
 177:src/main.cpp  ****   float wheelRadius;
 178:src/main.cpp  ****   if(!nh.getParam("serial_node/wheelRadius", &wheelRadius, 1)){
 179:src/main.cpp  ****     wheelRadius = 0.04;
 180:src/main.cpp  ****   }
 181:src/main.cpp  **** 
 182:src/main.cpp  ****   if(!nh.getParam("serial_node/widthBetweenMotorPivotPoints", &L, 1)){
 183:src/main.cpp  ****     L = 0.17;
 184:src/main.cpp  ****   }
 185:src/main.cpp  **** 
 186:src/main.cpp  ****   if(!nh.getParam("serial_node/motorPivotPointToWheel", &d, 1)){
 187:src/main.cpp  ****     d = 0.06;
 188:src/main.cpp  ****   }
 189:src/main.cpp  **** 
 190:src/main.cpp  ****   delay(1000);
 191:src/main.cpp  **** 
 192:src/main.cpp  ****   motorSettings SL(MOTOR_TYPE_SERVO, "servo_left", TIM4, 4);
 193:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 194:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 195:src/main.cpp  **** 
 196:src/main.cpp  ****   motorSettings SR(MOTOR_TYPE_SERVO, "servo_right", TIM4, 3);
 197:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 198:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 199:src/main.cpp  **** 
 200:src/main.cpp  ****   motorSettings FR(MOTOR_TYPE_DC_MOTOR, "front_right", TIM1, 1);
 201:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 202:src/main.cpp  ****               GPIO_Pin_15, GPIOC, GPIO_Pin_0, GPIOA,
 203:src/main.cpp  ****               GPIO_Pin_8, GPIOA);
 204:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 205:src/main.cpp  ****   FR.setRegulator(KP,KI,KD,integralSaturation);
 206:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 207:src/main.cpp  **** 
 208:src/main.cpp  ****   motorSettings FL(MOTOR_TYPE_DC_MOTOR, "front_left", TIM3, 4);
 209:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 210:src/main.cpp  ****               GPIO_Pin_4, GPIOA,GPIO_Pin_10,GPIOB,
 211:src/main.cpp  ****               GPIO_Pin_1, GPIOB);
 212:src/main.cpp  ****   FL.encoderAddr = (0x10);
 213:src/main.cpp  ****   FL.setRegulator(KP,KI,KD,integralSaturation);
 214:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 215:src/main.cpp  **** 
 216:src/main.cpp  ****   motorSettings RL(MOTOR_TYPE_DC_MOTOR, "rear_left", TIM2, 4);
 217:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 218:src/main.cpp  ****     GPIO_Pin_13, GPIOB, GPIO_Pin_14, GPIOB,
 219:src/main.cpp  ****     GPIO_Pin_3, GPIOA);
 220:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 221:src/main.cpp  ****   RL.setRegulator(KP,KI,KD,integralSaturation);
 222:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 223:src/main.cpp  **** 
 224:src/main.cpp  ****   motorSettings RR(MOTOR_TYPE_DC_MOTOR, "rear_right", TIM1, 4);
 225:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 226:src/main.cpp  ****               GPIO_Pin_15, GPIOA, GPIO_Pin_3, GPIOB,
 227:src/main.cpp  ****               GPIO_Pin_11, GPIOA);
 228:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 229:src/main.cpp  ****   RR.setRegulator(KP,KI,KD,integralSaturation);
 230:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 231:src/main.cpp  **** 
 232:src/main.cpp  ****   char error[150];
 233:src/main.cpp  ****   servo_left = motor::createMotor(&SL);
 234:src/main.cpp  ****   if(!servo_left->motorInit()){
 235:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 236:src/main.cpp  ****     nh.logerror(error);
 237:src/main.cpp  ****   }
 238:src/main.cpp  **** 
 239:src/main.cpp  ****   servo_right = motor::createMotor(&SR);
 240:src/main.cpp  ****   if(!servo_right->motorInit()){
 241:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 242:src/main.cpp  ****     nh.logerror(error);
 243:src/main.cpp  ****   }
 244:src/main.cpp  **** 
 245:src/main.cpp  ****   front_left = motor::createMotor(&FL);
 246:src/main.cpp  ****   if(!front_left->motorInit()){
 247:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 248:src/main.cpp  ****     nh.logerror(error);
 249:src/main.cpp  ****   }
 250:src/main.cpp  **** 
 251:src/main.cpp  ****   front_right = motor::createMotor(&FR);
 252:src/main.cpp  ****   if(!front_right->motorInit()){
 253:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 254:src/main.cpp  ****     nh.logerror(error);
 255:src/main.cpp  ****   }
 256:src/main.cpp  **** 
 257:src/main.cpp  ****   rear_left = motor::createMotor(&RL);
 258:src/main.cpp  ****   if(!rear_left->motorInit()){
 259:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 260:src/main.cpp  ****     nh.logerror(error);
 261:src/main.cpp  ****   }
 262:src/main.cpp  **** 
 263:src/main.cpp  ****   rear_right = motor::createMotor(&RR);
 264:src/main.cpp  ****   if(!rear_right->motorInit()){
 265:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 266:src/main.cpp  ****     nh.logerror(error);
 267:src/main.cpp  ****   }
 268:src/main.cpp  ****   
 269:src/main.cpp  ****   
 270:src/main.cpp  ****   led_set(0);
 271:src/main.cpp  **** 
 272:src/main.cpp  ****   servo_left->setReference(0);
 273:src/main.cpp  ****   servo_right->setReference(0);
 274:src/main.cpp  ****   front_right->setReference(0);
 275:src/main.cpp  ****   front_left->setReference(0);
 276:src/main.cpp  ****   rear_right->setReference(0);
 277:src/main.cpp  ****   rear_left->setReference(0);
 278:src/main.cpp  **** 
 279:src/main.cpp  ****   bool connected = false;
 280:src/main.cpp  **** 
 281:src/main.cpp  ****   int cnt = 0;
 282:src/main.cpp  ****   float start_time;
 283:src/main.cpp  ****   float dt = 0.02;
 284:src/main.cpp  **** 
 285:src/main.cpp  ****   double x = 0.0;
 286:src/main.cpp  ****   double y = 0.0;
 287:src/main.cpp  ****   double th = 0.0;
 288:src/main.cpp  ****   float l = sqrt(pow((L/2),2)*2);
 289:src/main.cpp  **** 
 290:src/main.cpp  ****   float alpha[4] = {0,0,0,0};
 291:src/main.cpp  **** 
 292:src/main.cpp  **** 
 293:src/main.cpp  ****   while (1){
 294:src/main.cpp  ****     nh.spinOnce();
 295:src/main.cpp  ****     start_time = ((int)millis()) / 1000.0;
 296:src/main.cpp  **** 
 297:src/main.cpp  ****     if(shuttingDown){
 298:src/main.cpp  ****       connected = false;
 299:src/main.cpp  ****       // TODO: Advertise shutdown??
 300:src/main.cpp  ****     }else{
 301:src/main.cpp  ****       connected = nh.connected();
 302:src/main.cpp  ****       if(cnt++%10==0)
 303:src/main.cpp  ****         debug_toggle();
 304:src/main.cpp  ****     }
 305:src/main.cpp  **** 
 306:src/main.cpp  ****     auto sl = servo_left->update(0.1, connected);
 307:src/main.cpp  ****     auto sr = servo_right->update(0.1, connected);
 308:src/main.cpp  **** 
 309:src/main.cpp  ****     if(waitForServos | lastMsg + CMDMSGTIMEOUT > start_time){
 310:src/main.cpp  ****       if(std::get<2>(sr) == (int)servo_right->getReference() && std::get<2>(sl) == (int)servo_left-
 311:src/main.cpp  ****         waitForServos = false;
 312:src/main.cpp  ****         front_right->setReference(motorCmd[0]);
 313:src/main.cpp  ****         front_left->setReference(motorCmd[1]);
 314:src/main.cpp  ****         rear_left->setReference(motorCmd[2]);
 315:src/main.cpp  ****         rear_right->setReference(motorCmd[3]);
 316:src/main.cpp  ****       }else{
 317:src/main.cpp  ****         front_right->setReference(0);
 318:src/main.cpp  ****         front_left->setReference(0);
 319:src/main.cpp  ****         rear_left->setReference(0);
 320:src/main.cpp  ****         rear_right->setReference(0);
 321:src/main.cpp  ****       }
 322:src/main.cpp  ****     }
 323:src/main.cpp  ****     
 324:src/main.cpp  ****     auto fr = front_right->update(0.1, connected);
 325:src/main.cpp  ****     auto fl = front_left->update(0.1, connected);
 326:src/main.cpp  ****     auto rl = rear_left->update(0.1, connected);
 327:src/main.cpp  ****     auto rr = rear_right->update(0.1, connected);
 328:src/main.cpp  **** 
 329:src/main.cpp  ****     if(std::get<3>(fr) == 65535){
 330:src/main.cpp  ****       sprintf(error, "Encoder timeout: %s - [FAIL]", front_right->motorName());
 331:src/main.cpp  ****       nh.logerror(error);
 332:src/main.cpp  ****     }
 333:src/main.cpp  ****     if(std::get<3>(fl) == 65535){
 334:src/main.cpp  ****       sprintf(error, "Encoder timeout: %s - [FAIL]", front_left->motorName());
 335:src/main.cpp  ****       nh.logerror(error);
 336:src/main.cpp  ****     }
 337:src/main.cpp  ****     if(std::get<3>(rl) == 65535){
 338:src/main.cpp  ****       sprintf(error, "Encoder timeout: %s - [FAIL]", rear_left->motorName());
 339:src/main.cpp  ****       nh.logerror(error);
 340:src/main.cpp  ****     }
 341:src/main.cpp  ****     if(std::get<3>(rr) == 65535){
 342:src/main.cpp  ****       sprintf(error, "Encoder timeout: %s - [FAIL]", rear_right->motorName());
 343:src/main.cpp  ****       nh.logerror(error);
 344:src/main.cpp  ****     }
 345:src/main.cpp  **** 
 346:src/main.cpp  ****     float speeds[4] = {std::get<0>(fr), std::get<0>(fl), std::get<0>(rl), std::get<0>(rr)};
 347:src/main.cpp  **** 
 348:src/main.cpp  ****     // TODO: Correct these to fit!
 349:src/main.cpp  ****     float angles[4] = {std::get<0>(sl), std::get<0>(sr), std::get<0>(sl), std::get<0>(sr)};
 350:src/main.cpp  **** 
 351:src/main.cpp  ****     int i;
 352:src/main.cpp  ****     float x_dot = 0;
 353:src/main.cpp  ****     float y_dot = 0;
 354:src/main.cpp  ****     float theta_dot = 0;
 355:src/main.cpp  ****     for(i = 0; i < 4; i++){
 356:src/main.cpp  ****       // TODO: Calculate beta correctly
 357:src/main.cpp  ****       float beta = angles[i];//*PWM2DEG;
 358:src/main.cpp  ****       x_dot += sin(alpha[i]+beta)*speeds[i];
 359:src/main.cpp  ****       y_dot += cos(alpha[i]+beta)*speeds[i];
 360:src/main.cpp  ****       theta_dot += cos(beta - atan((l*cos(alpha[i]+d*cos(alpha[i] + beta)))/(l*sin(alpha[i] + d*sin
 361:src/main.cpp  ****     }
 362:src/main.cpp  ****     x_dot /= 4;
 363:src/main.cpp  ****     y_dot /= 4;
 364:src/main.cpp  ****     theta_dot /= 4;
 365:src/main.cpp  **** 
 366:src/main.cpp  **** 
 367:src/main.cpp  **** 
 368:src/main.cpp  ****     double delta_x = (x_dot * cos(th) - y_dot * sin(th)) * dt;
 369:src/main.cpp  ****     double delta_y = (x_dot * sin(th) + y_dot * cos(th)) * dt;
 370:src/main.cpp  ****     double delta_th = theta_dot * dt;
 371:src/main.cpp  **** 
 372:src/main.cpp  ****     x += delta_x;
 373:src/main.cpp  ****     y += delta_y;
 374:src/main.cpp  ****     th += delta_th;
 375:src/main.cpp  **** 
 376:src/main.cpp  **** 
 377:src/main.cpp  ****     geometry_msgs::Quaternion odom_quat = tf::createQuaternionFromYaw(th);
 378:src/main.cpp  **** 
 379:src/main.cpp  ****     //first, we'll publish the transform over tf
 380:src/main.cpp  ****     odom_trans.header.stamp = ros::Time(start_time,0);
 381:src/main.cpp  ****     odom_trans.header.frame_id = "odom";
 382:src/main.cpp  ****     odom_trans.child_frame_id = "base_link";
 383:src/main.cpp  **** 
 384:src/main.cpp  ****     odom_trans.transform.translation.x = x;
 385:src/main.cpp  ****     odom_trans.transform.translation.y = y;
 386:src/main.cpp  ****     odom_trans.transform.translation.z = 0.0;
 387:src/main.cpp  ****     odom_trans.transform.rotation = odom_quat;
 388:src/main.cpp  **** 
 389:src/main.cpp  ****     //send the transform
 390:src/main.cpp  ****     odom_broadcaster.sendTransform(odom_trans);
 391:src/main.cpp  **** 
 392:src/main.cpp  ****     //next, we'll publish the odometry message over ROS
 393:src/main.cpp  ****     odom.header.stamp = ros::Time(start_time,0);
 394:src/main.cpp  ****     odom.header.frame_id = "odom";
 395:src/main.cpp  **** 
 396:src/main.cpp  ****     //set the position
 397:src/main.cpp  ****     odom.pose.pose.position.x = x;
 398:src/main.cpp  ****     odom.pose.pose.position.y = y;
 399:src/main.cpp  ****     odom.pose.pose.position.z = 0.0;
 400:src/main.cpp  ****     odom.pose.pose.orientation = odom_quat;
 401:src/main.cpp  **** 
 402:src/main.cpp  ****     //set the velocity
 403:src/main.cpp  ****     odom.child_frame_id = "base_link";
 404:src/main.cpp  ****     odom.twist.twist.linear.x = x_dot;
 405:src/main.cpp  ****     odom.twist.twist.linear.y = y_dot;
 406:src/main.cpp  ****     odom.twist.twist.angular.z = theta_dot;
 407:src/main.cpp  **** 
 408:src/main.cpp  ****     //publish the message
 409:src/main.cpp  ****     odom_pub.publish(&odom);
 410:src/main.cpp  **** 
 411:src/main.cpp  ****     //delay(20);
 412:src/main.cpp  ****     if((((int)millis()) / 1000.0) - start_time >= dt){
 413:src/main.cpp  ****       nh.logerror("Main loop running slower than expected!");
 414:src/main.cpp  ****     }else{
 415:src/main.cpp  ****       while( (((int)millis()) / 1000.0) - start_time <= dt){}
 416:src/main.cpp  ****     }
 417:src/main.cpp  ****   }
 418:src/main.cpp  ****   return 0;
 419:src/main.cpp  **** }
 420:src/main.cpp  **** 
 421:src/main.cpp  **** 
 422:src/main.cpp  **** 
 423:src/main.cpp  **** extern "C" void EXTI2_IRQHandler(void){
 5324              		.loc 21 423 0
 5325              		.cfi_startproc
 5326              		@ args = 0, pretend = 0, frame = 0
 5327              		@ frame_needed = 0, uses_anonymous_args = 0
 5328 01d0 08B5     		push	{r3, lr}
 5329              		.save {r3, lr}
 5330              	.LCFI62:
 5331              		.cfi_def_cfa_offset 8
 5332              		.cfi_offset 3, -8
 5333              		.cfi_offset 14, -4
 424:src/main.cpp  ****   if(EXTI_GetITStatus(EXTI_Line2) != RESET){
 5334              		.loc 21 424 0
 5335 01d2 0420     		movs	r0, #4
 5336 01d4 FFF7FEFF 		bl	EXTI_GetITStatus
 5337              	.LVL652:
 5338 01d8 40B1     		cbz	r0, .L278
 425:src/main.cpp  ****     shuttingDown = true;
 5339              		.loc 21 425 0
 5340 01da 054B     		ldr	r3, .L280
 5341 01dc 0122     		movs	r2, #1
 5342 01de 83F82C24 		strb	r2, [r3, #1068]
 426:src/main.cpp  ****     EXTI_ClearITPendingBit(EXTI_Line2);
 5343              		.loc 21 426 0
 5344 01e2 0420     		movs	r0, #4
 427:src/main.cpp  ****   }
 428:src/main.cpp  **** }
 5345              		.loc 21 428 0
 5346 01e4 BDE80840 		pop	{r3, lr}
 5347              	.LCFI63:
 5348              		.cfi_remember_state
 5349              		.cfi_restore 14
 5350              		.cfi_restore 3
 5351              		.cfi_def_cfa_offset 0
 426:src/main.cpp  ****     EXTI_ClearITPendingBit(EXTI_Line2);
 5352              		.loc 21 426 0
 5353 01e8 FFF7FEBF 		b	EXTI_ClearITPendingBit
 5354              	.LVL653:
 5355              	.L278:
 5356              	.LCFI64:
 5357              		.cfi_restore_state
 5358 01ec 08BD     		pop	{r3, pc}
 5359              	.L281:
 5360 01ee 00BF     		.align	2
 5361              	.L280:
 5362 01f0 00000000 		.word	.LANCHOR1
 5363              		.cfi_endproc
 5364              	.LFE1333:
 5365              		.fnend
 5367              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi,"axG"
 5368              		.align	1
 5369              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 5370              		.thumb
 5371              		.thumb_func
 5373              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:
 5374              		.fnstart
 5375              	.LFB1366:
 289:./lib/ros_lib/ros/node_handle.h **** 
 290:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 291:./lib/ros_lib/ros/node_handle.h ****        * Time functions
 292:./lib/ros_lib/ros/node_handle.h ****        */
 293:./lib/ros_lib/ros/node_handle.h **** 
 294:./lib/ros_lib/ros/node_handle.h ****       void requestSyncTime()
 295:./lib/ros_lib/ros/node_handle.h ****       {
 296:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 297:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_TIME, &t);
 298:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 299:./lib/ros_lib/ros/node_handle.h ****       }
 300:./lib/ros_lib/ros/node_handle.h **** 
 301:./lib/ros_lib/ros/node_handle.h ****       void syncTime(uint8_t * data)
 302:./lib/ros_lib/ros/node_handle.h ****       {
 303:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 304:./lib/ros_lib/ros/node_handle.h ****         uint32_t offset = hardware_.time() - rt_time;
 305:./lib/ros_lib/ros/node_handle.h **** 
 306:./lib/ros_lib/ros/node_handle.h ****         t.deserialize(data);
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 308:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 309:./lib/ros_lib/ros/node_handle.h **** 
 310:./lib/ros_lib/ros/node_handle.h ****         this->setNow(t.data);
 311:./lib/ros_lib/ros/node_handle.h ****         last_sync_receive_time = hardware_.time();
 312:./lib/ros_lib/ros/node_handle.h ****       }
 313:./lib/ros_lib/ros/node_handle.h **** 
 314:./lib/ros_lib/ros/node_handle.h ****       Time now()
 315:./lib/ros_lib/ros/node_handle.h ****       {
 316:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 317:./lib/ros_lib/ros/node_handle.h ****         Time current_time;
 318:./lib/ros_lib/ros/node_handle.h ****         current_time.sec = ms/1000 + sec_offset;
 319:./lib/ros_lib/ros/node_handle.h ****         current_time.nsec = (ms%1000)*1000000UL + nsec_offset;
 320:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(current_time.sec, current_time.nsec);
 321:./lib/ros_lib/ros/node_handle.h ****         return current_time;
 322:./lib/ros_lib/ros/node_handle.h ****       }
 323:./lib/ros_lib/ros/node_handle.h **** 
 324:./lib/ros_lib/ros/node_handle.h ****       void setNow( Time & new_now )
 325:./lib/ros_lib/ros/node_handle.h ****       {
 326:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 327:./lib/ros_lib/ros/node_handle.h ****         sec_offset = new_now.sec - ms/1000 - 1;
 328:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 329:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 330:./lib/ros_lib/ros/node_handle.h ****       }
 331:./lib/ros_lib/ros/node_handle.h **** 
 332:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 333:./lib/ros_lib/ros/node_handle.h ****        * Topic Management
 334:./lib/ros_lib/ros/node_handle.h ****        */
 335:./lib/ros_lib/ros/node_handle.h **** 
 336:./lib/ros_lib/ros/node_handle.h ****       /* Register a new publisher */
 337:./lib/ros_lib/ros/node_handle.h ****       bool advertise(Publisher & p)
 338:./lib/ros_lib/ros/node_handle.h ****       {
 339:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_PUBLISHERS; i++){
 340:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 341:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 342:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 343:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 344:./lib/ros_lib/ros/node_handle.h ****             return true;
 345:./lib/ros_lib/ros/node_handle.h ****           }
 346:./lib/ros_lib/ros/node_handle.h ****         }
 347:./lib/ros_lib/ros/node_handle.h ****         return false;
 348:./lib/ros_lib/ros/node_handle.h ****       }
 349:./lib/ros_lib/ros/node_handle.h **** 
 350:./lib/ros_lib/ros/node_handle.h ****       /* Register a new subscriber */
 351:./lib/ros_lib/ros/node_handle.h ****       template<typename MsgT>
 352:./lib/ros_lib/ros/node_handle.h ****       bool subscribe(Subscriber< MsgT> & s){
 353:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 354:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 355:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 356:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 357:./lib/ros_lib/ros/node_handle.h ****             return true;
 358:./lib/ros_lib/ros/node_handle.h ****           }
 359:./lib/ros_lib/ros/node_handle.h ****         }
 360:./lib/ros_lib/ros/node_handle.h ****         return false;
 361:./lib/ros_lib/ros/node_handle.h ****       }
 362:./lib/ros_lib/ros/node_handle.h **** 
 363:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Server */
 364:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 365:./lib/ros_lib/ros/node_handle.h ****       bool advertiseService(ServiceServer<MReq,MRes>& srv){
 366:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 367:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 368:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 369:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 370:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 371:./lib/ros_lib/ros/node_handle.h ****             return v;
 372:./lib/ros_lib/ros/node_handle.h ****           }
 373:./lib/ros_lib/ros/node_handle.h ****         }
 374:./lib/ros_lib/ros/node_handle.h ****         return false;
 375:./lib/ros_lib/ros/node_handle.h ****       }
 376:./lib/ros_lib/ros/node_handle.h **** 
 377:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Client */
 378:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 379:./lib/ros_lib/ros/node_handle.h ****       bool serviceClient(ServiceClient<MReq, MRes>& srv){
 380:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 381:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 382:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 383:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 384:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 385:./lib/ros_lib/ros/node_handle.h ****             return v;
 386:./lib/ros_lib/ros/node_handle.h ****           }
 387:./lib/ros_lib/ros/node_handle.h ****         }
 388:./lib/ros_lib/ros/node_handle.h ****         return false;
 389:./lib/ros_lib/ros/node_handle.h ****       }
 390:./lib/ros_lib/ros/node_handle.h **** 
 391:./lib/ros_lib/ros/node_handle.h ****       void negotiateTopics()
 392:./lib/ros_lib/ros/node_handle.h ****       {
 393:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::TopicInfo ti;
 394:./lib/ros_lib/ros/node_handle.h ****         int i;
 395:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_PUBLISHERS; i++)
 396:./lib/ros_lib/ros/node_handle.h ****         {
 397:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] != 0) // non-empty slot
 398:./lib/ros_lib/ros/node_handle.h ****           {
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = publishers[i]->id_;
 400:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 401:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 402:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 403:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 404:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 405:./lib/ros_lib/ros/node_handle.h ****           }
 406:./lib/ros_lib/ros/node_handle.h ****         }
 407:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_SUBSCRIBERS; i++)
 408:./lib/ros_lib/ros/node_handle.h ****         {
 409:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] != 0) // non-empty slot
 410:./lib/ros_lib/ros/node_handle.h ****           {
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = subscribers[i]->id_;
 412:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 413:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 414:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 415:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 416:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 417:./lib/ros_lib/ros/node_handle.h ****           }
 418:./lib/ros_lib/ros/node_handle.h ****         }
 419:./lib/ros_lib/ros/node_handle.h ****         configured_ = true;
 420:./lib/ros_lib/ros/node_handle.h ****       }
 421:./lib/ros_lib/ros/node_handle.h **** 
 422:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg * msg)
 423:./lib/ros_lib/ros/node_handle.h ****       {
 424:./lib/ros_lib/ros/node_handle.h ****         if(id >= 100 && !configured_)
 425:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 426:./lib/ros_lib/ros/node_handle.h **** 
 427:./lib/ros_lib/ros/node_handle.h ****         /* serialize message */
 428:./lib/ros_lib/ros/node_handle.h ****         uint16_t l = msg->serialize(message_out+7);
 429:./lib/ros_lib/ros/node_handle.h **** 
 430:./lib/ros_lib/ros/node_handle.h ****         /* setup the header */
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[0] = 0xff;
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 435:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 437:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 438:./lib/ros_lib/ros/node_handle.h **** 
 439:./lib/ros_lib/ros/node_handle.h ****         /* calculate checksum */
 440:./lib/ros_lib/ros/node_handle.h ****         int chk = 0;
 441:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 442:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 443:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 444:./lib/ros_lib/ros/node_handle.h ****         message_out[l++] = 255 - (chk%256);
 445:./lib/ros_lib/ros/node_handle.h **** 
 446:./lib/ros_lib/ros/node_handle.h ****         if( l <= OUTPUT_SIZE ){
 447:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 448:./lib/ros_lib/ros/node_handle.h ****           return l;
 449:./lib/ros_lib/ros/node_handle.h ****         }else{
 450:./lib/ros_lib/ros/node_handle.h ****           logerror("Message from device dropped: message larger than buffer.");
 451:./lib/ros_lib/ros/node_handle.h ****           return -1;
 452:./lib/ros_lib/ros/node_handle.h ****         }
 453:./lib/ros_lib/ros/node_handle.h ****       }
 454:./lib/ros_lib/ros/node_handle.h **** 
 455:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 456:./lib/ros_lib/ros/node_handle.h ****        * Logging
 457:./lib/ros_lib/ros/node_handle.h ****        */
 458:./lib/ros_lib/ros/node_handle.h **** 
 459:./lib/ros_lib/ros/node_handle.h ****     private:
 460:./lib/ros_lib/ros/node_handle.h ****       void log(char byte, const char * msg){
 461:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::Log l;
 462:./lib/ros_lib/ros/node_handle.h ****         l.level= byte;
 463:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 464:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 465:./lib/ros_lib/ros/node_handle.h ****       }
 466:./lib/ros_lib/ros/node_handle.h **** 
 467:./lib/ros_lib/ros/node_handle.h ****     public:
 468:./lib/ros_lib/ros/node_handle.h ****       void logdebug(const char* msg){
 469:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ROSDEBUG, msg);
 470:./lib/ros_lib/ros/node_handle.h ****       }
 471:./lib/ros_lib/ros/node_handle.h ****       void loginfo(const char * msg){
 472:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::INFO, msg);
 473:./lib/ros_lib/ros/node_handle.h ****       }
 474:./lib/ros_lib/ros/node_handle.h ****       void logwarn(const char *msg){
 475:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::WARN, msg);
 476:./lib/ros_lib/ros/node_handle.h ****       }
 477:./lib/ros_lib/ros/node_handle.h ****       void logerror(const char*msg){
 478:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ERROR, msg);
 479:./lib/ros_lib/ros/node_handle.h ****       }
 480:./lib/ros_lib/ros/node_handle.h ****       void logfatal(const char*msg){
 481:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::FATAL, msg);
 482:./lib/ros_lib/ros/node_handle.h ****       }
 483:./lib/ros_lib/ros/node_handle.h **** 
 484:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 485:./lib/ros_lib/ros/node_handle.h ****        * Parameters
 486:./lib/ros_lib/ros/node_handle.h ****        */
 487:./lib/ros_lib/ros/node_handle.h **** 
 488:./lib/ros_lib/ros/node_handle.h ****     private:
 489:./lib/ros_lib/ros/node_handle.h ****       bool param_recieved;
 490:./lib/ros_lib/ros/node_handle.h ****       rosserial_msgs::RequestParamResponse req_param_resp;
 491:./lib/ros_lib/ros/node_handle.h **** 
 492:./lib/ros_lib/ros/node_handle.h ****       bool requestParam(const char * name, int time_out =  1000){
 493:./lib/ros_lib/ros/node_handle.h ****         param_recieved = false;
 494:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::RequestParamRequest req;
 495:./lib/ros_lib/ros/node_handle.h ****         req.name  = (char*)name;
 496:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_PARAMETER_REQUEST, &req);
 497:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 498:./lib/ros_lib/ros/node_handle.h ****         while(!param_recieved ){
 499:./lib/ros_lib/ros/node_handle.h ****           spinOnce();
 500:./lib/ros_lib/ros/node_handle.h ****           if (hardware_.time() > end_time) return false;
 501:./lib/ros_lib/ros/node_handle.h ****         }
 502:./lib/ros_lib/ros/node_handle.h ****         return true;
 503:./lib/ros_lib/ros/node_handle.h ****       }
 504:./lib/ros_lib/ros/node_handle.h **** 
 505:./lib/ros_lib/ros/node_handle.h ****     public:
 506:./lib/ros_lib/ros/node_handle.h ****       bool getParam(const char* name, int* param, int length =1){
 507:./lib/ros_lib/ros/node_handle.h ****         if (requestParam(name) ){
 508:./lib/ros_lib/ros/node_handle.h ****           if (length == req_param_resp.ints_length){
 509:./lib/ros_lib/ros/node_handle.h ****             //copy it over
 510:./lib/ros_lib/ros/node_handle.h ****             for(int i=0; i<length; i++)
 511:./lib/ros_lib/ros/node_handle.h ****               param[i] = req_param_resp.ints[i];
 512:./lib/ros_lib/ros/node_handle.h ****             return true;
 513:./lib/ros_lib/ros/node_handle.h ****           }
 514:./lib/ros_lib/ros/node_handle.h ****         }
 515:./lib/ros_lib/ros/node_handle.h ****         return false;
 516:./lib/ros_lib/ros/node_handle.h ****       }
 517:./lib/ros_lib/ros/node_handle.h ****       bool getParam(const char* name, float* param, int length=1){
 5376              		.loc 19 517 0
 5377              		.cfi_startproc
 5378              		@ args = 0, pretend = 0, frame = 8
 5379              		@ frame_needed = 0, uses_anonymous_args = 0
 5380              	.LVL654:
 5381 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 5382              		.save {r4, r5, r6, r7, r8, lr}
 5383              		.pad #8
 5384              	.LCFI65:
 5385              		.cfi_def_cfa_offset 32
 5386              		.cfi_offset 4, -24
 5387              		.cfi_offset 5, -20
 5388              		.cfi_offset 6, -16
 5389              		.cfi_offset 7, -12
 5390              		.cfi_offset 8, -8
 5391              		.cfi_offset 14, -4
 5392              		.loc 19 517 0
 5393 0004 9846     		mov	r8, r3
 5394              	.LBB451:
 5395              	.LBB452:
 5396              	.LBB453:
 493:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::RequestParamRequest req;
 5397              		.loc 19 493 0
 5398 0006 0023     		movs	r3, #0
 5399              	.LVL655:
 5400 0008 80F80435 		strb	r3, [r0, #1284]
 5401              	.LVL656:
 5402              	.LBB454:
 5403              	.LBB455:
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 5404              		.loc 4 19 0
 5405 000c 174B     		ldr	r3, .L291
 5406              	.LBE455:
 5407              	.LBE454:
 495:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_PARAMETER_REQUEST, &req);
 5408              		.loc 19 495 0
 5409 000e 0191     		str	r1, [sp, #4]
 5410              	.LBB457:
 5411              	.LBB456:
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 5412              		.loc 4 19 0
 5413 0010 0093     		str	r3, [sp]
 5414              	.LVL657:
 5415              	.LBE456:
 5416              	.LBE457:
 496:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 5417              		.loc 19 496 0
 5418 0012 0368     		ldr	r3, [r0]
 5419 0014 0621     		movs	r1, #6
 5420              	.LVL658:
 5421 0016 1B68     		ldr	r3, [r3]
 5422              	.LBE453:
 5423              	.LBE452:
 5424              	.LBE451:
 5425              		.loc 19 517 0
 5426 0018 1746     		mov	r7, r2
 5427              	.LBB467:
 5428              	.LBB464:
 5429              	.LBB462:
 496:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 5430              		.loc 19 496 0
 5431 001a 6A46     		mov	r2, sp
 5432              	.LVL659:
 5433              	.LBE462:
 5434              	.LBE464:
 5435              	.LBE467:
 5436              		.loc 19 517 0
 5437 001c 0446     		mov	r4, r0
 5438              	.LBB468:
 5439              	.LBB465:
 5440              	.LBB463:
 496:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 5441              		.loc 19 496 0
 5442 001e 9847     		blx	r3
 5443              	.LVL660:
 5444              	.LBB458:
 5445              	.LBB459:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 5446              		.loc 24 134 0
 5447 0020 FFF7FEFF 		bl	millis
 5448              	.LVL661:
 5449              	.LBE459:
 5450              	.LBE458:
 497:./lib/ros_lib/ros/node_handle.h ****         while(!param_recieved ){
 5451              		.loc 19 497 0
 5452 0024 00F57A70 		add	r0, r0, #1000
 5453 0028 86B2     		uxth	r6, r0
 5454              	.LVL662:
 5455              	.L284:
 498:./lib/ros_lib/ros/node_handle.h ****           spinOnce();
 5456              		.loc 19 498 0
 5457 002a 94F80455 		ldrb	r5, [r4, #1284]	@ zero_extendqisi2
 5458 002e 45B9     		cbnz	r5, .L288
 499:./lib/ros_lib/ros/node_handle.h ****           if (hardware_.time() > end_time) return false;
 5459              		.loc 19 499 0
 5460 0030 2368     		ldr	r3, [r4]
 5461 0032 2046     		mov	r0, r4
 5462 0034 5B68     		ldr	r3, [r3, #4]
 5463 0036 9847     		blx	r3
 5464              	.LVL663:
 5465              	.LBB460:
 5466              	.LBB461:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 5467              		.loc 24 134 0
 5468 0038 FFF7FEFF 		bl	millis
 5469              	.LVL664:
 5470              	.LBE461:
 5471              	.LBE460:
 500:./lib/ros_lib/ros/node_handle.h ****         }
 5472              		.loc 19 500 0
 5473 003c B042     		cmp	r0, r6
 5474 003e F4D9     		bls	.L284
 5475 0040 0FE0     		b	.L285
 5476              	.LVL665:
 5477              	.L288:
 5478              	.LBE463:
 5479              	.LBE465:
 5480              	.LBB466:
 518:./lib/ros_lib/ros/node_handle.h ****         if (requestParam(name) ){
 519:./lib/ros_lib/ros/node_handle.h ****           if (length == req_param_resp.floats_length){
 5481              		.loc 19 519 0
 5482 0042 94F81825 		ldrb	r2, [r4, #1304]	@ zero_extendqisi2
 5483 0046 4245     		cmp	r2, r8
 5484 0048 0AD1     		bne	.L287
 5485 004a 0023     		movs	r3, #0
 5486              	.L286:
 5487              	.LVL666:
 5488              	.LBE466:
 5489              	.LBE468:
 5490              	.LBB469:
 5491              	.LBB470:
 520:./lib/ros_lib/ros/node_handle.h ****             //copy it over
 521:./lib/ros_lib/ros/node_handle.h ****             for(int i=0; i<length; i++)
 5492              		.loc 19 521 0
 5493 004c 9342     		cmp	r3, r2
 5494 004e 08DA     		bge	.L285
 522:./lib/ros_lib/ros/node_handle.h ****               param[i] = req_param_resp.floats[i];
 5495              		.loc 19 522 0
 5496 0050 D4F82015 		ldr	r1, [r4, #1312]
 5497 0054 51F82310 		ldr	r1, [r1, r3, lsl #2]	@ float
 5498 0058 47F82310 		str	r1, [r7, r3, lsl #2]	@ float
 521:./lib/ros_lib/ros/node_handle.h ****               param[i] = req_param_resp.floats[i];
 5499              		.loc 19 521 0
 5500 005c 0133     		adds	r3, r3, #1
 5501              	.LVL667:
 5502 005e F5E7     		b	.L286
 5503              	.LVL668:
 5504              	.L287:
 5505              	.LBE470:
 5506              	.LBE469:
 523:./lib/ros_lib/ros/node_handle.h ****             return true;
 524:./lib/ros_lib/ros/node_handle.h ****           }
 525:./lib/ros_lib/ros/node_handle.h ****         }
 526:./lib/ros_lib/ros/node_handle.h ****         return false;
 5507              		.loc 19 526 0
 5508 0060 0025     		movs	r5, #0
 5509              	.L285:
 527:./lib/ros_lib/ros/node_handle.h ****       }
 5510              		.loc 19 527 0
 5511 0062 2846     		mov	r0, r5
 5512 0064 02B0     		add	sp, sp, #8
 5513              	.LCFI66:
 5514              		.cfi_def_cfa_offset 24
 5515              		@ sp needed
 5516 0066 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5517              	.LVL669:
 5518              	.L292:
 5519 006a 00BF     		.align	2
 5520              	.L291:
 5521 006c 08000000 		.word	_ZTVN14rosserial_msgs19RequestParamRequestE+8
 5522              		.cfi_endproc
 5523              	.LFE1366:
 5524              		.fnend
 5526              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc,"axG",%p
 5527              		.align	1
 5528              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5529              		.thumb
 5530              		.thumb_func
 5532              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:
 5533              		.fnstart
 5534              	.LFB1367:
 477:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ERROR, msg);
 5535              		.loc 19 477 0
 5536              		.cfi_startproc
 5537              		@ args = 0, pretend = 0, frame = 16
 5538              		@ frame_needed = 0, uses_anonymous_args = 0
 5539              	.LVL670:
 5540 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 5541              		.save {lr}
 5542              		.pad #20
 5543              	.LCFI67:
 5544              		.cfi_def_cfa_offset 24
 5545              		.cfi_offset 14, -4
 5546              	.LVL671:
 5547              	.LBB477:
 5548              	.LBB478:
 5549              	.LBB479:
 5550              	.LBB480:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 5551              		.loc 3 25 0
 5552 0002 074B     		ldr	r3, .L294
 5553              	.LBE480:
 5554              	.LBE479:
 463:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 5555              		.loc 19 463 0
 5556 0004 0391     		str	r1, [sp, #12]
 5557              	.LBB482:
 5558              	.LBB481:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 5559              		.loc 3 25 0
 5560 0006 0193     		str	r3, [sp, #4]
 5561              	.LVL672:
 5562              	.LBE481:
 5563              	.LBE482:
 462:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 5564              		.loc 19 462 0
 5565 0008 0323     		movs	r3, #3
 5566 000a 8DF80830 		strb	r3, [sp, #8]
 464:./lib/ros_lib/ros/node_handle.h ****       }
 5567              		.loc 19 464 0
 5568 000e 0368     		ldr	r3, [r0]
 5569 0010 01AA     		add	r2, sp, #4
 5570 0012 1B68     		ldr	r3, [r3]
 5571 0014 0721     		movs	r1, #7
 5572              	.LVL673:
 5573 0016 9847     		blx	r3
 5574              	.LVL674:
 5575              	.LBE478:
 5576              	.LBE477:
 479:./lib/ros_lib/ros/node_handle.h ****       void logfatal(const char*msg){
 5577              		.loc 19 479 0
 5578 0018 05B0     		add	sp, sp, #20
 5579              	.LCFI68:
 5580              		.cfi_def_cfa_offset 4
 5581              		@ sp needed
 5582 001a 5DF804FB 		ldr	pc, [sp], #4
 5583              	.L295:
 5584 001e 00BF     		.align	2
 5585              	.L294:
 5586 0020 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 5587              		.cfi_endproc
 5588              	.LFE1367:
 5589              		.fnend
 5591              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE,"
 5592              		.align	1
 5593              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 5594              		.thumb
 5595              		.thumb_func
 5597              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:
 5598              		.fnstart
 5599              	.LFB1377:
 422:./lib/ros_lib/ros/node_handle.h ****       {
 5600              		.loc 19 422 0
 5601              		.cfi_startproc
 5602              		@ args = 0, pretend = 0, frame = 0
 5603              		@ frame_needed = 0, uses_anonymous_args = 0
 5604              	.LVL675:
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 5605              		.loc 19 424 0
 5606 0000 6329     		cmp	r1, #99
 422:./lib/ros_lib/ros/node_handle.h ****       {
 5607              		.loc 19 422 0
 5608 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 5609              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 5610              	.LCFI69:
 5611              		.cfi_def_cfa_offset 32
 5612              		.cfi_offset 3, -32
 5613              		.cfi_offset 4, -28
 5614              		.cfi_offset 5, -24
 5615              		.cfi_offset 6, -20
 5616              		.cfi_offset 7, -16
 5617              		.cfi_offset 8, -12
 5618              		.cfi_offset 9, -8
 5619              		.cfi_offset 14, -4
 422:./lib/ros_lib/ros/node_handle.h ****       {
 5620              		.loc 19 422 0
 5621 0006 0446     		mov	r4, r0
 5622 0008 0E46     		mov	r6, r1
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 5623              		.loc 19 424 0
 5624 000a 03DD     		ble	.L297
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 5625              		.loc 19 424 0 is_stmt 0 discriminator 1
 5626 000c 90F8F454 		ldrb	r5, [r0, #1268]	@ zero_extendqisi2
 5627 0010 002D     		cmp	r5, #0
 5628 0012 4FD0     		beq	.L298
 5629              	.L297:
 428:./lib/ros_lib/ros/node_handle.h **** 
 5630              		.loc 19 428 0 is_stmt 1
 5631 0014 1368     		ldr	r3, [r2]
 5632 0016 04F21F21 		addw	r1, r4, #543
 5633              	.LVL676:
 5634 001a 1B68     		ldr	r3, [r3]
 5635 001c 1046     		mov	r0, r2
 5636              	.LVL677:
 5637 001e 9847     		blx	r3
 5638              	.LVL678:
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 5639              		.loc 19 431 0
 5640 0020 FF22     		movs	r2, #255
 5641 0022 84F81822 		strb	r2, [r4, #536]
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 5642              		.loc 19 432 0
 5643 0026 FE22     		movs	r2, #254
 428:./lib/ros_lib/ros/node_handle.h **** 
 5644              		.loc 19 428 0
 5645 0028 83B2     		uxth	r3, r0
 5646              	.LVL679:
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 5647              		.loc 19 432 0
 5648 002a 84F81922 		strb	r2, [r4, #537]
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 5649              		.loc 19 433 0
 5650 002e C2B2     		uxtb	r2, r0
 434:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 5651              		.loc 19 434 0
 5652 0030 C0F30720 		ubfx	r0, r0, #8, #8
 5653 0034 84F81B02 		strb	r0, [r4, #539]
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 5654              		.loc 19 435 0
 5655 0038 1044     		add	r0, r0, r2
 5656 003a C043     		mvns	r0, r0
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 5657              		.loc 19 436 0
 5658 003c 84F81D62 		strb	r6, [r4, #541]
 437:./lib/ros_lib/ros/node_handle.h **** 
 5659              		.loc 19 437 0
 5660 0040 46F30726 		sbfx	r6, r6, #8, #8
 5661              	.LVL680:
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 5662              		.loc 19 433 0
 5663 0044 84F81A22 		strb	r2, [r4, #538]
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 5664              		.loc 19 435 0
 5665 0048 84F81C02 		strb	r0, [r4, #540]
 437:./lib/ros_lib/ros/node_handle.h **** 
 5666              		.loc 19 437 0
 5667 004c 84F81E62 		strb	r6, [r4, #542]
 5668              	.LVL681:
 5669 0050 04F50770 		add	r0, r4, #540
 5670              	.LBB487:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 5671              		.loc 19 441 0
 5672 0054 0521     		movs	r1, #5
 5673              	.LBE487:
 440:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 5674              		.loc 19 440 0
 5675 0056 0022     		movs	r2, #0
 5676              	.LBB488:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 5677              		.loc 19 441 0
 5678 0058 9E1D     		adds	r6, r3, #6
 5679              	.LVL682:
 5680              	.L300:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 5681              		.loc 19 441 0 is_stmt 0 discriminator 3
 5682 005a B142     		cmp	r1, r6
 5683 005c 04DC     		bgt	.L299
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 5684              		.loc 19 442 0 is_stmt 1 discriminator 2
 5685 005e 10F8015F 		ldrb	r5, [r0, #1]!	@ zero_extendqisi2
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 5686              		.loc 19 441 0 discriminator 2
 5687 0062 0131     		adds	r1, r1, #1
 5688              	.LVL683:
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 5689              		.loc 19 442 0 discriminator 2
 5690 0064 2A44     		add	r2, r2, r5
 5691              	.LVL684:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 5692              		.loc 19 441 0 discriminator 2
 5693 0066 F8E7     		b	.L300
 5694              	.L299:
 5695              	.LVL685:
 5696              	.LBE488:
 444:./lib/ros_lib/ros/node_handle.h **** 
 5697              		.loc 19 444 0
 5698 0068 D243     		mvns	r2, r2
 5699              	.LVL686:
 5700 006a 03F10806 		add	r6, r3, #8
 5701 006e 0733     		adds	r3, r3, #7
 5702              	.LVL687:
 5703 0070 B6B2     		uxth	r6, r6
 5704              	.LVL688:
 5705 0072 9BB2     		uxth	r3, r3
 5706 0074 2344     		add	r3, r3, r4
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 5707              		.loc 19 446 0
 5708 0076 B6F5007F 		cmp	r6, #512
 444:./lib/ros_lib/ros/node_handle.h **** 
 5709              		.loc 19 444 0
 5710 007a 83F81822 		strb	r2, [r3, #536]
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 5711              		.loc 19 446 0
 5712 007e 13D8     		bhi	.L301
 447:./lib/ros_lib/ros/node_handle.h ****           return l;
 5713              		.loc 19 447 0
 5714 0080 04F50678 		add	r8, r4, #536
 5715 0084 3546     		mov	r5, r6
 5716              	.LVL689:
 5717 0086 4746     		mov	r7, r8
 5718              	.LBB489:
 5719              	.LBB490:
 128:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 5720              		.loc 24 128 0
 5721 0088 DFF83490 		ldr	r9, .L308+4
 5722              	.LVL690:
 5723              	.L303:
 127:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 5724              		.loc 24 127 0
 5725 008c C8EB0703 		rsb	r3, r8, r7
 5726 0090 9E42     		cmp	r6, r3
 5727 0092 0FDD     		ble	.L298
 5728              	.L306:
 128:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 5729              		.loc 24 128 0
 5730 0094 B9F80030 		ldrh	r3, [r9]
 5731 0098 5B06     		lsls	r3, r3, #25
 5732 009a FBD5     		bpl	.L306
 129:./lib/ros_lib/ArduinoHardware.h ****       }
 5733              		.loc 24 129 0
 5734 009c 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 5735              	.LVL691:
 5736 00a0 6068     		ldr	r0, [r4, #4]
 5737 00a2 FFF7FEFF 		bl	USART_SendData
 5738              	.LVL692:
 5739 00a6 F1E7     		b	.L303
 5740              	.LVL693:
 5741              	.L301:
 5742              	.LBE490:
 5743              	.LBE489:
 450:./lib/ros_lib/ros/node_handle.h ****           return -1;
 5744              		.loc 19 450 0
 5745 00a8 0449     		ldr	r1, .L308
 5746              	.LVL694:
 5747 00aa 2046     		mov	r0, r4
 5748 00ac FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5749              	.LVL695:
 451:./lib/ros_lib/ros/node_handle.h ****         }
 5750              		.loc 19 451 0
 5751 00b0 4FF0FF35 		mov	r5, #-1
 5752              	.LVL696:
 5753              	.L298:
 453:./lib/ros_lib/ros/node_handle.h **** 
 5754              		.loc 19 453 0
 5755 00b4 2846     		mov	r0, r5
 5756 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5757              	.LVL697:
 5758              	.L309:
 5759 00ba 00BF     		.align	2
 5760              	.L308:
 5761 00bc C7030000 		.word	.LC36
 5762 00c0 00380140 		.word	1073821696
 5763              		.cfi_endproc
 5764              	.LFE1377:
 5765              		.fnend
 5767              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv,"a
 5768              		.align	1
 5769              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 5770              		.thumb
 5771              		.thumb_func
 5773              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:
 5774              		.fnstart
 5775              	.LFB1372:
 294:./lib/ros_lib/ros/node_handle.h ****       {
 5776              		.loc 19 294 0
 5777              		.cfi_startproc
 5778              		@ args = 0, pretend = 0, frame = 16
 5779              		@ frame_needed = 0, uses_anonymous_args = 0
 5780              	.LVL698:
 5781 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 5782              		.save {r4, lr}
 5783              		.pad #16
 5784              	.LCFI70:
 5785              		.cfi_def_cfa_offset 24
 5786              		.cfi_offset 4, -8
 5787              		.cfi_offset 14, -4
 5788              	.LVL699:
 5789              	.LBB491:
 5790              	.LBB492:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 5791              		.loc 1 19 0
 5792 0002 084B     		ldr	r3, .L311
 5793              	.LBE492:
 5794              	.LBE491:
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 5795              		.loc 19 297 0
 5796 0004 01AA     		add	r2, sp, #4
 5797              	.LVL700:
 5798              	.LBB496:
 5799              	.LBB495:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 5800              		.loc 1 19 0
 5801 0006 0193     		str	r3, [sp, #4]
 5802              	.LVL701:
 5803              	.LBB493:
 5804              	.LBB494:
 5805              		.loc 26 52 0
 5806 0008 0023     		movs	r3, #0
 5807 000a 0293     		str	r3, [sp, #8]
 5808 000c 0393     		str	r3, [sp, #12]
 5809              	.LVL702:
 5810              	.LBE494:
 5811              	.LBE493:
 5812              	.LBE495:
 5813              	.LBE496:
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 5814              		.loc 19 297 0
 5815 000e 0368     		ldr	r3, [r0]
 5816 0010 0A21     		movs	r1, #10
 5817 0012 1B68     		ldr	r3, [r3]
 294:./lib/ros_lib/ros/node_handle.h ****       {
 5818              		.loc 19 294 0
 5819 0014 0446     		mov	r4, r0
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 5820              		.loc 19 297 0
 5821 0016 9847     		blx	r3
 5822              	.LVL703:
 5823              	.LBB497:
 5824              	.LBB498:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 5825              		.loc 24 134 0
 5826 0018 FFF7FEFF 		bl	millis
 5827              	.LVL704:
 5828              	.LBE498:
 5829              	.LBE497:
 298:./lib/ros_lib/ros/node_handle.h ****       }
 5830              		.loc 19 298 0
 5831 001c E060     		str	r0, [r4, #12]
 299:./lib/ros_lib/ros/node_handle.h **** 
 5832              		.loc 19 299 0
 5833 001e 04B0     		add	sp, sp, #16
 5834              	.LCFI71:
 5835              		.cfi_def_cfa_offset 8
 5836              		@ sp needed
 5837 0020 10BD     		pop	{r4, pc}
 5838              	.LVL705:
 5839              	.L312:
 5840 0022 00BF     		.align	2
 5841              	.L311:
 5842 0024 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 5843              		.cfi_endproc
 5844              	.LFE1372:
 5845              		.fnend
 5847              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv,"a
 5848              		.align	1
 5849              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 5850              		.thumb
 5851              		.thumb_func
 5853              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:
 5854              		.fnstart
 5855              	.LFB1373:
 391:./lib/ros_lib/ros/node_handle.h ****       {
 5856              		.loc 19 391 0
 5857              		.cfi_startproc
 5858              		@ args = 0, pretend = 0, frame = 24
 5859              		@ frame_needed = 0, uses_anonymous_args = 0
 5860              	.LVL706:
 5861 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5862              		.save {r4, r5, r6, r7, r8, lr}
 5863              	.LCFI72:
 5864              		.cfi_def_cfa_offset 24
 5865              		.cfi_offset 4, -24
 5866              		.cfi_offset 5, -20
 5867              		.cfi_offset 6, -16
 5868              		.cfi_offset 7, -12
 5869              		.cfi_offset 8, -8
 5870              		.cfi_offset 14, -4
 5871 0004 0446     		mov	r4, r0
 5872              	.LBB504:
 5873              	.LBB505:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 5874              		.loc 2 34 0
 5875 0006 2B4B     		ldr	r3, .L326
 5876              	.LBE505:
 5877              	.LBE504:
 391:./lib/ros_lib/ros/node_handle.h ****       {
 5878              		.loc 19 391 0
 5879              		.pad #24
 5880 0008 86B0     		sub	sp, sp, #24
 5881              	.LCFI73:
 5882              		.cfi_def_cfa_offset 48
 5883              	.LVL707:
 5884              	.LBB507:
 5885              	.LBB506:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 5886              		.loc 2 34 0
 5887 000a 0093     		str	r3, [sp]
 5888 000c 2A4B     		ldr	r3, .L326+4
 5889 000e 0022     		movs	r2, #0
 5890 0010 ADF80420 		strh	r2, [sp, #4]	@ movhi
 5891 0014 0293     		str	r3, [sp, #8]
 5892 0016 0393     		str	r3, [sp, #12]
 5893 0018 0493     		str	r3, [sp, #16]
 5894 001a 0592     		str	r2, [sp, #20]
 5895              	.LVL708:
 5896 001c 00F21446 		addw	r6, r0, #1044
 5897 0020 00F58F65 		add	r5, r0, #1144
 5898              	.LBE506:
 5899              	.LBE507:
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 5900              		.loc 19 403 0
 5901 0024 4FF40077 		mov	r7, #512
 5902              	.LVL709:
 5903              	.L315:
 397:./lib/ros_lib/ros/node_handle.h ****           {
 5904              		.loc 19 397 0
 5905 0028 56F8043F 		ldr	r3, [r6, #4]!
 5906 002c BBB1     		cbz	r3, .L314
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 5907              		.loc 19 399 0
 5908 002e 9A68     		ldr	r2, [r3, #8]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 5909              		.loc 19 401 0
 5910 0030 5868     		ldr	r0, [r3, #4]
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 5911              		.loc 19 399 0
 5912 0032 ADF80420 		strh	r2, [sp, #4]	@ movhi
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 5913              		.loc 19 400 0
 5914 0036 1A68     		ldr	r2, [r3]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 5915              		.loc 19 401 0
 5916 0038 0368     		ldr	r3, [r0]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 5917              		.loc 19 400 0
 5918 003a 0292     		str	r2, [sp, #8]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 5919              		.loc 19 401 0
 5920 003c 9B68     		ldr	r3, [r3, #8]
 5921 003e 9847     		blx	r3
 5922              	.LVL710:
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 5923              		.loc 19 402 0
 5924 0040 3368     		ldr	r3, [r6]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 5925              		.loc 19 401 0
 5926 0042 0390     		str	r0, [sp, #12]
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 5927              		.loc 19 402 0
 5928 0044 5868     		ldr	r0, [r3, #4]
 5929 0046 0368     		ldr	r3, [r0]
 5930 0048 DB68     		ldr	r3, [r3, #12]
 5931 004a 9847     		blx	r3
 5932              	.LVL711:
 5933 004c 3168     		ldr	r1, [r6]
 404:./lib/ros_lib/ros/node_handle.h ****           }
 5934              		.loc 19 404 0
 5935 004e 2368     		ldr	r3, [r4]
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 5936              		.loc 19 402 0
 5937 0050 0490     		str	r0, [sp, #16]
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 5938              		.loc 19 403 0
 5939 0052 0597     		str	r7, [sp, #20]
 5940              	.LVL712:
 404:./lib/ros_lib/ros/node_handle.h ****           }
 5941              		.loc 19 404 0
 5942 0054 1B68     		ldr	r3, [r3]
 5943 0056 6A46     		mov	r2, sp
 5944 0058 0969     		ldr	r1, [r1, #16]
 5945              	.LVL713:
 5946 005a 2046     		mov	r0, r4
 5947 005c 9847     		blx	r3
 5948              	.LVL714:
 5949              	.L314:
 395:./lib/ros_lib/ros/node_handle.h ****         {
 5950              		.loc 19 395 0 discriminator 2
 5951 005e AE42     		cmp	r6, r5
 5952 0060 E2D1     		bne	.L315
 5953 0062 04F2DC46 		addw	r6, r4, #1244
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 5954              		.loc 19 415 0
 5955 0066 4FF40077 		mov	r7, #512
 5956              	.L317:
 409:./lib/ros_lib/ros/node_handle.h ****           {
 5957              		.loc 19 409 0
 5958 006a 55F8040F 		ldr	r0, [r5, #4]!
 5959 006e C8B1     		cbz	r0, .L316
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 5960              		.loc 19 411 0
 5961 0070 4368     		ldr	r3, [r0, #4]
 5962 0072 ADF80430 		strh	r3, [sp, #4]	@ movhi
 412:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 5963              		.loc 19 412 0
 5964 0076 8368     		ldr	r3, [r0, #8]
 5965 0078 0293     		str	r3, [sp, #8]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 5966              		.loc 19 413 0
 5967 007a 0368     		ldr	r3, [r0]
 5968 007c 9B68     		ldr	r3, [r3, #8]
 5969 007e 9847     		blx	r3
 5970              	.LVL715:
 5971 0080 0390     		str	r0, [sp, #12]
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 5972              		.loc 19 414 0
 5973 0082 2868     		ldr	r0, [r5]
 5974 0084 0368     		ldr	r3, [r0]
 5975 0086 DB68     		ldr	r3, [r3, #12]
 5976 0088 9847     		blx	r3
 5977              	.LVL716:
 416:./lib/ros_lib/ros/node_handle.h ****           }
 5978              		.loc 19 416 0
 5979 008a 2368     		ldr	r3, [r4]
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 5980              		.loc 19 414 0
 5981 008c 0490     		str	r0, [sp, #16]
 416:./lib/ros_lib/ros/node_handle.h ****           }
 5982              		.loc 19 416 0
 5983 008e 2868     		ldr	r0, [r5]
 5984 0090 D3F80080 		ldr	r8, [r3]
 5985 0094 0368     		ldr	r3, [r0]
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 5986              		.loc 19 415 0
 5987 0096 0597     		str	r7, [sp, #20]
 416:./lib/ros_lib/ros/node_handle.h ****           }
 5988              		.loc 19 416 0
 5989 0098 5B68     		ldr	r3, [r3, #4]
 5990 009a 9847     		blx	r3
 5991              	.LVL717:
 5992 009c 6A46     		mov	r2, sp
 5993 009e 0146     		mov	r1, r0
 5994 00a0 2046     		mov	r0, r4
 5995 00a2 C047     		blx	r8
 5996              	.LVL718:
 5997              	.L316:
 407:./lib/ros_lib/ros/node_handle.h ****         {
 5998              		.loc 19 407 0 discriminator 2
 5999 00a4 AE42     		cmp	r6, r5
 6000 00a6 E0D1     		bne	.L317
 419:./lib/ros_lib/ros/node_handle.h ****       }
 6001              		.loc 19 419 0
 6002 00a8 0123     		movs	r3, #1
 6003 00aa 84F8F434 		strb	r3, [r4, #1268]
 420:./lib/ros_lib/ros/node_handle.h **** 
 6004              		.loc 19 420 0
 6005 00ae 06B0     		add	sp, sp, #24
 6006              	.LCFI74:
 6007              		.cfi_def_cfa_offset 24
 6008              	.LVL719:
 6009              		@ sp needed
 6010 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6011              	.LVL720:
 6012              	.L327:
 6013              		.align	2
 6014              	.L326:
 6015 00b4 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 6016 00b8 C6030000 		.word	.LC35
 6017              		.cfi_endproc
 6018              	.LFE1373:
 6019              		.fnend
 6021              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh,"axG",%pr
 6022              		.align	1
 6023              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 6024              		.thumb
 6025              		.thumb_func
 6027              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:
 6028              		.fnstart
 6029              	.LFB1374:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 6030              		.loc 19 301 0
 6031              		.cfi_startproc
 6032              		@ args = 0, pretend = 0, frame = 16
 6033              		@ frame_needed = 0, uses_anonymous_args = 0
 6034              	.LVL721:
 6035 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 6036              		.save {r4, r5, r6, lr}
 6037              		.pad #16
 6038              	.LCFI75:
 6039              		.cfi_def_cfa_offset 32
 6040              		.cfi_offset 4, -16
 6041              		.cfi_offset 5, -12
 6042              		.cfi_offset 6, -8
 6043              		.cfi_offset 14, -4
 6044              	.LVL722:
 6045              	.LBB522:
 6046              	.LBB523:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 6047              		.loc 1 19 0
 6048 0002 1C4B     		ldr	r3, .L329
 6049              	.LBE523:
 6050              	.LBE522:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 6051              		.loc 19 301 0
 6052 0004 0446     		mov	r4, r0
 6053              	.LBB527:
 6054              	.LBB526:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 6055              		.loc 1 19 0
 6056 0006 0193     		str	r3, [sp, #4]
 6057              	.LVL723:
 6058              	.LBB524:
 6059              	.LBB525:
 6060              		.loc 26 52 0
 6061 0008 0023     		movs	r3, #0
 6062 000a 0293     		str	r3, [sp, #8]
 6063 000c 0393     		str	r3, [sp, #12]
 6064              	.LVL724:
 6065              	.LBE525:
 6066              	.LBE524:
 6067              	.LBE526:
 6068              	.LBE527:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 6069              		.loc 19 301 0
 6070 000e 0D46     		mov	r5, r1
 6071              	.LBB528:
 6072              	.LBB529:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 6073              		.loc 24 134 0
 6074 0010 FFF7FEFF 		bl	millis
 6075              	.LVL725:
 6076              	.LBE529:
 6077              	.LBE528:
 304:./lib/ros_lib/ros/node_handle.h **** 
 6078              		.loc 19 304 0
 6079 0014 E268     		ldr	r2, [r4, #12]
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 6080              		.loc 19 306 0
 6081 0016 2946     		mov	r1, r5
 304:./lib/ros_lib/ros/node_handle.h **** 
 6082              		.loc 19 304 0
 6083 0018 861A     		subs	r6, r0, r2
 6084              	.LVL726:
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 6085              		.loc 19 307 0
 6086 001a 4FF47A75 		mov	r5, #1000
 6087              	.LVL727:
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 6088              		.loc 19 306 0
 6089 001e 01A8     		add	r0, sp, #4
 6090 0020 FFF7FEFF 		bl	_ZN8std_msgs4Time11deserializeEPh
 6091              	.LVL728:
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 6092              		.loc 19 307 0
 6093 0024 B6FBF5F2 		udiv	r2, r6, r5
 6094 0028 029B     		ldr	r3, [sp, #8]
 6095 002a 1344     		add	r3, r3, r2
 308:./lib/ros_lib/ros/node_handle.h **** 
 6096              		.loc 19 308 0
 6097 002c 05FB1262 		mls	r2, r5, r2, r6
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 6098              		.loc 19 307 0
 6099 0030 0293     		str	r3, [sp, #8]
 308:./lib/ros_lib/ros/node_handle.h **** 
 6100              		.loc 19 308 0
 6101 0032 114E     		ldr	r6, .L329+4
 6102              	.LVL729:
 6103 0034 039B     		ldr	r3, [sp, #12]
 6104 0036 06FB0232 		mla	r2, r6, r2, r3
 6105 003a 0392     		str	r2, [sp, #12]
 6106              	.LVL730:
 6107              	.LBB530:
 6108              	.LBB531:
 6109              	.LBB532:
 6110              	.LBB533:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 6111              		.loc 24 134 0
 6112 003c FFF7FEFF 		bl	millis
 6113              	.LVL731:
 6114              	.LBE533:
 6115              	.LBE532:
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 6116              		.loc 19 327 0
 6117 0040 B0FBF5F3 		udiv	r3, r0, r5
 6118 0044 029A     		ldr	r2, [sp, #8]
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 6119              		.loc 19 328 0
 6120 0046 0399     		ldr	r1, [sp, #12]
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 6121              		.loc 19 327 0
 6122 0048 013A     		subs	r2, r2, #1
 6123 004a D21A     		subs	r2, r2, r3
 6124 004c 2261     		str	r2, [r4, #16]
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 6125              		.loc 19 328 0
 6126 004e 0B4A     		ldr	r2, .L329+8
 6127 0050 05FB1300 		mls	r0, r5, r3, r0
 6128              	.LVL732:
 6129 0054 0A44     		add	r2, r2, r1
 6130 0056 2146     		mov	r1, r4
 6131 0058 06FB1023 		mls	r3, r6, r0, r2
 329:./lib/ros_lib/ros/node_handle.h ****       }
 6132              		.loc 19 329 0
 6133 005c 04F11000 		add	r0, r4, #16
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 6134              		.loc 19 328 0
 6135 0060 41F8143F 		str	r3, [r1, #20]!
 329:./lib/ros_lib/ros/node_handle.h ****       }
 6136              		.loc 19 329 0
 6137 0064 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 6138              	.LVL733:
 6139              	.LBE531:
 6140              	.LBE530:
 6141              	.LBB534:
 6142              	.LBB535:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 6143              		.loc 24 134 0
 6144 0068 FFF7FEFF 		bl	millis
 6145              	.LVL734:
 6146              	.LBE535:
 6147              	.LBE534:
 311:./lib/ros_lib/ros/node_handle.h ****       }
 6148              		.loc 19 311 0
 6149 006c C4F8FC04 		str	r0, [r4, #1276]
 312:./lib/ros_lib/ros/node_handle.h **** 
 6150              		.loc 19 312 0
 6151 0070 04B0     		add	sp, sp, #16
 6152              	.LCFI76:
 6153              		.cfi_def_cfa_offset 16
 6154              		@ sp needed
 6155 0072 70BD     		pop	{r4, r5, r6, pc}
 6156              	.LVL735:
 6157              	.L330:
 6158              		.align	2
 6159              	.L329:
 6160 0074 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 6161 0078 40420F00 		.word	1000000
 6162 007c 00CA9A3B 		.word	1000000000
 6163              		.cfi_endproc
 6164              	.LFE1374:
 6165              		.fnend
 6167              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv,"axG",%pro
 6168              		.align	1
 6169              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 6170              		.thumb
 6171              		.thumb_func
 6173              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:
 6174              		.fnstart
 6175              	.LFB1365:
 184:./lib/ros_lib/ros/node_handle.h **** 
 6176              		.loc 19 184 0
 6177              		.cfi_startproc
 6178              		@ args = 0, pretend = 0, frame = 0
 6179              		@ frame_needed = 0, uses_anonymous_args = 0
 6180              	.LVL736:
 6181 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 6182              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 6183              	.LCFI77:
 6184              		.cfi_def_cfa_offset 32
 6185              		.cfi_offset 3, -32
 6186              		.cfi_offset 4, -28
 6187              		.cfi_offset 5, -24
 6188              		.cfi_offset 6, -20
 6189              		.cfi_offset 7, -16
 6190              		.cfi_offset 8, -12
 6191              		.cfi_offset 9, -8
 6192              		.cfi_offset 14, -4
 184:./lib/ros_lib/ros/node_handle.h **** 
 6193              		.loc 19 184 0
 6194 0004 0446     		mov	r4, r0
 6195              	.LVL737:
 6196              	.LBB543:
 6197              	.LBB544:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 6198              		.loc 24 134 0
 6199 0006 FFF7FEFF 		bl	millis
 6200              	.LVL738:
 6201              	.LBE544:
 6202              	.LBE543:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 6203              		.loc 19 188 0
 6204 000a 42F6F822 		movw	r2, #11000
 6205 000e D4F8FC34 		ldr	r3, [r4, #1276]
 6206              	.LBB546:
 6207              	.LBB545:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 6208              		.loc 24 134 0
 6209 0012 0646     		mov	r6, r0
 6210              	.LVL739:
 6211              	.LBE545:
 6212              	.LBE546:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 6213              		.loc 19 188 0
 6214 0014 C31A     		subs	r3, r0, r3
 6215 0016 9342     		cmp	r3, r2
 189:./lib/ros_lib/ros/node_handle.h ****          }
 6216              		.loc 19 189 0
 6217 0018 84BF     		itt	hi
 6218 001a 0023     		movhi	r3, #0
 6219 001c 84F8F434 		strbhi	r3, [r4, #1268]
 193:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 6220              		.loc 19 193 0
 6221 0020 D4F8E034 		ldr	r3, [r4, #1248]
 6222 0024 33B1     		cbz	r3, .L333
 194:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 6223              		.loc 19 194 0
 6224 0026 D4F80035 		ldr	r3, [r4, #1280]
 6225 002a 8342     		cmp	r3, r0
 195:./lib/ros_lib/ros/node_handle.h ****           }
 6226              		.loc 19 195 0
 6227 002c 3CBF     		itt	cc
 6228 002e 0023     		movcc	r3, #0
 6229 0030 C4F8E034 		strcc	r3, [r4, #1248]
 6230              	.L333:
 6231              	.LBB547:
 6232              	.LBB548:
 6233              	.LBB549:
 118:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 6234              		.loc 24 118 0
 6235 0034 744F     		ldr	r7, .L373
 6236              	.LBE549:
 6237              	.LBE548:
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 6238              		.loc 19 252 0
 6239 0036 4FF00008 		mov	r8, #0
 269:./lib/ros_lib/ros/node_handle.h ****               }
 6240              		.loc 19 269 0
 6241 003a 04F11809 		add	r9, r4, #24
 6242              	.LVL740:
 6243              	.L334:
 6244              	.LBB552:
 6245              	.LBB550:
 118:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 6246              		.loc 24 118 0
 6247 003e BA6A     		ldr	r2, [r7, #40]
 6248 0040 7B6A     		ldr	r3, [r7, #36]
 6249 0042 9A42     		cmp	r2, r3
 6250 0044 00F0CC80 		beq	.L335
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 6251              		.loc 24 121 0
 6252 0048 7B6A     		ldr	r3, [r7, #36]
 6253              	.LBE550:
 6254              	.LBE552:
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 6255              		.loc 19 206 0
 6256 004a D4F8E054 		ldr	r5, [r4, #1248]
 6257              	.LBB553:
 6258              	.LBB551:
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 6259              		.loc 24 121 0
 6260 004e 07EB4303 		add	r3, r7, r3, lsl #1
 6261 0052 9B8D     		ldrh	r3, [r3, #44]
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 6262              		.loc 24 122 0
 6263 0054 7A6A     		ldr	r2, [r7, #36]
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 6264              		.loc 24 121 0
 6265 0056 9BB2     		uxth	r3, r3
 6266              	.LVL741:
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 6267              		.loc 24 122 0
 6268 0058 0132     		adds	r2, r2, #1
 6269 005a C2F30802 		ubfx	r2, r2, #0, #9
 6270 005e 7A62     		str	r2, [r7, #36]
 6271              	.LVL742:
 6272              	.LBE551:
 6273              	.LBE553:
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 6274              		.loc 19 205 0
 6275 0060 D4F8F024 		ldr	r2, [r4, #1264]
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 6276              		.loc 19 206 0
 6277 0064 072D     		cmp	r5, #7
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 6278              		.loc 19 205 0
 6279 0066 1A44     		add	r2, r2, r3
 6280 0068 C4F8F024 		str	r2, [r4, #1264]
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 6281              		.loc 19 206 0
 6282 006c 0FD1     		bne	.L336
 207:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 6283              		.loc 19 207 0
 6284 006e D4F8EC24 		ldr	r2, [r4, #1260]
 6285 0072 511C     		adds	r1, r2, #1
 6286 0074 2244     		add	r2, r2, r4
 6287 0076 C4F8EC14 		str	r1, [r4, #1260]
 6288 007a 1376     		strb	r3, [r2, #24]
 208:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 6289              		.loc 19 208 0
 6290 007c D4F8E434 		ldr	r3, [r4, #1252]
 6291 0080 013B     		subs	r3, r3, #1
 6292 0082 C4F8E434 		str	r3, [r4, #1252]
 6293              	.L371:
 209:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 6294              		.loc 19 209 0
 6295 0086 002B     		cmp	r3, #0
 6296 0088 D9D1     		bne	.L334
 210:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 6297              		.loc 19 210 0
 6298 008a 0823     		movs	r3, #8
 6299 008c 1AE0     		b	.L369
 6300              	.L336:
 211:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 6301              		.loc 19 211 0
 6302 008e A5B9     		cbnz	r5, .L339
 212:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 6303              		.loc 19 212 0
 6304 0090 FF2B     		cmp	r3, #255
 6305 0092 07D1     		bne	.L340
 213:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 6306              		.loc 19 213 0
 6307 0094 0123     		movs	r3, #1
 6308 0096 C4F8E034 		str	r3, [r4, #1248]
 214:./lib/ros_lib/ros/node_handle.h ****             }
 6309              		.loc 19 214 0
 6310 009a 06F11403 		add	r3, r6, #20
 6311 009e C4F80035 		str	r3, [r4, #1280]
 6312 00a2 CCE7     		b	.L334
 6313              	.L340:
 6314              	.LVL743:
 6315              	.LBB554:
 6316              	.LBB555:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 6317              		.loc 24 134 0
 6318 00a4 FFF7FEFF 		bl	millis
 6319              	.LVL744:
 6320              	.LBE555:
 6321              	.LBE554:
 216:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 6322              		.loc 19 216 0
 6323 00a8 801B     		subs	r0, r0, r6
 6324 00aa 0528     		cmp	r0, #5
 6325 00ac C7D9     		bls	.L334
 218:./lib/ros_lib/ros/node_handle.h ****               return -2;
 6326              		.loc 19 218 0
 6327 00ae 84F8F454 		strb	r5, [r4, #1268]
 219:./lib/ros_lib/ros/node_handle.h ****             }
 6328              		.loc 19 219 0
 6329 00b2 6FF00100 		mvn	r0, #1
 6330 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 6331              	.LVL745:
 6332              	.L339:
 221:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 6333              		.loc 19 221 0
 6334 00ba 012D     		cmp	r5, #1
 6335 00bc 0FD1     		bne	.L342
 222:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 6336              		.loc 19 222 0
 6337 00be FE2B     		cmp	r3, #254
 6338 00c0 03D1     		bne	.L343
 223:./lib/ros_lib/ros/node_handle.h ****             }else{
 6339              		.loc 19 223 0
 6340 00c2 0223     		movs	r3, #2
 6341              	.L369:
 6342 00c4 C4F8E034 		str	r3, [r4, #1248]
 6343 00c8 B9E7     		b	.L334
 6344              	.L343:
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 6345              		.loc 19 226 0
 6346 00ca 94F8F434 		ldrb	r3, [r4, #1268]	@ zero_extendqisi2
 225:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 6347              		.loc 19 225 0
 6348 00ce C4F8E084 		str	r8, [r4, #1248]
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 6349              		.loc 19 226 0
 6350 00d2 002B     		cmp	r3, #0
 6351 00d4 B3D1     		bne	.L334
 227:./lib/ros_lib/ros/node_handle.h ****             }
 6352              		.loc 19 227 0
 6353 00d6 2046     		mov	r0, r4
 6354 00d8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 6355              	.LVL746:
 6356 00dc AFE7     		b	.L334
 6357              	.L342:
 229:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 6358              		.loc 19 229 0
 6359 00de 022D     		cmp	r5, #2
 6360 00e0 05D1     		bne	.L344
 230:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 6361              		.loc 19 230 0
 6362 00e2 C4F8E434 		str	r3, [r4, #1252]
 231:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 6363              		.loc 19 231 0
 6364 00e6 C4F8EC84 		str	r8, [r4, #1260]
 232:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 6365              		.loc 19 232 0
 6366 00ea 0322     		movs	r2, #3
 6367 00ec 20E0     		b	.L370
 6368              	.L344:
 234:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 6369              		.loc 19 234 0
 6370 00ee 032D     		cmp	r5, #3
 6371 00f0 07D1     		bne	.L345
 235:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 6372              		.loc 19 235 0
 6373 00f2 D4F8E424 		ldr	r2, [r4, #1252]
 6374 00f6 02EB0323 		add	r3, r2, r3, lsl #8
 6375 00fa C4F8E434 		str	r3, [r4, #1252]
 236:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 6376              		.loc 19 236 0
 6377 00fe 0423     		movs	r3, #4
 6378 0100 E0E7     		b	.L369
 6379              	.L345:
 237:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 6380              		.loc 19 237 0
 6381 0102 042D     		cmp	r5, #4
 6382 0104 0FD1     		bne	.L346
 238:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 6383              		.loc 19 238 0
 6384 0106 414B     		ldr	r3, .L373+4
 6385 0108 1340     		ands	r3, r3, r2
 6386 010a 002B     		cmp	r3, #0
 6387 010c BEBF     		ittt	lt
 6388 010e 03F1FF33 		addlt	r3, r3, #-1
 6389 0112 63F0FF03 		ornlt	r3, r3, #255
 6390 0116 0133     		addlt	r3, r3, #1
 6391 0118 FF2B     		cmp	r3, #255
 6392 011a 01D1     		bne	.L347
 239:./lib/ros_lib/ros/node_handle.h **** 	    else
 6393              		.loc 19 239 0
 6394 011c 0523     		movs	r3, #5
 6395 011e D1E7     		b	.L369
 6396              	.L347:
 241:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 6397              		.loc 19 241 0
 6398 0120 C4F8E084 		str	r8, [r4, #1248]
 6399 0124 8BE7     		b	.L334
 6400              	.L346:
 242:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 6401              		.loc 19 242 0
 6402 0126 052D     		cmp	r5, #5
 6403 0128 07D1     		bne	.L349
 243:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 6404              		.loc 19 243 0
 6405 012a C4F8E834 		str	r3, [r4, #1256]
 244:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 6406              		.loc 19 244 0
 6407 012e 0622     		movs	r2, #6
 6408              	.L370:
 6409 0130 C4F8E024 		str	r2, [r4, #1248]
 245:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 6410              		.loc 19 245 0
 6411 0134 C4F8F034 		str	r3, [r4, #1264]
 6412 0138 81E7     		b	.L334
 6413              	.L349:
 246:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 6414              		.loc 19 246 0
 6415 013a 062D     		cmp	r5, #6
 6416 013c 0BD1     		bne	.L350
 247:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 6417              		.loc 19 247 0
 6418 013e D4F8E824 		ldr	r2, [r4, #1256]
 6419 0142 02EB0323 		add	r3, r2, r3, lsl #8
 6420 0146 C4F8E834 		str	r3, [r4, #1256]
 248:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 6421              		.loc 19 248 0
 6422 014a 0723     		movs	r3, #7
 6423 014c C4F8E034 		str	r3, [r4, #1248]
 249:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 6424              		.loc 19 249 0
 6425 0150 D4F8E434 		ldr	r3, [r4, #1252]
 6426 0154 97E7     		b	.L371
 6427              	.L350:
 251:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 6428              		.loc 19 251 0
 6429 0156 082D     		cmp	r5, #8
 6430 0158 7FF471AF 		bne	.L334
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 6431              		.loc 19 253 0
 6432 015c 2B4B     		ldr	r3, .L373+4
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 6433              		.loc 19 252 0
 6434 015e C4F8E084 		str	r8, [r4, #1248]
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 6435              		.loc 19 253 0
 6436 0162 1340     		ands	r3, r3, r2
 6437 0164 002B     		cmp	r3, #0
 6438 0166 BEBF     		ittt	lt
 6439 0168 03F1FF33 		addlt	r3, r3, #-1
 6440 016c 63F0FF03 		ornlt	r3, r3, #255
 6441 0170 0133     		addlt	r3, r3, #1
 6442 0172 FF2B     		cmp	r3, #255
 6443 0174 7FF463AF 		bne	.L334
 254:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 6444              		.loc 19 254 0
 6445 0178 D4F8E834 		ldr	r3, [r4, #1256]
 6446 017c 6BB9     		cbnz	r3, .L353
 255:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 6447              		.loc 19 255 0
 6448 017e 2046     		mov	r0, r4
 6449 0180 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 6450              	.LVL747:
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 6451              		.loc 19 256 0
 6452 0184 2046     		mov	r0, r4
 6453 0186 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 6454              	.LVL748:
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 6455              		.loc 19 257 0
 6456 018a C4F8F864 		str	r6, [r4, #1272]
 258:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 6457              		.loc 19 258 0
 6458 018e C4F8FC64 		str	r6, [r4, #1276]
 259:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 6459              		.loc 19 259 0
 6460 0192 4FF0FF30 		mov	r0, #-1
 6461 0196 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 6462              	.LVL749:
 6463              	.L353:
 260:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 6464              		.loc 19 260 0
 6465 019a 0A2B     		cmp	r3, #10
 6466 019c 04D1     		bne	.L354
 261:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 6467              		.loc 19 261 0
 6468 019e 4946     		mov	r1, r9
 6469 01a0 2046     		mov	r0, r4
 6470 01a2 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 6471              	.LVL750:
 6472 01a6 4AE7     		b	.L334
 6473              	.L354:
 262:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 6474              		.loc 19 262 0
 6475 01a8 062B     		cmp	r3, #6
 6476 01aa 08D1     		bne	.L355
 263:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 6477              		.loc 19 263 0
 6478 01ac 4946     		mov	r1, r9
 6479 01ae 04F5A160 		add	r0, r4, #1288
 6480 01b2 FFF7FEFF 		bl	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 6481              	.LVL751:
 264:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 6482              		.loc 19 264 0
 6483 01b6 0123     		movs	r3, #1
 6484 01b8 84F80435 		strb	r3, [r4, #1284]
 6485 01bc 3FE7     		b	.L334
 6486              	.L355:
 265:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 6487              		.loc 19 265 0
 6488 01be 0B2B     		cmp	r3, #11
 6489 01c0 02D1     		bne	.L356
 266:./lib/ros_lib/ros/node_handle.h ****               }else{
 6490              		.loc 19 266 0
 6491 01c2 84F8F484 		strb	r8, [r4, #1268]
 6492 01c6 3AE7     		b	.L334
 6493              	.L356:
 268:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 6494              		.loc 19 268 0
 6495 01c8 04EB8303 		add	r3, r4, r3, lsl #2
 6496 01cc D3F8EC02 		ldr	r0, [r3, #748]
 6497 01d0 0028     		cmp	r0, #0
 6498 01d2 3FF434AF 		beq	.L334
 269:./lib/ros_lib/ros/node_handle.h ****               }
 6499              		.loc 19 269 0
 6500 01d6 0368     		ldr	r3, [r0]
 6501 01d8 4946     		mov	r1, r9
 6502 01da 1B68     		ldr	r3, [r3]
 6503 01dc 9847     		blx	r3
 6504              	.LVL752:
 6505 01de 2EE7     		b	.L334
 6506              	.L335:
 6507              	.LBE547:
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 6508              		.loc 19 276 0
 6509 01e0 94F8F404 		ldrb	r0, [r4, #1268]	@ zero_extendqisi2
 6510 01e4 70B1     		cbz	r0, .L372
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 6511              		.loc 19 276 0 is_stmt 0 discriminator 1
 6512 01e6 40F6C412 		movw	r2, #2500
 6513 01ea D4F8F834 		ldr	r3, [r4, #1272]
 6514 01ee F31A     		subs	r3, r6, r3
 6515 01f0 9342     		cmp	r3, r2
 6516 01f2 04D9     		bls	.L358
 277:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 6517              		.loc 19 277 0 is_stmt 1
 6518 01f4 2046     		mov	r0, r4
 6519 01f6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 6520              	.LVL753:
 278:./lib/ros_lib/ros/node_handle.h ****         }
 6521              		.loc 19 278 0
 6522 01fa C4F8F864 		str	r6, [r4, #1272]
 6523              	.L358:
 281:./lib/ros_lib/ros/node_handle.h ****       }
 6524              		.loc 19 281 0
 6525 01fe 0020     		movs	r0, #0
 6526 0200 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 6527              	.LVL754:
 6528              	.L372:
 282:./lib/ros_lib/ros/node_handle.h **** 
 6529              		.loc 19 282 0
 6530 0204 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 6531              	.LVL755:
 6532              	.L374:
 6533              		.align	2
 6534              	.L373:
 6535 0208 00000000 		.word	.LANCHOR1
 6536 020c FF000080 		.word	-2147483393
 6537              		.cfi_endproc
 6538              	.LFE1365:
 6539              		.fnend
 6541              		.global	__aeabi_dmul
 6542              		.global	__aeabi_dadd
 6543              		.global	__aeabi_i2d
 6544              		.global	__aeabi_ddiv
 6545              		.global	__aeabi_ui2f
 6546              		.global	__aeabi_f2iz
 6547              		.global	__aeabi_dsub
 6548              		.global	__aeabi_f2uiz
 6549              		.global	__aeabi_dcmpge
 6550              		.global	__aeabi_dcmple
 6551              		.section	.text.startup,"ax",%progbits
 6552              		.align	1
 6553              		.global	main
 6554              		.thumb
 6555              		.thumb_func
 6557              	main:
 6558              		.fnstart
 6559              	.LFB1281:
 132:src/main.cpp  ****   /* System Clocks Configuration */
 6560              		.loc 21 132 0
 6561              		.cfi_startproc
 6562              		@ args = 0, pretend = 0, frame = 1024
 6563              		@ frame_needed = 0, uses_anonymous_args = 0
 6564 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6565              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6566              	.LCFI78:
 6567              		.cfi_def_cfa_offset 36
 6568              		.cfi_offset 4, -36
 6569              		.cfi_offset 5, -32
 6570              		.cfi_offset 6, -28
 6571              		.cfi_offset 7, -24
 6572              		.cfi_offset 8, -20
 6573              		.cfi_offset 9, -16
 6574              		.cfi_offset 10, -12
 6575              		.cfi_offset 11, -8
 6576              		.cfi_offset 14, -4
 6577              	.LBB596:
 6578              	.LBB597:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 6579              		.loc 19 147 0
 6580 0004 3A4C     		ldr	r4, .L434
 6581              	.LBE597:
 6582              	.LBE596:
 132:src/main.cpp  ****   /* System Clocks Configuration */
 6583              		.loc 21 132 0
 6584              		.pad #1060
 6585 0006 ADF2244D 		subw	sp, sp, #1060
 6586              	.LCFI79:
 6587              		.cfi_def_cfa_offset 1096
 134:src/main.cpp  **** 
 6588              		.loc 21 134 0
 6589 000a FFF7FEFF 		bl	RCC_Configuration
 6590              	.LVL756:
 136:src/main.cpp  ****   I2C1_Init();
 6591              		.loc 21 136 0
 6592 000e 0121     		movs	r1, #1
 6593 0010 3848     		ldr	r0, .L434+4
 6594 0012 FFF7FEFF 		bl	GPIO_PinRemapConfig
 6595              	.LVL757:
 137:src/main.cpp  ****   SysTick_Init();
 6596              		.loc 21 137 0
 6597 0016 FFF7FEFF 		bl	I2C1_Init
 6598              	.LVL758:
 138:src/main.cpp  ****   DEBUG_Init();
 6599              		.loc 21 138 0
 6600 001a FFF7FEFF 		bl	SysTick_Init
 6601              	.LVL759:
 139:src/main.cpp  ****   SHUTDOWN_Init();
 6602              		.loc 21 139 0
 6603 001e FFF7FEFF 		bl	DEBUG_Init
 6604              	.LVL760:
 140:src/main.cpp  ****   LED_Init();
 6605              		.loc 21 140 0
 6606 0022 FFF7FEFF 		bl	SHUTDOWN_Init
 6607              	.LVL761:
 141:src/main.cpp  **** 
 6608              		.loc 21 141 0
 6609 0026 FFF7FEFF 		bl	LED_Init
 6610              	.LVL762:
 6611              	.LBB599:
 6612              	.LBB598:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 6613              		.loc 19 147 0
 6614 002a 04F23440 		addw	r0, r4, #1076
 6615 002e FFF7FEFF 		bl	_ZN15ArduinoHardware4initEv
 6616              	.LVL763:
 6617 0032 04F6A802 		addw	r2, r4, #2216
 151:./lib/ros_lib/ros/node_handle.h ****       };
 6618              		.loc 19 151 0
 6619 0036 1146     		mov	r1, r2
 148:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 6620              		.loc 19 148 0
 6621 0038 0023     		movs	r3, #0
 6622 003a C4F81039 		str	r3, [r4, #2320]
 149:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 6623              		.loc 19 149 0
 6624 003e C4F81439 		str	r3, [r4, #2324]
 150:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 6625              		.loc 19 150 0
 6626 0042 C4F81C39 		str	r3, [r4, #2332]
 151:./lib/ros_lib/ros/node_handle.h ****       };
 6627              		.loc 19 151 0
 6628 0046 C4F81839 		str	r3, [r4, #2328]
 6629              	.LVL764:
 6630              	.L378:
 6631              	.LBE598:
 6632              	.LBE599:
 6633              	.LBB600:
 6634              	.LBB601:
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 6635              		.loc 19 354 0
 6636 004a 51F8040F 		ldr	r0, [r1, #4]!
 6637 004e 40B9     		cbnz	r0, .L376
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 6638              		.loc 19 355 0
 6639 0050 2948     		ldr	r0, .L434+8
 6640 0052 04EB8301 		add	r1, r4, r3, lsl #2
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 6641              		.loc 19 356 0
 6642 0056 6433     		adds	r3, r3, #100
 6643              	.LVL765:
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 6644              		.loc 19 355 0
 6645 0058 C1F8AC08 		str	r0, [r1, #2220]
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 6646              		.loc 19 356 0
 6647 005c C4F86439 		str	r3, [r4, #2404]
 6648 0060 02E0     		b	.L377
 6649              	.LVL766:
 6650              	.L376:
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 6651              		.loc 19 353 0
 6652 0062 0133     		adds	r3, r3, #1
 6653              	.LVL767:
 6654 0064 192B     		cmp	r3, #25
 6655 0066 F0D1     		bne	.L378
 6656              	.LVL768:
 6657              	.L377:
 6658              	.LBE601:
 6659              	.LBE600:
 6660              	.LBB602:
 6661              	.LBB603:
 6662 0068 0023     		movs	r3, #0
 6663              	.LVL769:
 6664              	.L381:
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 6665              		.loc 19 354 0
 6666 006a 52F8041F 		ldr	r1, [r2, #4]!
 6667 006e 41B9     		cbnz	r1, .L379
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 6668              		.loc 19 355 0
 6669 0070 2249     		ldr	r1, .L434+12
 6670 0072 04EB8302 		add	r2, r4, r3, lsl #2
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 6671              		.loc 19 356 0
 6672 0076 6433     		adds	r3, r3, #100
 6673              	.LVL770:
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 6674              		.loc 19 355 0
 6675 0078 C2F8AC18 		str	r1, [r2, #2220]
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 6676              		.loc 19 356 0
 6677 007c C4F8A439 		str	r3, [r4, #2468]
 6678 0080 02E0     		b	.L380
 6679              	.LVL771:
 6680              	.L379:
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 6681              		.loc 19 353 0
 6682 0082 0133     		adds	r3, r3, #1
 6683              	.LVL772:
 6684 0084 192B     		cmp	r3, #25
 6685 0086 F0D1     		bne	.L381
 6686              	.LVL773:
 6687              	.L380:
 6688 0088 1D49     		ldr	r1, .L434+16
 6689              	.LBE603:
 6690              	.LBE602:
 6691              	.LBB605:
 6692              	.LBB606:
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 6693              		.loc 19 339 0
 6694 008a 0023     		movs	r3, #0
 6695              	.LBE606:
 6696              	.LBE605:
 6697              	.LBB608:
 6698              	.LBB604:
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 6699              		.loc 19 353 0
 6700 008c 0A46     		mov	r2, r1
 6701              	.LVL774:
 6702              	.L384:
 6703              	.LBE604:
 6704              	.LBE608:
 6705              	.LBB609:
 6706              	.LBB607:
 340:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 6707              		.loc 19 340 0
 6708 008e 52F8040F 		ldr	r0, [r2, #4]!
 6709 0092 60B9     		cbnz	r0, .L382
 341:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 6710              		.loc 19 341 0
 6711 0094 1B4A     		ldr	r2, .L434+20
 6712 0096 04EB8300 		add	r0, r4, r3, lsl #2
 6713 009a C0F84828 		str	r2, [r0, #2120]
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 6714              		.loc 19 342 0
 6715 009e 7D33     		adds	r3, r3, #125
 6716              	.LVL775:
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 6717              		.loc 19 343 0
 6718 00a0 A2F28C52 		subw	r2, r2, #1420
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 6719              		.loc 19 342 0
 6720 00a4 C4F8C439 		str	r3, [r4, #2500]
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 6721              		.loc 19 343 0
 6722 00a8 C4F8C829 		str	r2, [r4, #2504]
 6723 00ac 02E0     		b	.L383
 6724              	.LVL776:
 6725              	.L382:
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 6726              		.loc 19 339 0
 6727 00ae 0133     		adds	r3, r3, #1
 6728              	.LVL777:
 6729 00b0 192B     		cmp	r3, #25
 6730 00b2 ECD1     		bne	.L384
 6731              	.LVL778:
 6732              	.L383:
 6733              	.LBE607:
 6734              	.LBE609:
 6735              	.LBB610:
 6736              	.LBB611:
 6737              	.LBB612:
 6738 00b4 0023     		movs	r3, #0
 6739              	.LVL779:
 6740              	.L388:
 340:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 6741              		.loc 19 340 0
 6742 00b6 51F8042F 		ldr	r2, [r1, #4]!
 6743 00ba 62B9     		cbnz	r2, .L385
 341:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 6744              		.loc 19 341 0
 6745 00bc 124A     		ldr	r2, .L434+24
 6746 00be 04EB8301 		add	r1, r4, r3, lsl #2
 6747 00c2 C1F84828 		str	r2, [r1, #2120]
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 6748              		.loc 19 342 0
 6749 00c6 7D33     		adds	r3, r3, #125
 6750              	.LVL780:
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 6751              		.loc 19 343 0
 6752 00c8 A2F5BE62 		sub	r2, r2, #1520
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 6753              		.loc 19 342 0
 6754 00cc C4F8283A 		str	r3, [r4, #2600]
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 6755              		.loc 19 343 0
 6756 00d0 C4F82C2A 		str	r2, [r4, #2604]
 6757 00d4 02E0     		b	.L386
 6758              	.LVL781:
 6759              	.L385:
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 6760              		.loc 19 339 0
 6761 00d6 0133     		adds	r3, r3, #1
 6762              	.LVL782:
 6763 00d8 192B     		cmp	r3, #25
 6764 00da ECD1     		bne	.L388
 6765              	.LVL783:
 6766              	.L386:
 6767              	.LBE612:
 6768              	.LBE611:
 6769              	.LBE610:
 153:src/main.cpp  ****     nh.spinOnce();
 6770              		.loc 21 153 0
 6771 00dc 94F82439 		ldrb	r3, [r4, #2340]	@ zero_extendqisi2
 6772              	.LBB613:
 6773              	.LBB614:
 287:./lib/ros_lib/ros/node_handle.h ****       };
 6774              		.loc 19 287 0
 6775 00e0 0348     		ldr	r0, .L434
 6776              	.LBE614:
 6777              	.LBE613:
 153:src/main.cpp  ****     nh.spinOnce();
 6778              		.loc 21 153 0
 6779 00e2 9BB9     		cbnz	r3, .L389
 154:src/main.cpp  ****   }
 6780              		.loc 21 154 0
 6781 00e4 00F58660 		add	r0, r0, #1072
 6782 00e8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 6783              	.LVL784:
 6784 00ec F6E7     		b	.L386
 6785              	.L435:
 6786 00ee 00BF     		.align	2
 6787              	.L434:
 6788 00f0 00000000 		.word	.LANCHOR1
 6789 00f4 00023000 		.word	3146240
 6790 00f8 60090000 		.word	.LANCHOR1+2400
 6791 00fc A0090000 		.word	.LANCHOR1+2464
 6792 0100 44080000 		.word	.LANCHOR1+2116
 6793 0104 BC090000 		.word	.LANCHOR1+2492
 6794 0108 200A0000 		.word	.LANCHOR1+2592
 6795              	.L389:
 157:src/main.cpp  **** 
 6796              		.loc 21 157 0
 6797 010c 0023     		movs	r3, #0
 6798 010e 80F82C34 		strb	r3, [r0, #1068]
 162:src/main.cpp  ****     KP = 5000;
 6799              		.loc 21 162 0
 6800 0112 21AA     		add	r2, sp, #132
 6801 0114 0123     		movs	r3, #1
 6802 0116 A449     		ldr	r1, .L436
 6803 0118 00F58660 		add	r0, r0, #1072
 6804 011c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 6805              	.LVL785:
 6806 0120 08B9     		cbnz	r0, .L390
 163:src/main.cpp  ****   }
 6807              		.loc 21 163 0
 6808 0122 A24B     		ldr	r3, .L436+4
 6809 0124 2193     		str	r3, [sp, #132]	@ float
 6810              	.L390:
 166:src/main.cpp  ****     KI = 5000;
 6811              		.loc 21 166 0
 6812 0126 0123     		movs	r3, #1
 6813 0128 22AA     		add	r2, sp, #136
 6814 012a A149     		ldr	r1, .L436+8
 6815 012c A148     		ldr	r0, .L436+12
 6816 012e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 6817              	.LVL786:
 6818 0132 08B9     		cbnz	r0, .L391
 167:src/main.cpp  ****   }
 6819              		.loc 21 167 0
 6820 0134 9D4B     		ldr	r3, .L436+4
 6821 0136 2293     		str	r3, [sp, #136]	@ float
 6822              	.L391:
 170:src/main.cpp  ****     KD = 4;
 6823              		.loc 21 170 0
 6824 0138 0123     		movs	r3, #1
 6825 013a 23AA     		add	r2, sp, #140
 6826 013c 9E49     		ldr	r1, .L436+16
 6827 013e 9D48     		ldr	r0, .L436+12
 6828 0140 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 6829              	.LVL787:
 6830 0144 10B9     		cbnz	r0, .L392
 171:src/main.cpp  ****   }
 6831              		.loc 21 171 0
 6832 0146 4FF08143 		mov	r3, #1082130432
 6833 014a 2393     		str	r3, [sp, #140]	@ float
 6834              	.L392:
 174:src/main.cpp  ****     integralSaturation = 10000;
 6835              		.loc 21 174 0
 6836 014c 0123     		movs	r3, #1
 6837 014e 24AA     		add	r2, sp, #144
 6838 0150 9A49     		ldr	r1, .L436+20
 6839 0152 9848     		ldr	r0, .L436+12
 6840 0154 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 6841              	.LVL788:
 6842 0158 08B9     		cbnz	r0, .L393
 175:src/main.cpp  ****   }
 6843              		.loc 21 175 0
 6844 015a 994B     		ldr	r3, .L436+24
 6845 015c 2493     		str	r3, [sp, #144]	@ float
 6846              	.L393:
 178:src/main.cpp  ****     wheelRadius = 0.04;
 6847              		.loc 21 178 0
 6848 015e 0123     		movs	r3, #1
 6849 0160 25AA     		add	r2, sp, #148
 6850 0162 9849     		ldr	r1, .L436+28
 6851 0164 9348     		ldr	r0, .L436+12
 6852 0166 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 6853              	.LVL789:
 6854 016a 08B9     		cbnz	r0, .L394
 179:src/main.cpp  ****   }
 6855              		.loc 21 179 0
 6856 016c 964B     		ldr	r3, .L436+32
 6857 016e 2593     		str	r3, [sp, #148]	@ float
 6858              	.L394:
 182:src/main.cpp  ****     L = 0.17;
 6859              		.loc 21 182 0
 6860 0170 964C     		ldr	r4, .L436+36
 6861 0172 0123     		movs	r3, #1
 6862 0174 04F10802 		add	r2, r4, #8
 6863 0178 9549     		ldr	r1, .L436+40
 6864 017a 04F58660 		add	r0, r4, #1072
 6865 017e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 6866              	.LVL790:
 6867 0182 08B9     		cbnz	r0, .L395
 183:src/main.cpp  ****   }
 6868              		.loc 21 183 0
 6869 0184 934B     		ldr	r3, .L436+44
 6870 0186 A360     		str	r3, [r4, #8]	@ float
 6871              	.L395:
 186:src/main.cpp  ****     d = 0.06;
 6872              		.loc 21 186 0
 6873 0188 904C     		ldr	r4, .L436+36
 6874 018a 0123     		movs	r3, #1
 6875 018c 04F63422 		addw	r2, r4, #2612
 6876 0190 9149     		ldr	r1, .L436+48
 6877 0192 04F58660 		add	r0, r4, #1072
 6878 0196 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 6879              	.LVL791:
 6880 019a 10B9     		cbnz	r0, .L396
 187:src/main.cpp  ****   }
 6881              		.loc 21 187 0
 6882 019c 8F4B     		ldr	r3, .L436+52
 6883 019e C4F8343A 		str	r3, [r4, #2612]	@ float
 6884              	.L396:
 192:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 6885              		.loc 21 192 0
 6886 01a2 0426     		movs	r6, #4
 190:src/main.cpp  **** 
 6887              		.loc 21 190 0
 6888 01a4 4FF47A70 		mov	r0, #1000
 6889 01a8 FFF7FEFF 		bl	delay
 6890              	.LVL792:
 192:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 6891              		.loc 21 192 0
 6892 01ac 8C4B     		ldr	r3, .L436+56
 6893 01ae 8D4A     		ldr	r2, .L436+60
 6894 01b0 0121     		movs	r1, #1
 6895 01b2 0096     		str	r6, [sp]
 6896 01b4 4CA8     		add	r0, sp, #304
 6897 01b6 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 6898              	.LVL793:
 193:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 6899              		.loc 21 193 0
 6900 01ba 4FF40073 		mov	r3, #512
 194:src/main.cpp  **** 
 6901              		.loc 21 194 0
 6902 01be 8A4C     		ldr	r4, .L436+64
 193:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 6903              		.loc 21 193 0
 6904 01c0 5293     		str	r3, [sp, #328]
 196:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 6905              		.loc 21 196 0
 6906 01c2 0323     		movs	r3, #3
 200:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 6907              		.loc 21 200 0
 6908 01c4 0127     		movs	r7, #1
 196:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 6909              		.loc 21 196 0
 6910 01c6 0093     		str	r3, [sp]
 6911 01c8 884A     		ldr	r2, .L436+68
 6912 01ca 854B     		ldr	r3, .L436+56
 6913 01cc 0121     		movs	r1, #1
 6914 01ce 65A8     		add	r0, sp, #404
 197:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 6915              		.loc 21 197 0
 6916 01d0 4FF48078 		mov	r8, #256
 194:src/main.cpp  **** 
 6917              		.loc 21 194 0
 6918 01d4 5394     		str	r4, [sp, #332]
 196:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 6919              		.loc 21 196 0
 6920 01d6 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 6921              	.LVL794:
 200:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 6922              		.loc 21 200 0
 6923 01da 0097     		str	r7, [sp]
 6924 01dc 844B     		ldr	r3, .L436+72
 6925 01de 854A     		ldr	r2, .L436+76
 6926 01e0 0221     		movs	r1, #2
 6927 01e2 7EA8     		add	r0, sp, #504
 203:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 6928              		.loc 21 203 0
 6929 01e4 844D     		ldr	r5, .L436+80
 197:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 6930              		.loc 21 197 0
 6931 01e6 CDF8AC81 		str	r8, [sp, #428]
 198:src/main.cpp  **** 
 6932              		.loc 21 198 0
 6933 01ea 6C94     		str	r4, [sp, #432]
 200:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 6934              		.loc 21 200 0
 6935 01ec FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 6936              	.LVL795:
 203:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 6937              		.loc 21 203 0
 6938 01f0 824A     		ldr	r2, .L436+84
 6939 01f2 0397     		str	r7, [sp, #12]
 6940 01f4 4FF40047 		mov	r7, #32768
 6941 01f8 CDF81480 		str	r8, [sp, #20]
 6942 01fc 0292     		str	r2, [sp, #8]
 6943 01fe 8DE88400 		stmia	sp, {r2, r7}
 6944 0202 4FF48043 		mov	r3, #16384
 6945 0206 4FF40051 		mov	r1, #8192
 6946 020a 7EA8     		add	r0, sp, #504
 6947 020c 0695     		str	r5, [sp, #24]
 6948 020e 0495     		str	r5, [sp, #16]
 6949 0210 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 6950              	.LVL796:
 204:src/main.cpp  ****   FR.setRegulator(KP,KI,KD,integralSaturation);
 6951              		.loc 21 204 0
 6952 0214 1823     		movs	r3, #24
 6953 0216 ADF84032 		strh	r3, [sp, #576]	@ movhi
 205:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 6954              		.loc 21 205 0
 6955 021a 249B     		ldr	r3, [sp, #144]	@ float
 6956 021c 229A     		ldr	r2, [sp, #136]	@ float
 6957 021e 0093     		str	r3, [sp]	@ float
 6958 0220 2199     		ldr	r1, [sp, #132]	@ float
 6959 0222 239B     		ldr	r3, [sp, #140]	@ float
 6960 0224 7EA8     		add	r0, sp, #504
 6961 0226 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 6962              	.LVL797:
 206:src/main.cpp  **** 
 6963              		.loc 21 206 0
 6964 022a 259B     		ldr	r3, [sp, #148]	@ float
 208:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 6965              		.loc 21 208 0
 6966 022c 744A     		ldr	r2, .L436+88
 206:src/main.cpp  **** 
 6967              		.loc 21 206 0
 6968 022e 9693     		str	r3, [sp, #600]	@ float
 208:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 6969              		.loc 21 208 0
 6970 0230 0221     		movs	r1, #2
 6971 0232 744B     		ldr	r3, .L436+92
 6972 0234 0096     		str	r6, [sp]
 6973 0236 97A8     		add	r0, sp, #604
 6974 0238 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 6975              	.LVL798:
 211:src/main.cpp  ****   FL.encoderAddr = (0x10);
 6976              		.loc 21 211 0
 6977 023c 4FF00208 		mov	r8, #2
 6978 0240 4FF01009 		mov	r9, #16
 6979 0244 4FF48063 		mov	r3, #1024
 6980 0248 2246     		mov	r2, r4
 6981 024a 0694     		str	r4, [sp, #24]
 6982 024c 0494     		str	r4, [sp, #16]
 6983 024e 0393     		str	r3, [sp, #12]
 6984 0250 8DE82002 		stmia	sp, {r5, r9}
 6985 0254 2023     		movs	r3, #32
 6986 0256 3146     		mov	r1, r6
 6987 0258 97A8     		add	r0, sp, #604
 6988 025a CDF81480 		str	r8, [sp, #20]
 6989 025e 0295     		str	r5, [sp, #8]
 6990 0260 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 6991              	.LVL799:
 213:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 6992              		.loc 21 213 0
 6993 0264 249B     		ldr	r3, [sp, #144]	@ float
 6994 0266 229A     		ldr	r2, [sp, #136]	@ float
 6995 0268 0093     		str	r3, [sp]	@ float
 6996 026a 2199     		ldr	r1, [sp, #132]	@ float
 6997 026c 239B     		ldr	r3, [sp, #140]	@ float
 6998 026e 97A8     		add	r0, sp, #604
 212:src/main.cpp  ****   FL.setRegulator(KP,KI,KD,integralSaturation);
 6999              		.loc 21 212 0
 7000 0270 ADF8A492 		strh	r9, [sp, #676]	@ movhi
 213:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 7001              		.loc 21 213 0
 7002 0274 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 7003              	.LVL800:
 214:src/main.cpp  **** 
 7004              		.loc 21 214 0
 7005 0278 259B     		ldr	r3, [sp, #148]	@ float
 216:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 7006              		.loc 21 216 0
 7007 027a 634A     		ldr	r2, .L436+96
 214:src/main.cpp  **** 
 7008              		.loc 21 214 0
 7009 027c AF93     		str	r3, [sp, #700]	@ float
 216:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 7010              		.loc 21 216 0
 7011 027e 4146     		mov	r1, r8
 7012 0280 4FF08043 		mov	r3, #1073741824
 7013 0284 0096     		str	r6, [sp]
 7014 0286 B0A8     		add	r0, sp, #704
 7015 0288 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 7016              	.LVL801:
 219:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 7017              		.loc 21 219 0
 7018 028c 4FF48043 		mov	r3, #16384
 7019 0290 4FF00809 		mov	r9, #8
 7020 0294 0393     		str	r3, [sp, #12]
 7021 0296 4FF40053 		mov	r3, #8192
 7022 029a 2246     		mov	r2, r4
 7023 029c 0494     		str	r4, [sp, #16]
 7024 029e 0294     		str	r4, [sp, #8]
 7025 02a0 0193     		str	r3, [sp, #4]
 7026 02a2 0094     		str	r4, [sp]
 7027 02a4 4FF48053 		mov	r3, #4096
 7028 02a8 4FF40061 		mov	r1, #2048
 7029 02ac B0A8     		add	r0, sp, #704
 7030 02ae 0695     		str	r5, [sp, #24]
 7031 02b0 CDF81490 		str	r9, [sp, #20]
 7032 02b4 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 7033              	.LVL802:
 220:src/main.cpp  ****   RL.setRegulator(KP,KI,KD,integralSaturation);
 7034              		.loc 21 220 0
 7035 02b8 1423     		movs	r3, #20
 7036 02ba ADF80833 		strh	r3, [sp, #776]	@ movhi
 221:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 7037              		.loc 21 221 0
 7038 02be 249B     		ldr	r3, [sp, #144]	@ float
 7039 02c0 229A     		ldr	r2, [sp, #136]	@ float
 7040 02c2 0093     		str	r3, [sp]	@ float
 7041 02c4 2199     		ldr	r1, [sp, #132]	@ float
 7042 02c6 239B     		ldr	r3, [sp, #140]	@ float
 7043 02c8 B0A8     		add	r0, sp, #704
 7044 02ca FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 7045              	.LVL803:
 222:src/main.cpp  **** 
 7046              		.loc 21 222 0
 7047 02ce 259B     		ldr	r3, [sp, #148]	@ float
 224:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 7048              		.loc 21 224 0
 7049 02d0 4E4A     		ldr	r2, .L436+100
 222:src/main.cpp  **** 
 7050              		.loc 21 222 0
 7051 02d2 C893     		str	r3, [sp, #800]	@ float
 224:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 7052              		.loc 21 224 0
 7053 02d4 4146     		mov	r1, r8
 7054 02d6 464B     		ldr	r3, .L436+72
 7055 02d8 0096     		str	r6, [sp]
 7056 02da C9A8     		add	r0, sp, #804
 7057 02dc FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 7058              	.LVL804:
 227:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 7059              		.loc 21 227 0
 7060 02e0 4FF40063 		mov	r3, #2048
 7061 02e4 2246     		mov	r2, r4
 7062 02e6 0593     		str	r3, [sp, #20]
 7063 02e8 0494     		str	r4, [sp, #16]
 7064 02ea 4FF48053 		mov	r3, #4096
 7065 02ee 3946     		mov	r1, r7
 7066 02f0 C9A8     		add	r0, sp, #804
 7067 02f2 0695     		str	r5, [sp, #24]
 7068 02f4 CDF80C90 		str	r9, [sp, #12]
 7069 02f8 0295     		str	r5, [sp, #8]
 7070 02fa 8DE8A000 		stmia	sp, {r5, r7}
 7071 02fe FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 7072              	.LVL805:
 228:src/main.cpp  ****   RR.setRegulator(KP,KI,KD,integralSaturation);
 7073              		.loc 21 228 0
 7074 0302 1C23     		movs	r3, #28
 7075 0304 ADF86C33 		strh	r3, [sp, #876]	@ movhi
 229:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 7076              		.loc 21 229 0
 7077 0308 249B     		ldr	r3, [sp, #144]	@ float
 7078 030a 229A     		ldr	r2, [sp, #136]	@ float
 7079 030c 0093     		str	r3, [sp]	@ float
 7080 030e 2199     		ldr	r1, [sp, #132]	@ float
 7081 0310 239B     		ldr	r3, [sp, #140]	@ float
 7082 0312 C9A8     		add	r0, sp, #804
 7083 0314 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 7084              	.LVL806:
 230:src/main.cpp  **** 
 7085              		.loc 21 230 0
 7086 0318 259B     		ldr	r3, [sp, #148]	@ float
 233:src/main.cpp  ****   if(!servo_left->motorInit()){
 7087              		.loc 21 233 0
 7088 031a 4CA8     		add	r0, sp, #304
 230:src/main.cpp  **** 
 7089              		.loc 21 230 0
 7090 031c E193     		str	r3, [sp, #900]	@ float
 233:src/main.cpp  ****   if(!servo_left->motorInit()){
 7091              		.loc 21 233 0
 7092 031e FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 7093              	.LVL807:
 7094 0322 2A4C     		ldr	r4, .L436+36
 234:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 7095              		.loc 21 234 0
 7096 0324 0368     		ldr	r3, [r0]
 233:src/main.cpp  ****   if(!servo_left->motorInit()){
 7097              		.loc 21 233 0
 7098 0326 E061     		str	r0, [r4, #28]
 234:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 7099              		.loc 21 234 0
 7100 0328 DB68     		ldr	r3, [r3, #12]
 7101 032a 9847     		blx	r3
 7102              	.LVL808:
 7103 032c 68B9     		cbnz	r0, .L397
 235:src/main.cpp  ****     nh.logerror(error);
 7104              		.loc 21 235 0
 7105 032e E069     		ldr	r0, [r4, #28]
 7106 0330 0368     		ldr	r3, [r0]
 7107 0332 1B69     		ldr	r3, [r3, #16]
 7108 0334 9847     		blx	r3
 7109              	.LVL809:
 7110 0336 3649     		ldr	r1, .L436+104
 7111 0338 0246     		mov	r2, r0
 7112 033a E2A8     		add	r0, sp, #904
 7113 033c FFF7FEFF 		bl	sprintf
 7114              	.LVL810:
 236:src/main.cpp  ****   }
 7115              		.loc 21 236 0
 7116 0340 E2A9     		add	r1, sp, #904
 7117 0342 04F58660 		add	r0, r4, #1072
 7118 0346 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7119              	.LVL811:
 7120              	.L397:
 239:src/main.cpp  ****   if(!servo_right->motorInit()){
 7121              		.loc 21 239 0
 7122 034a 65A8     		add	r0, sp, #404
 7123 034c FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 7124              	.LVL812:
 240:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 7125              		.loc 21 240 0
 7126 0350 0368     		ldr	r3, [r0]
 239:src/main.cpp  ****   if(!servo_right->motorInit()){
 7127              		.loc 21 239 0
 7128 0352 2062     		str	r0, [r4, #32]
 240:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 7129              		.loc 21 240 0
 7130 0354 DB68     		ldr	r3, [r3, #12]
 239:src/main.cpp  ****   if(!servo_right->motorInit()){
 7131              		.loc 21 239 0
 7132 0356 1D4D     		ldr	r5, .L436+36
 240:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 7133              		.loc 21 240 0
 7134 0358 9847     		blx	r3
 7135              	.LVL813:
 7136 035a 68B9     		cbnz	r0, .L398
 241:src/main.cpp  ****     nh.logerror(error);
 7137              		.loc 21 241 0
 7138 035c 286A     		ldr	r0, [r5, #32]
 7139 035e 0368     		ldr	r3, [r0]
 7140 0360 1B69     		ldr	r3, [r3, #16]
 7141 0362 9847     		blx	r3
 7142              	.LVL814:
 7143 0364 2A49     		ldr	r1, .L436+104
 7144 0366 0246     		mov	r2, r0
 7145 0368 E2A8     		add	r0, sp, #904
 7146 036a FFF7FEFF 		bl	sprintf
 7147              	.LVL815:
 242:src/main.cpp  ****   }
 7148              		.loc 21 242 0
 7149 036e E2A9     		add	r1, sp, #904
 7150 0370 05F58660 		add	r0, r5, #1072
 7151 0374 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7152              	.LVL816:
 7153              	.L398:
 245:src/main.cpp  ****   if(!front_left->motorInit()){
 7154              		.loc 21 245 0
 7155 0378 97A8     		add	r0, sp, #604
 7156 037a FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 7157              	.LVL817:
 246:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 7158              		.loc 21 246 0
 7159 037e 0368     		ldr	r3, [r0]
 245:src/main.cpp  ****   if(!front_left->motorInit()){
 7160              		.loc 21 245 0
 7161 0380 C4F8380A 		str	r0, [r4, #2616]
 246:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 7162              		.loc 21 246 0
 7163 0384 DB68     		ldr	r3, [r3, #12]
 245:src/main.cpp  ****   if(!front_left->motorInit()){
 7164              		.loc 21 245 0
 7165 0386 114D     		ldr	r5, .L436+36
 246:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 7166              		.loc 21 246 0
 7167 0388 9847     		blx	r3
 7168              	.LVL818:
 7169 038a 0028     		cmp	r0, #0
 7170 038c 46D1     		bne	.L399
 247:src/main.cpp  ****     nh.logerror(error);
 7171              		.loc 21 247 0
 7172 038e D5F8380A 		ldr	r0, [r5, #2616]
 7173 0392 0368     		ldr	r3, [r0]
 7174 0394 1B69     		ldr	r3, [r3, #16]
 7175 0396 9847     		blx	r3
 7176              	.LVL819:
 7177 0398 1D49     		ldr	r1, .L436+104
 7178 039a 0246     		mov	r2, r0
 7179 039c E2A8     		add	r0, sp, #904
 7180 039e FFF7FEFF 		bl	sprintf
 7181              	.LVL820:
 248:src/main.cpp  ****   }
 7182              		.loc 21 248 0
 7183 03a2 E2A9     		add	r1, sp, #904
 7184 03a4 36E0     		b	.L437
 7185              	.L438:
 7186 03a6 00BF     		.align	2
 7187              	.L436:
 7188 03a8 00040000 		.word	.LC37
 7189 03ac 00409C45 		.word	1167867904
 7190 03b0 0F040000 		.word	.LC38
 7191 03b4 30040000 		.word	.LANCHOR1+1072
 7192 03b8 1E040000 		.word	.LC39
 7193 03bc 2D040000 		.word	.LC40
 7194 03c0 00401C46 		.word	1176256512
 7195 03c4 4C040000 		.word	.LC41
 7196 03c8 0AD7233D 		.word	1025758986
 7197 03cc 00000000 		.word	.LANCHOR1
 7198 03d0 64040000 		.word	.LC42
 7199 03d4 7B142E3E 		.word	1043207291
 7200 03d8 8D040000 		.word	.LC43
 7201 03dc 8FC2753D 		.word	1031127695
 7202 03e0 00080040 		.word	1073743872
 7203 03e4 B0040000 		.word	.LC44
 7204 03e8 000C0140 		.word	1073810432
 7205 03ec BB040000 		.word	.LC45
 7206 03f0 002C0140 		.word	1073818624
 7207 03f4 C7040000 		.word	.LC46
 7208 03f8 00080140 		.word	1073809408
 7209 03fc 00100140 		.word	1073811456
 7210 0400 D3040000 		.word	.LC47
 7211 0404 00040040 		.word	1073742848
 7212 0408 DE040000 		.word	.LC48
 7213 040c E8040000 		.word	.LC49
 7214 0410 F3040000 		.word	.LC50
 7215              	.L437:
 7216 0414 05F58660 		add	r0, r5, #1072
 7217 0418 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7218              	.LVL821:
 7219              	.L399:
 251:src/main.cpp  ****   if(!front_right->motorInit()){
 7220              		.loc 21 251 0
 7221 041c 7EA8     		add	r0, sp, #504
 7222 041e FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 7223              	.LVL822:
 252:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 7224              		.loc 21 252 0
 7225 0422 0368     		ldr	r3, [r0]
 251:src/main.cpp  ****   if(!front_right->motorInit()){
 7226              		.loc 21 251 0
 7227 0424 C4F83C0A 		str	r0, [r4, #2620]
 252:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 7228              		.loc 21 252 0
 7229 0428 DB68     		ldr	r3, [r3, #12]
 251:src/main.cpp  ****   if(!front_right->motorInit()){
 7230              		.loc 21 251 0
 7231 042a 7D4D     		ldr	r5, .L439
 252:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 7232              		.loc 21 252 0
 7233 042c 9847     		blx	r3
 7234              	.LVL823:
 7235 042e 70B9     		cbnz	r0, .L400
 253:src/main.cpp  ****     nh.logerror(error);
 7236              		.loc 21 253 0
 7237 0430 D5F83C0A 		ldr	r0, [r5, #2620]
 7238 0434 0368     		ldr	r3, [r0]
 7239 0436 1B69     		ldr	r3, [r3, #16]
 7240 0438 9847     		blx	r3
 7241              	.LVL824:
 7242 043a 7A49     		ldr	r1, .L439+4
 7243 043c 0246     		mov	r2, r0
 7244 043e E2A8     		add	r0, sp, #904
 7245 0440 FFF7FEFF 		bl	sprintf
 7246              	.LVL825:
 254:src/main.cpp  ****   }
 7247              		.loc 21 254 0
 7248 0444 E2A9     		add	r1, sp, #904
 7249 0446 05F58660 		add	r0, r5, #1072
 7250 044a FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7251              	.LVL826:
 7252              	.L400:
 257:src/main.cpp  ****   if(!rear_left->motorInit()){
 7253              		.loc 21 257 0
 7254 044e B0A8     		add	r0, sp, #704
 7255 0450 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 7256              	.LVL827:
 258:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 7257              		.loc 21 258 0
 7258 0454 0368     		ldr	r3, [r0]
 257:src/main.cpp  ****   if(!rear_left->motorInit()){
 7259              		.loc 21 257 0
 7260 0456 C4F8400A 		str	r0, [r4, #2624]
 258:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 7261              		.loc 21 258 0
 7262 045a DB68     		ldr	r3, [r3, #12]
 257:src/main.cpp  ****   if(!rear_left->motorInit()){
 7263              		.loc 21 257 0
 7264 045c 704D     		ldr	r5, .L439
 258:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 7265              		.loc 21 258 0
 7266 045e 9847     		blx	r3
 7267              	.LVL828:
 7268 0460 70B9     		cbnz	r0, .L401
 259:src/main.cpp  ****     nh.logerror(error);
 7269              		.loc 21 259 0
 7270 0462 D5F8400A 		ldr	r0, [r5, #2624]
 7271 0466 0368     		ldr	r3, [r0]
 7272 0468 1B69     		ldr	r3, [r3, #16]
 7273 046a 9847     		blx	r3
 7274              	.LVL829:
 7275 046c 6D49     		ldr	r1, .L439+4
 7276 046e 0246     		mov	r2, r0
 7277 0470 E2A8     		add	r0, sp, #904
 7278 0472 FFF7FEFF 		bl	sprintf
 7279              	.LVL830:
 260:src/main.cpp  ****   }
 7280              		.loc 21 260 0
 7281 0476 E2A9     		add	r1, sp, #904
 7282 0478 05F58660 		add	r0, r5, #1072
 7283 047c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7284              	.LVL831:
 7285              	.L401:
 263:src/main.cpp  ****   if(!rear_right->motorInit()){
 7286              		.loc 21 263 0
 7287 0480 C9A8     		add	r0, sp, #804
 7288 0482 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 7289              	.LVL832:
 264:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 7290              		.loc 21 264 0
 7291 0486 0368     		ldr	r3, [r0]
 263:src/main.cpp  ****   if(!rear_right->motorInit()){
 7292              		.loc 21 263 0
 7293 0488 C4F8440A 		str	r0, [r4, #2628]
 264:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 7294              		.loc 21 264 0
 7295 048c DB68     		ldr	r3, [r3, #12]
 263:src/main.cpp  ****   if(!rear_right->motorInit()){
 7296              		.loc 21 263 0
 7297 048e 644D     		ldr	r5, .L439
 264:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 7298              		.loc 21 264 0
 7299 0490 9847     		blx	r3
 7300              	.LVL833:
 7301 0492 70B9     		cbnz	r0, .L402
 265:src/main.cpp  ****     nh.logerror(error);
 7302              		.loc 21 265 0
 7303 0494 D5F8440A 		ldr	r0, [r5, #2628]
 7304 0498 0368     		ldr	r3, [r0]
 7305 049a 1B69     		ldr	r3, [r3, #16]
 7306 049c 9847     		blx	r3
 7307              	.LVL834:
 7308 049e 6149     		ldr	r1, .L439+4
 7309 04a0 0246     		mov	r2, r0
 7310 04a2 E2A8     		add	r0, sp, #904
 7311 04a4 FFF7FEFF 		bl	sprintf
 7312              	.LVL835:
 266:src/main.cpp  ****   }
 7313              		.loc 21 266 0
 7314 04a8 E2A9     		add	r1, sp, #904
 7315 04aa 05F58660 		add	r0, r5, #1072
 7316 04ae FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7317              	.LVL836:
 7318              	.L402:
 270:src/main.cpp  **** 
 7319              		.loc 21 270 0
 7320 04b2 0020     		movs	r0, #0
 7321 04b4 FFF7FEFF 		bl	led_set
 7322              	.LVL837:
 272:src/main.cpp  ****   servo_right->setReference(0);
 7323              		.loc 21 272 0
 7324 04b8 E069     		ldr	r0, [r4, #28]
 7325 04ba 0021     		movs	r1, #0
 7326 04bc 0368     		ldr	r3, [r0]
 281:src/main.cpp  ****   float start_time;
 7327              		.loc 21 281 0
 7328 04be 0026     		movs	r6, #0
 272:src/main.cpp  ****   servo_right->setReference(0);
 7329              		.loc 21 272 0
 7330 04c0 5B69     		ldr	r3, [r3, #20]
 7331 04c2 9847     		blx	r3
 7332              	.LVL838:
 273:src/main.cpp  ****   front_right->setReference(0);
 7333              		.loc 21 273 0
 7334 04c4 206A     		ldr	r0, [r4, #32]
 7335 04c6 0021     		movs	r1, #0
 7336 04c8 0368     		ldr	r3, [r0]
 7337 04ca 5B69     		ldr	r3, [r3, #20]
 7338 04cc 9847     		blx	r3
 7339              	.LVL839:
 274:src/main.cpp  ****   front_left->setReference(0);
 7340              		.loc 21 274 0
 7341 04ce D4F83C0A 		ldr	r0, [r4, #2620]
 7342 04d2 0021     		movs	r1, #0
 7343 04d4 0368     		ldr	r3, [r0]
 7344 04d6 5B69     		ldr	r3, [r3, #20]
 7345 04d8 9847     		blx	r3
 7346              	.LVL840:
 275:src/main.cpp  ****   rear_right->setReference(0);
 7347              		.loc 21 275 0
 7348 04da D4F8380A 		ldr	r0, [r4, #2616]
 7349 04de 0021     		movs	r1, #0
 7350 04e0 0368     		ldr	r3, [r0]
 7351 04e2 5B69     		ldr	r3, [r3, #20]
 7352 04e4 9847     		blx	r3
 7353              	.LVL841:
 276:src/main.cpp  ****   rear_left->setReference(0);
 7354              		.loc 21 276 0
 7355 04e6 D4F8440A 		ldr	r0, [r4, #2628]
 7356 04ea 0021     		movs	r1, #0
 7357 04ec 0368     		ldr	r3, [r0]
 7358 04ee 5B69     		ldr	r3, [r3, #20]
 7359 04f0 9847     		blx	r3
 7360              	.LVL842:
 277:src/main.cpp  **** 
 7361              		.loc 21 277 0
 7362 04f2 D4F8400A 		ldr	r0, [r4, #2624]
 7363 04f6 0021     		movs	r1, #0
 7364 04f8 0368     		ldr	r3, [r0]
 7365 04fa 5B69     		ldr	r3, [r3, #20]
 7366 04fc 9847     		blx	r3
 7367              	.LVL843:
 288:src/main.cpp  **** 
 7368              		.loc 21 288 0
 7369 04fe A068     		ldr	r0, [r4, #8]	@ float
 7370 0500 4FF07C51 		mov	r1, #1056964608
 7371 0504 FFF7FEFF 		bl	__aeabi_fmul
 7372              	.LVL844:
 7373 0508 FFF7FEFF 		bl	__aeabi_f2d
 7374              	.LVL845:
 7375 050c 0246     		mov	r2, r0
 7376 050e 0B46     		mov	r3, r1
 7377 0510 FFF7FEFF 		bl	__aeabi_dmul
 7378              	.LVL846:
 7379 0514 0B46     		mov	r3, r1
 7380 0516 0246     		mov	r2, r0
 7381 0518 FFF7FEFF 		bl	__aeabi_dadd
 7382              	.LVL847:
 7383 051c FFF7FEFF 		bl	sqrt
 7384              	.LVL848:
 7385 0520 FFF7FEFF 		bl	__aeabi_d2f
 7386              	.LVL849:
 290:src/main.cpp  **** 
 7387              		.loc 21 290 0
 7388 0524 1022     		movs	r2, #16
 288:src/main.cpp  **** 
 7389              		.loc 21 288 0
 7390 0526 1D90     		str	r0, [sp, #116]	@ float
 7391              	.LVL850:
 290:src/main.cpp  **** 
 7392              		.loc 21 290 0
 7393 0528 0021     		movs	r1, #0
 7394 052a 28A8     		add	r0, sp, #160
 7395              	.LVL851:
 7396 052c FFF7FEFF 		bl	memset
 7397              	.LVL852:
 287:src/main.cpp  ****   float l = sqrt(pow((L/2),2)*2);
 7398              		.loc 21 287 0
 7399 0530 0024     		movs	r4, #0
 7400 0532 0023     		movs	r3, #0
 7401 0534 CDE90834 		strd	r3, [sp, #32]
 286:src/main.cpp  ****   double th = 0.0;
 7402              		.loc 21 286 0
 7403 0538 CDE90C34 		strd	r3, [sp, #48]
 285:src/main.cpp  ****   double y = 0.0;
 7404              		.loc 21 285 0
 7405 053c CDE90A34 		strd	r3, [sp, #40]
 7406              	.LBB615:
 294:src/main.cpp  ****     start_time = ((int)millis()) / 1000.0;
 7407              		.loc 21 294 0
 7408 0540 374C     		ldr	r4, .L439
 7409              	.LVL853:
 7410              	.L417:
 7411 0542 3948     		ldr	r0, .L439+8
 7412 0544 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 7413              	.LVL854:
 295:src/main.cpp  **** 
 7414              		.loc 21 295 0
 7415 0548 FFF7FEFF 		bl	millis
 7416              	.LVL855:
 7417 054c FFF7FEFF 		bl	__aeabi_i2d
 7418              	.LVL856:
 7419 0550 364B     		ldr	r3, .L439+12
 7420 0552 0022     		movs	r2, #0
 7421 0554 FFF7FEFF 		bl	__aeabi_ddiv
 7422              	.LVL857:
 7423 0558 FFF7FEFF 		bl	__aeabi_d2f
 7424              	.LVL858:
 297:src/main.cpp  ****       connected = false;
 7425              		.loc 21 297 0
 7426 055c 94F82C34 		ldrb	r3, [r4, #1068]	@ zero_extendqisi2
 295:src/main.cpp  **** 
 7427              		.loc 21 295 0
 7428 0560 0F90     		str	r0, [sp, #60]	@ float
 7429              	.LVL859:
 7430 0562 2F4F     		ldr	r7, .L439
 297:src/main.cpp  ****       connected = false;
 7431              		.loc 21 297 0
 7432 0564 63B9     		cbnz	r3, .L418
 7433              	.LVL860:
 302:src/main.cpp  ****         debug_toggle();
 7434              		.loc 21 302 0
 7435 0566 731C     		adds	r3, r6, #1
 7436 0568 0A22     		movs	r2, #10
 7437 056a 1393     		str	r3, [sp, #76]
 7438 056c 96FBF2F3 		sdiv	r3, r6, r2
 7439 0570 02FB1366 		mls	r6, r2, r3, r6
 7440              	.LVL861:
 7441              	.LBB616:
 7442              	.LBB617:
 287:./lib/ros_lib/ros/node_handle.h ****       };
 7443              		.loc 19 287 0
 7444 0574 94F82459 		ldrb	r5, [r4, #2340]	@ zero_extendqisi2
 7445              	.LVL862:
 7446              	.LBE617:
 7447              	.LBE616:
 302:src/main.cpp  ****         debug_toggle();
 7448              		.loc 21 302 0
 7449 0578 26B9     		cbnz	r6, .L403
 303:src/main.cpp  ****     }
 7450              		.loc 21 303 0
 7451 057a FFF7FEFF 		bl	debug_toggle
 7452              	.LVL863:
 7453 057e 01E0     		b	.L403
 7454              	.LVL864:
 7455              	.L418:
 7456 0580 1396     		str	r6, [sp, #76]
 298:src/main.cpp  ****       // TODO: Advertise shutdown??
 7457              		.loc 21 298 0
 7458 0582 0025     		movs	r5, #0
 7459              	.LVL865:
 7460              	.L403:
 306:src/main.cpp  ****     auto sr = servo_right->update(0.1, connected);
 7461              		.loc 21 306 0
 7462 0584 F969     		ldr	r1, [r7, #28]
 7463 0586 2A4A     		ldr	r2, .L439+16
 7464 0588 0B68     		ldr	r3, [r1]
 7465 058a 2CA8     		add	r0, sp, #176
 7466 058c DE69     		ldr	r6, [r3, #28]
 7467 058e 2B46     		mov	r3, r5
 7468 0590 B047     		blx	r6
 7469              	.LVL866:
 307:src/main.cpp  **** 
 7470              		.loc 21 307 0
 7471 0592 396A     		ldr	r1, [r7, #32]
 7472 0594 264A     		ldr	r2, .L439+16
 7473 0596 0B68     		ldr	r3, [r1]
 7474 0598 30A8     		add	r0, sp, #192
 7475 059a DE69     		ldr	r6, [r3, #28]
 7476 059c 2B46     		mov	r3, r5
 7477 059e B047     		blx	r6
 7478              	.LVL867:
 309:src/main.cpp  ****       if(std::get<2>(sr) == (int)servo_right->getReference() && std::get<2>(sl) == (int)servo_left-
 7479              		.loc 21 309 0
 7480 05a0 3868     		ldr	r0, [r7]
 7481 05a2 7E79     		ldrb	r6, [r7, #5]	@ zero_extendqisi2
 7482 05a4 00F5FA70 		add	r0, r0, #500
 7483 05a8 FFF7FEFF 		bl	__aeabi_ui2f
 7484              	.LVL868:
 7485 05ac 0146     		mov	r1, r0
 7486 05ae 0F98     		ldr	r0, [sp, #60]	@ float
 7487 05b0 F6B2     		uxtb	r6, r6
 7488 05b2 4FF00107 		mov	r7, #1
 7489 05b6 FFF7FEFF 		bl	__aeabi_fcmplt
 7490              	.LVL869:
 7491 05ba 00B9     		cbnz	r0, .L406
 7492 05bc 0746     		mov	r7, r0
 7493              	.L406:
 7494 05be 17F0FF0F 		tst	r7, #255
 7495 05c2 01D1     		bne	.L419
 7496 05c4 002E     		cmp	r6, #0
 7497 05c6 4DD0     		beq	.L404
 7498              	.L419:
 310:src/main.cpp  ****         waitForServos = false;
 7499              		.loc 21 310 0
 7500 05c8 206A     		ldr	r0, [r4, #32]
 7501 05ca 319E     		ldr	r6, [sp, #196]
 7502 05cc 0368     		ldr	r3, [r0]
 7503 05ce 9B69     		ldr	r3, [r3, #24]
 7504 05d0 9847     		blx	r3
 7505              	.LVL870:
 7506 05d2 FFF7FEFF 		bl	__aeabi_f2iz
 7507              	.LVL871:
 7508 05d6 8642     		cmp	r6, r0
 7509 05d8 2CD1     		bne	.L407
 7510 05da E069     		ldr	r0, [r4, #28]
 7511 05dc 2D9E     		ldr	r6, [sp, #180]
 7512 05de 0368     		ldr	r3, [r0]
 7513 05e0 9B69     		ldr	r3, [r3, #24]
 7514 05e2 9847     		blx	r3
 7515              	.LVL872:
 7516 05e4 FFF7FEFF 		bl	__aeabi_f2iz
 7517              	.LVL873:
 7518 05e8 8642     		cmp	r6, r0
 7519 05ea 23D1     		bne	.L407
 312:src/main.cpp  ****         front_left->setReference(motorCmd[1]);
 7520              		.loc 21 312 0
 7521 05ec D4F83C0A 		ldr	r0, [r4, #2620]
 311:src/main.cpp  ****         front_right->setReference(motorCmd[0]);
 7522              		.loc 21 311 0
 7523 05f0 0023     		movs	r3, #0
 7524 05f2 6371     		strb	r3, [r4, #5]
 312:src/main.cpp  ****         front_left->setReference(motorCmd[1]);
 7525              		.loc 21 312 0
 7526 05f4 0368     		ldr	r3, [r0]
 7527 05f6 E168     		ldr	r1, [r4, #12]	@ float
 7528 05f8 5B69     		ldr	r3, [r3, #20]
 7529 05fa 9847     		blx	r3
 7530              	.LVL874:
 313:src/main.cpp  ****         rear_left->setReference(motorCmd[2]);
 7531              		.loc 21 313 0
 7532 05fc D4F8380A 		ldr	r0, [r4, #2616]
 7533 0600 2169     		ldr	r1, [r4, #16]	@ float
 7534 0602 0368     		ldr	r3, [r0]
 7535 0604 5B69     		ldr	r3, [r3, #20]
 7536 0606 9847     		blx	r3
 7537              	.LVL875:
 314:src/main.cpp  ****         rear_right->setReference(motorCmd[3]);
 7538              		.loc 21 314 0
 7539 0608 D4F8400A 		ldr	r0, [r4, #2624]
 7540 060c 6169     		ldr	r1, [r4, #20]	@ float
 7541 060e 0368     		ldr	r3, [r0]
 7542 0610 5B69     		ldr	r3, [r3, #20]
 7543 0612 9847     		blx	r3
 7544              	.LVL876:
 315:src/main.cpp  ****       }else{
 7545              		.loc 21 315 0
 7546 0614 D4F8440A 		ldr	r0, [r4, #2628]
 7547 0618 A169     		ldr	r1, [r4, #24]	@ float
 7548 061a 0368     		ldr	r3, [r0]
 7549 061c 5B69     		ldr	r3, [r3, #20]
 7550 061e 20E0     		b	.L433
 7551              	.L440:
 7552              		.align	2
 7553              	.L439:
 7554 0620 00000000 		.word	.LANCHOR1
 7555 0624 F3040000 		.word	.LC50
 7556 0628 30040000 		.word	.LANCHOR1+1072
 7557 062c 00408F40 		.word	1083129856
 7558 0630 CDCCCC3D 		.word	1036831949
 7559              	.L407:
 317:src/main.cpp  ****         front_left->setReference(0);
 7560              		.loc 21 317 0
 7561 0634 D4F83C0A 		ldr	r0, [r4, #2620]
 7562 0638 0021     		movs	r1, #0
 7563 063a 0368     		ldr	r3, [r0]
 7564 063c 5B69     		ldr	r3, [r3, #20]
 7565 063e 9847     		blx	r3
 7566              	.LVL877:
 318:src/main.cpp  ****         rear_left->setReference(0);
 7567              		.loc 21 318 0
 7568 0640 D4F8380A 		ldr	r0, [r4, #2616]
 7569 0644 0021     		movs	r1, #0
 7570 0646 0368     		ldr	r3, [r0]
 7571 0648 5B69     		ldr	r3, [r3, #20]
 7572 064a 9847     		blx	r3
 7573              	.LVL878:
 319:src/main.cpp  ****         rear_right->setReference(0);
 7574              		.loc 21 319 0
 7575 064c D4F8400A 		ldr	r0, [r4, #2624]
 7576 0650 0021     		movs	r1, #0
 7577 0652 0368     		ldr	r3, [r0]
 7578 0654 5B69     		ldr	r3, [r3, #20]
 7579 0656 9847     		blx	r3
 7580              	.LVL879:
 320:src/main.cpp  ****       }
 7581              		.loc 21 320 0
 7582 0658 D4F8440A 		ldr	r0, [r4, #2628]
 7583 065c 0021     		movs	r1, #0
 7584 065e 0368     		ldr	r3, [r0]
 7585 0660 5B69     		ldr	r3, [r3, #20]
 7586              	.L433:
 7587 0662 9847     		blx	r3
 7588              	.LVL880:
 7589              	.L404:
 324:src/main.cpp  ****     auto fl = front_left->update(0.1, connected);
 7590              		.loc 21 324 0
 7591 0664 D4F83C1A 		ldr	r1, [r4, #2620]
 7592 0668 444A     		ldr	r2, .L441
 7593 066a 0B68     		ldr	r3, [r1]
 7594 066c 34A8     		add	r0, sp, #208
 7595 066e DE69     		ldr	r6, [r3, #28]
 7596 0670 2B46     		mov	r3, r5
 7597 0672 B047     		blx	r6
 7598              	.LVL881:
 325:src/main.cpp  ****     auto rl = rear_left->update(0.1, connected);
 7599              		.loc 21 325 0
 7600 0674 D4F8381A 		ldr	r1, [r4, #2616]
 7601 0678 404A     		ldr	r2, .L441
 7602 067a 0B68     		ldr	r3, [r1]
 7603 067c 38A8     		add	r0, sp, #224
 7604 067e DE69     		ldr	r6, [r3, #28]
 7605 0680 2B46     		mov	r3, r5
 7606 0682 B047     		blx	r6
 7607              	.LVL882:
 326:src/main.cpp  ****     auto rr = rear_right->update(0.1, connected);
 7608              		.loc 21 326 0
 7609 0684 D4F8401A 		ldr	r1, [r4, #2624]
 7610 0688 3C4A     		ldr	r2, .L441
 7611 068a 0B68     		ldr	r3, [r1]
 7612 068c 3CA8     		add	r0, sp, #240
 7613 068e DE69     		ldr	r6, [r3, #28]
 7614 0690 2B46     		mov	r3, r5
 7615 0692 B047     		blx	r6
 7616              	.LVL883:
 327:src/main.cpp  **** 
 7617              		.loc 21 327 0
 7618 0694 D4F8441A 		ldr	r1, [r4, #2628]
 7619 0698 384A     		ldr	r2, .L441
 7620 069a 0B68     		ldr	r3, [r1]
 7621 069c 40A8     		add	r0, sp, #256
 7622 069e DE69     		ldr	r6, [r3, #28]
 7623 06a0 2B46     		mov	r3, r5
 7624 06a2 B047     		blx	r6
 7625              	.LVL884:
 329:src/main.cpp  ****       sprintf(error, "Encoder timeout: %s - [FAIL]", front_right->motorName());
 7626              		.loc 21 329 0
 7627 06a4 4FF6FF73 		movw	r3, #65535
 7628 06a8 349A     		ldr	r2, [sp, #208]
 7629 06aa 354D     		ldr	r5, .L441+4
 7630              	.LVL885:
 7631 06ac 9A42     		cmp	r2, r3
 7632 06ae 0ED1     		bne	.L409
 330:src/main.cpp  ****       nh.logerror(error);
 7633              		.loc 21 330 0
 7634 06b0 D4F83C0A 		ldr	r0, [r4, #2620]
 7635 06b4 0368     		ldr	r3, [r0]
 7636 06b6 1B69     		ldr	r3, [r3, #16]
 7637 06b8 9847     		blx	r3
 7638              	.LVL886:
 7639 06ba 3249     		ldr	r1, .L441+8
 7640 06bc 0246     		mov	r2, r0
 7641 06be E2A8     		add	r0, sp, #904
 7642 06c0 FFF7FEFF 		bl	sprintf
 7643              	.LVL887:
 331:src/main.cpp  ****     }
 7644              		.loc 21 331 0
 7645 06c4 E2A9     		add	r1, sp, #904
 7646 06c6 05F58660 		add	r0, r5, #1072
 7647 06ca FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7648              	.LVL888:
 7649              	.L409:
 333:src/main.cpp  ****       sprintf(error, "Encoder timeout: %s - [FAIL]", front_left->motorName());
 7650              		.loc 21 333 0
 7651 06ce 4FF6FF73 		movw	r3, #65535
 7652 06d2 389A     		ldr	r2, [sp, #224]
 7653 06d4 9A42     		cmp	r2, r3
 7654 06d6 0DD1     		bne	.L410
 334:src/main.cpp  ****       nh.logerror(error);
 7655              		.loc 21 334 0
 7656 06d8 D5F8380A 		ldr	r0, [r5, #2616]
 7657 06dc 0368     		ldr	r3, [r0]
 7658 06de 1B69     		ldr	r3, [r3, #16]
 7659 06e0 9847     		blx	r3
 7660              	.LVL889:
 7661 06e2 2849     		ldr	r1, .L441+8
 7662 06e4 0246     		mov	r2, r0
 7663 06e6 E2A8     		add	r0, sp, #904
 7664 06e8 FFF7FEFF 		bl	sprintf
 7665              	.LVL890:
 335:src/main.cpp  ****     }
 7666              		.loc 21 335 0
 7667 06ec E2A9     		add	r1, sp, #904
 7668 06ee 2648     		ldr	r0, .L441+12
 7669 06f0 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7670              	.LVL891:
 7671              	.L410:
 337:src/main.cpp  ****       sprintf(error, "Encoder timeout: %s - [FAIL]", rear_left->motorName());
 7672              		.loc 21 337 0
 7673 06f4 4FF6FF73 		movw	r3, #65535
 7674 06f8 3C9A     		ldr	r2, [sp, #240]
 7675 06fa 9A42     		cmp	r2, r3
 7676 06fc 0DD1     		bne	.L411
 338:src/main.cpp  ****       nh.logerror(error);
 7677              		.loc 21 338 0
 7678 06fe D5F8400A 		ldr	r0, [r5, #2624]
 7679 0702 0368     		ldr	r3, [r0]
 7680 0704 1B69     		ldr	r3, [r3, #16]
 7681 0706 9847     		blx	r3
 7682              	.LVL892:
 7683 0708 1E49     		ldr	r1, .L441+8
 7684 070a 0246     		mov	r2, r0
 7685 070c E2A8     		add	r0, sp, #904
 7686 070e FFF7FEFF 		bl	sprintf
 7687              	.LVL893:
 339:src/main.cpp  ****     }
 7688              		.loc 21 339 0
 7689 0712 E2A9     		add	r1, sp, #904
 7690 0714 1C48     		ldr	r0, .L441+12
 7691 0716 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7692              	.LVL894:
 7693              	.L411:
 341:src/main.cpp  ****       sprintf(error, "Encoder timeout: %s - [FAIL]", rear_right->motorName());
 7694              		.loc 21 341 0
 7695 071a 4FF6FF73 		movw	r3, #65535
 7696 071e 409A     		ldr	r2, [sp, #256]
 7697 0720 9A42     		cmp	r2, r3
 7698 0722 0DD1     		bne	.L412
 342:src/main.cpp  ****       nh.logerror(error);
 7699              		.loc 21 342 0
 7700 0724 D5F8440A 		ldr	r0, [r5, #2628]
 7701 0728 0368     		ldr	r3, [r0]
 7702 072a 1B69     		ldr	r3, [r3, #16]
 7703 072c 9847     		blx	r3
 7704              	.LVL895:
 7705 072e 1549     		ldr	r1, .L441+8
 7706 0730 0246     		mov	r2, r0
 7707 0732 E2A8     		add	r0, sp, #904
 7708 0734 FFF7FEFF 		bl	sprintf
 7709              	.LVL896:
 343:src/main.cpp  ****     }
 7710              		.loc 21 343 0
 7711 0738 E2A9     		add	r1, sp, #904
 7712 073a 1348     		ldr	r0, .L441+12
 7713 073c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7714              	.LVL897:
 7715              	.L412:
 346:src/main.cpp  **** 
 7716              		.loc 21 346 0
 7717 0740 379B     		ldr	r3, [sp, #220]	@ float
 349:src/main.cpp  **** 
 7718              		.loc 21 349 0
 7719 0742 2F9A     		ldr	r2, [sp, #188]	@ float
 346:src/main.cpp  **** 
 7720              		.loc 21 346 0
 7721 0744 4493     		str	r3, [sp, #272]	@ float
 7722 0746 3B9B     		ldr	r3, [sp, #236]	@ float
 7723              	.LBB618:
 7724              	.LBB619:
 360:src/main.cpp  ****     }
 7725              		.loc 21 360 0
 7726 0748 D4F8340A 		ldr	r0, [r4, #2612]	@ float
 7727              	.LBE619:
 7728              	.LBE618:
 346:src/main.cpp  **** 
 7729              		.loc 21 346 0
 7730 074c 4593     		str	r3, [sp, #276]	@ float
 7731 074e 3F9B     		ldr	r3, [sp, #252]	@ float
 349:src/main.cpp  **** 
 7732              		.loc 21 349 0
 7733 0750 4892     		str	r2, [sp, #288]	@ float
 346:src/main.cpp  **** 
 7734              		.loc 21 346 0
 7735 0752 4693     		str	r3, [sp, #280]	@ float
 7736 0754 439B     		ldr	r3, [sp, #268]	@ float
 349:src/main.cpp  **** 
 7737              		.loc 21 349 0
 7738 0756 4A92     		str	r2, [sp, #296]	@ float
 346:src/main.cpp  **** 
 7739              		.loc 21 346 0
 7740 0758 4793     		str	r3, [sp, #284]	@ float
 349:src/main.cpp  **** 
 7741              		.loc 21 349 0
 7742 075a 339B     		ldr	r3, [sp, #204]	@ float
 354:src/main.cpp  ****     for(i = 0; i < 4; i++){
 7743              		.loc 21 354 0
 7744 075c 0025     		movs	r5, #0
 349:src/main.cpp  **** 
 7745              		.loc 21 349 0
 7746 075e 4993     		str	r3, [sp, #292]	@ float
 7747 0760 4B93     		str	r3, [sp, #300]	@ float
 7748              	.LVL898:
 7749              	.LBB624:
 7750              	.LBB620:
 360:src/main.cpp  ****     }
 7751              		.loc 21 360 0
 7752 0762 FFF7FEFF 		bl	__aeabi_f2d
 7753              	.LVL899:
 7754              	.LBE620:
 7755              	.LBE624:
 353:src/main.cpp  ****     float theta_dot = 0;
 7756              		.loc 21 353 0
 7757 0766 A946     		mov	r9, r5
 7758              	.LBB625:
 7759              	.LBB621:
 360:src/main.cpp  ****     }
 7760              		.loc 21 360 0
 7761 0768 CDE91A01 		strd	r0, [sp, #104]
 7762              	.LBE621:
 7763              	.LBE625:
 346:src/main.cpp  **** 
 7764              		.loc 21 346 0
 7765 076c 44AE     		add	r6, sp, #272
 349:src/main.cpp  **** 
 7766              		.loc 21 349 0
 7767 076e 48AF     		add	r7, sp, #288
 352:src/main.cpp  ****     float y_dot = 0;
 7768              		.loc 21 352 0
 7769 0770 1295     		str	r5, [sp, #72]	@ float
 7770              	.LBB626:
 355:src/main.cpp  ****       // TODO: Calculate beta correctly
 7771              		.loc 21 355 0
 7772 0772 4FF00008 		mov	r8, #0
 7773              	.LBB622:
 357:src/main.cpp  ****       x_dot += sin(alpha[i]+beta)*speeds[i];
 7774              		.loc 21 357 0
 7775 0776 1E97     		str	r7, [sp, #120]
 358:src/main.cpp  ****       y_dot += cos(alpha[i]+beta)*speeds[i];
 7776              		.loc 21 358 0
 7777 0778 1F96     		str	r6, [sp, #124]
 7778 077a 07E0     		b	.L442
 7779              	.L443:
 7780              		.align	2
 7781              	.L441:
 7782 077c CDCCCC3D 		.word	1036831949
 7783 0780 00000000 		.word	.LANCHOR1
 7784 0784 1D050000 		.word	.LC51
 7785 0788 30040000 		.word	.LANCHOR1+1072
 7786              	.L442:
 7787              	.LVL900:
 7788              	.L413:
 357:src/main.cpp  ****       x_dot += sin(alpha[i]+beta)*speeds[i];
 7789              		.loc 21 357 0 discriminator 2
 7790 078c 1E9B     		ldr	r3, [sp, #120]
 7791 078e 53F82830 		ldr	r3, [r3, r8, lsl #2]	@ float
 7792 0792 1C93     		str	r3, [sp, #112]	@ float
 7793              	.LVL901:
 358:src/main.cpp  ****       y_dot += cos(alpha[i]+beta)*speeds[i];
 7794              		.loc 21 358 0 discriminator 2
 7795 0794 28AB     		add	r3, sp, #160
 7796              	.LVL902:
 7797 0796 53F82830 		ldr	r3, [r3, r8, lsl #2]	@ float
 7798 079a 1C98     		ldr	r0, [sp, #112]	@ float
 7799 079c 1946     		mov	r1, r3
 7800 079e 1493     		str	r3, [sp, #80]	@ float
 7801 07a0 FFF7FEFF 		bl	__aeabi_fadd
 7802              	.LVL903:
 7803 07a4 FFF7FEFF 		bl	__aeabi_f2d
 7804              	.LVL904:
 7805 07a8 8246     		mov	r10, r0
 7806 07aa 8B46     		mov	fp, r1
 7807 07ac FFF7FEFF 		bl	sin
 7808              	.LVL905:
 7809 07b0 1F9B     		ldr	r3, [sp, #124]
 7810 07b2 CDE91601 		strd	r0, [sp, #88]
 7811 07b6 53F82800 		ldr	r0, [r3, r8, lsl #2]	@ float
 7812 07ba FFF7FEFF 		bl	__aeabi_f2d
 7813              	.LVL906:
 7814 07be 0246     		mov	r2, r0
 7815 07c0 0B46     		mov	r3, r1
 7816 07c2 CDE91001 		strd	r0, [sp, #64]
 7817 07c6 DDE91601 		ldrd	r0, [sp, #88]
 7818 07ca FFF7FEFF 		bl	__aeabi_dmul
 7819              	.LVL907:
 7820 07ce 0646     		mov	r6, r0
 7821 07d0 1298     		ldr	r0, [sp, #72]	@ float
 7822 07d2 0F46     		mov	r7, r1
 7823 07d4 FFF7FEFF 		bl	__aeabi_f2d
 7824              	.LVL908:
 7825 07d8 0246     		mov	r2, r0
 7826 07da 0B46     		mov	r3, r1
 7827 07dc 3046     		mov	r0, r6
 7828 07de 3946     		mov	r1, r7
 7829 07e0 FFF7FEFF 		bl	__aeabi_dadd
 7830              	.LVL909:
 7831 07e4 FFF7FEFF 		bl	__aeabi_d2f
 7832              	.LVL910:
 359:src/main.cpp  ****       theta_dot += cos(beta - atan((l*cos(alpha[i]+d*cos(alpha[i] + beta)))/(l*sin(alpha[i] + d*sin
 7833              		.loc 21 359 0 discriminator 2
 7834 07e8 5946     		mov	r1, fp
 358:src/main.cpp  ****       y_dot += cos(alpha[i]+beta)*speeds[i];
 7835              		.loc 21 358 0 discriminator 2
 7836 07ea 1290     		str	r0, [sp, #72]	@ float
 7837              	.LVL911:
 359:src/main.cpp  ****       theta_dot += cos(beta - atan((l*cos(alpha[i]+d*cos(alpha[i] + beta)))/(l*sin(alpha[i] + d*sin
 7838              		.loc 21 359 0 discriminator 2
 7839 07ec 5046     		mov	r0, r10
 7840              	.LVL912:
 7841 07ee FFF7FEFF 		bl	cos
 7842              	.LVL913:
 7843 07f2 0246     		mov	r2, r0
 7844 07f4 0B46     		mov	r3, r1
 7845 07f6 8246     		mov	r10, r0
 7846 07f8 8B46     		mov	fp, r1
 7847 07fa DDE91001 		ldrd	r0, [sp, #64]
 7848 07fe FFF7FEFF 		bl	__aeabi_dmul
 7849              	.LVL914:
 7850 0802 0646     		mov	r6, r0
 7851 0804 4846     		mov	r0, r9
 7852 0806 0F46     		mov	r7, r1
 7853 0808 FFF7FEFF 		bl	__aeabi_f2d
 7854              	.LVL915:
 7855 080c 0246     		mov	r2, r0
 7856 080e 0B46     		mov	r3, r1
 7857 0810 3046     		mov	r0, r6
 7858 0812 3946     		mov	r1, r7
 7859 0814 FFF7FEFF 		bl	__aeabi_dadd
 7860              	.LVL916:
 7861 0818 FFF7FEFF 		bl	__aeabi_d2f
 7862              	.LVL917:
 7863 081c 8146     		mov	r9, r0
 7864              	.LVL918:
 360:src/main.cpp  ****     }
 7865              		.loc 21 360 0 discriminator 2
 7866 081e 1D98     		ldr	r0, [sp, #116]	@ float
 7867              	.LVL919:
 7868 0820 FFF7FEFF 		bl	__aeabi_f2d
 7869              	.LVL920:
 7870 0824 CDE91801 		strd	r0, [sp, #96]
 7871 0828 1498     		ldr	r0, [sp, #80]	@ float
 7872 082a FFF7FEFF 		bl	__aeabi_f2d
 7873              	.LVL921:
 7874 082e DDE91A23 		ldrd	r2, [sp, #104]
 7875 0832 0646     		mov	r6, r0
 7876 0834 0F46     		mov	r7, r1
 7877 0836 5046     		mov	r0, r10
 7878 0838 5946     		mov	r1, fp
 7879 083a FFF7FEFF 		bl	__aeabi_dmul
 7880              	.LVL922:
 7881 083e 3246     		mov	r2, r6
 7882 0840 3B46     		mov	r3, r7
 7883 0842 FFF7FEFF 		bl	__aeabi_dadd
 7884              	.LVL923:
 7885 0846 FFF7FEFF 		bl	cos
 7886              	.LVL924:
 7887 084a DDE91A23 		ldrd	r2, [sp, #104]
 7888 084e 8246     		mov	r10, r0
 7889 0850 8B46     		mov	fp, r1
 7890 0852 DDE91601 		ldrd	r0, [sp, #88]
 7891 0856 FFF7FEFF 		bl	__aeabi_dmul
 7892              	.LVL925:
 7893 085a 3246     		mov	r2, r6
 7894 085c 3B46     		mov	r3, r7
 7895 085e FFF7FEFF 		bl	__aeabi_dadd
 7896              	.LVL926:
 7897 0862 FFF7FEFF 		bl	sin
 7898              	.LVL927:
 7899 0866 5246     		mov	r2, r10
 7900 0868 CDE91401 		strd	r0, [sp, #80]
 7901 086c DDE91801 		ldrd	r0, [sp, #96]
 7902 0870 5B46     		mov	r3, fp
 7903 0872 FFF7FEFF 		bl	__aeabi_dmul
 7904              	.LVL928:
 7905 0876 DDE91423 		ldrd	r2, [sp, #80]
 7906 087a 0646     		mov	r6, r0
 7907 087c 0F46     		mov	r7, r1
 7908 087e DDE91801 		ldrd	r0, [sp, #96]
 7909 0882 FFF7FEFF 		bl	__aeabi_dmul
 7910              	.LVL929:
 7911 0886 0246     		mov	r2, r0
 7912 0888 0B46     		mov	r3, r1
 7913 088a 3046     		mov	r0, r6
 7914 088c 3946     		mov	r1, r7
 7915 088e FFF7FEFF 		bl	__aeabi_ddiv
 7916              	.LVL930:
 7917 0892 FFF7FEFF 		bl	atan
 7918              	.LVL931:
 7919 0896 0646     		mov	r6, r0
 7920 0898 0F46     		mov	r7, r1
 7921 089a 1C98     		ldr	r0, [sp, #112]	@ float
 7922 089c FFF7FEFF 		bl	__aeabi_f2d
 7923              	.LVL932:
 7924 08a0 3246     		mov	r2, r6
 7925 08a2 3B46     		mov	r3, r7
 7926 08a4 FFF7FEFF 		bl	__aeabi_dsub
 7927              	.LVL933:
 7928 08a8 FFF7FEFF 		bl	cos
 7929              	.LVL934:
 7930 08ac 0246     		mov	r2, r0
 7931 08ae 0B46     		mov	r3, r1
 7932 08b0 DDE91001 		ldrd	r0, [sp, #64]
 7933 08b4 FFF7FEFF 		bl	__aeabi_dmul
 7934              	.LVL935:
 7935 08b8 0646     		mov	r6, r0
 7936 08ba 2846     		mov	r0, r5
 7937 08bc 0F46     		mov	r7, r1
 7938 08be FFF7FEFF 		bl	__aeabi_f2d
 7939              	.LVL936:
 7940 08c2 0246     		mov	r2, r0
 7941 08c4 0B46     		mov	r3, r1
 7942 08c6 3046     		mov	r0, r6
 7943 08c8 3946     		mov	r1, r7
 7944 08ca FFF7FEFF 		bl	__aeabi_dadd
 7945              	.LVL937:
 7946 08ce FFF7FEFF 		bl	__aeabi_d2f
 7947              	.LVL938:
 7948              	.LBE622:
 355:src/main.cpp  ****       // TODO: Calculate beta correctly
 7949              		.loc 21 355 0 discriminator 2
 7950 08d2 08F10108 		add	r8, r8, #1
 7951              	.LVL939:
 7952 08d6 B8F1040F 		cmp	r8, #4
 7953              	.LBB623:
 360:src/main.cpp  ****     }
 7954              		.loc 21 360 0 discriminator 2
 7955 08da 0546     		mov	r5, r0
 7956              	.LVL940:
 7957              	.LBE623:
 355:src/main.cpp  ****       // TODO: Calculate beta correctly
 7958              		.loc 21 355 0 discriminator 2
 7959 08dc 7FF456AF 		bne	.L413
 7960              	.LBE626:
 362:src/main.cpp  ****     y_dot /= 4;
 7961              		.loc 21 362 0
 7962 08e0 1298     		ldr	r0, [sp, #72]	@ float
 7963              	.LVL941:
 7964 08e2 4FF07A51 		mov	r1, #1048576000
 7965 08e6 FFF7FEFF 		bl	__aeabi_fmul
 7966              	.LVL942:
 363:src/main.cpp  ****     theta_dot /= 4;
 7967              		.loc 21 363 0
 7968 08ea 4FF07A51 		mov	r1, #1048576000
 362:src/main.cpp  ****     y_dot /= 4;
 7969              		.loc 21 362 0
 7970 08ee 1290     		str	r0, [sp, #72]	@ float
 7971              	.LVL943:
 363:src/main.cpp  ****     theta_dot /= 4;
 7972              		.loc 21 363 0
 7973 08f0 4846     		mov	r0, r9
 7974              	.LVL944:
 7975 08f2 FFF7FEFF 		bl	__aeabi_fmul
 7976              	.LVL945:
 364:src/main.cpp  **** 
 7977              		.loc 21 364 0
 7978 08f6 4FF07A51 		mov	r1, #1048576000
 363:src/main.cpp  ****     theta_dot /= 4;
 7979              		.loc 21 363 0
 7980 08fa 1C90     		str	r0, [sp, #112]	@ float
 7981              	.LVL946:
 364:src/main.cpp  **** 
 7982              		.loc 21 364 0
 7983 08fc 2846     		mov	r0, r5
 7984              	.LVL947:
 7985 08fe FFF7FEFF 		bl	__aeabi_fmul
 7986              	.LVL948:
 7987 0902 1490     		str	r0, [sp, #80]	@ float
 7988              	.LVL949:
 368:src/main.cpp  ****     double delta_y = (x_dot * sin(th) + y_dot * cos(th)) * dt;
 7989              		.loc 21 368 0
 7990 0904 1298     		ldr	r0, [sp, #72]	@ float
 7991              	.LVL950:
 7992 0906 FFF7FEFF 		bl	__aeabi_f2d
 7993              	.LVL951:
 7994 090a CDE91001 		strd	r0, [sp, #64]
 7995 090e DDE90801 		ldrd	r0, [sp, #32]
 7996 0912 FFF7FEFF 		bl	cos
 7997              	.LVL952:
 7998 0916 8046     		mov	r8, r0
 7999              	.LVL953:
 8000 0918 1C98     		ldr	r0, [sp, #112]	@ float
 8001 091a 8946     		mov	r9, r1
 8002 091c FFF7FEFF 		bl	__aeabi_f2d
 8003              	.LVL954:
 8004 0920 8246     		mov	r10, r0
 8005 0922 8B46     		mov	fp, r1
 8006 0924 DDE90801 		ldrd	r0, [sp, #32]
 8007 0928 FFF7FEFF 		bl	sin
 8008              	.LVL955:
 372:src/main.cpp  ****     y += delta_y;
 8009              		.loc 21 372 0
 8010 092c 4246     		mov	r2, r8
 368:src/main.cpp  ****     double delta_y = (x_dot * sin(th) + y_dot * cos(th)) * dt;
 8011              		.loc 21 368 0
 8012 092e 0646     		mov	r6, r0
 8013 0930 0F46     		mov	r7, r1
 8014              	.LVL956:
 372:src/main.cpp  ****     y += delta_y;
 8015              		.loc 21 372 0
 8016 0932 DDE91001 		ldrd	r0, [sp, #64]
 8017 0936 4B46     		mov	r3, r9
 8018 0938 FFF7FEFF 		bl	__aeabi_dmul
 8019              	.LVL957:
 8020 093c 3246     		mov	r2, r6
 8021 093e CDE91601 		strd	r0, [sp, #88]
 8022 0942 3B46     		mov	r3, r7
 8023 0944 5046     		mov	r0, r10
 8024 0946 5946     		mov	r1, fp
 8025 0948 FFF7FEFF 		bl	__aeabi_dmul
 8026              	.LVL958:
 8027 094c 0246     		mov	r2, r0
 8028 094e 0B46     		mov	r3, r1
 8029 0950 DDE91601 		ldrd	r0, [sp, #88]
 8030 0954 FFF7FEFF 		bl	__aeabi_dsub
 8031              	.LVL959:
 8032 0958 79A3     		adr	r3, .L444
 8033 095a D3E90023 		ldrd	r2, [r3]
 8034 095e FFF7FEFF 		bl	__aeabi_dmul
 8035              	.LVL960:
 8036 0962 0246     		mov	r2, r0
 8037 0964 0B46     		mov	r3, r1
 8038 0966 DDE90A01 		ldrd	r0, [sp, #40]
 8039 096a FFF7FEFF 		bl	__aeabi_dadd
 8040              	.LVL961:
 373:src/main.cpp  ****     th += delta_th;
 8041              		.loc 21 373 0
 8042 096e 3246     		mov	r2, r6
 8043 0970 3B46     		mov	r3, r7
 372:src/main.cpp  ****     y += delta_y;
 8044              		.loc 21 372 0
 8045 0972 CDE90A01 		strd	r0, [sp, #40]
 8046              	.LVL962:
 373:src/main.cpp  ****     th += delta_th;
 8047              		.loc 21 373 0
 8048 0976 DDE91001 		ldrd	r0, [sp, #64]
 8049              	.LVL963:
 8050 097a FFF7FEFF 		bl	__aeabi_dmul
 8051              	.LVL964:
 8052 097e 5246     		mov	r2, r10
 8053 0980 0646     		mov	r6, r0
 8054              	.LVL965:
 8055 0982 0F46     		mov	r7, r1
 8056 0984 5B46     		mov	r3, fp
 8057 0986 4046     		mov	r0, r8
 8058 0988 4946     		mov	r1, r9
 8059 098a FFF7FEFF 		bl	__aeabi_dmul
 8060              	.LVL966:
 8061 098e 0246     		mov	r2, r0
 8062 0990 0B46     		mov	r3, r1
 8063 0992 3046     		mov	r0, r6
 8064 0994 3946     		mov	r1, r7
 8065 0996 FFF7FEFF 		bl	__aeabi_dadd
 8066              	.LVL967:
 8067 099a 69A3     		adr	r3, .L444
 8068 099c D3E90023 		ldrd	r2, [r3]
 8069 09a0 FFF7FEFF 		bl	__aeabi_dmul
 8070              	.LVL968:
 8071 09a4 0246     		mov	r2, r0
 8072 09a6 0B46     		mov	r3, r1
 8073 09a8 DDE90C01 		ldrd	r0, [sp, #48]
 8074 09ac FFF7FEFF 		bl	__aeabi_dadd
 8075              	.LVL969:
 8076 09b0 CDE90C01 		strd	r0, [sp, #48]
 8077              	.LVL970:
 374:src/main.cpp  **** 
 8078              		.loc 21 374 0
 8079 09b4 6449     		ldr	r1, .L444+8
 8080 09b6 1498     		ldr	r0, [sp, #80]	@ float
 8081              	.LVL971:
 8082 09b8 FFF7FEFF 		bl	__aeabi_fmul
 8083              	.LVL972:
 8084 09bc FFF7FEFF 		bl	__aeabi_f2d
 8085              	.LVL973:
 8086 09c0 0246     		mov	r2, r0
 8087 09c2 0B46     		mov	r3, r1
 8088 09c4 DDE90801 		ldrd	r0, [sp, #32]
 8089 09c8 FFF7FEFF 		bl	__aeabi_dadd
 8090              	.LVL974:
 8091              	.LBB627:
 8092              	.LBB628:
 8093              		.file 27 "./lib/ros_lib/tf/tf.h"
   1:./lib/ros_lib/tf/tf.h **** /* 
   2:./lib/ros_lib/tf/tf.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/tf/tf.h ****  *
   4:./lib/ros_lib/tf/tf.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/tf/tf.h ****  * All rights reserved.
   6:./lib/ros_lib/tf/tf.h ****  *
   7:./lib/ros_lib/tf/tf.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/tf/tf.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/tf/tf.h ****  * are met:
  10:./lib/ros_lib/tf/tf.h ****  *
  11:./lib/ros_lib/tf/tf.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/tf/tf.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/tf/tf.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/tf/tf.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/tf/tf.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/tf/tf.h ****  *    with the distribution.
  17:./lib/ros_lib/tf/tf.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/tf/tf.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/tf/tf.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/tf/tf.h ****  *
  21:./lib/ros_lib/tf/tf.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/tf/tf.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/tf/tf.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/tf/tf.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/tf/tf.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/tf/tf.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/tf/tf.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/tf/tf.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/tf/tf.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/tf/tf.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/tf/tf.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/tf/tf.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/tf/tf.h ****  */
  34:./lib/ros_lib/tf/tf.h **** 
  35:./lib/ros_lib/tf/tf.h **** #ifndef ROS_TF_H_
  36:./lib/ros_lib/tf/tf.h **** #define ROS_TF_H_
  37:./lib/ros_lib/tf/tf.h **** 
  38:./lib/ros_lib/tf/tf.h **** #include "geometry_msgs/TransformStamped.h"
  39:./lib/ros_lib/tf/tf.h **** 
  40:./lib/ros_lib/tf/tf.h **** namespace tf
  41:./lib/ros_lib/tf/tf.h **** {
  42:./lib/ros_lib/tf/tf.h ****   
  43:./lib/ros_lib/tf/tf.h ****   static inline geometry_msgs::Quaternion createQuaternionFromYaw(double yaw)
  44:./lib/ros_lib/tf/tf.h ****   {
  45:./lib/ros_lib/tf/tf.h ****     geometry_msgs::Quaternion q;
  46:./lib/ros_lib/tf/tf.h ****     q.x = 0;
  47:./lib/ros_lib/tf/tf.h ****     q.y = 0;
  48:./lib/ros_lib/tf/tf.h ****     q.z = sin(yaw * 0.5);
 8094              		.loc 27 48 0
 8095 09cc 0022     		movs	r2, #0
 8096 09ce 5F4B     		ldr	r3, .L444+12
 8097              	.LBE628:
 8098              	.LBE627:
 374:src/main.cpp  **** 
 8099              		.loc 21 374 0
 8100 09d0 CDE90801 		strd	r0, [sp, #32]
 8101              	.LVL975:
 8102              	.LBB630:
 8103              	.LBB629:
 8104              		.loc 27 48 0
 8105 09d4 FFF7FEFF 		bl	__aeabi_dmul
 8106              	.LVL976:
 8107 09d8 0646     		mov	r6, r0
 8108 09da 0F46     		mov	r7, r1
 8109 09dc FFF7FEFF 		bl	sin
 8110              	.LVL977:
 8111 09e0 FFF7FEFF 		bl	__aeabi_d2f
 8112              	.LVL978:
  49:./lib/ros_lib/tf/tf.h ****     q.w = cos(yaw * 0.5);
 8113              		.loc 27 49 0
 8114 09e4 3946     		mov	r1, r7
  48:./lib/ros_lib/tf/tf.h ****     q.w = cos(yaw * 0.5);
 8115              		.loc 27 48 0
 8116 09e6 8346     		mov	fp, r0
 8117              		.loc 27 49 0
 8118 09e8 3046     		mov	r0, r6
 8119 09ea FFF7FEFF 		bl	cos
 8120              	.LVL979:
 8121 09ee FFF7FEFF 		bl	__aeabi_d2f
 8122              	.LVL980:
 8123 09f2 8046     		mov	r8, r0
 8124              	.LVL981:
 8125              	.LBE629:
 8126              	.LBE630:
 380:src/main.cpp  ****     odom_trans.header.frame_id = "odom";
 8127              		.loc 21 380 0
 8128 09f4 0F98     		ldr	r0, [sp, #60]	@ float
 8129 09f6 FFF7FEFF 		bl	__aeabi_f2uiz
 8130              	.LVL982:
 8131              	.LBB631:
 8132              	.LBB632:
  53:./lib/ros_lib/ros/time.h ****       Time(uint32_t _sec, uint32_t _nsec) : sec(_sec), nsec(_nsec)
 8133              		.loc 26 53 0
 8134 09fa 26AD     		add	r5, sp, #152
 8135              	.LVL983:
 8136 09fc 0023     		movs	r3, #0
 8137 09fe 2690     		str	r0, [sp, #152]
 8138 0a00 1690     		str	r0, [sp, #88]
  54:./lib/ros_lib/ros/time.h ****       {
  55:./lib/ros_lib/ros/time.h ****         normalizeSecNSec(sec, nsec);
 8139              		.loc 26 55 0
 8140 0a02 27A9     		add	r1, sp, #156
 8141 0a04 2846     		mov	r0, r5
 8142              	.LVL984:
 8143              	.LBE632:
 8144              	.LBE631:
 380:src/main.cpp  ****     odom_trans.header.frame_id = "odom";
 8145              		.loc 21 380 0
 8146 0a06 524E     		ldr	r6, .L444+16
 8147              	.LBB635:
 8148              	.LBB633:
  53:./lib/ros_lib/ros/time.h ****       Time(uint32_t _sec, uint32_t _nsec) : sec(_sec), nsec(_nsec)
 8149              		.loc 26 53 0
 8150 0a08 2793     		str	r3, [sp, #156]
 8151 0a0a 1093     		str	r3, [sp, #64]
 8152              	.LBE633:
 8153              	.LBE635:
 382:src/main.cpp  **** 
 8154              		.loc 21 382 0
 8155 0a0c 514F     		ldr	r7, .L444+20
 8156              	.LBB636:
 8157              	.LBB634:
 8158              		.loc 26 55 0
 8159 0a0e FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 8160              	.LVL985:
 8161              	.LBE634:
 8162              	.LBE636:
 380:src/main.cpp  ****     odom_trans.header.frame_id = "odom";
 8163              		.loc 21 380 0
 8164 0a12 95E80300 		ldmia	r5, {r0, r1}
 381:src/main.cpp  ****     odom_trans.child_frame_id = "base_link";
 8165              		.loc 21 381 0
 8166 0a16 504B     		ldr	r3, .L444+24
 380:src/main.cpp  ****     odom_trans.header.frame_id = "odom";
 8167              		.loc 21 380 0
 8168 0a18 86E80300 		stmia	r6, {r0, r1}
 384:src/main.cpp  ****     odom_trans.transform.translation.y = y;
 8169              		.loc 21 384 0
 8170 0a1c DDE90A01 		ldrd	r0, [sp, #40]
 381:src/main.cpp  ****     odom_trans.child_frame_id = "base_link";
 8171              		.loc 21 381 0
 8172 0a20 C4F85C3A 		str	r3, [r4, #2652]
 382:src/main.cpp  **** 
 8173              		.loc 21 382 0
 8174 0a24 C4F8607A 		str	r7, [r4, #2656]
 384:src/main.cpp  ****     odom_trans.transform.translation.y = y;
 8175              		.loc 21 384 0
 8176 0a28 FFF7FEFF 		bl	__aeabi_d2f
 8177              	.LVL986:
 8178 0a2c 8246     		mov	r10, r0
 8179 0a2e C4F86C0A 		str	r0, [r4, #2668]	@ float
 385:src/main.cpp  ****     odom_trans.transform.translation.z = 0.0;
 8180              		.loc 21 385 0
 8181 0a32 DDE90C01 		ldrd	r0, [sp, #48]
 8182 0a36 FFF7FEFF 		bl	__aeabi_d2f
 8183              	.LVL987:
 8184 0a3a 8146     		mov	r9, r0
 8185              	.LBB637:
 8186              	.LBB638:
 8187              		.file 28 "./lib/ros_lib/tf/transform_broadcaster.h"
   1:./lib/ros_lib/tf/transform_broadcaster.h **** /* 
   2:./lib/ros_lib/tf/transform_broadcaster.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/tf/transform_broadcaster.h ****  *
   4:./lib/ros_lib/tf/transform_broadcaster.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/tf/transform_broadcaster.h ****  * All rights reserved.
   6:./lib/ros_lib/tf/transform_broadcaster.h ****  *
   7:./lib/ros_lib/tf/transform_broadcaster.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/tf/transform_broadcaster.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/tf/transform_broadcaster.h ****  * are met:
  10:./lib/ros_lib/tf/transform_broadcaster.h ****  *
  11:./lib/ros_lib/tf/transform_broadcaster.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/tf/transform_broadcaster.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/tf/transform_broadcaster.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/tf/transform_broadcaster.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/tf/transform_broadcaster.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/tf/transform_broadcaster.h ****  *    with the distribution.
  17:./lib/ros_lib/tf/transform_broadcaster.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/tf/transform_broadcaster.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/tf/transform_broadcaster.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/tf/transform_broadcaster.h ****  *
  21:./lib/ros_lib/tf/transform_broadcaster.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/tf/transform_broadcaster.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/tf/transform_broadcaster.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/tf/transform_broadcaster.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/tf/transform_broadcaster.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/tf/transform_broadcaster.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/tf/transform_broadcaster.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/tf/transform_broadcaster.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/tf/transform_broadcaster.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/tf/transform_broadcaster.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/tf/transform_broadcaster.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/tf/transform_broadcaster.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/tf/transform_broadcaster.h ****  */
  34:./lib/ros_lib/tf/transform_broadcaster.h **** 
  35:./lib/ros_lib/tf/transform_broadcaster.h **** #ifndef ROS_TRANSFORM_BROADCASTER_H_
  36:./lib/ros_lib/tf/transform_broadcaster.h **** #define ROS_TRANSFORM_BROADCASTER_H_
  37:./lib/ros_lib/tf/transform_broadcaster.h **** 
  38:./lib/ros_lib/tf/transform_broadcaster.h **** #include "tfMessage.h"
  39:./lib/ros_lib/tf/transform_broadcaster.h **** 
  40:./lib/ros_lib/tf/transform_broadcaster.h **** namespace tf
  41:./lib/ros_lib/tf/transform_broadcaster.h **** {
  42:./lib/ros_lib/tf/transform_broadcaster.h **** 
  43:./lib/ros_lib/tf/transform_broadcaster.h ****   class TransformBroadcaster
  44:./lib/ros_lib/tf/transform_broadcaster.h ****   {
  45:./lib/ros_lib/tf/transform_broadcaster.h ****     public:
  46:./lib/ros_lib/tf/transform_broadcaster.h ****       TransformBroadcaster() : publisher_("/tf", &internal_msg) {}
  47:./lib/ros_lib/tf/transform_broadcaster.h **** 
  48:./lib/ros_lib/tf/transform_broadcaster.h ****       void init(ros::NodeHandle &nh)
  49:./lib/ros_lib/tf/transform_broadcaster.h ****       {
  50:./lib/ros_lib/tf/transform_broadcaster.h ****         nh.advertise(publisher_);
  51:./lib/ros_lib/tf/transform_broadcaster.h ****       }
  52:./lib/ros_lib/tf/transform_broadcaster.h **** 
  53:./lib/ros_lib/tf/transform_broadcaster.h ****       void sendTransform(geometry_msgs::TransformStamped &transform)
  54:./lib/ros_lib/tf/transform_broadcaster.h ****       {
  55:./lib/ros_lib/tf/transform_broadcaster.h ****         internal_msg.transforms_length = 1;
 8188              		.loc 28 55 0
 8189 0a3c 0121     		movs	r1, #1
 8190              	.LBE638:
 8191              	.LBE637:
 386:src/main.cpp  ****     odom_trans.transform.rotation = odom_quat;
 8192              		.loc 21 386 0
 8193 0a3e 0023     		movs	r3, #0
 8194              	.LBB643:
 8195              	.LBB639:
 8196              		.loc 28 55 0
 8197 0a40 84F8D419 		strb	r1, [r4, #2516]
  56:./lib/ros_lib/tf/transform_broadcaster.h ****         internal_msg.transforms = &transform;
 8198              		.loc 28 56 0
 8199 0a44 A6F10C01 		sub	r1, r6, #12
 8200              	.LBE639:
 8201              	.LBE643:
 385:src/main.cpp  ****     odom_trans.transform.translation.z = 0.0;
 8202              		.loc 21 385 0
 8203 0a48 C4F8700A 		str	r0, [r4, #2672]	@ float
 8204              	.LBB644:
 8205              	.LBB645:
  12:./lib/ros_lib/geometry_msgs/Quaternion.h ****   {
 8206              		.loc 8 12 0
 8207 0a4c C4F87C3A 		str	r3, [r4, #2684]	@ float
 8208 0a50 C4F8803A 		str	r3, [r4, #2688]	@ float
 8209 0a54 C4F8888A 		str	r8, [r4, #2696]	@ float
 8210              	.LBE645:
 8211              	.LBE644:
 8212              	.LBB647:
 8213              	.LBB640:
 8214              		.loc 28 56 0
 8215 0a58 C4F81C1A 		str	r1, [r4, #2588]
 8216              	.LBE640:
 8217              	.LBE647:
 8218              	.LBB648:
 8219              	.LBB646:
  12:./lib/ros_lib/geometry_msgs/Quaternion.h ****   {
 8220              		.loc 8 12 0
 8221 0a5c C4F884BA 		str	fp, [r4, #2692]	@ float
 8222              	.LBE646:
 8223              	.LBE648:
 8224              	.LBB649:
 8225              	.LBB641:
  57:./lib/ros_lib/tf/transform_broadcaster.h ****         publisher_.publish(&internal_msg);
 8226              		.loc 28 57 0
 8227 0a60 A6F18401 		sub	r1, r6, #132
 8228 0a64 A6F13400 		sub	r0, r6, #52
 8229              	.LBE641:
 8230              	.LBE649:
 386:src/main.cpp  ****     odom_trans.transform.rotation = odom_quat;
 8231              		.loc 21 386 0
 8232 0a68 C4F8743A 		str	r3, [r4, #2676]	@ float
 8233              	.LVL988:
 8234              	.LBB650:
 8235              	.LBB642:
 8236              		.loc 28 57 0
 8237 0a6c FFF7FEFF 		bl	_ZN3ros9Publisher7publishEPKNS_3MsgE
 8238              	.LVL989:
 8239              	.LBE642:
 8240              	.LBE650:
 8241              	.LBB651:
 8242              	.LBB652:
  53:./lib/ros_lib/ros/time.h ****       {
 8243              		.loc 26 53 0
 8244 0a70 169A     		ldr	r2, [sp, #88]
 8245 0a72 109B     		ldr	r3, [sp, #64]
 8246              		.loc 26 55 0
 8247 0a74 2846     		mov	r0, r5
 8248 0a76 27A9     		add	r1, sp, #156
  53:./lib/ros_lib/ros/time.h ****       {
 8249              		.loc 26 53 0
 8250 0a78 2A60     		str	r2, [r5]
 8251 0a7a 6B60     		str	r3, [r5, #4]
 8252              		.loc 26 55 0
 8253 0a7c FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 8254              	.LVL990:
 8255              	.LBE652:
 8256              	.LBE651:
 393:src/main.cpp  ****     odom.header.frame_id = "odom";
 8257              		.loc 21 393 0
 8258 0a80 95E80300 		ldmia	r5, {r0, r1}
 8259 0a84 06F14403 		add	r3, r6, #68
 8260 0a88 83E80300 		stmia	r3, {r0, r1}
 394:src/main.cpp  **** 
 8261              		.loc 21 394 0
 8262 0a8c 324B     		ldr	r3, .L444+24
 409:src/main.cpp  **** 
 8263              		.loc 21 409 0
 8264 0a8e 06F13801 		add	r1, r6, #56
 394:src/main.cpp  **** 
 8265              		.loc 21 394 0
 8266 0a92 C4F8A03A 		str	r3, [r4, #2720]
 399:src/main.cpp  ****     odom.pose.pose.orientation = odom_quat;
 8267              		.loc 21 399 0
 8268 0a96 0023     		movs	r3, #0
 8269 0a98 C4F8BC3A 		str	r3, [r4, #2748]	@ float
 8270              	.LVL991:
 8271              	.LBB653:
 8272              	.LBB654:
  12:./lib/ros_lib/geometry_msgs/Quaternion.h ****   {
 8273              		.loc 8 12 0
 8274 0a9c C4F8C43A 		str	r3, [r4, #2756]	@ float
 8275 0aa0 C4F8C83A 		str	r3, [r4, #2760]	@ float
 8276              	.LBE654:
 8277              	.LBE653:
 404:src/main.cpp  ****     odom.twist.twist.linear.y = y_dot;
 8278              		.loc 21 404 0
 8279 0aa4 129B     		ldr	r3, [sp, #72]	@ float
 8280              	.LBB657:
 8281              	.LBB655:
  12:./lib/ros_lib/geometry_msgs/Quaternion.h ****   {
 8282              		.loc 8 12 0
 8283 0aa6 C4F8D08A 		str	r8, [r4, #2768]	@ float
 8284              	.LVL992:
 8285              	.LBE655:
 8286              	.LBE657:
 404:src/main.cpp  ****     odom.twist.twist.linear.y = y_dot;
 8287              		.loc 21 404 0
 8288 0aaa C4F8703B 		str	r3, [r4, #2928]	@ float
 405:src/main.cpp  ****     odom.twist.twist.angular.z = theta_dot;
 8289              		.loc 21 405 0
 8290 0aae 1C9B     		ldr	r3, [sp, #112]	@ float
 8291              	.LBB658:
 8292              	.LBB656:
  12:./lib/ros_lib/geometry_msgs/Quaternion.h ****   {
 8293              		.loc 8 12 0
 8294 0ab0 C4F8CCBA 		str	fp, [r4, #2764]	@ float
 8295              	.LBE656:
 8296              	.LBE658:
 405:src/main.cpp  ****     odom.twist.twist.angular.z = theta_dot;
 8297              		.loc 21 405 0
 8298 0ab4 C4F8743B 		str	r3, [r4, #2932]	@ float
 406:src/main.cpp  **** 
 8299              		.loc 21 406 0
 8300 0ab8 149B     		ldr	r3, [sp, #80]	@ float
 409:src/main.cpp  **** 
 8301              		.loc 21 409 0
 8302 0aba A6F19800 		sub	r0, r6, #152
 406:src/main.cpp  **** 
 8303              		.loc 21 406 0
 8304 0abe C4F8883B 		str	r3, [r4, #2952]	@ float
 398:src/main.cpp  ****     odom.pose.pose.position.z = 0.0;
 8305              		.loc 21 398 0
 8306 0ac2 C4F8B89A 		str	r9, [r4, #2744]	@ float
 397:src/main.cpp  ****     odom.pose.pose.position.y = y;
 8307              		.loc 21 397 0
 8308 0ac6 C4F8B4AA 		str	r10, [r4, #2740]	@ float
 403:src/main.cpp  ****     odom.twist.twist.linear.x = x_dot;
 8309              		.loc 21 403 0
 8310 0aca C4F8A47A 		str	r7, [r4, #2724]
 409:src/main.cpp  **** 
 8311              		.loc 21 409 0
 8312 0ace FFF7FEFF 		bl	_ZN3ros9Publisher7publishEPKNS_3MsgE
 8313              	.LVL993:
 412:src/main.cpp  ****       nh.logerror("Main loop running slower than expected!");
 8314              		.loc 21 412 0
 8315 0ad2 FFF7FEFF 		bl	millis
 8316              	.LVL994:
 8317 0ad6 0546     		mov	r5, r0
 8318 0ad8 0F98     		ldr	r0, [sp, #60]	@ float
 8319 0ada FFF7FEFF 		bl	__aeabi_f2d
 8320              	.LVL995:
 8321 0ade 8046     		mov	r8, r0
 8322 0ae0 8946     		mov	r9, r1
 8323 0ae2 2846     		mov	r0, r5
 8324 0ae4 FFF7FEFF 		bl	__aeabi_i2d
 8325              	.LVL996:
 8326 0ae8 0022     		movs	r2, #0
 8327 0aea 1C4B     		ldr	r3, .L444+28
 8328 0aec FFF7FEFF 		bl	__aeabi_ddiv
 8329              	.LVL997:
 8330 0af0 4246     		mov	r2, r8
 8331 0af2 4B46     		mov	r3, r9
 8332 0af4 FFF7FEFF 		bl	__aeabi_dsub
 8333              	.LVL998:
 8334 0af8 11A3     		adr	r3, .L444
 8335 0afa D3E90023 		ldrd	r2, [r3]
 8336 0afe FFF7FEFF 		bl	__aeabi_dcmpge
 8337              	.LVL999:
 8338 0b02 28B1     		cbz	r0, .L414
 413:src/main.cpp  ****     }else{
 8339              		.loc 21 413 0
 8340 0b04 1649     		ldr	r1, .L444+32
 8341 0b06 A6F22460 		subw	r0, r6, #1572
 8342 0b0a FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 8343              	.LVL1000:
 8344 0b0e 12E0     		b	.L416
 8345              	.L414:
 415:src/main.cpp  ****     }
 8346              		.loc 21 415 0
 8347 0b10 FFF7FEFF 		bl	millis
 8348              	.LVL1001:
 8349 0b14 FFF7FEFF 		bl	__aeabi_i2d
 8350              	.LVL1002:
 8351 0b18 0022     		movs	r2, #0
 8352 0b1a 104B     		ldr	r3, .L444+28
 8353 0b1c FFF7FEFF 		bl	__aeabi_ddiv
 8354              	.LVL1003:
 8355 0b20 4246     		mov	r2, r8
 8356 0b22 4B46     		mov	r3, r9
 8357 0b24 FFF7FEFF 		bl	__aeabi_dsub
 8358              	.LVL1004:
 8359 0b28 05A3     		adr	r3, .L444
 8360 0b2a D3E90023 		ldrd	r2, [r3]
 8361 0b2e FFF7FEFF 		bl	__aeabi_dcmple
 8362              	.LVL1005:
 8363 0b32 0028     		cmp	r0, #0
 8364 0b34 ECD1     		bne	.L414
 8365              	.L416:
 8366              	.LBE615:
 293:src/main.cpp  ****     nh.spinOnce();
 8367              		.loc 21 293 0
 8368 0b36 139E     		ldr	r6, [sp, #76]
 8369 0b38 03E5     		b	.L417
 8370              	.L445:
 8371 0b3a 00BFAFF3 		.align	3
 8371      0080
 8372              	.L444:
 8373 0b40 00000040 		.word	1073741824
 8374 0b44 E17A943F 		.word	1066695393
 8375 0b48 0AD7A33C 		.word	1017370378
 8376 0b4c 0000E03F 		.word	1071644672
 8377 0b50 540A0000 		.word	.LANCHOR1+2644
 8378 0b54 3F050000 		.word	.LC53
 8379 0b58 3A050000 		.word	.LC52
 8380 0b5c 00408F40 		.word	1083129856
 8381 0b60 49050000 		.word	.LC54
 8382              		.cfi_endproc
 8383              	.LFE1281:
 8384              		.fnend
 8386              		.text
 8387              		.align	1
 8388              		.global	_Z13assert_failedPhm
 8389              		.thumb
 8390              		.thumb_func
 8392              	_Z13assert_failedPhm:
 8393              		.fnstart
 8394              	.LFB1334:
 429:src/main.cpp  **** 
 430:src/main.cpp  **** 
 431:src/main.cpp  **** 
 432:src/main.cpp  **** void assert_failed(uint8_t* file, uint32_t line){
 8395              		.loc 21 432 0
 8396              		.cfi_startproc
 8397              		@ args = 0, pretend = 0, frame = 152
 8398              		@ frame_needed = 0, uses_anonymous_args = 0
 8399              	.LVL1006:
 8400 01f4 00B5     		push	{lr}
 8401              		.save {lr}
 8402              	.LCFI80:
 8403              		.cfi_def_cfa_offset 4
 8404              		.cfi_offset 14, -4
 8405              		.pad #156
 8406 01f6 A7B0     		sub	sp, sp, #156
 8407              	.LCFI81:
 8408              		.cfi_def_cfa_offset 160
 433:src/main.cpp  ****   /* User can add his own implementation to report the file name and line number,
 434:src/main.cpp  ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 435:src/main.cpp  ****   char str[150];
 436:src/main.cpp  **** 
 437:src/main.cpp  ****   sprintf(str, "Wrong parameters value: file %s on line %u\r\n", file, (unsigned int)line);
 8409              		.loc 21 437 0
 8410 01f8 0B46     		mov	r3, r1
 8411 01fa 0246     		mov	r2, r0
 8412 01fc 0849     		ldr	r1, .L448
 8413              	.LVL1007:
 8414 01fe 6846     		mov	r0, sp
 8415              	.LVL1008:
 8416 0200 FFF7FEFF 		bl	sprintf
 8417              	.LVL1009:
 438:src/main.cpp  ****   nh.logerror(str);
 8418              		.loc 21 438 0
 8419 0204 6946     		mov	r1, sp
 8420 0206 0748     		ldr	r0, .L448+4
 8421 0208 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 8422              	.LVL1010:
 8423              	.L447:
 439:src/main.cpp  ****   while (1){
 440:src/main.cpp  ****     debug_toggle();
 8424              		.loc 21 440 0
 8425 020c FFF7FEFF 		bl	debug_toggle
 8426              	.LVL1011:
 441:src/main.cpp  ****     delay(100);
 8427              		.loc 21 441 0
 8428 0210 6420     		movs	r0, #100
 8429 0212 FFF7FEFF 		bl	delay
 8430              	.LVL1012:
 442:src/main.cpp  ****     nh.spinOnce();
 8431              		.loc 21 442 0
 8432 0216 0348     		ldr	r0, .L448+4
 8433 0218 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 8434              	.LVL1013:
 8435 021c F6E7     		b	.L447
 8436              	.L449:
 8437 021e 00BF     		.align	2
 8438              	.L448:
 8439 0220 71050000 		.word	.LC55
 8440 0224 30040000 		.word	.LANCHOR1+1072
 8441              		.cfi_endproc
 8442              	.LFE1334:
 8443              		.fnend
 8445              		.section	.text.startup
 8446              		.align	1
 8447              		.thumb
 8448              		.thumb_func
 8450              	_GLOBAL__sub_I_USART_FIFO:
 8451              		.fnstart
 8452              	.LFB1388:
 443:src/main.cpp  ****   }
 444:src/main.cpp  **** }
 8453              		.loc 21 444 0
 8454              		.cfi_startproc
 8455              		@ args = 0, pretend = 0, frame = 0
 8456              		@ frame_needed = 0, uses_anonymous_args = 0
 8457              	.LVL1014:
 8458 0b64 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 8459              	.LCFI82:
 8460              		.cfi_def_cfa_offset 32
 8461              		.cfi_offset 3, -32
 8462              		.cfi_offset 4, -28
 8463              		.cfi_offset 5, -24
 8464              		.cfi_offset 6, -20
 8465              		.cfi_offset 7, -16
 8466              		.cfi_offset 8, -12
 8467              		.cfi_offset 9, -8
 8468              		.cfi_offset 14, -4
 8469              	.LBB767:
 8470              	.LBB768:
 8471              	.LBB769:
 8472              	.LBB770:
 119:./lib/ros_lib/ros/node_handle.h **** 
 8473              		.loc 19 119 0
 8474 0b68 784A     		ldr	r2, .L463
 8475 0b6a 794B     		ldr	r3, .L463+4
 8476              	.LBB771:
 8477              	.LBB772:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 8478              		.loc 4 70 0
 8479 0b6c 7949     		ldr	r1, .L463+8
 8480              	.LBE772:
 8481              	.LBE771:
 119:./lib/ros_lib/ros/node_handle.h **** 
 8482              		.loc 19 119 0
 8483 0b6e C3F83024 		str	r2, [r3, #1072]
 8484              	.LVL1015:
 8485              	.LBB775:
 8486              	.LBB776:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
 8487              		.loc 24 60 0
 8488 0b72 794A     		ldr	r2, .L463+12
 8489              	.LBE776:
 8490              	.LBE775:
 8491              	.LBB779:
 8492              	.LBB773:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 8493              		.loc 4 70 0
 8494 0b74 C3F83819 		str	r1, [r3, #2360]
 8495              	.LBE773:
 8496              	.LBE779:
 8497              	.LBB780:
 8498              	.LBB777:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
 8499              		.loc 24 60 0
 8500 0b78 C3F83424 		str	r2, [r3, #1076]
  61:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
 8501              		.loc 24 61 0
 8502 0b7c 4FF4E132 		mov	r2, #115200
 8503 0b80 C3F83824 		str	r2, [r3, #1080]
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
 8504              		.loc 24 62 0
 8505 0b84 0022     		movs	r2, #0
 8506 0b86 9A62     		str	r2, [r3, #40]
 8507              	.LBE777:
 8508              	.LBE780:
 119:./lib/ros_lib/ros/node_handle.h **** 
 8509              		.loc 19 119 0
 8510 0b88 83F82429 		strb	r2, [r3, #2340]
 8511              	.LBB781:
 8512              	.LBB778:
  63:./lib/ros_lib/ArduinoHardware.h ****     }
 8513              		.loc 24 63 0
 8514 0b8c 5A62     		str	r2, [r3, #36]
 8515              	.LVL1016:
 8516              	.LBE778:
 8517              	.LBE781:
 8518              	.LBB782:
 8519              	.LBB774:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 8520              		.loc 4 70 0
 8521 0b8e 83F83C29 		strb	r2, [r3, #2364]
 8522 0b92 C3F84429 		str	r2, [r3, #2372]
 8523 0b96 83F84829 		strb	r2, [r3, #2376]
 8524 0b9a C3F85029 		str	r2, [r3, #2384]
 8525 0b9e 83F85429 		strb	r2, [r3, #2388]
 8526 0ba2 C3F85C29 		str	r2, [r3, #2396]
 8527              	.LVL1017:
 8528 0ba6 03F64401 		addw	r1, r3, #2116
 8529 0baa 03F6A803 		addw	r3, r3, #2216
 8530              	.LVL1018:
 8531              	.L451:
 8532              	.LBE774:
 8533              	.LBE782:
 8534              	.LBB783:
 122:./lib/ros_lib/ros/node_handle.h **** 
 8535              		.loc 19 122 0
 8536 0bae 41F8042F 		str	r2, [r1, #4]!
 121:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 8537              		.loc 19 121 0
 8538 0bb2 9942     		cmp	r1, r3
 8539 0bb4 FBD1     		bne	.L451
 8540 0bb6 694A     		ldr	r2, .L463+16
 8541              	.LBE783:
 8542              	.LBB784:
 125:./lib/ros_lib/ros/node_handle.h **** 
 8543              		.loc 19 125 0
 8544 0bb8 0021     		movs	r1, #0
 8545              	.L452:
 8546 0bba 43F8041F 		str	r1, [r3, #4]!
 8547              	.LVL1019:
 124:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 8548              		.loc 19 124 0
 8549 0bbe 9A42     		cmp	r2, r3
 8550 0bc0 FBD1     		bne	.L452
 8551 0bc2 0023     		movs	r3, #0
 8552              	.LBE784:
 8553              	.LBB785:
 128:./lib/ros_lib/ros/node_handle.h **** 
 8554              		.loc 19 128 0
 8555 0bc4 1946     		mov	r1, r3
 8556 0bc6 664C     		ldr	r4, .L463+20
 8557              	.L453:
 8558              	.LVL1020:
 8559 0bc8 E218     		adds	r2, r4, r3
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 8560              		.loc 19 127 0
 8561 0bca 0133     		adds	r3, r3, #1
 8562              	.LVL1021:
 8563 0bcc B3F5007F 		cmp	r3, #512
 128:./lib/ros_lib/ros/node_handle.h **** 
 8564              		.loc 19 128 0
 8565 0bd0 1176     		strb	r1, [r2, #24]
 8566 0bd2 6348     		ldr	r0, .L463+20
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 8567              		.loc 19 127 0
 8568 0bd4 F8D1     		bne	.L453
 8569 0bd6 0023     		movs	r3, #0
 8570              	.LVL1022:
 8571              	.LBE785:
 8572              	.LBB786:
 131:./lib/ros_lib/ros/node_handle.h **** 
 8573              		.loc 19 131 0
 8574 0bd8 1946     		mov	r1, r3
 8575              	.L454:
 8576              	.LVL1023:
 8577 0bda C218     		adds	r2, r0, r3
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 8578              		.loc 19 130 0
 8579 0bdc 0133     		adds	r3, r3, #1
 8580              	.LVL1024:
 8581 0bde B3F5007F 		cmp	r3, #512
 131:./lib/ros_lib/ros/node_handle.h **** 
 8582              		.loc 19 131 0
 8583 0be2 5B4C     		ldr	r4, .L463+4
 8584 0be4 4FF00006 		mov	r6, #0
 8585 0be8 82F81812 		strb	r1, [r2, #536]
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 8586              		.loc 19 130 0
 8587 0bec F5D1     		bne	.L454
 8588              	.LVL1025:
 8589              	.LBE786:
 8590              	.LBE770:
 8591              	.LBE769:
 8592              	.LBB787:
 8593              	.LBB788:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8594              		.loc 20 67 0
 8595 0bee 5D4B     		ldr	r3, .L463+24
  69:./lib/ros_lib/ros/subscriber.h ****       };
 8596              		.loc 20 69 0
 8597 0bf0 5D4A     		ldr	r2, .L463+28
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8598              		.loc 20 67 0
 8599 0bf2 C4F86039 		str	r3, [r4, #2400]
 8600              	.LVL1026:
 8601              	.LBB789:
 8602              	.LBB790:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 8603              		.loc 15 33 0
 8604 0bf6 5D4B     		ldr	r3, .L463+32
 8605              	.LBE790:
 8606              	.LBE789:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 8607              		.loc 20 69 0
 8608 0bf8 C4F86829 		str	r2, [r4, #2408]
 8609              	.LBE788:
 8610              	.LBE787:
 8611              	.LBB812:
 8612              	.LBB813:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8613              		.loc 20 67 0
 8614 0bfc 5C4A     		ldr	r2, .L463+36
 8615              	.LBE813:
 8616              	.LBE812:
 8617              	.LBB824:
 8618              	.LBB809:
 8619              	.LBB804:
 8620              	.LBB799:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 8621              		.loc 15 33 0
 8622 0bfe C4F86C39 		str	r3, [r4, #2412]
 8623              	.LVL1027:
 8624              	.LBE799:
 8625              	.LBE804:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8626              		.loc 20 67 0
 8627 0c02 5C4B     		ldr	r3, .L463+40
 8628              	.LBE809:
 8629              	.LBE824:
 8630              	.LBB825:
 8631              	.LBB820:
 8632 0c04 C4F8A029 		str	r2, [r4, #2464]
 8633              	.LBB814:
 8634              	.LBB815:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 8635              		.loc 5 18 0
 8636 0c08 5B4A     		ldr	r2, .L463+44
 8637              	.LBE815:
 8638              	.LBE814:
 8639              	.LBE820:
 8640              	.LBE825:
 8641              	.LBB826:
 8642              	.LBB810:
 8643              	.LBB805:
 8644              	.LBB800:
 8645              	.LBB791:
 8646              	.LBB792:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 8647              		.loc 6 23 0
 8648 0c0a 5C4F     		ldr	r7, .L463+48
 8649              	.LBE792:
 8650              	.LBE791:
 8651              	.LBE800:
 8652              	.LBE805:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8653              		.loc 20 67 0
 8654 0c0c C4F89839 		str	r3, [r4, #2456]
 8655              	.LBB806:
 8656              	.LBB801:
 8657              	.LBB797:
 8658              	.LBB795:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 8659              		.loc 6 23 0
 8660 0c10 DFF8A081 		ldr	r8, .L463+104
 8661              	.LBE795:
 8662              	.LBE797:
 8663              	.LBE801:
 8664              	.LBE806:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8665              		.loc 20 67 0
 8666 0c14 0123     		movs	r3, #1
 8667              	.LBB807:
 8668              	.LBB802:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 8669              		.loc 15 33 0
 8670 0c16 0025     		movs	r5, #0
 8671              	.LBE802:
 8672              	.LBE807:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8673              		.loc 20 67 0
 8674 0c18 C4F89C39 		str	r3, [r4, #2460]
 8675              	.LBE810:
 8676              	.LBE826:
 8677              	.LBB827:
 8678              	.LBB821:
 8679              	.LBB818:
 8680              	.LBB816:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 8681              		.loc 5 18 0
 8682 0c1c C4F8AC29 		str	r2, [r4, #2476]
 8683              	.LBE816:
 8684              	.LBE818:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8685              		.loc 20 67 0
 8686 0c20 C4F8B839 		str	r3, [r4, #2488]
 8687 0c24 564A     		ldr	r2, .L463+52
  69:./lib/ros_lib/ros/subscriber.h ****       };
 8688              		.loc 20 69 0
 8689 0c26 574B     		ldr	r3, .L463+56
 8690              	.LBE821:
 8691              	.LBE827:
 8692              	.LBB828:
 8693              	.LBB811:
 8694              	.LBB808:
 8695              	.LBB803:
 8696              	.LBB798:
 8697              	.LBB796:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 8698              		.loc 6 23 0
 8699 0c28 C4F87089 		str	r8, [r4, #2416]
 8700 0c2c C4F87469 		str	r6, [r4, #2420]
 8701              	.LVL1028:
 8702              	.LBB793:
 8703              	.LBB794:
  52:./lib/ros_lib/ros/time.h ****       Time(uint32_t _sec, uint32_t _nsec) : sec(_sec), nsec(_nsec)
 8704              		.loc 26 52 0
 8705 0c30 C4F87869 		str	r6, [r4, #2424]
 8706 0c34 C4F87C69 		str	r6, [r4, #2428]
 8707              	.LVL1029:
 8708              	.LBE794:
 8709              	.LBE793:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 8710              		.loc 6 23 0
 8711 0c38 C4F88079 		str	r7, [r4, #2432]
 8712              	.LVL1030:
 8713              	.LBE796:
 8714              	.LBE798:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 8715              		.loc 15 33 0
 8716 0c3c C4F88459 		str	r5, [r4, #2436]	@ float
 8717 0c40 C4F88859 		str	r5, [r4, #2440]	@ float
 8718 0c44 C4F88C59 		str	r5, [r4, #2444]	@ float
 8719 0c48 C4F89059 		str	r5, [r4, #2448]	@ float
 8720 0c4c 84F89469 		strb	r6, [r4, #2452]
 8721              	.LVL1031:
 8722              	.LBE803:
 8723              	.LBE808:
 8724              	.LBE811:
 8725              	.LBE828:
 8726              	.LBB829:
 8727              	.LBB822:
 8728              	.LBB819:
 8729              	.LBB817:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 8730              		.loc 5 18 0
 8731 0c50 84F8B069 		strb	r6, [r4, #2480]
 8732              	.LVL1032:
 8733              	.LBE817:
 8734              	.LBE819:
 8735              	.LBE822:
 8736              	.LBE829:
 125:src/main.cpp  **** tf::TransformBroadcaster odom_broadcaster;
 8737              		.loc 21 125 0
 8738 0c54 04F64820 		addw	r0, r4, #2632
 8739              	.LBB830:
 8740              	.LBB823:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8741              		.loc 20 67 0
 8742 0c58 C4F8B429 		str	r2, [r4, #2484]
  69:./lib/ros_lib/ros/subscriber.h ****       };
 8743              		.loc 20 69 0
 8744 0c5c C4F8A839 		str	r3, [r4, #2472]
 8745              	.LVL1033:
 8746              	.LBE823:
 8747              	.LBE830:
 125:src/main.cpp  **** tf::TransformBroadcaster odom_broadcaster;
 8748              		.loc 21 125 0
 8749 0c60 FFF7FEFF 		bl	_ZN13geometry_msgs16TransformStampedC1Ev
 8750              	.LVL1034:
 8751              	.LBB831:
 8752              	.LBB832:
 8753              	.LBB833:
 8754              	.LBB834:
  21:./lib/ros_lib/tf/tfMessage.h ****     {
 8755              		.loc 18 21 0
 8756 0c64 484B     		ldr	r3, .L463+60
 8757 0c66 84F8D469 		strb	r6, [r4, #2516]
 8758 0c6a C4F8D039 		str	r3, [r4, #2512]
 8759 0c6e 04F6D810 		addw	r0, r4, #2520
 8760 0c72 FFF7FEFF 		bl	_ZN13geometry_msgs16TransformStampedC1Ev
 8761              	.LVL1035:
 8762              	.LBE834:
 8763              	.LBE833:
 8764              	.LBB837:
 8765              	.LBB838:
  50:./lib/ros_lib/ros/publisher.h **** 
 8766              		.loc 23 50 0
 8767 0c76 454B     		ldr	r3, .L463+64
 8768              	.LBE838:
 8769              	.LBE837:
 8770              	.LBB842:
 8771              	.LBB835:
  21:./lib/ros_lib/tf/tfMessage.h ****     {
 8772              		.loc 18 21 0
 8773 0c78 04F51D69 		add	r9, r4, #2512
 8774              	.LBE835:
 8775              	.LBE842:
 8776              	.LBB843:
 8777              	.LBB839:
  50:./lib/ros_lib/ros/publisher.h **** 
 8778              		.loc 23 50 0
 8779 0c7c C4F8203A 		str	r3, [r4, #2592]
 8780              	.LBE839:
 8781              	.LBE843:
 8782              	.LBE832:
 8783              	.LBE831:
 8784              	.LBB850:
 8785              	.LBB851:
  27:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 8786              		.loc 14 27 0
 8787 0c80 434B     		ldr	r3, .L463+68
 8788              	.LBE851:
 8789              	.LBE850:
 8790              	.LBB903:
 8791              	.LBB847:
 8792              	.LBB844:
 8793              	.LBB836:
  21:./lib/ros_lib/tf/tfMessage.h ****     {
 8794              		.loc 18 21 0
 8795 0c82 C4F81C6A 		str	r6, [r4, #2588]
 8796              	.LVL1036:
 8797              	.LBE836:
 8798              	.LBE844:
 8799              	.LBE847:
 8800              	.LBE903:
 8801              	.LBB904:
 8802              	.LBB900:
  27:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 8803              		.loc 14 27 0
 8804 0c86 C4F88C3A 		str	r3, [r4, #2700]
 8805              	.LBB852:
 8806              	.LBB853:
  21:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 8807              		.loc 10 21 0
 8808 0c8a 424B     		ldr	r3, .L463+72
 8809              	.LBE853:
 8810              	.LBE852:
 8811              	.LBE900:
 8812              	.LBE904:
 8813              	.LBB905:
 8814              	.LBB848:
 8815              	.LBB845:
 8816              	.LBB840:
  50:./lib/ros_lib/ros/publisher.h **** 
 8817              		.loc 23 50 0
 8818 0c8c C4F8249A 		str	r9, [r4, #2596]
 8819              	.LBE840:
 8820              	.LBE845:
 8821              	.LBE848:
 8822              	.LBE905:
 8823              	.LBB906:
 8824              	.LBB901:
 8825              	.LBB876:
 8826              	.LBB872:
  21:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 8827              		.loc 10 21 0
 8828 0c90 C4F8A83A 		str	r3, [r4, #2728]
 8829              	.LBB854:
 8830              	.LBB855:
  22:./lib/ros_lib/geometry_msgs/Pose.h ****     {
 8831              		.loc 9 22 0
 8832 0c94 404B     		ldr	r3, .L463+76
 8833              	.LBE855:
 8834              	.LBE854:
 8835              	.LBE872:
 8836              	.LBE876:
 8837              	.LBE901:
 8838              	.LBE906:
 8839              	.LBB907:
 8840              	.LBB849:
 8841              	.LBB846:
 8842              	.LBB841:
  50:./lib/ros_lib/ros/publisher.h **** 
 8843              		.loc 23 50 0
 8844 0c96 C4F8306A 		str	r6, [r4, #2608]
 8845              	.LVL1037:
 8846              	.LBE841:
 8847              	.LBE846:
 8848              	.LBE849:
 8849              	.LBE907:
 8850              	.LBB908:
 8851              	.LBB902:
 8852              	.LBB877:
 8853              	.LBB873:
 8854              	.LBB869:
 8855              	.LBB866:
  22:./lib/ros_lib/geometry_msgs/Pose.h ****     {
 8856              		.loc 9 22 0
 8857 0c9a C4F8AC3A 		str	r3, [r4, #2732]
 8858              	.LBB856:
 8859              	.LBB857:
  22:./lib/ros_lib/geometry_msgs/Point.h ****     {
 8860              		.loc 7 22 0
 8861 0c9e 3F4B     		ldr	r3, .L463+80
 8862              	.LBE857:
 8863              	.LBE856:
 8864              	.LBE866:
 8865              	.LBE869:
 8866              	.LBE873:
 8867              	.LBE877:
 8868              	.LBB878:
 8869              	.LBB879:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 8870              		.loc 6 23 0
 8871 0ca0 C4F8908A 		str	r8, [r4, #2704]
 8872              	.LBE879:
 8873              	.LBE878:
 8874              	.LBB883:
 8875              	.LBB874:
 8876              	.LBB870:
 8877              	.LBB867:
 8878              	.LBB860:
 8879              	.LBB858:
  22:./lib/ros_lib/geometry_msgs/Point.h ****     {
 8880              		.loc 7 22 0
 8881 0ca4 C4F8B03A 		str	r3, [r4, #2736]
 8882              	.LBE858:
 8883              	.LBE860:
 8884              	.LBB861:
 8885              	.LBB862:
  24:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 8886              		.loc 8 24 0
 8887 0ca8 3D4B     		ldr	r3, .L463+84
 8888              	.LBE862:
 8889              	.LBE861:
 8890              	.LBE867:
 8891              	.LBE870:
 8892              	.LBE874:
 8893              	.LBE883:
 8894              	.LBB884:
 8895              	.LBB882:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 8896              		.loc 6 23 0
 8897 0caa C4F8946A 		str	r6, [r4, #2708]
 8898              	.LVL1038:
 8899              	.LBB880:
 8900              	.LBB881:
  52:./lib/ros_lib/ros/time.h ****       Time(uint32_t _sec, uint32_t _nsec) : sec(_sec), nsec(_nsec)
 8901              		.loc 26 52 0
 8902 0cae C4F8986A 		str	r6, [r4, #2712]
 8903 0cb2 C4F89C6A 		str	r6, [r4, #2716]
 8904              	.LVL1039:
 8905              	.LBE881:
 8906              	.LBE880:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 8907              		.loc 6 23 0
 8908 0cb6 C4F8A07A 		str	r7, [r4, #2720]
 8909              	.LVL1040:
 8910              	.LBE882:
 8911              	.LBE884:
  27:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 8912              		.loc 14 27 0
 8913 0cba C4F8A47A 		str	r7, [r4, #2724]
 8914              	.LVL1041:
 8915              	.LBB885:
 8916              	.LBB875:
 8917              	.LBB871:
 8918              	.LBB868:
 8919              	.LBB864:
 8920              	.LBB859:
  22:./lib/ros_lib/geometry_msgs/Point.h ****     {
 8921              		.loc 7 22 0
 8922 0cbe C4F8B45A 		str	r5, [r4, #2740]	@ float
 8923 0cc2 C4F8B85A 		str	r5, [r4, #2744]	@ float
 8924 0cc6 C4F8BC5A 		str	r5, [r4, #2748]	@ float
 8925              	.LVL1042:
 8926              	.LBE859:
 8927              	.LBE864:
 8928              	.LBB865:
 8929              	.LBB863:
  24:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 8930              		.loc 8 24 0
 8931 0cca C4F8C03A 		str	r3, [r4, #2752]
 8932 0cce C4F8C45A 		str	r5, [r4, #2756]	@ float
 8933 0cd2 C4F8C85A 		str	r5, [r4, #2760]	@ float
 8934 0cd6 C4F8CC5A 		str	r5, [r4, #2764]	@ float
 8935 0cda C4F8D05A 		str	r5, [r4, #2768]	@ float
 8936              	.LVL1043:
 8937              	.LBE863:
 8938              	.LBE865:
 8939              	.LBE868:
 8940              	.LBE871:
  21:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 8941              		.loc 10 21 0
 8942 0cde 04F6D421 		addw	r1, r4, #2772
 8943 0ce2 04F66434 		addw	r4, r4, #2916
 8944              	.L455:
 8945 0ce6 41F8045B 		str	r5, [r1], #4	@ float
 8946 0cea A142     		cmp	r1, r4
 8947 0cec 4FF00002 		mov	r2, #0
 8948 0cf0 174B     		ldr	r3, .L463+4
 8949 0cf2 F8D1     		bne	.L455
 8950              	.LVL1044:
 8951              	.LBE875:
 8952              	.LBE885:
 8953              	.LBB886:
 8954              	.LBB887:
  21:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 8955              		.loc 13 21 0
 8956 0cf4 2B49     		ldr	r1, .L463+88
 8957              	.LBB888:
 8958              	.LBB889:
 8959              	.LBB890:
 8960              	.LBB891:
  22:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
 8961              		.loc 11 22 0
 8962 0cf6 C3F8702B 		str	r2, [r3, #2928]	@ float
 8963              	.LBE891:
 8964              	.LBE890:
 8965              	.LBE889:
 8966              	.LBE888:
  21:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 8967              		.loc 13 21 0
 8968 0cfa C3F8641B 		str	r1, [r3, #2916]
 8969              	.LVL1045:
 8970              	.LBB899:
 8971              	.LBB898:
  21:./lib/ros_lib/geometry_msgs/Twist.h ****     {
 8972              		.loc 12 21 0
 8973 0cfe 2A49     		ldr	r1, .L463+92
 8974              	.LBB894:
 8975              	.LBB892:
  22:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
 8976              		.loc 11 22 0
 8977 0d00 C3F8742B 		str	r2, [r3, #2932]	@ float
 8978              	.LBE892:
 8979              	.LBE894:
  21:./lib/ros_lib/geometry_msgs/Twist.h ****     {
 8980              		.loc 12 21 0
 8981 0d04 C3F8681B 		str	r1, [r3, #2920]
 8982              	.LVL1046:
 8983              	.LBB895:
 8984              	.LBB893:
  22:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
 8985              		.loc 11 22 0
 8986 0d08 2849     		ldr	r1, .L463+96
 8987 0d0a C3F8782B 		str	r2, [r3, #2936]	@ float
 8988              	.LVL1047:
 8989 0d0e C3F86C1B 		str	r1, [r3, #2924]
 8990              	.LBE893:
 8991              	.LBE895:
 8992              	.LBB896:
 8993              	.LBB897:
 8994 0d12 C3F87C1B 		str	r1, [r3, #2940]
 8995 0d16 C3F8802B 		str	r2, [r3, #2944]	@ float
 8996 0d1a C3F8842B 		str	r2, [r3, #2948]	@ float
 8997 0d1e C3F8882B 		str	r2, [r3, #2952]	@ float
 8998              	.LVL1048:
 8999              	.LBE897:
 9000              	.LBE896:
 9001              	.LBE898:
 9002              	.LBE899:
  21:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 9003              		.loc 13 21 0
 9004 0d22 03F68C31 		addw	r1, r3, #2956
 9005 0d26 03F61C43 		addw	r3, r3, #3100
 9006              	.L456:
 9007 0d2a 41F8045B 		str	r5, [r1], #4	@ float
 9008 0d2e 084A     		ldr	r2, .L463+4
 9009 0d30 9942     		cmp	r1, r3
 9010 0d32 02F68C20 		addw	r0, r2, #2700
 9011 0d36 F8D1     		bne	.L456
 9012              	.LVL1049:
 9013              	.LBE887:
 9014              	.LBE886:
 9015              	.LBE902:
 9016              	.LBE908:
 9017              	.LBB909:
 9018              	.LBB910:
  50:./lib/ros_lib/ros/publisher.h **** 
 9019              		.loc 23 50 0
 9020 0d38 1D4B     		ldr	r3, .L463+100
 9021 0d3a C2F8C009 		str	r0, [r2, #2496]
 9022 0d3e C2F8BC39 		str	r3, [r2, #2492]
 9023 0d42 0023     		movs	r3, #0
 9024 0d44 C2F8CC39 		str	r3, [r2, #2508]
 9025              	.LVL1050:
 9026 0d48 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 9027              	.L464:
 9028              		.align	2
 9029              	.L463:
 9030 0d4c 08000000 		.word	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE+8
 9031 0d50 00000000 		.word	.LANCHOR1
 9032 0d54 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 9033 0d58 00380140 		.word	1073821696
 9034 0d5c 0C090000 		.word	.LANCHOR1+2316
 9035 0d60 30040000 		.word	.LANCHOR1+1072
 9036 0d64 08000000 		.word	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE+8
 9037 0d68 9E050000 		.word	.LC56
 9038 0d6c 08000000 		.word	_ZTVN12roberto_msgs10MotorStateE+8
 9039 0d70 08000000 		.word	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE+8
 9040 0d74 00000000 		.word	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 9041 0d78 08000000 		.word	_ZTVN8std_msgs5UInt8E+8
 9042 0d7c C6030000 		.word	.LC35
 9043 0d80 00000000 		.word	_Z6led_cbRKN8std_msgs5UInt8E
 9044 0d84 B0050000 		.word	.LC57
 9045 0d88 08000000 		.word	_ZTVN2tf9tfMessageE+8
 9046 0d8c B4050000 		.word	.LC58
 9047 0d90 08000000 		.word	_ZTVN8nav_msgs8OdometryE+8
 9048 0d94 08000000 		.word	_ZTVN13geometry_msgs18PoseWithCovarianceE+8
 9049 0d98 08000000 		.word	_ZTVN13geometry_msgs4PoseE+8
 9050 0d9c 08000000 		.word	_ZTVN13geometry_msgs5PointE+8
 9051 0da0 08000000 		.word	_ZTVN13geometry_msgs10QuaternionE+8
 9052 0da4 08000000 		.word	_ZTVN13geometry_msgs19TwistWithCovarianceE+8
 9053 0da8 08000000 		.word	_ZTVN13geometry_msgs5TwistE+8
 9054 0dac 08000000 		.word	_ZTVN13geometry_msgs7Vector3E+8
 9055 0db0 3A050000 		.word	.LC52
 9056 0db4 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 9057              	.LBE910:
 9058              	.LBE909:
 9059              	.LBE768:
 9060              	.LBE767:
 9061              		.cfi_endproc
 9062              	.LFE1388:
 9063              		.cantunwind
 9064              		.fnend
 9066              		.section	.init_array,"aw",%init_array
 9067              		.align	2
 9068 0000 00000000 		.word	_GLOBAL__sub_I_USART_FIFO(target1)
 9069              		.weak	_ZTSN3ros3MsgE
 9070              		.section	.rodata._ZTSN3ros3MsgE,"aG",%progbits,_ZTSN3ros3MsgE,comdat
 9073              	_ZTSN3ros3MsgE:
 9074 0000 4E33726F 		.ascii	"N3ros3MsgE\000"
 9074      73334D73 
 9074      674500
 9075              		.weak	_ZTIN3ros3MsgE
 9076              		.section	.rodata._ZTIN3ros3MsgE,"aG",%progbits,_ZTIN3ros3MsgE,comdat
 9077              		.align	2
 9080              	_ZTIN3ros3MsgE:
 9081 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 9082 0004 00000000 		.word	_ZTSN3ros3MsgE
 9083              		.weak	_ZTSN8std_msgs4TimeE
 9084              		.section	.rodata._ZTSN8std_msgs4TimeE,"aG",%progbits,_ZTSN8std_msgs4TimeE,comdat
 9087              	_ZTSN8std_msgs4TimeE:
 9088 0000 4E387374 		.ascii	"N8std_msgs4TimeE\000"
 9088      645F6D73 
 9088      67733454 
 9088      696D6545 
 9088      00
 9089              		.weak	_ZTIN8std_msgs4TimeE
 9090              		.section	.rodata._ZTIN8std_msgs4TimeE,"aG",%progbits,_ZTIN8std_msgs4TimeE,comdat
 9091              		.align	2
 9094              	_ZTIN8std_msgs4TimeE:
 9095 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9096 0004 00000000 		.word	_ZTSN8std_msgs4TimeE
 9097 0008 00000000 		.word	_ZTIN3ros3MsgE
 9098              		.weak	_ZTSN14rosserial_msgs9TopicInfoE
 9099              		.section	.rodata._ZTSN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTSN14rosserial_msgs9TopicInfoE,
 9102              	_ZTSN14rosserial_msgs9TopicInfoE:
 9103 0000 4E313472 		.ascii	"N14rosserial_msgs9TopicInfoE\000"
 9103      6F737365 
 9103      7269616C 
 9103      5F6D7367 
 9103      7339546F 
 9104              		.weak	_ZTIN14rosserial_msgs9TopicInfoE
 9105              		.section	.rodata._ZTIN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTIN14rosserial_msgs9TopicInfoE,
 9106              		.align	2
 9109              	_ZTIN14rosserial_msgs9TopicInfoE:
 9110 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9111 0004 00000000 		.word	_ZTSN14rosserial_msgs9TopicInfoE
 9112 0008 00000000 		.word	_ZTIN3ros3MsgE
 9113              		.weak	_ZTSN14rosserial_msgs3LogE
 9114              		.section	.rodata._ZTSN14rosserial_msgs3LogE,"aG",%progbits,_ZTSN14rosserial_msgs3LogE,comdat
 9117              	_ZTSN14rosserial_msgs3LogE:
 9118 0000 4E313472 		.ascii	"N14rosserial_msgs3LogE\000"
 9118      6F737365 
 9118      7269616C 
 9118      5F6D7367 
 9118      73334C6F 
 9119              		.weak	_ZTIN14rosserial_msgs3LogE
 9120              		.section	.rodata._ZTIN14rosserial_msgs3LogE,"aG",%progbits,_ZTIN14rosserial_msgs3LogE,comdat
 9121              		.align	2
 9124              	_ZTIN14rosserial_msgs3LogE:
 9125 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9126 0004 00000000 		.word	_ZTSN14rosserial_msgs3LogE
 9127 0008 00000000 		.word	_ZTIN3ros3MsgE
 9128              		.weak	_ZTSN14rosserial_msgs19RequestParamRequestE
 9129              		.section	.rodata._ZTSN14rosserial_msgs19RequestParamRequestE,"aG",%progbits,_ZTSN14rosserial_msgs1
 9132              	_ZTSN14rosserial_msgs19RequestParamRequestE:
 9133 0000 4E313472 		.ascii	"N14rosserial_msgs19RequestParamRequestE\000"
 9133      6F737365 
 9133      7269616C 
 9133      5F6D7367 
 9133      73313952 
 9134              		.weak	_ZTIN14rosserial_msgs19RequestParamRequestE
 9135              		.section	.rodata._ZTIN14rosserial_msgs19RequestParamRequestE,"aG",%progbits,_ZTIN14rosserial_msgs1
 9136              		.align	2
 9139              	_ZTIN14rosserial_msgs19RequestParamRequestE:
 9140 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9141 0004 00000000 		.word	_ZTSN14rosserial_msgs19RequestParamRequestE
 9142 0008 00000000 		.word	_ZTIN3ros3MsgE
 9143              		.weak	_ZTSN14rosserial_msgs20RequestParamResponseE
 9144              		.section	.rodata._ZTSN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTSN14rosserial_msgs
 9147              	_ZTSN14rosserial_msgs20RequestParamResponseE:
 9148 0000 4E313472 		.ascii	"N14rosserial_msgs20RequestParamResponseE\000"
 9148      6F737365 
 9148      7269616C 
 9148      5F6D7367 
 9148      73323052 
 9149              		.weak	_ZTIN14rosserial_msgs20RequestParamResponseE
 9150              		.section	.rodata._ZTIN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTIN14rosserial_msgs
 9151              		.align	2
 9154              	_ZTIN14rosserial_msgs20RequestParamResponseE:
 9155 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9156 0004 00000000 		.word	_ZTSN14rosserial_msgs20RequestParamResponseE
 9157 0008 00000000 		.word	_ZTIN3ros3MsgE
 9158              		.weak	_ZTSN3ros15NodeHandleBase_E
 9159              		.section	.rodata._ZTSN3ros15NodeHandleBase_E,"aG",%progbits,_ZTSN3ros15NodeHandleBase_E,comdat
 9162              	_ZTSN3ros15NodeHandleBase_E:
 9163 0000 4E33726F 		.ascii	"N3ros15NodeHandleBase_E\000"
 9163      7331354E 
 9163      6F646548 
 9163      616E646C 
 9163      65426173 
 9164              		.weak	_ZTIN3ros15NodeHandleBase_E
 9165              		.section	.rodata._ZTIN3ros15NodeHandleBase_E,"aG",%progbits,_ZTIN3ros15NodeHandleBase_E,comdat
 9166              		.align	2
 9169              	_ZTIN3ros15NodeHandleBase_E:
 9170 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 9171 0004 00000000 		.word	_ZTSN3ros15NodeHandleBase_E
 9172              		.weak	_ZTSN3ros11Subscriber_E
 9173              		.section	.rodata._ZTSN3ros11Subscriber_E,"aG",%progbits,_ZTSN3ros11Subscriber_E,comdat
 9176              	_ZTSN3ros11Subscriber_E:
 9177 0000 4E33726F 		.ascii	"N3ros11Subscriber_E\000"
 9177      73313153 
 9177      75627363 
 9177      72696265 
 9177      725F4500 
 9178              		.weak	_ZTIN3ros11Subscriber_E
 9179              		.section	.rodata._ZTIN3ros11Subscriber_E,"aG",%progbits,_ZTIN3ros11Subscriber_E,comdat
 9180              		.align	2
 9183              	_ZTIN3ros11Subscriber_E:
 9184 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 9185 0004 00000000 		.word	_ZTSN3ros11Subscriber_E
 9186              		.weak	_ZTSN8std_msgs5UInt8E
 9187              		.section	.rodata._ZTSN8std_msgs5UInt8E,"aG",%progbits,_ZTSN8std_msgs5UInt8E,comdat
 9190              	_ZTSN8std_msgs5UInt8E:
 9191 0000 4E387374 		.ascii	"N8std_msgs5UInt8E\000"
 9191      645F6D73 
 9191      67733555 
 9191      496E7438 
 9191      4500
 9192              		.weak	_ZTIN8std_msgs5UInt8E
 9193              		.section	.rodata._ZTIN8std_msgs5UInt8E,"aG",%progbits,_ZTIN8std_msgs5UInt8E,comdat
 9194              		.align	2
 9197              	_ZTIN8std_msgs5UInt8E:
 9198 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9199 0004 00000000 		.word	_ZTSN8std_msgs5UInt8E
 9200 0008 00000000 		.word	_ZTIN3ros3MsgE
 9201              		.weak	_ZTSN8std_msgs6HeaderE
 9202              		.section	.rodata._ZTSN8std_msgs6HeaderE,"aG",%progbits,_ZTSN8std_msgs6HeaderE,comdat
 9205              	_ZTSN8std_msgs6HeaderE:
 9206 0000 4E387374 		.ascii	"N8std_msgs6HeaderE\000"
 9206      645F6D73 
 9206      67733648 
 9206      65616465 
 9206      724500
 9207              		.weak	_ZTIN8std_msgs6HeaderE
 9208              		.section	.rodata._ZTIN8std_msgs6HeaderE,"aG",%progbits,_ZTIN8std_msgs6HeaderE,comdat
 9209              		.align	2
 9212              	_ZTIN8std_msgs6HeaderE:
 9213 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9214 0004 00000000 		.word	_ZTSN8std_msgs6HeaderE
 9215 0008 00000000 		.word	_ZTIN3ros3MsgE
 9216              		.weak	_ZTSN13geometry_msgs5PointE
 9217              		.section	.rodata._ZTSN13geometry_msgs5PointE,"aG",%progbits,_ZTSN13geometry_msgs5PointE,comdat
 9220              	_ZTSN13geometry_msgs5PointE:
 9221 0000 4E313367 		.ascii	"N13geometry_msgs5PointE\000"
 9221      656F6D65 
 9221      7472795F 
 9221      6D736773 
 9221      35506F69 
 9222              		.weak	_ZTIN13geometry_msgs5PointE
 9223              		.section	.rodata._ZTIN13geometry_msgs5PointE,"aG",%progbits,_ZTIN13geometry_msgs5PointE,comdat
 9224              		.align	2
 9227              	_ZTIN13geometry_msgs5PointE:
 9228 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9229 0004 00000000 		.word	_ZTSN13geometry_msgs5PointE
 9230 0008 00000000 		.word	_ZTIN3ros3MsgE
 9231              		.weak	_ZTSN13geometry_msgs10QuaternionE
 9232              		.section	.rodata._ZTSN13geometry_msgs10QuaternionE,"aG",%progbits,_ZTSN13geometry_msgs10Quaternion
 9235              	_ZTSN13geometry_msgs10QuaternionE:
 9236 0000 4E313367 		.ascii	"N13geometry_msgs10QuaternionE\000"
 9236      656F6D65 
 9236      7472795F 
 9236      6D736773 
 9236      31305175 
 9237              		.weak	_ZTIN13geometry_msgs10QuaternionE
 9238              		.section	.rodata._ZTIN13geometry_msgs10QuaternionE,"aG",%progbits,_ZTIN13geometry_msgs10Quaternion
 9239              		.align	2
 9242              	_ZTIN13geometry_msgs10QuaternionE:
 9243 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9244 0004 00000000 		.word	_ZTSN13geometry_msgs10QuaternionE
 9245 0008 00000000 		.word	_ZTIN3ros3MsgE
 9246              		.weak	_ZTSN13geometry_msgs4PoseE
 9247              		.section	.rodata._ZTSN13geometry_msgs4PoseE,"aG",%progbits,_ZTSN13geometry_msgs4PoseE,comdat
 9250              	_ZTSN13geometry_msgs4PoseE:
 9251 0000 4E313367 		.ascii	"N13geometry_msgs4PoseE\000"
 9251      656F6D65 
 9251      7472795F 
 9251      6D736773 
 9251      34506F73 
 9252              		.weak	_ZTIN13geometry_msgs4PoseE
 9253              		.section	.rodata._ZTIN13geometry_msgs4PoseE,"aG",%progbits,_ZTIN13geometry_msgs4PoseE,comdat
 9254              		.align	2
 9257              	_ZTIN13geometry_msgs4PoseE:
 9258 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9259 0004 00000000 		.word	_ZTSN13geometry_msgs4PoseE
 9260 0008 00000000 		.word	_ZTIN3ros3MsgE
 9261              		.weak	_ZTSN13geometry_msgs18PoseWithCovarianceE
 9262              		.section	.rodata._ZTSN13geometry_msgs18PoseWithCovarianceE,"aG",%progbits,_ZTSN13geometry_msgs18Po
 9265              	_ZTSN13geometry_msgs18PoseWithCovarianceE:
 9266 0000 4E313367 		.ascii	"N13geometry_msgs18PoseWithCovarianceE\000"
 9266      656F6D65 
 9266      7472795F 
 9266      6D736773 
 9266      3138506F 
 9267              		.weak	_ZTIN13geometry_msgs18PoseWithCovarianceE
 9268              		.section	.rodata._ZTIN13geometry_msgs18PoseWithCovarianceE,"aG",%progbits,_ZTIN13geometry_msgs18Po
 9269              		.align	2
 9272              	_ZTIN13geometry_msgs18PoseWithCovarianceE:
 9273 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9274 0004 00000000 		.word	_ZTSN13geometry_msgs18PoseWithCovarianceE
 9275 0008 00000000 		.word	_ZTIN3ros3MsgE
 9276              		.weak	_ZTSN13geometry_msgs7Vector3E
 9277              		.section	.rodata._ZTSN13geometry_msgs7Vector3E,"aG",%progbits,_ZTSN13geometry_msgs7Vector3E,comdat
 9280              	_ZTSN13geometry_msgs7Vector3E:
 9281 0000 4E313367 		.ascii	"N13geometry_msgs7Vector3E\000"
 9281      656F6D65 
 9281      7472795F 
 9281      6D736773 
 9281      37566563 
 9282              		.weak	_ZTIN13geometry_msgs7Vector3E
 9283              		.section	.rodata._ZTIN13geometry_msgs7Vector3E,"aG",%progbits,_ZTIN13geometry_msgs7Vector3E,comdat
 9284              		.align	2
 9287              	_ZTIN13geometry_msgs7Vector3E:
 9288 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9289 0004 00000000 		.word	_ZTSN13geometry_msgs7Vector3E
 9290 0008 00000000 		.word	_ZTIN3ros3MsgE
 9291              		.weak	_ZTSN13geometry_msgs5TwistE
 9292              		.section	.rodata._ZTSN13geometry_msgs5TwistE,"aG",%progbits,_ZTSN13geometry_msgs5TwistE,comdat
 9295              	_ZTSN13geometry_msgs5TwistE:
 9296 0000 4E313367 		.ascii	"N13geometry_msgs5TwistE\000"
 9296      656F6D65 
 9296      7472795F 
 9296      6D736773 
 9296      35547769 
 9297              		.weak	_ZTIN13geometry_msgs5TwistE
 9298              		.section	.rodata._ZTIN13geometry_msgs5TwistE,"aG",%progbits,_ZTIN13geometry_msgs5TwistE,comdat
 9299              		.align	2
 9302              	_ZTIN13geometry_msgs5TwistE:
 9303 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9304 0004 00000000 		.word	_ZTSN13geometry_msgs5TwistE
 9305 0008 00000000 		.word	_ZTIN3ros3MsgE
 9306              		.weak	_ZTSN13geometry_msgs19TwistWithCovarianceE
 9307              		.section	.rodata._ZTSN13geometry_msgs19TwistWithCovarianceE,"aG",%progbits,_ZTSN13geometry_msgs19T
 9310              	_ZTSN13geometry_msgs19TwistWithCovarianceE:
 9311 0000 4E313367 		.ascii	"N13geometry_msgs19TwistWithCovarianceE\000"
 9311      656F6D65 
 9311      7472795F 
 9311      6D736773 
 9311      31395477 
 9312              		.weak	_ZTIN13geometry_msgs19TwistWithCovarianceE
 9313              		.section	.rodata._ZTIN13geometry_msgs19TwistWithCovarianceE,"aG",%progbits,_ZTIN13geometry_msgs19T
 9314              		.align	2
 9317              	_ZTIN13geometry_msgs19TwistWithCovarianceE:
 9318 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9319 0004 00000000 		.word	_ZTSN13geometry_msgs19TwistWithCovarianceE
 9320 0008 00000000 		.word	_ZTIN3ros3MsgE
 9321              		.weak	_ZTSN8nav_msgs8OdometryE
 9322              		.section	.rodata._ZTSN8nav_msgs8OdometryE,"aG",%progbits,_ZTSN8nav_msgs8OdometryE,comdat
 9325              	_ZTSN8nav_msgs8OdometryE:
 9326 0000 4E386E61 		.ascii	"N8nav_msgs8OdometryE\000"
 9326      765F6D73 
 9326      6773384F 
 9326      646F6D65 
 9326      74727945 
 9327              		.weak	_ZTIN8nav_msgs8OdometryE
 9328              		.section	.rodata._ZTIN8nav_msgs8OdometryE,"aG",%progbits,_ZTIN8nav_msgs8OdometryE,comdat
 9329              		.align	2
 9332              	_ZTIN8nav_msgs8OdometryE:
 9333 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9334 0004 00000000 		.word	_ZTSN8nav_msgs8OdometryE
 9335 0008 00000000 		.word	_ZTIN3ros3MsgE
 9336              		.weak	_ZTSN12roberto_msgs10MotorStateE
 9337              		.section	.rodata._ZTSN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTSN12roberto_msgs10MotorStateE,
 9340              	_ZTSN12roberto_msgs10MotorStateE:
 9341 0000 4E313272 		.ascii	"N12roberto_msgs10MotorStateE\000"
 9341      6F626572 
 9341      746F5F6D 
 9341      73677331 
 9341      304D6F74 
 9342              		.weak	_ZTIN12roberto_msgs10MotorStateE
 9343              		.section	.rodata._ZTIN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTIN12roberto_msgs10MotorStateE,
 9344              		.align	2
 9347              	_ZTIN12roberto_msgs10MotorStateE:
 9348 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9349 0004 00000000 		.word	_ZTSN12roberto_msgs10MotorStateE
 9350 0008 00000000 		.word	_ZTIN3ros3MsgE
 9351              		.weak	_ZTSN13geometry_msgs9TransformE
 9352              		.section	.rodata._ZTSN13geometry_msgs9TransformE,"aG",%progbits,_ZTSN13geometry_msgs9TransformE,co
 9355              	_ZTSN13geometry_msgs9TransformE:
 9356 0000 4E313367 		.ascii	"N13geometry_msgs9TransformE\000"
 9356      656F6D65 
 9356      7472795F 
 9356      6D736773 
 9356      39547261 
 9357              		.weak	_ZTIN13geometry_msgs9TransformE
 9358              		.section	.rodata._ZTIN13geometry_msgs9TransformE,"aG",%progbits,_ZTIN13geometry_msgs9TransformE,co
 9359              		.align	2
 9362              	_ZTIN13geometry_msgs9TransformE:
 9363 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9364 0004 00000000 		.word	_ZTSN13geometry_msgs9TransformE
 9365 0008 00000000 		.word	_ZTIN3ros3MsgE
 9366              		.weak	_ZTSN13geometry_msgs16TransformStampedE
 9367              		.section	.rodata._ZTSN13geometry_msgs16TransformStampedE,"aG",%progbits,_ZTSN13geometry_msgs16Tran
 9370              	_ZTSN13geometry_msgs16TransformStampedE:
 9371 0000 4E313367 		.ascii	"N13geometry_msgs16TransformStampedE\000"
 9371      656F6D65 
 9371      7472795F 
 9371      6D736773 
 9371      31365472 
 9372              		.weak	_ZTIN13geometry_msgs16TransformStampedE
 9373              		.section	.rodata._ZTIN13geometry_msgs16TransformStampedE,"aG",%progbits,_ZTIN13geometry_msgs16Tran
 9374              		.align	2
 9377              	_ZTIN13geometry_msgs16TransformStampedE:
 9378 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9379 0004 00000000 		.word	_ZTSN13geometry_msgs16TransformStampedE
 9380 0008 00000000 		.word	_ZTIN3ros3MsgE
 9381              		.weak	_ZTSN2tf9tfMessageE
 9382              		.section	.rodata._ZTSN2tf9tfMessageE,"aG",%progbits,_ZTSN2tf9tfMessageE,comdat
 9385              	_ZTSN2tf9tfMessageE:
 9386 0000 4E327466 		.ascii	"N2tf9tfMessageE\000"
 9386      3974664D 
 9386      65737361 
 9386      67654500 
 9387              		.weak	_ZTIN2tf9tfMessageE
 9388              		.section	.rodata._ZTIN2tf9tfMessageE,"aG",%progbits,_ZTIN2tf9tfMessageE,comdat
 9389              		.align	2
 9392              	_ZTIN2tf9tfMessageE:
 9393 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9394 0004 00000000 		.word	_ZTSN2tf9tfMessageE
 9395 0008 00000000 		.word	_ZTIN3ros3MsgE
 9396              		.weak	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 9397              		.section	.rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 9400              	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 9401 0000 4E33726F 		.ascii	"N3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512"
 9401      7331314E 
 9401      6F646548 
 9401      616E646C 
 9401      655F4931 
 9402 0033 454C6935 		.ascii	"ELi512EEE\000"
 9402      31324545 
 9402      4500
 9403              		.weak	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 9404              		.section	.rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 9405              		.align	2
 9408              	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 9409 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9410 0004 00000000 		.word	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 9411 0008 00000000 		.word	_ZTIN3ros15NodeHandleBase_E
 9412              		.weak	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 9413              		.section	.rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTSN3ros10Su
 9416              	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 9417 0000 4E33726F 		.ascii	"N3ros10SubscriberIN12roberto_msgs10MotorStateEEE\000"
 9417      73313053 
 9417      75627363 
 9417      72696265 
 9417      72494E31 
 9418              		.weak	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 9419              		.section	.rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTIN3ros10Su
 9420              		.align	2
 9423              	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 9424 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9425 0004 00000000 		.word	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 9426 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 9427              		.weak	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 9428              		.section	.rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTSN3ros10SubscriberIN8
 9431              	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:
 9432 0000 4E33726F 		.ascii	"N3ros10SubscriberIN8std_msgs5UInt8EEE\000"
 9432      73313053 
 9432      75627363 
 9432      72696265 
 9432      72494E38 
 9433              		.weak	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 9434              		.section	.rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTIN3ros10SubscriberIN8
 9435              		.align	2
 9438              	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:
 9439 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9440 0004 00000000 		.word	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 9441 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 9442              		.weak	_ZTVN8std_msgs4TimeE
 9443              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 9444              		.align	2
 9447              	_ZTVN8std_msgs4TimeE:
 9448 0000 00000000 		.word	0
 9449 0004 00000000 		.word	_ZTIN8std_msgs4TimeE
 9450 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 9451 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 9452 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 9453 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 9454              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 9455              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 9456              		.align	2
 9459              	_ZTVN14rosserial_msgs9TopicInfoE:
 9460 0000 00000000 		.word	0
 9461 0004 00000000 		.word	_ZTIN14rosserial_msgs9TopicInfoE
 9462 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 9463 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 9464 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 9465 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 9466              		.weak	_ZTVN14rosserial_msgs3LogE
 9467              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 9468              		.align	2
 9471              	_ZTVN14rosserial_msgs3LogE:
 9472 0000 00000000 		.word	0
 9473 0004 00000000 		.word	_ZTIN14rosserial_msgs3LogE
 9474 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 9475 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 9476 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 9477 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 9478              		.weak	_ZTVN14rosserial_msgs19RequestParamRequestE
 9479              		.section	.rodata._ZTVN14rosserial_msgs19RequestParamRequestE,"aG",%progbits,_ZTVN14rosserial_msgs1
 9480              		.align	2
 9483              	_ZTVN14rosserial_msgs19RequestParamRequestE:
 9484 0000 00000000 		.word	0
 9485 0004 00000000 		.word	_ZTIN14rosserial_msgs19RequestParamRequestE
 9486 0008 00000000 		.word	_ZNK14rosserial_msgs19RequestParamRequest9serializeEPh
 9487 000c 00000000 		.word	_ZN14rosserial_msgs19RequestParamRequest11deserializeEPh
 9488 0010 00000000 		.word	_ZN14rosserial_msgs19RequestParamRequest7getTypeEv
 9489 0014 00000000 		.word	_ZN14rosserial_msgs19RequestParamRequest6getMD5Ev
 9490              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 9491              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 9492              		.align	2
 9495              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 9496 0000 00000000 		.word	0
 9497 0004 00000000 		.word	_ZTIN14rosserial_msgs20RequestParamResponseE
 9498 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 9499 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 9500 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 9501 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 9502              		.weak	_ZTVN8std_msgs5UInt8E
 9503              		.section	.rodata._ZTVN8std_msgs5UInt8E,"aG",%progbits,_ZTVN8std_msgs5UInt8E,comdat
 9504              		.align	2
 9507              	_ZTVN8std_msgs5UInt8E:
 9508 0000 00000000 		.word	0
 9509 0004 00000000 		.word	_ZTIN8std_msgs5UInt8E
 9510 0008 00000000 		.word	_ZNK8std_msgs5UInt89serializeEPh
 9511 000c 00000000 		.word	_ZN8std_msgs5UInt811deserializeEPh
 9512 0010 00000000 		.word	_ZN8std_msgs5UInt87getTypeEv
 9513 0014 00000000 		.word	_ZN8std_msgs5UInt86getMD5Ev
 9514              		.weak	_ZTVN8std_msgs6HeaderE
 9515              		.section	.rodata._ZTVN8std_msgs6HeaderE,"aG",%progbits,_ZTVN8std_msgs6HeaderE,comdat
 9516              		.align	2
 9519              	_ZTVN8std_msgs6HeaderE:
 9520 0000 00000000 		.word	0
 9521 0004 00000000 		.word	_ZTIN8std_msgs6HeaderE
 9522 0008 00000000 		.word	_ZNK8std_msgs6Header9serializeEPh
 9523 000c 00000000 		.word	_ZN8std_msgs6Header11deserializeEPh
 9524 0010 00000000 		.word	_ZN8std_msgs6Header7getTypeEv
 9525 0014 00000000 		.word	_ZN8std_msgs6Header6getMD5Ev
 9526              		.weak	_ZTVN13geometry_msgs5PointE
 9527              		.section	.rodata._ZTVN13geometry_msgs5PointE,"aG",%progbits,_ZTVN13geometry_msgs5PointE,comdat
 9528              		.align	2
 9531              	_ZTVN13geometry_msgs5PointE:
 9532 0000 00000000 		.word	0
 9533 0004 00000000 		.word	_ZTIN13geometry_msgs5PointE
 9534 0008 00000000 		.word	_ZNK13geometry_msgs5Point9serializeEPh
 9535 000c 00000000 		.word	_ZN13geometry_msgs5Point11deserializeEPh
 9536 0010 00000000 		.word	_ZN13geometry_msgs5Point7getTypeEv
 9537 0014 00000000 		.word	_ZN13geometry_msgs5Point6getMD5Ev
 9538              		.weak	_ZTVN13geometry_msgs10QuaternionE
 9539              		.section	.rodata._ZTVN13geometry_msgs10QuaternionE,"aG",%progbits,_ZTVN13geometry_msgs10Quaternion
 9540              		.align	2
 9543              	_ZTVN13geometry_msgs10QuaternionE:
 9544 0000 00000000 		.word	0
 9545 0004 00000000 		.word	_ZTIN13geometry_msgs10QuaternionE
 9546 0008 00000000 		.word	_ZNK13geometry_msgs10Quaternion9serializeEPh
 9547 000c 00000000 		.word	_ZN13geometry_msgs10Quaternion11deserializeEPh
 9548 0010 00000000 		.word	_ZN13geometry_msgs10Quaternion7getTypeEv
 9549 0014 00000000 		.word	_ZN13geometry_msgs10Quaternion6getMD5Ev
 9550              		.weak	_ZTVN13geometry_msgs4PoseE
 9551              		.section	.rodata._ZTVN13geometry_msgs4PoseE,"aG",%progbits,_ZTVN13geometry_msgs4PoseE,comdat
 9552              		.align	2
 9555              	_ZTVN13geometry_msgs4PoseE:
 9556 0000 00000000 		.word	0
 9557 0004 00000000 		.word	_ZTIN13geometry_msgs4PoseE
 9558 0008 00000000 		.word	_ZNK13geometry_msgs4Pose9serializeEPh
 9559 000c 00000000 		.word	_ZN13geometry_msgs4Pose11deserializeEPh
 9560 0010 00000000 		.word	_ZN13geometry_msgs4Pose7getTypeEv
 9561 0014 00000000 		.word	_ZN13geometry_msgs4Pose6getMD5Ev
 9562              		.weak	_ZTVN13geometry_msgs18PoseWithCovarianceE
 9563              		.section	.rodata._ZTVN13geometry_msgs18PoseWithCovarianceE,"aG",%progbits,_ZTVN13geometry_msgs18Po
 9564              		.align	2
 9567              	_ZTVN13geometry_msgs18PoseWithCovarianceE:
 9568 0000 00000000 		.word	0
 9569 0004 00000000 		.word	_ZTIN13geometry_msgs18PoseWithCovarianceE
 9570 0008 00000000 		.word	_ZNK13geometry_msgs18PoseWithCovariance9serializeEPh
 9571 000c 00000000 		.word	_ZN13geometry_msgs18PoseWithCovariance11deserializeEPh
 9572 0010 00000000 		.word	_ZN13geometry_msgs18PoseWithCovariance7getTypeEv
 9573 0014 00000000 		.word	_ZN13geometry_msgs18PoseWithCovariance6getMD5Ev
 9574              		.weak	_ZTVN13geometry_msgs7Vector3E
 9575              		.section	.rodata._ZTVN13geometry_msgs7Vector3E,"aG",%progbits,_ZTVN13geometry_msgs7Vector3E,comdat
 9576              		.align	2
 9579              	_ZTVN13geometry_msgs7Vector3E:
 9580 0000 00000000 		.word	0
 9581 0004 00000000 		.word	_ZTIN13geometry_msgs7Vector3E
 9582 0008 00000000 		.word	_ZNK13geometry_msgs7Vector39serializeEPh
 9583 000c 00000000 		.word	_ZN13geometry_msgs7Vector311deserializeEPh
 9584 0010 00000000 		.word	_ZN13geometry_msgs7Vector37getTypeEv
 9585 0014 00000000 		.word	_ZN13geometry_msgs7Vector36getMD5Ev
 9586              		.weak	_ZTVN13geometry_msgs5TwistE
 9587              		.section	.rodata._ZTVN13geometry_msgs5TwistE,"aG",%progbits,_ZTVN13geometry_msgs5TwistE,comdat
 9588              		.align	2
 9591              	_ZTVN13geometry_msgs5TwistE:
 9592 0000 00000000 		.word	0
 9593 0004 00000000 		.word	_ZTIN13geometry_msgs5TwistE
 9594 0008 00000000 		.word	_ZNK13geometry_msgs5Twist9serializeEPh
 9595 000c 00000000 		.word	_ZN13geometry_msgs5Twist11deserializeEPh
 9596 0010 00000000 		.word	_ZN13geometry_msgs5Twist7getTypeEv
 9597 0014 00000000 		.word	_ZN13geometry_msgs5Twist6getMD5Ev
 9598              		.weak	_ZTVN13geometry_msgs19TwistWithCovarianceE
 9599              		.section	.rodata._ZTVN13geometry_msgs19TwistWithCovarianceE,"aG",%progbits,_ZTVN13geometry_msgs19T
 9600              		.align	2
 9603              	_ZTVN13geometry_msgs19TwistWithCovarianceE:
 9604 0000 00000000 		.word	0
 9605 0004 00000000 		.word	_ZTIN13geometry_msgs19TwistWithCovarianceE
 9606 0008 00000000 		.word	_ZNK13geometry_msgs19TwistWithCovariance9serializeEPh
 9607 000c 00000000 		.word	_ZN13geometry_msgs19TwistWithCovariance11deserializeEPh
 9608 0010 00000000 		.word	_ZN13geometry_msgs19TwistWithCovariance7getTypeEv
 9609 0014 00000000 		.word	_ZN13geometry_msgs19TwistWithCovariance6getMD5Ev
 9610              		.weak	_ZTVN8nav_msgs8OdometryE
 9611              		.section	.rodata._ZTVN8nav_msgs8OdometryE,"aG",%progbits,_ZTVN8nav_msgs8OdometryE,comdat
 9612              		.align	2
 9615              	_ZTVN8nav_msgs8OdometryE:
 9616 0000 00000000 		.word	0
 9617 0004 00000000 		.word	_ZTIN8nav_msgs8OdometryE
 9618 0008 00000000 		.word	_ZNK8nav_msgs8Odometry9serializeEPh
 9619 000c 00000000 		.word	_ZN8nav_msgs8Odometry11deserializeEPh
 9620 0010 00000000 		.word	_ZN8nav_msgs8Odometry7getTypeEv
 9621 0014 00000000 		.word	_ZN8nav_msgs8Odometry6getMD5Ev
 9622              		.weak	_ZTVN12roberto_msgs10MotorStateE
 9623              		.section	.rodata._ZTVN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTVN12roberto_msgs10MotorStateE,
 9624              		.align	2
 9627              	_ZTVN12roberto_msgs10MotorStateE:
 9628 0000 00000000 		.word	0
 9629 0004 00000000 		.word	_ZTIN12roberto_msgs10MotorStateE
 9630 0008 00000000 		.word	_ZNK12roberto_msgs10MotorState9serializeEPh
 9631 000c 00000000 		.word	_ZN12roberto_msgs10MotorState11deserializeEPh
 9632 0010 00000000 		.word	_ZN12roberto_msgs10MotorState7getTypeEv
 9633 0014 00000000 		.word	_ZN12roberto_msgs10MotorState6getMD5Ev
 9634              		.weak	_ZTVN13geometry_msgs9TransformE
 9635              		.section	.rodata._ZTVN13geometry_msgs9TransformE,"aG",%progbits,_ZTVN13geometry_msgs9TransformE,co
 9636              		.align	2
 9639              	_ZTVN13geometry_msgs9TransformE:
 9640 0000 00000000 		.word	0
 9641 0004 00000000 		.word	_ZTIN13geometry_msgs9TransformE
 9642 0008 00000000 		.word	_ZNK13geometry_msgs9Transform9serializeEPh
 9643 000c 00000000 		.word	_ZN13geometry_msgs9Transform11deserializeEPh
 9644 0010 00000000 		.word	_ZN13geometry_msgs9Transform7getTypeEv
 9645 0014 00000000 		.word	_ZN13geometry_msgs9Transform6getMD5Ev
 9646              		.weak	_ZTVN13geometry_msgs16TransformStampedE
 9647              		.section	.rodata._ZTVN13geometry_msgs16TransformStampedE,"aG",%progbits,_ZTVN13geometry_msgs16Tran
 9648              		.align	2
 9651              	_ZTVN13geometry_msgs16TransformStampedE:
 9652 0000 00000000 		.word	0
 9653 0004 00000000 		.word	_ZTIN13geometry_msgs16TransformStampedE
 9654 0008 00000000 		.word	_ZNK13geometry_msgs16TransformStamped9serializeEPh
 9655 000c 00000000 		.word	_ZN13geometry_msgs16TransformStamped11deserializeEPh
 9656 0010 00000000 		.word	_ZN13geometry_msgs16TransformStamped7getTypeEv
 9657 0014 00000000 		.word	_ZN13geometry_msgs16TransformStamped6getMD5Ev
 9658              		.weak	_ZTVN2tf9tfMessageE
 9659              		.section	.rodata._ZTVN2tf9tfMessageE,"aG",%progbits,_ZTVN2tf9tfMessageE,comdat
 9660              		.align	2
 9663              	_ZTVN2tf9tfMessageE:
 9664 0000 00000000 		.word	0
 9665 0004 00000000 		.word	_ZTIN2tf9tfMessageE
 9666 0008 00000000 		.word	_ZNK2tf9tfMessage9serializeEPh
 9667 000c 00000000 		.word	_ZN2tf9tfMessage11deserializeEPh
 9668 0010 00000000 		.word	_ZN2tf9tfMessage7getTypeEv
 9669 0014 00000000 		.word	_ZN2tf9tfMessage6getMD5Ev
 9670              		.weak	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 9671              		.section	.rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 9672              		.align	2
 9675              	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 9676 0000 00000000 		.word	0
 9677 0004 00000000 		.word	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 9678 0008 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 9679 000c 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 9680 0010 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
 9681              		.weak	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 9682              		.section	.rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTVN3ros10Su
 9683              		.align	2
 9686              	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 9687 0000 00000000 		.word	0
 9688 0004 00000000 		.word	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 9689 0008 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 9690 000c 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 9691 0010 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 9692 0014 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 9693              		.weak	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
 9694              		.section	.rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTVN3ros10SubscriberIN8
 9695              		.align	2
 9698              	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:
 9699 0000 00000000 		.word	0
 9700 0004 00000000 		.word	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 9701 0008 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 9702 000c 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 9703 0010 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 9704 0014 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 9705              		.global	odom_pub
 9706              		.global	odom
 9707              		.global	odom_broadcaster
 9708              		.global	odom_trans
 9709              		.global	led_sub
 9710              		.global	motor_sub
 9711              		.global	waitForServos
 9712              		.global	shuttingDown
 9713              		.global	nh
 9714              		.global	lastMsg
 9715              		.global	currentMode
 9716              		.global	motorCmd
 9717              		.global	L
 9718              		.global	d
 9719              		.global	rear_left
 9720              		.global	rear_right
 9721              		.global	front_left
 9722              		.global	front_right
 9723              		.global	servo_right
 9724              		.global	servo_left
 9725              		.global	GenerateStartStatus
 9726              		.global	NumberOfByteToReceive
 9727              		.global	RxBuffer
 9728              		.global	slaveAddress
 9729              		.global	Rx_Idx
 9730              		.global	USART_CNTOUT
 9731              		.global	USART_CNTIN
 9732              		.global	USART_FIFO
 9733              		.section	.rodata
 9734              		.set	.LANCHOR0,. + 0
 9737              	_ZN14rosserial_msgsL12REQUESTPARAME:
 9738 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 9738      65726961 
 9738      6C5F6D73 
 9738      67732F52 
 9738      65717565 
 9739              		.section	.rodata.str1.1,"aMS",%progbits,1
 9740              	.LC0:
 9741 0000 7374645F 		.ascii	"std_msgs/Time\000"
 9741      6D736773 
 9741      2F54696D 
 9741      6500
 9742              	.LC1:
 9743 000e 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 9743      36366337 
 9743      34633535 
 9743      32633331 
 9743      31666263 
 9744              	.LC2:
 9745 002f 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 9745      65726961 
 9745      6C5F6D73 
 9745      67732F54 
 9745      6F706963 
 9746              	.LC3:
 9747 0048 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 9747      31663838 
 9747      66633434 
 9747      38393266 
 9747      38633130 
 9748              	.LC4:
 9749 0069 726F7373 		.ascii	"rosserial_msgs/Log\000"
 9749      65726961 
 9749      6C5F6D73 
 9749      67732F4C 
 9749      6F6700
 9750              	.LC5:
 9751 007c 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 9751      64373331 
 9751      63323539 
 9751      33333236 
 9751      31636436 
 9752              	.LC6:
 9753 009d 63316633 		.ascii	"c1f3d28f1b044c871e6eff2e9fc3c667\000"
 9753      64323866 
 9753      31623034 
 9753      34633837 
 9753      31653665 
 9754              	.LC7:
 9755 00be 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 9755      39386264 
 9755      61363539 
 9755      38313938 
 9755      36646466 
 9756              	.LC8:
 9757 00df 7374645F 		.ascii	"std_msgs/UInt8\000"
 9757      6D736773 
 9757      2F55496E 
 9757      743800
 9758              	.LC9:
 9759 00ee 37633831 		.ascii	"7c8164229e7d2c17eb95e9231617fdee\000"
 9759      36343232 
 9759      39653764 
 9759      32633137 
 9759      65623935 
 9760              	.LC10:
 9761 010f 7374645F 		.ascii	"std_msgs/Header\000"
 9761      6D736773 
 9761      2F486561 
 9761      64657200 
 9762              	.LC11:
 9763 011f 32313736 		.ascii	"2176decaecbce78abc3b96ef049fabed\000"
 9763      64656361 
 9763      65636263 
 9763      65373861 
 9763      62633362 
 9764              	.LC12:
 9765 0140 67656F6D 		.ascii	"geometry_msgs/Point\000"
 9765      65747279 
 9765      5F6D7367 
 9765      732F506F 
 9765      696E7400 
 9766              	.LC13:
 9767 0154 34613834 		.ascii	"4a842b65f413084dc2b10fb484ea7f17\000"
 9767      32623635 
 9767      66343133 
 9767      30383464 
 9767      63326231 
 9768              	.LC14:
 9769 0175 67656F6D 		.ascii	"geometry_msgs/Quaternion\000"
 9769      65747279 
 9769      5F6D7367 
 9769      732F5175 
 9769      61746572 
 9770              	.LC15:
 9771 018e 61373739 		.ascii	"a779879fadf0160734f906b8c19c7004\000"
 9771      38373966 
 9771      61646630 
 9771      31363037 
 9771      33346639 
 9772              	.LC16:
 9773 01af 67656F6D 		.ascii	"geometry_msgs/Pose\000"
 9773      65747279 
 9773      5F6D7367 
 9773      732F506F 
 9773      736500
 9774              	.LC17:
 9775 01c2 65343564 		.ascii	"e45d45a5a1ce597b249e23fb30fc871f\000"
 9775      34356135 
 9775      61316365 
 9775      35393762 
 9775      32343965 
 9776              	.LC18:
 9777 01e3 67656F6D 		.ascii	"geometry_msgs/PoseWithCovariance\000"
 9777      65747279 
 9777      5F6D7367 
 9777      732F506F 
 9777      73655769 
 9778              	.LC19:
 9779 0204 63323365 		.ascii	"c23e848cf1b7533a8d7c259073a97e6f\000"
 9779      38343863 
 9779      66316237 
 9779      35333361 
 9779      38643763 
 9780              	.LC20:
 9781 0225 67656F6D 		.ascii	"geometry_msgs/Vector3\000"
 9781      65747279 
 9781      5F6D7367 
 9781      732F5665 
 9781      63746F72 
 9782              	.LC21:
 9783 023b 67656F6D 		.ascii	"geometry_msgs/Twist\000"
 9783      65747279 
 9783      5F6D7367 
 9783      732F5477 
 9783      69737400 
 9784              	.LC22:
 9785 024f 39663139 		.ascii	"9f195f881246fdfa2798d1d3eebca84a\000"
 9785      35663838 
 9785      31323436 
 9785      66646661 
 9785      32373938 
 9786              	.LC23:
 9787 0270 67656F6D 		.ascii	"geometry_msgs/TwistWithCovariance\000"
 9787      65747279 
 9787      5F6D7367 
 9787      732F5477 
 9787      69737457 
 9788              	.LC24:
 9789 0292 31666538 		.ascii	"1fe8a28e6890a4cc3ae4c3ca5c7d82e6\000"
 9789      61323865 
 9789      36383930 
 9789      61346363 
 9789      33616534 
 9790              	.LC25:
 9791 02b3 6E61765F 		.ascii	"nav_msgs/Odometry\000"
 9791      6D736773 
 9791      2F4F646F 
 9791      6D657472 
 9791      7900
 9792              	.LC26:
 9793 02c5 63643565 		.ascii	"cd5e73d190d741a2f92e81eda573aca7\000"
 9793      37336431 
 9793      39306437 
 9793      34316132 
 9793      66393265 
 9794              	.LC27:
 9795 02e6 726F6265 		.ascii	"roberto_msgs/MotorState\000"
 9795      72746F5F 
 9795      6D736773 
 9795      2F4D6F74 
 9795      6F725374 
 9796              	.LC28:
 9797 02fe 65386235 		.ascii	"e8b5d1162b85151c49e02b8224796c0e\000"
 9797      64313136 
 9797      32623835 
 9797      31353163 
 9797      34396530 
 9798              	.LC29:
 9799 031f 67656F6D 		.ascii	"geometry_msgs/Transform\000"
 9799      65747279 
 9799      5F6D7367 
 9799      732F5472 
 9799      616E7366 
 9800              	.LC30:
 9801 0337 61633965 		.ascii	"ac9eff44abf714214112b05d54a3cf9b\000"
 9801      66663434 
 9801      61626637 
 9801      31343231 
 9801      34313132 
 9802              	.LC31:
 9803 0358 67656F6D 		.ascii	"geometry_msgs/TransformStamped\000"
 9803      65747279 
 9803      5F6D7367 
 9803      732F5472 
 9803      616E7366 
 9804              	.LC32:
 9805 0377 62353736 		.ascii	"b5764a33bfeb3588febc2682852579b0\000"
 9805      34613333 
 9805      62666562 
 9805      33353838 
 9805      66656263 
 9806              	.LC33:
 9807 0398 74662F74 		.ascii	"tf/tfMessage\000"
 9807      664D6573 
 9807      73616765 
 9807      00
 9808              	.LC34:
 9809 03a5 39343831 		.ascii	"94810edda583a504dfda3829e70d7eec\000"
 9809      30656464 
 9809      61353833 
 9809      61353034 
 9809      64666461 
 9810              	.LC35:
 9811 03c6 00       		.ascii	"\000"
 9812              	.LC36:
 9813 03c7 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 9813      61676520 
 9813      66726F6D 
 9813      20646576 
 9813      69636520 
 9814 03fa 66666572 		.ascii	"ffer.\000"
 9814      2E00
 9815              	.LC37:
 9816 0400 73657269 		.ascii	"serial_node/KP\000"
 9816      616C5F6E 
 9816      6F64652F 
 9816      4B5000
 9817              	.LC38:
 9818 040f 73657269 		.ascii	"serial_node/KI\000"
 9818      616C5F6E 
 9818      6F64652F 
 9818      4B4900
 9819              	.LC39:
 9820 041e 73657269 		.ascii	"serial_node/KD\000"
 9820      616C5F6E 
 9820      6F64652F 
 9820      4B4400
 9821              	.LC40:
 9822 042d 73657269 		.ascii	"serial_node/integralSaturation\000"
 9822      616C5F6E 
 9822      6F64652F 
 9822      696E7465 
 9822      6772616C 
 9823              	.LC41:
 9824 044c 73657269 		.ascii	"serial_node/wheelRadius\000"
 9824      616C5F6E 
 9824      6F64652F 
 9824      77686565 
 9824      6C526164 
 9825              	.LC42:
 9826 0464 73657269 		.ascii	"serial_node/widthBetweenMotorPivotPoints\000"
 9826      616C5F6E 
 9826      6F64652F 
 9826      77696474 
 9826      68426574 
 9827              	.LC43:
 9828 048d 73657269 		.ascii	"serial_node/motorPivotPointToWheel\000"
 9828      616C5F6E 
 9828      6F64652F 
 9828      6D6F746F 
 9828      72506976 
 9829              	.LC44:
 9830 04b0 73657276 		.ascii	"servo_left\000"
 9830      6F5F6C65 
 9830      667400
 9831              	.LC45:
 9832 04bb 73657276 		.ascii	"servo_right\000"
 9832      6F5F7269 
 9832      67687400 
 9833              	.LC46:
 9834 04c7 66726F6E 		.ascii	"front_right\000"
 9834      745F7269 
 9834      67687400 
 9835              	.LC47:
 9836 04d3 66726F6E 		.ascii	"front_left\000"
 9836      745F6C65 
 9836      667400
 9837              	.LC48:
 9838 04de 72656172 		.ascii	"rear_left\000"
 9838      5F6C6566 
 9838      7400
 9839              	.LC49:
 9840 04e8 72656172 		.ascii	"rear_right\000"
 9840      5F726967 
 9840      687400
 9841              	.LC50:
 9842 04f3 556E6162 		.ascii	"Unable to initialize motor: %s - [FAIL]\015\012\000"
 9842      6C652074 
 9842      6F20696E 
 9842      69746961 
 9842      6C697A65 
 9843              	.LC51:
 9844 051d 456E636F 		.ascii	"Encoder timeout: %s - [FAIL]\000"
 9844      64657220 
 9844      74696D65 
 9844      6F75743A 
 9844      20257320 
 9845              	.LC52:
 9846 053a 6F646F6D 		.ascii	"odom\000"
 9846      00
 9847              	.LC53:
 9848 053f 62617365 		.ascii	"base_link\000"
 9848      5F6C696E 
 9848      6B00
 9849              	.LC54:
 9850 0549 4D61696E 		.ascii	"Main loop running slower than expected!\000"
 9850      206C6F6F 
 9850      70207275 
 9850      6E6E696E 
 9850      6720736C 
 9851              	.LC55:
 9852 0571 57726F6E 		.ascii	"Wrong parameters value: file %s on line %u\015\012\000"
 9852      67207061 
 9852      72616D65 
 9852      74657273 
 9852      2076616C 
 9853              	.LC56:
 9854 059e 7468726F 		.ascii	"throttled_joy_vel\000"
 9854      74746C65 
 9854      645F6A6F 
 9854      795F7665 
 9854      6C00
 9855              	.LC57:
 9856 05b0 6C656400 		.ascii	"led\000"
 9857              	.LC58:
 9858 05b4 2F746600 		.ascii	"/tf\000"
 9859              		.bss
 9860              		.align	2
 9861              		.set	.LANCHOR1,. + 0
 9864              	lastMsg:
 9865 0000 00000000 		.space	4
 9868              	currentMode:
 9869 0004 00       		.space	1
 9872              	waitForServos:
 9873 0005 00       		.space	1
 9874 0006 0000     		.space	2
 9877              	L:
 9878 0008 00000000 		.space	4
 9881              	motorCmd:
 9882 000c 00000000 		.space	16
 9882      00000000 
 9882      00000000 
 9882      00000000 
 9885              	servo_left:
 9886 001c 00000000 		.space	4
 9889              	servo_right:
 9890 0020 00000000 		.space	4
 9893              	USART_CNTOUT:
 9894 0024 00000000 		.space	4
 9897              	USART_CNTIN:
 9898 0028 00000000 		.space	4
 9901              	USART_FIFO:
 9902 002c 00000000 		.space	1024
 9902      00000000 
 9902      00000000 
 9902      00000000 
 9902      00000000 
 9905              	shuttingDown:
 9906 042c 00       		.space	1
 9907 042d 000000   		.space	3
 9910              	nh:
 9911 0430 00000000 		.space	1328
 9911      00000000 
 9911      00000000 
 9911      00000000 
 9911      00000000 
 9914              	motor_sub:
 9915 0960 00000000 		.space	64
 9915      00000000 
 9915      00000000 
 9915      00000000 
 9915      00000000 
 9918              	led_sub:
 9919 09a0 00000000 		.space	28
 9919      00000000 
 9919      00000000 
 9919      00000000 
 9919      00000000 
 9922              	odom_pub:
 9923 09bc 00000000 		.space	20
 9923      00000000 
 9923      00000000 
 9923      00000000 
 9923      00000000 
 9926              	odom_broadcaster:
 9927 09d0 00000000 		.space	100
 9927      00000000 
 9927      00000000 
 9927      00000000 
 9927      00000000 
 9930              	d:
 9931 0a34 00000000 		.space	4
 9934              	front_left:
 9935 0a38 00000000 		.space	4
 9938              	front_right:
 9939 0a3c 00000000 		.space	4
 9942              	rear_left:
 9943 0a40 00000000 		.space	4
 9946              	rear_right:
 9947 0a44 00000000 		.space	4
 9950              	odom_trans:
 9951 0a48 00000000 		.space	68
 9951      00000000 
 9951      00000000 
 9951      00000000 
 9951      00000000 
 9954              	odom:
 9955 0a8c 00000000 		.space	400
 9955      00000000 
 9955      00000000 
 9955      00000000 
 9955      00000000 
 9958              	GenerateStartStatus:
 9959 0c1c 00       		.space	1
 9962              	NumberOfByteToReceive:
 9963 0c1d 00       		.space	1
 9966              	RxBuffer:
 9967 0c1e 00000000 		.space	7
 9967      000000
 9970              	slaveAddress:
 9971 0c25 00       		.space	1
 9974              	Rx_Idx:
 9975 0c26 00       		.space	1
 9976              		.text
 9977              	.Letext0:
 9978              		.file 29 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 9979              		.file 30 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types.h"
 9980              		.file 31 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 9981              		.file 32 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdint.h"
 9982              		.file 33 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 9983              		.file 34 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_usart.h"
 9984              		.file 35 "/opt/gcc-arm-none-eabi-5_2-2015q4/lib/gcc/arm-none-eabi/5.2.1/include/stddef.h"
 9985              		.file 36 "/opt/gcc-arm-none-eabi-5_2-2015q4/lib/gcc/arm-none-eabi/5.2.1/include/stdarg.h"
 9986              		.file 37 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/lock.h"
 9987              		.file 38 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_types.h"
 9988              		.file 39 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/reent.h"
 9989              		.file 40 "<built-in>"
 9990              		.file 41 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/type_traits"
 9991              		.file 42 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/exception_ptr.h"
 9992              		.file 43 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/arm-none-eabi/armv7-m/
 9993              		.file 44 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/debug/debug.h"
 9994              		.file 45 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/cwchar"
 9995              		.file 46 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/cstdint"
 9996              		.file 47 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/clocale"
 9997              		.file 48 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/stl_pair.h"
 9998              		.file 49 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/uses_allocator.h"
 9999              		.file 50 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/tuple"
 10000              		.file 51 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/predefined_ops.h"
 10001              		.file 52 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/ext/new_allocator.h"
 10002              		.file 53 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/ext/numeric_traits.h"
 10003              		.file 54 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/wchar.h"
 10004              		.file 55 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/locale.h"
 10005              		.file 56 "./inc/motorSettings.h"
 10006              		.file 57 "./lib/ros_lib/ros/duration.h"
 10007              		.file 58 "./lib/ros_lib/ros.h"
 10008              		.file 59 "./lib/ros_lib/std_msgs/MultiArrayDimension.h"
 10009              		.file 60 "./lib/ros_lib/sensor_msgs/Joy.h"
 10010              		.file 61 "./inc/motor.h"
 10011              		.file 62 "./inc/led.h"
 10012              		.file 63 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/math.h"
 10013              		.file 64 "./inc/stm32_time.h"
 10014              		.file 65 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/string.h"
 10015              		.file 66 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdlib.h"
 10016              		.file 67 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 10017              		.file 68 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_exti.h"
 10018              		.file 69 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdio.h"
 10019              		.file 70 "./inc/encoder.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/ccvtylgk.s:20     .text._ZNK8std_msgs4Time9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:25     .text._ZNK8std_msgs4Time9serializeEPh:00000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:75     .text._ZN8std_msgs4Time11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:80     .text._ZN8std_msgs4Time11deserializeEPh:00000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:131    .text._ZN8std_msgs4Time7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:136    .text._ZN8std_msgs4Time7getTypeEv:00000000 _ZN8std_msgs4Time7getTypeEv
     /tmp/ccvtylgk.s:152    .text._ZN8std_msgs4Time7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:159    .text._ZN8std_msgs4Time6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:164    .text._ZN8std_msgs4Time6getMD5Ev:00000000 _ZN8std_msgs4Time6getMD5Ev
     /tmp/ccvtylgk.s:180    .text._ZN8std_msgs4Time6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:187    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:192    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
     /tmp/ccvtylgk.s:209    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:216    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:221    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
     /tmp/ccvtylgk.s:237    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:244    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:249    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 _ZN14rosserial_msgs3Log7getTypeEv
     /tmp/ccvtylgk.s:266    .text._ZN14rosserial_msgs3Log7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:273    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:278    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 _ZN14rosserial_msgs3Log6getMD5Ev
     /tmp/ccvtylgk.s:294    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:301    .text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:306    .text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000000 _ZN14rosserial_msgs19RequestParamRequest7getTypeEv
     /tmp/ccvtylgk.s:323    .text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:330    .text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:335    .text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000000 _ZN14rosserial_msgs19RequestParamRequest6getMD5Ev
     /tmp/ccvtylgk.s:351    .text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:358    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:363    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
     /tmp/ccvtylgk.s:379    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:386    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:391    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
     /tmp/ccvtylgk.s:407    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:414    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:419    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 _ZNK8std_msgs5UInt89serializeEPh
.ARM.exidx.text._ZNK8std_msgs5UInt89serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:445    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:450    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 _ZN8std_msgs5UInt811deserializeEPh
.ARM.exidx.text._ZN8std_msgs5UInt811deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:473    .text._ZN8std_msgs5UInt87getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:478    .text._ZN8std_msgs5UInt87getTypeEv:00000000 _ZN8std_msgs5UInt87getTypeEv
     /tmp/ccvtylgk.s:494    .text._ZN8std_msgs5UInt87getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt87getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:501    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:506    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 _ZN8std_msgs5UInt86getMD5Ev
     /tmp/ccvtylgk.s:522    .text._ZN8std_msgs5UInt86getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt86getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:529    .text._ZN8std_msgs6Header7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:534    .text._ZN8std_msgs6Header7getTypeEv:00000000 _ZN8std_msgs6Header7getTypeEv
     /tmp/ccvtylgk.s:551    .text._ZN8std_msgs6Header7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:558    .text._ZN8std_msgs6Header6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:563    .text._ZN8std_msgs6Header6getMD5Ev:00000000 _ZN8std_msgs6Header6getMD5Ev
     /tmp/ccvtylgk.s:579    .text._ZN8std_msgs6Header6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:586    .text._ZN13geometry_msgs5Point7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:591    .text._ZN13geometry_msgs5Point7getTypeEv:00000000 _ZN13geometry_msgs5Point7getTypeEv
     /tmp/ccvtylgk.s:608    .text._ZN13geometry_msgs5Point7getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs5Point7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:615    .text._ZN13geometry_msgs5Point6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:620    .text._ZN13geometry_msgs5Point6getMD5Ev:00000000 _ZN13geometry_msgs5Point6getMD5Ev
     /tmp/ccvtylgk.s:636    .text._ZN13geometry_msgs5Point6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs5Point6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:643    .text._ZN13geometry_msgs10Quaternion7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:648    .text._ZN13geometry_msgs10Quaternion7getTypeEv:00000000 _ZN13geometry_msgs10Quaternion7getTypeEv
     /tmp/ccvtylgk.s:665    .text._ZN13geometry_msgs10Quaternion7getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs10Quaternion7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:672    .text._ZN13geometry_msgs10Quaternion6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:677    .text._ZN13geometry_msgs10Quaternion6getMD5Ev:00000000 _ZN13geometry_msgs10Quaternion6getMD5Ev
     /tmp/ccvtylgk.s:693    .text._ZN13geometry_msgs10Quaternion6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs10Quaternion6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:700    .text._ZN13geometry_msgs4Pose7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:705    .text._ZN13geometry_msgs4Pose7getTypeEv:00000000 _ZN13geometry_msgs4Pose7getTypeEv
     /tmp/ccvtylgk.s:722    .text._ZN13geometry_msgs4Pose7getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs4Pose7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:729    .text._ZN13geometry_msgs4Pose6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:734    .text._ZN13geometry_msgs4Pose6getMD5Ev:00000000 _ZN13geometry_msgs4Pose6getMD5Ev
     /tmp/ccvtylgk.s:750    .text._ZN13geometry_msgs4Pose6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs4Pose6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:757    .text._ZN13geometry_msgs18PoseWithCovariance7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:762    .text._ZN13geometry_msgs18PoseWithCovariance7getTypeEv:00000000 _ZN13geometry_msgs18PoseWithCovariance7getTypeEv
     /tmp/ccvtylgk.s:779    .text._ZN13geometry_msgs18PoseWithCovariance7getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs18PoseWithCovariance7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:786    .text._ZN13geometry_msgs18PoseWithCovariance6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:791    .text._ZN13geometry_msgs18PoseWithCovariance6getMD5Ev:00000000 _ZN13geometry_msgs18PoseWithCovariance6getMD5Ev
     /tmp/ccvtylgk.s:807    .text._ZN13geometry_msgs18PoseWithCovariance6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs18PoseWithCovariance6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:814    .text._ZN13geometry_msgs7Vector37getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:819    .text._ZN13geometry_msgs7Vector37getTypeEv:00000000 _ZN13geometry_msgs7Vector37getTypeEv
     /tmp/ccvtylgk.s:836    .text._ZN13geometry_msgs7Vector37getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs7Vector37getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:843    .text._ZN13geometry_msgs7Vector36getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:848    .text._ZN13geometry_msgs7Vector36getMD5Ev:00000000 _ZN13geometry_msgs7Vector36getMD5Ev
     /tmp/ccvtylgk.s:864    .text._ZN13geometry_msgs7Vector36getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs7Vector36getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:871    .text._ZN13geometry_msgs5Twist7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:876    .text._ZN13geometry_msgs5Twist7getTypeEv:00000000 _ZN13geometry_msgs5Twist7getTypeEv
     /tmp/ccvtylgk.s:893    .text._ZN13geometry_msgs5Twist7getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs5Twist7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:900    .text._ZN13geometry_msgs5Twist6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:905    .text._ZN13geometry_msgs5Twist6getMD5Ev:00000000 _ZN13geometry_msgs5Twist6getMD5Ev
     /tmp/ccvtylgk.s:921    .text._ZN13geometry_msgs5Twist6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs5Twist6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:928    .text._ZN13geometry_msgs19TwistWithCovariance7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:933    .text._ZN13geometry_msgs19TwistWithCovariance7getTypeEv:00000000 _ZN13geometry_msgs19TwistWithCovariance7getTypeEv
     /tmp/ccvtylgk.s:950    .text._ZN13geometry_msgs19TwistWithCovariance7getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs19TwistWithCovariance7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:957    .text._ZN13geometry_msgs19TwistWithCovariance6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:962    .text._ZN13geometry_msgs19TwistWithCovariance6getMD5Ev:00000000 _ZN13geometry_msgs19TwistWithCovariance6getMD5Ev
     /tmp/ccvtylgk.s:978    .text._ZN13geometry_msgs19TwistWithCovariance6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs19TwistWithCovariance6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:985    .text._ZN8nav_msgs8Odometry7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:990    .text._ZN8nav_msgs8Odometry7getTypeEv:00000000 _ZN8nav_msgs8Odometry7getTypeEv
     /tmp/ccvtylgk.s:1007   .text._ZN8nav_msgs8Odometry7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8nav_msgs8Odometry7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:1014   .text._ZN8nav_msgs8Odometry6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:1019   .text._ZN8nav_msgs8Odometry6getMD5Ev:00000000 _ZN8nav_msgs8Odometry6getMD5Ev
     /tmp/ccvtylgk.s:1035   .text._ZN8nav_msgs8Odometry6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8nav_msgs8Odometry6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:1042   .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:1047   .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 _ZN12roberto_msgs10MotorState7getTypeEv
     /tmp/ccvtylgk.s:1064   .text._ZN12roberto_msgs10MotorState7getTypeEv:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:1071   .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:1076   .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 _ZN12roberto_msgs10MotorState6getMD5Ev
     /tmp/ccvtylgk.s:1092   .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:1099   .text._ZN13geometry_msgs9Transform7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:1104   .text._ZN13geometry_msgs9Transform7getTypeEv:00000000 _ZN13geometry_msgs9Transform7getTypeEv
     /tmp/ccvtylgk.s:1121   .text._ZN13geometry_msgs9Transform7getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs9Transform7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:1128   .text._ZN13geometry_msgs9Transform6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:1133   .text._ZN13geometry_msgs9Transform6getMD5Ev:00000000 _ZN13geometry_msgs9Transform6getMD5Ev
     /tmp/ccvtylgk.s:1149   .text._ZN13geometry_msgs9Transform6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs9Transform6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:1156   .text._ZN13geometry_msgs16TransformStamped7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:1161   .text._ZN13geometry_msgs16TransformStamped7getTypeEv:00000000 _ZN13geometry_msgs16TransformStamped7getTypeEv
     /tmp/ccvtylgk.s:1178   .text._ZN13geometry_msgs16TransformStamped7getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs16TransformStamped7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:1185   .text._ZN13geometry_msgs16TransformStamped6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:1190   .text._ZN13geometry_msgs16TransformStamped6getMD5Ev:00000000 _ZN13geometry_msgs16TransformStamped6getMD5Ev
     /tmp/ccvtylgk.s:1206   .text._ZN13geometry_msgs16TransformStamped6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs16TransformStamped6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:1213   .text._ZNK2tf9tfMessage9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:1218   .text._ZNK2tf9tfMessage9serializeEPh:00000000 _ZNK2tf9tfMessage9serializeEPh
.ARM.exidx.text._ZNK2tf9tfMessage9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:1297   .text._ZN2tf9tfMessage7getTypeEv:00000000 $t
     /tmp/ccvtylgk.s:1302   .text._ZN2tf9tfMessage7getTypeEv:00000000 _ZN2tf9tfMessage7getTypeEv
     /tmp/ccvtylgk.s:1318   .text._ZN2tf9tfMessage7getTypeEv:00000004 $d
.ARM.exidx.text._ZN2tf9tfMessage7getTypeEv:00000000 $d
     /tmp/ccvtylgk.s:1325   .text._ZN2tf9tfMessage6getMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:1330   .text._ZN2tf9tfMessage6getMD5Ev:00000000 _ZN2tf9tfMessage6getMD5Ev
     /tmp/ccvtylgk.s:1346   .text._ZN2tf9tfMessage6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN2tf9tfMessage6getMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:1353   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 $t
     /tmp/ccvtylgk.s:1358   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 $d
     /tmp/ccvtylgk.s:1378   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $t
     /tmp/ccvtylgk.s:1383   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $d
     /tmp/ccvtylgk.s:1419   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $t
     /tmp/ccvtylgk.s:1424   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $d
     /tmp/ccvtylgk.s:1443   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $t
     /tmp/ccvtylgk.s:1448   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
     /tmp/ccvtylgk.s:1464   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $d
     /tmp/ccvtylgk.s:1471   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:1476   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
     /tmp/ccvtylgk.s:1492   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:1499   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $t
     /tmp/ccvtylgk.s:1504   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $d
     /tmp/ccvtylgk.s:1523   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $t
     /tmp/ccvtylgk.s:1528   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
     /tmp/ccvtylgk.s:1544   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $d
     /tmp/ccvtylgk.s:1551   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $t
     /tmp/ccvtylgk.s:1556   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
     /tmp/ccvtylgk.s:1572   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $d
     /tmp/ccvtylgk.s:1579   .text:00000000 $t
     /tmp/ccvtylgk.s:1584   .text:00000000 _Z6led_cbRKN8std_msgs5UInt8E
                       .ARM.exidx:00000000 $d
     /tmp/ccvtylgk.s:1618   .text:00000006 _Z8motor_cbRKN12roberto_msgs10MotorStateE
     /tmp/ccvtylgk.s:1914   .text:00000170 $d
     /tmp/ccvtylgk.s:1924   .text._ZNK8std_msgs6Header9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:1929   .text._ZNK8std_msgs6Header9serializeEPh:00000000 _ZNK8std_msgs6Header9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6Header9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:2028   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:2033   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:2246   .text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:2251   .text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:00000000 _ZNK14rosserial_msgs19RequestParamRequest9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:2304   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:2309   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:2368   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:2373   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:2508   .text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:2513   .text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:00000000 _ZN14rosserial_msgs19RequestParamRequest11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:2581   .text._ZN8std_msgs6Header11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:2586   .text._ZN8std_msgs6Header11deserializeEPh:00000000 _ZN8std_msgs6Header11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6Header11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:2699   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:2704   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:2892   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:2897   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:2971   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:2976   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:3231   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $t
     /tmp/ccvtylgk.s:3236   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 _ZN3ros3Msg19serializeAvrFloat64EPhf
.ARM.exidx.text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $d
     /tmp/ccvtylgk.s:3323   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:3328   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 _ZNK12roberto_msgs10MotorState9serializeEPh
.ARM.exidx.text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:3400   .text._ZNK13geometry_msgs7Vector39serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:3405   .text._ZNK13geometry_msgs7Vector39serializeEPh:00000000 _ZNK13geometry_msgs7Vector39serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs7Vector39serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:3457   .text._ZNK13geometry_msgs5Twist9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:3462   .text._ZNK13geometry_msgs5Twist9serializeEPh:00000000 _ZNK13geometry_msgs5Twist9serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs5Twist9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:3505   .text._ZNK13geometry_msgs19TwistWithCovariance9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:3510   .text._ZNK13geometry_msgs19TwistWithCovariance9serializeEPh:00000000 _ZNK13geometry_msgs19TwistWithCovariance9serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs19TwistWithCovariance9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:3566   .text._ZNK13geometry_msgs10Quaternion9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:3571   .text._ZNK13geometry_msgs10Quaternion9serializeEPh:00000000 _ZNK13geometry_msgs10Quaternion9serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs10Quaternion9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:3630   .text._ZNK13geometry_msgs9Transform9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:3635   .text._ZNK13geometry_msgs9Transform9serializeEPh:00000000 _ZNK13geometry_msgs9Transform9serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs9Transform9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:3678   .text._ZNK13geometry_msgs16TransformStamped9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:3683   .text._ZNK13geometry_msgs16TransformStamped9serializeEPh:00000000 _ZNK13geometry_msgs16TransformStamped9serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs16TransformStamped9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:3756   .text._ZNK13geometry_msgs5Point9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:3761   .text._ZNK13geometry_msgs5Point9serializeEPh:00000000 _ZNK13geometry_msgs5Point9serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs5Point9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:3813   .text._ZNK13geometry_msgs4Pose9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:3818   .text._ZNK13geometry_msgs4Pose9serializeEPh:00000000 _ZNK13geometry_msgs4Pose9serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs4Pose9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:3861   .text._ZNK13geometry_msgs18PoseWithCovariance9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:3866   .text._ZNK13geometry_msgs18PoseWithCovariance9serializeEPh:00000000 _ZNK13geometry_msgs18PoseWithCovariance9serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs18PoseWithCovariance9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:3922   .text._ZNK8nav_msgs8Odometry9serializeEPh:00000000 $t
     /tmp/ccvtylgk.s:3927   .text._ZNK8nav_msgs8Odometry9serializeEPh:00000000 _ZNK8nav_msgs8Odometry9serializeEPh
.ARM.exidx.text._ZNK8nav_msgs8Odometry9serializeEPh:00000000 $d
     /tmp/ccvtylgk.s:4007   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $t
     /tmp/ccvtylgk.s:4012   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 _ZN3ros3Msg21deserializeAvrFloat64EPKhPf
.ARM.exidx.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $d
     /tmp/ccvtylgk.s:4084   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:4089   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 _ZN12roberto_msgs10MotorState11deserializeEPh
.ARM.exidx.text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:4163   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $t
     /tmp/ccvtylgk.s:4168   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $d
     /tmp/ccvtylgk.s:4212   .text._ZN13geometry_msgs10Quaternion11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:4217   .text._ZN13geometry_msgs10Quaternion11deserializeEPh:00000000 _ZN13geometry_msgs10Quaternion11deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs10Quaternion11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:4276   .text._ZN13geometry_msgs7Vector311deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:4281   .text._ZN13geometry_msgs7Vector311deserializeEPh:00000000 _ZN13geometry_msgs7Vector311deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs7Vector311deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:4333   .text._ZN13geometry_msgs9Transform11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:4338   .text._ZN13geometry_msgs9Transform11deserializeEPh:00000000 _ZN13geometry_msgs9Transform11deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs9Transform11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:4381   .text._ZN13geometry_msgs16TransformStamped11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:4386   .text._ZN13geometry_msgs16TransformStamped11deserializeEPh:00000000 _ZN13geometry_msgs16TransformStamped11deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs16TransformStamped11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:4474   .text._ZN2tf9tfMessage11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:4479   .text._ZN2tf9tfMessage11deserializeEPh:00000000 _ZN2tf9tfMessage11deserializeEPh
.ARM.exidx.text._ZN2tf9tfMessage11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:4572   .text._ZN13geometry_msgs5Twist11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:4577   .text._ZN13geometry_msgs5Twist11deserializeEPh:00000000 _ZN13geometry_msgs5Twist11deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs5Twist11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:4620   .text._ZN13geometry_msgs5Point11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:4625   .text._ZN13geometry_msgs5Point11deserializeEPh:00000000 _ZN13geometry_msgs5Point11deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs5Point11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:4677   .text._ZN13geometry_msgs4Pose11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:4682   .text._ZN13geometry_msgs4Pose11deserializeEPh:00000000 _ZN13geometry_msgs4Pose11deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs4Pose11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:4725   .text._ZN13geometry_msgs18PoseWithCovariance11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:4730   .text._ZN13geometry_msgs18PoseWithCovariance11deserializeEPh:00000000 _ZN13geometry_msgs18PoseWithCovariance11deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs18PoseWithCovariance11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:4787   .text._ZN13geometry_msgs19TwistWithCovariance11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:4792   .text._ZN13geometry_msgs19TwistWithCovariance11deserializeEPh:00000000 _ZN13geometry_msgs19TwistWithCovariance11deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs19TwistWithCovariance11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:4849   .text._ZN8nav_msgs8Odometry11deserializeEPh:00000000 $t
     /tmp/ccvtylgk.s:4854   .text._ZN8nav_msgs8Odometry11deserializeEPh:00000000 _ZN8nav_msgs8Odometry11deserializeEPh
.ARM.exidx.text._ZN8nav_msgs8Odometry11deserializeEPh:00000000 $d
     /tmp/ccvtylgk.s:4949   .text._ZN3ros9Publisher7publishEPKNS_3MsgE:00000000 $t
     /tmp/ccvtylgk.s:4954   .text._ZN3ros9Publisher7publishEPKNS_3MsgE:00000000 _ZN3ros9Publisher7publishEPKNS_3MsgE
.ARM.exidx.text._ZN3ros9Publisher7publishEPKNS_3MsgE:00000000 $d
     /tmp/ccvtylgk.s:4990   .text._ZN15ArduinoHardware4initEv:00000000 $t
     /tmp/ccvtylgk.s:4995   .text._ZN15ArduinoHardware4initEv:00000000 _ZN15ArduinoHardware4initEv
     /tmp/ccvtylgk.s:5113   .text._ZN15ArduinoHardware4initEv:0000008c $d
.ARM.exidx.text._ZN15ArduinoHardware4initEv:00000000 $d
     /tmp/ccvtylgk.s:5120   .text:00000184 $t
     /tmp/ccvtylgk.s:5125   .text:00000184 USART1_IRQHandler
     /tmp/ccvtylgk.s:5188   .text:000001c8 $d
     /tmp/ccvtylgk.s:5195   .text._ZN13geometry_msgs16TransformStampedC2Ev:00000000 $t
     /tmp/ccvtylgk.s:5200   .text._ZN13geometry_msgs16TransformStampedC2Ev:00000000 _ZN13geometry_msgs16TransformStampedC2Ev
     /tmp/ccvtylgk.s:5302   .text._ZN13geometry_msgs16TransformStampedC2Ev:00000034 $d
     /tmp/ccvtylgk.s:9651   .rodata._ZTVN13geometry_msgs16TransformStampedE:00000000 _ZTVN13geometry_msgs16TransformStampedE
     /tmp/ccvtylgk.s:9543   .rodata._ZTVN13geometry_msgs10QuaternionE:00000000 _ZTVN13geometry_msgs10QuaternionE
     /tmp/ccvtylgk.s:9519   .rodata._ZTVN8std_msgs6HeaderE:00000000 _ZTVN8std_msgs6HeaderE
     /tmp/ccvtylgk.s:9639   .rodata._ZTVN13geometry_msgs9TransformE:00000000 _ZTVN13geometry_msgs9TransformE
     /tmp/ccvtylgk.s:9579   .rodata._ZTVN13geometry_msgs7Vector3E:00000000 _ZTVN13geometry_msgs7Vector3E
.ARM.exidx.text._ZN13geometry_msgs16TransformStampedC2Ev:00000000 $d
     /tmp/ccvtylgk.s:5200   .text._ZN13geometry_msgs16TransformStampedC2Ev:00000000 _ZN13geometry_msgs16TransformStampedC1Ev
     /tmp/ccvtylgk.s:5316   .text:000001d0 $t
     /tmp/ccvtylgk.s:5321   .text:000001d0 EXTI2_IRQHandler
     /tmp/ccvtylgk.s:5362   .text:000001f0 $d
                       .ARM.extab:00000000 $d
     /tmp/ccvtylgk.s:5368   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:00000000 $t
     /tmp/ccvtylgk.s:5373   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
     /tmp/ccvtylgk.s:5521   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:0000006c $d
     /tmp/ccvtylgk.s:9483   .rodata._ZTVN14rosserial_msgs19RequestParamRequestE:00000000 _ZTVN14rosserial_msgs19RequestParamRequestE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:00000000 $d
     /tmp/ccvtylgk.s:5527   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 $t
     /tmp/ccvtylgk.s:5532   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
     /tmp/ccvtylgk.s:5586   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000020 $d
     /tmp/ccvtylgk.s:9471   .rodata._ZTVN14rosserial_msgs3LogE:00000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 $d
     /tmp/ccvtylgk.s:5592   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 $t
     /tmp/ccvtylgk.s:5597   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
     /tmp/ccvtylgk.s:5761   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:000000bc $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 $d
     /tmp/ccvtylgk.s:5768   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 $t
     /tmp/ccvtylgk.s:5773   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
     /tmp/ccvtylgk.s:5842   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000024 $d
     /tmp/ccvtylgk.s:9447   .rodata._ZTVN8std_msgs4TimeE:00000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 $d
     /tmp/ccvtylgk.s:5848   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 $t
     /tmp/ccvtylgk.s:5853   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
     /tmp/ccvtylgk.s:6015   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:000000b4 $d
     /tmp/ccvtylgk.s:9459   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 _ZTVN14rosserial_msgs9TopicInfoE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 $d
     /tmp/ccvtylgk.s:6022   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 $t
     /tmp/ccvtylgk.s:6027   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
     /tmp/ccvtylgk.s:6160   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000074 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 $d
     /tmp/ccvtylgk.s:6168   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 $t
     /tmp/ccvtylgk.s:6173   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
     /tmp/ccvtylgk.s:6535   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000208 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 $d
     /tmp/ccvtylgk.s:6552   .text.startup:00000000 $t
     /tmp/ccvtylgk.s:6557   .text.startup:00000000 main
     /tmp/ccvtylgk.s:6788   .text.startup:000000f0 $d
     /tmp/ccvtylgk.s:6797   .text.startup:0000010c $t
     /tmp/ccvtylgk.s:7188   .text.startup:000003a8 $d
     /tmp/ccvtylgk.s:7216   .text.startup:00000414 $t
     /tmp/ccvtylgk.s:7554   .text.startup:00000620 $d
     /tmp/ccvtylgk.s:7561   .text.startup:00000634 $t
     /tmp/ccvtylgk.s:7782   .text.startup:0000077c $d
     /tmp/ccvtylgk.s:7790   .text.startup:0000078c $t
     /tmp/ccvtylgk.s:8373   .text.startup:00000b40 $d
          .ARM.extab.text.startup:00000000 $d
          .ARM.exidx.text.startup:00000000 $d
     /tmp/ccvtylgk.s:8387   .text:000001f4 $t
     /tmp/ccvtylgk.s:8392   .text:000001f4 _Z13assert_failedPhm
     /tmp/ccvtylgk.s:8439   .text:00000220 $d
     /tmp/ccvtylgk.s:8446   .text.startup:00000b64 $t
     /tmp/ccvtylgk.s:8450   .text.startup:00000b64 _GLOBAL__sub_I_USART_FIFO
     /tmp/ccvtylgk.s:9030   .text.startup:00000d4c $d
     /tmp/ccvtylgk.s:9675   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/ccvtylgk.s:9495   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 _ZTVN14rosserial_msgs20RequestParamResponseE
     /tmp/ccvtylgk.s:9686   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccvtylgk.s:9627   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 _ZTVN12roberto_msgs10MotorStateE
     /tmp/ccvtylgk.s:9698   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/ccvtylgk.s:9507   .rodata._ZTVN8std_msgs5UInt8E:00000000 _ZTVN8std_msgs5UInt8E
     /tmp/ccvtylgk.s:9663   .rodata._ZTVN2tf9tfMessageE:00000000 _ZTVN2tf9tfMessageE
     /tmp/ccvtylgk.s:9615   .rodata._ZTVN8nav_msgs8OdometryE:00000000 _ZTVN8nav_msgs8OdometryE
     /tmp/ccvtylgk.s:9567   .rodata._ZTVN13geometry_msgs18PoseWithCovarianceE:00000000 _ZTVN13geometry_msgs18PoseWithCovarianceE
     /tmp/ccvtylgk.s:9555   .rodata._ZTVN13geometry_msgs4PoseE:00000000 _ZTVN13geometry_msgs4PoseE
     /tmp/ccvtylgk.s:9531   .rodata._ZTVN13geometry_msgs5PointE:00000000 _ZTVN13geometry_msgs5PointE
     /tmp/ccvtylgk.s:9603   .rodata._ZTVN13geometry_msgs19TwistWithCovarianceE:00000000 _ZTVN13geometry_msgs19TwistWithCovarianceE
     /tmp/ccvtylgk.s:9591   .rodata._ZTVN13geometry_msgs5TwistE:00000000 _ZTVN13geometry_msgs5TwistE
     /tmp/ccvtylgk.s:9067   .init_array:00000000 $d
     /tmp/ccvtylgk.s:9073   .rodata._ZTSN3ros3MsgE:00000000 _ZTSN3ros3MsgE
     /tmp/ccvtylgk.s:9080   .rodata._ZTIN3ros3MsgE:00000000 _ZTIN3ros3MsgE
     /tmp/ccvtylgk.s:9077   .rodata._ZTIN3ros3MsgE:00000000 $d
     /tmp/ccvtylgk.s:9087   .rodata._ZTSN8std_msgs4TimeE:00000000 _ZTSN8std_msgs4TimeE
     /tmp/ccvtylgk.s:9094   .rodata._ZTIN8std_msgs4TimeE:00000000 _ZTIN8std_msgs4TimeE
     /tmp/ccvtylgk.s:9091   .rodata._ZTIN8std_msgs4TimeE:00000000 $d
     /tmp/ccvtylgk.s:9102   .rodata._ZTSN14rosserial_msgs9TopicInfoE:00000000 _ZTSN14rosserial_msgs9TopicInfoE
     /tmp/ccvtylgk.s:9109   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 _ZTIN14rosserial_msgs9TopicInfoE
     /tmp/ccvtylgk.s:9106   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/ccvtylgk.s:9117   .rodata._ZTSN14rosserial_msgs3LogE:00000000 _ZTSN14rosserial_msgs3LogE
     /tmp/ccvtylgk.s:9124   .rodata._ZTIN14rosserial_msgs3LogE:00000000 _ZTIN14rosserial_msgs3LogE
     /tmp/ccvtylgk.s:9121   .rodata._ZTIN14rosserial_msgs3LogE:00000000 $d
     /tmp/ccvtylgk.s:9132   .rodata._ZTSN14rosserial_msgs19RequestParamRequestE:00000000 _ZTSN14rosserial_msgs19RequestParamRequestE
     /tmp/ccvtylgk.s:9139   .rodata._ZTIN14rosserial_msgs19RequestParamRequestE:00000000 _ZTIN14rosserial_msgs19RequestParamRequestE
     /tmp/ccvtylgk.s:9136   .rodata._ZTIN14rosserial_msgs19RequestParamRequestE:00000000 $d
     /tmp/ccvtylgk.s:9147   .rodata._ZTSN14rosserial_msgs20RequestParamResponseE:00000000 _ZTSN14rosserial_msgs20RequestParamResponseE
     /tmp/ccvtylgk.s:9154   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 _ZTIN14rosserial_msgs20RequestParamResponseE
     /tmp/ccvtylgk.s:9151   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/ccvtylgk.s:9162   .rodata._ZTSN3ros15NodeHandleBase_E:00000000 _ZTSN3ros15NodeHandleBase_E
     /tmp/ccvtylgk.s:9169   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 _ZTIN3ros15NodeHandleBase_E
     /tmp/ccvtylgk.s:9166   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 $d
     /tmp/ccvtylgk.s:9176   .rodata._ZTSN3ros11Subscriber_E:00000000 _ZTSN3ros11Subscriber_E
     /tmp/ccvtylgk.s:9183   .rodata._ZTIN3ros11Subscriber_E:00000000 _ZTIN3ros11Subscriber_E
     /tmp/ccvtylgk.s:9180   .rodata._ZTIN3ros11Subscriber_E:00000000 $d
     /tmp/ccvtylgk.s:9190   .rodata._ZTSN8std_msgs5UInt8E:00000000 _ZTSN8std_msgs5UInt8E
     /tmp/ccvtylgk.s:9197   .rodata._ZTIN8std_msgs5UInt8E:00000000 _ZTIN8std_msgs5UInt8E
     /tmp/ccvtylgk.s:9194   .rodata._ZTIN8std_msgs5UInt8E:00000000 $d
     /tmp/ccvtylgk.s:9205   .rodata._ZTSN8std_msgs6HeaderE:00000000 _ZTSN8std_msgs6HeaderE
     /tmp/ccvtylgk.s:9212   .rodata._ZTIN8std_msgs6HeaderE:00000000 _ZTIN8std_msgs6HeaderE
     /tmp/ccvtylgk.s:9209   .rodata._ZTIN8std_msgs6HeaderE:00000000 $d
     /tmp/ccvtylgk.s:9220   .rodata._ZTSN13geometry_msgs5PointE:00000000 _ZTSN13geometry_msgs5PointE
     /tmp/ccvtylgk.s:9227   .rodata._ZTIN13geometry_msgs5PointE:00000000 _ZTIN13geometry_msgs5PointE
     /tmp/ccvtylgk.s:9224   .rodata._ZTIN13geometry_msgs5PointE:00000000 $d
     /tmp/ccvtylgk.s:9235   .rodata._ZTSN13geometry_msgs10QuaternionE:00000000 _ZTSN13geometry_msgs10QuaternionE
     /tmp/ccvtylgk.s:9242   .rodata._ZTIN13geometry_msgs10QuaternionE:00000000 _ZTIN13geometry_msgs10QuaternionE
     /tmp/ccvtylgk.s:9239   .rodata._ZTIN13geometry_msgs10QuaternionE:00000000 $d
     /tmp/ccvtylgk.s:9250   .rodata._ZTSN13geometry_msgs4PoseE:00000000 _ZTSN13geometry_msgs4PoseE
     /tmp/ccvtylgk.s:9257   .rodata._ZTIN13geometry_msgs4PoseE:00000000 _ZTIN13geometry_msgs4PoseE
     /tmp/ccvtylgk.s:9254   .rodata._ZTIN13geometry_msgs4PoseE:00000000 $d
     /tmp/ccvtylgk.s:9265   .rodata._ZTSN13geometry_msgs18PoseWithCovarianceE:00000000 _ZTSN13geometry_msgs18PoseWithCovarianceE
     /tmp/ccvtylgk.s:9272   .rodata._ZTIN13geometry_msgs18PoseWithCovarianceE:00000000 _ZTIN13geometry_msgs18PoseWithCovarianceE
     /tmp/ccvtylgk.s:9269   .rodata._ZTIN13geometry_msgs18PoseWithCovarianceE:00000000 $d
     /tmp/ccvtylgk.s:9280   .rodata._ZTSN13geometry_msgs7Vector3E:00000000 _ZTSN13geometry_msgs7Vector3E
     /tmp/ccvtylgk.s:9287   .rodata._ZTIN13geometry_msgs7Vector3E:00000000 _ZTIN13geometry_msgs7Vector3E
     /tmp/ccvtylgk.s:9284   .rodata._ZTIN13geometry_msgs7Vector3E:00000000 $d
     /tmp/ccvtylgk.s:9295   .rodata._ZTSN13geometry_msgs5TwistE:00000000 _ZTSN13geometry_msgs5TwistE
     /tmp/ccvtylgk.s:9302   .rodata._ZTIN13geometry_msgs5TwistE:00000000 _ZTIN13geometry_msgs5TwistE
     /tmp/ccvtylgk.s:9299   .rodata._ZTIN13geometry_msgs5TwistE:00000000 $d
     /tmp/ccvtylgk.s:9310   .rodata._ZTSN13geometry_msgs19TwistWithCovarianceE:00000000 _ZTSN13geometry_msgs19TwistWithCovarianceE
     /tmp/ccvtylgk.s:9317   .rodata._ZTIN13geometry_msgs19TwistWithCovarianceE:00000000 _ZTIN13geometry_msgs19TwistWithCovarianceE
     /tmp/ccvtylgk.s:9314   .rodata._ZTIN13geometry_msgs19TwistWithCovarianceE:00000000 $d
     /tmp/ccvtylgk.s:9325   .rodata._ZTSN8nav_msgs8OdometryE:00000000 _ZTSN8nav_msgs8OdometryE
     /tmp/ccvtylgk.s:9332   .rodata._ZTIN8nav_msgs8OdometryE:00000000 _ZTIN8nav_msgs8OdometryE
     /tmp/ccvtylgk.s:9329   .rodata._ZTIN8nav_msgs8OdometryE:00000000 $d
     /tmp/ccvtylgk.s:9340   .rodata._ZTSN12roberto_msgs10MotorStateE:00000000 _ZTSN12roberto_msgs10MotorStateE
     /tmp/ccvtylgk.s:9347   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 _ZTIN12roberto_msgs10MotorStateE
     /tmp/ccvtylgk.s:9344   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/ccvtylgk.s:9355   .rodata._ZTSN13geometry_msgs9TransformE:00000000 _ZTSN13geometry_msgs9TransformE
     /tmp/ccvtylgk.s:9362   .rodata._ZTIN13geometry_msgs9TransformE:00000000 _ZTIN13geometry_msgs9TransformE
     /tmp/ccvtylgk.s:9359   .rodata._ZTIN13geometry_msgs9TransformE:00000000 $d
     /tmp/ccvtylgk.s:9370   .rodata._ZTSN13geometry_msgs16TransformStampedE:00000000 _ZTSN13geometry_msgs16TransformStampedE
     /tmp/ccvtylgk.s:9377   .rodata._ZTIN13geometry_msgs16TransformStampedE:00000000 _ZTIN13geometry_msgs16TransformStampedE
     /tmp/ccvtylgk.s:9374   .rodata._ZTIN13geometry_msgs16TransformStampedE:00000000 $d
     /tmp/ccvtylgk.s:9385   .rodata._ZTSN2tf9tfMessageE:00000000 _ZTSN2tf9tfMessageE
     /tmp/ccvtylgk.s:9392   .rodata._ZTIN2tf9tfMessageE:00000000 _ZTIN2tf9tfMessageE
     /tmp/ccvtylgk.s:9389   .rodata._ZTIN2tf9tfMessageE:00000000 $d
     /tmp/ccvtylgk.s:9400   .rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/ccvtylgk.s:9408   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/ccvtylgk.s:9405   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 $d
     /tmp/ccvtylgk.s:9416   .rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccvtylgk.s:9423   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccvtylgk.s:9420   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/ccvtylgk.s:9431   .rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/ccvtylgk.s:9438   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/ccvtylgk.s:9435   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/ccvtylgk.s:9444   .rodata._ZTVN8std_msgs4TimeE:00000000 $d
     /tmp/ccvtylgk.s:9456   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/ccvtylgk.s:9468   .rodata._ZTVN14rosserial_msgs3LogE:00000000 $d
     /tmp/ccvtylgk.s:9480   .rodata._ZTVN14rosserial_msgs19RequestParamRequestE:00000000 $d
     /tmp/ccvtylgk.s:9492   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/ccvtylgk.s:9504   .rodata._ZTVN8std_msgs5UInt8E:00000000 $d
     /tmp/ccvtylgk.s:9516   .rodata._ZTVN8std_msgs6HeaderE:00000000 $d
     /tmp/ccvtylgk.s:9528   .rodata._ZTVN13geometry_msgs5PointE:00000000 $d
     /tmp/ccvtylgk.s:9540   .rodata._ZTVN13geometry_msgs10QuaternionE:00000000 $d
     /tmp/ccvtylgk.s:9552   .rodata._ZTVN13geometry_msgs4PoseE:00000000 $d
     /tmp/ccvtylgk.s:9564   .rodata._ZTVN13geometry_msgs18PoseWithCovarianceE:00000000 $d
     /tmp/ccvtylgk.s:9576   .rodata._ZTVN13geometry_msgs7Vector3E:00000000 $d
     /tmp/ccvtylgk.s:9588   .rodata._ZTVN13geometry_msgs5TwistE:00000000 $d
     /tmp/ccvtylgk.s:9600   .rodata._ZTVN13geometry_msgs19TwistWithCovarianceE:00000000 $d
     /tmp/ccvtylgk.s:9612   .rodata._ZTVN8nav_msgs8OdometryE:00000000 $d
     /tmp/ccvtylgk.s:9624   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/ccvtylgk.s:9636   .rodata._ZTVN13geometry_msgs9TransformE:00000000 $d
     /tmp/ccvtylgk.s:9648   .rodata._ZTVN13geometry_msgs16TransformStampedE:00000000 $d
     /tmp/ccvtylgk.s:9660   .rodata._ZTVN2tf9tfMessageE:00000000 $d
     /tmp/ccvtylgk.s:9672   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 $d
     /tmp/ccvtylgk.s:9683   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/ccvtylgk.s:9695   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/ccvtylgk.s:9922   .bss:000009bc odom_pub
     /tmp/ccvtylgk.s:9954   .bss:00000a8c odom
     /tmp/ccvtylgk.s:9926   .bss:000009d0 odom_broadcaster
     /tmp/ccvtylgk.s:9950   .bss:00000a48 odom_trans
     /tmp/ccvtylgk.s:9918   .bss:000009a0 led_sub
     /tmp/ccvtylgk.s:9914   .bss:00000960 motor_sub
     /tmp/ccvtylgk.s:9872   .bss:00000005 waitForServos
     /tmp/ccvtylgk.s:9905   .bss:0000042c shuttingDown
     /tmp/ccvtylgk.s:9910   .bss:00000430 nh
     /tmp/ccvtylgk.s:9864   .bss:00000000 lastMsg
     /tmp/ccvtylgk.s:9868   .bss:00000004 currentMode
     /tmp/ccvtylgk.s:9881   .bss:0000000c motorCmd
     /tmp/ccvtylgk.s:9877   .bss:00000008 L
     /tmp/ccvtylgk.s:9930   .bss:00000a34 d
     /tmp/ccvtylgk.s:9942   .bss:00000a40 rear_left
     /tmp/ccvtylgk.s:9946   .bss:00000a44 rear_right
     /tmp/ccvtylgk.s:9934   .bss:00000a38 front_left
     /tmp/ccvtylgk.s:9938   .bss:00000a3c front_right
     /tmp/ccvtylgk.s:9889   .bss:00000020 servo_right
     /tmp/ccvtylgk.s:9885   .bss:0000001c servo_left
     /tmp/ccvtylgk.s:9958   .bss:00000c1c GenerateStartStatus
     /tmp/ccvtylgk.s:9962   .bss:00000c1d NumberOfByteToReceive
     /tmp/ccvtylgk.s:9966   .bss:00000c1e RxBuffer
     /tmp/ccvtylgk.s:9970   .bss:00000c25 slaveAddress
     /tmp/ccvtylgk.s:9974   .bss:00000c26 Rx_Idx
     /tmp/ccvtylgk.s:9893   .bss:00000024 USART_CNTOUT
     /tmp/ccvtylgk.s:9897   .bss:00000028 USART_CNTIN
     /tmp/ccvtylgk.s:9901   .bss:0000002c USART_FIFO
     /tmp/ccvtylgk.s:9737   .rodata:00000000 _ZN14rosserial_msgsL12REQUESTPARAME
     /tmp/ccvtylgk.s:9860   .bss:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 _ZN13geometry_msgs16TransformStampedC5Ev

UNDEFINED SYMBOLS
__aeabi_unwind_cpp_pr0
led_set
__aeabi_fcmpeq
__aeabi_fmul
__aeabi_fadd
__aeabi_fdiv
__aeabi_f2d
__aeabi_d2f
__aeabi_fsub
__aeabi_fcmpgt
__aeabi_fcmplt
millis
atan
strlen
memcpy
realloc
RCC_APB2PeriphClockCmd
GPIO_Init
USART_Cmd
USART_Init
USART_ITConfig
USART_GetITStatus
USART_ReceiveData
EXTI_GetITStatus
EXTI_ClearITPendingBit
__aeabi_unwind_cpp_pr1
USART_SendData
_ZN3ros16normalizeSecNSecERmS0_
__aeabi_dmul
__aeabi_dadd
__aeabi_i2d
__aeabi_ddiv
__aeabi_ui2f
__aeabi_f2iz
__aeabi_dsub
__aeabi_f2uiz
__aeabi_dcmpge
__aeabi_dcmple
RCC_Configuration
GPIO_PinRemapConfig
I2C1_Init
SysTick_Init
DEBUG_Init
SHUTDOWN_Init
LED_Init
delay
_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
_ZN13motorSettings12setRegulatorEffff
_ZN5motor11createMotorEP13motorSettings
sprintf
sqrt
memset
debug_toggle
sin
cos
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
