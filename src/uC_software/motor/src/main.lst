   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  20              		.align	1
  21              		.weak	_ZNK8std_msgs4Time9serializeEPh
  22              		.thumb
  23              		.thumb_func
  25              	_ZNK8std_msgs4Time9serializeEPh:
  26              		.fnstart
  27              	.LFB1046:
  28              		.file 1 "./lib/ros_lib/std_msgs/Time.h"
   1:./lib/ros_lib/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:./lib/ros_lib/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:./lib/ros_lib/std_msgs/Time.h **** 
   4:./lib/ros_lib/std_msgs/Time.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Time.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Time.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Time.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Time.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Time.h **** 
  10:./lib/ros_lib/std_msgs/Time.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Time.h **** {
  12:./lib/ros_lib/std_msgs/Time.h **** 
  13:./lib/ros_lib/std_msgs/Time.h ****   class Time : public ros::Msg
  14:./lib/ros_lib/std_msgs/Time.h ****   {
  15:./lib/ros_lib/std_msgs/Time.h ****     public:
  16:./lib/ros_lib/std_msgs/Time.h ****       ros::Time data;
  17:./lib/ros_lib/std_msgs/Time.h **** 
  18:./lib/ros_lib/std_msgs/Time.h ****     Time():
  19:./lib/ros_lib/std_msgs/Time.h ****       data()
  20:./lib/ros_lib/std_msgs/Time.h ****     {
  21:./lib/ros_lib/std_msgs/Time.h ****     }
  22:./lib/ros_lib/std_msgs/Time.h **** 
  23:./lib/ros_lib/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  29              		.loc 1 23 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  24:./lib/ros_lib/std_msgs/Time.h ****     {
  25:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  26:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  35              		.loc 1 26 0
  36 0000 4368     		ldr	r3, [r0, #4]
  37 0002 0B70     		strb	r3, [r1]
  27:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  38              		.loc 1 27 0
  39 0004 4368     		ldr	r3, [r0, #4]
  40 0006 1B0A     		lsrs	r3, r3, #8
  41 0008 4B70     		strb	r3, [r1, #1]
  28:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  42              		.loc 1 28 0
  43 000a C388     		ldrh	r3, [r0, #6]
  44 000c 8B70     		strb	r3, [r1, #2]
  29:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  45              		.loc 1 29 0
  46 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  47 0010 CB70     		strb	r3, [r1, #3]
  48              	.LVL1:
  30:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  31:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  49              		.loc 1 31 0
  50 0012 8368     		ldr	r3, [r0, #8]
  51 0014 0B71     		strb	r3, [r1, #4]
  32:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  52              		.loc 1 32 0
  53 0016 8368     		ldr	r3, [r0, #8]
  54 0018 1B0A     		lsrs	r3, r3, #8
  55 001a 4B71     		strb	r3, [r1, #5]
  33:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  56              		.loc 1 33 0
  57 001c 4389     		ldrh	r3, [r0, #10]
  58 001e 8B71     		strb	r3, [r1, #6]
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  59              		.loc 1 34 0
  60 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  35:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  36:./lib/ros_lib/std_msgs/Time.h ****       return offset;
  37:./lib/ros_lib/std_msgs/Time.h ****     }
  61              		.loc 1 37 0
  62 0022 0820     		movs	r0, #8
  63              	.LVL2:
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  64              		.loc 1 34 0
  65 0024 CB71     		strb	r3, [r1, #7]
  66              	.LVL3:
  67              		.loc 1 37 0
  68 0026 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE1046:
  71              		.cantunwind
  72              		.fnend
  74              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  75              		.align	1
  76              		.weak	_ZN8std_msgs4Time11deserializeEPh
  77              		.thumb
  78              		.thumb_func
  80              	_ZN8std_msgs4Time11deserializeEPh:
  81              		.fnstart
  82              	.LFB1047:
  38:./lib/ros_lib/std_msgs/Time.h **** 
  39:./lib/ros_lib/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  83              		.loc 1 39 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL4:
  40:./lib/ros_lib/std_msgs/Time.h ****     {
  41:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  42:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  89              		.loc 1 42 0
  90 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  91 0002 4360     		str	r3, [r0, #4]
  43:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  92              		.loc 1 43 0
  93 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  94 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  95 000a 4360     		str	r3, [r0, #4]
  44:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  96              		.loc 1 44 0
  97 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  98 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  99 0012 4360     		str	r3, [r0, #4]
  45:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 100              		.loc 1 45 0
 101 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 102 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 103 001a 4360     		str	r3, [r0, #4]
 104              	.LVL5:
  46:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  47:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 105              		.loc 1 47 0
 106 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 107 001e 8360     		str	r3, [r0, #8]
  48:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 108              		.loc 1 48 0
 109 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 110 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 111 0026 8360     		str	r3, [r0, #8]
  49:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 112              		.loc 1 49 0
 113 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 114 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 115 002e 8360     		str	r3, [r0, #8]
  50:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 116              		.loc 1 50 0
 117 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 118 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 119 0036 8360     		str	r3, [r0, #8]
 120              	.LVL6:
  51:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  52:./lib/ros_lib/std_msgs/Time.h ****      return offset;
  53:./lib/ros_lib/std_msgs/Time.h ****     }
 121              		.loc 1 53 0
 122 0038 0820     		movs	r0, #8
 123              	.LVL7:
 124 003a 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE1047:
 127              		.cantunwind
 128              		.fnend
 130              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 131              		.align	1
 132              		.weak	_ZN8std_msgs4Time7getTypeEv
 133              		.thumb
 134              		.thumb_func
 136              	_ZN8std_msgs4Time7getTypeEv:
 137              		.fnstart
 138              	.LFB1048:
  54:./lib/ros_lib/std_msgs/Time.h **** 
  55:./lib/ros_lib/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 139              		.loc 1 55 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144              	.LVL8:
 145              		.loc 1 55 0
 146 0000 0048     		ldr	r0, .L4
 147              	.LVL9:
 148 0002 7047     		bx	lr
 149              	.L5:
 150              		.align	2
 151              	.L4:
 152 0004 00000000 		.word	.LC2
 153              		.cfi_endproc
 154              	.LFE1048:
 155              		.cantunwind
 156              		.fnend
 158              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 159              		.align	1
 160              		.weak	_ZN8std_msgs4Time6getMD5Ev
 161              		.thumb
 162              		.thumb_func
 164              	_ZN8std_msgs4Time6getMD5Ev:
 165              		.fnstart
 166              	.LFB1049:
  56:./lib/ros_lib/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 167              		.loc 1 56 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL10:
 173              		.loc 1 56 0
 174 0000 0048     		ldr	r0, .L7
 175              	.LVL11:
 176 0002 7047     		bx	lr
 177              	.L8:
 178              		.align	2
 179              	.L7:
 180 0004 0E000000 		.word	.LC3
 181              		.cfi_endproc
 182              	.LFE1049:
 183              		.cantunwind
 184              		.fnend
 186              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 187              		.align	1
 188              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 189              		.thumb
 190              		.thumb_func
 192              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 193              		.fnstart
 194              	.LFB1055:
 195              		.file 2 "./lib/ros_lib/rosserial_msgs/TopicInfo.h"
   1:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   4:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   9:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** {
  11:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  12:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   {
  14:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  29:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     TopicInfo():
  30:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_id(0),
  31:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_name(""),
  32:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       message_type(""),
  33:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       md5sum(""),
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       buffer_size(0)
  35:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  36:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  37:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  39:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  40:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  43:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  46:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  51:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  56:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  59:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
  60:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
  61:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  62:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  68:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  69:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       return offset;
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  71:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
  73:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  74:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
  77:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  78:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
  80:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  83:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
  86:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  87:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
  89:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  92:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
  95:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  96:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
  98:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 101:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 104:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 105:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 106:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
 107:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
 108:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 109:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 110:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 111:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 112:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 113:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 115:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 116:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****      return offset;
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
 118:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 119:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 196              		.loc 2 119 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL12:
 202              		.loc 2 119 0
 203 0000 0048     		ldr	r0, .L10
 204              	.LVL13:
 205 0002 7047     		bx	lr
 206              	.L11:
 207              		.align	2
 208              	.L10:
 209 0004 2F000000 		.word	.LC4
 210              		.cfi_endproc
 211              	.LFE1055:
 212              		.cantunwind
 213              		.fnend
 215              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 216              		.align	1
 217              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 218              		.thumb
 219              		.thumb_func
 221              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 222              		.fnstart
 223              	.LFB1056:
 120:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 224              		.loc 2 120 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL14:
 230              		.loc 2 120 0
 231 0000 0048     		ldr	r0, .L13
 232              	.LVL15:
 233 0002 7047     		bx	lr
 234              	.L14:
 235              		.align	2
 236              	.L13:
 237 0004 48000000 		.word	.LC5
 238              		.cfi_endproc
 239              	.LFE1056:
 240              		.cantunwind
 241              		.fnend
 243              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 244              		.align	1
 245              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 246              		.thumb
 247              		.thumb_func
 249              	_ZN14rosserial_msgs3Log7getTypeEv:
 250              		.fnstart
 251              	.LFB1062:
 252              		.file 3 "./lib/ros_lib/rosserial_msgs/Log.h"
   1:./lib/ros_lib/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:./lib/ros_lib/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:./lib/ros_lib/rosserial_msgs/Log.h **** 
   4:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/Log.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/Log.h **** 
   9:./lib/ros_lib/rosserial_msgs/Log.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/Log.h **** {
  11:./lib/ros_lib/rosserial_msgs/Log.h **** 
  12:./lib/ros_lib/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/Log.h ****   {
  14:./lib/ros_lib/rosserial_msgs/Log.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/Log.h ****       uint8_t level;
  16:./lib/ros_lib/rosserial_msgs/Log.h ****       const char* msg;
  17:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  18:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  19:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  20:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  21:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  22:./lib/ros_lib/rosserial_msgs/Log.h **** 
  23:./lib/ros_lib/rosserial_msgs/Log.h ****     Log():
  24:./lib/ros_lib/rosserial_msgs/Log.h ****       level(0),
  25:./lib/ros_lib/rosserial_msgs/Log.h ****       msg("")
  26:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  27:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  28:./lib/ros_lib/rosserial_msgs/Log.h **** 
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  31:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  33:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  36:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  38:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  39:./lib/ros_lib/rosserial_msgs/Log.h ****       return offset;
  40:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  41:./lib/ros_lib/rosserial_msgs/Log.h **** 
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
  43:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  44:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
  46:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  47:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg;
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
  49:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  50:./lib/ros_lib/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
  51:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
  52:./lib/ros_lib/rosserial_msgs/Log.h ****       }
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
  55:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  56:./lib/ros_lib/rosserial_msgs/Log.h ****      return offset;
  57:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  58:./lib/ros_lib/rosserial_msgs/Log.h **** 
  59:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 253              		.loc 3 59 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL16:
 259              		.loc 3 59 0
 260 0000 0048     		ldr	r0, .L16
 261              	.LVL17:
 262 0002 7047     		bx	lr
 263              	.L17:
 264              		.align	2
 265              	.L16:
 266 0004 69000000 		.word	.LC6
 267              		.cfi_endproc
 268              	.LFE1062:
 269              		.cantunwind
 270              		.fnend
 272              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 273              		.align	1
 274              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 275              		.thumb
 276              		.thumb_func
 278              	_ZN14rosserial_msgs3Log6getMD5Ev:
 279              		.fnstart
 280              	.LFB1063:
  60:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 281              		.loc 3 60 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL18:
 287              		.loc 3 60 0
 288 0000 0048     		ldr	r0, .L19
 289              	.LVL19:
 290 0002 7047     		bx	lr
 291              	.L20:
 292              		.align	2
 293              	.L19:
 294 0004 7C000000 		.word	.LC7
 295              		.cfi_endproc
 296              	.LFE1063:
 297              		.cantunwind
 298              		.fnend
 300              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 301              		.align	1
 302              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 303              		.thumb
 304              		.thumb_func
 306              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 307              		.fnstart
 308              	.LFB1076:
 309              		.file 4 "./lib/ros_lib/rosserial_msgs/RequestParam.h"
   1:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   4:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <string.h>
   5:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   6:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   7:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
   8:./lib/ros_lib/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
   9:./lib/ros_lib/rosserial_msgs/RequestParam.h **** {
  10:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  11:./lib/ros_lib/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  12:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  13:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  14:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  15:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  16:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       const char* name;
  17:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  18:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamRequest():
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       name("")
  20:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  21:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  22:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  24:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  25:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  28:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  30:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  31:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  33:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  35:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  36:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  37:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  39:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  42:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  45:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  46:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  48:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  49:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
  50:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  51:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  52:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   };
  53:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  54:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  55:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  56:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  57:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  58:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  59:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  60:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  61:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float st_floats;
  62:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float * floats;
  63:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  64:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* st_strings;
  65:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* * strings;
  66:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  67:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamResponse():
  68:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length(0), ints(NULL),
  69:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length(0), floats(NULL),
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length(0), strings(NULL)
  71:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  72:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  73:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  75:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  76:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  82:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  83:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
  84:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
  85:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_intsi;
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  91:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  92:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  98:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  99:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 100:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 101:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_floatsi;
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 107:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 108:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 116:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 119:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 120:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 122:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 124:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 125:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 129:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 132:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 133:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
 134:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 135:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 136:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 137:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 138:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 139:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 140:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 142:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 144:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 148:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 151:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 152:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 153:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 154:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 155:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 156:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 157:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 158:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 161:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 163:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 170:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 172:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 175:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 178:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 180:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 181:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 183:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 184:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 310              		.loc 4 184 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL20:
 316              		.loc 4 184 0
 317 0000 0048     		ldr	r0, .L22
 318              	.LVL21:
 319 0002 7047     		bx	lr
 320              	.L23:
 321              		.align	2
 322              	.L22:
 323 0004 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE1076:
 326              		.cantunwind
 327              		.fnend
 329              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 330              		.align	1
 331              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 332              		.thumb
 333              		.thumb_func
 335              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 336              		.fnstart
 337              	.LFB1077:
 185:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 338              		.loc 4 185 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343              	.LVL22:
 344              		.loc 4 185 0
 345 0000 0048     		ldr	r0, .L25
 346              	.LVL23:
 347 0002 7047     		bx	lr
 348              	.L26:
 349              		.align	2
 350              	.L25:
 351 0004 9D000000 		.word	.LC8
 352              		.cfi_endproc
 353              	.LFE1077:
 354              		.cantunwind
 355              		.fnend
 357              		.section	.text._ZN8std_msgs19MultiArrayDimension7getTypeEv,"axG",%progbits,_ZN8std_msgs19MultiArra
 358              		.align	1
 359              		.weak	_ZN8std_msgs19MultiArrayDimension7getTypeEv
 360              		.thumb
 361              		.thumb_func
 363              	_ZN8std_msgs19MultiArrayDimension7getTypeEv:
 364              		.fnstart
 365              	.LFB1146:
 366              		.file 5 "./lib/ros_lib/std_msgs/MultiArrayDimension.h"
   1:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #ifndef _ROS_std_msgs_MultiArrayDimension_h
   2:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #define _ROS_std_msgs_MultiArrayDimension_h
   3:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
   4:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
   9:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** {
  11:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  12:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****   class MultiArrayDimension : public ros::Msg
  13:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****   {
  14:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     public:
  15:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       const char* label;
  16:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t size;
  17:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t stride;
  18:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  19:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     MultiArrayDimension():
  20:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       label(""),
  21:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       size(0),
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       stride(0)
  23:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  24:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  25:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     virtual int serialize(unsigned char *outbuffer) const
  27:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  28:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       int offset = 0;
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t length_label = strlen(this->label);
  30:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
  31:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
  32:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, this->label, length_label);
  33:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
  34:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 0) = (this->size >> (8 * 0)) & 0xFF;
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->size >> (8 * 1)) & 0xFF;
  36:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
  37:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->size >> (8 * 3)) & 0xFF;
  38:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
  39:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 0) = (this->stride >> (8 * 0)) & 0xFF;
  40:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->stride >> (8 * 1)) & 0xFF;
  41:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->stride >> (8 * 2)) & 0xFF;
  42:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->stride >> (8 * 3)) & 0xFF;
  43:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
  44:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       return offset;
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  46:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     virtual int deserialize(unsigned char *inbuffer)
  48:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  49:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       int offset = 0;
  50:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t length_label;
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(&length_label, (inbuffer + offset), sizeof(uint32_t));
  52:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       for(unsigned int k= offset; k< offset+length_label; ++k){
  54:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
  55:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       }
  56:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       inbuffer[offset+length_label-1]=0;
  57:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->label = (char *)(inbuffer + offset-1);
  58:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size =  ((uint32_t) (*(inbuffer + offset)));
  60:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  61:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  62:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  63:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
  64:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride =  ((uint32_t) (*(inbuffer + offset)));
  65:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  66:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  67:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  68:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
  69:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****      return offset;
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  71:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  72:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     const char * getType(){ return "std_msgs/MultiArrayDimension"; };
 367              		.loc 5 72 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372              	.LVL24:
 373              		.loc 5 72 0
 374 0000 0048     		ldr	r0, .L28
 375              	.LVL25:
 376 0002 7047     		bx	lr
 377              	.L29:
 378              		.align	2
 379              	.L28:
 380 0004 BE000000 		.word	.LC9
 381              		.cfi_endproc
 382              	.LFE1146:
 383              		.cantunwind
 384              		.fnend
 386              		.section	.text._ZN8std_msgs19MultiArrayDimension6getMD5Ev,"axG",%progbits,_ZN8std_msgs19MultiArray
 387              		.align	1
 388              		.weak	_ZN8std_msgs19MultiArrayDimension6getMD5Ev
 389              		.thumb
 390              		.thumb_func
 392              	_ZN8std_msgs19MultiArrayDimension6getMD5Ev:
 393              		.fnstart
 394              	.LFB1147:
  73:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     const char * getMD5(){ return "4cd0c83a8683deae40ecdac60e53bfa8"; };
 395              		.loc 5 73 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400              	.LVL26:
 401              		.loc 5 73 0
 402 0000 0048     		ldr	r0, .L31
 403              	.LVL27:
 404 0002 7047     		bx	lr
 405              	.L32:
 406              		.align	2
 407              	.L31:
 408 0004 DB000000 		.word	.LC10
 409              		.cfi_endproc
 410              	.LFE1147:
 411              		.cantunwind
 412              		.fnend
 414              		.section	.text._ZNK8std_msgs16MultiArrayLayout9serializeEPh,"axG",%progbits,_ZNK8std_msgs16MultiAr
 415              		.align	1
 416              		.weak	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 417              		.thumb
 418              		.thumb_func
 420              	_ZNK8std_msgs16MultiArrayLayout9serializeEPh:
 421              		.fnstart
 422              	.LFB1151:
 423              		.file 6 "./lib/ros_lib/std_msgs/MultiArrayLayout.h"
   1:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #ifndef _ROS_std_msgs_MultiArrayLayout_h
   2:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #define _ROS_std_msgs_MultiArrayLayout_h
   3:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
   4:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include "std_msgs/MultiArrayDimension.h"
   9:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  10:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** {
  12:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  13:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****   class MultiArrayLayout : public ros::Msg
  14:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****   {
  15:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     public:
  16:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint8_t dim_length;
  17:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       std_msgs::MultiArrayDimension st_dim;
  18:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       std_msgs::MultiArrayDimension * dim;
  19:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint32_t data_offset;
  20:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  21:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     MultiArrayLayout():
  22:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length(0), dim(NULL),
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       data_offset(0)
  24:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  25:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
  26:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  27:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     virtual int serialize(unsigned char *outbuffer) const
 424              		.loc 6 27 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              	.LVL28:
 429 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 430              		.save {r3, r4, r5, r6, r7, lr}
 431              	.LCFI0:
 432              		.cfi_def_cfa_offset 24
 433              		.cfi_offset 3, -24
 434              		.cfi_offset 4, -20
 435              		.cfi_offset 5, -16
 436              		.cfi_offset 6, -12
 437              		.cfi_offset 7, -8
 438              		.cfi_offset 14, -4
 439              		.loc 6 27 0
 440 0002 0D46     		mov	r5, r1
  28:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  29:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = dim_length;
 441              		.loc 6 30 0
 442 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  27:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 443              		.loc 6 27 0
 444 0006 0446     		mov	r4, r0
  31:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 445              		.loc 6 31 0
 446 0008 0020     		movs	r0, #0
 447              	.LVL29:
  30:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 448              		.loc 6 30 0
 449 000a 0B70     		strb	r3, [r1]
 450              	.LVL30:
 451              		.loc 6 31 0
 452 000c 4870     		strb	r0, [r1, #1]
 453              	.LVL31:
  32:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 454              		.loc 6 32 0
 455 000e 8870     		strb	r0, [r1, #2]
 456              	.LVL32:
  33:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 457              		.loc 6 33 0
 458 0010 C870     		strb	r0, [r1, #3]
 459              	.LVL33:
 460 0012 0426     		movs	r6, #4
 461              	.LVL34:
 462              	.L35:
 463              	.LBB136:
  34:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 464              		.loc 6 34 0 discriminator 3
 465 0014 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 466 0016 471C     		adds	r7, r0, #1
 467 0018 C0B2     		uxtb	r0, r0
 468 001a 8342     		cmp	r3, r0
 469 001c 05EB0601 		add	r1, r5, r6
 470 0020 08D9     		bls	.L34
  35:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->dim[i].serialize(outbuffer + offset);
 471              		.loc 6 35 0 discriminator 2
 472 0022 A369     		ldr	r3, [r4, #24]
 473 0024 0001     		lsls	r0, r0, #4
 474              	.LVL35:
 475 0026 1A58     		ldr	r2, [r3, r0]
 476 0028 1844     		add	r0, r0, r3
 477 002a 1268     		ldr	r2, [r2]
 478 002c 9047     		blx	r2
 479              	.LVL36:
 480 002e 0644     		add	r6, r6, r0
 481              	.LVL37:
  34:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 482              		.loc 6 34 0 discriminator 2
 483 0030 3846     		mov	r0, r7
 484 0032 EFE7     		b	.L35
 485              	.LVL38:
 486              	.L34:
 487              	.LBE136:
  36:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
  37:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 0) = (this->data_offset >> (8 * 0)) & 0xFF;
 488              		.loc 6 37 0
 489 0034 E369     		ldr	r3, [r4, #28]
  38:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
  39:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 2) = (this->data_offset >> (8 * 2)) & 0xFF;
  40:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 3) = (this->data_offset >> (8 * 3)) & 0xFF;
  41:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
  42:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       return offset;
  43:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
 490              		.loc 6 43 0
 491 0036 301D     		adds	r0, r6, #4
 492              	.LVL39:
  37:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
 493              		.loc 6 37 0
 494 0038 AB55     		strb	r3, [r5, r6]
  38:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
 495              		.loc 6 38 0
 496 003a E369     		ldr	r3, [r4, #28]
 497 003c 1B0A     		lsrs	r3, r3, #8
 498 003e 4B70     		strb	r3, [r1, #1]
  39:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 3) = (this->data_offset >> (8 * 3)) & 0xFF;
 499              		.loc 6 39 0
 500 0040 E38B     		ldrh	r3, [r4, #30]
 501 0042 8B70     		strb	r3, [r1, #2]
  40:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
 502              		.loc 6 40 0
 503 0044 E37F     		ldrb	r3, [r4, #31]	@ zero_extendqisi2
 504 0046 CB70     		strb	r3, [r1, #3]
 505              	.LVL40:
 506              		.loc 6 43 0
 507 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 508              		.cfi_endproc
 509              	.LFE1151:
 510              		.fnend
 512              		.section	.text._ZN8std_msgs16MultiArrayLayout7getTypeEv,"axG",%progbits,_ZN8std_msgs16MultiArrayLa
 513              		.align	1
 514              		.weak	_ZN8std_msgs16MultiArrayLayout7getTypeEv
 515              		.thumb
 516              		.thumb_func
 518              	_ZN8std_msgs16MultiArrayLayout7getTypeEv:
 519              		.fnstart
 520              	.LFB1153:
  44:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     virtual int deserialize(unsigned char *inbuffer)
  46:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  47:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       int offset = 0;
  48:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint8_t dim_lengthT = *(inbuffer + offset++);
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       if(dim_lengthT > dim_length)
  50:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
  51:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += 3;
  52:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length = dim_lengthT;
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
  56:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset =  ((uint32_t) (*(inbuffer + offset)));
  58:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  59:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  60:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  61:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
  62:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****      return offset;
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
  64:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  65:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     const char * getType(){ return "std_msgs/MultiArrayLayout"; };
 521              		.loc 6 65 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526              	.LVL41:
 527              		.loc 6 65 0
 528 0000 0048     		ldr	r0, .L38
 529              	.LVL42:
 530 0002 7047     		bx	lr
 531              	.L39:
 532              		.align	2
 533              	.L38:
 534 0004 FC000000 		.word	.LC11
 535              		.cfi_endproc
 536              	.LFE1153:
 537              		.cantunwind
 538              		.fnend
 540              		.section	.text._ZN8std_msgs16MultiArrayLayout6getMD5Ev,"axG",%progbits,_ZN8std_msgs16MultiArrayLay
 541              		.align	1
 542              		.weak	_ZN8std_msgs16MultiArrayLayout6getMD5Ev
 543              		.thumb
 544              		.thumb_func
 546              	_ZN8std_msgs16MultiArrayLayout6getMD5Ev:
 547              		.fnstart
 548              	.LFB1154:
  66:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     const char * getMD5(){ return "0fed2a11c13e11c5571b4e2a995a91a3"; };
 549              		.loc 6 66 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 554              	.LVL43:
 555              		.loc 6 66 0
 556 0000 0048     		ldr	r0, .L41
 557              	.LVL44:
 558 0002 7047     		bx	lr
 559              	.L42:
 560              		.align	2
 561              	.L41:
 562 0004 16010000 		.word	.LC12
 563              		.cfi_endproc
 564              	.LFE1154:
 565              		.cantunwind
 566              		.fnend
 568              		.section	.text._ZNK8std_msgs17Float32MultiArray9serializeEPh,"axG",%progbits,_ZNK8std_msgs17Float3
 569              		.align	1
 570              		.weak	_ZNK8std_msgs17Float32MultiArray9serializeEPh
 571              		.thumb
 572              		.thumb_func
 574              	_ZNK8std_msgs17Float32MultiArray9serializeEPh:
 575              		.fnstart
 576              	.LFB1158:
 577              		.file 7 "./lib/ros_lib/std_msgs/Float32MultiArray.h"
   1:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #ifndef _ROS_std_msgs_Float32MultiArray_h
   2:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #define _ROS_std_msgs_Float32MultiArray_h
   3:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
   4:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include "std_msgs/MultiArrayLayout.h"
   9:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  10:./lib/ros_lib/std_msgs/Float32MultiArray.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Float32MultiArray.h **** {
  12:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  13:./lib/ros_lib/std_msgs/Float32MultiArray.h ****   class Float32MultiArray : public ros::Msg
  14:./lib/ros_lib/std_msgs/Float32MultiArray.h ****   {
  15:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     public:
  16:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       std_msgs::MultiArrayLayout layout;
  17:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_length;
  18:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       float st_data;
  19:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       float * data;
  20:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  21:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     Float32MultiArray():
  22:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       layout(),
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       data_length(0), data(NULL)
  24:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  25:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
  26:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  27:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     virtual int serialize(unsigned char *outbuffer) const
 578              		.loc 7 27 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              	.LVL45:
 583 0000 70B5     		push	{r4, r5, r6, lr}
 584              		.save {r4, r5, r6, lr}
 585              	.LCFI1:
 586              		.cfi_def_cfa_offset 16
 587              		.cfi_offset 4, -16
 588              		.cfi_offset 5, -12
 589              		.cfi_offset 6, -8
 590              		.cfi_offset 14, -4
 591              		.loc 7 27 0
 592 0002 0446     		mov	r4, r0
  28:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  29:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += this->layout.serialize(outbuffer + offset);
 593              		.loc 7 30 0
 594 0004 0430     		adds	r0, r0, #4
 595              	.LVL46:
  27:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 596              		.loc 7 27 0
 597 0006 0D46     		mov	r5, r1
 598              		.loc 7 30 0
 599 0008 FFF7FEFF 		bl	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 600              	.LVL47:
  31:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = data_length;
 601              		.loc 7 31 0
 602 000c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
  32:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 603              		.loc 7 32 0
 604 0010 0022     		movs	r2, #0
  31:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = data_length;
 605              		.loc 7 31 0
 606 0012 2B54     		strb	r3, [r5, r0]
 607              	.LVL48:
 608              		.loc 7 32 0
 609 0014 2B18     		adds	r3, r5, r0
 610 0016 0430     		adds	r0, r0, #4
 611              	.LVL49:
 612 0018 5A70     		strb	r2, [r3, #1]
 613              	.LVL50:
  33:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 614              		.loc 7 33 0
 615 001a 9A70     		strb	r2, [r3, #2]
  34:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 616              		.loc 7 34 0
 617 001c DA70     		strb	r2, [r3, #3]
 618              	.LVL51:
 619 001e 2B18     		adds	r3, r5, r0
 620              	.LVL52:
 621              	.L45:
 622              	.LBB137:
  35:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
 623              		.loc 7 35 0 discriminator 3
 624 0020 94F82460 		ldrb	r6, [r4, #36]	@ zero_extendqisi2
 625 0024 511C     		adds	r1, r2, #1
 626 0026 D2B2     		uxtb	r2, r2
 627 0028 9642     		cmp	r6, r2
 628 002a A3EB0500 		sub	r0, r3, r5
 629              	.LVL53:
 630 002e 03F10403 		add	r3, r3, #4
 631 0032 0FD9     		bls	.L44
 632              	.LBB138:
  36:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
  37:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         float real;
  38:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         uint32_t base;
  39:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       } u_datai;
  40:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_datai.real = this->data[i];
 633              		.loc 7 40 0 discriminator 2
 634 0034 E06A     		ldr	r0, [r4, #44]
 635              	.LVL54:
  41:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 0) = (u_datai.base >> (8 * 0)) & 0xFF;
 636              		.loc 7 41 0 discriminator 2
 637 0036 50F82220 		ldr	r2, [r0, r2, lsl #2]
  42:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 1) = (u_datai.base >> (8 * 1)) & 0xFF;
 638              		.loc 7 42 0 discriminator 2
 639 003a 100A     		lsrs	r0, r2, #8
  41:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 0) = (u_datai.base >> (8 * 0)) & 0xFF;
 640              		.loc 7 41 0 discriminator 2
 641 003c 03F8042C 		strb	r2, [r3, #-4]
 642              		.loc 7 42 0 discriminator 2
 643 0040 03F8030C 		strb	r0, [r3, #-3]
  43:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 2) = (u_datai.base >> (8 * 2)) & 0xFF;
 644              		.loc 7 43 0 discriminator 2
 645 0044 100C     		lsrs	r0, r2, #16
  44:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 3) = (u_datai.base >> (8 * 3)) & 0xFF;
 646              		.loc 7 44 0 discriminator 2
 647 0046 120E     		lsrs	r2, r2, #24
 648 0048 03F8012C 		strb	r2, [r3, #-1]
 649              	.LVL55:
  43:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 2) = (u_datai.base >> (8 * 2)) & 0xFF;
 650              		.loc 7 43 0 discriminator 2
 651 004c 03F8020C 		strb	r0, [r3, #-2]
 652              	.LBE138:
  35:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 653              		.loc 7 35 0 discriminator 2
 654 0050 0A46     		mov	r2, r1
 655 0052 E5E7     		b	.L45
 656              	.LVL56:
 657              	.L44:
 658              	.LBE137:
  45:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->data[i]);
  46:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
  47:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       return offset;
  48:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
 659              		.loc 7 48 0
 660 0054 70BD     		pop	{r4, r5, r6, pc}
 661              		.cfi_endproc
 662              	.LFE1158:
 663              		.fnend
 665              		.section	.text._ZN8std_msgs17Float32MultiArray7getTypeEv,"axG",%progbits,_ZN8std_msgs17Float32Mult
 666              		.align	1
 667              		.weak	_ZN8std_msgs17Float32MultiArray7getTypeEv
 668              		.thumb
 669              		.thumb_func
 671              	_ZN8std_msgs17Float32MultiArray7getTypeEv:
 672              		.fnstart
 673              	.LFB1160:
  49:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  52:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       int offset = 0;
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += this->layout.deserialize(inbuffer + offset);
  54:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       if(data_lengthT > data_length)
  56:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
  57:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += 3;
  58:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       data_length = data_lengthT;
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
  60:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
  61:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         float real;
  62:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         uint32_t base;
  63:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       } u_st_data;
  64:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base = 0;
  65:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
  66:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  67:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  68:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  69:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       this->st_data = u_st_data.real;
  70:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->st_data);
  71:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         memcpy( &(this->data[i]), &(this->st_data), sizeof(float));
  72:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
  73:./lib/ros_lib/std_msgs/Float32MultiArray.h ****      return offset;
  74:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
  75:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  76:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     const char * getType(){ return "std_msgs/Float32MultiArray"; };
 674              		.loc 7 76 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		@ link register save eliminated.
 679              	.LVL57:
 680              		.loc 7 76 0
 681 0000 0048     		ldr	r0, .L47
 682              	.LVL58:
 683 0002 7047     		bx	lr
 684              	.L48:
 685              		.align	2
 686              	.L47:
 687 0004 37010000 		.word	.LC13
 688              		.cfi_endproc
 689              	.LFE1160:
 690              		.cantunwind
 691              		.fnend
 693              		.section	.text._ZN8std_msgs17Float32MultiArray6getMD5Ev,"axG",%progbits,_ZN8std_msgs17Float32Multi
 694              		.align	1
 695              		.weak	_ZN8std_msgs17Float32MultiArray6getMD5Ev
 696              		.thumb
 697              		.thumb_func
 699              	_ZN8std_msgs17Float32MultiArray6getMD5Ev:
 700              		.fnstart
 701              	.LFB1161:
  77:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     const char * getMD5(){ return "6a40e0ffa6a17a503ac3f8616991b1f6"; };
 702              		.loc 7 77 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707              	.LVL59:
 708              		.loc 7 77 0
 709 0000 0048     		ldr	r0, .L50
 710              	.LVL60:
 711 0002 7047     		bx	lr
 712              	.L51:
 713              		.align	2
 714              	.L50:
 715 0004 52010000 		.word	.LC14
 716              		.cfi_endproc
 717              	.LFE1161:
 718              		.cantunwind
 719              		.fnend
 721              		.section	.text._ZN8std_msgs6Header7getTypeEv,"axG",%progbits,_ZN8std_msgs6Header7getTypeEv,comdat
 722              		.align	1
 723              		.weak	_ZN8std_msgs6Header7getTypeEv
 724              		.thumb
 725              		.thumb_func
 727              	_ZN8std_msgs6Header7getTypeEv:
 728              		.fnstart
 729              	.LFB1181:
 730              		.file 8 "./lib/ros_lib/std_msgs/Header.h"
   1:./lib/ros_lib/std_msgs/Header.h **** #ifndef _ROS_std_msgs_Header_h
   2:./lib/ros_lib/std_msgs/Header.h **** #define _ROS_std_msgs_Header_h
   3:./lib/ros_lib/std_msgs/Header.h **** 
   4:./lib/ros_lib/std_msgs/Header.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Header.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Header.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Header.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Header.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Header.h **** 
  10:./lib/ros_lib/std_msgs/Header.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Header.h **** {
  12:./lib/ros_lib/std_msgs/Header.h **** 
  13:./lib/ros_lib/std_msgs/Header.h ****   class Header : public ros::Msg
  14:./lib/ros_lib/std_msgs/Header.h ****   {
  15:./lib/ros_lib/std_msgs/Header.h ****     public:
  16:./lib/ros_lib/std_msgs/Header.h ****       uint32_t seq;
  17:./lib/ros_lib/std_msgs/Header.h ****       ros::Time stamp;
  18:./lib/ros_lib/std_msgs/Header.h ****       const char* frame_id;
  19:./lib/ros_lib/std_msgs/Header.h **** 
  20:./lib/ros_lib/std_msgs/Header.h ****     Header():
  21:./lib/ros_lib/std_msgs/Header.h ****       seq(0),
  22:./lib/ros_lib/std_msgs/Header.h ****       stamp(),
  23:./lib/ros_lib/std_msgs/Header.h ****       frame_id("")
  24:./lib/ros_lib/std_msgs/Header.h ****     {
  25:./lib/ros_lib/std_msgs/Header.h ****     }
  26:./lib/ros_lib/std_msgs/Header.h **** 
  27:./lib/ros_lib/std_msgs/Header.h ****     virtual int serialize(unsigned char *outbuffer) const
  28:./lib/ros_lib/std_msgs/Header.h ****     {
  29:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->seq >> (8 * 0)) & 0xFF;
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
  33:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
  34:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
  38:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
  39:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
  43:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
  44:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  45:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id = strlen(this->frame_id);
  46:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
  47:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  48:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, this->frame_id, length_frame_id);
  49:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  50:./lib/ros_lib/std_msgs/Header.h ****       return offset;
  51:./lib/ros_lib/std_msgs/Header.h ****     }
  52:./lib/ros_lib/std_msgs/Header.h **** 
  53:./lib/ros_lib/std_msgs/Header.h ****     virtual int deserialize(unsigned char *inbuffer)
  54:./lib/ros_lib/std_msgs/Header.h ****     {
  55:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq =  ((uint32_t) (*(inbuffer + offset)));
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  59:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  60:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  64:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  65:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  69:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  70:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  71:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id;
  72:./lib/ros_lib/std_msgs/Header.h ****       memcpy(&length_frame_id, (inbuffer + offset), sizeof(uint32_t));
  73:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  74:./lib/ros_lib/std_msgs/Header.h ****       for(unsigned int k= offset; k< offset+length_frame_id; ++k){
  75:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
  76:./lib/ros_lib/std_msgs/Header.h ****       }
  77:./lib/ros_lib/std_msgs/Header.h ****       inbuffer[offset+length_frame_id-1]=0;
  78:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
  79:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  80:./lib/ros_lib/std_msgs/Header.h ****      return offset;
  81:./lib/ros_lib/std_msgs/Header.h ****     }
  82:./lib/ros_lib/std_msgs/Header.h **** 
  83:./lib/ros_lib/std_msgs/Header.h ****     const char * getType(){ return "std_msgs/Header"; };
 731              		.loc 8 83 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              		@ link register save eliminated.
 736              	.LVL61:
 737              		.loc 8 83 0
 738 0000 0048     		ldr	r0, .L53
 739              	.LVL62:
 740 0002 7047     		bx	lr
 741              	.L54:
 742              		.align	2
 743              	.L53:
 744 0004 73010000 		.word	.LC15
 745              		.cfi_endproc
 746              	.LFE1181:
 747              		.cantunwind
 748              		.fnend
 750              		.section	.text._ZN8std_msgs6Header6getMD5Ev,"axG",%progbits,_ZN8std_msgs6Header6getMD5Ev,comdat
 751              		.align	1
 752              		.weak	_ZN8std_msgs6Header6getMD5Ev
 753              		.thumb
 754              		.thumb_func
 756              	_ZN8std_msgs6Header6getMD5Ev:
 757              		.fnstart
 758              	.LFB1182:
  84:./lib/ros_lib/std_msgs/Header.h ****     const char * getMD5(){ return "2176decaecbce78abc3b96ef049fabed"; };
 759              		.loc 8 84 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 0
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763              		@ link register save eliminated.
 764              	.LVL63:
 765              		.loc 8 84 0
 766 0000 0048     		ldr	r0, .L56
 767              	.LVL64:
 768 0002 7047     		bx	lr
 769              	.L57:
 770              		.align	2
 771              	.L56:
 772 0004 83010000 		.word	.LC16
 773              		.cfi_endproc
 774              	.LFE1182:
 775              		.cantunwind
 776              		.fnend
 778              		.section	.text._ZN12roberto_msgs10MotorState7getTypeEv,"axG",%progbits,_ZN12roberto_msgs10MotorSta
 779              		.align	1
 780              		.weak	_ZN12roberto_msgs10MotorState7getTypeEv
 781              		.thumb
 782              		.thumb_func
 784              	_ZN12roberto_msgs10MotorState7getTypeEv:
 785              		.fnstart
 786              	.LFB1251:
 787              		.file 9 "./lib/ros_lib/roberto_msgs/MotorState.h"
   1:./lib/ros_lib/roberto_msgs/MotorState.h **** #ifndef _ROS_roberto_msgs_MotorState_h
   2:./lib/ros_lib/roberto_msgs/MotorState.h **** #define _ROS_roberto_msgs_MotorState_h
   3:./lib/ros_lib/roberto_msgs/MotorState.h **** 
   4:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdint.h>
   5:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <string.h>
   6:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdlib.h>
   7:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "ros/msg.h"
   8:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "std_msgs/Header.h"
   9:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  10:./lib/ros_lib/roberto_msgs/MotorState.h **** namespace roberto_msgs
  11:./lib/ros_lib/roberto_msgs/MotorState.h **** {
  12:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  13:./lib/ros_lib/roberto_msgs/MotorState.h ****   class MotorState : public ros::Msg
  14:./lib/ros_lib/roberto_msgs/MotorState.h ****   {
  15:./lib/ros_lib/roberto_msgs/MotorState.h ****     public:
  16:./lib/ros_lib/roberto_msgs/MotorState.h ****       std_msgs::Header header;
  17:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_angle;
  18:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_velocity;
  19:./lib/ros_lib/roberto_msgs/MotorState.h ****       float speed;
  20:./lib/ros_lib/roberto_msgs/MotorState.h ****       float acceleration;
  21:./lib/ros_lib/roberto_msgs/MotorState.h ****       uint8_t mode;
  22:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_AUTO = 0 };
  23:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_PIVOT = 1 };
  24:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SPIN = 2 };
  25:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SIDEWAYS = 3 };
  26:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  27:./lib/ros_lib/roberto_msgs/MotorState.h ****     MotorState():
  28:./lib/ros_lib/roberto_msgs/MotorState.h ****       header(),
  29:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_angle(0),
  30:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_velocity(0),
  31:./lib/ros_lib/roberto_msgs/MotorState.h ****       speed(0),
  32:./lib/ros_lib/roberto_msgs/MotorState.h ****       acceleration(0),
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****       mode(0)
  34:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  35:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  36:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int serialize(unsigned char *outbuffer) const
  38:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  39:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.serialize(outbuffer + offset);
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
  46:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  47:./lib/ros_lib/roberto_msgs/MotorState.h ****       return offset;
  48:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  49:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  52:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.deserialize(inbuffer + offset);
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
  59:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  60:./lib/ros_lib/roberto_msgs/MotorState.h ****      return offset;
  61:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  62:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  63:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getType(){ return "roberto_msgs/MotorState"; };
 788              		.loc 9 63 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792              		@ link register save eliminated.
 793              	.LVL65:
 794              		.loc 9 63 0
 795 0000 0048     		ldr	r0, .L59
 796              	.LVL66:
 797 0002 7047     		bx	lr
 798              	.L60:
 799              		.align	2
 800              	.L59:
 801 0004 A4010000 		.word	.LC17
 802              		.cfi_endproc
 803              	.LFE1251:
 804              		.cantunwind
 805              		.fnend
 807              		.section	.text._ZN12roberto_msgs10MotorState6getMD5Ev,"axG",%progbits,_ZN12roberto_msgs10MotorStat
 808              		.align	1
 809              		.weak	_ZN12roberto_msgs10MotorState6getMD5Ev
 810              		.thumb
 811              		.thumb_func
 813              	_ZN12roberto_msgs10MotorState6getMD5Ev:
 814              		.fnstart
 815              	.LFB1252:
  64:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getMD5(){ return "e8b5d1162b85151c49e02b8224796c0e"; };
 816              		.loc 9 64 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820              		@ link register save eliminated.
 821              	.LVL67:
 822              		.loc 9 64 0
 823 0000 0048     		ldr	r0, .L62
 824              	.LVL68:
 825 0002 7047     		bx	lr
 826              	.L63:
 827              		.align	2
 828              	.L62:
 829 0004 BC010000 		.word	.LC18
 830              		.cfi_endproc
 831              	.LFE1252:
 832              		.cantunwind
 833              		.fnend
 835              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv,"axG",%progbit
 836              		.align	1
 837              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 838              		.thumb
 839              		.thumb_func
 841              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:
 842              		.fnstart
 843              	.LFB1332:
 844              		.file 10 "./lib/ros_lib/ros/subscriber.h"
   1:./lib/ros_lib/ros/subscriber.h **** /* 
   2:./lib/ros_lib/ros/subscriber.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/subscriber.h ****  *
   4:./lib/ros_lib/ros/subscriber.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/subscriber.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/subscriber.h ****  *
   7:./lib/ros_lib/ros/subscriber.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/subscriber.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/subscriber.h ****  * are met:
  10:./lib/ros_lib/ros/subscriber.h ****  *
  11:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/subscriber.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/subscriber.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/subscriber.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/subscriber.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/subscriber.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/subscriber.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/subscriber.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/subscriber.h ****  *
  21:./lib/ros_lib/ros/subscriber.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/subscriber.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/subscriber.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/subscriber.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/subscriber.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/subscriber.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/subscriber.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/subscriber.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/subscriber.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/subscriber.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/subscriber.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/subscriber.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/subscriber.h ****  */
  34:./lib/ros_lib/ros/subscriber.h **** 
  35:./lib/ros_lib/ros/subscriber.h **** #ifndef ROS_SUBSCRIBER_H_
  36:./lib/ros_lib/ros/subscriber.h **** #define ROS_SUBSCRIBER_H_
  37:./lib/ros_lib/ros/subscriber.h **** 
  38:./lib/ros_lib/ros/subscriber.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/subscriber.h **** 
  40:./lib/ros_lib/ros/subscriber.h **** namespace ros {
  41:./lib/ros_lib/ros/subscriber.h **** 
  42:./lib/ros_lib/ros/subscriber.h ****   /* Base class for objects subscribers. */
  43:./lib/ros_lib/ros/subscriber.h ****   class Subscriber_
  44:./lib/ros_lib/ros/subscriber.h ****   {
  45:./lib/ros_lib/ros/subscriber.h ****     public:
  46:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char *data)=0;
  47:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType()=0;
  48:./lib/ros_lib/ros/subscriber.h **** 
  49:./lib/ros_lib/ros/subscriber.h ****       // id_ is set by NodeHandle when we advertise 
  50:./lib/ros_lib/ros/subscriber.h ****       int id_;
  51:./lib/ros_lib/ros/subscriber.h **** 
  52:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType()=0;
  53:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5()=0;
  54:./lib/ros_lib/ros/subscriber.h ****       const char * topic_;
  55:./lib/ros_lib/ros/subscriber.h ****   };
  56:./lib/ros_lib/ros/subscriber.h **** 
  57:./lib/ros_lib/ros/subscriber.h **** 
  58:./lib/ros_lib/ros/subscriber.h ****   /* Actual subscriber, templated on message type. */
  59:./lib/ros_lib/ros/subscriber.h ****   template<typename MsgT>
  60:./lib/ros_lib/ros/subscriber.h ****   class Subscriber: public Subscriber_{
  61:./lib/ros_lib/ros/subscriber.h ****     public:
  62:./lib/ros_lib/ros/subscriber.h ****       typedef void(*CallbackT)(const MsgT&);
  63:./lib/ros_lib/ros/subscriber.h ****       MsgT msg;
  64:./lib/ros_lib/ros/subscriber.h **** 
  65:./lib/ros_lib/ros/subscriber.h ****       Subscriber(const char * topic_name, CallbackT cb, int endpoint=rosserial_msgs::TopicInfo::ID_
  66:./lib/ros_lib/ros/subscriber.h ****         cb_(cb),
  67:./lib/ros_lib/ros/subscriber.h ****         endpoint_(endpoint)
  68:./lib/ros_lib/ros/subscriber.h ****       {
  69:./lib/ros_lib/ros/subscriber.h ****         topic_ = topic_name;
  70:./lib/ros_lib/ros/subscriber.h ****       };
  71:./lib/ros_lib/ros/subscriber.h **** 
  72:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char* data){
  73:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
  74:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
  75:./lib/ros_lib/ros/subscriber.h ****       }
  76:./lib/ros_lib/ros/subscriber.h **** 
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType(){ return this->msg.getType(); }
  78:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
  79:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 845              		.loc 10 79 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              		@ link register save eliminated.
 850              	.LVL69:
 851              		.loc 10 79 0
 852 0000 C06B     		ldr	r0, [r0, #60]
 853              	.LVL70:
 854 0002 7047     		bx	lr
 855              		.cfi_endproc
 856              	.LFE1332:
 857              		.cantunwind
 858              		.fnend
 860              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv,"axG",%progbits,_ZN
 861              		.align	1
 862              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 863              		.thumb
 864              		.thumb_func
 866              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:
 867              		.fnstart
 868              	.LFB1333:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 869              		.loc 10 77 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              		@ link register save eliminated.
 874              	.LVL71:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 875              		.loc 10 77 0
 876 0000 0048     		ldr	r0, .L66
 877              	.LVL72:
 878 0002 7047     		bx	lr
 879              	.L67:
 880              		.align	2
 881              	.L66:
 882 0004 A4010000 		.word	.LC17
 883              		.cfi_endproc
 884              	.LFE1333:
 885              		.cantunwind
 886              		.fnend
 888              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev,"axG",%progbits,_ZN3r
 889              		.align	1
 890              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 891              		.thumb
 892              		.thumb_func
 894              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:
 895              		.fnstart
 896              	.LFB1334:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 897              		.loc 10 78 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901              		@ link register save eliminated.
 902              	.LVL73:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 903              		.loc 10 78 0
 904 0000 0048     		ldr	r0, .L69
 905              	.LVL74:
 906 0002 7047     		bx	lr
 907              	.L70:
 908              		.align	2
 909              	.L69:
 910 0004 BC010000 		.word	.LC18
 911              		.cfi_endproc
 912              	.LFE1334:
 913              		.cantunwind
 914              		.fnend
 916              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv,"axG",%
 917              		.align	1
 918              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv
 919              		.thumb
 920              		.thumb_func
 922              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv:
 923              		.fnstart
 924              	.LFB1335:
 925              		.file 11 "./lib/ros_lib/ros/node_handle.h"
   1:./lib/ros_lib/ros/node_handle.h **** /*
   2:./lib/ros_lib/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/node_handle.h ****  *
   4:./lib/ros_lib/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/node_handle.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/node_handle.h ****  *
   7:./lib/ros_lib/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/node_handle.h ****  * are met:
  10:./lib/ros_lib/ros/node_handle.h ****  *
  11:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/node_handle.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/node_handle.h ****  *
  21:./lib/ros_lib/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/node_handle.h ****  */
  34:./lib/ros_lib/ros/node_handle.h **** 
  35:./lib/ros_lib/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:./lib/ros_lib/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:./lib/ros_lib/ros/node_handle.h **** 
  38:./lib/ros_lib/ros/node_handle.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/node_handle.h **** 
  40:./lib/ros_lib/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:./lib/ros_lib/ros/node_handle.h **** 
  45:./lib/ros_lib/ros/node_handle.h **** #define SYNC_SECONDS        5
  46:./lib/ros_lib/ros/node_handle.h **** 
  47:./lib/ros_lib/ros/node_handle.h **** #define MODE_FIRST_FF       0
  48:./lib/ros_lib/ros/node_handle.h **** /*
  49:./lib/ros_lib/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  50:./lib/ros_lib/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  51:./lib/ros_lib/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  52:./lib/ros_lib/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  53:./lib/ros_lib/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  54:./lib/ros_lib/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  55:./lib/ros_lib/ros/node_handle.h ****  */
  56:./lib/ros_lib/ros/node_handle.h **** #define MODE_PROTOCOL_VER   1
  57:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER1		0xff // through groovy
  58:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER2		0xfe // in hydro
  59:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER 		PROTOCOL_VER2
  60:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_L         2
  61:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_H         3
  62:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_CHECKSUM  4   // checksum for msg size received from size L and H
  63:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_L        5   // waiting for topic id
  64:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_H        6
  65:./lib/ros_lib/ros/node_handle.h **** #define MODE_MESSAGE        7
  66:./lib/ros_lib/ros/node_handle.h **** #define MODE_MSG_CHECKSUM   8   // checksum for msg and topic id
  67:./lib/ros_lib/ros/node_handle.h **** 
  68:./lib/ros_lib/ros/node_handle.h **** 
  69:./lib/ros_lib/ros/node_handle.h **** #define MSG_TIMEOUT 20  //20 milliseconds to recieve all of message data
  70:./lib/ros_lib/ros/node_handle.h **** 
  71:./lib/ros_lib/ros/node_handle.h **** #include "msg.h"
  72:./lib/ros_lib/ros/node_handle.h **** 
  73:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  74:./lib/ros_lib/ros/node_handle.h **** 
  75:./lib/ros_lib/ros/node_handle.h ****   class NodeHandleBase_{
  76:./lib/ros_lib/ros/node_handle.h ****     public:
  77:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg* msg)=0;
  78:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce()=0;
  79:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected()=0;
  80:./lib/ros_lib/ros/node_handle.h ****     };
  81:./lib/ros_lib/ros/node_handle.h **** }
  82:./lib/ros_lib/ros/node_handle.h **** 
  83:./lib/ros_lib/ros/node_handle.h **** #include "publisher.h"
  84:./lib/ros_lib/ros/node_handle.h **** #include "subscriber.h"
  85:./lib/ros_lib/ros/node_handle.h **** #include "service_server.h"
  86:./lib/ros_lib/ros/node_handle.h **** #include "service_client.h"
  87:./lib/ros_lib/ros/node_handle.h **** 
  88:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  89:./lib/ros_lib/ros/node_handle.h **** 
  90:./lib/ros_lib/ros/node_handle.h ****   using rosserial_msgs::TopicInfo;
  91:./lib/ros_lib/ros/node_handle.h **** 
  92:./lib/ros_lib/ros/node_handle.h ****   /* Node Handle */
  93:./lib/ros_lib/ros/node_handle.h ****   template<class Hardware,
  94:./lib/ros_lib/ros/node_handle.h ****            int MAX_SUBSCRIBERS=25,
  95:./lib/ros_lib/ros/node_handle.h ****            int MAX_PUBLISHERS=25,
  96:./lib/ros_lib/ros/node_handle.h ****            int INPUT_SIZE=1024,
  97:./lib/ros_lib/ros/node_handle.h ****            int OUTPUT_SIZE=1024>
  98:./lib/ros_lib/ros/node_handle.h ****   class NodeHandle_ : public NodeHandleBase_
  99:./lib/ros_lib/ros/node_handle.h ****   {
 100:./lib/ros_lib/ros/node_handle.h ****     protected:
 101:./lib/ros_lib/ros/node_handle.h ****       Hardware hardware_;
 102:./lib/ros_lib/ros/node_handle.h **** 
 103:./lib/ros_lib/ros/node_handle.h ****       /* time used for syncing */
 104:./lib/ros_lib/ros/node_handle.h ****       uint32_t rt_time;
 105:./lib/ros_lib/ros/node_handle.h **** 
 106:./lib/ros_lib/ros/node_handle.h ****       /* used for computing current time */
 107:./lib/ros_lib/ros/node_handle.h ****       uint32_t sec_offset, nsec_offset;
 108:./lib/ros_lib/ros/node_handle.h **** 
 109:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_in[INPUT_SIZE];
 110:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_out[OUTPUT_SIZE];
 111:./lib/ros_lib/ros/node_handle.h **** 
 112:./lib/ros_lib/ros/node_handle.h ****       Publisher * publishers[MAX_PUBLISHERS];
 113:./lib/ros_lib/ros/node_handle.h ****       Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 114:./lib/ros_lib/ros/node_handle.h **** 
 115:./lib/ros_lib/ros/node_handle.h ****       /*
 116:./lib/ros_lib/ros/node_handle.h ****        * Setup Functions
 117:./lib/ros_lib/ros/node_handle.h ****        */
 118:./lib/ros_lib/ros/node_handle.h ****     public:
 119:./lib/ros_lib/ros/node_handle.h ****       NodeHandle_() : configured_(false) {
 120:./lib/ros_lib/ros/node_handle.h **** 
 121:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_PUBLISHERS; i++)
 122:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 123:./lib/ros_lib/ros/node_handle.h **** 
 124:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_SUBSCRIBERS; i++)
 125:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 126:./lib/ros_lib/ros/node_handle.h **** 
 127:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< INPUT_SIZE; i++)
 128:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 129:./lib/ros_lib/ros/node_handle.h **** 
 130:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< OUTPUT_SIZE; i++)
 131:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 132:./lib/ros_lib/ros/node_handle.h **** 
 133:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 134:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 135:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats_length = 0;
 136:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats = NULL;
 137:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 138:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 139:./lib/ros_lib/ros/node_handle.h ****       }
 140:./lib/ros_lib/ros/node_handle.h **** 
 141:./lib/ros_lib/ros/node_handle.h ****       Hardware* getHardware(){
 142:./lib/ros_lib/ros/node_handle.h ****         return &hardware_;
 143:./lib/ros_lib/ros/node_handle.h ****       }
 144:./lib/ros_lib/ros/node_handle.h **** 
 145:./lib/ros_lib/ros/node_handle.h ****       /* Start serial, initialize buffers */
 146:./lib/ros_lib/ros/node_handle.h ****       void initNode(){
 147:./lib/ros_lib/ros/node_handle.h ****         hardware_.init();
 148:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 149:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 150:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 151:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 152:./lib/ros_lib/ros/node_handle.h ****       };
 153:./lib/ros_lib/ros/node_handle.h **** 
 154:./lib/ros_lib/ros/node_handle.h ****       /* Start a named port, which may be network server IP, initialize buffers */
 155:./lib/ros_lib/ros/node_handle.h ****       void initNode(char *portName){
 156:./lib/ros_lib/ros/node_handle.h ****         hardware_.init(portName);
 157:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 158:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 159:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 160:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 161:./lib/ros_lib/ros/node_handle.h ****       };
 162:./lib/ros_lib/ros/node_handle.h **** 
 163:./lib/ros_lib/ros/node_handle.h ****     protected:
 164:./lib/ros_lib/ros/node_handle.h ****       //State machine variables for spinOnce
 165:./lib/ros_lib/ros/node_handle.h ****       int mode_;
 166:./lib/ros_lib/ros/node_handle.h ****       int bytes_;
 167:./lib/ros_lib/ros/node_handle.h ****       int topic_;
 168:./lib/ros_lib/ros/node_handle.h ****       int index_;
 169:./lib/ros_lib/ros/node_handle.h ****       int checksum_;
 170:./lib/ros_lib/ros/node_handle.h **** 
 171:./lib/ros_lib/ros/node_handle.h ****       bool configured_;
 172:./lib/ros_lib/ros/node_handle.h **** 
 173:./lib/ros_lib/ros/node_handle.h ****       /* used for syncing the time */
 174:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_time;
 175:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_receive_time;
 176:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_msg_timeout_time;
 177:./lib/ros_lib/ros/node_handle.h **** 
 178:./lib/ros_lib/ros/node_handle.h ****     public:
 179:./lib/ros_lib/ros/node_handle.h ****       /* This function goes in your loop() function, it handles
 180:./lib/ros_lib/ros/node_handle.h ****        *  serial input and callbacks for subscribers.
 181:./lib/ros_lib/ros/node_handle.h ****        */
 182:./lib/ros_lib/ros/node_handle.h **** 
 183:./lib/ros_lib/ros/node_handle.h **** 
 184:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce(){
 185:./lib/ros_lib/ros/node_handle.h **** 
 186:./lib/ros_lib/ros/node_handle.h ****         /* restart if timed out */
 187:./lib/ros_lib/ros/node_handle.h ****         uint32_t c_time = hardware_.time();
 188:./lib/ros_lib/ros/node_handle.h ****         if( (c_time - last_sync_receive_time) > (SYNC_SECONDS*2200) ){
 189:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 190:./lib/ros_lib/ros/node_handle.h ****          }
 191:./lib/ros_lib/ros/node_handle.h **** 
 192:./lib/ros_lib/ros/node_handle.h ****         /* reset if message has timed out */
 193:./lib/ros_lib/ros/node_handle.h ****         if ( mode_ != MODE_FIRST_FF){
 194:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 195:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 196:./lib/ros_lib/ros/node_handle.h ****           }
 197:./lib/ros_lib/ros/node_handle.h ****         }
 198:./lib/ros_lib/ros/node_handle.h ****         /* while available buffer, read data */
 199:./lib/ros_lib/ros/node_handle.h ****         while( true )
 200:./lib/ros_lib/ros/node_handle.h ****         {
 201:./lib/ros_lib/ros/node_handle.h ****           int data = hardware_.read();
 202:./lib/ros_lib/ros/node_handle.h ****           if( data < 0 )
 203:./lib/ros_lib/ros/node_handle.h ****             break;
 204:./lib/ros_lib/ros/node_handle.h ****           checksum_ += data;
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 207:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 208:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 209:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 210:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 211:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 212:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 213:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 214:./lib/ros_lib/ros/node_handle.h ****             }
 215:./lib/ros_lib/ros/node_handle.h ****             else if( hardware_.time() - c_time > (SYNC_SECONDS)){
 216:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 217:./lib/ros_lib/ros/node_handle.h ****               configured_=false;
 218:./lib/ros_lib/ros/node_handle.h ****               return -2;
 219:./lib/ros_lib/ros/node_handle.h ****             }
 220:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_PROTOCOL_VER ){
 221:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 222:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 223:./lib/ros_lib/ros/node_handle.h ****             }else{
 224:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_FIRST_FF;
 225:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 227:./lib/ros_lib/ros/node_handle.h ****             }
 228:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_SIZE_L ){   /* bottom half of message size */
 229:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 230:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 231:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 232:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 233:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_H ){   /* top half of message size */
 234:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 235:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 236:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 237:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 238:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 239:./lib/ros_lib/ros/node_handle.h **** 	    else
 240:./lib/ros_lib/ros/node_handle.h **** 	      mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 241:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 242:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 243:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 244:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 245:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 246:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 247:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 248:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 249:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 250:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_MSG_CHECKSUM ){ /* do checksum */
 251:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 254:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 255:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 258:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 259:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 260:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 261:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 262:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 263:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 264:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 265:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 266:./lib/ros_lib/ros/node_handle.h ****               }else{
 267:./lib/ros_lib/ros/node_handle.h ****                 if(subscribers[topic_-100])
 268:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 269:./lib/ros_lib/ros/node_handle.h ****               }
 270:./lib/ros_lib/ros/node_handle.h ****             }
 271:./lib/ros_lib/ros/node_handle.h ****           }
 272:./lib/ros_lib/ros/node_handle.h ****         }
 273:./lib/ros_lib/ros/node_handle.h **** 
 274:./lib/ros_lib/ros/node_handle.h ****         /* occasionally sync time */
 275:./lib/ros_lib/ros/node_handle.h ****         if( configured_ && ((c_time-last_sync_time) > (SYNC_SECONDS*500) )){
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 277:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 278:./lib/ros_lib/ros/node_handle.h ****         }
 279:./lib/ros_lib/ros/node_handle.h **** 
 280:./lib/ros_lib/ros/node_handle.h ****         return 0;
 281:./lib/ros_lib/ros/node_handle.h ****       }
 282:./lib/ros_lib/ros/node_handle.h **** 
 283:./lib/ros_lib/ros/node_handle.h **** 
 284:./lib/ros_lib/ros/node_handle.h ****       /* Are we connected to the PC? */
 285:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected() {
 926              		.loc 11 285 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930              		@ link register save eliminated.
 931              	.LVL75:
 286:./lib/ros_lib/ros/node_handle.h ****         return configured_;
 287:./lib/ros_lib/ros/node_handle.h ****       };
 932              		.loc 11 287 0
 933 0000 90F8F408 		ldrb	r0, [r0, #2292]	@ zero_extendqisi2
 934              	.LVL76:
 935 0004 7047     		bx	lr
 936              		.cfi_endproc
 937              	.LFE1335:
 938              		.cantunwind
 939              		.fnend
 941              		.section	.text._ZNK8std_msgs6Header9serializeEPh,"axG",%progbits,_ZNK8std_msgs6Header9serializeEPh
 942              		.align	1
 943              		.weak	_ZNK8std_msgs6Header9serializeEPh
 944              		.thumb
 945              		.thumb_func
 947              	_ZNK8std_msgs6Header9serializeEPh:
 948              		.fnstart
 949              	.LFB1179:
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 950              		.loc 8 27 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 8
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              	.LVL77:
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 955              		.loc 8 30 0
 956 0000 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 957              		.loc 8 27 0
 958 0002 73B5     		push	{r0, r1, r4, r5, r6, lr}
 959              	.LCFI2:
 960              		.cfi_def_cfa_offset 24
 961              		.cfi_offset 4, -16
 962              		.cfi_offset 5, -12
 963              		.cfi_offset 6, -8
 964              		.cfi_offset 14, -4
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 965              		.loc 8 30 0
 966 0004 0B70     		strb	r3, [r1]
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 967              		.loc 8 31 0
 968 0006 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 969              		.loc 8 27 0
 970 0008 0546     		mov	r5, r0
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 971              		.loc 8 31 0
 972 000a 1B0A     		lsrs	r3, r3, #8
 973 000c 4B70     		strb	r3, [r1, #1]
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 974              		.loc 8 32 0
 975 000e C388     		ldrh	r3, [r0, #6]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 976              		.loc 8 27 0
 977 0010 0C46     		mov	r4, r1
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 978              		.loc 8 32 0
 979 0012 8B70     		strb	r3, [r1, #2]
  33:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 980              		.loc 8 33 0
 981 0014 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 982 0016 CB70     		strb	r3, [r1, #3]
 983              	.LVL78:
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 984              		.loc 8 35 0
 985 0018 8368     		ldr	r3, [r0, #8]
 986 001a 0B71     		strb	r3, [r1, #4]
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 987              		.loc 8 36 0
 988 001c 8368     		ldr	r3, [r0, #8]
 989 001e 1B0A     		lsrs	r3, r3, #8
 990 0020 4B71     		strb	r3, [r1, #5]
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 991              		.loc 8 37 0
 992 0022 4389     		ldrh	r3, [r0, #10]
 993 0024 8B71     		strb	r3, [r1, #6]
  38:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 994              		.loc 8 38 0
 995 0026 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 996 0028 CB71     		strb	r3, [r1, #7]
 997              	.LVL79:
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 998              		.loc 8 40 0
 999 002a C368     		ldr	r3, [r0, #12]
 1000 002c 0B72     		strb	r3, [r1, #8]
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 1001              		.loc 8 41 0
 1002 002e C368     		ldr	r3, [r0, #12]
 1003 0030 1B0A     		lsrs	r3, r3, #8
 1004 0032 4B72     		strb	r3, [r1, #9]
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 1005              		.loc 8 42 0
 1006 0034 C389     		ldrh	r3, [r0, #14]
 1007 0036 8B72     		strb	r3, [r1, #10]
  43:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1008              		.loc 8 43 0
 1009 0038 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 1010 003a CB72     		strb	r3, [r1, #11]
 1011              	.LVL80:
  45:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 1012              		.loc 8 45 0
 1013 003c 0069     		ldr	r0, [r0, #16]
 1014              	.LVL81:
 1015 003e FFF7FEFF 		bl	strlen
 1016              	.LVL82:
 1017 0042 0646     		mov	r6, r0
 1018 0044 02AB     		add	r3, sp, #8
 1019 0046 43F8040D 		str	r0, [r3, #-4]!
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1020              		.loc 8 46 0
 1021 004a 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1022              		.loc 8 48 0
 1023 004c 3246     		mov	r2, r6
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1024              		.loc 8 46 0
 1025 004e E060     		str	r0, [r4, #12]	@ unaligned
 1026              	.LVL83:
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1027              		.loc 8 48 0
 1028 0050 2969     		ldr	r1, [r5, #16]
 1029 0052 04F11000 		add	r0, r4, #16
 1030 0056 FFF7FEFF 		bl	memcpy
 1031              	.LVL84:
  51:./lib/ros_lib/std_msgs/Header.h **** 
 1032              		.loc 8 51 0
 1033 005a 06F11000 		add	r0, r6, #16
 1034              	.LVL85:
 1035 005e 02B0     		add	sp, sp, #8
 1036              	.LCFI3:
 1037              		.cfi_def_cfa_offset 16
 1038              		@ sp needed
 1039 0060 70BD     		pop	{r4, r5, r6, pc}
 1040              		.cfi_endproc
 1041              	.LFE1179:
 1042              		.cantunwind
 1043              		.fnend
 1045              		.section	.text._ZNK8std_msgs19MultiArrayDimension9serializeEPh,"axG",%progbits,_ZNK8std_msgs19Mult
 1046              		.align	1
 1047              		.weak	_ZNK8std_msgs19MultiArrayDimension9serializeEPh
 1048              		.thumb
 1049              		.thumb_func
 1051              	_ZNK8std_msgs19MultiArrayDimension9serializeEPh:
 1052              		.fnstart
 1053              	.LFB1144:
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1054              		.loc 5 26 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 8
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
 1058              	.LVL86:
 1059 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1060              	.LCFI4:
 1061              		.cfi_def_cfa_offset 24
 1062              		.cfi_offset 4, -16
 1063              		.cfi_offset 5, -12
 1064              		.cfi_offset 6, -8
 1065              		.cfi_offset 14, -4
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1066              		.loc 5 26 0
 1067 0002 0546     		mov	r5, r0
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
 1068              		.loc 5 29 0
 1069 0004 4068     		ldr	r0, [r0, #4]
 1070              	.LVL87:
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1071              		.loc 5 26 0
 1072 0006 0C46     		mov	r4, r1
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
 1073              		.loc 5 29 0
 1074 0008 FFF7FEFF 		bl	strlen
 1075              	.LVL88:
 1076 000c 02AB     		add	r3, sp, #8
 1077 000e 43F8040D 		str	r0, [r3, #-4]!
 1078 0012 0646     		mov	r6, r0
  30:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 1079              		.loc 5 30 0
 1080 0014 1868     		ldr	r0, [r3]	@ unaligned
 1081 0016 2346     		mov	r3, r4
 1082 0018 43F8040B 		str	r0, [r3], #4	@ unaligned
 1083              	.LVL89:
  32:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
 1084              		.loc 5 32 0
 1085 001c 6968     		ldr	r1, [r5, #4]
 1086 001e 3246     		mov	r2, r6
 1087 0020 1846     		mov	r0, r3
 1088 0022 FFF7FEFF 		bl	memcpy
 1089              	.LVL90:
  34:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->size >> (8 * 1)) & 0xFF;
 1090              		.loc 5 34 0
 1091 0026 AB68     		ldr	r3, [r5, #8]
 1092 0028 A119     		adds	r1, r4, r6
 1093 002a 0B71     		strb	r3, [r1, #4]
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
 1094              		.loc 5 35 0
 1095 002c AB68     		ldr	r3, [r5, #8]
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 1096              		.loc 5 45 0
 1097 002e 06F10C00 		add	r0, r6, #12
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
 1098              		.loc 5 35 0
 1099 0032 1B0A     		lsrs	r3, r3, #8
 1100 0034 4B71     		strb	r3, [r1, #5]
  36:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->size >> (8 * 3)) & 0xFF;
 1101              		.loc 5 36 0
 1102 0036 6B89     		ldrh	r3, [r5, #10]
 1103 0038 8B71     		strb	r3, [r1, #6]
  37:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
 1104              		.loc 5 37 0
 1105 003a EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 1106 003c CB71     		strb	r3, [r1, #7]
 1107              	.LVL91:
  39:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->stride >> (8 * 1)) & 0xFF;
 1108              		.loc 5 39 0
 1109 003e EB68     		ldr	r3, [r5, #12]
 1110 0040 0B72     		strb	r3, [r1, #8]
  40:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->stride >> (8 * 2)) & 0xFF;
 1111              		.loc 5 40 0
 1112 0042 EB68     		ldr	r3, [r5, #12]
 1113 0044 1B0A     		lsrs	r3, r3, #8
 1114 0046 4B72     		strb	r3, [r1, #9]
  41:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->stride >> (8 * 3)) & 0xFF;
 1115              		.loc 5 41 0
 1116 0048 EB89     		ldrh	r3, [r5, #14]
 1117 004a 8B72     		strb	r3, [r1, #10]
  42:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
 1118              		.loc 5 42 0
 1119 004c EB7B     		ldrb	r3, [r5, #15]	@ zero_extendqisi2
 1120 004e CB72     		strb	r3, [r1, #11]
 1121              	.LVL92:
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 1122              		.loc 5 45 0
 1123 0050 02B0     		add	sp, sp, #8
 1124              	.LCFI5:
 1125              		.cfi_def_cfa_offset 16
 1126              		@ sp needed
 1127 0052 70BD     		pop	{r4, r5, r6, pc}
 1128              		.cfi_endproc
 1129              	.LFE1144:
 1130              		.cantunwind
 1131              		.fnend
 1133              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 1134              		.align	1
 1135              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1136              		.thumb
 1137              		.thumb_func
 1139              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1140              		.fnstart
 1141              	.LFB1074:
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1142              		.loc 4 74 0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 8
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 1146              	.LVL93:
 1147 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 1148              	.LCFI6:
 1149              		.cfi_def_cfa_offset 40
 1150              		.cfi_offset 4, -28
 1151              		.cfi_offset 5, -24
 1152              		.cfi_offset 6, -20
 1153              		.cfi_offset 7, -16
 1154              		.cfi_offset 8, -12
 1155              		.cfi_offset 9, -8
 1156              		.cfi_offset 14, -4
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1157              		.loc 4 77 0
 1158 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1159              		.loc 4 74 0
 1160 0006 0746     		mov	r7, r0
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1161              		.loc 4 77 0
 1162 0008 0B70     		strb	r3, [r1]
 1163              	.LVL94:
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1164              		.loc 4 78 0
 1165 000a 0023     		movs	r3, #0
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1166              		.loc 4 80 0
 1167 000c 1A46     		mov	r2, r3
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1168              		.loc 4 74 0
 1169 000e 0C46     		mov	r4, r1
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1170              		.loc 4 78 0
 1171 0010 4B70     		strb	r3, [r1, #1]
 1172              	.LVL95:
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1173              		.loc 4 79 0
 1174 0012 8B70     		strb	r3, [r1, #2]
 1175              	.LVL96:
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1176              		.loc 4 80 0
 1177 0014 CB70     		strb	r3, [r1, #3]
 1178              	.LVL97:
 1179 0016 0431     		adds	r1, r1, #4
 1180              	.LVL98:
 1181              	.L76:
 1182              	.LBB139:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1183              		.loc 4 81 0 discriminator 3
 1184 0018 3D79     		ldrb	r5, [r7, #4]	@ zero_extendqisi2
 1185 001a 501C     		adds	r0, r2, #1
 1186 001c D2B2     		uxtb	r2, r2
 1187 001e 9542     		cmp	r5, r2
 1188 0020 A1EB0403 		sub	r3, r1, r4
 1189              	.LVL99:
 1190 0024 01F10401 		add	r1, r1, #4
 1191 0028 0FD9     		bls	.L75
 1192              	.LBB140:
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1193              		.loc 4 86 0 discriminator 2
 1194 002a FB68     		ldr	r3, [r7, #12]
 1195              	.LVL100:
 1196 002c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1197              	.LVL101:
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1198              		.loc 4 88 0 discriminator 2
 1199 0030 1A0A     		lsrs	r2, r3, #8
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1200              		.loc 4 87 0 discriminator 2
 1201 0032 01F8043C 		strb	r3, [r1, #-4]
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1202              		.loc 4 88 0 discriminator 2
 1203 0036 01F8032C 		strb	r2, [r1, #-3]
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1204              		.loc 4 89 0 discriminator 2
 1205 003a 1A0C     		lsrs	r2, r3, #16
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1206              		.loc 4 90 0 discriminator 2
 1207 003c 1B0E     		lsrs	r3, r3, #24
 1208              	.LVL102:
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1209              		.loc 4 89 0 discriminator 2
 1210 003e 01F8022C 		strb	r2, [r1, #-2]
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1211              		.loc 4 90 0 discriminator 2
 1212 0042 01F8013C 		strb	r3, [r1, #-1]
 1213              	.LVL103:
 1214              	.LBE140:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1215              		.loc 4 81 0 discriminator 2
 1216 0046 0246     		mov	r2, r0
 1217 0048 E6E7     		b	.L76
 1218              	.LVL104:
 1219              	.L75:
 1220              	.LBE139:
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1221              		.loc 4 93 0
 1222 004a 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1223              		.loc 4 94 0
 1224 004c E118     		adds	r1, r4, r3
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1225              		.loc 4 93 0
 1226 004e E254     		strb	r2, [r4, r3]
 1227              	.LVL105:
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1228              		.loc 4 94 0
 1229 0050 0022     		movs	r2, #0
 1230 0052 0433     		adds	r3, r3, #4
 1231              	.LVL106:
 1232 0054 4A70     		strb	r2, [r1, #1]
 1233              	.LVL107:
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1234              		.loc 4 95 0
 1235 0056 8A70     		strb	r2, [r1, #2]
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1236              		.loc 4 96 0
 1237 0058 CA70     		strb	r2, [r1, #3]
 1238              	.LVL108:
 1239 005a 2344     		add	r3, r3, r4
 1240              	.LVL109:
 1241              	.L78:
 1242              	.LBB141:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1243              		.loc 4 97 0 discriminator 3
 1244 005c 387C     		ldrb	r0, [r7, #16]	@ zero_extendqisi2
 1245 005e 511C     		adds	r1, r2, #1
 1246 0060 D2B2     		uxtb	r2, r2
 1247 0062 9042     		cmp	r0, r2
 1248 0064 A3EB0406 		sub	r6, r3, r4
 1249              	.LVL110:
 1250 0068 03F10403 		add	r3, r3, #4
 1251 006c 0FD9     		bls	.L77
 1252              	.LBB142:
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1253              		.loc 4 102 0 discriminator 2
 1254 006e B869     		ldr	r0, [r7, #24]
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1255              		.loc 4 103 0 discriminator 2
 1256 0070 50F82220 		ldr	r2, [r0, r2, lsl #2]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1257              		.loc 4 104 0 discriminator 2
 1258 0074 100A     		lsrs	r0, r2, #8
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1259              		.loc 4 103 0 discriminator 2
 1260 0076 03F8042C 		strb	r2, [r3, #-4]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1261              		.loc 4 104 0 discriminator 2
 1262 007a 03F8030C 		strb	r0, [r3, #-3]
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1263              		.loc 4 105 0 discriminator 2
 1264 007e 100C     		lsrs	r0, r2, #16
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1265              		.loc 4 106 0 discriminator 2
 1266 0080 120E     		lsrs	r2, r2, #24
 1267 0082 03F8012C 		strb	r2, [r3, #-1]
 1268              	.LVL111:
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1269              		.loc 4 105 0 discriminator 2
 1270 0086 03F8020C 		strb	r0, [r3, #-2]
 1271              	.LBE142:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1272              		.loc 4 97 0 discriminator 2
 1273 008a 0A46     		mov	r2, r1
 1274 008c E6E7     		b	.L78
 1275              	.LVL112:
 1276              	.L77:
 1277              	.LBE141:
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1278              		.loc 4 109 0
 1279 008e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1280              		.loc 4 110 0
 1281 0090 A219     		adds	r2, r4, r6
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1282              		.loc 4 109 0
 1283 0092 A355     		strb	r3, [r4, r6]
 1284              	.LVL113:
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1285              		.loc 4 110 0
 1286 0094 0023     		movs	r3, #0
 1287 0096 5370     		strb	r3, [r2, #1]
 1288              	.LVL114:
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1289              		.loc 4 111 0
 1290 0098 9370     		strb	r3, [r2, #2]
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1291              		.loc 4 112 0
 1292 009a 0436     		adds	r6, r6, #4
 1293              	.LVL115:
 1294 009c D370     		strb	r3, [r2, #3]
 1295              	.LVL116:
 1296              	.L80:
 1297              	.LBB143:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1298              		.loc 4 113 0 discriminator 3
 1299 009e 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 1300 00a0 DDB2     		uxtb	r5, r3
 1301 00a2 AA42     		cmp	r2, r5
 1302 00a4 03F10109 		add	r9, r3, #1
 1303 00a8 15D9     		bls	.L79
 1304              	.LBB144:
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1305              		.loc 4 114 0 discriminator 2
 1306 00aa 7B6A     		ldr	r3, [r7, #36]
 1307              	.LVL117:
 1308 00ac 53F82500 		ldr	r0, [r3, r5, lsl #2]
 1309 00b0 FFF7FEFF 		bl	strlen
 1310              	.LVL118:
 1311 00b4 8046     		mov	r8, r0
 1312 00b6 02AB     		add	r3, sp, #8
 1313 00b8 43F8040D 		str	r0, [r3, #-4]!
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1314              		.loc 4 115 0 discriminator 2
 1315 00bc 1868     		ldr	r0, [r3]	@ unaligned
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1316              		.loc 4 117 0 discriminator 2
 1317 00be 4246     		mov	r2, r8
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1318              		.loc 4 115 0 discriminator 2
 1319 00c0 A051     		str	r0, [r4, r6]	@ unaligned
 1320              	.LVL119:
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1321              		.loc 4 117 0 discriminator 2
 1322 00c2 7B6A     		ldr	r3, [r7, #36]
 1323 00c4 0436     		adds	r6, r6, #4
 1324              	.LVL120:
 1325 00c6 53F82510 		ldr	r1, [r3, r5, lsl #2]
 1326 00ca A019     		adds	r0, r4, r6
 1327 00cc FFF7FEFF 		bl	memcpy
 1328              	.LVL121:
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 1329              		.loc 4 118 0 discriminator 2
 1330 00d0 4644     		add	r6, r6, r8
 1331              	.LVL122:
 1332              	.LBE144:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1333              		.loc 4 113 0 discriminator 2
 1334 00d2 4B46     		mov	r3, r9
 1335 00d4 E3E7     		b	.L80
 1336              	.LVL123:
 1337              	.L79:
 1338              	.LBE143:
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 1339              		.loc 4 121 0
 1340 00d6 3046     		mov	r0, r6
 1341 00d8 03B0     		add	sp, sp, #12
 1342              	.LCFI7:
 1343              		.cfi_def_cfa_offset 28
 1344              		@ sp needed
 1345 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1346              		.cfi_endproc
 1347              	.LFE1074:
 1348              		.cantunwind
 1349              		.fnend
 1351              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 1352              		.align	1
 1353              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1354              		.thumb
 1355              		.thumb_func
 1357              	_ZNK14rosserial_msgs3Log9serializeEPh:
 1358              		.fnstart
 1359              	.LFB1060:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1360              		.loc 3 29 0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 8
 1363              		@ frame_needed = 0, uses_anonymous_args = 0
 1364              	.LVL124:
 1365 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1366              	.LCFI8:
 1367              		.cfi_def_cfa_offset 24
 1368              		.cfi_offset 4, -16
 1369              		.cfi_offset 5, -12
 1370              		.cfi_offset 6, -8
 1371              		.cfi_offset 14, -4
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1372              		.loc 3 32 0
 1373 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1374              		.loc 3 29 0
 1375 0004 0646     		mov	r6, r0
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1376              		.loc 3 32 0
 1377 0006 0B70     		strb	r3, [r1]
 1378              	.LVL125:
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1379              		.loc 3 34 0
 1380 0008 8068     		ldr	r0, [r0, #8]
 1381              	.LVL126:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1382              		.loc 3 29 0
 1383 000a 0D46     		mov	r5, r1
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1384              		.loc 3 34 0
 1385 000c FFF7FEFF 		bl	strlen
 1386              	.LVL127:
 1387 0010 0446     		mov	r4, r0
 1388 0012 02AB     		add	r3, sp, #8
 1389 0014 43F8040D 		str	r0, [r3, #-4]!
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1390              		.loc 3 35 0
 1391 0018 1868     		ldr	r0, [r3]	@ unaligned
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1392              		.loc 3 37 0
 1393 001a 2246     		mov	r2, r4
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1394              		.loc 3 35 0
 1395 001c C5F80100 		str	r0, [r5, #1]	@ unaligned
 1396              	.LVL128:
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1397              		.loc 3 37 0
 1398 0020 B168     		ldr	r1, [r6, #8]
 1399 0022 681D     		adds	r0, r5, #5
 1400 0024 FFF7FEFF 		bl	memcpy
 1401              	.LVL129:
  40:./lib/ros_lib/rosserial_msgs/Log.h **** 
 1402              		.loc 3 40 0
 1403 0028 601D     		adds	r0, r4, #5
 1404              	.LVL130:
 1405 002a 02B0     		add	sp, sp, #8
 1406              	.LCFI9:
 1407              		.cfi_def_cfa_offset 16
 1408              		@ sp needed
 1409 002c 70BD     		pop	{r4, r5, r6, pc}
 1410              		.cfi_endproc
 1411              	.LFE1060:
 1412              		.cantunwind
 1413              		.fnend
 1415              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 1416              		.align	1
 1417              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 1418              		.thumb
 1419              		.thumb_func
 1421              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 1422              		.fnstart
 1423              	.LFB1053:
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1424              		.loc 2 38 0
 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 16
 1427              		@ frame_needed = 0, uses_anonymous_args = 0
 1428              	.LVL131:
 1429 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 1430              	.LCFI10:
 1431              		.cfi_def_cfa_offset 40
 1432              		.cfi_offset 4, -24
 1433              		.cfi_offset 5, -20
 1434              		.cfi_offset 6, -16
 1435              		.cfi_offset 7, -12
 1436              		.cfi_offset 8, -8
 1437              		.cfi_offset 14, -4
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1438              		.loc 2 41 0
 1439 0004 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1440              		.loc 2 38 0
 1441 0006 0646     		mov	r6, r0
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1442              		.loc 2 41 0
 1443 0008 0B70     		strb	r3, [r1]
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1444              		.loc 2 42 0
 1445 000a 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1446              		.loc 2 38 0
 1447 000c 0D46     		mov	r5, r1
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1448              		.loc 2 42 0
 1449 000e 1B0A     		lsrs	r3, r3, #8
 1450 0010 4B70     		strb	r3, [r1, #1]
 1451              	.LVL132:
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1452              		.loc 2 44 0
 1453 0012 8068     		ldr	r0, [r0, #8]
 1454              	.LVL133:
 1455 0014 FFF7FEFF 		bl	strlen
 1456              	.LVL134:
 1457 0018 0446     		mov	r4, r0
 1458 001a 04AB     		add	r3, sp, #16
 1459 001c 43F80C0D 		str	r0, [r3, #-12]!
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1460              		.loc 2 45 0
 1461 0020 1868     		ldr	r0, [r3]	@ unaligned
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1462              		.loc 2 47 0
 1463 0022 2246     		mov	r2, r4
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1464              		.loc 2 45 0
 1465 0024 C5F80200 		str	r0, [r5, #2]	@ unaligned
 1466              	.LVL135:
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1467              		.loc 2 47 0
 1468 0028 B168     		ldr	r1, [r6, #8]
 1469 002a A81D     		adds	r0, r5, #6
 1470 002c FFF7FEFF 		bl	memcpy
 1471              	.LVL136:
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 1472              		.loc 2 49 0
 1473 0030 F068     		ldr	r0, [r6, #12]
 1474 0032 FFF7FEFF 		bl	strlen
 1475              	.LVL137:
 1476 0036 0746     		mov	r7, r0
 1477 0038 04AB     		add	r3, sp, #16
 1478 003a 43F8080D 		str	r0, [r3, #-8]!
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1479              		.loc 2 50 0
 1480 003e 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 1481              		.loc 2 48 0
 1482 0040 04F10608 		add	r8, r4, #6
 1483              	.LVL138:
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1484              		.loc 2 50 0
 1485 0044 45F80800 		str	r0, [r5, r8]	@ unaligned
 1486              	.LVL139:
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1487              		.loc 2 52 0
 1488 0048 0A34     		adds	r4, r4, #10
 1489 004a 3A46     		mov	r2, r7
 1490 004c F168     		ldr	r1, [r6, #12]
 1491 004e 2819     		adds	r0, r5, r4
 1492 0050 FFF7FEFF 		bl	memcpy
 1493              	.LVL140:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1494              		.loc 2 54 0
 1495 0054 3069     		ldr	r0, [r6, #16]
 1496 0056 FFF7FEFF 		bl	strlen
 1497              	.LVL141:
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 1498              		.loc 2 53 0
 1499 005a 3C44     		add	r4, r4, r7
 1500              	.LVL142:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1501              		.loc 2 54 0
 1502 005c 0746     		mov	r7, r0
 1503 005e 04AB     		add	r3, sp, #16
 1504 0060 43F8040D 		str	r0, [r3, #-4]!
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1505              		.loc 2 55 0
 1506 0064 1868     		ldr	r0, [r3]	@ unaligned
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1507              		.loc 2 57 0
 1508 0066 3A46     		mov	r2, r7
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1509              		.loc 2 55 0
 1510 0068 2851     		str	r0, [r5, r4]	@ unaligned
 1511              	.LVL143:
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1512              		.loc 2 57 0
 1513 006a 0434     		adds	r4, r4, #4
 1514              	.LVL144:
 1515 006c 2819     		adds	r0, r5, r4
 1516 006e 3169     		ldr	r1, [r6, #16]
 1517 0070 FFF7FEFF 		bl	memcpy
 1518              	.LVL145:
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 1519              		.loc 2 63 0
 1520 0074 7369     		ldr	r3, [r6, #20]
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 1521              		.loc 2 58 0
 1522 0076 3819     		adds	r0, r7, r4
 1523              	.LVL146:
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 1524              		.loc 2 64 0
 1525 0078 2B54     		strb	r3, [r5, r0]
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 1526              		.loc 2 65 0
 1527 007a 1A0A     		lsrs	r2, r3, #8
 1528 007c 0544     		add	r5, r5, r0
 1529              	.LVL147:
 1530 007e 6A70     		strb	r2, [r5, #1]
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1531              		.loc 2 70 0
 1532 0080 0430     		adds	r0, r0, #4
 1533              	.LVL148:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1534              		.loc 2 66 0
 1535 0082 1A0C     		lsrs	r2, r3, #16
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1536              		.loc 2 67 0
 1537 0084 1B0E     		lsrs	r3, r3, #24
 1538              	.LVL149:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1539              		.loc 2 66 0
 1540 0086 AA70     		strb	r2, [r5, #2]
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1541              		.loc 2 67 0
 1542 0088 EB70     		strb	r3, [r5, #3]
 1543              	.LVL150:
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1544              		.loc 2 70 0
 1545 008a 04B0     		add	sp, sp, #16
 1546              	.LCFI11:
 1547              		.cfi_def_cfa_offset 24
 1548              		@ sp needed
 1549 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1550              		.cfi_endproc
 1551              	.LFE1053:
 1552              		.cantunwind
 1553              		.fnend
 1555              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
 1556              		.align	1
 1557              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 1558              		.thumb
 1559              		.thumb_func
 1561              	_ZN14rosserial_msgs3Log11deserializeEPh:
 1562              		.fnstart
 1563              	.LFB1061:
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1564              		.loc 3 42 0
 1565              		.cfi_startproc
 1566              		@ args = 0, pretend = 0, frame = 8
 1567              		@ frame_needed = 0, uses_anonymous_args = 0
 1568              	.LVL151:
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1569              		.loc 3 45 0
 1570 0000 0B46     		mov	r3, r1
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1571              		.loc 3 42 0
 1572 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1573              	.LCFI12:
 1574              		.cfi_def_cfa_offset 24
 1575              		.cfi_offset 4, -12
 1576              		.cfi_offset 5, -8
 1577              		.cfi_offset 14, -4
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1578              		.loc 3 45 0
 1579 0004 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1580              		.loc 3 42 0
 1581 0008 0446     		mov	r4, r0
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1582              		.loc 3 45 0
 1583 000a 0271     		strb	r2, [r0, #4]
 1584              	.LVL152:
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1585              		.loc 3 48 0
 1586 000c 1868     		ldr	r0, [r3]	@ unaligned
 1587              	.LVL153:
 1588 000e 4A1D     		adds	r2, r1, #5
 1589 0010 0190     		str	r0, [sp, #4]	@ unaligned
 1590              	.LVL154:
 1591              	.LBB145:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1592              		.loc 3 50 0
 1593 0012 019B     		ldr	r3, [sp, #4]
 1594 0014 581D     		adds	r0, r3, #5
 1595              	.LVL155:
 1596              	.L85:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1597              		.loc 3 50 0 is_stmt 0 discriminator 3
 1598 0016 551A     		subs	r5, r2, r1
 1599              	.LVL156:
 1600 0018 A842     		cmp	r0, r5
 1601 001a 04D9     		bls	.L84
  51:./lib/ros_lib/rosserial_msgs/Log.h ****       }
 1602              		.loc 3 51 0 is_stmt 1 discriminator 2
 1603 001c 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 1604              	.LVL157:
 1605 0020 02F8025C 		strb	r5, [r2, #-2]
 1606              	.LVL158:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1607              		.loc 3 50 0 discriminator 2
 1608 0024 F7E7     		b	.L85
 1609              	.LVL159:
 1610              	.L84:
 1611              	.LBE145:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 1612              		.loc 3 53 0
 1613 0026 0B44     		add	r3, r3, r1
 1614 0028 0022     		movs	r2, #0
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1615              		.loc 3 54 0
 1616 002a 0431     		adds	r1, r1, #4
 1617              	.LVL160:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 1618              		.loc 3 53 0
 1619 002c 1A71     		strb	r2, [r3, #4]
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1620              		.loc 3 54 0
 1621 002e A160     		str	r1, [r4, #8]
 1622              	.LVL161:
  57:./lib/ros_lib/rosserial_msgs/Log.h **** 
 1623              		.loc 3 57 0
 1624 0030 03B0     		add	sp, sp, #12
 1625              	.LCFI13:
 1626              		.cfi_def_cfa_offset 12
 1627              		@ sp needed
 1628 0032 30BD     		pop	{r4, r5, pc}
 1629              		.cfi_endproc
 1630              	.LFE1061:
 1631              		.cantunwind
 1632              		.fnend
 1634              		.section	.text._ZN8std_msgs6Header11deserializeEPh,"axG",%progbits,_ZN8std_msgs6Header11deserializ
 1635              		.align	1
 1636              		.weak	_ZN8std_msgs6Header11deserializeEPh
 1637              		.thumb
 1638              		.thumb_func
 1640              	_ZN8std_msgs6Header11deserializeEPh:
 1641              		.fnstart
 1642              	.LFB1180:
  53:./lib/ros_lib/std_msgs/Header.h ****     {
 1643              		.loc 8 53 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 8
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647              	.LVL162:
 1648 0000 0346     		mov	r3, r0
 1649 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1650              	.LCFI14:
 1651              		.cfi_def_cfa_offset 24
 1652              		.cfi_offset 4, -12
 1653              		.cfi_offset 5, -8
 1654              		.cfi_offset 14, -4
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1655              		.loc 8 56 0
 1656 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1657 0006 01F11004 		add	r4, r1, #16
 1658 000a 4260     		str	r2, [r0, #4]
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1659              		.loc 8 57 0
 1660 000c 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 1661              	.LVL163:
 1662 000e 42EA0022 		orr	r2, r2, r0, lsl #8
 1663 0012 5A60     		str	r2, [r3, #4]
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1664              		.loc 8 58 0
 1665 0014 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 1666 0016 42EA0042 		orr	r2, r2, r0, lsl #16
 1667 001a 5A60     		str	r2, [r3, #4]
  59:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1668              		.loc 8 59 0
 1669 001c C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 1670 001e 42EA0062 		orr	r2, r2, r0, lsl #24
 1671 0022 5A60     		str	r2, [r3, #4]
 1672              	.LVL164:
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1673              		.loc 8 61 0
 1674 0024 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 1675 0026 9A60     		str	r2, [r3, #8]
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1676              		.loc 8 62 0
 1677 0028 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 1678 002a 42EA0022 		orr	r2, r2, r0, lsl #8
 1679 002e 9A60     		str	r2, [r3, #8]
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1680              		.loc 8 63 0
 1681 0030 8879     		ldrb	r0, [r1, #6]	@ zero_extendqisi2
 1682 0032 42EA0042 		orr	r2, r2, r0, lsl #16
 1683 0036 9A60     		str	r2, [r3, #8]
  64:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1684              		.loc 8 64 0
 1685 0038 C879     		ldrb	r0, [r1, #7]	@ zero_extendqisi2
 1686 003a 42EA0062 		orr	r2, r2, r0, lsl #24
 1687 003e 9A60     		str	r2, [r3, #8]
 1688              	.LVL165:
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1689              		.loc 8 66 0
 1690 0040 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 1691 0042 DA60     		str	r2, [r3, #12]
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1692              		.loc 8 67 0
 1693 0044 487A     		ldrb	r0, [r1, #9]	@ zero_extendqisi2
 1694 0046 42EA0022 		orr	r2, r2, r0, lsl #8
 1695 004a DA60     		str	r2, [r3, #12]
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1696              		.loc 8 68 0
 1697 004c 887A     		ldrb	r0, [r1, #10]	@ zero_extendqisi2
 1698 004e 42EA0042 		orr	r2, r2, r0, lsl #16
 1699 0052 DA60     		str	r2, [r3, #12]
  69:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1700              		.loc 8 69 0
 1701 0054 C87A     		ldrb	r0, [r1, #11]	@ zero_extendqisi2
 1702 0056 42EA0062 		orr	r2, r2, r0, lsl #24
 1703 005a DA60     		str	r2, [r3, #12]
 1704              	.LVL166:
  72:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1705              		.loc 8 72 0
 1706 005c C868     		ldr	r0, [r1, #12]	@ unaligned
 1707 005e 0190     		str	r0, [sp, #4]	@ unaligned
 1708              	.LVL167:
 1709              	.LBB146:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1710              		.loc 8 74 0
 1711 0060 019A     		ldr	r2, [sp, #4]
 1712 0062 02F11000 		add	r0, r2, #16
 1713              	.LVL168:
 1714              	.L89:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1715              		.loc 8 74 0 is_stmt 0 discriminator 3
 1716 0066 651A     		subs	r5, r4, r1
 1717              	.LVL169:
 1718 0068 A842     		cmp	r0, r5
 1719 006a 04D9     		bls	.L88
  75:./lib/ros_lib/std_msgs/Header.h ****       }
 1720              		.loc 8 75 0 is_stmt 1 discriminator 2
 1721 006c 14F8015B 		ldrb	r5, [r4], #1	@ zero_extendqisi2
 1722              	.LVL170:
 1723 0070 04F8025C 		strb	r5, [r4, #-2]
 1724              	.LVL171:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1725              		.loc 8 74 0 discriminator 2
 1726 0074 F7E7     		b	.L89
 1727              	.LVL172:
 1728              	.L88:
 1729              	.LBE146:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 1730              		.loc 8 77 0
 1731 0076 0A44     		add	r2, r2, r1
 1732 0078 0024     		movs	r4, #0
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1733              		.loc 8 78 0
 1734 007a 0F31     		adds	r1, r1, #15
 1735              	.LVL173:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 1736              		.loc 8 77 0
 1737 007c D473     		strb	r4, [r2, #15]
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1738              		.loc 8 78 0
 1739 007e 1961     		str	r1, [r3, #16]
 1740              	.LVL174:
  81:./lib/ros_lib/std_msgs/Header.h **** 
 1741              		.loc 8 81 0
 1742 0080 03B0     		add	sp, sp, #12
 1743              	.LCFI15:
 1744              		.cfi_def_cfa_offset 12
 1745              		@ sp needed
 1746 0082 30BD     		pop	{r4, r5, pc}
 1747              		.cfi_endproc
 1748              	.LFE1180:
 1749              		.cantunwind
 1750              		.fnend
 1752              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 1753              		.align	1
 1754              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 1755              		.thumb
 1756              		.thumb_func
 1758              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 1759              		.fnstart
 1760              	.LFB1054:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1761              		.loc 2 72 0
 1762              		.cfi_startproc
 1763              		@ args = 0, pretend = 0, frame = 16
 1764              		@ frame_needed = 0, uses_anonymous_args = 0
 1765              	.LVL175:
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1766              		.loc 2 75 0
 1767 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1768              		.loc 2 72 0
 1769 0002 30B5     		push	{r4, r5, lr}
 1770              	.LCFI16:
 1771              		.cfi_def_cfa_offset 12
 1772              		.cfi_offset 4, -12
 1773              		.cfi_offset 5, -8
 1774              		.cfi_offset 14, -4
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1775              		.loc 2 75 0
 1776 0004 8380     		strh	r3, [r0, #4]	@ movhi
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1777              		.loc 2 76 0
 1778 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1779              		.loc 2 72 0
 1780 0008 0446     		mov	r4, r0
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1781              		.loc 2 76 0
 1782 000a 43EA0223 		orr	r3, r3, r2, lsl #8
 1783 000e 8380     		strh	r3, [r0, #4]	@ movhi
 1784              	.LVL176:
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1785              		.loc 2 79 0
 1786 0010 D1F80200 		ldr	r0, [r1, #2]	@ unaligned
 1787              	.LVL177:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1788              		.loc 2 72 0
 1789 0014 85B0     		sub	sp, sp, #20
 1790              	.LCFI17:
 1791              		.cfi_def_cfa_offset 32
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1792              		.loc 2 79 0
 1793 0016 0190     		str	r0, [sp, #4]	@ unaligned
 1794              	.LVL178:
 1795              	.LBB147:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1796              		.loc 2 81 0
 1797 0018 019D     		ldr	r5, [sp, #4]
 1798 001a 8A1D     		adds	r2, r1, #6
 1799 001c AB1D     		adds	r3, r5, #6
 1800              	.LVL179:
 1801              	.L93:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1802              		.loc 2 81 0 is_stmt 0 discriminator 3
 1803 001e 501A     		subs	r0, r2, r1
 1804              	.LVL180:
 1805 0020 8342     		cmp	r3, r0
 1806 0022 04D9     		bls	.L92
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 1807              		.loc 2 82 0 is_stmt 1 discriminator 2
 1808 0024 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 1809              	.LVL181:
 1810 0028 02F8020C 		strb	r0, [r2, #-2]
 1811              	.LVL182:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1812              		.loc 2 81 0 discriminator 2
 1813 002c F7E7     		b	.L93
 1814              	.LVL183:
 1815              	.L92:
 1816              	.LBE147:
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 1817              		.loc 2 84 0
 1818 002e 4A19     		adds	r2, r1, r5
 1819 0030 0020     		movs	r0, #0
 1820              	.LVL184:
 1821 0032 5071     		strb	r0, [r2, #5]
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1822              		.loc 2 85 0
 1823 0034 4A1D     		adds	r2, r1, #5
 1824 0036 A260     		str	r2, [r4, #8]
 1825              	.LVL185:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1826              		.loc 2 88 0
 1827 0038 C858     		ldr	r0, [r1, r3]	@ unaligned
 1828              	.LBB148:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1829              		.loc 2 90 0
 1830 003a 1A1D     		adds	r2, r3, #4
 1831              	.LBE148:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1832              		.loc 2 88 0
 1833 003c 0290     		str	r0, [sp, #8]	@ unaligned
 1834              	.LVL186:
 1835              	.LBB149:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1836              		.loc 2 90 0
 1837 003e 029B     		ldr	r3, [sp, #8]
 1838 0040 05F10A00 		add	r0, r5, #10
 1839 0044 1344     		add	r3, r3, r2
 1840 0046 0844     		add	r0, r0, r1
 1841              	.LVL187:
 1842              	.L95:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1843              		.loc 2 90 0 is_stmt 0 discriminator 3
 1844 0048 451A     		subs	r5, r0, r1
 1845              	.LVL188:
 1846 004a AB42     		cmp	r3, r5
 1847 004c 04D9     		bls	.L94
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 1848              		.loc 2 91 0 is_stmt 1 discriminator 2
 1849 004e 10F8015B 		ldrb	r5, [r0], #1	@ zero_extendqisi2
 1850              	.LVL189:
 1851 0052 00F8025C 		strb	r5, [r0, #-2]
 1852              	.LVL190:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1853              		.loc 2 90 0 discriminator 2
 1854 0056 F7E7     		b	.L95
 1855              	.LVL191:
 1856              	.L94:
 1857              	.LBE149:
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1858              		.loc 2 94 0
 1859 0058 013A     		subs	r2, r2, #1
 1860              	.LVL192:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 1861              		.loc 2 93 0
 1862 005a C818     		adds	r0, r1, r3
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1863              		.loc 2 94 0
 1864 005c 0A44     		add	r2, r2, r1
 1865              	.LVL193:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 1866              		.loc 2 93 0
 1867 005e 0025     		movs	r5, #0
 1868              	.LVL194:
 1869 0060 00F8015C 		strb	r5, [r0, #-1]
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1870              		.loc 2 94 0
 1871 0064 E260     		str	r2, [r4, #12]
 1872              	.LVL195:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1873              		.loc 2 97 0
 1874 0066 0068     		ldr	r0, [r0]	@ unaligned
 1875              	.LBB150:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1876              		.loc 2 99 0
 1877 0068 0433     		adds	r3, r3, #4
 1878              	.LVL196:
 1879              	.LBE150:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1880              		.loc 2 97 0
 1881 006a 0390     		str	r0, [sp, #12]	@ unaligned
 1882              	.LVL197:
 1883              	.LBB151:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1884              		.loc 2 99 0
 1885 006c 0398     		ldr	r0, [sp, #12]
 1886 006e CA18     		adds	r2, r1, r3
 1887 0070 1844     		add	r0, r0, r3
 1888              	.LVL198:
 1889              	.L97:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1890              		.loc 2 99 0 is_stmt 0 discriminator 3
 1891 0072 551A     		subs	r5, r2, r1
 1892              	.LVL199:
 1893 0074 A842     		cmp	r0, r5
 1894 0076 04D9     		bls	.L96
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 1895              		.loc 2 100 0 is_stmt 1 discriminator 2
 1896 0078 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 1897              	.LVL200:
 1898 007c 02F8025C 		strb	r5, [r2, #-2]
 1899              	.LVL201:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1900              		.loc 2 99 0 discriminator 2
 1901 0080 F7E7     		b	.L97
 1902              	.LVL202:
 1903              	.L96:
 1904              	.LBE151:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1905              		.loc 2 103 0
 1906 0082 013B     		subs	r3, r3, #1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 1907              		.loc 2 102 0
 1908 0084 0D18     		adds	r5, r1, r0
 1909              	.LVL203:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1910              		.loc 2 103 0
 1911 0086 0B44     		add	r3, r3, r1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 1912              		.loc 2 102 0
 1913 0088 0022     		movs	r2, #0
 1914              	.LVL204:
 1915 008a 05F8012C 		strb	r2, [r5, #-1]
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1916              		.loc 2 103 0
 1917 008e 2361     		str	r3, [r4, #16]
 1918              	.LVL205:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1919              		.loc 2 114 0
 1920 0090 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 1921 0092 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 1922 0094 1B04     		lsls	r3, r3, #16
 1923 0096 43EA0223 		orr	r3, r3, r2, lsl #8
 1924 009a 0A5C     		ldrb	r2, [r1, r0]	@ zero_extendqisi2
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1925              		.loc 2 117 0
 1926 009c 0430     		adds	r0, r0, #4
 1927              	.LVL206:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1928              		.loc 2 114 0
 1929 009e 1343     		orrs	r3, r3, r2
 1930 00a0 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 1931 00a2 43EA0263 		orr	r3, r3, r2, lsl #24
 1932 00a6 6361     		str	r3, [r4, #20]
 1933              	.LVL207:
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1934              		.loc 2 117 0
 1935 00a8 05B0     		add	sp, sp, #20
 1936              	.LCFI18:
 1937              		.cfi_def_cfa_offset 12
 1938              		@ sp needed
 1939 00aa 30BD     		pop	{r4, r5, pc}
 1940              		.cfi_endproc
 1941              	.LFE1054:
 1942              		.cantunwind
 1943              		.fnend
 1945              		.section	.text._ZN8std_msgs19MultiArrayDimension11deserializeEPh,"axG",%progbits,_ZN8std_msgs19Mul
 1946              		.align	1
 1947              		.weak	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 1948              		.thumb
 1949              		.thumb_func
 1951              	_ZN8std_msgs19MultiArrayDimension11deserializeEPh:
 1952              		.fnstart
 1953              	.LFB1145:
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1954              		.loc 5 47 0
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 8
 1957              		@ frame_needed = 0, uses_anonymous_args = 0
 1958              	.LVL208:
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 1959              		.loc 5 51 0
 1960 0000 0B46     		mov	r3, r1
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1961              		.loc 5 47 0
 1962 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1963              	.LCFI19:
 1964              		.cfi_def_cfa_offset 24
 1965              		.cfi_offset 4, -12
 1966              		.cfi_offset 5, -8
 1967              		.cfi_offset 14, -4
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1968              		.loc 5 47 0
 1969 0004 0246     		mov	r2, r0
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 1970              		.loc 5 51 0
 1971 0006 53F8040B 		ldr	r0, [r3], #4	@ unaligned
 1972              	.LVL209:
 1973 000a 0190     		str	r0, [sp, #4]	@ unaligned
 1974              	.LVL210:
 1975              	.LBB152:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 1976              		.loc 5 53 0
 1977 000c 0198     		ldr	r0, [sp, #4]
 1978 000e 051D     		adds	r5, r0, #4
 1979              	.LVL211:
 1980              	.L103:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 1981              		.loc 5 53 0 is_stmt 0 discriminator 3
 1982 0010 5C1A     		subs	r4, r3, r1
 1983              	.LVL212:
 1984 0012 A542     		cmp	r5, r4
 1985 0014 04D9     		bls	.L102
  54:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       }
 1986              		.loc 5 54 0 is_stmt 1 discriminator 2
 1987 0016 13F8014B 		ldrb	r4, [r3], #1	@ zero_extendqisi2
 1988              	.LVL213:
 1989 001a 03F8024C 		strb	r4, [r3, #-2]
 1990              	.LVL214:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 1991              		.loc 5 53 0 discriminator 2
 1992 001e F7E7     		b	.L103
 1993              	.LVL215:
 1994              	.L102:
 1995              	.LBE152:
  56:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->label = (char *)(inbuffer + offset-1);
 1996              		.loc 5 56 0
 1997 0020 0C18     		adds	r4, r1, r0
 1998              	.LVL216:
 1999 0022 0023     		movs	r3, #0
 2000              	.LVL217:
 2001 0024 E370     		strb	r3, [r4, #3]
  57:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
 2002              		.loc 5 57 0
 2003 0026 CB1C     		adds	r3, r1, #3
 2004 0028 5360     		str	r3, [r2, #4]
 2005              	.LVL218:
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2006              		.loc 5 59 0
 2007 002a 4B5D     		ldrb	r3, [r1, r5]	@ zero_extendqisi2
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 2008              		.loc 5 70 0
 2009 002c 0C30     		adds	r0, r0, #12
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2010              		.loc 5 59 0
 2011 002e 9360     		str	r3, [r2, #8]
  60:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2012              		.loc 5 60 0
 2013 0030 6179     		ldrb	r1, [r4, #5]	@ zero_extendqisi2
 2014              	.LVL219:
 2015 0032 43EA0123 		orr	r3, r3, r1, lsl #8
 2016 0036 9360     		str	r3, [r2, #8]
  61:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2017              		.loc 5 61 0
 2018 0038 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 2019 003a 43EA0143 		orr	r3, r3, r1, lsl #16
 2020 003e 9360     		str	r3, [r2, #8]
  62:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
 2021              		.loc 5 62 0
 2022 0040 E179     		ldrb	r1, [r4, #7]	@ zero_extendqisi2
 2023 0042 43EA0163 		orr	r3, r3, r1, lsl #24
 2024 0046 9360     		str	r3, [r2, #8]
 2025              	.LVL220:
  64:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2026              		.loc 5 64 0
 2027 0048 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 2028 004a D360     		str	r3, [r2, #12]
  65:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2029              		.loc 5 65 0
 2030 004c 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 2031 004e 43EA0123 		orr	r3, r3, r1, lsl #8
 2032 0052 D360     		str	r3, [r2, #12]
  66:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2033              		.loc 5 66 0
 2034 0054 A17A     		ldrb	r1, [r4, #10]	@ zero_extendqisi2
 2035 0056 43EA0143 		orr	r3, r3, r1, lsl #16
 2036 005a D360     		str	r3, [r2, #12]
  67:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
 2037              		.loc 5 67 0
 2038 005c E17A     		ldrb	r1, [r4, #11]	@ zero_extendqisi2
 2039 005e 43EA0163 		orr	r3, r3, r1, lsl #24
 2040 0062 D360     		str	r3, [r2, #12]
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 2041              		.loc 5 70 0
 2042 0064 03B0     		add	sp, sp, #12
 2043              	.LCFI20:
 2044              		.cfi_def_cfa_offset 12
 2045              		@ sp needed
 2046 0066 30BD     		pop	{r4, r5, pc}
 2047              		.cfi_endproc
 2048              	.LFE1145:
 2049              		.cantunwind
 2050              		.fnend
 2052              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 2053              		.align	1
 2054              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 2055              		.thumb
 2056              		.thumb_func
 2058              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 2059              		.fnstart
 2060              	.LFB1075:
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2061              		.loc 4 123 0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 8
 2064              		@ frame_needed = 0, uses_anonymous_args = 0
 2065              	.LVL221:
 2066 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2067              	.LCFI21:
 2068              		.cfi_def_cfa_offset 32
 2069              		.cfi_offset 4, -20
 2070              		.cfi_offset 5, -16
 2071              		.cfi_offset 6, -12
 2072              		.cfi_offset 7, -8
 2073              		.cfi_offset 14, -4
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 2074              		.loc 4 126 0
 2075 0002 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 2076              	.LVL222:
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2077              		.loc 4 127 0
 2078 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2079              		.loc 4 123 0
 2080 0006 0446     		mov	r4, r0
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2081              		.loc 4 127 0
 2082 0008 AB42     		cmp	r3, r5
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2083              		.loc 4 123 0
 2084 000a 0E46     		mov	r6, r1
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2085              		.loc 4 127 0
 2086 000c 04D2     		bcs	.L106
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2087              		.loc 4 128 0
 2088 000e A900     		lsls	r1, r5, #2
 2089              	.LVL223:
 2090 0010 C068     		ldr	r0, [r0, #12]
 2091              	.LVL224:
 2092 0012 FFF7FEFF 		bl	realloc
 2093              	.LVL225:
 2094 0016 E060     		str	r0, [r4, #12]
 2095              	.L106:
 2096              	.LVL226:
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 2097              		.loc 4 130 0
 2098 0018 2571     		strb	r5, [r4, #4]
 2099              	.LVL227:
 2100 001a 321D     		adds	r2, r6, #4
 2101 001c 0021     		movs	r1, #0
 2102              	.LVL228:
 2103              	.L108:
 2104              	.LBB153:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2105              		.loc 4 131 0 discriminator 3
 2106 001e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2107 0020 4F1C     		adds	r7, r1, #1
 2108 0022 C9B2     		uxtb	r1, r1
 2109 0024 8B42     		cmp	r3, r1
 2110 0026 A2EB0605 		sub	r5, r2, r6
 2111              	.LVL229:
 2112 002a 02F10402 		add	r2, r2, #4
 2113 002e 14D9     		bls	.L107
 2114              	.LVL230:
 2115              	.LBB154:
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 2116              		.loc 4 141 0 discriminator 2
 2117 0030 12F8023C 		ldrb	r3, [r2, #-2]	@ zero_extendqisi2
 2118              	.LVL231:
 2119 0034 12F8030C 		ldrb	r0, [r2, #-3]	@ zero_extendqisi2
 2120              	.LVL232:
 2121 0038 1B04     		lsls	r3, r3, #16
 2122              	.LVL233:
 2123 003a 43EA0023 		orr	r3, r3, r0, lsl #8
 2124 003e 12F8040C 		ldrb	r0, [r2, #-4]	@ zero_extendqisi2
 2125              	.LVL234:
 2126 0042 0343     		orrs	r3, r3, r0
 2127 0044 12F8010C 		ldrb	r0, [r2, #-1]	@ zero_extendqisi2
 2128 0048 43EA0063 		orr	r3, r3, r0, lsl #24
 2129 004c A360     		str	r3, [r4, #8]
 2130              	.LVL235:
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2131              		.loc 4 143 0 discriminator 2
 2132 004e A068     		ldr	r0, [r4, #8]	@ unaligned
 2133 0050 E368     		ldr	r3, [r4, #12]
 2134 0052 43F82100 		str	r0, [r3, r1, lsl #2]	@ unaligned
 2135              	.LVL236:
 2136              	.LBE154:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2137              		.loc 4 131 0 discriminator 2
 2138 0056 3946     		mov	r1, r7
 2139 0058 E1E7     		b	.L108
 2140              	.LVL237:
 2141              	.L107:
 2142              	.LBE153:
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 2143              		.loc 4 145 0
 2144 005a 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2145              	.LVL238:
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 2146              		.loc 4 146 0
 2147 005c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 2148 005e BB42     		cmp	r3, r7
 2149 0060 04D2     		bcs	.L109
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2150              		.loc 4 147 0
 2151 0062 B900     		lsls	r1, r7, #2
 2152 0064 A069     		ldr	r0, [r4, #24]
 2153 0066 FFF7FEFF 		bl	realloc
 2154              	.LVL239:
 2155 006a A061     		str	r0, [r4, #24]
 2156              	.L109:
 2157              	.LVL240:
 2158 006c 2B1D     		adds	r3, r5, #4
 2159              	.LVL241:
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 2160              		.loc 4 149 0
 2161 006e 2774     		strb	r7, [r4, #16]
 2162              	.LVL242:
 2163 0070 3344     		add	r3, r3, r6
 2164              	.LVL243:
 2165 0072 0022     		movs	r2, #0
 2166              	.LVL244:
 2167              	.L111:
 2168              	.LBB155:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2169              		.loc 4 150 0 discriminator 3
 2170 0074 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 2171 0076 571C     		adds	r7, r2, #1
 2172 0078 D2B2     		uxtb	r2, r2
 2173 007a 9142     		cmp	r1, r2
 2174 007c A3EB0605 		sub	r5, r3, r6
 2175              	.LVL245:
 2176 0080 03F10403 		add	r3, r3, #4
 2177 0084 14D9     		bls	.L110
 2178              	.LVL246:
 2179              	.LBB156:
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 2180              		.loc 4 159 0 discriminator 2
 2181 0086 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 2182 008a 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2183 008e 0904     		lsls	r1, r1, #16
 2184              	.LVL247:
 2185 0090 41EA0021 		orr	r1, r1, r0, lsl #8
 2186              	.LVL248:
 2187 0094 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2188 0098 0143     		orrs	r1, r1, r0
 2189 009a 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2190              	.LVL249:
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 2191              		.loc 4 160 0 discriminator 2
 2192 009e 41EA0061 		orr	r1, r1, r0, lsl #24
 2193 00a2 6161     		str	r1, [r4, #20]	@ float
 2194              	.LVL250:
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2195              		.loc 4 162 0 discriminator 2
 2196 00a4 6069     		ldr	r0, [r4, #20]	@ unaligned
 2197 00a6 A169     		ldr	r1, [r4, #24]
 2198 00a8 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 2199              	.LVL251:
 2200              	.LBE156:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2201              		.loc 4 150 0 discriminator 2
 2202 00ac 3A46     		mov	r2, r7
 2203 00ae E1E7     		b	.L111
 2204              	.LVL252:
 2205              	.L110:
 2206              	.LBE155:
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 2207              		.loc 4 164 0
 2208 00b0 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2209              	.LVL253:
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 2210              		.loc 4 165 0
 2211 00b2 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 2212 00b4 BB42     		cmp	r3, r7
 2213 00b6 04D2     		bcs	.L112
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2214              		.loc 4 166 0
 2215 00b8 B900     		lsls	r1, r7, #2
 2216 00ba 606A     		ldr	r0, [r4, #36]
 2217 00bc FFF7FEFF 		bl	realloc
 2218              	.LVL254:
 2219 00c0 6062     		str	r0, [r4, #36]
 2220              	.L112:
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 2221              		.loc 4 167 0
 2222 00c2 2B1D     		adds	r3, r5, #4
 2223              	.LVL255:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2224              		.loc 4 168 0
 2225 00c4 0025     		movs	r5, #0
 2226              	.LBB157:
 2227              	.LBB158:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2228              		.loc 4 176 0
 2229 00c6 AE46     		mov	lr, r5
 2230              	.LBE158:
 2231              	.LBE157:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2232              		.loc 4 168 0
 2233 00c8 2777     		strb	r7, [r4, #28]
 2234              	.LVL256:
 2235              	.L116:
 2236              	.LBB162:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2237              		.loc 4 169 0 discriminator 1
 2238 00ca 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 2239 00cc EFB2     		uxtb	r7, r5
 2240 00ce BA42     		cmp	r2, r7
 2241 00d0 19D9     		bls	.L113
 2242              	.LBB161:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2243              		.loc 4 171 0
 2244 00d2 F058     		ldr	r0, [r6, r3]	@ unaligned
 2245              	.LBB159:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2246              		.loc 4 173 0
 2247 00d4 1A1D     		adds	r2, r3, #4
 2248              	.LBE159:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2249              		.loc 4 171 0
 2250 00d6 0190     		str	r0, [sp, #4]	@ unaligned
 2251              	.LVL257:
 2252              	.LBB160:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2253              		.loc 4 173 0
 2254 00d8 019B     		ldr	r3, [sp, #4]
 2255 00da B118     		adds	r1, r6, r2
 2256 00dc 1344     		add	r3, r3, r2
 2257              	.LVL258:
 2258              	.L115:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2259              		.loc 4 173 0 is_stmt 0 discriminator 3
 2260 00de 881B     		subs	r0, r1, r6
 2261              	.LVL259:
 2262 00e0 8342     		cmp	r3, r0
 2263 00e2 04D9     		bls	.L114
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2264              		.loc 4 174 0 is_stmt 1 discriminator 2
 2265 00e4 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 2266              	.LVL260:
 2267 00e8 01F8020C 		strb	r0, [r1, #-2]
 2268              	.LVL261:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2269              		.loc 4 173 0 discriminator 2
 2270 00ec F7E7     		b	.L115
 2271              	.LVL262:
 2272              	.L114:
 2273              	.LBE160:
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2274              		.loc 4 177 0 discriminator 2
 2275 00ee 013A     		subs	r2, r2, #1
 2276              	.LVL263:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2277              		.loc 4 176 0 discriminator 2
 2278 00f0 F118     		adds	r1, r6, r3
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2279              		.loc 4 177 0 discriminator 2
 2280 00f2 3244     		add	r2, r2, r6
 2281              	.LVL264:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2282              		.loc 4 176 0 discriminator 2
 2283 00f4 01F801EC 		strb	lr, [r1, #-1]
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2284              		.loc 4 177 0 discriminator 2
 2285 00f8 2262     		str	r2, [r4, #32]
 2286              	.LVL265:
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2287              		.loc 4 179 0 discriminator 2
 2288 00fa 216A     		ldr	r1, [r4, #32]	@ unaligned
 2289 00fc 626A     		ldr	r2, [r4, #36]
 2290 00fe 0135     		adds	r5, r5, #1
 2291              	.LVL266:
 2292 0100 42F82710 		str	r1, [r2, r7, lsl #2]	@ unaligned
 2293              	.LVL267:
 2294              	.LBE161:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2295              		.loc 4 169 0 discriminator 2
 2296 0104 E1E7     		b	.L116
 2297              	.LVL268:
 2298              	.L113:
 2299              	.LBE162:
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2300              		.loc 4 182 0
 2301 0106 1846     		mov	r0, r3
 2302 0108 03B0     		add	sp, sp, #12
 2303              	.LCFI22:
 2304              		.cfi_def_cfa_offset 20
 2305              		@ sp needed
 2306 010a F0BD     		pop	{r4, r5, r6, r7, pc}
 2307              		.cfi_endproc
 2308              	.LFE1075:
 2309              		.cantunwind
 2310              		.fnend
 2312              		.section	.text._ZN8std_msgs16MultiArrayLayout11deserializeEPh,"axG",%progbits,_ZN8std_msgs16MultiA
 2313              		.align	1
 2314              		.weak	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 2315              		.thumb
 2316              		.thumb_func
 2318              	_ZN8std_msgs16MultiArrayLayout11deserializeEPh:
 2319              		.fnstart
 2320              	.LFB1152:
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2321              		.loc 6 45 0
 2322              		.cfi_startproc
 2323              		@ args = 0, pretend = 0, frame = 0
 2324              		@ frame_needed = 0, uses_anonymous_args = 0
 2325              	.LVL269:
 2326 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2327              	.LCFI23:
 2328              		.cfi_def_cfa_offset 32
 2329              		.cfi_offset 4, -32
 2330              		.cfi_offset 5, -28
 2331              		.cfi_offset 6, -24
 2332              		.cfi_offset 7, -20
 2333              		.cfi_offset 8, -16
 2334              		.cfi_offset 9, -12
 2335              		.cfi_offset 10, -8
 2336              		.cfi_offset 14, -4
  48:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       if(dim_lengthT > dim_length)
 2337              		.loc 6 48 0
 2338 0004 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 2339              	.LVL270:
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2340              		.loc 6 49 0
 2341 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2342              		.loc 6 45 0
 2343 0008 0446     		mov	r4, r0
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2344              		.loc 6 49 0
 2345 000a AB42     		cmp	r3, r5
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2346              		.loc 6 45 0
 2347 000c 0F46     		mov	r7, r1
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2348              		.loc 6 49 0
 2349 000e 04D2     		bcs	.L119
  50:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += 3;
 2350              		.loc 6 50 0
 2351 0010 2901     		lsls	r1, r5, #4
 2352              	.LVL271:
 2353 0012 8069     		ldr	r0, [r0, #24]
 2354              	.LVL272:
 2355 0014 FFF7FEFF 		bl	realloc
 2356              	.LVL273:
 2357 0018 A061     		str	r0, [r4, #24]
 2358              	.L119:
 2359              	.LVL274:
  52:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 2360              		.loc 6 52 0
 2361 001a 2571     		strb	r5, [r4, #4]
 2362              	.LVL275:
 2363 001c 0023     		movs	r3, #0
  51:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length = dim_lengthT;
 2364              		.loc 6 51 0
 2365 001e 0426     		movs	r6, #4
 2366              	.LBB163:
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2367              		.loc 6 54 0
 2368 0020 04F10808 		add	r8, r4, #8
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2369              		.loc 6 55 0
 2370 0024 04F1180A 		add	r10, r4, #24
 2371              	.LVL276:
 2372              	.L122:
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
 2373              		.loc 6 53 0 discriminator 3
 2374 0028 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 2375 002a DDB2     		uxtb	r5, r3
 2376 002c AA42     		cmp	r2, r5
 2377 002e 03F10109 		add	r9, r3, #1
 2378 0032 07EB0601 		add	r1, r7, r6
 2379 0036 0FD9     		bls	.L120
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2380              		.loc 6 54 0 discriminator 2
 2381 0038 4046     		mov	r0, r8
 2382 003a FFF7FEFF 		bl	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 2383              	.LVL277:
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2384              		.loc 6 55 0 discriminator 2
 2385 003e 4246     		mov	r2, r8
 2386 0040 A369     		ldr	r3, [r4, #24]
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2387              		.loc 6 54 0 discriminator 2
 2388 0042 0644     		add	r6, r6, r0
 2389              	.LVL278:
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2390              		.loc 6 55 0 discriminator 2
 2391 0044 03EB0513 		add	r3, r3, r5, lsl #4
 2392              	.L121:
 2393 0048 52F8041B 		ldr	r1, [r2], #4	@ unaligned
 2394 004c 5245     		cmp	r2, r10
 2395 004e 43F8041B 		str	r1, [r3], #4	@ unaligned
 2396 0052 F9D1     		bne	.L121
 2397              	.LVL279:
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
 2398              		.loc 6 53 0 discriminator 2
 2399 0054 4B46     		mov	r3, r9
 2400 0056 E7E7     		b	.L122
 2401              	.LVL280:
 2402              	.L120:
 2403              	.LBE163:
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2404              		.loc 6 57 0
 2405 0058 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 2406              	.LVL281:
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
 2407              		.loc 6 63 0
 2408 005a 301D     		adds	r0, r6, #4
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2409              		.loc 6 57 0
 2410 005c E361     		str	r3, [r4, #28]
  58:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2411              		.loc 6 58 0
 2412 005e 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 2413 0060 43EA0223 		orr	r3, r3, r2, lsl #8
 2414 0064 E361     		str	r3, [r4, #28]
  59:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2415              		.loc 6 59 0
 2416 0066 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 2417 0068 43EA0243 		orr	r3, r3, r2, lsl #16
 2418 006c E361     		str	r3, [r4, #28]
  60:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
 2419              		.loc 6 60 0
 2420 006e CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 2421 0070 43EA0263 		orr	r3, r3, r2, lsl #24
 2422 0074 E361     		str	r3, [r4, #28]
 2423              	.LVL282:
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
 2424              		.loc 6 63 0
 2425 0076 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2426              		.cfi_endproc
 2427              	.LFE1152:
 2428              		.cantunwind
 2429              		.fnend
 2431              		.section	.text._ZN8std_msgs17Float32MultiArray11deserializeEPh,"axG",%progbits,_ZN8std_msgs17Float
 2432              		.align	1
 2433              		.weak	_ZN8std_msgs17Float32MultiArray11deserializeEPh
 2434              		.thumb
 2435              		.thumb_func
 2437              	_ZN8std_msgs17Float32MultiArray11deserializeEPh:
 2438              		.fnstart
 2439              	.LFB1159:
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2440              		.loc 7 50 0
 2441              		.cfi_startproc
 2442              		@ args = 0, pretend = 0, frame = 0
 2443              		@ frame_needed = 0, uses_anonymous_args = 0
 2444              	.LVL283:
 2445 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2446              	.LCFI24:
 2447              		.cfi_def_cfa_offset 24
 2448              		.cfi_offset 3, -24
 2449              		.cfi_offset 4, -20
 2450              		.cfi_offset 5, -16
 2451              		.cfi_offset 6, -12
 2452              		.cfi_offset 7, -8
 2453              		.cfi_offset 14, -4
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2454              		.loc 7 50 0
 2455 0002 0446     		mov	r4, r0
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2456              		.loc 7 53 0
 2457 0004 0430     		adds	r0, r0, #4
 2458              	.LVL284:
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2459              		.loc 7 50 0
 2460 0006 0D46     		mov	r5, r1
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2461              		.loc 7 53 0
 2462 0008 FFF7FEFF 		bl	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 2463              	.LVL285:
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
 2464              		.loc 7 55 0
 2465 000c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
  54:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       if(data_lengthT > data_length)
 2466              		.loc 7 54 0
 2467 0010 2F5C     		ldrb	r7, [r5, r0]	@ zero_extendqisi2
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2468              		.loc 7 53 0
 2469 0012 0646     		mov	r6, r0
 2470              	.LVL286:
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
 2471              		.loc 7 55 0
 2472 0014 BB42     		cmp	r3, r7
 2473 0016 04D2     		bcs	.L125
  56:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += 3;
 2474              		.loc 7 56 0
 2475 0018 B900     		lsls	r1, r7, #2
 2476 001a E06A     		ldr	r0, [r4, #44]
 2477              	.LVL287:
 2478 001c FFF7FEFF 		bl	realloc
 2479              	.LVL288:
 2480 0020 E062     		str	r0, [r4, #44]
 2481              	.L125:
 2482              	.LVL289:
 2483 0022 331D     		adds	r3, r6, #4
 2484              	.LVL290:
  58:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
 2485              		.loc 7 58 0
 2486 0024 84F82470 		strb	r7, [r4, #36]
 2487              	.LVL291:
 2488 0028 2B44     		add	r3, r3, r5
 2489              	.LVL292:
 2490 002a 0022     		movs	r2, #0
 2491              	.LVL293:
 2492              	.L127:
 2493              	.LBB164:
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 2494              		.loc 7 59 0 discriminator 3
 2495 002c 94F82410 		ldrb	r1, [r4, #36]	@ zero_extendqisi2
 2496 0030 561C     		adds	r6, r2, #1
 2497 0032 D2B2     		uxtb	r2, r2
 2498 0034 9142     		cmp	r1, r2
 2499 0036 A3EB0500 		sub	r0, r3, r5
 2500              	.LVL294:
 2501 003a 03F10403 		add	r3, r3, #4
 2502 003e 14D9     		bls	.L126
 2503              	.LVL295:
 2504              	.LBB165:
  68:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       this->st_data = u_st_data.real;
 2505              		.loc 7 68 0 discriminator 2
 2506 0040 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 2507 0044 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2508              	.LVL296:
 2509 0048 0904     		lsls	r1, r1, #16
 2510              	.LVL297:
 2511 004a 41EA0021 		orr	r1, r1, r0, lsl #8
 2512              	.LVL298:
 2513 004e 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2514 0052 0143     		orrs	r1, r1, r0
 2515 0054 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2516              	.LVL299:
  69:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->st_data);
 2517              		.loc 7 69 0 discriminator 2
 2518 0058 41EA0061 		orr	r1, r1, r0, lsl #24
 2519 005c A162     		str	r1, [r4, #40]	@ float
 2520              	.LVL300:
  71:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
 2521              		.loc 7 71 0 discriminator 2
 2522 005e A06A     		ldr	r0, [r4, #40]	@ unaligned
 2523 0060 E16A     		ldr	r1, [r4, #44]
 2524 0062 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 2525              	.LVL301:
 2526              	.LBE165:
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 2527              		.loc 7 59 0 discriminator 2
 2528 0066 3246     		mov	r2, r6
 2529 0068 E0E7     		b	.L127
 2530              	.LVL302:
 2531              	.L126:
 2532              	.LBE164:
  74:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
 2533              		.loc 7 74 0
 2534 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2535              		.cfi_endproc
 2536              	.LFE1159:
 2537              		.cantunwind
 2538              		.fnend
 2540              		.global	__aeabi_fcmpeq
 2541              		.global	__aeabi_f2d
 2542              		.global	__aeabi_dmul
 2543              		.global	__aeabi_ddiv
 2544              		.global	__aeabi_d2f
 2545              		.global	__aeabi_fadd
 2546              		.global	__aeabi_fmul
 2547              		.global	__aeabi_fsub
 2548              		.global	__aeabi_fdiv
 2549              		.global	__aeabi_dadd
 2550              		.global	__aeabi_fcmpgt
 2551              		.global	__aeabi_fcmplt
 2552              		.text
 2553              		.align	1
 2554              		.global	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 2555              		.thumb
 2556              		.thumb_func
 2558              	_Z8motor_cbRKN12roberto_msgs10MotorStateE:
 2559              		.fnstart
 2560              	.LFB1286:
 2561              		.file 12 "src/main.cpp"
   1:src/main.cpp  **** #include <stm32f10x.h>
   2:src/main.cpp  **** 
   3:src/main.cpp  **** #include <stdio.h>
   4:src/main.cpp  **** #include <math.h>
   5:src/main.cpp  **** 
   6:src/main.cpp  **** #include "motor.h"
   7:src/main.cpp  **** #include "motorSettings.h"
   8:src/main.cpp  **** #include "led.h"
   9:src/main.cpp  **** #include "encoder.h"
  10:src/main.cpp  **** #include "stm32_time.h"
  11:src/main.cpp  **** 
  12:src/main.cpp  **** 
  13:src/main.cpp  **** #include <ros.h>
  14:src/main.cpp  **** #include <std_msgs/MultiArrayDimension.h>
  15:src/main.cpp  **** #include <std_msgs/Float32MultiArray.h>
  16:src/main.cpp  **** #include <std_msgs/Float32.h>
  17:src/main.cpp  **** #include <std_msgs/UInt8.h>
  18:src/main.cpp  **** #include <nav_msgs/Odometry.h>
  19:src/main.cpp  **** #include <sensor_msgs/Joy.h>
  20:src/main.cpp  **** #include <roberto_msgs/MotorState.h>
  21:src/main.cpp  **** #include <tf/tf.h>
  22:src/main.cpp  **** #include <tf/transform_broadcaster.h>
  23:src/main.cpp  **** #include <ros/time.h>
  24:src/main.cpp  **** 
  25:src/main.cpp  **** #define CMDMSGTIMEOUT 500 // ms
  26:src/main.cpp  **** //#define DEBUG
  27:src/main.cpp  **** 
  28:src/main.cpp  **** /* Private function prototypes -----------------------------------------------*/
  29:src/main.cpp  **** #ifdef DEBUG
  30:src/main.cpp  **** extern "C"{
  31:src/main.cpp  ****   extern void initialise_monitor_handles(void);
  32:src/main.cpp  **** }
  33:src/main.cpp  **** #else
  34:src/main.cpp  **** #define printf(...) 
  35:src/main.cpp  **** #endif
  36:src/main.cpp  **** 
  37:src/main.cpp  **** 
  38:src/main.cpp  **** 
  39:src/main.cpp  **** motor *servo_left;
  40:src/main.cpp  **** motor *servo_right;
  41:src/main.cpp  **** motor *front_right;
  42:src/main.cpp  **** motor *front_left;
  43:src/main.cpp  **** motor *rear_right;
  44:src/main.cpp  **** motor *rear_left;
  45:src/main.cpp  **** 
  46:src/main.cpp  **** float d, L;
  47:src/main.cpp  **** 
  48:src/main.cpp  **** float motorCmd[4];
  49:src/main.cpp  **** uint8_t currentMode;
  50:src/main.cpp  **** uint32_t lastMsg;
  51:src/main.cpp  **** bool initialized = false;
  52:src/main.cpp  **** 
  53:src/main.cpp  **** ros::NodeHandle nh;
  54:src/main.cpp  **** 
  55:src/main.cpp  **** __IO bool shuttingDown = false;
  56:src/main.cpp  **** __IO bool waitForServos = false;
  57:src/main.cpp  **** 
  58:src/main.cpp  **** /*void led_cb( const std_msgs::UInt8& cmd_msg){
  59:src/main.cpp  ****   if(!initialized)
  60:src/main.cpp  ****     return;
  61:src/main.cpp  ****   led_set(cmd_msg.data);
  62:src/main.cpp  **** }*/
  63:src/main.cpp  **** 
  64:src/main.cpp  **** 
  65:src/main.cpp  **** 
  66:src/main.cpp  **** void motor_cb( const roberto_msgs::MotorState& cmd_msg){
 2562              		.loc 12 66 0
 2563              		.cfi_startproc
 2564              		@ args = 0, pretend = 0, frame = 16
 2565              		@ frame_needed = 0, uses_anonymous_args = 0
 2566              	.LVL303:
 2567 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2568              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2569              	.LCFI25:
 2570              		.cfi_def_cfa_offset 36
 2571              		.cfi_offset 4, -36
 2572              		.cfi_offset 5, -32
 2573              		.cfi_offset 6, -28
 2574              		.cfi_offset 7, -24
 2575              		.cfi_offset 8, -20
 2576              		.cfi_offset 9, -16
 2577              		.cfi_offset 10, -12
 2578              		.cfi_offset 11, -8
 2579              		.cfi_offset 14, -4
  67:src/main.cpp  ****   if(!initialized)
 2580              		.loc 12 67 0
 2581 0004 8C4C     		ldr	r4, .L153+16
  66:src/main.cpp  ****   if(!initialized)
 2582              		.loc 12 66 0
 2583              		.pad #20
 2584 0006 85B0     		sub	sp, sp, #20
 2585              	.LCFI26:
 2586              		.cfi_def_cfa_offset 56
 2587              		.loc 12 67 0
 2588 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  66:src/main.cpp  ****   if(!initialized)
 2589              		.loc 12 66 0
 2590 000a 0746     		mov	r7, r0
 2591              		.loc 12 67 0
 2592 000c 002B     		cmp	r3, #0
 2593 000e 00F00581 		beq	.L128
 2594              	.LVL304:
 2595              	.LBB176:
 2596              	.LBB177:
  68:src/main.cpp  ****     return;
  69:src/main.cpp  ****   lastMsg = millis();
 2597              		.loc 12 69 0
 2598 0012 FFF7FEFF 		bl	millis
 2599              	.LVL305:
  70:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
  71:src/main.cpp  ****   if(intMode == cmd_msg.DRIVE_MODE_AUTO){
  72:src/main.cpp  **** 
  73:src/main.cpp  ****   }
  74:src/main.cpp  **** 
  75:src/main.cpp  ****   if(currentMode != intMode){
 2600              		.loc 12 75 0
 2601 0016 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
  70:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
 2602              		.loc 12 70 0
 2603 0018 97F82860 		ldrb	r6, [r7, #40]	@ zero_extendqisi2
 2604              	.LVL306:
  69:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
 2605              		.loc 12 69 0
 2606 001c 6060     		str	r0, [r4, #4]
 2607              		.loc 12 75 0
 2608 001e B342     		cmp	r3, r6
  76:src/main.cpp  ****     waitForServos = true;
 2609              		.loc 12 76 0
 2610 0020 1CBF     		itt	ne
 2611 0022 0123     		movne	r3, #1
 2612 0024 6372     		strbne	r3, [r4, #9]
 2613              	.LBB178:
  77:src/main.cpp  ****   }
  78:src/main.cpp  **** 
  79:src/main.cpp  ****   if(intMode == cmd_msg.DRIVE_MODE_PIVOT){
 2614              		.loc 12 79 0
 2615 0026 012E     		cmp	r6, #1
 2616 0028 40F0D080 		bne	.L131
 2617              	.LVL307:
 2618              	.LBB179:
 2619              	.LBB180:
  80:src/main.cpp  ****     float speedMult[2] = {1,1};
  81:src/main.cpp  ****     float angle[2] = {0, 0};
  82:src/main.cpp  ****     if (cmd_msg.heading_angle != 0){
 2620              		.loc 12 82 0
 2621 002c D7F818A0 		ldr	r10, [r7, #24]	@ float
 2622 0030 0021     		movs	r1, #0
 2623 0032 5046     		mov	r0, r10
 2624 0034 FFF7FEFF 		bl	__aeabi_fcmpeq
 2625              	.LVL308:
 2626 0038 0028     		cmp	r0, #0
 2627 003a 7FD1     		bne	.L150
 2628              	.LBB181:
  83:src/main.cpp  ****       float R = 0.05/sin(cmd_msg.heading_angle*M_PI/360);
 2629              		.loc 12 83 0
 2630 003c 5046     		mov	r0, r10
 2631 003e FFF7FEFF 		bl	__aeabi_f2d
 2632              	.LVL309:
 2633 0042 79A3     		adr	r3, .L153
 2634 0044 D3E90023 		ldrd	r2, [r3]
 2635 0048 CDE90001 		strd	r0, [sp]
 2636 004c FFF7FEFF 		bl	__aeabi_dmul
 2637              	.LVL310:
 2638 0050 0022     		movs	r2, #0
 2639 0052 7A4B     		ldr	r3, .L153+20
 2640 0054 FFF7FEFF 		bl	__aeabi_ddiv
 2641              	.LVL311:
 2642 0058 FFF7FEFF 		bl	sin
 2643              	.LVL312:
 2644 005c 0246     		mov	r2, r0
 2645 005e 0B46     		mov	r3, r1
 2646 0060 73A1     		adr	r1, .L153+8
 2647 0062 D1E90001 		ldrd	r0, [r1]
 2648 0066 FFF7FEFF 		bl	__aeabi_ddiv
 2649              	.LVL313:
 2650 006a FFF7FEFF 		bl	__aeabi_d2f
 2651              	.LVL314:
  84:src/main.cpp  ****       speedMult[0] = (2*R)/(2*R - (L/2 + d));
 2652              		.loc 12 84 0
 2653 006e 0146     		mov	r1, r0
  83:src/main.cpp  ****       float R = 0.05/sin(cmd_msg.heading_angle*M_PI/360);
 2654              		.loc 12 83 0
 2655 0070 8346     		mov	fp, r0
 2656              	.LVL315:
 2657              		.loc 12 84 0
 2658 0072 FFF7FEFF 		bl	__aeabi_fadd
 2659              	.LVL316:
 2660 0076 D4F80C80 		ldr	r8, [r4, #12]	@ float
 2661 007a 0546     		mov	r5, r0
 2662 007c 4FF07C51 		mov	r1, #1056964608
 2663 0080 4046     		mov	r0, r8
 2664 0082 FFF7FEFF 		bl	__aeabi_fmul
 2665              	.LVL317:
 2666 0086 2169     		ldr	r1, [r4, #16]	@ float
 2667 0088 FFF7FEFF 		bl	__aeabi_fadd
 2668              	.LVL318:
 2669 008c 0146     		mov	r1, r0
 2670 008e 0390     		str	r0, [sp, #12]
 2671 0090 2846     		mov	r0, r5
 2672 0092 FFF7FEFF 		bl	__aeabi_fsub
 2673              	.LVL319:
 2674 0096 0146     		mov	r1, r0
 2675 0098 2846     		mov	r0, r5
 2676 009a FFF7FEFF 		bl	__aeabi_fdiv
 2677              	.LVL320:
  85:src/main.cpp  ****       speedMult[1] = (2*R)/(2*R + (L/2 + d));
 2678              		.loc 12 85 0
 2679 009e 039B     		ldr	r3, [sp, #12]
  84:src/main.cpp  ****       speedMult[0] = (2*R)/(2*R - (L/2 + d));
 2680              		.loc 12 84 0
 2681 00a0 8146     		mov	r9, r0
 2682              	.LVL321:
 2683              		.loc 12 85 0
 2684 00a2 1946     		mov	r1, r3
 2685 00a4 2846     		mov	r0, r5
 2686              	.LVL322:
 2687 00a6 FFF7FEFF 		bl	__aeabi_fadd
 2688              	.LVL323:
 2689 00aa 0146     		mov	r1, r0
 2690 00ac 2846     		mov	r0, r5
 2691 00ae FFF7FEFF 		bl	__aeabi_fdiv
 2692              	.LVL324:
  86:src/main.cpp  ****       //angle[0] = atan(L/(B+R));   // B=L as robot is quadratic
  87:src/main.cpp  ****       angle[0] = cmd_msg.heading_angle + atan(L/(L+R));
 2693              		.loc 12 87 0
 2694 00b2 4146     		mov	r1, r8
  85:src/main.cpp  ****       speedMult[1] = (2*R)/(2*R + (L/2 + d));
 2695              		.loc 12 85 0
 2696 00b4 0390     		str	r0, [sp, #12]	@ float
 2697              	.LVL325:
 2698              		.loc 12 87 0
 2699 00b6 5846     		mov	r0, fp
 2700              	.LVL326:
 2701 00b8 FFF7FEFF 		bl	__aeabi_fadd
 2702              	.LVL327:
 2703 00bc 0146     		mov	r1, r0
 2704 00be 4046     		mov	r0, r8
 2705 00c0 FFF7FEFF 		bl	__aeabi_fdiv
 2706              	.LVL328:
 2707 00c4 FFF7FEFF 		bl	__aeabi_f2d
 2708              	.LVL329:
 2709 00c8 FFF7FEFF 		bl	atan
 2710              	.LVL330:
 2711 00cc 0246     		mov	r2, r0
 2712 00ce 0B46     		mov	r3, r1
 2713 00d0 DDE90001 		ldrd	r0, [sp]
 2714 00d4 FFF7FEFF 		bl	__aeabi_dadd
 2715              	.LVL331:
 2716 00d8 FFF7FEFF 		bl	__aeabi_d2f
 2717              	.LVL332:
  88:src/main.cpp  ****       angle[1] = cmd_msg.heading_angle + atan(L/(L-R));
 2718              		.loc 12 88 0
 2719 00dc 5946     		mov	r1, fp
  87:src/main.cpp  ****       angle[1] = cmd_msg.heading_angle + atan(L/(L-R));
 2720              		.loc 12 87 0
 2721 00de 0546     		mov	r5, r0
 2722              	.LVL333:
 2723              		.loc 12 88 0
 2724 00e0 4046     		mov	r0, r8
 2725              	.LVL334:
 2726 00e2 FFF7FEFF 		bl	__aeabi_fsub
 2727              	.LVL335:
 2728 00e6 0146     		mov	r1, r0
 2729 00e8 4046     		mov	r0, r8
 2730 00ea FFF7FEFF 		bl	__aeabi_fdiv
 2731              	.LVL336:
 2732 00ee FFF7FEFF 		bl	__aeabi_f2d
 2733              	.LVL337:
 2734 00f2 FFF7FEFF 		bl	atan
 2735              	.LVL338:
 2736 00f6 0246     		mov	r2, r0
 2737 00f8 0B46     		mov	r3, r1
 2738 00fa DDE90001 		ldrd	r0, [sp]
 2739 00fe FFF7FEFF 		bl	__aeabi_dadd
 2740              	.LVL339:
 2741 0102 FFF7FEFF 		bl	__aeabi_d2f
 2742              	.LVL340:
 2743              	.LBE181:
 2744              	.LBE180:
  89:src/main.cpp  ****     }else{
  90:src/main.cpp  ****       angle[0] = 0;
  91:src/main.cpp  ****       angle[1] = 0;
  92:src/main.cpp  ****     }
  93:src/main.cpp  **** 
  94:src/main.cpp  ****     angle[0] = angle[0] > MAX_ANGLE_PIVOT? MAX_ANGLE_PIVOT : ( angle[0] < -MAX_ANGLE_PIVOT? -MAX_AN
 2745              		.loc 12 94 0
 2746 0106 4E49     		ldr	r1, .L153+24
 2747              	.LBB183:
 2748              	.LBB182:
  88:src/main.cpp  ****     }else{
 2749              		.loc 12 88 0
 2750 0108 8046     		mov	r8, r0
 2751              	.LVL341:
 2752              	.LBE182:
 2753              	.LBE183:
 2754              		.loc 12 94 0
 2755 010a 2846     		mov	r0, r5
 2756              	.LVL342:
 2757 010c FFF7FEFF 		bl	__aeabi_fcmpgt
 2758              	.LVL343:
 2759 0110 30B9     		cbnz	r0, .L141
 2760 0112 4C49     		ldr	r1, .L153+28
 2761 0114 2846     		mov	r0, r5
 2762 0116 FFF7FEFF 		bl	__aeabi_fcmplt
 2763              	.LVL344:
 2764 011a 10B1     		cbz	r0, .L134
 2765 011c 494D     		ldr	r5, .L153+28
 2766              	.LVL345:
 2767 011e 00E0     		b	.L134
 2768              	.LVL346:
 2769              	.L141:
 2770 0120 474D     		ldr	r5, .L153+24
 2771              	.LVL347:
 2772              	.L134:
  95:src/main.cpp  ****     angle[1] = angle[1] > MAX_ANGLE_PIVOT? MAX_ANGLE_PIVOT : ( angle[1] < -MAX_ANGLE_PIVOT? -MAX_AN
 2773              		.loc 12 95 0
 2774 0122 4749     		ldr	r1, .L153+24
 2775 0124 4046     		mov	r0, r8
 2776 0126 FFF7FEFF 		bl	__aeabi_fcmpgt
 2777              	.LVL348:
 2778 012a 70B9     		cbnz	r0, .L143
 2779 012c 4549     		ldr	r1, .L153+28
 2780 012e 4046     		mov	r0, r8
 2781 0130 FFF7FEFF 		bl	__aeabi_fcmplt
 2782              	.LVL349:
 2783 0134 58B1     		cbz	r0, .L132
 2784 0136 DFF80C81 		ldr	r8, .L153+28
 2785              	.LVL350:
 2786 013a 08E0     		b	.L132
 2787              	.LVL351:
 2788              	.L150:
  80:src/main.cpp  ****     float angle[2] = {0, 0};
 2789              		.loc 12 80 0
 2790 013c 4FF07E59 		mov	r9, #1065353216
 2791              	.LBB184:
  90:src/main.cpp  ****       angle[1] = 0;
 2792              		.loc 12 90 0
 2793 0140 0025     		movs	r5, #0
 2794              	.LBE184:
  80:src/main.cpp  ****     float angle[2] = {0, 0};
 2795              		.loc 12 80 0
 2796 0142 CDF80C90 		str	r9, [sp, #12]	@ float
 2797              	.LBB185:
  91:src/main.cpp  ****     }
 2798              		.loc 12 91 0
 2799 0146 A846     		mov	r8, r5
 2800 0148 01E0     		b	.L132
 2801              	.LVL352:
 2802              	.L143:
 2803              	.LBE185:
 2804              		.loc 12 95 0
 2805 014a DFF8F480 		ldr	r8, .L153+24
 2806              	.LVL353:
 2807              	.L132:
  96:src/main.cpp  **** 
  97:src/main.cpp  ****     if(cmd_msg.heading_angle > 0){
 2808              		.loc 12 97 0
 2809 014e 0021     		movs	r1, #0
 2810 0150 5046     		mov	r0, r10
 2811 0152 FFF7FEFF 		bl	__aeabi_fcmpgt
 2812              	.LVL354:
  98:src/main.cpp  ****       servo_left->setReference(angle[0]+135);
 2813              		.loc 12 98 0
 2814 0156 D4F814A0 		ldr	r10, [r4, #20]
 2815 015a 3B49     		ldr	r1, .L153+32
  97:src/main.cpp  ****       servo_left->setReference(angle[0]+135);
 2816              		.loc 12 97 0
 2817 015c 90B1     		cbz	r0, .L151
 2818              		.loc 12 98 0
 2819 015e 2846     		mov	r0, r5
 2820 0160 FFF7FEFF 		bl	__aeabi_fadd
 2821              	.LVL355:
 2822 0164 DAF80030 		ldr	r3, [r10]
 2823 0168 0146     		mov	r1, r0
 2824 016a 5B69     		ldr	r3, [r3, #20]
 2825 016c 5046     		mov	r0, r10
 2826 016e 9847     		blx	r3
 2827              	.LVL356:
  99:src/main.cpp  ****       servo_right->setReference(-angle[1]+135);
 2828              		.loc 12 99 0
 2829 0170 4146     		mov	r1, r8
 2830 0172 3548     		ldr	r0, .L153+32
 2831 0174 FFF7FEFF 		bl	__aeabi_fsub
 2832              	.LVL357:
 2833 0178 A569     		ldr	r5, [r4, #24]
 2834 017a 0146     		mov	r1, r0
 2835 017c 2B68     		ldr	r3, [r5]
 2836 017e 2846     		mov	r0, r5
 2837 0180 5B69     		ldr	r3, [r3, #20]
 2838 0182 13E0     		b	.L152
 2839              	.L151:
 100:src/main.cpp  ****     }else{
 101:src/main.cpp  ****       servo_left->setReference(angle[1]+135);
 2840              		.loc 12 101 0
 2841 0184 4046     		mov	r0, r8
 2842 0186 FFF7FEFF 		bl	__aeabi_fadd
 2843              	.LVL358:
 2844 018a DAF80030 		ldr	r3, [r10]
 2845 018e 0146     		mov	r1, r0
 2846 0190 5B69     		ldr	r3, [r3, #20]
 2847 0192 5046     		mov	r0, r10
 2848 0194 9847     		blx	r3
 2849              	.LVL359:
 102:src/main.cpp  ****       servo_right->setReference(-angle[0]+135);
 2850              		.loc 12 102 0
 2851 0196 2946     		mov	r1, r5
 2852 0198 2B48     		ldr	r0, .L153+32
 2853 019a FFF7FEFF 		bl	__aeabi_fsub
 2854              	.LVL360:
 2855 019e D4F81880 		ldr	r8, [r4, #24]
 2856              	.LVL361:
 2857 01a2 0146     		mov	r1, r0
 2858 01a4 4046     		mov	r0, r8
 2859 01a6 D8F80030 		ldr	r3, [r8]
 2860 01aa 5B69     		ldr	r3, [r3, #20]
 2861              	.L152:
 2862 01ac 9847     		blx	r3
 2863              	.LVL362:
 103:src/main.cpp  ****     }
 104:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed*speedMult[0];
 2864              		.loc 12 104 0
 2865 01ae 3F6A     		ldr	r7, [r7, #32]	@ float
 2866              	.LVL363:
 2867 01b0 4946     		mov	r1, r9
 2868 01b2 3846     		mov	r0, r7
 2869 01b4 FFF7FEFF 		bl	__aeabi_fmul
 2870              	.LVL364:
 105:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult[1];
 2871              		.loc 12 105 0
 2872 01b8 0399     		ldr	r1, [sp, #12]	@ float
 104:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult[1];
 2873              		.loc 12 104 0
 2874 01ba 0546     		mov	r5, r0
 2875 01bc E061     		str	r0, [r4, #28]	@ float
 2876              		.loc 12 105 0
 2877 01be 3846     		mov	r0, r7
 2878 01c0 FFF7FEFF 		bl	__aeabi_fmul
 2879              	.LVL365:
 106:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed*speedMult[1];
 107:src/main.cpp  ****     motorCmd[3] = cmd_msg.speed*speedMult[0];
 2880              		.loc 12 107 0
 2881 01c4 A562     		str	r5, [r4, #40]	@ float
 105:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed*speedMult[1];
 2882              		.loc 12 105 0
 2883 01c6 2062     		str	r0, [r4, #32]	@ float
 106:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed*speedMult[1];
 2884              		.loc 12 106 0
 2885 01c8 6062     		str	r0, [r4, #36]	@ float
 2886 01ca 26E0     		b	.L138
 2887              	.LVL366:
 2888              	.L131:
 2889              	.LBE179:
 2890              	.LBB186:
 108:src/main.cpp  ****     /*angle[0] = cmd_msg.heading_angle;
 109:src/main.cpp  ****     angle[1] = cmd_msg.heading_angle;
 110:src/main.cpp  ****     servo_left->setReference(135+angle[0]);
 111:src/main.cpp  ****     servo_right->setReference(135-angle[1]);*/
 112:src/main.cpp  **** 
 113:src/main.cpp  ****   }else if(intMode == cmd_msg.DRIVE_MODE_SPIN){
 2891              		.loc 12 113 0
 2892 01cc 022E     		cmp	r6, #2
 2893 01ce 11D1     		bne	.L139
 2894              	.LVL367:
 2895              	.LBB187:
 114:src/main.cpp  ****     float h = 90;
 115:src/main.cpp  ****     servo_left->setReference(h);
 2896              		.loc 12 115 0
 2897 01d0 6069     		ldr	r0, [r4, #20]
 2898 01d2 1E49     		ldr	r1, .L153+36
 2899 01d4 0368     		ldr	r3, [r0]
 2900 01d6 5B69     		ldr	r3, [r3, #20]
 2901 01d8 9847     		blx	r3
 2902              	.LVL368:
 116:src/main.cpp  ****     servo_right->setReference(h);
 2903              		.loc 12 116 0
 2904 01da A069     		ldr	r0, [r4, #24]
 2905 01dc 1B49     		ldr	r1, .L153+36
 2906 01de 0368     		ldr	r3, [r0]
 2907 01e0 5B69     		ldr	r3, [r3, #20]
 2908 01e2 9847     		blx	r3
 2909              	.LVL369:
 117:src/main.cpp  **** 
 118:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed;
 2910              		.loc 12 118 0
 2911 01e4 3B6A     		ldr	r3, [r7, #32]	@ float
 119:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed;
 2912              		.loc 12 119 0
 2913 01e6 03F10042 		add	r2, r3, #-2147483648
 118:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed;
 2914              		.loc 12 118 0
 2915 01ea E361     		str	r3, [r4, #28]	@ float
 2916              		.loc 12 119 0
 2917 01ec 2262     		str	r2, [r4, #32]	@ float
 120:src/main.cpp  ****     motorCmd[2] = -cmd_msg.speed;
 2918              		.loc 12 120 0
 2919 01ee 6262     		str	r2, [r4, #36]	@ float
 121:src/main.cpp  ****     motorCmd[3] = cmd_msg.speed;
 2920              		.loc 12 121 0
 2921 01f0 A362     		str	r3, [r4, #40]	@ float
 2922 01f2 12E0     		b	.L138
 2923              	.LVL370:
 2924              	.L139:
 2925              	.LBE187:
 2926              	.LBB188:
 122:src/main.cpp  **** 
 123:src/main.cpp  ****   }else if(intMode == cmd_msg.DRIVE_MODE_SIDEWAYS){
 2927              		.loc 12 123 0
 2928 01f4 032E     		cmp	r6, #3
 2929 01f6 10D1     		bne	.L138
 2930              	.LVL371:
 2931              	.LBB189:
 124:src/main.cpp  ****     float h = 45;
 125:src/main.cpp  ****     servo_left->setReference(h);
 2932              		.loc 12 125 0
 2933 01f8 6069     		ldr	r0, [r4, #20]
 2934 01fa 1549     		ldr	r1, .L153+40
 2935 01fc 0368     		ldr	r3, [r0]
 2936 01fe 5B69     		ldr	r3, [r3, #20]
 2937 0200 9847     		blx	r3
 2938              	.LVL372:
 126:src/main.cpp  ****     servo_right->setReference(h);
 2939              		.loc 12 126 0
 2940 0202 A069     		ldr	r0, [r4, #24]
 2941 0204 1249     		ldr	r1, .L153+40
 2942 0206 0368     		ldr	r3, [r0]
 2943 0208 5B69     		ldr	r3, [r3, #20]
 2944 020a 9847     		blx	r3
 2945              	.LVL373:
 127:src/main.cpp  **** 
 128:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed;  //FR
 2946              		.loc 12 128 0
 2947 020c 3B6A     		ldr	r3, [r7, #32]	@ float
 129:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed; //FL
 2948              		.loc 12 129 0
 2949 020e 03F10042 		add	r2, r3, #-2147483648
 128:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed; //FL
 2950              		.loc 12 128 0
 2951 0212 E361     		str	r3, [r4, #28]	@ float
 2952              		.loc 12 129 0
 2953 0214 2262     		str	r2, [r4, #32]	@ float
 130:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed; //RL
 2954              		.loc 12 130 0
 2955 0216 6362     		str	r3, [r4, #36]	@ float
 131:src/main.cpp  ****     motorCmd[3] = -cmd_msg.speed;  //RR
 2956              		.loc 12 131 0
 2957 0218 A262     		str	r2, [r4, #40]	@ float
 2958              	.LVL374:
 2959              	.L138:
 2960              	.LBE189:
 2961              	.LBE188:
 2962              	.LBE186:
 2963              	.LBE178:
 132:src/main.cpp  ****   }
 133:src/main.cpp  ****   currentMode = intMode;
 2964              		.loc 12 133 0
 2965 021a 2672     		strb	r6, [r4, #8]
 2966              	.LVL375:
 2967              	.L128:
 2968              	.LBE177:
 2969              	.LBE176:
 134:src/main.cpp  **** }
 2970              		.loc 12 134 0
 2971 021c 05B0     		add	sp, sp, #20
 2972              	.LCFI27:
 2973              		.cfi_def_cfa_offset 36
 2974              		@ sp needed
 2975 021e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2976              	.L154:
 2977 0222 00BFAFF3 		.align	3
 2977      0080
 2978              	.L153:
 2979 0228 182D4454 		.word	1413754136
 2980 022c FB210940 		.word	1074340347
 2981 0230 9A999999 		.word	-1717986918
 2982 0234 9999A93F 		.word	1068079513
 2983 0238 00000000 		.word	.LANCHOR1
 2984 023c 00807640 		.word	1081507840
 2985 0240 00007041 		.word	1097859072
 2986 0244 000070C1 		.word	-1049624576
 2987 0248 00000743 		.word	1124532224
 2988 024c 0000B442 		.word	1119092736
 2989 0250 00003442 		.word	1110704128
 2990              		.cfi_endproc
 2991              	.LFE1286:
 2992              		.fnend
 2994              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE
 2995              		.align	1
 2996              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE
 2997              		.thumb
 2998              		.thumb_func
 3000              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:
 3001              		.fnstart
 3002              	.LFB1326:
 288:./lib/ros_lib/ros/node_handle.h **** 
 289:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 290:./lib/ros_lib/ros/node_handle.h ****        * Time functions
 291:./lib/ros_lib/ros/node_handle.h ****        */
 292:./lib/ros_lib/ros/node_handle.h **** 
 293:./lib/ros_lib/ros/node_handle.h ****       void requestSyncTime()
 294:./lib/ros_lib/ros/node_handle.h ****       {
 295:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 296:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_TIME, &t);
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 298:./lib/ros_lib/ros/node_handle.h ****       }
 299:./lib/ros_lib/ros/node_handle.h **** 
 300:./lib/ros_lib/ros/node_handle.h ****       void syncTime(uint8_t * data)
 301:./lib/ros_lib/ros/node_handle.h ****       {
 302:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 303:./lib/ros_lib/ros/node_handle.h ****         uint32_t offset = hardware_.time() - rt_time;
 304:./lib/ros_lib/ros/node_handle.h **** 
 305:./lib/ros_lib/ros/node_handle.h ****         t.deserialize(data);
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 308:./lib/ros_lib/ros/node_handle.h **** 
 309:./lib/ros_lib/ros/node_handle.h ****         this->setNow(t.data);
 310:./lib/ros_lib/ros/node_handle.h ****         last_sync_receive_time = hardware_.time();
 311:./lib/ros_lib/ros/node_handle.h ****       }
 312:./lib/ros_lib/ros/node_handle.h **** 
 313:./lib/ros_lib/ros/node_handle.h ****       Time now()
 314:./lib/ros_lib/ros/node_handle.h ****       {
 315:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 316:./lib/ros_lib/ros/node_handle.h ****         Time current_time;
 317:./lib/ros_lib/ros/node_handle.h ****         current_time.sec = ms/1000 + sec_offset;
 318:./lib/ros_lib/ros/node_handle.h ****         current_time.nsec = (ms%1000)*1000000UL + nsec_offset;
 319:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(current_time.sec, current_time.nsec);
 320:./lib/ros_lib/ros/node_handle.h ****         return current_time;
 321:./lib/ros_lib/ros/node_handle.h ****       }
 322:./lib/ros_lib/ros/node_handle.h **** 
 323:./lib/ros_lib/ros/node_handle.h ****       void setNow( Time & new_now )
 324:./lib/ros_lib/ros/node_handle.h ****       {
 325:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 326:./lib/ros_lib/ros/node_handle.h ****         sec_offset = new_now.sec - ms/1000 - 1;
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 329:./lib/ros_lib/ros/node_handle.h ****       }
 330:./lib/ros_lib/ros/node_handle.h **** 
 331:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 332:./lib/ros_lib/ros/node_handle.h ****        * Topic Management
 333:./lib/ros_lib/ros/node_handle.h ****        */
 334:./lib/ros_lib/ros/node_handle.h **** 
 335:./lib/ros_lib/ros/node_handle.h ****       /* Register a new publisher */
 336:./lib/ros_lib/ros/node_handle.h ****       bool advertise(Publisher & p)
 337:./lib/ros_lib/ros/node_handle.h ****       {
 338:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_PUBLISHERS; i++){
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 340:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 341:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 344:./lib/ros_lib/ros/node_handle.h ****           }
 345:./lib/ros_lib/ros/node_handle.h ****         }
 346:./lib/ros_lib/ros/node_handle.h ****         return false;
 347:./lib/ros_lib/ros/node_handle.h ****       }
 348:./lib/ros_lib/ros/node_handle.h **** 
 349:./lib/ros_lib/ros/node_handle.h ****       /* Register a new subscriber */
 350:./lib/ros_lib/ros/node_handle.h ****       template<typename MsgT>
 351:./lib/ros_lib/ros/node_handle.h ****       bool subscribe(Subscriber< MsgT> & s){
 352:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 357:./lib/ros_lib/ros/node_handle.h ****           }
 358:./lib/ros_lib/ros/node_handle.h ****         }
 359:./lib/ros_lib/ros/node_handle.h ****         return false;
 360:./lib/ros_lib/ros/node_handle.h ****       }
 361:./lib/ros_lib/ros/node_handle.h **** 
 362:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Server */
 363:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 364:./lib/ros_lib/ros/node_handle.h ****       bool advertiseService(ServiceServer<MReq,MRes>& srv){
 365:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 366:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 367:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 368:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 369:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 370:./lib/ros_lib/ros/node_handle.h ****             return v;
 371:./lib/ros_lib/ros/node_handle.h ****           }
 372:./lib/ros_lib/ros/node_handle.h ****         }
 373:./lib/ros_lib/ros/node_handle.h ****         return false;
 374:./lib/ros_lib/ros/node_handle.h ****       }
 375:./lib/ros_lib/ros/node_handle.h **** 
 376:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Client */
 377:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 378:./lib/ros_lib/ros/node_handle.h ****       bool serviceClient(ServiceClient<MReq, MRes>& srv){
 379:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 380:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 381:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 382:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 383:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 384:./lib/ros_lib/ros/node_handle.h ****             return v;
 385:./lib/ros_lib/ros/node_handle.h ****           }
 386:./lib/ros_lib/ros/node_handle.h ****         }
 387:./lib/ros_lib/ros/node_handle.h ****         return false;
 388:./lib/ros_lib/ros/node_handle.h ****       }
 389:./lib/ros_lib/ros/node_handle.h **** 
 390:./lib/ros_lib/ros/node_handle.h ****       void negotiateTopics()
 391:./lib/ros_lib/ros/node_handle.h ****       {
 392:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::TopicInfo ti;
 393:./lib/ros_lib/ros/node_handle.h ****         int i;
 394:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_PUBLISHERS; i++)
 395:./lib/ros_lib/ros/node_handle.h ****         {
 396:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] != 0) // non-empty slot
 397:./lib/ros_lib/ros/node_handle.h ****           {
 398:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = publishers[i]->id_;
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 404:./lib/ros_lib/ros/node_handle.h ****           }
 405:./lib/ros_lib/ros/node_handle.h ****         }
 406:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_SUBSCRIBERS; i++)
 407:./lib/ros_lib/ros/node_handle.h ****         {
 408:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] != 0) // non-empty slot
 409:./lib/ros_lib/ros/node_handle.h ****           {
 410:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = subscribers[i]->id_;
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 412:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 413:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 416:./lib/ros_lib/ros/node_handle.h ****           }
 417:./lib/ros_lib/ros/node_handle.h ****         }
 418:./lib/ros_lib/ros/node_handle.h ****         configured_ = true;
 419:./lib/ros_lib/ros/node_handle.h ****       }
 420:./lib/ros_lib/ros/node_handle.h **** 
 421:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg * msg)
 3003              		.loc 11 421 0
 3004              		.cfi_startproc
 3005              		@ args = 0, pretend = 0, frame = 16
 3006              		@ frame_needed = 0, uses_anonymous_args = 0
 3007              	.LVL376:
 3008 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3009              		.save {r4, r5, r6, r7, r8, r9, lr}
 3010              	.LCFI28:
 3011              		.cfi_def_cfa_offset 28
 3012              		.cfi_offset 4, -28
 3013              		.cfi_offset 5, -24
 3014              		.cfi_offset 6, -20
 3015              		.cfi_offset 7, -16
 3016              		.cfi_offset 8, -12
 3017              		.cfi_offset 9, -8
 3018              		.cfi_offset 14, -4
 422:./lib/ros_lib/ros/node_handle.h ****       {
 423:./lib/ros_lib/ros/node_handle.h ****         if(id >= 100 && !configured_)
 3019              		.loc 11 423 0
 3020 0004 6329     		cmp	r1, #99
 421:./lib/ros_lib/ros/node_handle.h ****       {
 3021              		.loc 11 421 0
 3022              		.pad #20
 3023 0006 85B0     		sub	sp, sp, #20
 3024              	.LCFI29:
 3025              		.cfi_def_cfa_offset 48
 421:./lib/ros_lib/ros/node_handle.h ****       {
 3026              		.loc 11 421 0
 3027 0008 0446     		mov	r4, r0
 3028 000a 0E46     		mov	r6, r1
 3029              		.loc 11 423 0
 3030 000c 03DD     		ble	.L156
 3031              		.loc 11 423 0 is_stmt 0 discriminator 1
 3032 000e 90F8F458 		ldrb	r5, [r0, #2292]	@ zero_extendqisi2
 3033 0012 002D     		cmp	r5, #0
 3034 0014 58D0     		beq	.L157
 3035              	.L156:
 424:./lib/ros_lib/ros/node_handle.h ****           return 0;
 425:./lib/ros_lib/ros/node_handle.h **** 
 426:./lib/ros_lib/ros/node_handle.h ****         /* serialize message */
 427:./lib/ros_lib/ros/node_handle.h ****         uint16_t l = msg->serialize(message_out+7);
 3036              		.loc 11 427 0 is_stmt 1
 3037 0016 1368     		ldr	r3, [r2]
 3038 0018 04F21F41 		addw	r1, r4, #1055
 3039              	.LVL377:
 3040 001c 1B68     		ldr	r3, [r3]
 3041 001e 1046     		mov	r0, r2
 3042              	.LVL378:
 3043 0020 9847     		blx	r3
 3044              	.LVL379:
 428:./lib/ros_lib/ros/node_handle.h **** 
 429:./lib/ros_lib/ros/node_handle.h ****         /* setup the header */
 430:./lib/ros_lib/ros/node_handle.h ****         message_out[0] = 0xff;
 3045              		.loc 11 430 0
 3046 0022 FF22     		movs	r2, #255
 3047 0024 84F81824 		strb	r2, [r4, #1048]
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 3048              		.loc 11 431 0
 3049 0028 FE22     		movs	r2, #254
 427:./lib/ros_lib/ros/node_handle.h **** 
 3050              		.loc 11 427 0
 3051 002a 83B2     		uxth	r3, r0
 3052              	.LVL380:
 3053              		.loc 11 431 0
 3054 002c 84F81924 		strb	r2, [r4, #1049]
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 3055              		.loc 11 432 0
 3056 0030 C2B2     		uxtb	r2, r0
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 3057              		.loc 11 433 0
 3058 0032 C0F30720 		ubfx	r0, r0, #8, #8
 3059 0036 84F81B04 		strb	r0, [r4, #1051]
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 3060              		.loc 11 434 0
 3061 003a 1044     		add	r0, r0, r2
 3062 003c C043     		mvns	r0, r0
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 3063              		.loc 11 435 0
 3064 003e 84F81D64 		strb	r6, [r4, #1053]
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 3065              		.loc 11 436 0
 3066 0042 46F30726 		sbfx	r6, r6, #8, #8
 3067              	.LVL381:
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 3068              		.loc 11 432 0
 3069 0046 84F81A24 		strb	r2, [r4, #1050]
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 3070              		.loc 11 434 0
 3071 004a 84F81C04 		strb	r0, [r4, #1052]
 3072              		.loc 11 436 0
 3073 004e 84F81E64 		strb	r6, [r4, #1054]
 3074              	.LVL382:
 3075 0052 04F21C40 		addw	r0, r4, #1052
 3076              	.LBB202:
 437:./lib/ros_lib/ros/node_handle.h **** 
 438:./lib/ros_lib/ros/node_handle.h ****         /* calculate checksum */
 439:./lib/ros_lib/ros/node_handle.h ****         int chk = 0;
 440:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 3077              		.loc 11 440 0
 3078 0056 0521     		movs	r1, #5
 3079              	.LBE202:
 439:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 3080              		.loc 11 439 0
 3081 0058 0022     		movs	r2, #0
 3082              	.LBB203:
 3083              		.loc 11 440 0
 3084 005a 9E1D     		adds	r6, r3, #6
 3085              	.LVL383:
 3086              	.L159:
 3087              		.loc 11 440 0 is_stmt 0 discriminator 3
 3088 005c B142     		cmp	r1, r6
 3089 005e 04DC     		bgt	.L158
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3090              		.loc 11 441 0 is_stmt 1 discriminator 2
 3091 0060 10F8015F 		ldrb	r5, [r0, #1]!	@ zero_extendqisi2
 440:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3092              		.loc 11 440 0 discriminator 2
 3093 0064 0131     		adds	r1, r1, #1
 3094              	.LVL384:
 3095              		.loc 11 441 0 discriminator 2
 3096 0066 2A44     		add	r2, r2, r5
 3097              	.LVL385:
 440:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3098              		.loc 11 440 0 discriminator 2
 3099 0068 F8E7     		b	.L159
 3100              	.L158:
 3101              	.LVL386:
 3102              	.LBE203:
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 443:./lib/ros_lib/ros/node_handle.h ****         message_out[l++] = 255 - (chk%256);
 3103              		.loc 11 443 0
 3104 006a D243     		mvns	r2, r2
 3105              	.LVL387:
 3106 006c 03F10806 		add	r6, r3, #8
 3107 0070 0733     		adds	r3, r3, #7
 3108              	.LVL388:
 3109 0072 B6B2     		uxth	r6, r6
 3110              	.LVL389:
 3111 0074 9BB2     		uxth	r3, r3
 3112 0076 2344     		add	r3, r3, r4
 444:./lib/ros_lib/ros/node_handle.h **** 
 445:./lib/ros_lib/ros/node_handle.h ****         if( l <= OUTPUT_SIZE ){
 3113              		.loc 11 445 0
 3114 0078 B6F5806F 		cmp	r6, #1024
 443:./lib/ros_lib/ros/node_handle.h **** 
 3115              		.loc 11 443 0
 3116 007c 83F81824 		strb	r2, [r3, #1048]
 3117              		.loc 11 445 0
 3118 0080 13D8     		bhi	.L160
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 3119              		.loc 11 446 0
 3120 0082 04F58368 		add	r8, r4, #1048
 3121 0086 3546     		mov	r5, r6
 3122              	.LVL390:
 3123 0088 4746     		mov	r7, r8
 3124              	.LBB204:
 3125              	.LBB205:
 3126              		.file 13 "./lib/ros_lib/ArduinoHardware.h"
   1:./lib/ros_lib/ArduinoHardware.h **** /* 
   2:./lib/ros_lib/ArduinoHardware.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ArduinoHardware.h ****  *
   4:./lib/ros_lib/ArduinoHardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ArduinoHardware.h ****  * All rights reserved.
   6:./lib/ros_lib/ArduinoHardware.h ****  *
   7:./lib/ros_lib/ArduinoHardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ArduinoHardware.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ArduinoHardware.h ****  * are met:
  10:./lib/ros_lib/ArduinoHardware.h ****  *
  11:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ArduinoHardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ArduinoHardware.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ArduinoHardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ArduinoHardware.h ****  *    with the distribution.
  17:./lib/ros_lib/ArduinoHardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ArduinoHardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ArduinoHardware.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ArduinoHardware.h ****  *
  21:./lib/ros_lib/ArduinoHardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ArduinoHardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ArduinoHardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ArduinoHardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ArduinoHardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ArduinoHardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ArduinoHardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ArduinoHardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ArduinoHardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ArduinoHardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ArduinoHardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ArduinoHardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ArduinoHardware.h ****  */
  34:./lib/ros_lib/ArduinoHardware.h **** 
  35:./lib/ros_lib/ArduinoHardware.h **** #ifndef ROS_ARDUINO_HARDWARE_H_
  36:./lib/ros_lib/ArduinoHardware.h **** #define ROS_ARDUINO_HARDWARE_H_
  37:./lib/ros_lib/ArduinoHardware.h **** 
  38:./lib/ros_lib/ArduinoHardware.h **** #include "stm32f10x.h"
  39:./lib/ros_lib/ArduinoHardware.h **** #include "stm32_time.h"
  40:./lib/ros_lib/ArduinoHardware.h **** #include "led.h"
  41:./lib/ros_lib/ArduinoHardware.h **** 
  42:./lib/ros_lib/ArduinoHardware.h **** #define BUFFER_SIZE 1024
  43:./lib/ros_lib/ArduinoHardware.h **** 
  44:./lib/ros_lib/ArduinoHardware.h **** 
  45:./lib/ros_lib/ArduinoHardware.h **** volatile uint8_t USART_FIFO[BUFFER_SIZE];
  46:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTIN;
  47:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTOUT;
  48:./lib/ros_lib/ArduinoHardware.h **** 
  49:./lib/ros_lib/ArduinoHardware.h **** class ArduinoHardware {
  50:./lib/ros_lib/ArduinoHardware.h ****   public:
  51:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(USART_TypeDef* io , long baud=230400){
  52:./lib/ros_lib/ArduinoHardware.h ****       iostream = io;
  53:./lib/ros_lib/ArduinoHardware.h ****       baud_ = baud;
  54:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  55:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  56:./lib/ros_lib/ArduinoHardware.h ****     }
  57:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware()
  58:./lib/ros_lib/ArduinoHardware.h ****     {
  59:./lib/ros_lib/ArduinoHardware.h ****       /* Leonardo support */
  60:./lib/ros_lib/ArduinoHardware.h ****       iostream = USART1;
  61:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 230400;
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  63:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  64:./lib/ros_lib/ArduinoHardware.h ****     }
  65:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(ArduinoHardware& h){
  66:./lib/ros_lib/ArduinoHardware.h ****       this->iostream = iostream;
  67:./lib/ros_lib/ArduinoHardware.h ****       this->baud_ = h.baud_;
  68:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  69:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  70:./lib/ros_lib/ArduinoHardware.h ****     }
  71:./lib/ros_lib/ArduinoHardware.h ****   
  72:./lib/ros_lib/ArduinoHardware.h ****     void setBaud(long baud){
  73:./lib/ros_lib/ArduinoHardware.h ****       this->baud_= baud;
  74:./lib/ros_lib/ArduinoHardware.h ****     }
  75:./lib/ros_lib/ArduinoHardware.h ****   
  76:./lib/ros_lib/ArduinoHardware.h ****     int getBaud(){return baud_;}
  77:./lib/ros_lib/ArduinoHardware.h **** 
  78:./lib/ros_lib/ArduinoHardware.h ****     void init(){
  79:./lib/ros_lib/ArduinoHardware.h ****       USART_InitTypeDef usart1_init_struct;
  80:./lib/ros_lib/ArduinoHardware.h ****       /* Bit configuration structure for GPIOA PIN9 and PIN10 */
  81:./lib/ros_lib/ArduinoHardware.h ****       GPIO_InitTypeDef gpioa_init_struct;
  82:./lib/ros_lib/ArduinoHardware.h **** 
  83:./lib/ros_lib/ArduinoHardware.h ****       /* Enalbe clock for USART1, AFIO and GPIOA */
  84:./lib/ros_lib/ArduinoHardware.h ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
  85:./lib/ros_lib/ArduinoHardware.h ****                             
  86:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Tx */
  87:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_9;
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
  91:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
  92:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_10;
  93:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  95:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
  96:./lib/ros_lib/ArduinoHardware.h **** 
  97:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 */
  98:./lib/ros_lib/ArduinoHardware.h ****       USART_Cmd(iostream, ENABLE);  
  99:./lib/ros_lib/ArduinoHardware.h ****       /* Baud rate 230400, 8-bit data, One stop bit
 100:./lib/ros_lib/ArduinoHardware.h ****       * No parity, Do both Rx and Tx, No HW flow control
 101:./lib/ros_lib/ArduinoHardware.h ****       */
 102:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_BaudRate = baud_;   
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 108:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 109:./lib/ros_lib/ArduinoHardware.h ****       USART_Init(iostream, &usart1_init_struct);
 110:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 111:./lib/ros_lib/ArduinoHardware.h ****       USART_ITConfig(iostream, USART_IT_RXNE, ENABLE);
 112:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 global interrupt */
 113:./lib/ros_lib/ArduinoHardware.h ****       NVIC_EnableIRQ(USART1_IRQn);
 114:./lib/ros_lib/ArduinoHardware.h ****     }
 115:./lib/ros_lib/ArduinoHardware.h **** 
 116:./lib/ros_lib/ArduinoHardware.h ****     int read(){
 117:./lib/ros_lib/ArduinoHardware.h ****       if(USART_CNTIN == USART_CNTOUT){
 118:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 119:./lib/ros_lib/ArduinoHardware.h ****       }
 120:./lib/ros_lib/ArduinoHardware.h ****       
 121:./lib/ros_lib/ArduinoHardware.h ****       int returnVal = USART_FIFO[USART_CNTOUT];
 122:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 123:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 124:./lib/ros_lib/ArduinoHardware.h ****     }
 125:./lib/ros_lib/ArduinoHardware.h **** 
 126:./lib/ros_lib/ArduinoHardware.h ****     void write(uint8_t* data, int length){
 127:./lib/ros_lib/ArduinoHardware.h ****       for(int i=0; i<length; i++){
 128:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 3127              		.loc 13 128 0
 3128 008a DFF84C90 		ldr	r9, .L167+8
 3129              	.LVL391:
 3130              	.L162:
 127:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 3131              		.loc 13 127 0
 3132 008e C8EB0703 		rsb	r3, r8, r7
 3133 0092 9E42     		cmp	r6, r3
 3134 0094 18DD     		ble	.L157
 3135              	.L165:
 3136              		.loc 13 128 0
 3137 0096 B9F80030 		ldrh	r3, [r9]
 3138 009a 5B06     		lsls	r3, r3, #25
 3139 009c FBD5     		bpl	.L165
 129:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 3140              		.loc 13 129 0
 3141 009e 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 3142              	.LVL392:
 3143 00a2 6068     		ldr	r0, [r4, #4]
 3144 00a4 FFF7FEFF 		bl	USART_SendData
 3145              	.LVL393:
 3146 00a8 F1E7     		b	.L162
 3147              	.LVL394:
 3148              	.L160:
 3149              	.LBE205:
 3150              	.LBE204:
 3151              	.LBB206:
 3152              	.LBB207:
 3153              	.LBB208:
 3154              	.LBB209:
 3155              	.LBB210:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 3156              		.loc 3 25 0
 3157 00aa 094B     		ldr	r3, .L167
 3158              	.LBE210:
 3159              	.LBE209:
 447:./lib/ros_lib/ros/node_handle.h ****           return l;
 448:./lib/ros_lib/ros/node_handle.h ****         }else{
 449:./lib/ros_lib/ros/node_handle.h ****           logerror("Message from device dropped: message larger than buffer.");
 450:./lib/ros_lib/ros/node_handle.h ****           return -1;
 451:./lib/ros_lib/ros/node_handle.h ****         }
 452:./lib/ros_lib/ros/node_handle.h ****       }
 453:./lib/ros_lib/ros/node_handle.h **** 
 454:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 455:./lib/ros_lib/ros/node_handle.h ****        * Logging
 456:./lib/ros_lib/ros/node_handle.h ****        */
 457:./lib/ros_lib/ros/node_handle.h **** 
 458:./lib/ros_lib/ros/node_handle.h ****     private:
 459:./lib/ros_lib/ros/node_handle.h ****       void log(char byte, const char * msg){
 460:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::Log l;
 461:./lib/ros_lib/ros/node_handle.h ****         l.level= byte;
 462:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 463:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3160              		.loc 11 463 0
 3161 00ac 01AA     		add	r2, sp, #4
 3162              	.LVL395:
 3163              	.LBB212:
 3164              	.LBB211:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 3165              		.loc 3 25 0
 3166 00ae 0193     		str	r3, [sp, #4]
 3167              	.LVL396:
 3168              	.LBE211:
 3169              	.LBE212:
 461:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 3170              		.loc 11 461 0
 3171 00b0 0323     		movs	r3, #3
 3172 00b2 8DF80830 		strb	r3, [sp, #8]
 462:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3173              		.loc 11 462 0
 3174 00b6 074B     		ldr	r3, .L167+4
 3175              		.loc 11 463 0
 3176 00b8 0721     		movs	r1, #7
 3177              	.LVL397:
 462:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3178              		.loc 11 462 0
 3179 00ba 0393     		str	r3, [sp, #12]
 3180              		.loc 11 463 0
 3181 00bc 2368     		ldr	r3, [r4]
 3182 00be 2046     		mov	r0, r4
 3183 00c0 1B68     		ldr	r3, [r3]
 3184 00c2 9847     		blx	r3
 3185              	.LVL398:
 3186              	.LBE208:
 3187              	.LBE207:
 3188              	.LBE206:
 450:./lib/ros_lib/ros/node_handle.h ****         }
 3189              		.loc 11 450 0
 3190 00c4 4FF0FF35 		mov	r5, #-1
 3191              	.LVL399:
 3192              	.L157:
 452:./lib/ros_lib/ros/node_handle.h **** 
 3193              		.loc 11 452 0
 3194 00c8 2846     		mov	r0, r5
 3195 00ca 05B0     		add	sp, sp, #20
 3196              	.LCFI30:
 3197              		.cfi_def_cfa_offset 28
 3198              		@ sp needed
 3199 00cc BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3200              	.LVL400:
 3201              	.L168:
 3202              		.align	2
 3203              	.L167:
 3204 00d0 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3205 00d4 DD010000 		.word	.LC19
 3206 00d8 00380140 		.word	1073821696
 3207              		.cfi_endproc
 3208              	.LFE1326:
 3209              		.fnend
 3211              		.section	.text._ZN3ros3Msg19serializeAvrFloat64EPhf,"axG",%progbits,_ZN3ros3Msg19serializeAvrFloat
 3212              		.align	1
 3213              		.weak	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3214              		.thumb
 3215              		.thumb_func
 3217              	_ZN3ros3Msg19serializeAvrFloat64EPhf:
 3218              		.fnstart
 3219              	.LFB1021:
 3220              		.file 14 "./lib/ros_lib/ros/msg.h"
   1:./lib/ros_lib/ros/msg.h **** /* 
   2:./lib/ros_lib/ros/msg.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/msg.h ****  *
   4:./lib/ros_lib/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/msg.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/msg.h ****  *
   7:./lib/ros_lib/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/msg.h ****  * are met:
  10:./lib/ros_lib/ros/msg.h ****  *
  11:./lib/ros_lib/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/msg.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/msg.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/msg.h ****  *
  21:./lib/ros_lib/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/msg.h ****  */
  34:./lib/ros_lib/ros/msg.h **** 
  35:./lib/ros_lib/ros/msg.h **** #ifndef _ROS_MSG_H_
  36:./lib/ros_lib/ros/msg.h **** #define _ROS_MSG_H_
  37:./lib/ros_lib/ros/msg.h **** 
  38:./lib/ros_lib/ros/msg.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/msg.h **** 
  40:./lib/ros_lib/ros/msg.h **** namespace ros {
  41:./lib/ros_lib/ros/msg.h **** 
  42:./lib/ros_lib/ros/msg.h **** /* Base Message Type */
  43:./lib/ros_lib/ros/msg.h **** class Msg
  44:./lib/ros_lib/ros/msg.h **** {
  45:./lib/ros_lib/ros/msg.h **** public:
  46:./lib/ros_lib/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  47:./lib/ros_lib/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  48:./lib/ros_lib/ros/msg.h ****   virtual const char * getType() = 0;
  49:./lib/ros_lib/ros/msg.h ****   virtual const char * getMD5() = 0;
  50:./lib/ros_lib/ros/msg.h **** 
  51:./lib/ros_lib/ros/msg.h ****   /**
  52:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  53:./lib/ros_lib/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  54:./lib/ros_lib/ros/msg.h ****    *        fields, despite AVV having no native support for double.
  55:./lib/ros_lib/ros/msg.h ****    *
  56:./lib/ros_lib/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  57:./lib/ros_lib/ros/msg.h ****    * @param[in] f value to serialize.
  58:./lib/ros_lib/ros/msg.h ****    *
  59:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  60:./lib/ros_lib/ros/msg.h ****    *
  61:./lib/ros_lib/ros/msg.h ****    */
  62:./lib/ros_lib/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
 3221              		.loc 14 62 0
 3222              		.cfi_startproc
 3223              		@ args = 0, pretend = 0, frame = 0
 3224              		@ frame_needed = 0, uses_anonymous_args = 0
 3225              	.LVL401:
 3226 0000 38B5     		push	{r3, r4, r5, lr}
 3227              	.LCFI31:
 3228              		.cfi_def_cfa_offset 16
 3229              		.cfi_offset 3, -16
 3230              		.cfi_offset 4, -12
 3231              		.cfi_offset 5, -8
 3232              		.cfi_offset 14, -4
  63:./lib/ros_lib/ros/msg.h ****   {
  64:./lib/ros_lib/ros/msg.h ****     const int32_t* val = (int32_t*) &f;
  65:./lib/ros_lib/ros/msg.h ****     int32_t exp = ((*val >> 23) & 255);
 3233              		.loc 14 65 0
 3234 0002 C1F3C753 		ubfx	r3, r1, #23, #8
 3235              	.LVL402:
  62:./lib/ros_lib/ros/msg.h ****   {
 3236              		.loc 14 62 0
 3237 0006 0546     		mov	r5, r0
 3238              		.loc 14 65 0
 3239 0008 0A46     		mov	r2, r1
  62:./lib/ros_lib/ros/msg.h ****   {
 3240              		.loc 14 62 0
 3241 000a 0846     		mov	r0, r1
 3242              	.LVL403:
  66:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 3243              		.loc 14 66 0
 3244 000c 0BB1     		cbz	r3, .L170
  67:./lib/ros_lib/ros/msg.h ****     {
  68:./lib/ros_lib/ros/msg.h ****       exp += 1023 - 127;
 3245              		.loc 14 68 0
 3246 000e 03F56073 		add	r3, r3, #896
 3247              	.LVL404:
 3248              	.L170:
  69:./lib/ros_lib/ros/msg.h ****     }
  70:./lib/ros_lib/ros/msg.h **** 
  71:./lib/ros_lib/ros/msg.h ****     int32_t sig = *val;
  72:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3249              		.loc 14 72 0
 3250 0012 0021     		movs	r1, #0
 3251              	.LVL405:
 3252 0014 2970     		strb	r1, [r5]
 3253              	.LVL406:
  73:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3254              		.loc 14 73 0
 3255 0016 6970     		strb	r1, [r5, #1]
 3256              	.LVL407:
  74:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3257              		.loc 14 74 0
 3258 0018 A970     		strb	r1, [r5, #2]
 3259              	.LVL408:
  75:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 3260              		.loc 14 75 0
 3261 001a 5101     		lsls	r1, r2, #5
 3262 001c E970     		strb	r1, [r5, #3]
 3263              	.LVL409:
  76:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 3264              		.loc 14 76 0
 3265 001e D110     		asrs	r1, r2, #3
 3266 0020 2971     		strb	r1, [r5, #4]
 3267              	.LVL410:
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 3268              		.loc 14 77 0
 3269 0022 D112     		asrs	r1, r2, #11
  78:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 3270              		.loc 14 78 0
 3271 0024 C2F3C342 		ubfx	r2, r2, #19, #4
 3272 0028 42EA0312 		orr	r2, r2, r3, lsl #4
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 3273              		.loc 14 77 0
 3274 002c 6971     		strb	r1, [r5, #5]
 3275              	.LVL411:
 3276              		.loc 14 78 0
 3277 002e AA71     		strb	r2, [r5, #6]
 3278              	.LVL412:
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
  80:./lib/ros_lib/ros/msg.h **** 
  81:./lib/ros_lib/ros/msg.h ****     // Mark negative bit as necessary.
  82:./lib/ros_lib/ros/msg.h ****     if (f < 0)
 3279              		.loc 14 82 0
 3280 0030 0021     		movs	r1, #0
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 3281              		.loc 14 79 0
 3282 0032 C3F30714 		ubfx	r4, r3, #4, #8
 3283              		.loc 14 82 0
 3284 0036 FFF7FEFF 		bl	__aeabi_fcmplt
 3285              	.LVL413:
 3286 003a 08B9     		cbnz	r0, .L171
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 3287              		.loc 14 79 0
 3288 003c EC71     		strb	r4, [r5, #7]
 3289 003e 02E0     		b	.L172
 3290              	.L171:
  83:./lib/ros_lib/ros/msg.h ****     {
  84:./lib/ros_lib/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
 3291              		.loc 14 84 0
 3292 0040 64F07F03 		orn	r3, r4, #127
 3293 0044 EB71     		strb	r3, [r5, #7]
 3294              	.L172:
  85:./lib/ros_lib/ros/msg.h ****     }
  86:./lib/ros_lib/ros/msg.h **** 
  87:./lib/ros_lib/ros/msg.h ****     return 8;
  88:./lib/ros_lib/ros/msg.h ****   }
 3295              		.loc 14 88 0
 3296 0046 0820     		movs	r0, #8
 3297 0048 38BD     		pop	{r3, r4, r5, pc}
 3298              		.cfi_endproc
 3299              	.LFE1021:
 3300              		.cantunwind
 3301              		.fnend
 3303              		.section	.text._ZNK12roberto_msgs10MotorState9serializeEPh,"axG",%progbits,_ZNK12roberto_msgs10Mot
 3304              		.align	1
 3305              		.weak	_ZNK12roberto_msgs10MotorState9serializeEPh
 3306              		.thumb
 3307              		.thumb_func
 3309              	_ZNK12roberto_msgs10MotorState9serializeEPh:
 3310              		.fnstart
 3311              	.LFB1249:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3312              		.loc 9 37 0
 3313              		.cfi_startproc
 3314              		@ args = 0, pretend = 0, frame = 0
 3315              		@ frame_needed = 0, uses_anonymous_args = 0
 3316              	.LVL414:
 3317 0000 70B5     		push	{r4, r5, r6, lr}
 3318              	.LCFI32:
 3319              		.cfi_def_cfa_offset 16
 3320              		.cfi_offset 4, -16
 3321              		.cfi_offset 5, -12
 3322              		.cfi_offset 6, -8
 3323              		.cfi_offset 14, -4
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3324              		.loc 9 37 0
 3325 0002 0546     		mov	r5, r0
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3326              		.loc 9 40 0
 3327 0004 0430     		adds	r0, r0, #4
 3328              	.LVL415:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3329              		.loc 9 37 0
 3330 0006 0E46     		mov	r6, r1
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3331              		.loc 9 40 0
 3332 0008 FFF7FEFF 		bl	_ZNK8std_msgs6Header9serializeEPh
 3333              	.LVL416:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 3334              		.loc 9 41 0
 3335 000c A969     		ldr	r1, [r5, #24]	@ float
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3336              		.loc 9 40 0
 3337 000e 0446     		mov	r4, r0
 3338              	.LVL417:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 3339              		.loc 9 41 0
 3340 0010 3018     		adds	r0, r6, r0
 3341              	.LVL418:
 3342 0012 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3343              	.LVL419:
 3344 0016 0444     		add	r4, r4, r0
 3345              	.LVL420:
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
 3346              		.loc 9 42 0
 3347 0018 E969     		ldr	r1, [r5, #28]	@ float
 3348 001a 3019     		adds	r0, r6, r4
 3349 001c FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3350              	.LVL421:
 3351 0020 0444     		add	r4, r4, r0
 3352              	.LVL422:
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
 3353              		.loc 9 43 0
 3354 0022 296A     		ldr	r1, [r5, #32]	@ float
 3355 0024 3019     		adds	r0, r6, r4
 3356 0026 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3357              	.LVL423:
 3358 002a 0444     		add	r4, r4, r0
 3359              	.LVL424:
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
 3360              		.loc 9 44 0
 3361 002c 696A     		ldr	r1, [r5, #36]	@ float
 3362 002e 3019     		adds	r0, r6, r4
 3363 0030 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3364              	.LVL425:
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3365              		.loc 9 45 0
 3366 0034 95F82830 		ldrb	r3, [r5, #40]	@ zero_extendqisi2
 3367 0038 2044     		add	r0, r0, r4
 3368              	.LVL426:
 3369 003a 3354     		strb	r3, [r6, r0]
 3370              	.LVL427:
  48:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3371              		.loc 9 48 0
 3372 003c 0130     		adds	r0, r0, #1
 3373              	.LVL428:
 3374 003e 70BD     		pop	{r4, r5, r6, pc}
 3375              		.cfi_endproc
 3376              	.LFE1249:
 3377              		.cantunwind
 3378              		.fnend
 3380              		.section	.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf,"axG",%progbits,_ZN3ros3Msg21deserializeAv
 3381              		.align	1
 3382              		.weak	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3383              		.thumb
 3384              		.thumb_func
 3386              	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf:
 3387              		.fnstart
 3388              	.LFB1022:
  89:./lib/ros_lib/ros/msg.h **** 
  90:./lib/ros_lib/ros/msg.h ****   /**
  91:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
  92:./lib/ros_lib/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
  93:./lib/ros_lib/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
  94:./lib/ros_lib/ros/msg.h ****    *
  95:./lib/ros_lib/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
  96:./lib/ros_lib/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
  97:./lib/ros_lib/ros/msg.h ****    *
  98:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  99:./lib/ros_lib/ros/msg.h ****    */
 100:./lib/ros_lib/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 3389              		.loc 14 100 0
 3390              		.cfi_startproc
 3391              		@ args = 0, pretend = 0, frame = 0
 3392              		@ frame_needed = 0, uses_anonymous_args = 0
 3393              	.LVL429:
 3394 0000 30B5     		push	{r4, r5, lr}
 3395              	.LCFI33:
 3396              		.cfi_def_cfa_offset 12
 3397              		.cfi_offset 4, -12
 3398              		.cfi_offset 5, -8
 3399              		.cfi_offset 14, -4
 101:./lib/ros_lib/ros/msg.h ****   {
 102:./lib/ros_lib/ros/msg.h ****     uint32_t* val = (uint32_t*)f;
 103:./lib/ros_lib/ros/msg.h ****     inbuffer += 3;
 104:./lib/ros_lib/ros/msg.h **** 
 105:./lib/ros_lib/ros/msg.h ****     // Copy truncated mantissa.
 106:./lib/ros_lib/ros/msg.h ****     *val = ((uint32_t)(*(inbuffer++)) >> 5 & 0x07);
 3400              		.loc 14 106 0
 3401 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 3402 0004 5B09     		lsrs	r3, r3, #5
 3403 0006 0B60     		str	r3, [r1]
 3404              	.LVL430:
 107:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 3405              		.loc 14 107 0
 3406 0008 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 3407 000a 43EAC203 		orr	r3, r3, r2, lsl #3
 3408 000e 0B60     		str	r3, [r1]
 3409              	.LVL431:
 108:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 3410              		.loc 14 108 0
 3411 0010 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 3412 0012 43EAC222 		orr	r2, r3, r2, lsl #11
 3413 0016 0A60     		str	r2, [r1]
 109:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 3414              		.loc 14 109 0
 3415 0018 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 3416 001a DB04     		lsls	r3, r3, #19
 3417 001c 03F4F003 		and	r3, r3, #7864320
 3418 0020 1343     		orrs	r3, r3, r2
 3419 0022 0B60     		str	r3, [r1]
 3420              	.LVL432:
 110:./lib/ros_lib/ros/msg.h **** 
 111:./lib/ros_lib/ros/msg.h ****     // Copy truncated exponent.
 112:./lib/ros_lib/ros/msg.h ****     uint32_t exp = ((uint32_t)(*(inbuffer++)) & 0xf0)>>4;
 113:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 3421              		.loc 14 113 0
 3422 0024 C479     		ldrb	r4, [r0, #7]	@ zero_extendqisi2
 112:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 3423              		.loc 14 112 0
 3424 0026 8579     		ldrb	r5, [r0, #6]	@ zero_extendqisi2
 3425              	.LVL433:
 3426              		.loc 14 113 0
 3427 0028 2401     		lsls	r4, r4, #4
 3428 002a 04F4FE62 		and	r2, r4, #2032
 3429              	.LVL434:
 114:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 3430              		.loc 14 114 0
 3431 002e 52EA1512 		orrs	r2, r2, r5, lsr #4
 3432              	.LVL435:
 115:./lib/ros_lib/ros/msg.h ****     {
 116:./lib/ros_lib/ros/msg.h ****       *val |= ((exp) - 1023 + 127) << 23;
 3433              		.loc 14 116 0
 3434 0032 1EBF     		ittt	ne
 3435 0034 A2F56072 		subne	r2, r2, #896
 3436              	.LVL436:
 3437 0038 43EAC253 		orrne	r3, r3, r2, lsl #23
 3438 003c 0B60     		strne	r3, [r1]
 3439              	.LVL437:
 117:./lib/ros_lib/ros/msg.h ****     }  
 118:./lib/ros_lib/ros/msg.h **** 
 119:./lib/ros_lib/ros/msg.h ****     // Copy negative sign.
 120:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0x80) << 24;
 3440              		.loc 14 120 0
 3441 003e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 121:./lib/ros_lib/ros/msg.h **** 
 122:./lib/ros_lib/ros/msg.h ****     return 8;
 123:./lib/ros_lib/ros/msg.h ****   }
 3442              		.loc 14 123 0
 3443 0040 0820     		movs	r0, #8
 3444              	.LVL438:
 120:./lib/ros_lib/ros/msg.h **** 
 3445              		.loc 14 120 0
 3446 0042 23F07F02 		bic	r2, r3, #127
 3447 0046 0B68     		ldr	r3, [r1]
 3448 0048 43EA0263 		orr	r3, r3, r2, lsl #24
 3449 004c 0B60     		str	r3, [r1]
 3450              		.loc 14 123 0
 3451 004e 30BD     		pop	{r4, r5, pc}
 3452              		.cfi_endproc
 3453              	.LFE1022:
 3454              		.cantunwind
 3455              		.fnend
 3457              		.section	.text._ZN12roberto_msgs10MotorState11deserializeEPh,"axG",%progbits,_ZN12roberto_msgs10Mo
 3458              		.align	1
 3459              		.weak	_ZN12roberto_msgs10MotorState11deserializeEPh
 3460              		.thumb
 3461              		.thumb_func
 3463              	_ZN12roberto_msgs10MotorState11deserializeEPh:
 3464              		.fnstart
 3465              	.LFB1250:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3466              		.loc 9 50 0
 3467              		.cfi_startproc
 3468              		@ args = 0, pretend = 0, frame = 0
 3469              		@ frame_needed = 0, uses_anonymous_args = 0
 3470              	.LVL439:
 3471 0000 70B5     		push	{r4, r5, r6, lr}
 3472              	.LCFI34:
 3473              		.cfi_def_cfa_offset 16
 3474              		.cfi_offset 4, -16
 3475              		.cfi_offset 5, -12
 3476              		.cfi_offset 6, -8
 3477              		.cfi_offset 14, -4
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3478              		.loc 9 50 0
 3479 0002 0546     		mov	r5, r0
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3480              		.loc 9 53 0
 3481 0004 0430     		adds	r0, r0, #4
 3482              	.LVL440:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3483              		.loc 9 50 0
 3484 0006 0E46     		mov	r6, r1
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3485              		.loc 9 53 0
 3486 0008 FFF7FEFF 		bl	_ZN8std_msgs6Header11deserializeEPh
 3487              	.LVL441:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 3488              		.loc 9 54 0
 3489 000c 05F11801 		add	r1, r5, #24
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3490              		.loc 9 53 0
 3491 0010 0446     		mov	r4, r0
 3492              	.LVL442:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 3493              		.loc 9 54 0
 3494 0012 3018     		adds	r0, r6, r0
 3495              	.LVL443:
 3496 0014 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3497              	.LVL444:
 3498 0018 0444     		add	r4, r4, r0
 3499              	.LVL445:
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
 3500              		.loc 9 55 0
 3501 001a 05F11C01 		add	r1, r5, #28
 3502 001e 3019     		adds	r0, r6, r4
 3503 0020 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3504              	.LVL446:
 3505 0024 0444     		add	r4, r4, r0
 3506              	.LVL447:
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
 3507              		.loc 9 56 0
 3508 0026 05F12001 		add	r1, r5, #32
 3509 002a 3019     		adds	r0, r6, r4
 3510 002c FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3511              	.LVL448:
 3512 0030 0444     		add	r4, r4, r0
 3513              	.LVL449:
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
 3514              		.loc 9 57 0
 3515 0032 05F12401 		add	r1, r5, #36
 3516 0036 3019     		adds	r0, r6, r4
 3517 0038 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3518              	.LVL450:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3519              		.loc 9 58 0
 3520 003c 2044     		add	r0, r0, r4
 3521              	.LVL451:
 3522 003e 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3523              		.loc 9 61 0
 3524 0040 0130     		adds	r0, r0, #1
 3525              	.LVL452:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3526              		.loc 9 58 0
 3527 0042 85F82830 		strb	r3, [r5, #40]
 3528              	.LVL453:
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3529              		.loc 9 61 0
 3530 0046 70BD     		pop	{r4, r5, r6, pc}
 3531              		.cfi_endproc
 3532              	.LFE1250:
 3533              		.cantunwind
 3534              		.fnend
 3536              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh,"axG",%progbits,_ZN3r
 3537              		.align	1
 3538              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 3539              		.thumb
 3540              		.thumb_func
 3542              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:
 3543              		.fnstart
 3544              	.LFB1331:
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 3545              		.loc 10 72 0
 3546              		.cfi_startproc
 3547              		@ args = 0, pretend = 0, frame = 0
 3548              		@ frame_needed = 0, uses_anonymous_args = 0
 3549              	.LVL454:
 3550 0000 70B5     		push	{r4, r5, r6, lr}
 3551              	.LCFI35:
 3552              		.cfi_def_cfa_offset 16
 3553              		.cfi_offset 4, -16
 3554              		.cfi_offset 5, -12
 3555              		.cfi_offset 6, -8
 3556              		.cfi_offset 14, -4
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 3557              		.loc 10 72 0
 3558 0002 0546     		mov	r5, r0
  73:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 3559              		.loc 10 73 0
 3560 0004 00F10C04 		add	r4, r0, #12
 3561 0008 2046     		mov	r0, r4
 3562              	.LVL455:
 3563 000a FFF7FEFF 		bl	_ZN12roberto_msgs10MotorState11deserializeEPh
 3564              	.LVL456:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 3565              		.loc 10 74 0
 3566 000e AB6B     		ldr	r3, [r5, #56]
 3567 0010 2046     		mov	r0, r4
  75:./lib/ros_lib/ros/subscriber.h **** 
 3568              		.loc 10 75 0
 3569 0012 BDE87040 		pop	{r4, r5, r6, lr}
 3570              	.LCFI36:
 3571              		.cfi_restore 14
 3572              		.cfi_restore 6
 3573              		.cfi_restore 5
 3574              		.cfi_restore 4
 3575              		.cfi_def_cfa_offset 0
 3576              	.LVL457:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 3577              		.loc 10 74 0
 3578 0016 1847     		bx	r3	@ indirect register sibling call
 3579              	.LVL458:
 3580              		.cfi_endproc
 3581              	.LFE1331:
 3582              		.cantunwind
 3583              		.fnend
 3585              		.section	.text._ZN3ros9Publisher7publishEPKNS_3MsgE,"axG",%progbits,_ZN3ros9Publisher7publishEPKNS
 3586              		.align	1
 3587              		.weak	_ZN3ros9Publisher7publishEPKNS_3MsgE
 3588              		.thumb
 3589              		.thumb_func
 3591              	_ZN3ros9Publisher7publishEPKNS_3MsgE:
 3592              		.fnstart
 3593              	.LFB1081:
 3594              		.file 15 "./lib/ros_lib/ros/publisher.h"
   1:./lib/ros_lib/ros/publisher.h **** /* 
   2:./lib/ros_lib/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/publisher.h ****  *
   4:./lib/ros_lib/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/publisher.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/publisher.h ****  *
   7:./lib/ros_lib/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/publisher.h ****  * are met:
  10:./lib/ros_lib/ros/publisher.h ****  *
  11:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/publisher.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/publisher.h ****  *
  21:./lib/ros_lib/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/publisher.h ****  */
  34:./lib/ros_lib/ros/publisher.h **** 
  35:./lib/ros_lib/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:./lib/ros_lib/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:./lib/ros_lib/ros/publisher.h **** 
  38:./lib/ros_lib/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/publisher.h **** #include "node_handle.h"
  40:./lib/ros_lib/ros/publisher.h **** 
  41:./lib/ros_lib/ros/publisher.h **** namespace ros {
  42:./lib/ros_lib/ros/publisher.h **** 
  43:./lib/ros_lib/ros/publisher.h ****   /* Generic Publisher */
  44:./lib/ros_lib/ros/publisher.h ****   class Publisher
  45:./lib/ros_lib/ros/publisher.h ****   {
  46:./lib/ros_lib/ros/publisher.h ****     public:
  47:./lib/ros_lib/ros/publisher.h ****       Publisher( const char * topic_name, Msg * msg, int endpoint=rosserial_msgs::TopicInfo::ID_PUB
  48:./lib/ros_lib/ros/publisher.h ****         topic_(topic_name), 
  49:./lib/ros_lib/ros/publisher.h ****         msg_(msg),
  50:./lib/ros_lib/ros/publisher.h ****         endpoint_(endpoint) {};
  51:./lib/ros_lib/ros/publisher.h **** 
  52:./lib/ros_lib/ros/publisher.h ****       int publish( const Msg * msg ) { return nh_->publish(id_, msg); };
 3595              		.loc 15 52 0
 3596              		.cfi_startproc
 3597              		@ args = 0, pretend = 0, frame = 0
 3598              		@ frame_needed = 0, uses_anonymous_args = 0
 3599              		@ link register save eliminated.
 3600              	.LVL459:
 3601 0000 C368     		ldr	r3, [r0, #12]
 3602 0002 10B4     		push	{r4}
 3603              	.LCFI37:
 3604              		.cfi_def_cfa_offset 4
 3605              		.cfi_offset 4, -4
 3606              		.loc 15 52 0
 3607 0004 1A68     		ldr	r2, [r3]
 3608 0006 1468     		ldr	r4, [r2]
 3609 0008 0A46     		mov	r2, r1
 3610 000a 8168     		ldr	r1, [r0, #8]
 3611              	.LVL460:
 3612 000c 1846     		mov	r0, r3
 3613              	.LVL461:
 3614 000e 2346     		mov	r3, r4
 3615 0010 10BC     		pop	{r4}
 3616              	.LCFI38:
 3617              		.cfi_restore 4
 3618              		.cfi_def_cfa_offset 0
 3619 0012 1847     		bx	r3
 3620              	.LVL462:
 3621              		.cfi_endproc
 3622              	.LFE1081:
 3623              		.cantunwind
 3624              		.fnend
 3626              		.section	.text._ZN15ArduinoHardware4initEv,"axG",%progbits,_ZN15ArduinoHardware4initEv,comdat
 3627              		.align	1
 3628              		.weak	_ZN15ArduinoHardware4initEv
 3629              		.thumb
 3630              		.thumb_func
 3632              	_ZN15ArduinoHardware4initEv:
 3633              		.fnstart
 3634              	.LFB1136:
  78:./lib/ros_lib/ArduinoHardware.h ****       USART_InitTypeDef usart1_init_struct;
 3635              		.loc 13 78 0
 3636              		.cfi_startproc
 3637              		@ args = 0, pretend = 0, frame = 24
 3638              		@ frame_needed = 0, uses_anonymous_args = 0
 3639              	.LVL463:
 3640 0000 70B5     		push	{r4, r5, r6, lr}
 3641              		.save {r4, r5, r6, lr}
 3642              	.LCFI39:
 3643              		.cfi_def_cfa_offset 16
 3644              		.cfi_offset 4, -16
 3645              		.cfi_offset 5, -12
 3646              		.cfi_offset 6, -8
 3647              		.cfi_offset 14, -4
 3648 0002 0446     		mov	r4, r0
 3649              		.pad #24
 3650 0004 86B0     		sub	sp, sp, #24
 3651              	.LCFI40:
 3652              		.cfi_def_cfa_offset 40
  90:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
 3653              		.loc 13 90 0
 3654 0006 214D     		ldr	r5, .L186
  84:./lib/ros_lib/ArduinoHardware.h ****                             
 3655              		.loc 13 84 0
 3656 0008 0121     		movs	r1, #1
 3657 000a 4FF48040 		mov	r0, #16384
 3658              	.LVL464:
 3659 000e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 3660              	.LVL465:
  87:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 3661              		.loc 13 87 0
 3662 0012 4FF40073 		mov	r3, #512
 3663 0016 ADF80430 		strh	r3, [sp, #4]	@ movhi
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 3664              		.loc 13 88 0
 3665 001a 0326     		movs	r6, #3
  89:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3666              		.loc 13 89 0
 3667 001c 1823     		movs	r3, #24
  90:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
 3668              		.loc 13 90 0
 3669 001e 01A9     		add	r1, sp, #4
 3670 0020 2846     		mov	r0, r5
  89:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3671              		.loc 13 89 0
 3672 0022 8DF80730 		strb	r3, [sp, #7]
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 3673              		.loc 13 88 0
 3674 0026 8DF80660 		strb	r6, [sp, #6]
  90:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
 3675              		.loc 13 90 0
 3676 002a FFF7FEFF 		bl	GPIO_Init
 3677              	.LVL466:
  92:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 3678              		.loc 13 92 0
 3679 002e 4FF48063 		mov	r3, #1024
 3680 0032 ADF80430 		strh	r3, [sp, #4]	@ movhi
  94:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3681              		.loc 13 94 0
 3682 0036 0423     		movs	r3, #4
  95:./lib/ros_lib/ArduinoHardware.h **** 
 3683              		.loc 13 95 0
 3684 0038 0DEB0301 		add	r1, sp, r3
 3685 003c 2846     		mov	r0, r5
  94:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3686              		.loc 13 94 0
 3687 003e 8DF80730 		strb	r3, [sp, #7]
  93:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 3688              		.loc 13 93 0
 3689 0042 8DF80660 		strb	r6, [sp, #6]
  95:./lib/ros_lib/ArduinoHardware.h **** 
 3690              		.loc 13 95 0
 3691 0046 FFF7FEFF 		bl	GPIO_Init
 3692              	.LVL467:
  98:./lib/ros_lib/ArduinoHardware.h ****       /* Baud rate 230400, 8-bit data, One stop bit
 3693              		.loc 13 98 0
 3694 004a 2068     		ldr	r0, [r4]
 3695 004c 0121     		movs	r1, #1
 3696 004e FFF7FEFF 		bl	USART_Cmd
 3697              	.LVL468:
 102:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 3698              		.loc 13 102 0
 3699 0052 6368     		ldr	r3, [r4, #4]
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 3700              		.loc 13 106 0
 3701 0054 0C22     		movs	r2, #12
 102:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 3702              		.loc 13 102 0
 3703 0056 0293     		str	r3, [sp, #8]
 109:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 3704              		.loc 13 109 0
 3705 0058 02A9     		add	r1, sp, #8
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 3706              		.loc 13 103 0
 3707 005a 0023     		movs	r3, #0
 109:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 3708              		.loc 13 109 0
 3709 005c 2068     		ldr	r0, [r4]
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 3710              		.loc 13 103 0
 3711 005e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 3712              		.loc 13 104 0
 3713 0062 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 3714              		.loc 13 105 0
 3715 0066 ADF81030 		strh	r3, [sp, #16]	@ movhi
 107:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 3716              		.loc 13 107 0
 3717 006a ADF81430 		strh	r3, [sp, #20]	@ movhi
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 3718              		.loc 13 106 0
 3719 006e ADF81220 		strh	r2, [sp, #18]	@ movhi
 109:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 3720              		.loc 13 109 0
 3721 0072 FFF7FEFF 		bl	USART_Init
 3722              	.LVL469:
 111:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 global interrupt */
 3723              		.loc 13 111 0
 3724 0076 0122     		movs	r2, #1
 3725 0078 40F22551 		movw	r1, #1317
 3726 007c 2068     		ldr	r0, [r4]
 3727 007e FFF7FEFF 		bl	USART_ITConfig
 3728              	.LVL470:
 3729              	.LBB213:
 3730              	.LBB214:
 3731              		.file 16 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
   1:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**************************************************************************//**
   2:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @file     core_cm3.h
   3:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @version  V1.30
   5:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @date     30. October 2009
   6:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
   7:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @note
   8:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  10:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  11:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  15:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  16:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  22:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
  23:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  24:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CORE_H__
  26:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  27:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  29:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 10: \n
  31:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  34:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 530: \n
  35:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     return(__regBasePri); \n
  36:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * . 
  38:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 550: \n
  39:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  42:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 754: \n
  43:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  46:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 750: \n
  47:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  50:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 528: \n
  51:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  54:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 751: \n
  55:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  58:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  60:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  61:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  62:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -save */
  63:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e10  */
  64:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e530 */
  65:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e550 */
  66:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e754 */
  67:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e750 */
  68:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e528 */
  69:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e751 */
  70:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  71:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  72:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - CMSIS version number
  75:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
  78:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  79:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  80:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
  81:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  extern "C" {
  82:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif 
  83:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  84:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  88:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  90:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  92:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__ICCARM__)
  93:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
  95:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  96:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  97:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * IO definitions
 106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
 111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                 Register Abstraction
 122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  @{
 125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
 126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }  NVIC_Type;                                               
 148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SCB_Type;                                                
 177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                                      
 314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for SysTick
 363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SysTick_Type;
 372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  union  
 413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   {
 414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } ITM_Type;                                                
 445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 505:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0;
 506:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 510:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1;
 511:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 512:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } InterruptType_Type;
 513:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 514:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 518:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 522:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 525:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 529:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 530:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 534:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 535:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 536:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 537:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } MPU_Type;                                                
 549:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 550:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Type Register */
 551:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 554:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 557:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 560:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Control Register */
 561:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 564:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 567:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 570:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Number Register */
 571:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 574:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Base Address Register */
 575:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 578:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 581:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 584:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 588:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 591:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 594:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 597:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 600:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 603:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 606:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 609:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 612:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 614:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 615:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 616:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 619:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 620:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 621:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 622:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } CoreDebug_Type;
 627:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 628:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 632:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 635:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 638:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 641:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 644:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 647:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 650:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 653:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 656:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 659:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 662:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 665:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 669:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 672:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 676:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 679:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 682:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 685:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 688:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 691:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 694:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 697:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 700:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 703:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 706:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 709:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 713:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 714:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 722:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 729:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 733:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 734:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 736:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 737:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 738:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 740:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 741:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 745:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 749:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 753:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 757:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 758:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 759:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 760:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 762:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ARM armcc specific functions */
 764:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 765:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 768:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                             __nop
 769:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFI                             __wfi
 770:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFE                             __wfe
 771:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __SEV                             __sev
 772:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __REV                             __rev
 776:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __RBIT                            __rbit
 777:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 784:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 785:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 790:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 791:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 792:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 794:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
 795:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 796:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
 797:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 798:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 800:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 801:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 803:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 805:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 808:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 810:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 811:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 813:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
 814:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 815:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
 817:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 818:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 820:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 821:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 823:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 825:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 828:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 830:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 831:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 833:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 834:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 835:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 836:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 838:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 840:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 841:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 843:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 844:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 845:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 846:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 848:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 850:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 851:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 853:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 854:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 856:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 858:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __CLREX(void);
 859:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 860:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 861:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 863:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 864:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 865:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 866:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 867:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 869:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 870:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 872:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 873:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 874:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 875:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 876:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 878:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 879:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 881:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 882:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 883:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 885:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 887:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 888:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 890:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   priMask  PriMask
 891:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 892:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 894:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 896:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 897:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 899:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 900:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 901:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 902:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 903:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 905:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 906:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 908:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask faultMask value
 909:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 910:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
 911:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 912:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 914:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 915:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
 916:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
 917:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
 918:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 919:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
 920:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 921:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 923:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 924:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
 925:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 926:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
 927:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 928:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
 929:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 930:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 932:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 934:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 935:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 937:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 939:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CLREX                           __clrex
 940:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 941:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 942:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 944:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 945:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 946:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 947:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 948:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 950:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regBasePri);
 952:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 953:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 954:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 955:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 957:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 958:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 959:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 960:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 961:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 963:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 966:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 967:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 968:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 970:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 971:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 972:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 974:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 976:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regPriMask);
 978:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 979:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 980:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 981:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 983:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
 984:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 985:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 987:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 989:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regPriMask = (priMask);
 991:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 992:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 993:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 994:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 996:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 997:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 998:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 999:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1000:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1002:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regFaultMask);
1004:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1005:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1006:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1007:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1009:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1011:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1012:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1013:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1015:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1018:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1019:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1020:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1021:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1022:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
1023:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1024:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1025:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1026:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1028:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regControl);
1030:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1031:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1032:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1033:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1034:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1035:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1036:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1037:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1038:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1039:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1041:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regControl = control;
1043:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1044:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1045:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1047:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1048:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1049:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* IAR iccarm specific functions */
1051:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1052:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1055:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1058:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1064:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1076:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1077:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1078:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1080:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1081:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1082:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1083:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1084:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1086:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1087:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1089:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1091:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1094:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1096:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1097:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1099:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* GNU gcc specific functions */
1203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
1261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
1263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
1265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
1270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
1272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
1274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
1281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
1290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
1299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
1301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** * 
1316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** *  @return Control value
1317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in integer value
1338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* TASKING carm specific functions */
1437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*
1439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Including the CMSIS ones.
1442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
1445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   Core  Function Interface containing:
1449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core NVIC Functions
1450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core SysTick Functions
1451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core Reset Functions
1452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
1453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@{*/
1454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t reg_value;
1471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   
1473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return priority grouping field 
1485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 3732              		.loc 16 1504 0
 3733 0082 034B     		ldr	r3, .L186+4
 3734 0084 2022     		movs	r2, #32
 3735 0086 5A60     		str	r2, [r3, #4]
 3736              	.LVL471:
 3737              	.LBE214:
 3738              	.LBE213:
 114:./lib/ros_lib/ArduinoHardware.h **** 
 3739              		.loc 13 114 0
 3740 0088 06B0     		add	sp, sp, #24
 3741              	.LCFI41:
 3742              		.cfi_def_cfa_offset 16
 3743              		@ sp needed
 3744 008a 70BD     		pop	{r4, r5, r6, pc}
 3745              	.LVL472:
 3746              	.L187:
 3747              		.align	2
 3748              	.L186:
 3749 008c 00080140 		.word	1073809408
 3750 0090 00E100E0 		.word	-536813312
 3751              		.cfi_endproc
 3752              	.LFE1136:
 3753              		.fnend
 3755              		.text
 3756              		.align	1
 3757              		.global	USART1_IRQHandler
 3758              		.thumb
 3759              		.thumb_func
 3761              	USART1_IRQHandler:
 3762              		.fnstart
 3763              	.LFB1140:
 130:./lib/ros_lib/ArduinoHardware.h ****       }
 131:./lib/ros_lib/ArduinoHardware.h ****     }
 132:./lib/ros_lib/ArduinoHardware.h **** 
 133:./lib/ros_lib/ArduinoHardware.h ****     uint32_t time(){
 134:./lib/ros_lib/ArduinoHardware.h ****       return millis();
 135:./lib/ros_lib/ArduinoHardware.h ****     }
 136:./lib/ros_lib/ArduinoHardware.h **** 
 137:./lib/ros_lib/ArduinoHardware.h ****   protected:
 138:./lib/ros_lib/ArduinoHardware.h ****     USART_TypeDef* iostream;
 139:./lib/ros_lib/ArduinoHardware.h ****     long baud_;
 140:./lib/ros_lib/ArduinoHardware.h **** 
 141:./lib/ros_lib/ArduinoHardware.h **** };
 142:./lib/ros_lib/ArduinoHardware.h **** 
 143:./lib/ros_lib/ArduinoHardware.h **** 
 144:./lib/ros_lib/ArduinoHardware.h **** 
 145:./lib/ros_lib/ArduinoHardware.h **** extern "C"{
 146:./lib/ros_lib/ArduinoHardware.h ****   void USART1_IRQHandler(void){
 3764              		.loc 13 146 0
 3765              		.cfi_startproc
 3766              		@ args = 0, pretend = 0, frame = 0
 3767              		@ frame_needed = 0, uses_anonymous_args = 0
 3768 0254 38B5     		push	{r3, r4, r5, lr}
 3769              		.save {r3, r4, r5, lr}
 3770              	.LCFI42:
 3771              		.cfi_def_cfa_offset 16
 3772              		.cfi_offset 3, -16
 3773              		.cfi_offset 4, -12
 3774              		.cfi_offset 5, -8
 3775              		.cfi_offset 14, -4
 147:./lib/ros_lib/ArduinoHardware.h **** 
 148:./lib/ros_lib/ArduinoHardware.h ****     if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET && USART_CNTIN != (( USART_CNTOUT - 1 + BU
 3776              		.loc 13 148 0
 3777 0256 40F22551 		movw	r1, #1317
 3778 025a 1048     		ldr	r0, .L195
 3779 025c FFF7FEFF 		bl	USART_GetITStatus
 3780              	.LVL473:
 3781 0260 40B1     		cbz	r0, .L189
 3782              		.loc 13 148 0 is_stmt 0 discriminator 1
 3783 0262 0F4C     		ldr	r4, .L195+4
 3784 0264 E36A     		ldr	r3, [r4, #44]
 3785 0266 226B     		ldr	r2, [r4, #48]
 3786 0268 03F2FF33 		addw	r3, r3, #1023
 3787 026c C3F30903 		ubfx	r3, r3, #0, #10
 3788 0270 9342     		cmp	r3, r2
 3789 0272 04D1     		bne	.L190
 3790              	.L189:
 149:./lib/ros_lib/ArduinoHardware.h **** 
 150:./lib/ros_lib/ArduinoHardware.h ****       USART_FIFO[USART_CNTIN] = (uint8_t)USART_ReceiveData(USART1);
 151:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 152:./lib/ros_lib/ArduinoHardware.h ****     }else{
 153:./lib/ros_lib/ArduinoHardware.h ****       // Should NEVER reach this point!
 154:./lib/ros_lib/ArduinoHardware.h ****       (void)USART_ReceiveData(USART1);  // Clear interupt flag by reading byte
 155:./lib/ros_lib/ArduinoHardware.h ****     }
 156:./lib/ros_lib/ArduinoHardware.h ****   }   
 3791              		.loc 13 156 0 is_stmt 1
 3792 0274 BDE83840 		pop	{r3, r4, r5, lr}
 3793              	.LCFI43:
 3794              		.cfi_remember_state
 3795              		.cfi_restore 14
 3796              		.cfi_restore 5
 3797              		.cfi_restore 4
 3798              		.cfi_restore 3
 3799              		.cfi_def_cfa_offset 0
 154:./lib/ros_lib/ArduinoHardware.h ****     }
 3800              		.loc 13 154 0
 3801 0278 0848     		ldr	r0, .L195
 3802 027a FFF7FEBF 		b	USART_ReceiveData
 3803              	.LVL474:
 3804              	.L190:
 3805              	.LCFI44:
 3806              		.cfi_restore_state
 150:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 3807              		.loc 13 150 0
 3808 027e 0748     		ldr	r0, .L195
 3809 0280 256B     		ldr	r5, [r4, #48]
 3810 0282 FFF7FEFF 		bl	USART_ReceiveData
 3811              	.LVL475:
 3812 0286 2544     		add	r5, r5, r4
 3813 0288 C0B2     		uxtb	r0, r0
 3814 028a 85F83400 		strb	r0, [r5, #52]
 151:./lib/ros_lib/ArduinoHardware.h ****     }else{
 3815              		.loc 13 151 0
 3816 028e 236B     		ldr	r3, [r4, #48]
 3817 0290 0133     		adds	r3, r3, #1
 3818 0292 C3F30903 		ubfx	r3, r3, #0, #10
 3819 0296 2363     		str	r3, [r4, #48]
 3820 0298 38BD     		pop	{r3, r4, r5, pc}
 3821              	.L196:
 3822 029a 00BF     		.align	2
 3823              	.L195:
 3824 029c 00380140 		.word	1073821696
 3825 02a0 00000000 		.word	.LANCHOR1
 3826              		.cfi_endproc
 3827              	.LFE1140:
 3828              		.fnend
 3830              		.align	1
 3831              		.global	_Z6readerN8std_msgs17Float32MultiArrayE
 3832              		.thumb
 3833              		.thumb_func
 3835              	_Z6readerN8std_msgs17Float32MultiArrayE:
 3836              		.fnstart
 3837              	.LFB1287:
 135:src/main.cpp  **** 
 136:src/main.cpp  **** float reader(std_msgs::Float32MultiArray msg){
 3838              		.loc 12 136 0
 3839              		.cfi_startproc
 3840              		@ args = 0, pretend = 0, frame = 0
 3841              		@ frame_needed = 0, uses_anonymous_args = 0
 3842              	.LVL476:
 3843 02a4 10B5     		push	{r4, lr}
 3844              	.LCFI45:
 3845              		.cfi_def_cfa_offset 8
 3846              		.cfi_offset 4, -8
 3847              		.cfi_offset 14, -4
 137:src/main.cpp  ****   //printf("1:%d", (int)(msg.data[0]*1000));
 138:src/main.cpp  ****   //printf("2:%d\r\n", (int)(msg.data[1]*1000));
 139:src/main.cpp  ****   //printf("3:%d\r\n", (int)(msg.data[2]*1000));
 140:src/main.cpp  ****   return msg.data[0] + msg.data[1] + msg.data[2];
 3848              		.loc 12 140 0
 3849 02a6 C46A     		ldr	r4, [r0, #44]
 3850 02a8 6168     		ldr	r1, [r4, #4]	@ float
 3851 02aa 2068     		ldr	r0, [r4]	@ float
 3852              	.LVL477:
 3853 02ac FFF7FEFF 		bl	__aeabi_fadd
 3854              	.LVL478:
 3855 02b0 A168     		ldr	r1, [r4, #8]	@ float
 3856 02b2 FFF7FEFF 		bl	__aeabi_fadd
 3857              	.LVL479:
 141:src/main.cpp  **** }
 3858              		.loc 12 141 0
 3859 02b6 10BD     		pop	{r4, pc}
 3860              		.cfi_endproc
 3861              	.LFE1287:
 3862              		.cantunwind
 3863              		.fnend
 3865              		.align	1
 3866              		.global	EXTI2_IRQHandler
 3867              		.thumb
 3868              		.thumb_func
 3870              	EXTI2_IRQHandler:
 3871              		.fnstart
 3872              	.LFB1289:
 142:src/main.cpp  **** 
 143:src/main.cpp  **** 
 144:src/main.cpp  **** ros::Subscriber<roberto_msgs::MotorState> motor_sub("throttled_joy_vel", &motor_cb);
 145:src/main.cpp  **** //ros::Subscriber<sensor_msgs::Joy> motor_sub("joy", &motor_cb);
 146:src/main.cpp  **** //ros::Subscriber<std_msgs::UInt8> led_sub("led", &led_cb);
 147:src/main.cpp  **** 
 148:src/main.cpp  **** //geometry_msgs::TransformStamped odom_trans;
 149:src/main.cpp  **** //tf::TransformBroadcaster odom_broadcaster;
 150:src/main.cpp  **** 
 151:src/main.cpp  **** 
 152:src/main.cpp  **** /*nav_msgs::Odometry odom;
 153:src/main.cpp  **** ros::Publisher odom_pub("odom", &odom);*/
 154:src/main.cpp  **** 
 155:src/main.cpp  **** std_msgs::Float32MultiArray debug_msg;
 156:src/main.cpp  **** ros::Publisher debug_pub("debug", &debug_msg);
 157:src/main.cpp  **** 
 158:src/main.cpp  **** std_msgs::Float32MultiArray odom_msg;
 159:src/main.cpp  **** ros::Publisher odom_pub("odom_vel", &odom_msg);
 160:src/main.cpp  **** 
 161:src/main.cpp  **** int main(){
 162:src/main.cpp  ****   #ifdef DEBUG
 163:src/main.cpp  ****   initialise_monitor_handles(); /* initialize handles */
 164:src/main.cpp  ****   #endif
 165:src/main.cpp  ****   /* System Clocks Configuration */
 166:src/main.cpp  ****   RCC_Configuration();
 167:src/main.cpp  ****   SysTick_Init();
 168:src/main.cpp  **** 
 169:src/main.cpp  ****   GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
 170:src/main.cpp  ****   I2C1_Init();
 171:src/main.cpp  ****   DEBUG_Init();
 172:src/main.cpp  ****   SHUTDOWN_Init();
 173:src/main.cpp  ****   LED_Init();
 174:src/main.cpp  **** 
 175:src/main.cpp  ****   
 176:src/main.cpp  **** 
 177:src/main.cpp  **** 
 178:src/main.cpp  ****   nh.initNode();
 179:src/main.cpp  **** 
 180:src/main.cpp  **** 
 181:src/main.cpp  ****   nh.subscribe(motor_sub);
 182:src/main.cpp  ****   //nh.subscribe(led_sub);
 183:src/main.cpp  ****   nh.advertise(odom_pub);
 184:src/main.cpp  ****   nh.advertise(debug_pub);
 185:src/main.cpp  ****   //odom_broadcaster.init(nh);
 186:src/main.cpp  **** 
 187:src/main.cpp  ****   /*while(!nh.connected()){
 188:src/main.cpp  ****     nh.spinOnce();
 189:src/main.cpp  ****   }*/
 190:src/main.cpp  **** 
 191:src/main.cpp  ****   shuttingDown = false;
 192:src/main.cpp  **** 
 193:src/main.cpp  ****   
 194:src/main.cpp  ****   float FF;
 195:src/main.cpp  ****   //if(!nh.getParam("serial_node/FF", &FF, 1)){
 196:src/main.cpp  ****     FF = 3200;
 197:src/main.cpp  ****   //}
 198:src/main.cpp  ****   float KP;
 199:src/main.cpp  ****   //if(!nh.getParam("serial_node/KP", &KP, 1)){
 200:src/main.cpp  ****     KP = 3000;
 201:src/main.cpp  ****   //}
 202:src/main.cpp  ****   float KI;
 203:src/main.cpp  ****   //if(!nh.getParam("serial_node/KI", &KI, 1)){
 204:src/main.cpp  ****     KI = 2000;
 205:src/main.cpp  ****   //}
 206:src/main.cpp  ****   float KD;
 207:src/main.cpp  ****   //if(!nh.getParam("serial_node/KD", &KD, 1)){
 208:src/main.cpp  ****     KD = 40;
 209:src/main.cpp  ****   //}
 210:src/main.cpp  **** 
 211:src/main.cpp  **** 
 212:src/main.cpp  ****   float integralSaturation;
 213:src/main.cpp  ****   //if(!nh.getParam("serial_node/integralSaturation", &integralSaturation, 1)){
 214:src/main.cpp  ****     integralSaturation = 10;
 215:src/main.cpp  ****   //}
 216:src/main.cpp  ****   float wheelRadius;
 217:src/main.cpp  ****   //if(!nh.getParam("serial_node/wheelRadius", &wheelRadius, 1)){
 218:src/main.cpp  ****     wheelRadius = 0.04;
 219:src/main.cpp  ****   //}
 220:src/main.cpp  **** 
 221:src/main.cpp  ****   //if(!nh.getParam("serial_node/widthBetweenMotorPivotPoints", &L, 1)){
 222:src/main.cpp  ****     L = 0.17;
 223:src/main.cpp  ****   //}
 224:src/main.cpp  **** 
 225:src/main.cpp  ****   //if(!nh.getParam("serial_node/motorPivotPointToWheel", &d, 1)){
 226:src/main.cpp  ****     d = 0.045;
 227:src/main.cpp  ****   //}
 228:src/main.cpp  **** 
 229:src/main.cpp  ****   delay(1000);
 230:src/main.cpp  **** 
 231:src/main.cpp  **** 
 232:src/main.cpp  ****   motorSettings SL(MOTOR_TYPE_SERVO, "servo_left", TIM4, 4);
 233:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 234:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 235:src/main.cpp  ****   SL.m_ServoLimitMax = 2025;
 236:src/main.cpp  ****   SL.m_ServoLimitMin = 7925;
 237:src/main.cpp  **** 
 238:src/main.cpp  ****   motorSettings SR(MOTOR_TYPE_SERVO, "servo_right", TIM4, 3);
 239:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 240:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 241:src/main.cpp  ****   SR.m_ServoLimitMax = 7925;
 242:src/main.cpp  ****   SR.m_ServoLimitMin = 2025;
 243:src/main.cpp  **** 
 244:src/main.cpp  ****   motorSettings FR(MOTOR_TYPE_DC_MOTOR, "front_right", TIM1, 1);
 245:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 246:src/main.cpp  ****               GPIO_Pin_15, GPIOC, GPIO_Pin_0, GPIOA,
 247:src/main.cpp  ****               GPIO_Pin_8, GPIOA);
 248:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 249:src/main.cpp  ****   FR.setRegulator(FF,KP,KI,KD,integralSaturation);
 250:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 251:src/main.cpp  **** 
 252:src/main.cpp  ****   motorSettings FL(MOTOR_TYPE_DC_MOTOR, "front_left", TIM3, 4);
 253:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 254:src/main.cpp  ****               GPIO_Pin_4, GPIOA,GPIO_Pin_10,GPIOB,
 255:src/main.cpp  ****               GPIO_Pin_1, GPIOB);
 256:src/main.cpp  ****   FL.encoderAddr = (0x10);
 257:src/main.cpp  ****   FL.setRegulator(FF,KP,KI,KD,integralSaturation);
 258:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 259:src/main.cpp  **** 
 260:src/main.cpp  ****   motorSettings RL(MOTOR_TYPE_DC_MOTOR, "rear_left", TIM2, 4);
 261:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 262:src/main.cpp  ****     GPIO_Pin_13, GPIOB, GPIO_Pin_14, GPIOB,
 263:src/main.cpp  ****     GPIO_Pin_3, GPIOA);
 264:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 265:src/main.cpp  ****   RL.setRegulator(FF,KP,KI,KD,integralSaturation);
 266:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 267:src/main.cpp  **** 
 268:src/main.cpp  ****   motorSettings RR(MOTOR_TYPE_DC_MOTOR, "rear_right", TIM1, 4);
 269:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 270:src/main.cpp  ****               GPIO_Pin_15, GPIOA, GPIO_Pin_3, GPIOB,
 271:src/main.cpp  ****               GPIO_Pin_11, GPIOA);
 272:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 273:src/main.cpp  ****   RR.setRegulator(FF,KP,KI,KD,integralSaturation);
 274:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 275:src/main.cpp  **** 
 276:src/main.cpp  ****   //char error[60];
 277:src/main.cpp  ****   servo_left = motor::createMotor(&SL);
 278:src/main.cpp  ****   if(!servo_left->motorInit()){
 279:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 280:src/main.cpp  ****     //nh.logerror(error);
 281:src/main.cpp  ****   }
 282:src/main.cpp  **** 
 283:src/main.cpp  ****   servo_right = motor::createMotor(&SR);
 284:src/main.cpp  ****   if(!servo_right->motorInit()){
 285:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 286:src/main.cpp  ****     //nh.logerror(error);
 287:src/main.cpp  ****   }
 288:src/main.cpp  **** 
 289:src/main.cpp  ****   front_left = motor::createMotor(&FL);
 290:src/main.cpp  ****   if(!front_left->motorInit()){
 291:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 292:src/main.cpp  ****     //nh.logerror(error);
 293:src/main.cpp  ****   }
 294:src/main.cpp  **** 
 295:src/main.cpp  ****   front_right = motor::createMotor(&FR);
 296:src/main.cpp  ****   if(!front_right->motorInit()){
 297:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 298:src/main.cpp  ****     //nh.logerror(error);
 299:src/main.cpp  ****   }
 300:src/main.cpp  **** 
 301:src/main.cpp  ****   rear_left = motor::createMotor(&RL);
 302:src/main.cpp  ****   if(!rear_left->motorInit()){
 303:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 304:src/main.cpp  ****     //nh.logerror(error);
 305:src/main.cpp  ****   }
 306:src/main.cpp  **** 
 307:src/main.cpp  ****   rear_right = motor::createMotor(&RR);
 308:src/main.cpp  ****   if(!rear_right->motorInit()){
 309:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 310:src/main.cpp  ****     //nh.logerror(error);
 311:src/main.cpp  ****   }
 312:src/main.cpp  **** 
 313:src/main.cpp  ****   odom_msg.data = new float[3];
 314:src/main.cpp  ****   odom_msg.data_length = 3;
 315:src/main.cpp  **** 
 316:src/main.cpp  ****   debug_msg.data = new float[6];
 317:src/main.cpp  ****   debug_msg.data_length = 6;
 318:src/main.cpp  ****   
 319:src/main.cpp  ****   
 320:src/main.cpp  **** 
 321:src/main.cpp  ****   servo_left->setReference(135);
 322:src/main.cpp  ****   servo_right->setReference(135);
 323:src/main.cpp  ****   front_right->setReference(0);
 324:src/main.cpp  ****   front_left->setReference(0);
 325:src/main.cpp  ****   rear_right->setReference(0);
 326:src/main.cpp  ****   rear_left->setReference(0);
 327:src/main.cpp  **** 
 328:src/main.cpp  ****   int cnt = 0;
 329:src/main.cpp  ****   bool connected = false;
 330:src/main.cpp  **** 
 331:src/main.cpp  ****   uint32_t start_time;
 332:src/main.cpp  ****   uint32_t dt = 20;
 333:src/main.cpp  ****   float dt_s = ((int)dt*0.001f);
 334:src/main.cpp  **** 
 335:src/main.cpp  ****   //debug_toggle();
 336:src/main.cpp  **** 
 337:src/main.cpp  **** 
 338:src/main.cpp  ****   // Initialize the servos one by one in order not to kill the ODroid
 339:src/main.cpp  ****   while(cnt < 100){
 340:src/main.cpp  ****     start_time = millis();
 341:src/main.cpp  ****     if(cnt < 50)
 342:src/main.cpp  ****       servo_left->update(dt_s, connected, true);
 343:src/main.cpp  ****     else
 344:src/main.cpp  ****       servo_right->update(dt_s, connected, true);
 345:src/main.cpp  ****     while( millis() - start_time < dt);
 346:src/main.cpp  ****     cnt++;
 347:src/main.cpp  ****   }
 348:src/main.cpp  **** 
 349:src/main.cpp  ****   led_set(255);
 350:src/main.cpp  **** 
 351:src/main.cpp  ****   cnt = 0;
 352:src/main.cpp  **** 
 353:src/main.cpp  **** 
 354:src/main.cpp  ****   double x = 0.0;
 355:src/main.cpp  ****   double y = 0.0;
 356:src/main.cpp  ****   double th = 0.0;
 357:src/main.cpp  ****   float l = sqrt(pow((L/2),2)*2);
 358:src/main.cpp  **** 
 359:src/main.cpp  ****   //{fr, fl, rl, rr};
 360:src/main.cpp  ****   float alpha[4] = {-M_PI/4, M_PI/4, 3*M_PI/4, -3*M_PI/4};
 361:src/main.cpp  ****   uint32_t elapsed;
 362:src/main.cpp  ****   initialized = true;
 363:src/main.cpp  **** 
 364:src/main.cpp  **** 
 365:src/main.cpp  ****   while (1){
 366:src/main.cpp  ****    //printf("HELLOO!!!!");
 367:src/main.cpp  **** 
 368:src/main.cpp  ****     start_time = millis();
 369:src/main.cpp  **** 
 370:src/main.cpp  ****     /*if(shuttingDown){
 371:src/main.cpp  ****       connected = false;
 372:src/main.cpp  ****       // TODO: Advertise shutdown??
 373:src/main.cpp  ****     }else{*/
 374:src/main.cpp  ****     if(cnt++%50 == 0)
 375:src/main.cpp  ****       debug_toggle();
 376:src/main.cpp  ****     connected = true;//nh.connected();
 377:src/main.cpp  ****     //}
 378:src/main.cpp  **** 
 379:src/main.cpp  ****     float sl = servo_left->update(dt_s, connected, true);
 380:src/main.cpp  ****     float sr = servo_right->update(dt_s, connected, true);
 381:src/main.cpp  **** 
 382:src/main.cpp  ****     debug_msg.data[0] = (float)sl;
 383:src/main.cpp  ****     debug_msg.data[1] = (float)sr;
 384:src/main.cpp  **** 
 385:src/main.cpp  ****     bool enable = true;
 386:src/main.cpp  **** 
 387:src/main.cpp  ****     if((waitForServos && ((int)sr == (int)servo_right->getReference() && (int)sl == (int)servo_left
 388:src/main.cpp  ****       waitForServos = false;
 389:src/main.cpp  ****       front_right->setReference(motorCmd[0]);
 390:src/main.cpp  ****       front_left->setReference(motorCmd[1]);
 391:src/main.cpp  ****       rear_left->setReference(motorCmd[2]);
 392:src/main.cpp  ****       rear_right->setReference(motorCmd[3]);
 393:src/main.cpp  ****     }else{
 394:src/main.cpp  ****       enable = false;
 395:src/main.cpp  ****       front_right->setReference(0);
 396:src/main.cpp  ****       front_left->setReference(0);
 397:src/main.cpp  ****       rear_left->setReference(0);
 398:src/main.cpp  ****       rear_right->setReference(0);
 399:src/main.cpp  ****     }
 400:src/main.cpp  ****     
 401:src/main.cpp  ****     float fr = front_right->update(dt_s, connected, enable);
 402:src/main.cpp  ****     //udelay(500);
 403:src/main.cpp  ****     float fl = front_left->update(dt_s, connected, enable);
 404:src/main.cpp  ****     //udelay(500);
 405:src/main.cpp  ****     float rl = rear_left->update(dt_s, connected, enable);
 406:src/main.cpp  ****     //udelay(500);
 407:src/main.cpp  ****     float rr = rear_right->update(dt_s, connected, enable);
 408:src/main.cpp  ****     //udelay(1000);
 409:src/main.cpp  **** 
 410:src/main.cpp  **** 
 411:src/main.cpp  **** 
 412:src/main.cpp  ****     debug_msg.data[2] = fr;
 413:src/main.cpp  ****     debug_msg.data[3] = fl;
 414:src/main.cpp  ****     debug_msg.data[4] = rl;
 415:src/main.cpp  ****     debug_msg.data[5] = rr;
 416:src/main.cpp  **** 
 417:src/main.cpp  ****     float speeds[4] = {fr, fl, rl, rr};
 418:src/main.cpp  ****     float angles[4] = {sr-90, -sl+90, sl+90, -sr-90};
 419:src/main.cpp  **** 
 420:src/main.cpp  ****     int i;
 421:src/main.cpp  ****     float x_dot = 0;
 422:src/main.cpp  ****     float y_dot = 0;
 423:src/main.cpp  ****     float theta_dot = 0;
 424:src/main.cpp  ****     for(i = 0; i < 4; i++){
 425:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 426:src/main.cpp  ****       
 427:src/main.cpp  ****       float wheelAngle = alpha[i]+angles[i];
 428:src/main.cpp  ****       x_dot += cos(wheelAngle)*speeds[i];
 429:src/main.cpp  ****       y_dot += sin(wheelAngle)*speeds[i];
 430:src/main.cpp  ****       
 431:src/main.cpp  ****       float motorAngle = wheelAngle;
 432:src/main.cpp  ****       if(i==2 || i==3){
 433:src/main.cpp  ****         motorAngle += M_PI;
 434:src/main.cpp  ****       }
 435:src/main.cpp  ****       float deltaX = -(l*sin(alpha[i]) + d*sin(motorAngle));
 436:src/main.cpp  ****       float deltaY = l*cos(alpha[i]) + d*cos(motorAngle);
 437:src/main.cpp  **** 
 438:src/main.cpp  ****       float deltaNorm = sqrt(deltaX*deltaX + deltaY*deltaY);
 439:src/main.cpp  ****       float deltaXNorm = deltaX/deltaNorm;
 440:src/main.cpp  ****       float deltaYNorm = deltaY/deltaNorm;
 441:src/main.cpp  **** 
 442:src/main.cpp  ****       float wAngle = wheelAngle+M_PI/2;
 443:src/main.cpp  ****       float wX = cos(wAngle);
 444:src/main.cpp  ****       float wY = sin(wAngle);
 445:src/main.cpp  **** 
 446:src/main.cpp  ****       theta_dot += ((deltaXNorm*wX + deltaYNorm*wY)*wX)/(2*M_PI*deltaNorm)*speeds[i];
 447:src/main.cpp  ****     }
 448:src/main.cpp  ****     x_dot /= 4;
 449:src/main.cpp  ****     y_dot /= 4;
 450:src/main.cpp  ****     theta_dot /= 4;
 451:src/main.cpp  **** 
 452:src/main.cpp  **** 
 453:src/main.cpp  ****     odom_msg.data[0] = x_dot;
 454:src/main.cpp  ****     odom_msg.data[1] = y_dot;
 455:src/main.cpp  ****     odom_msg.data[2] = theta_dot;
 456:src/main.cpp  **** 
 457:src/main.cpp  ****     //reader(odom_msg);
 458:src/main.cpp  ****     //if(odom_msg.data[0] != NULL && odom_msg.data[1] != NULL && odom_msg.data[2] != NULL)
 459:src/main.cpp  ****     odom_pub.publish(&odom_msg);
 460:src/main.cpp  ****     debug_pub.publish(&debug_msg);
 461:src/main.cpp  **** 
 462:src/main.cpp  ****     nh.spinOnce();
 463:src/main.cpp  **** 
 464:src/main.cpp  ****     elapsed = millis() - start_time;
 465:src/main.cpp  ****     if(elapsed > dt){
 466:src/main.cpp  ****       //char elapsed_msg[18];
 467:src/main.cpp  ****       //sprintf(elapsed_msg, "SLOW! %u", elapsed);
 468:src/main.cpp  ****       //nh.logerror(elapsed_msg);
 469:src/main.cpp  ****     }else{
 470:src/main.cpp  ****       /*char elapsed_msg2[8];
 471:src/main.cpp  ****       sprintf(elapsed_msg2, "%u", elapsed);
 472:src/main.cpp  ****       nh.logerror(elapsed_msg2);*/
 473:src/main.cpp  ****       while( (millis() - start_time) < dt){}
 474:src/main.cpp  ****     }
 475:src/main.cpp  ****   }
 476:src/main.cpp  ****   //delete odom_msg.data;
 477:src/main.cpp  ****   return 0;
 478:src/main.cpp  **** }
 479:src/main.cpp  **** 
 480:src/main.cpp  **** extern "C" void EXTI2_IRQHandler(void){
 3873              		.loc 12 480 0
 3874              		.cfi_startproc
 3875              		@ args = 0, pretend = 0, frame = 0
 3876              		@ frame_needed = 0, uses_anonymous_args = 0
 3877 02b8 08B5     		push	{r3, lr}
 3878              		.save {r3, lr}
 3879              	.LCFI46:
 3880              		.cfi_def_cfa_offset 8
 3881              		.cfi_offset 3, -8
 3882              		.cfi_offset 14, -4
 481:src/main.cpp  ****   if(EXTI_GetITStatus(EXTI_Line2) != RESET){
 3883              		.loc 12 481 0
 3884 02ba 0420     		movs	r0, #4
 3885 02bc FFF7FEFF 		bl	EXTI_GetITStatus
 3886              	.LVL480:
 3887 02c0 40B1     		cbz	r0, .L198
 482:src/main.cpp  ****     shuttingDown = true;
 3888              		.loc 12 482 0
 3889 02c2 054B     		ldr	r3, .L200
 3890 02c4 0122     		movs	r2, #1
 3891 02c6 83F83424 		strb	r2, [r3, #1076]
 483:src/main.cpp  ****     EXTI_ClearITPendingBit(EXTI_Line2);
 3892              		.loc 12 483 0
 3893 02ca 0420     		movs	r0, #4
 484:src/main.cpp  ****   }
 485:src/main.cpp  **** }
 3894              		.loc 12 485 0
 3895 02cc BDE80840 		pop	{r3, lr}
 3896              	.LCFI47:
 3897              		.cfi_remember_state
 3898              		.cfi_restore 14
 3899              		.cfi_restore 3
 3900              		.cfi_def_cfa_offset 0
 483:src/main.cpp  ****     EXTI_ClearITPendingBit(EXTI_Line2);
 3901              		.loc 12 483 0
 3902 02d0 FFF7FEBF 		b	EXTI_ClearITPendingBit
 3903              	.LVL481:
 3904              	.L198:
 3905              	.LCFI48:
 3906              		.cfi_restore_state
 3907 02d4 08BD     		pop	{r3, pc}
 3908              	.L201:
 3909 02d6 00BF     		.align	2
 3910              	.L200:
 3911 02d8 00000000 		.word	.LANCHOR1
 3912              		.cfi_endproc
 3913              	.LFE1289:
 3914              		.fnend
 3916              		.align	1
 3917              		.global	HardFault_Handler
 3918              		.thumb
 3919              		.thumb_func
 3921              	HardFault_Handler:
 3922              		.fnstart
 3923              	.LFB1290:
 486:src/main.cpp  **** 
 487:src/main.cpp  **** 
 488:src/main.cpp  **** extern "C" __attribute__((naked)) void HardFault_Handler(void){
 3924              		.loc 12 488 0
 3925              		.cfi_startproc
 3926              		@ Naked Function: prologue and epilogue provided by programmer.
 3927              		@ args = 0, pretend = 0, frame = 0
 3928              		@ frame_needed = 0, uses_anonymous_args = 0
 489:src/main.cpp  ****         /*
 490:src/main.cpp  ****          * Get the appropriate stack pointer, depending on our mode,
 491:src/main.cpp  ****          * and use it as the parameter to the C handler. This function
 492:src/main.cpp  ****          * will never return
 493:src/main.cpp  ****          */
 494:src/main.cpp  **** 
 495:src/main.cpp  **** 
 496:src/main.cpp  ****         __asm(  ".syntax unified\n"
 497:src/main.cpp  ****                         "MOVS   R0, #4  \n"
 498:src/main.cpp  ****                         "MOV    R1, LR  \n"
 499:src/main.cpp  ****                         "TST    R0, R1  \n"
 500:src/main.cpp  ****                         "BEQ    _MSP    \n"
 501:src/main.cpp  ****                         "MRS    R0, PSP \n"
 502:src/main.cpp  ****                         "B      hard_fault_handler_c      \n"
 503:src/main.cpp  ****                 "_MSP:  \n"
 504:src/main.cpp  ****                         "MRS    R0, MSP \n"
 505:src/main.cpp  ****                         "B      hard_fault_handler_c      \n"
 506:src/main.cpp  ****                 ".syntax divided\n") ;
 3929              		.loc 12 506 0
 3930              		.syntax unified
 3931              	@ 506 "src/main.cpp" 1
 3932              		.syntax unified
 3933 02dc 0420     	MOVS   R0, #4  
 3934 02de 7146     	MOV    R1, LR  
 3935 02e0 0842     	TST    R0, R1  
 3936 02e2 03D0     	BEQ    _MSP    
 3937 02e4 EFF30980 	MRS    R0, PSP 
 3938 02e8 FFF7FEBF 	B      hard_fault_handler_c      
 3939              	_MSP:  
 3940 02ec EFF30880 	MRS    R0, MSP 
 3941 02f0 FFF7FEBF 	B      hard_fault_handler_c      
 3942              	.syntax divided
 3943              	
 3944              	@ 0 "" 2
 507:src/main.cpp  **** }
 3945              		.loc 12 507 0
 3946              		.thumb
 3947              		.syntax unified
 3948              		.cfi_endproc
 3949              	.LFE1290:
 3950              		.cantunwind
 3951              		.fnend
 3953              		.align	1
 3954              		.global	hard_fault_handler_c
 3955              		.thumb
 3956              		.thumb_func
 3958              	hard_fault_handler_c:
 3959              		.fnstart
 3960              	.LFB1291:
 508:src/main.cpp  **** 
 509:src/main.cpp  **** 
 510:src/main.cpp  **** extern "C" void hard_fault_handler_c (unsigned int * hardfault_args)
 511:src/main.cpp  **** {
 3961              		.loc 12 511 0
 3962              		.cfi_startproc
 3963              		@ args = 0, pretend = 0, frame = 0
 3964              		@ frame_needed = 0, uses_anonymous_args = 0
 3965              	.LVL482:
 3966 02f4 08B5     		push	{r3, lr}
 3967              		.save {r3, lr}
 3968              	.LCFI49:
 3969              		.cfi_def_cfa_offset 8
 3970              		.cfi_offset 3, -8
 3971              		.cfi_offset 14, -4
 512:src/main.cpp  ****   RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2 | RCC_APB1Periph_TIM3 | RCC_APB1Periph_TIM4, DISABLE);
 3972              		.loc 12 512 0
 3973 02f6 0021     		movs	r1, #0
 3974 02f8 0720     		movs	r0, #7
 3975              	.LVL483:
 3976 02fa FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 3977              	.LVL484:
 513:src/main.cpp  ****   RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1, DISABLE);
 3978              		.loc 12 513 0
 3979 02fe 0021     		movs	r1, #0
 3980 0300 4FF40060 		mov	r0, #2048
 3981 0304 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 3982              	.LVL485:
 3983              	.LBB219:
 3984              	.LBB220:
1505:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1506:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1507:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1508:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Disable the interrupt line for external interrupt specified
1509:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1510:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to disable
1511:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1512:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Disable a device specific interupt in the NVIC interrupt controller.
1513:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1514:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1515:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1516:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1517:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1518:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1519:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1520:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1521:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Read the interrupt pending bit for a device specific interrupt source
1522:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1523:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn    The number of the device specifc interrupt
1524:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         1 = interrupt pending, 0 = interrupt not pending
1525:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1526:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Read the pending register in NVIC and return 1 if its status is pending, 
1527:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * otherwise it returns 0
1528:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1529:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1530:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1531:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1532:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1533:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1534:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1535:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the pending bit for an external interrupt
1536:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1537:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn    The number of the interrupt for set pending
1538:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1539:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the pending bit for the specified interrupt.
1540:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1541:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1542:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1543:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1544:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1545:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1546:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1547:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1548:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Clear the pending bit for an external interrupt
1549:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1550:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn    The number of the interrupt for clear pending
1551:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1552:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Clear the pending bit for the specified interrupt. 
1553:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1554:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1555:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1556:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1557:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1558:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1559:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1560:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1561:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Read the active bit for an external interrupt
1562:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1563:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn    The number of the interrupt for read active bit
1564:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         1 = interrupt active, 0 = interrupt not active
1565:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1566:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Read the active register in NVIC and returns 1 if its status is active, 
1567:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * otherwise it returns 0.
1568:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1569:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1570:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1571:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1572:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1573:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1574:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1575:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the priority for an interrupt
1576:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1577:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn      The number of the interrupt for set priority
1578:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priority  The priority to set
1579:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1580:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority for the specified interrupt. The interrupt 
1581:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * number can be positive to specify an external (device specific) 
1582:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1583:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1584:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1585:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1586:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1587:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1588:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   if(IRQn < 0) {
1589:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
1590:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   else {
1591:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
1592:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1593:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1594:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1595:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Read the priority for an interrupt
1596:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1597:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn      The number of the interrupt for get priority
1598:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return           The priority for the interrupt
1599:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1600:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Read the priority for the specified interrupt. The interrupt 
1601:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * number can be positive to specify an external (device specific) 
1602:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1603:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1604:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The returned priority value is automatically aligned to the implemented
1605:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits of the microcontroller.
1606:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1607:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1608:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1609:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1610:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1611:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1612:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   if(IRQn < 0) {
1613:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1614:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   else {
1615:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1616:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1617:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1618:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1619:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1620:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Encode the priority for an interrupt
1621:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1622:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup    The used priority group
1623:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PreemptPriority  The preemptive priority value (starting from 0)
1624:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  SubPriority      The sub priority value (starting from 0)
1625:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return                  The encoded priority for the interrupt
1626:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1627:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Encode the priority for an interrupt with the given priority group,
1628:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * preemptive priority value and sub priority value.
1629:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1630:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1631:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1632:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The returned priority value can be used for NVIC_SetPriority(...) function
1633:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1634:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1635:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1636:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1637:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PreemptPriorityBits;
1638:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t SubPriorityBits;
1639:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1640:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1641:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1642:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  
1643:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return (
1644:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
1645:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
1646:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****          );
1647:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1648:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1649:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1650:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1651:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Decode the priority of an interrupt
1652:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1653:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  Priority           The priority for the interrupt
1654:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup      The used priority group
1655:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  pPreemptPriority   The preemptive priority value (starting from 0)
1656:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  pSubPriority       The sub priority value (starting from 0)
1657:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1658:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Decode an interrupt priority value with the given priority group to 
1659:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * preemptive priority value and sub priority value.
1660:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1661:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1662:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1663:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The priority value can be retrieved with NVIC_GetPriority(...) function
1664:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1665:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1666:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1667:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1668:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PreemptPriorityBits;
1669:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t SubPriorityBits;
1670:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1671:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1672:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1673:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   
1674:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
1675:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
1676:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1677:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1678:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1679:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1680:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##################################    SysTick function  ########################################
1681:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1682:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if (!defined (__Vendor_SysTickConfig)) || (__Vendor_SysTickConfig == 0)
1683:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1684:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1685:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Initialize and start the SysTick counter and its interrupt.
1686:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1687:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   ticks   number of ticks between two interrupts
1688:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return  1 = failed, 0 = successful
1689:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1690:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Initialise the system tick timer and its interrupt and start the
1691:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * system tick timer / counter in free running mode to generate 
1692:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * periodical interrupts.
1693:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1694:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t SysTick_Config(uint32_t ticks)
1695:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** { 
1696:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */
1697:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                                                                
1698:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
1699:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Cortex-M0 System
1700:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
1701:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk | 
1702:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                    SysTick_CTRL_TICKINT_Msk   | 
1703:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                    SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Ti
1704:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return (0);                                                  /* Function successful */
1705:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1706:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1707:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
1708:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1709:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1710:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1711:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1712:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##################################    Reset function  ##########################################
1713:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1714:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1715:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Initiate a system reset request.
1716:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1717:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Initiate a system reset request to reset the MCU
1718:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1719:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SystemReset(void)
1720:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      | 
1722:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) | 
 3985              		.loc 16 1722 0
 3986 0308 0449     		ldr	r1, .L205
 3987 030a 054B     		ldr	r3, .L205+4
 3988 030c CA68     		ldr	r2, [r1, #12]
 3989 030e 02F4E062 		and	r2, r2, #1792
 3990 0312 1343     		orrs	r3, r3, r2
1723:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);                   /* Keep priority group unchanged */
 3991              		.loc 16 1723 0
 3992 0314 CB60     		str	r3, [r1, #12]
 3993              	.LVL486:
 3994              	.LBB221:
 3995              	.LBB222:
1215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
 3996              		.loc 16 1215 0
 3997              		.syntax unified
 3998              	@ 1215 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h" 1
 3999 0316 BFF34F8F 		dsb
 4000              	@ 0 "" 2
 4001              		.thumb
 4002              		.syntax unified
 4003              	.L204:
 4004 031a FEE7     		b	.L204
 4005              	.L206:
 4006              		.align	2
 4007              	.L205:
 4008 031c 00ED00E0 		.word	-536810240
 4009 0320 0400FA05 		.word	100270084
 4010              	.LBE222:
 4011              	.LBE221:
 4012              	.LBE220:
 4013              	.LBE219:
 4014              		.cfi_endproc
 4015              	.LFE1291:
 4016              		.fnend
 4018              		.align	1
 4019              		.global	_Z13assert_failedPhm
 4020              		.thumb
 4021              		.thumb_func
 4023              	_Z13assert_failedPhm:
 4024              		.fnstart
 4025              	.LFB1292:
 514:src/main.cpp  **** 
 515:src/main.cpp  ****   unsigned int stacked_r0;
 516:src/main.cpp  ****   unsigned int stacked_r1;
 517:src/main.cpp  ****   unsigned int stacked_r2;
 518:src/main.cpp  ****   unsigned int stacked_r3;
 519:src/main.cpp  ****   unsigned int stacked_r12;
 520:src/main.cpp  ****   unsigned int stacked_lr;
 521:src/main.cpp  ****   unsigned int stacked_pc;
 522:src/main.cpp  ****   unsigned int stacked_psr;
 523:src/main.cpp  ****  
 524:src/main.cpp  ****   stacked_r0 = ((unsigned long) hardfault_args[0]);
 525:src/main.cpp  ****   stacked_r1 = ((unsigned long) hardfault_args[1]);
 526:src/main.cpp  ****   stacked_r2 = ((unsigned long) hardfault_args[2]);
 527:src/main.cpp  ****   stacked_r3 = ((unsigned long) hardfault_args[3]);
 528:src/main.cpp  ****  
 529:src/main.cpp  ****   stacked_r12 = ((unsigned long) hardfault_args[4]);
 530:src/main.cpp  ****   stacked_lr = ((unsigned long) hardfault_args[5]);
 531:src/main.cpp  ****   stacked_pc = ((unsigned long) hardfault_args[6]);
 532:src/main.cpp  ****   stacked_psr = ((unsigned long) hardfault_args[7]);
 533:src/main.cpp  ****  
 534:src/main.cpp  ****   printf ("\n\n[Hard fault handler - all numbers in hex]\n");
 535:src/main.cpp  ****   printf ("R0 = %x\n", stacked_r0);
 536:src/main.cpp  ****   printf ("R1 = %x\n", stacked_r1);
 537:src/main.cpp  ****   printf ("R2 = %x\n", stacked_r2);
 538:src/main.cpp  ****   printf ("R3 = %x\n", stacked_r3);
 539:src/main.cpp  ****   printf ("R12 = %x\n", stacked_r12);
 540:src/main.cpp  ****   printf ("LR [R14] = %x  subroutine call return address\n", stacked_lr);
 541:src/main.cpp  ****   printf ("PC [R15] = %x  program counter\n", stacked_pc);
 542:src/main.cpp  ****   printf ("PSR = %x\n", stacked_psr);
 543:src/main.cpp  ****   printf ("BFAR = %x\n", (*((volatile unsigned long *)(0xE000ED38))));
 544:src/main.cpp  ****   printf ("CFSR = %x\n", (*((volatile unsigned long *)(0xE000ED28))));
 545:src/main.cpp  ****   printf ("HFSR = %x\n", (*((volatile unsigned long *)(0xE000ED2C))));
 546:src/main.cpp  ****   printf ("DFSR = %x\n", (*((volatile unsigned long *)(0xE000ED30))));
 547:src/main.cpp  ****   printf ("AFSR = %x\n", (*((volatile unsigned long *)(0xE000ED3C))));
 548:src/main.cpp  ****   printf ("SCB_SHCSR = %x\n", SCB->SHCSR);
 549:src/main.cpp  ****   
 550:src/main.cpp  ****   NVIC_SystemReset();
 551:src/main.cpp  **** }
 552:src/main.cpp  **** 
 553:src/main.cpp  **** 
 554:src/main.cpp  **** void assert_failed(uint8_t* file, uint32_t line){
 4026              		.loc 12 554 0
 4027              		.cfi_startproc
 4028              		@ args = 0, pretend = 0, frame = 0
 4029              		@ frame_needed = 0, uses_anonymous_args = 0
 4030              	.LVL487:
 4031 0324 08B5     		push	{r3, lr}
 4032              		.save {r3, lr}
 4033              	.LCFI50:
 4034              		.cfi_def_cfa_offset 8
 4035              		.cfi_offset 3, -8
 4036              		.cfi_offset 14, -4
 4037              	.LVL488:
 4038              	.L208:
 555:src/main.cpp  ****   /* User can add his own implementation to report the file name and line number,
 556:src/main.cpp  ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 557:src/main.cpp  ****   /*char str[150];
 558:src/main.cpp  **** 
 559:src/main.cpp  ****   sprintf(str, "Wrong parameters value: file %s on line %u\r\n", file, (unsigned int)line);
 560:src/main.cpp  ****   nh.logerror(str);*/
 561:src/main.cpp  ****   while (1){
 562:src/main.cpp  ****     debug_toggle();
 4039              		.loc 12 562 0 discriminator 1
 4040 0326 FFF7FEFF 		bl	debug_toggle
 4041              	.LVL489:
 563:src/main.cpp  ****     delay(100);
 4042              		.loc 12 563 0 discriminator 1
 4043 032a 6420     		movs	r0, #100
 4044 032c FFF7FEFF 		bl	delay
 4045              	.LVL490:
 4046 0330 F9E7     		b	.L208
 4047              		.cfi_endproc
 4048              	.LFE1292:
 4049              		.fnend
 4051              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv,
 4052              		.align	1
 4053              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
 4054              		.thumb
 4055              		.thumb_func
 4057              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:
 4058              		.fnstart
 4059              	.LFB1323:
 293:./lib/ros_lib/ros/node_handle.h ****       {
 4060              		.loc 11 293 0
 4061              		.cfi_startproc
 4062              		@ args = 0, pretend = 0, frame = 16
 4063              		@ frame_needed = 0, uses_anonymous_args = 0
 4064              	.LVL491:
 4065 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 4066              		.save {r4, lr}
 4067              		.pad #16
 4068              	.LCFI51:
 4069              		.cfi_def_cfa_offset 24
 4070              		.cfi_offset 4, -8
 4071              		.cfi_offset 14, -4
 4072              	.LVL492:
 4073              	.LBB223:
 4074              	.LBB224:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4075              		.loc 1 19 0
 4076 0002 084B     		ldr	r3, .L210
 4077              	.LBE224:
 4078              	.LBE223:
 296:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4079              		.loc 11 296 0
 4080 0004 01AA     		add	r2, sp, #4
 4081              	.LVL493:
 4082              	.LBB228:
 4083              	.LBB227:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4084              		.loc 1 19 0
 4085 0006 0193     		str	r3, [sp, #4]
 4086              	.LVL494:
 4087              	.LBB225:
 4088              	.LBB226:
 4089              		.file 17 "./lib/ros_lib/ros/time.h"
   1:./lib/ros_lib/ros/time.h **** /*
   2:./lib/ros_lib/ros/time.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/time.h ****  *
   4:./lib/ros_lib/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/time.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/time.h ****  *
   7:./lib/ros_lib/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/time.h ****  * are met:
  10:./lib/ros_lib/ros/time.h ****  *
  11:./lib/ros_lib/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/time.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/time.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/time.h ****  *
  21:./lib/ros_lib/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/time.h ****  */
  34:./lib/ros_lib/ros/time.h **** 
  35:./lib/ros_lib/ros/time.h **** #ifndef ROS_TIME_H_
  36:./lib/ros_lib/ros/time.h **** #define ROS_TIME_H_
  37:./lib/ros_lib/ros/time.h **** 
  38:./lib/ros_lib/ros/time.h **** #include <math.h>
  39:./lib/ros_lib/ros/time.h **** #include <stdint.h>
  40:./lib/ros_lib/ros/time.h **** 
  41:./lib/ros_lib/ros/time.h **** #include "ros/duration.h"
  42:./lib/ros_lib/ros/time.h **** 
  43:./lib/ros_lib/ros/time.h **** namespace ros
  44:./lib/ros_lib/ros/time.h **** {
  45:./lib/ros_lib/ros/time.h ****   void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  46:./lib/ros_lib/ros/time.h **** 
  47:./lib/ros_lib/ros/time.h ****   class Time
  48:./lib/ros_lib/ros/time.h ****   {
  49:./lib/ros_lib/ros/time.h ****     public:
  50:./lib/ros_lib/ros/time.h ****       uint32_t sec, nsec;
  51:./lib/ros_lib/ros/time.h **** 
  52:./lib/ros_lib/ros/time.h ****       Time() : sec(0), nsec(0) {}
 4090              		.loc 17 52 0
 4091 0008 0023     		movs	r3, #0
 4092 000a 0293     		str	r3, [sp, #8]
 4093 000c 0393     		str	r3, [sp, #12]
 4094              	.LVL495:
 4095              	.LBE226:
 4096              	.LBE225:
 4097              	.LBE227:
 4098              	.LBE228:
 296:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4099              		.loc 11 296 0
 4100 000e 0368     		ldr	r3, [r0]
 4101 0010 0A21     		movs	r1, #10
 4102 0012 1B68     		ldr	r3, [r3]
 293:./lib/ros_lib/ros/node_handle.h ****       {
 4103              		.loc 11 293 0
 4104 0014 0446     		mov	r4, r0
 296:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4105              		.loc 11 296 0
 4106 0016 9847     		blx	r3
 4107              	.LVL496:
 4108              	.LBB229:
 4109              	.LBB230:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4110              		.loc 13 134 0
 4111 0018 FFF7FEFF 		bl	millis
 4112              	.LVL497:
 4113              	.LBE230:
 4114              	.LBE229:
 297:./lib/ros_lib/ros/node_handle.h ****       }
 4115              		.loc 11 297 0
 4116 001c E060     		str	r0, [r4, #12]
 298:./lib/ros_lib/ros/node_handle.h **** 
 4117              		.loc 11 298 0
 4118 001e 04B0     		add	sp, sp, #16
 4119              	.LCFI52:
 4120              		.cfi_def_cfa_offset 8
 4121              		@ sp needed
 4122 0020 10BD     		pop	{r4, pc}
 4123              	.LVL498:
 4124              	.L211:
 4125 0022 00BF     		.align	2
 4126              	.L210:
 4127 0024 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4128              		.cfi_endproc
 4129              	.LFE1323:
 4130              		.fnend
 4132              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv,
 4133              		.align	1
 4134              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv
 4135              		.thumb
 4136              		.thumb_func
 4138              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:
 4139              		.fnstart
 4140              	.LFB1324:
 390:./lib/ros_lib/ros/node_handle.h ****       {
 4141              		.loc 11 390 0
 4142              		.cfi_startproc
 4143              		@ args = 0, pretend = 0, frame = 24
 4144              		@ frame_needed = 0, uses_anonymous_args = 0
 4145              	.LVL499:
 4146 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4147              		.save {r4, r5, r6, r7, r8, lr}
 4148              	.LCFI53:
 4149              		.cfi_def_cfa_offset 24
 4150              		.cfi_offset 4, -24
 4151              		.cfi_offset 5, -20
 4152              		.cfi_offset 6, -16
 4153              		.cfi_offset 7, -12
 4154              		.cfi_offset 8, -8
 4155              		.cfi_offset 14, -4
 4156 0004 0446     		mov	r4, r0
 4157              	.LBB236:
 4158              	.LBB237:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 4159              		.loc 2 34 0
 4160 0006 2B4B     		ldr	r3, .L225
 4161              	.LBE237:
 4162              	.LBE236:
 390:./lib/ros_lib/ros/node_handle.h ****       {
 4163              		.loc 11 390 0
 4164              		.pad #24
 4165 0008 86B0     		sub	sp, sp, #24
 4166              	.LCFI54:
 4167              		.cfi_def_cfa_offset 48
 4168              	.LVL500:
 4169              	.LBB239:
 4170              	.LBB238:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 4171              		.loc 2 34 0
 4172 000a 0093     		str	r3, [sp]
 4173 000c 2A4B     		ldr	r3, .L225+4
 4174 000e 0022     		movs	r2, #0
 4175 0010 ADF80420 		strh	r2, [sp, #4]	@ movhi
 4176 0014 0293     		str	r3, [sp, #8]
 4177 0016 0393     		str	r3, [sp, #12]
 4178 0018 0493     		str	r3, [sp, #16]
 4179 001a 0592     		str	r2, [sp, #20]
 4180              	.LVL501:
 4181 001c 00F61406 		addw	r6, r0, #2068
 4182 0020 00F67805 		addw	r5, r0, #2168
 4183              	.LBE238:
 4184              	.LBE239:
 402:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 4185              		.loc 11 402 0
 4186 0024 4FF48067 		mov	r7, #1024
 4187              	.LVL502:
 4188              	.L214:
 396:./lib/ros_lib/ros/node_handle.h ****           {
 4189              		.loc 11 396 0
 4190 0028 56F8043F 		ldr	r3, [r6, #4]!
 4191 002c BBB1     		cbz	r3, .L213
 398:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 4192              		.loc 11 398 0
 4193 002e 9A68     		ldr	r2, [r3, #8]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4194              		.loc 11 400 0
 4195 0030 5868     		ldr	r0, [r3, #4]
 398:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 4196              		.loc 11 398 0
 4197 0032 ADF80420 		strh	r2, [sp, #4]	@ movhi
 399:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 4198              		.loc 11 399 0
 4199 0036 1A68     		ldr	r2, [r3]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4200              		.loc 11 400 0
 4201 0038 0368     		ldr	r3, [r0]
 399:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 4202              		.loc 11 399 0
 4203 003a 0292     		str	r2, [sp, #8]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4204              		.loc 11 400 0
 4205 003c 9B68     		ldr	r3, [r3, #8]
 4206 003e 9847     		blx	r3
 4207              	.LVL503:
 401:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4208              		.loc 11 401 0
 4209 0040 3368     		ldr	r3, [r6]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4210              		.loc 11 400 0
 4211 0042 0390     		str	r0, [sp, #12]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4212              		.loc 11 401 0
 4213 0044 5868     		ldr	r0, [r3, #4]
 4214 0046 0368     		ldr	r3, [r0]
 4215 0048 DB68     		ldr	r3, [r3, #12]
 4216 004a 9847     		blx	r3
 4217              	.LVL504:
 4218 004c 3168     		ldr	r1, [r6]
 403:./lib/ros_lib/ros/node_handle.h ****           }
 4219              		.loc 11 403 0
 4220 004e 2368     		ldr	r3, [r4]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4221              		.loc 11 401 0
 4222 0050 0490     		str	r0, [sp, #16]
 402:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 4223              		.loc 11 402 0
 4224 0052 0597     		str	r7, [sp, #20]
 4225              	.LVL505:
 403:./lib/ros_lib/ros/node_handle.h ****           }
 4226              		.loc 11 403 0
 4227 0054 1B68     		ldr	r3, [r3]
 4228 0056 6A46     		mov	r2, sp
 4229 0058 0969     		ldr	r1, [r1, #16]
 4230              	.LVL506:
 4231 005a 2046     		mov	r0, r4
 4232 005c 9847     		blx	r3
 4233              	.LVL507:
 4234              	.L213:
 394:./lib/ros_lib/ros/node_handle.h ****         {
 4235              		.loc 11 394 0 discriminator 2
 4236 005e AE42     		cmp	r6, r5
 4237 0060 E2D1     		bne	.L214
 4238 0062 04F6DC06 		addw	r6, r4, #2268
 414:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 4239              		.loc 11 414 0
 4240 0066 4FF48067 		mov	r7, #1024
 4241              	.L216:
 408:./lib/ros_lib/ros/node_handle.h ****           {
 4242              		.loc 11 408 0
 4243 006a 55F8040F 		ldr	r0, [r5, #4]!
 4244 006e C8B1     		cbz	r0, .L215
 410:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 4245              		.loc 11 410 0
 4246 0070 4368     		ldr	r3, [r0, #4]
 4247 0072 ADF80430 		strh	r3, [sp, #4]	@ movhi
 411:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 4248              		.loc 11 411 0
 4249 0076 8368     		ldr	r3, [r0, #8]
 4250 0078 0293     		str	r3, [sp, #8]
 412:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 4251              		.loc 11 412 0
 4252 007a 0368     		ldr	r3, [r0]
 4253 007c 9B68     		ldr	r3, [r3, #8]
 4254 007e 9847     		blx	r3
 4255              	.LVL508:
 4256 0080 0390     		str	r0, [sp, #12]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 4257              		.loc 11 413 0
 4258 0082 2868     		ldr	r0, [r5]
 4259 0084 0368     		ldr	r3, [r0]
 4260 0086 DB68     		ldr	r3, [r3, #12]
 4261 0088 9847     		blx	r3
 4262              	.LVL509:
 415:./lib/ros_lib/ros/node_handle.h ****           }
 4263              		.loc 11 415 0
 4264 008a 2368     		ldr	r3, [r4]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 4265              		.loc 11 413 0
 4266 008c 0490     		str	r0, [sp, #16]
 415:./lib/ros_lib/ros/node_handle.h ****           }
 4267              		.loc 11 415 0
 4268 008e 2868     		ldr	r0, [r5]
 4269 0090 D3F80080 		ldr	r8, [r3]
 4270 0094 0368     		ldr	r3, [r0]
 414:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 4271              		.loc 11 414 0
 4272 0096 0597     		str	r7, [sp, #20]
 415:./lib/ros_lib/ros/node_handle.h ****           }
 4273              		.loc 11 415 0
 4274 0098 5B68     		ldr	r3, [r3, #4]
 4275 009a 9847     		blx	r3
 4276              	.LVL510:
 4277 009c 6A46     		mov	r2, sp
 4278 009e 0146     		mov	r1, r0
 4279 00a0 2046     		mov	r0, r4
 4280 00a2 C047     		blx	r8
 4281              	.LVL511:
 4282              	.L215:
 406:./lib/ros_lib/ros/node_handle.h ****         {
 4283              		.loc 11 406 0 discriminator 2
 4284 00a4 AE42     		cmp	r6, r5
 4285 00a6 E0D1     		bne	.L216
 418:./lib/ros_lib/ros/node_handle.h ****       }
 4286              		.loc 11 418 0
 4287 00a8 0123     		movs	r3, #1
 4288 00aa 84F8F438 		strb	r3, [r4, #2292]
 419:./lib/ros_lib/ros/node_handle.h **** 
 4289              		.loc 11 419 0
 4290 00ae 06B0     		add	sp, sp, #24
 4291              	.LCFI55:
 4292              		.cfi_def_cfa_offset 24
 4293              	.LVL512:
 4294              		@ sp needed
 4295 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4296              	.LVL513:
 4297              	.L226:
 4298              		.align	2
 4299              	.L225:
 4300 00b4 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 4301 00b8 16020000 		.word	.LC20
 4302              		.cfi_endproc
 4303              	.LFE1324:
 4304              		.fnend
 4306              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh,"axG",%
 4307              		.align	1
 4308              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh
 4309              		.thumb
 4310              		.thumb_func
 4312              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:
 4313              		.fnstart
 4314              	.LFB1325:
 300:./lib/ros_lib/ros/node_handle.h ****       {
 4315              		.loc 11 300 0
 4316              		.cfi_startproc
 4317              		@ args = 0, pretend = 0, frame = 16
 4318              		@ frame_needed = 0, uses_anonymous_args = 0
 4319              	.LVL514:
 4320 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 4321              		.save {r4, r5, r6, lr}
 4322              		.pad #16
 4323              	.LCFI56:
 4324              		.cfi_def_cfa_offset 32
 4325              		.cfi_offset 4, -16
 4326              		.cfi_offset 5, -12
 4327              		.cfi_offset 6, -8
 4328              		.cfi_offset 14, -4
 4329              	.LVL515:
 4330              	.LBB254:
 4331              	.LBB255:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4332              		.loc 1 19 0
 4333 0002 1C4B     		ldr	r3, .L228
 4334              	.LBE255:
 4335              	.LBE254:
 300:./lib/ros_lib/ros/node_handle.h ****       {
 4336              		.loc 11 300 0
 4337 0004 0446     		mov	r4, r0
 4338              	.LBB259:
 4339              	.LBB258:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4340              		.loc 1 19 0
 4341 0006 0193     		str	r3, [sp, #4]
 4342              	.LVL516:
 4343              	.LBB256:
 4344              	.LBB257:
 4345              		.loc 17 52 0
 4346 0008 0023     		movs	r3, #0
 4347 000a 0293     		str	r3, [sp, #8]
 4348 000c 0393     		str	r3, [sp, #12]
 4349              	.LVL517:
 4350              	.LBE257:
 4351              	.LBE256:
 4352              	.LBE258:
 4353              	.LBE259:
 300:./lib/ros_lib/ros/node_handle.h ****       {
 4354              		.loc 11 300 0
 4355 000e 0D46     		mov	r5, r1
 4356              	.LBB260:
 4357              	.LBB261:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4358              		.loc 13 134 0
 4359 0010 FFF7FEFF 		bl	millis
 4360              	.LVL518:
 4361              	.LBE261:
 4362              	.LBE260:
 303:./lib/ros_lib/ros/node_handle.h **** 
 4363              		.loc 11 303 0
 4364 0014 E268     		ldr	r2, [r4, #12]
 305:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 4365              		.loc 11 305 0
 4366 0016 2946     		mov	r1, r5
 303:./lib/ros_lib/ros/node_handle.h **** 
 4367              		.loc 11 303 0
 4368 0018 861A     		subs	r6, r0, r2
 4369              	.LVL519:
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4370              		.loc 11 306 0
 4371 001a 4FF47A75 		mov	r5, #1000
 4372              	.LVL520:
 305:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 4373              		.loc 11 305 0
 4374 001e 01A8     		add	r0, sp, #4
 4375 0020 FFF7FEFF 		bl	_ZN8std_msgs4Time11deserializeEPh
 4376              	.LVL521:
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4377              		.loc 11 306 0
 4378 0024 B6FBF5F2 		udiv	r2, r6, r5
 4379 0028 029B     		ldr	r3, [sp, #8]
 4380 002a 1344     		add	r3, r3, r2
 307:./lib/ros_lib/ros/node_handle.h **** 
 4381              		.loc 11 307 0
 4382 002c 05FB1262 		mls	r2, r5, r2, r6
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4383              		.loc 11 306 0
 4384 0030 0293     		str	r3, [sp, #8]
 307:./lib/ros_lib/ros/node_handle.h **** 
 4385              		.loc 11 307 0
 4386 0032 114E     		ldr	r6, .L228+4
 4387              	.LVL522:
 4388 0034 039B     		ldr	r3, [sp, #12]
 4389 0036 06FB0232 		mla	r2, r6, r2, r3
 4390 003a 0392     		str	r2, [sp, #12]
 4391              	.LVL523:
 4392              	.LBB262:
 4393              	.LBB263:
 4394              	.LBB264:
 4395              	.LBB265:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4396              		.loc 13 134 0
 4397 003c FFF7FEFF 		bl	millis
 4398              	.LVL524:
 4399              	.LBE265:
 4400              	.LBE264:
 326:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 4401              		.loc 11 326 0
 4402 0040 B0FBF5F3 		udiv	r3, r0, r5
 4403 0044 029A     		ldr	r2, [sp, #8]
 327:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4404              		.loc 11 327 0
 4405 0046 0399     		ldr	r1, [sp, #12]
 326:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 4406              		.loc 11 326 0
 4407 0048 013A     		subs	r2, r2, #1
 4408 004a D21A     		subs	r2, r2, r3
 4409 004c 2261     		str	r2, [r4, #16]
 327:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4410              		.loc 11 327 0
 4411 004e 0B4A     		ldr	r2, .L228+8
 4412 0050 05FB1300 		mls	r0, r5, r3, r0
 4413              	.LVL525:
 4414 0054 0A44     		add	r2, r2, r1
 4415 0056 2146     		mov	r1, r4
 4416 0058 06FB1023 		mls	r3, r6, r0, r2
 328:./lib/ros_lib/ros/node_handle.h ****       }
 4417              		.loc 11 328 0
 4418 005c 04F11000 		add	r0, r4, #16
 327:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4419              		.loc 11 327 0
 4420 0060 41F8143F 		str	r3, [r1, #20]!
 328:./lib/ros_lib/ros/node_handle.h ****       }
 4421              		.loc 11 328 0
 4422 0064 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 4423              	.LVL526:
 4424              	.LBE263:
 4425              	.LBE262:
 4426              	.LBB266:
 4427              	.LBB267:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4428              		.loc 13 134 0
 4429 0068 FFF7FEFF 		bl	millis
 4430              	.LVL527:
 4431              	.LBE267:
 4432              	.LBE266:
 310:./lib/ros_lib/ros/node_handle.h ****       }
 4433              		.loc 11 310 0
 4434 006c C4F8FC08 		str	r0, [r4, #2300]
 311:./lib/ros_lib/ros/node_handle.h **** 
 4435              		.loc 11 311 0
 4436 0070 04B0     		add	sp, sp, #16
 4437              	.LCFI57:
 4438              		.cfi_def_cfa_offset 16
 4439              		@ sp needed
 4440 0072 70BD     		pop	{r4, r5, r6, pc}
 4441              	.LVL528:
 4442              	.L229:
 4443              		.align	2
 4444              	.L228:
 4445 0074 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4446 0078 40420F00 		.word	1000000
 4447 007c 00CA9A3B 		.word	1000000000
 4448              		.cfi_endproc
 4449              	.LFE1325:
 4450              		.fnend
 4452              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv,"axG",%p
 4453              		.align	1
 4454              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv
 4455              		.thumb
 4456              		.thumb_func
 4458              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:
 4459              		.fnstart
 4460              	.LFB1318:
 184:./lib/ros_lib/ros/node_handle.h **** 
 4461              		.loc 11 184 0
 4462              		.cfi_startproc
 4463              		@ args = 0, pretend = 0, frame = 0
 4464              		@ frame_needed = 0, uses_anonymous_args = 0
 4465              	.LVL529:
 4466 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4467              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 4468              	.LCFI58:
 4469              		.cfi_def_cfa_offset 32
 4470              		.cfi_offset 3, -32
 4471              		.cfi_offset 4, -28
 4472              		.cfi_offset 5, -24
 4473              		.cfi_offset 6, -20
 4474              		.cfi_offset 7, -16
 4475              		.cfi_offset 8, -12
 4476              		.cfi_offset 9, -8
 4477              		.cfi_offset 14, -4
 184:./lib/ros_lib/ros/node_handle.h **** 
 4478              		.loc 11 184 0
 4479 0004 0446     		mov	r4, r0
 4480              	.LVL530:
 4481              	.LBB275:
 4482              	.LBB276:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4483              		.loc 13 134 0
 4484 0006 FFF7FEFF 		bl	millis
 4485              	.LVL531:
 4486              	.LBE276:
 4487              	.LBE275:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 4488              		.loc 11 188 0
 4489 000a 42F6F822 		movw	r2, #11000
 4490 000e D4F8FC38 		ldr	r3, [r4, #2300]
 4491              	.LBB278:
 4492              	.LBB277:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4493              		.loc 13 134 0
 4494 0012 0646     		mov	r6, r0
 4495              	.LVL532:
 4496              	.LBE277:
 4497              	.LBE278:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 4498              		.loc 11 188 0
 4499 0014 C31A     		subs	r3, r0, r3
 4500 0016 9342     		cmp	r3, r2
 189:./lib/ros_lib/ros/node_handle.h ****          }
 4501              		.loc 11 189 0
 4502 0018 84BF     		itt	hi
 4503 001a 0023     		movhi	r3, #0
 4504 001c 84F8F438 		strbhi	r3, [r4, #2292]
 193:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 4505              		.loc 11 193 0
 4506 0020 D4F8E038 		ldr	r3, [r4, #2272]
 4507 0024 33B1     		cbz	r3, .L232
 194:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 4508              		.loc 11 194 0
 4509 0026 D4F80039 		ldr	r3, [r4, #2304]
 4510 002a 8342     		cmp	r3, r0
 195:./lib/ros_lib/ros/node_handle.h ****           }
 4511              		.loc 11 195 0
 4512 002c 3CBF     		itt	cc
 4513 002e 0023     		movcc	r3, #0
 4514 0030 C4F8E038 		strcc	r3, [r4, #2272]
 4515              	.L232:
 4516              	.LBB279:
 4517              	.LBB280:
 4518              	.LBB281:
 117:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 4519              		.loc 13 117 0
 4520 0034 744F     		ldr	r7, .L272
 4521              	.LBE281:
 4522              	.LBE280:
 251:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 4523              		.loc 11 251 0
 4524 0036 4FF00008 		mov	r8, #0
 268:./lib/ros_lib/ros/node_handle.h ****               }
 4525              		.loc 11 268 0
 4526 003a 04F11809 		add	r9, r4, #24
 4527              	.LVL533:
 4528              	.L233:
 4529              	.LBB284:
 4530              	.LBB282:
 117:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 4531              		.loc 13 117 0
 4532 003e 3A6B     		ldr	r2, [r7, #48]
 4533 0040 FB6A     		ldr	r3, [r7, #44]
 4534 0042 9A42     		cmp	r2, r3
 4535 0044 00F0CC80 		beq	.L234
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 4536              		.loc 13 121 0
 4537 0048 FB6A     		ldr	r3, [r7, #44]
 4538              	.LBE282:
 4539              	.LBE284:
 205:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4540              		.loc 11 205 0
 4541 004a D4F8E058 		ldr	r5, [r4, #2272]
 4542              	.LBB285:
 4543              	.LBB283:
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 4544              		.loc 13 121 0
 4545 004e 3B44     		add	r3, r3, r7
 4546 0050 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 4547              		.loc 13 122 0
 4548 0054 FA6A     		ldr	r2, [r7, #44]
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 4549              		.loc 13 121 0
 4550 0056 DBB2     		uxtb	r3, r3
 4551              	.LVL534:
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 4552              		.loc 13 122 0
 4553 0058 0132     		adds	r2, r2, #1
 4554 005a C2F30902 		ubfx	r2, r2, #0, #10
 4555 005e FA62     		str	r2, [r7, #44]
 4556              	.LVL535:
 4557              	.LBE283:
 4558              	.LBE285:
 204:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 4559              		.loc 11 204 0
 4560 0060 D4F8F028 		ldr	r2, [r4, #2288]
 205:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4561              		.loc 11 205 0
 4562 0064 072D     		cmp	r5, #7
 204:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 4563              		.loc 11 204 0
 4564 0066 1A44     		add	r2, r2, r3
 4565 0068 C4F8F028 		str	r2, [r4, #2288]
 205:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4566              		.loc 11 205 0
 4567 006c 0FD1     		bne	.L235
 206:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 4568              		.loc 11 206 0
 4569 006e D4F8EC28 		ldr	r2, [r4, #2284]
 4570 0072 511C     		adds	r1, r2, #1
 4571 0074 2244     		add	r2, r2, r4
 4572 0076 C4F8EC18 		str	r1, [r4, #2284]
 4573 007a 1376     		strb	r3, [r2, #24]
 207:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 4574              		.loc 11 207 0
 4575 007c D4F8E438 		ldr	r3, [r4, #2276]
 4576 0080 013B     		subs	r3, r3, #1
 4577 0082 C4F8E438 		str	r3, [r4, #2276]
 4578              	.L270:
 208:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 4579              		.loc 11 208 0
 4580 0086 002B     		cmp	r3, #0
 4581 0088 D9D1     		bne	.L233
 209:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 4582              		.loc 11 209 0
 4583 008a 0823     		movs	r3, #8
 4584 008c 1AE0     		b	.L268
 4585              	.L235:
 210:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 4586              		.loc 11 210 0
 4587 008e A5B9     		cbnz	r5, .L238
 211:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 4588              		.loc 11 211 0
 4589 0090 FF2B     		cmp	r3, #255
 4590 0092 07D1     		bne	.L239
 212:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 4591              		.loc 11 212 0
 4592 0094 0123     		movs	r3, #1
 4593 0096 C4F8E038 		str	r3, [r4, #2272]
 213:./lib/ros_lib/ros/node_handle.h ****             }
 4594              		.loc 11 213 0
 4595 009a 06F11403 		add	r3, r6, #20
 4596 009e C4F80039 		str	r3, [r4, #2304]
 4597 00a2 CCE7     		b	.L233
 4598              	.L239:
 4599              	.LVL536:
 4600              	.LBB286:
 4601              	.LBB287:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4602              		.loc 13 134 0
 4603 00a4 FFF7FEFF 		bl	millis
 4604              	.LVL537:
 4605              	.LBE287:
 4606              	.LBE286:
 215:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 4607              		.loc 11 215 0
 4608 00a8 801B     		subs	r0, r0, r6
 4609 00aa 0528     		cmp	r0, #5
 4610 00ac C7D9     		bls	.L233
 217:./lib/ros_lib/ros/node_handle.h ****               return -2;
 4611              		.loc 11 217 0
 4612 00ae 84F8F458 		strb	r5, [r4, #2292]
 218:./lib/ros_lib/ros/node_handle.h ****             }
 4613              		.loc 11 218 0
 4614 00b2 6FF00100 		mvn	r0, #1
 4615 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4616              	.LVL538:
 4617              	.L238:
 220:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 4618              		.loc 11 220 0
 4619 00ba 012D     		cmp	r5, #1
 4620 00bc 0FD1     		bne	.L241
 221:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 4621              		.loc 11 221 0
 4622 00be FE2B     		cmp	r3, #254
 4623 00c0 03D1     		bne	.L242
 222:./lib/ros_lib/ros/node_handle.h ****             }else{
 4624              		.loc 11 222 0
 4625 00c2 0223     		movs	r3, #2
 4626              	.L268:
 4627 00c4 C4F8E038 		str	r3, [r4, #2272]
 4628 00c8 B9E7     		b	.L233
 4629              	.L242:
 225:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 4630              		.loc 11 225 0
 4631 00ca 94F8F438 		ldrb	r3, [r4, #2292]	@ zero_extendqisi2
 224:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 4632              		.loc 11 224 0
 4633 00ce C4F8E088 		str	r8, [r4, #2272]
 225:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 4634              		.loc 11 225 0
 4635 00d2 002B     		cmp	r3, #0
 4636 00d4 B3D1     		bne	.L233
 226:./lib/ros_lib/ros/node_handle.h ****             }
 4637              		.loc 11 226 0
 4638 00d6 2046     		mov	r0, r4
 4639 00d8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
 4640              	.LVL539:
 4641 00dc AFE7     		b	.L233
 4642              	.L241:
 228:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 4643              		.loc 11 228 0
 4644 00de 022D     		cmp	r5, #2
 4645 00e0 05D1     		bne	.L243
 229:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 4646              		.loc 11 229 0
 4647 00e2 C4F8E438 		str	r3, [r4, #2276]
 230:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 4648              		.loc 11 230 0
 4649 00e6 C4F8EC88 		str	r8, [r4, #2284]
 231:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 4650              		.loc 11 231 0
 4651 00ea 0322     		movs	r2, #3
 4652 00ec 20E0     		b	.L269
 4653              	.L243:
 233:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 4654              		.loc 11 233 0
 4655 00ee 032D     		cmp	r5, #3
 4656 00f0 07D1     		bne	.L244
 234:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 4657              		.loc 11 234 0
 4658 00f2 D4F8E428 		ldr	r2, [r4, #2276]
 4659 00f6 02EB0323 		add	r3, r2, r3, lsl #8
 4660 00fa C4F8E438 		str	r3, [r4, #2276]
 235:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 4661              		.loc 11 235 0
 4662 00fe 0423     		movs	r3, #4
 4663 0100 E0E7     		b	.L268
 4664              	.L244:
 236:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 4665              		.loc 11 236 0
 4666 0102 042D     		cmp	r5, #4
 4667 0104 0FD1     		bne	.L245
 237:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 4668              		.loc 11 237 0
 4669 0106 414B     		ldr	r3, .L272+4
 4670 0108 1340     		ands	r3, r3, r2
 4671 010a 002B     		cmp	r3, #0
 4672 010c BEBF     		ittt	lt
 4673 010e 03F1FF33 		addlt	r3, r3, #-1
 4674 0112 63F0FF03 		ornlt	r3, r3, #255
 4675 0116 0133     		addlt	r3, r3, #1
 4676 0118 FF2B     		cmp	r3, #255
 4677 011a 01D1     		bne	.L246
 238:./lib/ros_lib/ros/node_handle.h **** 	    else
 4678              		.loc 11 238 0
 4679 011c 0523     		movs	r3, #5
 4680 011e D1E7     		b	.L268
 4681              	.L246:
 240:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 4682              		.loc 11 240 0
 4683 0120 C4F8E088 		str	r8, [r4, #2272]
 4684 0124 8BE7     		b	.L233
 4685              	.L245:
 241:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 4686              		.loc 11 241 0
 4687 0126 052D     		cmp	r5, #5
 4688 0128 07D1     		bne	.L248
 242:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 4689              		.loc 11 242 0
 4690 012a C4F8E838 		str	r3, [r4, #2280]
 243:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 4691              		.loc 11 243 0
 4692 012e 0622     		movs	r2, #6
 4693              	.L269:
 4694 0130 C4F8E028 		str	r2, [r4, #2272]
 244:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 4695              		.loc 11 244 0
 4696 0134 C4F8F038 		str	r3, [r4, #2288]
 4697 0138 81E7     		b	.L233
 4698              	.L248:
 245:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 4699              		.loc 11 245 0
 4700 013a 062D     		cmp	r5, #6
 4701 013c 0BD1     		bne	.L249
 246:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 4702              		.loc 11 246 0
 4703 013e D4F8E828 		ldr	r2, [r4, #2280]
 4704 0142 02EB0323 		add	r3, r2, r3, lsl #8
 4705 0146 C4F8E838 		str	r3, [r4, #2280]
 247:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 4706              		.loc 11 247 0
 4707 014a 0723     		movs	r3, #7
 4708 014c C4F8E038 		str	r3, [r4, #2272]
 248:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 4709              		.loc 11 248 0
 4710 0150 D4F8E438 		ldr	r3, [r4, #2276]
 4711 0154 97E7     		b	.L270
 4712              	.L249:
 250:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 4713              		.loc 11 250 0
 4714 0156 082D     		cmp	r5, #8
 4715 0158 7FF471AF 		bne	.L233
 252:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 4716              		.loc 11 252 0
 4717 015c 2B4B     		ldr	r3, .L272+4
 251:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 4718              		.loc 11 251 0
 4719 015e C4F8E088 		str	r8, [r4, #2272]
 252:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 4720              		.loc 11 252 0
 4721 0162 1340     		ands	r3, r3, r2
 4722 0164 002B     		cmp	r3, #0
 4723 0166 BEBF     		ittt	lt
 4724 0168 03F1FF33 		addlt	r3, r3, #-1
 4725 016c 63F0FF03 		ornlt	r3, r3, #255
 4726 0170 0133     		addlt	r3, r3, #1
 4727 0172 FF2B     		cmp	r3, #255
 4728 0174 7FF463AF 		bne	.L233
 253:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 4729              		.loc 11 253 0
 4730 0178 D4F8E838 		ldr	r3, [r4, #2280]
 4731 017c 6BB9     		cbnz	r3, .L252
 254:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 4732              		.loc 11 254 0
 4733 017e 2046     		mov	r0, r4
 4734 0180 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
 4735              	.LVL540:
 255:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 4736              		.loc 11 255 0
 4737 0184 2046     		mov	r0, r4
 4738 0186 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv
 4739              	.LVL541:
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 4740              		.loc 11 256 0
 4741 018a C4F8F868 		str	r6, [r4, #2296]
 257:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 4742              		.loc 11 257 0
 4743 018e C4F8FC68 		str	r6, [r4, #2300]
 258:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 4744              		.loc 11 258 0
 4745 0192 4FF0FF30 		mov	r0, #-1
 4746 0196 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4747              	.LVL542:
 4748              	.L252:
 259:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 4749              		.loc 11 259 0
 4750 019a 0A2B     		cmp	r3, #10
 4751 019c 04D1     		bne	.L253
 260:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 4752              		.loc 11 260 0
 4753 019e 4946     		mov	r1, r9
 4754 01a0 2046     		mov	r0, r4
 4755 01a2 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh
 4756              	.LVL543:
 4757 01a6 4AE7     		b	.L233
 4758              	.L253:
 261:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 4759              		.loc 11 261 0
 4760 01a8 062B     		cmp	r3, #6
 4761 01aa 08D1     		bne	.L254
 262:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 4762              		.loc 11 262 0
 4763 01ac 4946     		mov	r1, r9
 4764 01ae 04F60810 		addw	r0, r4, #2312
 4765 01b2 FFF7FEFF 		bl	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 4766              	.LVL544:
 263:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 4767              		.loc 11 263 0
 4768 01b6 0123     		movs	r3, #1
 4769 01b8 84F80439 		strb	r3, [r4, #2308]
 4770 01bc 3FE7     		b	.L233
 4771              	.L254:
 264:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 4772              		.loc 11 264 0
 4773 01be 0B2B     		cmp	r3, #11
 4774 01c0 02D1     		bne	.L255
 265:./lib/ros_lib/ros/node_handle.h ****               }else{
 4775              		.loc 11 265 0
 4776 01c2 84F8F488 		strb	r8, [r4, #2292]
 4777 01c6 3AE7     		b	.L233
 4778              	.L255:
 267:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 4779              		.loc 11 267 0
 4780 01c8 04EB8303 		add	r3, r4, r3, lsl #2
 4781 01cc D3F8EC06 		ldr	r0, [r3, #1772]
 4782 01d0 0028     		cmp	r0, #0
 4783 01d2 3FF434AF 		beq	.L233
 268:./lib/ros_lib/ros/node_handle.h ****               }
 4784              		.loc 11 268 0
 4785 01d6 0368     		ldr	r3, [r0]
 4786 01d8 4946     		mov	r1, r9
 4787 01da 1B68     		ldr	r3, [r3]
 4788 01dc 9847     		blx	r3
 4789              	.LVL545:
 4790 01de 2EE7     		b	.L233
 4791              	.L234:
 4792              	.LBE279:
 275:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 4793              		.loc 11 275 0
 4794 01e0 94F8F408 		ldrb	r0, [r4, #2292]	@ zero_extendqisi2
 4795 01e4 70B1     		cbz	r0, .L271
 275:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 4796              		.loc 11 275 0 is_stmt 0 discriminator 1
 4797 01e6 40F6C412 		movw	r2, #2500
 4798 01ea D4F8F838 		ldr	r3, [r4, #2296]
 4799 01ee F31A     		subs	r3, r6, r3
 4800 01f0 9342     		cmp	r3, r2
 4801 01f2 04D9     		bls	.L257
 276:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 4802              		.loc 11 276 0 is_stmt 1
 4803 01f4 2046     		mov	r0, r4
 4804 01f6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
 4805              	.LVL546:
 277:./lib/ros_lib/ros/node_handle.h ****         }
 4806              		.loc 11 277 0
 4807 01fa C4F8F868 		str	r6, [r4, #2296]
 4808              	.L257:
 280:./lib/ros_lib/ros/node_handle.h ****       }
 4809              		.loc 11 280 0
 4810 01fe 0020     		movs	r0, #0
 4811 0200 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4812              	.LVL547:
 4813              	.L271:
 281:./lib/ros_lib/ros/node_handle.h **** 
 4814              		.loc 11 281 0
 4815 0204 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4816              	.LVL548:
 4817              	.L273:
 4818              		.align	2
 4819              	.L272:
 4820 0208 00000000 		.word	.LANCHOR1
 4821 020c FF000080 		.word	-2147483393
 4822              		.cfi_endproc
 4823              	.LFE1318:
 4824              		.fnend
 4826              		.global	__aeabi_f2iz
 4827              		.section	.text.startup,"ax",%progbits
 4828              		.align	1
 4829              		.global	main
 4830              		.thumb
 4831              		.thumb_func
 4833              	main:
 4834              		.fnstart
 4835              	.LFB1288:
 161:src/main.cpp  ****   #ifdef DEBUG
 4836              		.loc 12 161 0
 4837              		.cfi_startproc
 4838              		@ args = 0, pretend = 0, frame = 744
 4839              		@ frame_needed = 0, uses_anonymous_args = 0
 4840 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4841              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4842              	.LCFI59:
 4843              		.cfi_def_cfa_offset 36
 4844              		.cfi_offset 4, -36
 4845              		.cfi_offset 5, -32
 4846              		.cfi_offset 6, -28
 4847              		.cfi_offset 7, -24
 4848              		.cfi_offset 8, -20
 4849              		.cfi_offset 9, -16
 4850              		.cfi_offset 10, -12
 4851              		.cfi_offset 11, -8
 4852              		.cfi_offset 14, -4
 4853              	.LBB302:
 4854              	.LBB303:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 4855              		.loc 11 147 0
 4856 0004 2B4C     		ldr	r4, .L311
 4857              	.LBE303:
 4858              	.LBE302:
 161:src/main.cpp  ****   #ifdef DEBUG
 4859              		.loc 12 161 0
 4860              		.pad #780
 4861 0006 ADF5437D 		sub	sp, sp, #780
 4862              	.LCFI60:
 4863              		.cfi_def_cfa_offset 816
 166:src/main.cpp  ****   SysTick_Init();
 4864              		.loc 12 166 0
 4865 000a FFF7FEFF 		bl	RCC_Configuration
 4866              	.LVL549:
 167:src/main.cpp  **** 
 4867              		.loc 12 167 0
 4868 000e FFF7FEFF 		bl	SysTick_Init
 4869              	.LVL550:
 169:src/main.cpp  ****   I2C1_Init();
 4870              		.loc 12 169 0
 4871 0012 0121     		movs	r1, #1
 4872 0014 2848     		ldr	r0, .L311+4
 4873 0016 FFF7FEFF 		bl	GPIO_PinRemapConfig
 4874              	.LVL551:
 170:src/main.cpp  ****   DEBUG_Init();
 4875              		.loc 12 170 0
 4876 001a FFF7FEFF 		bl	I2C1_Init
 4877              	.LVL552:
 171:src/main.cpp  ****   SHUTDOWN_Init();
 4878              		.loc 12 171 0
 4879 001e FFF7FEFF 		bl	DEBUG_Init
 4880              	.LVL553:
 172:src/main.cpp  ****   LED_Init();
 4881              		.loc 12 172 0
 4882 0022 FFF7FEFF 		bl	SHUTDOWN_Init
 4883              	.LVL554:
 173:src/main.cpp  **** 
 4884              		.loc 12 173 0
 4885 0026 FFF7FEFF 		bl	LED_Init
 4886              	.LVL555:
 4887              	.LBB305:
 4888              	.LBB304:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 4889              		.loc 11 147 0
 4890 002a 04F23C40 		addw	r0, r4, #1084
 4891 002e FFF7FEFF 		bl	_ZN15ArduinoHardware4initEv
 4892              	.LVL556:
 148:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 4893              		.loc 11 148 0
 4894 0032 0023     		movs	r3, #0
 4895 0034 C4F8183D 		str	r3, [r4, #3352]
 149:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 4896              		.loc 11 149 0
 4897 0038 C4F81C3D 		str	r3, [r4, #3356]
 150:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 4898              		.loc 11 150 0
 4899 003c C4F8243D 		str	r3, [r4, #3364]
 151:./lib/ros_lib/ros/node_handle.h ****       };
 4900              		.loc 11 151 0
 4901 0040 C4F8203D 		str	r3, [r4, #3360]
 4902              	.LVL557:
 4903 0044 04F54B62 		add	r2, r4, #3248
 4904              	.LVL558:
 4905              	.L277:
 4906              	.LBE304:
 4907              	.LBE305:
 4908              	.LBB306:
 4909              	.LBB307:
 353:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 4910              		.loc 11 353 0
 4911 0048 52F8041F 		ldr	r1, [r2, #4]!
 4912 004c 41B9     		cbnz	r1, .L275
 354:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 4913              		.loc 11 354 0
 4914 004e 1B49     		ldr	r1, .L311+8
 4915 0050 04EB8302 		add	r2, r4, r3, lsl #2
 355:./lib/ros_lib/ros/node_handle.h ****             return true;
 4916              		.loc 11 355 0
 4917 0054 6433     		adds	r3, r3, #100
 4918              	.LVL559:
 354:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 4919              		.loc 11 354 0
 4920 0056 C2F8B41C 		str	r1, [r2, #3252]
 355:./lib/ros_lib/ros/node_handle.h ****             return true;
 4921              		.loc 11 355 0
 4922 005a C4F86C3D 		str	r3, [r4, #3436]
 4923 005e 02E0     		b	.L276
 4924              	.LVL560:
 4925              	.L275:
 352:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 4926              		.loc 11 352 0
 4927 0060 0133     		adds	r3, r3, #1
 4928              	.LVL561:
 4929 0062 192B     		cmp	r3, #25
 4930 0064 F0D1     		bne	.L277
 4931              	.LVL562:
 4932              	.L276:
 4933 0066 1649     		ldr	r1, .L311+12
 4934              	.LBE307:
 4935              	.LBE306:
 4936              	.LBB309:
 4937              	.LBB310:
 338:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 4938              		.loc 11 338 0
 4939 0068 0023     		movs	r3, #0
 4940              	.LBE310:
 4941              	.LBE309:
 4942              	.LBB312:
 4943              	.LBB308:
 352:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 4944              		.loc 11 352 0
 4945 006a 0A46     		mov	r2, r1
 4946              	.LVL563:
 4947              	.L280:
 4948              	.LBE308:
 4949              	.LBE312:
 4950              	.LBB313:
 4951              	.LBB311:
 339:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 4952              		.loc 11 339 0
 4953 006c 52F8040F 		ldr	r0, [r2, #4]!
 4954 0070 60B9     		cbnz	r0, .L278
 340:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 4955              		.loc 11 340 0
 4956 0072 144A     		ldr	r2, .L311+16
 4957 0074 04EB8300 		add	r0, r4, r3, lsl #2
 4958 0078 C0F8502C 		str	r2, [r0, #3152]
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 4959              		.loc 11 341 0
 4960 007c 7D33     		adds	r3, r3, #125
 4961              	.LVL564:
 342:./lib/ros_lib/ros/node_handle.h ****             return true;
 4962              		.loc 11 342 0
 4963 007e A2F51762 		sub	r2, r2, #2416
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 4964              		.loc 11 341 0
 4965 0082 C4F8B03D 		str	r3, [r4, #3504]
 342:./lib/ros_lib/ros/node_handle.h ****             return true;
 4966              		.loc 11 342 0
 4967 0086 C4F8B42D 		str	r2, [r4, #3508]
 4968 008a 02E0     		b	.L279
 4969              	.LVL565:
 4970              	.L278:
 338:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 4971              		.loc 11 338 0
 4972 008c 0133     		adds	r3, r3, #1
 4973              	.LVL566:
 4974 008e 192B     		cmp	r3, #25
 4975 0090 ECD1     		bne	.L280
 4976              	.LVL567:
 4977              	.L279:
 4978              	.LBE311:
 4979              	.LBE313:
 4980              	.LBB314:
 4981              	.LBB315:
 4982 0092 0023     		movs	r3, #0
 4983              	.LVL568:
 4984              	.L283:
 339:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 4985              		.loc 11 339 0
 4986 0094 51F8042F 		ldr	r2, [r1, #4]!
 4987 0098 C2B9     		cbnz	r2, .L281
 340:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 4988              		.loc 11 340 0
 4989 009a 0B4A     		ldr	r2, .L311+20
 4990 009c 04EB8301 		add	r1, r4, r3, lsl #2
 4991 00a0 C1F8502C 		str	r2, [r1, #3152]
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 4992              		.loc 11 341 0
 4993 00a4 7D33     		adds	r3, r3, #125
 4994              	.LVL569:
 342:./lib/ros_lib/ros/node_handle.h ****             return true;
 4995              		.loc 11 342 0
 4996 00a6 A2F68412 		subw	r2, r2, #2436
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 4997              		.loc 11 341 0
 4998 00aa C4F8C43D 		str	r3, [r4, #3524]
 342:./lib/ros_lib/ros/node_handle.h ****             return true;
 4999              		.loc 11 342 0
 5000 00ae C4F8C82D 		str	r2, [r4, #3528]
 5001 00b2 0EE0     		b	.L282
 5002              	.L312:
 5003              		.align	2
 5004              	.L311:
 5005 00b4 00000000 		.word	.LANCHOR1
 5006 00b8 00023000 		.word	3146240
 5007 00bc 680D0000 		.word	.LANCHOR1+3432
 5008 00c0 4C0C0000 		.word	.LANCHOR1+3148
 5009 00c4 A80D0000 		.word	.LANCHOR1+3496
 5010 00c8 BC0D0000 		.word	.LANCHOR1+3516
 5011              	.LVL570:
 5012              	.L281:
 338:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 5013              		.loc 11 338 0
 5014 00cc 0133     		adds	r3, r3, #1
 5015              	.LVL571:
 5016 00ce 192B     		cmp	r3, #25
 5017 00d0 E0D1     		bne	.L283
 5018              	.LVL572:
 5019              	.L282:
 5020              	.LBE315:
 5021              	.LBE314:
 191:src/main.cpp  **** 
 5022              		.loc 12 191 0
 5023 00d2 4FF00003 		mov	r3, #0
 235:src/main.cpp  ****   SL.m_ServoLimitMin = 7925;
 5024              		.loc 12 235 0
 5025 00d6 40F2E976 		movw	r6, #2025
 236:src/main.cpp  **** 
 5026              		.loc 12 236 0
 5027 00da 41F6F568 		movw	r8, #7925
 191:src/main.cpp  **** 
 5028              		.loc 12 191 0
 5029 00de 84F83434 		strb	r3, [r4, #1076]
 5030              	.LVL573:
 222:src/main.cpp  ****   //}
 5031              		.loc 12 222 0
 5032 00e2 B94B     		ldr	r3, .L313
 232:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 5033              		.loc 12 232 0
 5034 00e4 0427     		movs	r7, #4
 222:src/main.cpp  ****   //}
 5035              		.loc 12 222 0
 5036 00e6 E360     		str	r3, [r4, #12]	@ float
 226:src/main.cpp  ****   //}
 5037              		.loc 12 226 0
 5038 00e8 B84B     		ldr	r3, .L313+4
 229:src/main.cpp  **** 
 5039              		.loc 12 229 0
 5040 00ea 4FF47A70 		mov	r0, #1000
 226:src/main.cpp  ****   //}
 5041              		.loc 12 226 0
 5042 00ee 2361     		str	r3, [r4, #16]	@ float
 229:src/main.cpp  **** 
 5043              		.loc 12 229 0
 5044 00f0 FFF7FEFF 		bl	delay
 5045              	.LVL574:
 232:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 5046              		.loc 12 232 0
 5047 00f4 B64B     		ldr	r3, .L313+8
 5048 00f6 B74A     		ldr	r2, .L313+12
 5049 00f8 0121     		movs	r1, #1
 5050 00fa 0097     		str	r7, [sp]
 5051 00fc 26A8     		add	r0, sp, #152
 5052 00fe FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5053              	.LVL575:
 233:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 5054              		.loc 12 233 0
 5055 0102 4FF40073 		mov	r3, #512
 234:src/main.cpp  ****   SL.m_ServoLimitMax = 2025;
 5056              		.loc 12 234 0
 5057 0106 B44D     		ldr	r5, .L313+16
 233:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 5058              		.loc 12 233 0
 5059 0108 2C93     		str	r3, [sp, #176]
 238:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 5060              		.loc 12 238 0
 5061 010a 0323     		movs	r3, #3
 5062 010c 0093     		str	r3, [sp]
 5063 010e B34A     		ldr	r2, .L313+20
 5064 0110 AF4B     		ldr	r3, .L313+8
 5065 0112 0121     		movs	r1, #1
 5066 0114 40A8     		add	r0, sp, #256
 235:src/main.cpp  ****   SL.m_ServoLimitMin = 7925;
 5067              		.loc 12 235 0
 5068 0116 2A96     		str	r6, [sp, #168]
 236:src/main.cpp  **** 
 5069              		.loc 12 236 0
 5070 0118 CDF8AC80 		str	r8, [sp, #172]
 234:src/main.cpp  ****   SL.m_ServoLimitMax = 2025;
 5071              		.loc 12 234 0
 5072 011c 2D95     		str	r5, [sp, #180]
 238:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 5073              		.loc 12 238 0
 5074 011e FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5075              	.LVL576:
 241:src/main.cpp  ****   SR.m_ServoLimitMin = 2025;
 5076              		.loc 12 241 0
 5077 0122 CDF81081 		str	r8, [sp, #272]
 244:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 5078              		.loc 12 244 0
 5079 0126 4FF00108 		mov	r8, #1
 239:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 5080              		.loc 12 239 0
 5081 012a 4FF48079 		mov	r9, #256
 244:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 5082              		.loc 12 244 0
 5083 012e CDF80080 		str	r8, [sp]
 5084 0132 AB4B     		ldr	r3, .L313+24
 5085 0134 AB4A     		ldr	r2, .L313+28
 5086 0136 0221     		movs	r1, #2
 5087 0138 5AA8     		add	r0, sp, #360
 239:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 5088              		.loc 12 239 0
 5089 013a CDF81891 		str	r9, [sp, #280]
 242:src/main.cpp  **** 
 5090              		.loc 12 242 0
 5091 013e 4596     		str	r6, [sp, #276]
 240:src/main.cpp  ****   SR.m_ServoLimitMax = 7925;
 5092              		.loc 12 240 0
 5093 0140 4795     		str	r5, [sp, #284]
 247:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 5094              		.loc 12 247 0
 5095 0142 A94E     		ldr	r6, .L313+32
 244:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 5096              		.loc 12 244 0
 5097 0144 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5098              	.LVL577:
 247:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 5099              		.loc 12 247 0
 5100 0148 A84A     		ldr	r2, .L313+36
 5101 014a 4FF40043 		mov	r3, #32768
 5102 014e 8DE80C00 		stmia	sp, {r2, r3}
 5103 0152 0696     		str	r6, [sp, #24]
 5104 0154 CDF81490 		str	r9, [sp, #20]
 5105 0158 0496     		str	r6, [sp, #16]
 5106 015a CDF80C80 		str	r8, [sp, #12]
 5107 015e 0292     		str	r2, [sp, #8]
 5108 0160 4FF48043 		mov	r3, #16384
 5109 0164 4FF40051 		mov	r1, #8192
 5110 0168 5AA8     		add	r0, sp, #360
 5111 016a FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5112              	.LVL578:
 248:src/main.cpp  ****   FR.setRegulator(FF,KP,KI,KD,integralSaturation);
 5113              		.loc 12 248 0
 5114 016e 4FF01803 		mov	r3, #24	@ movhi
 249:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 5115              		.loc 12 249 0
 5116 0172 DFF8A892 		ldr	r9, .L313+84
 5117 0176 DFF8A8A2 		ldr	r10, .L313+88
 250:src/main.cpp  **** 
 5118              		.loc 12 250 0
 5119 017a DFF8A882 		ldr	r8, .L313+92
 248:src/main.cpp  ****   FR.setRegulator(FF,KP,KI,KD,integralSaturation);
 5120              		.loc 12 248 0
 5121 017e ADF8B031 		strh	r3, [sp, #432]	@ movhi
 249:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 5122              		.loc 12 249 0
 5123 0182 9B4A     		ldr	r2, .L313+40
 5124 0184 9B4B     		ldr	r3, .L313+44
 5125 0186 9C49     		ldr	r1, .L313+48
 5126 0188 5AA8     		add	r0, sp, #360
 5127 018a CDF80490 		str	r9, [sp, #4]	@ float
 5128 018e CDF800A0 		str	r10, [sp]	@ float
 5129 0192 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5130              	.LVL579:
 252:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 5131              		.loc 12 252 0
 5132 0196 994B     		ldr	r3, .L313+52
 5133 0198 994A     		ldr	r2, .L313+56
 5134 019a 0221     		movs	r1, #2
 5135 019c 0097     		str	r7, [sp]
 5136 019e 74A8     		add	r0, sp, #464
 250:src/main.cpp  **** 
 5137              		.loc 12 250 0
 5138 01a0 CDF8CC81 		str	r8, [sp, #460]	@ float
 252:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 5139              		.loc 12 252 0
 5140 01a4 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5141              	.LVL580:
 255:src/main.cpp  ****   FL.encoderAddr = (0x10);
 5142              		.loc 12 255 0
 5143 01a8 0223     		movs	r3, #2
 5144 01aa 4FF0100B 		mov	fp, #16
 5145 01ae 0593     		str	r3, [sp, #20]
 5146 01b0 4FF48063 		mov	r3, #1024
 5147 01b4 8DE84008 		stmia	sp, {r6, fp}
 5148 01b8 0393     		str	r3, [sp, #12]
 5149 01ba 0296     		str	r6, [sp, #8]
 5150 01bc 2023     		movs	r3, #32
 5151 01be 2A46     		mov	r2, r5
 5152 01c0 3946     		mov	r1, r7
 5153 01c2 74A8     		add	r0, sp, #464
 5154 01c4 0695     		str	r5, [sp, #24]
 5155 01c6 0495     		str	r5, [sp, #16]
 5156 01c8 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5157              	.LVL581:
 257:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 5158              		.loc 12 257 0
 5159 01cc 894B     		ldr	r3, .L313+44
 5160 01ce 884A     		ldr	r2, .L313+40
 5161 01d0 8949     		ldr	r1, .L313+48
 5162 01d2 74A8     		add	r0, sp, #464
 5163 01d4 CDF80490 		str	r9, [sp, #4]	@ float
 5164 01d8 CDF800A0 		str	r10, [sp]	@ float
 256:src/main.cpp  ****   FL.setRegulator(FF,KP,KI,KD,integralSaturation);
 5165              		.loc 12 256 0
 5166 01dc ADF818B2 		strh	fp, [sp, #536]	@ movhi
 257:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 5167              		.loc 12 257 0
 5168 01e0 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5169              	.LVL582:
 260:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 5170              		.loc 12 260 0
 5171 01e4 4FF08043 		mov	r3, #1073741824
 5172 01e8 864A     		ldr	r2, .L313+60
 5173 01ea 0221     		movs	r1, #2
 5174 01ec 0097     		str	r7, [sp]
 5175 01ee 8EA8     		add	r0, sp, #568
 258:src/main.cpp  **** 
 5176              		.loc 12 258 0
 5177 01f0 CDF83482 		str	r8, [sp, #564]	@ float
 260:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 5178              		.loc 12 260 0
 5179 01f4 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5180              	.LVL583:
 263:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 5181              		.loc 12 263 0
 5182 01f8 4FF48043 		mov	r3, #16384
 5183 01fc 4FF0080B 		mov	fp, #8
 5184 0200 0393     		str	r3, [sp, #12]
 5185 0202 4FF40053 		mov	r3, #8192
 5186 0206 0696     		str	r6, [sp, #24]
 5187 0208 0193     		str	r3, [sp, #4]
 5188 020a 2A46     		mov	r2, r5
 5189 020c 4FF48053 		mov	r3, #4096
 5190 0210 4FF40061 		mov	r1, #2048
 5191 0214 8EA8     		add	r0, sp, #568
 5192 0216 CDF814B0 		str	fp, [sp, #20]
 5193 021a 0495     		str	r5, [sp, #16]
 5194 021c 0295     		str	r5, [sp, #8]
 5195 021e 0095     		str	r5, [sp]
 5196 0220 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5197              	.LVL584:
 264:src/main.cpp  ****   RL.setRegulator(FF,KP,KI,KD,integralSaturation);
 5198              		.loc 12 264 0
 5199 0224 1423     		movs	r3, #20
 5200 0226 ADF88032 		strh	r3, [sp, #640]	@ movhi
 265:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 5201              		.loc 12 265 0
 5202 022a 714A     		ldr	r2, .L313+40
 5203 022c 714B     		ldr	r3, .L313+44
 5204 022e 7249     		ldr	r1, .L313+48
 5205 0230 8EA8     		add	r0, sp, #568
 5206 0232 CDF80490 		str	r9, [sp, #4]	@ float
 5207 0236 CDF800A0 		str	r10, [sp]	@ float
 5208 023a FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5209              	.LVL585:
 268:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 5210              		.loc 12 268 0
 5211 023e 684B     		ldr	r3, .L313+24
 5212 0240 714A     		ldr	r2, .L313+64
 5213 0242 0221     		movs	r1, #2
 5214 0244 0097     		str	r7, [sp]
 5215 0246 A8A8     		add	r0, sp, #672
 266:src/main.cpp  **** 
 5216              		.loc 12 266 0
 5217 0248 CDF89C82 		str	r8, [sp, #668]	@ float
 268:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 5218              		.loc 12 268 0
 5219 024c FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5220              	.LVL586:
 271:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 5221              		.loc 12 271 0
 5222 0250 4FF40063 		mov	r3, #2048
 5223 0254 0593     		str	r3, [sp, #20]
 5224 0256 4FF40043 		mov	r3, #32768
 5225 025a 0696     		str	r6, [sp, #24]
 5226 025c 0296     		str	r6, [sp, #8]
 5227 025e 0193     		str	r3, [sp, #4]
 5228 0260 0096     		str	r6, [sp]
 5229 0262 4FF48053 		mov	r3, #4096
 5230 0266 2A46     		mov	r2, r5
 5231 0268 4FF40041 		mov	r1, #32768
 5232 026c A8A8     		add	r0, sp, #672
 5233 026e 0495     		str	r5, [sp, #16]
 5234 0270 CDF80CB0 		str	fp, [sp, #12]
 5235 0274 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5236              	.LVL587:
 272:src/main.cpp  ****   RR.setRegulator(FF,KP,KI,KD,integralSaturation);
 5237              		.loc 12 272 0
 5238 0278 1C23     		movs	r3, #28
 273:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 5239              		.loc 12 273 0
 5240 027a 5D4A     		ldr	r2, .L313+40
 5241 027c 5E49     		ldr	r1, .L313+48
 272:src/main.cpp  ****   RR.setRegulator(FF,KP,KI,KD,integralSaturation);
 5242              		.loc 12 272 0
 5243 027e ADF8E832 		strh	r3, [sp, #744]	@ movhi
 273:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 5244              		.loc 12 273 0
 5245 0282 A8A8     		add	r0, sp, #672
 5246 0284 5B4B     		ldr	r3, .L313+44
 5247 0286 CDF80490 		str	r9, [sp, #4]	@ float
 5248 028a CDF800A0 		str	r10, [sp]	@ float
 5249 028e FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5250              	.LVL588:
 277:src/main.cpp  ****   if(!servo_left->motorInit()){
 5251              		.loc 12 277 0
 5252 0292 26A8     		add	r0, sp, #152
 274:src/main.cpp  **** 
 5253              		.loc 12 274 0
 5254 0294 CDF80483 		str	r8, [sp, #772]	@ float
 277:src/main.cpp  ****   if(!servo_left->motorInit()){
 5255              		.loc 12 277 0
 5256 0298 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5257              	.LVL589:
 278:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 5258              		.loc 12 278 0
 5259 029c 0368     		ldr	r3, [r0]
 277:src/main.cpp  ****   if(!servo_left->motorInit()){
 5260              		.loc 12 277 0
 5261 029e 6061     		str	r0, [r4, #20]
 278:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 5262              		.loc 12 278 0
 5263 02a0 DB68     		ldr	r3, [r3, #12]
 5264 02a2 9847     		blx	r3
 5265              	.LVL590:
 283:src/main.cpp  ****   if(!servo_right->motorInit()){
 5266              		.loc 12 283 0
 5267 02a4 40A8     		add	r0, sp, #256
 5268 02a6 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5269              	.LVL591:
 284:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 5270              		.loc 12 284 0
 5271 02aa 0368     		ldr	r3, [r0]
 283:src/main.cpp  ****   if(!servo_right->motorInit()){
 5272              		.loc 12 283 0
 5273 02ac A061     		str	r0, [r4, #24]
 284:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 5274              		.loc 12 284 0
 5275 02ae DB68     		ldr	r3, [r3, #12]
 5276 02b0 9847     		blx	r3
 5277              	.LVL592:
 289:src/main.cpp  ****   if(!front_left->motorInit()){
 5278              		.loc 12 289 0
 5279 02b2 74A8     		add	r0, sp, #464
 5280 02b4 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5281              	.LVL593:
 290:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 5282              		.loc 12 290 0
 5283 02b8 0368     		ldr	r3, [r0]
 289:src/main.cpp  ****   if(!front_left->motorInit()){
 5284              		.loc 12 289 0
 5285 02ba C4F8D00D 		str	r0, [r4, #3536]
 290:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 5286              		.loc 12 290 0
 5287 02be DB68     		ldr	r3, [r3, #12]
 5288 02c0 9847     		blx	r3
 5289              	.LVL594:
 295:src/main.cpp  ****   if(!front_right->motorInit()){
 5290              		.loc 12 295 0
 5291 02c2 5AA8     		add	r0, sp, #360
 5292 02c4 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5293              	.LVL595:
 296:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 5294              		.loc 12 296 0
 5295 02c8 0368     		ldr	r3, [r0]
 295:src/main.cpp  ****   if(!front_right->motorInit()){
 5296              		.loc 12 295 0
 5297 02ca C4F8D40D 		str	r0, [r4, #3540]
 296:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 5298              		.loc 12 296 0
 5299 02ce DB68     		ldr	r3, [r3, #12]
 5300 02d0 9847     		blx	r3
 5301              	.LVL596:
 301:src/main.cpp  ****   if(!rear_left->motorInit()){
 5302              		.loc 12 301 0
 5303 02d2 8EA8     		add	r0, sp, #568
 5304 02d4 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5305              	.LVL597:
 302:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 5306              		.loc 12 302 0
 5307 02d8 0368     		ldr	r3, [r0]
 301:src/main.cpp  ****   if(!rear_left->motorInit()){
 5308              		.loc 12 301 0
 5309 02da C4F8D80D 		str	r0, [r4, #3544]
 302:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 5310              		.loc 12 302 0
 5311 02de DB68     		ldr	r3, [r3, #12]
 5312 02e0 9847     		blx	r3
 5313              	.LVL598:
 307:src/main.cpp  ****   if(!rear_right->motorInit()){
 5314              		.loc 12 307 0
 5315 02e2 A8A8     		add	r0, sp, #672
 5316 02e4 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5317              	.LVL599:
 308:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 5318              		.loc 12 308 0
 5319 02e8 0368     		ldr	r3, [r0]
 307:src/main.cpp  ****   if(!rear_right->motorInit()){
 5320              		.loc 12 307 0
 5321 02ea C4F8DC0D 		str	r0, [r4, #3548]
 308:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 5322              		.loc 12 308 0
 5323 02ee DB68     		ldr	r3, [r3, #12]
 5324 02f0 9847     		blx	r3
 5325              	.LVL600:
 313:src/main.cpp  ****   odom_msg.data_length = 3;
 5326              		.loc 12 313 0
 5327 02f2 0C20     		movs	r0, #12
 5328 02f4 FFF7FEFF 		bl	_Znaj
 5329              	.LVL601:
 314:src/main.cpp  **** 
 5330              		.loc 12 314 0
 5331 02f8 4FF00303 		mov	r3, #3
 313:src/main.cpp  ****   odom_msg.data_length = 3;
 5332              		.loc 12 313 0
 5333 02fc C4F80C0E 		str	r0, [r4, #3596]
 316:src/main.cpp  ****   debug_msg.data_length = 6;
 5334              		.loc 12 316 0
 5335 0300 1820     		movs	r0, #24
 314:src/main.cpp  **** 
 5336              		.loc 12 314 0
 5337 0302 84F8043E 		strb	r3, [r4, #3588]
 316:src/main.cpp  ****   debug_msg.data_length = 6;
 5338              		.loc 12 316 0
 5339 0306 FFF7FEFF 		bl	_Znaj
 5340              	.LVL602:
 317:src/main.cpp  ****   
 5341              		.loc 12 317 0
 5342 030a 0623     		movs	r3, #6
 316:src/main.cpp  ****   debug_msg.data_length = 6;
 5343              		.loc 12 316 0
 5344 030c C4F83C0E 		str	r0, [r4, #3644]
 321:src/main.cpp  ****   servo_right->setReference(135);
 5345              		.loc 12 321 0
 5346 0310 6069     		ldr	r0, [r4, #20]
 317:src/main.cpp  ****   
 5347              		.loc 12 317 0
 5348 0312 84F8343E 		strb	r3, [r4, #3636]
 321:src/main.cpp  ****   servo_right->setReference(135);
 5349              		.loc 12 321 0
 5350 0316 0368     		ldr	r3, [r0]
 5351 0318 3C49     		ldr	r1, .L313+68
 5352 031a 5B69     		ldr	r3, [r3, #20]
 5353 031c 9847     		blx	r3
 5354              	.LVL603:
 322:src/main.cpp  ****   front_right->setReference(0);
 5355              		.loc 12 322 0
 5356 031e A069     		ldr	r0, [r4, #24]
 5357 0320 3A49     		ldr	r1, .L313+68
 5358 0322 0368     		ldr	r3, [r0]
 5359 0324 3A4E     		ldr	r6, .L313+72
 5360 0326 5B69     		ldr	r3, [r3, #20]
 5361 0328 9847     		blx	r3
 5362              	.LVL604:
 323:src/main.cpp  ****   front_left->setReference(0);
 5363              		.loc 12 323 0
 5364 032a D4F8D40D 		ldr	r0, [r4, #3540]
 5365 032e 0021     		movs	r1, #0
 5366 0330 0368     		ldr	r3, [r0]
 5367 0332 5B69     		ldr	r3, [r3, #20]
 5368 0334 9847     		blx	r3
 5369              	.LVL605:
 324:src/main.cpp  ****   rear_right->setReference(0);
 5370              		.loc 12 324 0
 5371 0336 D4F8D00D 		ldr	r0, [r4, #3536]
 5372 033a 0021     		movs	r1, #0
 5373 033c 0368     		ldr	r3, [r0]
 5374 033e 5B69     		ldr	r3, [r3, #20]
 5375 0340 9847     		blx	r3
 5376              	.LVL606:
 325:src/main.cpp  ****   rear_left->setReference(0);
 5377              		.loc 12 325 0
 5378 0342 D4F8DC0D 		ldr	r0, [r4, #3548]
 5379 0346 0021     		movs	r1, #0
 5380 0348 0368     		ldr	r3, [r0]
 5381 034a 5B69     		ldr	r3, [r3, #20]
 5382 034c 9847     		blx	r3
 5383              	.LVL607:
 326:src/main.cpp  **** 
 5384              		.loc 12 326 0
 5385 034e D4F8D80D 		ldr	r0, [r4, #3544]
 5386 0352 0021     		movs	r1, #0
 5387 0354 0368     		ldr	r3, [r0]
 328:src/main.cpp  ****   bool connected = false;
 5388              		.loc 12 328 0
 5389 0356 0024     		movs	r4, #0
 326:src/main.cpp  **** 
 5390              		.loc 12 326 0
 5391 0358 5B69     		ldr	r3, [r3, #20]
 5392 035a 9847     		blx	r3
 5393              	.LVL608:
 5394              	.L287:
 340:src/main.cpp  ****     if(cnt < 50)
 5395              		.loc 12 340 0
 5396 035c FFF7FEFF 		bl	millis
 5397              	.LVL609:
 341:src/main.cpp  ****       servo_left->update(dt_s, connected, true);
 5398              		.loc 12 341 0
 5399 0360 312C     		cmp	r4, #49
 340:src/main.cpp  ****     if(cnt < 50)
 5400              		.loc 12 340 0
 5401 0362 0746     		mov	r7, r0
 5402              	.LVL610:
 342:src/main.cpp  ****     else
 5403              		.loc 12 342 0
 5404 0364 D4BF     		ite	le
 5405 0366 7069     		ldrle	r0, [r6, #20]
 5406              	.LVL611:
 344:src/main.cpp  ****     while( millis() - start_time < dt);
 5407              		.loc 12 344 0
 5408 0368 B069     		ldrgt	r0, [r6, #24]
 5409 036a 0022     		movs	r2, #0
 5410 036c 0368     		ldr	r3, [r0]
 5411 036e 2949     		ldr	r1, .L313+76
 5412 0370 D3F81C80 		ldr	r8, [r3, #28]
 5413 0374 0123     		movs	r3, #1
 5414 0376 264D     		ldr	r5, .L313+72
 5415 0378 C047     		blx	r8
 5416              	.LVL612:
 5417              	.L285:
 345:src/main.cpp  ****     cnt++;
 5418              		.loc 12 345 0
 5419 037a FFF7FEFF 		bl	millis
 5420              	.LVL613:
 5421 037e C01B     		subs	r0, r0, r7
 5422 0380 1328     		cmp	r0, #19
 5423 0382 FAD9     		bls	.L285
 346:src/main.cpp  ****   }
 5424              		.loc 12 346 0
 5425 0384 0134     		adds	r4, r4, #1
 5426              	.LVL614:
 339:src/main.cpp  ****     start_time = millis();
 5427              		.loc 12 339 0
 5428 0386 642C     		cmp	r4, #100
 5429 0388 E8D1     		bne	.L287
 349:src/main.cpp  **** 
 5430              		.loc 12 349 0
 5431 038a FF20     		movs	r0, #255
 5432 038c FFF7FEFF 		bl	led_set
 5433              	.LVL615:
 357:src/main.cpp  **** 
 5434              		.loc 12 357 0
 5435 0390 4FF07C51 		mov	r1, #1056964608
 5436 0394 E868     		ldr	r0, [r5, #12]	@ float
 5437 0396 FFF7FEFF 		bl	__aeabi_fmul
 5438              	.LVL616:
 5439 039a FFF7FEFF 		bl	__aeabi_f2d
 5440              	.LVL617:
 5441 039e 0246     		mov	r2, r0
 5442 03a0 0B46     		mov	r3, r1
 5443 03a2 FFF7FEFF 		bl	__aeabi_dmul
 5444              	.LVL618:
 5445 03a6 0246     		mov	r2, r0
 5446 03a8 0B46     		mov	r3, r1
 5447 03aa FFF7FEFF 		bl	__aeabi_dadd
 5448              	.LVL619:
 5449 03ae FFF7FEFF 		bl	sqrt
 5450              	.LVL620:
 5451 03b2 FFF7FEFF 		bl	__aeabi_d2f
 5452              	.LVL621:
 360:src/main.cpp  ****   uint32_t elapsed;
 5453              		.loc 12 360 0
 5454 03b6 184B     		ldr	r3, .L313+80
 5455 03b8 1AAC     		add	r4, sp, #104
 357:src/main.cpp  **** 
 5456              		.loc 12 357 0
 5457 03ba 1490     		str	r0, [sp, #80]	@ float
 5458              	.LVL622:
 360:src/main.cpp  ****   uint32_t elapsed;
 5459              		.loc 12 360 0
 5460 03bc 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 5461              	.LVL623:
 5462 03be 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 362:src/main.cpp  **** 
 5463              		.loc 12 362 0
 5464 03c2 0123     		movs	r3, #1
 5465 03c4 30E0     		b	.L314
 5466              	.L315:
 5467 03c6 00BF     		.align	2
 5468              	.L313:
 5469 03c8 7B142E3E 		.word	1043207291
 5470 03cc EC51383D 		.word	1027101164
 5471 03d0 00080040 		.word	1073743872
 5472 03d4 17020000 		.word	.LC21
 5473 03d8 000C0140 		.word	1073810432
 5474 03dc 22020000 		.word	.LC22
 5475 03e0 002C0140 		.word	1073818624
 5476 03e4 2E020000 		.word	.LC23
 5477 03e8 00080140 		.word	1073809408
 5478 03ec 00100140 		.word	1073811456
 5479 03f0 00803B45 		.word	1161527296
 5480 03f4 0000FA44 		.word	1157234688
 5481 03f8 00004845 		.word	1162346496
 5482 03fc 00040040 		.word	1073742848
 5483 0400 3A020000 		.word	.LC24
 5484 0404 45020000 		.word	.LC25
 5485 0408 4F020000 		.word	.LC26
 5486 040c 00000743 		.word	1124532224
 5487 0410 00000000 		.word	.LANCHOR1
 5488 0414 0BD7A33C 		.word	1017370379
 5489 0418 1C000000 		.word	.LANCHOR0+28
 5490 041c 00002041 		.word	1092616192
 5491 0420 00002042 		.word	1109393408
 5492 0424 0AD7233D 		.word	1025758986
 5493              	.L314:
 5494 0428 2B70     		strb	r3, [r5]
 351:src/main.cpp  **** 
 5495              		.loc 12 351 0
 5496 042a 0024     		movs	r4, #0
 5497              	.LVL624:
 5498              	.L296:
 5499              	.LBB316:
 368:src/main.cpp  **** 
 5500              		.loc 12 368 0
 5501 042c FFF7FEFF 		bl	millis
 5502              	.LVL625:
 374:src/main.cpp  ****       debug_toggle();
 5503              		.loc 12 374 0
 5504 0430 631C     		adds	r3, r4, #1
 5505 0432 3222     		movs	r2, #50
 5506 0434 1593     		str	r3, [sp, #84]
 5507 0436 94FBF2F3 		sdiv	r3, r4, r2
 5508 043a 02FB1344 		mls	r4, r2, r3, r4
 5509              	.LVL626:
 368:src/main.cpp  **** 
 5510              		.loc 12 368 0
 5511 043e 0990     		str	r0, [sp, #36]
 5512              	.LVL627:
 374:src/main.cpp  ****       debug_toggle();
 5513              		.loc 12 374 0
 5514 0440 0CB9     		cbnz	r4, .L288
 375:src/main.cpp  ****     connected = true;//nh.connected();
 5515              		.loc 12 375 0
 5516 0442 FFF7FEFF 		bl	debug_toggle
 5517              	.LVL628:
 5518              	.L288:
 379:src/main.cpp  ****     float sr = servo_right->update(dt_s, connected, true);
 5519              		.loc 12 379 0
 5520 0446 1C4C     		ldr	r4, .L316
 5521 0448 1C49     		ldr	r1, .L316+4
 5522 044a 6069     		ldr	r0, [r4, #20]
 5523 044c 0368     		ldr	r3, [r0]
 5524 044e DD69     		ldr	r5, [r3, #28]
 5525 0450 0123     		movs	r3, #1
 5526 0452 1A46     		mov	r2, r3
 5527 0454 A847     		blx	r5
 5528              	.LVL629:
 5529 0456 0746     		mov	r7, r0
 5530              	.LVL630:
 380:src/main.cpp  **** 
 5531              		.loc 12 380 0
 5532 0458 A069     		ldr	r0, [r4, #24]
 5533              	.LVL631:
 5534 045a 1849     		ldr	r1, .L316+4
 5535 045c 0368     		ldr	r3, [r0]
 5536 045e DD69     		ldr	r5, [r3, #28]
 5537 0460 0123     		movs	r3, #1
 5538 0462 1A46     		mov	r2, r3
 5539 0464 A847     		blx	r5
 5540              	.LVL632:
 382:src/main.cpp  ****     debug_msg.data[1] = (float)sr;
 5541              		.loc 12 382 0
 5542 0466 D4F83C3E 		ldr	r3, [r4, #3644]
 380:src/main.cpp  **** 
 5543              		.loc 12 380 0
 5544 046a 0546     		mov	r5, r0
 5545              	.LVL633:
 382:src/main.cpp  ****     debug_msg.data[1] = (float)sr;
 5546              		.loc 12 382 0
 5547 046c 1F60     		str	r7, [r3]	@ float
 383:src/main.cpp  **** 
 5548              		.loc 12 383 0
 5549 046e 5860     		str	r0, [r3, #4]	@ float
 5550              	.LVL634:
 387:src/main.cpp  ****       waitForServos = false;
 5551              		.loc 12 387 0
 5552 0470 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 5553 0472 2BBB     		cbnz	r3, .L289
 5554              	.LVL635:
 5555              	.L292:
 5556 0474 6368     		ldr	r3, [r4, #4]
 5557 0476 099A     		ldr	r2, [sp, #36]
 5558 0478 03F5FA73 		add	r3, r3, #500
 5559 047c 9A42     		cmp	r2, r3
 5560 047e 0E4E     		ldr	r6, .L316
 5561 0480 3AD3     		bcc	.L290
 5562              	.LVL636:
 395:src/main.cpp  ****       front_left->setReference(0);
 5563              		.loc 12 395 0
 5564 0482 D6F8D40D 		ldr	r0, [r6, #3540]
 5565 0486 0021     		movs	r1, #0
 5566 0488 0368     		ldr	r3, [r0]
 5567 048a 5B69     		ldr	r3, [r3, #20]
 5568 048c 9847     		blx	r3
 5569              	.LVL637:
 396:src/main.cpp  ****       rear_left->setReference(0);
 5570              		.loc 12 396 0
 5571 048e D6F8D00D 		ldr	r0, [r6, #3536]
 5572 0492 0021     		movs	r1, #0
 5573 0494 0368     		ldr	r3, [r0]
 5574 0496 5B69     		ldr	r3, [r3, #20]
 5575 0498 9847     		blx	r3
 5576              	.LVL638:
 397:src/main.cpp  ****       rear_right->setReference(0);
 5577              		.loc 12 397 0
 5578 049a D6F8D80D 		ldr	r0, [r6, #3544]
 5579 049e 0021     		movs	r1, #0
 5580 04a0 0368     		ldr	r3, [r0]
 5581 04a2 5B69     		ldr	r3, [r3, #20]
 5582 04a4 9847     		blx	r3
 5583              	.LVL639:
 398:src/main.cpp  ****     }
 5584              		.loc 12 398 0
 5585 04a6 D6F8DC0D 		ldr	r0, [r6, #3548]
 5586 04aa 0021     		movs	r1, #0
 5587 04ac 0368     		ldr	r3, [r0]
 394:src/main.cpp  ****       front_right->setReference(0);
 5588              		.loc 12 394 0
 5589 04ae 0026     		movs	r6, #0
 398:src/main.cpp  ****     }
 5590              		.loc 12 398 0
 5591 04b0 5B69     		ldr	r3, [r3, #20]
 5592 04b2 9847     		blx	r3
 5593              	.LVL640:
 5594 04b4 3BE0     		b	.L298
 5595              	.L317:
 5596 04b6 00BF     		.align	2
 5597              	.L316:
 5598 04b8 00000000 		.word	.LANCHOR1
 5599 04bc 0BD7A33C 		.word	1017370379
 5600              	.LVL641:
 5601              	.L289:
 387:src/main.cpp  ****       waitForServos = false;
 5602              		.loc 12 387 0 discriminator 1
 5603 04c0 A069     		ldr	r0, [r4, #24]
 5604              	.LVL642:
 5605 04c2 0368     		ldr	r3, [r0]
 5606 04c4 9B69     		ldr	r3, [r3, #24]
 5607 04c6 9847     		blx	r3
 5608              	.LVL643:
 5609 04c8 8046     		mov	r8, r0
 5610 04ca 2846     		mov	r0, r5
 5611 04cc FFF7FEFF 		bl	__aeabi_f2iz
 5612              	.LVL644:
 5613 04d0 0646     		mov	r6, r0
 5614 04d2 4046     		mov	r0, r8
 5615 04d4 FFF7FEFF 		bl	__aeabi_f2iz
 5616              	.LVL645:
 5617 04d8 8642     		cmp	r6, r0
 5618 04da CBD1     		bne	.L292
 387:src/main.cpp  ****       waitForServos = false;
 5619              		.loc 12 387 0 is_stmt 0 discriminator 4
 5620 04dc 6069     		ldr	r0, [r4, #20]
 5621 04de 0368     		ldr	r3, [r0]
 5622 04e0 9B69     		ldr	r3, [r3, #24]
 5623 04e2 9847     		blx	r3
 5624              	.LVL646:
 5625 04e4 8046     		mov	r8, r0
 5626 04e6 3846     		mov	r0, r7
 5627 04e8 FFF7FEFF 		bl	__aeabi_f2iz
 5628              	.LVL647:
 5629 04ec 0646     		mov	r6, r0
 5630 04ee 4046     		mov	r0, r8
 5631 04f0 FFF7FEFF 		bl	__aeabi_f2iz
 5632              	.LVL648:
 5633 04f4 8642     		cmp	r6, r0
 5634 04f6 BDD1     		bne	.L292
 5635              	.L290:
 389:src/main.cpp  ****       front_left->setReference(motorCmd[1]);
 5636              		.loc 12 389 0 is_stmt 1
 5637 04f8 D4F8D40D 		ldr	r0, [r4, #3540]
 388:src/main.cpp  ****       front_right->setReference(motorCmd[0]);
 5638              		.loc 12 388 0
 5639 04fc 0023     		movs	r3, #0
 5640 04fe 6372     		strb	r3, [r4, #9]
 389:src/main.cpp  ****       front_left->setReference(motorCmd[1]);
 5641              		.loc 12 389 0
 5642 0500 0368     		ldr	r3, [r0]
 5643 0502 E169     		ldr	r1, [r4, #28]	@ float
 5644 0504 5B69     		ldr	r3, [r3, #20]
 5645 0506 9847     		blx	r3
 5646              	.LVL649:
 390:src/main.cpp  ****       rear_left->setReference(motorCmd[2]);
 5647              		.loc 12 390 0
 5648 0508 D4F8D00D 		ldr	r0, [r4, #3536]
 5649 050c 216A     		ldr	r1, [r4, #32]	@ float
 5650 050e 0368     		ldr	r3, [r0]
 385:src/main.cpp  **** 
 5651              		.loc 12 385 0
 5652 0510 0126     		movs	r6, #1
 390:src/main.cpp  ****       rear_left->setReference(motorCmd[2]);
 5653              		.loc 12 390 0
 5654 0512 5B69     		ldr	r3, [r3, #20]
 5655 0514 9847     		blx	r3
 5656              	.LVL650:
 391:src/main.cpp  ****       rear_right->setReference(motorCmd[3]);
 5657              		.loc 12 391 0
 5658 0516 D4F8D80D 		ldr	r0, [r4, #3544]
 5659 051a 616A     		ldr	r1, [r4, #36]	@ float
 5660 051c 0368     		ldr	r3, [r0]
 5661 051e 5B69     		ldr	r3, [r3, #20]
 5662 0520 9847     		blx	r3
 5663              	.LVL651:
 392:src/main.cpp  ****     }else{
 5664              		.loc 12 392 0
 5665 0522 D4F8DC0D 		ldr	r0, [r4, #3548]
 5666 0526 A16A     		ldr	r1, [r4, #40]	@ float
 5667 0528 0368     		ldr	r3, [r0]
 5668 052a 5B69     		ldr	r3, [r3, #20]
 5669 052c 9847     		blx	r3
 5670              	.LVL652:
 5671              	.L298:
 401:src/main.cpp  ****     //udelay(500);
 5672              		.loc 12 401 0
 5673 052e D4F8D40D 		ldr	r0, [r4, #3540]
 5674 0532 0122     		movs	r2, #1
 5675 0534 0368     		ldr	r3, [r0]
 5676 0536 C449     		ldr	r1, .L318+24
 5677 0538 D3F81C80 		ldr	r8, [r3, #28]
 5678 053c 3346     		mov	r3, r6
 5679 053e C047     		blx	r8
 5680              	.LVL653:
 5681 0540 8246     		mov	r10, r0
 5682              	.LVL654:
 403:src/main.cpp  ****     //udelay(500);
 5683              		.loc 12 403 0
 5684 0542 D4F8D00D 		ldr	r0, [r4, #3536]
 5685              	.LVL655:
 5686 0546 0122     		movs	r2, #1
 5687 0548 0368     		ldr	r3, [r0]
 5688 054a BF49     		ldr	r1, .L318+24
 5689 054c D3F81C80 		ldr	r8, [r3, #28]
 5690 0550 3346     		mov	r3, r6
 5691 0552 C047     		blx	r8
 5692              	.LVL656:
 5693 0554 8146     		mov	r9, r0
 5694              	.LVL657:
 405:src/main.cpp  ****     //udelay(500);
 5695              		.loc 12 405 0
 5696 0556 D4F8D80D 		ldr	r0, [r4, #3544]
 5697              	.LVL658:
 5698 055a 0122     		movs	r2, #1
 5699 055c 0368     		ldr	r3, [r0]
 5700 055e BA49     		ldr	r1, .L318+24
 5701 0560 D3F81C80 		ldr	r8, [r3, #28]
 5702 0564 3346     		mov	r3, r6
 5703 0566 C047     		blx	r8
 5704              	.LVL659:
 5705 0568 8046     		mov	r8, r0
 5706              	.LVL660:
 407:src/main.cpp  ****     //udelay(1000);
 5707              		.loc 12 407 0
 5708 056a D4F8DC0D 		ldr	r0, [r4, #3548]
 5709              	.LVL661:
 5710 056e 0122     		movs	r2, #1
 5711 0570 0368     		ldr	r3, [r0]
 5712 0572 B549     		ldr	r1, .L318+24
 5713 0574 D3F81CB0 		ldr	fp, [r3, #28]
 5714 0578 3346     		mov	r3, r6
 5715 057a D847     		blx	fp
 5716              	.LVL662:
 412:src/main.cpp  ****     debug_msg.data[3] = fl;
 5717              		.loc 12 412 0
 5718 057c D4F83C3E 		ldr	r3, [r4, #3644]
 417:src/main.cpp  ****     float angles[4] = {sr-90, -sl+90, sl+90, -sr-90};
 5719              		.loc 12 417 0
 5720 0580 2190     		str	r0, [sp, #132]	@ float
 412:src/main.cpp  ****     debug_msg.data[3] = fl;
 5721              		.loc 12 412 0
 5722 0582 C3F808A0 		str	r10, [r3, #8]	@ float
 415:src/main.cpp  **** 
 5723              		.loc 12 415 0
 5724 0586 5861     		str	r0, [r3, #20]	@ float
 413:src/main.cpp  ****     debug_msg.data[4] = rl;
 5725              		.loc 12 413 0
 5726 0588 C3F80C90 		str	r9, [r3, #12]	@ float
 414:src/main.cpp  ****     debug_msg.data[5] = rr;
 5727              		.loc 12 414 0
 5728 058c C3F81080 		str	r8, [r3, #16]	@ float
 418:src/main.cpp  **** 
 5729              		.loc 12 418 0
 5730 0590 AE49     		ldr	r1, .L318+28
 5731 0592 2846     		mov	r0, r5
 5732              	.LVL663:
 417:src/main.cpp  ****     float angles[4] = {sr-90, -sl+90, sl+90, -sr-90};
 5733              		.loc 12 417 0
 5734 0594 CDF878A0 		str	r10, [sp, #120]	@ float
 5735 0598 CDF87C90 		str	r9, [sp, #124]	@ float
 5736 059c CDF88080 		str	r8, [sp, #128]	@ float
 418:src/main.cpp  **** 
 5737              		.loc 12 418 0
 5738 05a0 FFF7FEFF 		bl	__aeabi_fsub
 5739              	.LVL664:
 5740 05a4 3946     		mov	r1, r7
 5741 05a6 2290     		str	r0, [sp, #136]	@ float
 5742 05a8 A848     		ldr	r0, .L318+28
 5743 05aa FFF7FEFF 		bl	__aeabi_fsub
 5744              	.LVL665:
 5745 05ae A749     		ldr	r1, .L318+28
 5746 05b0 2390     		str	r0, [sp, #140]	@ float
 5747 05b2 3846     		mov	r0, r7
 5748 05b4 FFF7FEFF 		bl	__aeabi_fadd
 5749              	.LVL666:
 5750 05b8 A449     		ldr	r1, .L318+28
 5751 05ba 2490     		str	r0, [sp, #144]	@ float
 5752 05bc 05F10040 		add	r0, r5, #-2147483648
 5753 05c0 FFF7FEFF 		bl	__aeabi_fsub
 5754              	.LVL667:
 423:src/main.cpp  ****     for(i = 0; i < 4; i++){
 5755              		.loc 12 423 0
 5756 05c4 4FF0000B 		mov	fp, #0
 418:src/main.cpp  **** 
 5757              		.loc 12 418 0
 5758 05c8 2590     		str	r0, [sp, #148]	@ float
 5759              	.LVL668:
 422:src/main.cpp  ****     float theta_dot = 0;
 5760              		.loc 12 422 0
 5761 05ca CDF83CB0 		str	fp, [sp, #60]	@ float
 421:src/main.cpp  ****     float y_dot = 0;
 5762              		.loc 12 421 0
 5763 05ce CDF838B0 		str	fp, [sp, #56]	@ float
 5764              	.LBB317:
 424:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 5765              		.loc 12 424 0
 5766 05d2 4FF0000A 		mov	r10, #0
 5767              	.LVL669:
 5768              	.L294:
 5769              	.LBB318:
 425:src/main.cpp  ****       
 5770              		.loc 12 425 0
 5771 05d6 22AC     		add	r4, sp, #136
 5772 05d8 54F82A00 		ldr	r0, [r4, r10, lsl #2]	@ float
 5773 05dc FFF7FEFF 		bl	__aeabi_f2d
 5774              	.LVL670:
 5775 05e0 93A3     		adr	r3, .L318
 5776 05e2 D3E90023 		ldrd	r2, [r3]
 5777 05e6 FFF7FEFF 		bl	__aeabi_dmul
 5778              	.LVL671:
 5779 05ea 0022     		movs	r2, #0
 5780 05ec 984B     		ldr	r3, .L318+32
 5781 05ee FFF7FEFF 		bl	__aeabi_ddiv
 5782              	.LVL672:
 5783 05f2 FFF7FEFF 		bl	__aeabi_d2f
 5784              	.LVL673:
 427:src/main.cpp  ****       x_dot += cos(wheelAngle)*speeds[i];
 5785              		.loc 12 427 0
 5786 05f6 1AAB     		add	r3, sp, #104
 425:src/main.cpp  ****       
 5787              		.loc 12 425 0
 5788 05f8 44F82A00 		str	r0, [r4, r10, lsl #2]	@ float
 427:src/main.cpp  ****       x_dot += cos(wheelAngle)*speeds[i];
 5789              		.loc 12 427 0
 5790 05fc 53F82A40 		ldr	r4, [r3, r10, lsl #2]	@ float
 5791 0600 2146     		mov	r1, r4
 5792 0602 FFF7FEFF 		bl	__aeabi_fadd
 5793              	.LVL674:
 5794 0606 0546     		mov	r5, r0
 5795              	.LVL675:
 428:src/main.cpp  ****       y_dot += sin(wheelAngle)*speeds[i];
 5796              		.loc 12 428 0
 5797 0608 FFF7FEFF 		bl	__aeabi_f2d
 5798              	.LVL676:
 5799 060c CDE90A01 		strd	r0, [sp, #40]
 5800 0610 FFF7FEFF 		bl	cos
 5801              	.LVL677:
 5802 0614 1EAB     		add	r3, sp, #120
 5803 0616 0646     		mov	r6, r0
 5804 0618 53F82A00 		ldr	r0, [r3, r10, lsl #2]	@ float
 5805 061c 0F46     		mov	r7, r1
 5806 061e FFF7FEFF 		bl	__aeabi_f2d
 5807              	.LVL678:
 5808 0622 0246     		mov	r2, r0
 5809 0624 0B46     		mov	r3, r1
 5810 0626 CDE90C01 		strd	r0, [sp, #48]
 5811 062a 3046     		mov	r0, r6
 5812 062c 3946     		mov	r1, r7
 5813 062e FFF7FEFF 		bl	__aeabi_dmul
 5814              	.LVL679:
 5815 0632 0646     		mov	r6, r0
 5816 0634 0E98     		ldr	r0, [sp, #56]	@ float
 5817 0636 0F46     		mov	r7, r1
 5818 0638 FFF7FEFF 		bl	__aeabi_f2d
 5819              	.LVL680:
 5820 063c 0246     		mov	r2, r0
 5821 063e 0B46     		mov	r3, r1
 5822 0640 3046     		mov	r0, r6
 5823 0642 3946     		mov	r1, r7
 5824 0644 FFF7FEFF 		bl	__aeabi_dadd
 5825              	.LVL681:
 5826 0648 FFF7FEFF 		bl	__aeabi_d2f
 5827              	.LVL682:
 5828 064c 0E90     		str	r0, [sp, #56]	@ float
 5829              	.LVL683:
 429:src/main.cpp  ****       
 5830              		.loc 12 429 0
 5831 064e DDE90A01 		ldrd	r0, [sp, #40]
 5832              	.LVL684:
 5833 0652 FFF7FEFF 		bl	sin
 5834              	.LVL685:
 5835 0656 0246     		mov	r2, r0
 5836 0658 0B46     		mov	r3, r1
 5837 065a DDE90C01 		ldrd	r0, [sp, #48]
 5838 065e FFF7FEFF 		bl	__aeabi_dmul
 5839              	.LVL686:
 5840 0662 0646     		mov	r6, r0
 5841 0664 0F98     		ldr	r0, [sp, #60]	@ float
 5842 0666 0F46     		mov	r7, r1
 5843 0668 FFF7FEFF 		bl	__aeabi_f2d
 5844              	.LVL687:
 5845 066c 0B46     		mov	r3, r1
 5846 066e 0246     		mov	r2, r0
 5847 0670 3946     		mov	r1, r7
 5848 0672 3046     		mov	r0, r6
 5849 0674 FFF7FEFF 		bl	__aeabi_dadd
 5850              	.LVL688:
 5851 0678 FFF7FEFF 		bl	__aeabi_d2f
 5852              	.LVL689:
 432:src/main.cpp  ****         motorAngle += M_PI;
 5853              		.loc 12 432 0
 5854 067c AAF10203 		sub	r3, r10, #2
 5855 0680 012B     		cmp	r3, #1
 429:src/main.cpp  ****       
 5856              		.loc 12 429 0
 5857 0682 0F90     		str	r0, [sp, #60]	@ float
 5858              	.LVL690:
 432:src/main.cpp  ****         motorAngle += M_PI;
 5859              		.loc 12 432 0
 5860 0684 09D8     		bhi	.L293
 433:src/main.cpp  ****       }
 5861              		.loc 12 433 0
 5862 0686 6AA3     		adr	r3, .L318
 5863 0688 D3E90023 		ldrd	r2, [r3]
 5864 068c DDE90A01 		ldrd	r0, [sp, #40]
 5865              	.LVL691:
 5866 0690 FFF7FEFF 		bl	__aeabi_dadd
 5867              	.LVL692:
 5868 0694 FFF7FEFF 		bl	__aeabi_d2f
 5869              	.LVL693:
 5870 0698 0546     		mov	r5, r0
 5871              	.LVL694:
 5872              	.L293:
 435:src/main.cpp  ****       float deltaY = l*cos(alpha[i]) + d*cos(motorAngle);
 5873              		.loc 12 435 0 discriminator 2
 5874 069a 1498     		ldr	r0, [sp, #80]	@ float
 5875 069c FFF7FEFF 		bl	__aeabi_f2d
 5876              	.LVL695:
 5877 06a0 CDE91001 		strd	r0, [sp, #64]
 5878 06a4 2046     		mov	r0, r4
 5879 06a6 FFF7FEFF 		bl	__aeabi_f2d
 5880              	.LVL696:
 5881 06aa CDE91601 		strd	r0, [sp, #88]
 5882 06ae FFF7FEFF 		bl	sin
 5883              	.LVL697:
 5884 06b2 684C     		ldr	r4, .L318+36
 5885 06b4 0646     		mov	r6, r0
 5886 06b6 2069     		ldr	r0, [r4, #16]	@ float
 5887 06b8 0F46     		mov	r7, r1
 5888 06ba FFF7FEFF 		bl	__aeabi_f2d
 5889              	.LVL698:
 5890 06be CDE91201 		strd	r0, [sp, #72]
 5891 06c2 2846     		mov	r0, r5
 5892 06c4 FFF7FEFF 		bl	__aeabi_f2d
 5893              	.LVL699:
 5894 06c8 CDE91801 		strd	r0, [sp, #96]
 5895 06cc FFF7FEFF 		bl	sin
 5896              	.LVL700:
 5897 06d0 3246     		mov	r2, r6
 5898 06d2 8046     		mov	r8, r0
 5899 06d4 8946     		mov	r9, r1
 5900 06d6 DDE91001 		ldrd	r0, [sp, #64]
 5901 06da 3B46     		mov	r3, r7
 5902 06dc FFF7FEFF 		bl	__aeabi_dmul
 5903              	.LVL701:
 5904 06e0 4246     		mov	r2, r8
 5905 06e2 0646     		mov	r6, r0
 5906 06e4 0F46     		mov	r7, r1
 5907 06e6 DDE91201 		ldrd	r0, [sp, #72]
 5908 06ea 4B46     		mov	r3, r9
 5909 06ec FFF7FEFF 		bl	__aeabi_dmul
 5910              	.LVL702:
 5911 06f0 0246     		mov	r2, r0
 5912 06f2 0B46     		mov	r3, r1
 5913 06f4 3046     		mov	r0, r6
 5914 06f6 3946     		mov	r1, r7
 5915 06f8 FFF7FEFF 		bl	__aeabi_dadd
 5916              	.LVL703:
 5917 06fc FFF7FEFF 		bl	__aeabi_d2f
 5918              	.LVL704:
 5919 0700 00F10045 		add	r5, r0, #-2147483648
 5920              	.LVL705:
 436:src/main.cpp  **** 
 5921              		.loc 12 436 0 discriminator 2
 5922 0704 DDE91601 		ldrd	r0, [sp, #88]
 5923 0708 FFF7FEFF 		bl	cos
 5924              	.LVL706:
 5925 070c 0646     		mov	r6, r0
 5926 070e 0F46     		mov	r7, r1
 5927 0710 DDE91801 		ldrd	r0, [sp, #96]
 5928 0714 FFF7FEFF 		bl	cos
 5929              	.LVL707:
 5930 0718 3246     		mov	r2, r6
 5931 071a 8046     		mov	r8, r0
 5932 071c 8946     		mov	r9, r1
 5933 071e DDE91001 		ldrd	r0, [sp, #64]
 5934 0722 3B46     		mov	r3, r7
 5935 0724 FFF7FEFF 		bl	__aeabi_dmul
 5936              	.LVL708:
 5937 0728 4246     		mov	r2, r8
 5938 072a 0646     		mov	r6, r0
 5939 072c 0F46     		mov	r7, r1
 5940 072e DDE91201 		ldrd	r0, [sp, #72]
 5941 0732 4B46     		mov	r3, r9
 5942 0734 FFF7FEFF 		bl	__aeabi_dmul
 5943              	.LVL709:
 5944 0738 0246     		mov	r2, r0
 5945 073a 0B46     		mov	r3, r1
 5946 073c 3046     		mov	r0, r6
 5947 073e 3946     		mov	r1, r7
 5948 0740 FFF7FEFF 		bl	__aeabi_dadd
 5949              	.LVL710:
 5950 0744 FFF7FEFF 		bl	__aeabi_d2f
 5951              	.LVL711:
 438:src/main.cpp  ****       float deltaXNorm = deltaX/deltaNorm;
 5952              		.loc 12 438 0 discriminator 2
 5953 0748 2946     		mov	r1, r5
 436:src/main.cpp  **** 
 5954              		.loc 12 436 0 discriminator 2
 5955 074a 8146     		mov	r9, r0
 5956              	.LVL712:
 438:src/main.cpp  ****       float deltaXNorm = deltaX/deltaNorm;
 5957              		.loc 12 438 0 discriminator 2
 5958 074c 2846     		mov	r0, r5
 5959              	.LVL713:
 5960 074e FFF7FEFF 		bl	__aeabi_fmul
 5961              	.LVL714:
 5962 0752 4946     		mov	r1, r9
 5963 0754 0646     		mov	r6, r0
 5964 0756 4846     		mov	r0, r9
 5965 0758 FFF7FEFF 		bl	__aeabi_fmul
 5966              	.LVL715:
 5967 075c 0146     		mov	r1, r0
 5968 075e 3046     		mov	r0, r6
 5969 0760 FFF7FEFF 		bl	__aeabi_fadd
 5970              	.LVL716:
 5971 0764 FFF7FEFF 		bl	__aeabi_f2d
 5972              	.LVL717:
 5973 0768 FFF7FEFF 		bl	sqrt
 5974              	.LVL718:
 5975 076c FFF7FEFF 		bl	__aeabi_d2f
 5976              	.LVL719:
 443:src/main.cpp  ****       float wY = sin(wAngle);
 5977              		.loc 12 443 0 discriminator 2
 5978 0770 31A3     		adr	r3, .L318+8
 5979 0772 D3E90023 		ldrd	r2, [r3]
 438:src/main.cpp  ****       float deltaXNorm = deltaX/deltaNorm;
 5980              		.loc 12 438 0 discriminator 2
 5981 0776 8046     		mov	r8, r0
 5982              	.LVL720:
 443:src/main.cpp  ****       float wY = sin(wAngle);
 5983              		.loc 12 443 0 discriminator 2
 5984 0778 DDE90A01 		ldrd	r0, [sp, #40]
 5985              	.LVL721:
 5986 077c FFF7FEFF 		bl	__aeabi_dadd
 5987              	.LVL722:
 5988 0780 FFF7FEFF 		bl	__aeabi_d2f
 5989              	.LVL723:
 5990 0784 FFF7FEFF 		bl	__aeabi_f2d
 5991              	.LVL724:
 5992 0788 0646     		mov	r6, r0
 5993 078a 0F46     		mov	r7, r1
 5994 078c FFF7FEFF 		bl	cos
 5995              	.LVL725:
 5996 0790 FFF7FEFF 		bl	__aeabi_d2f
 5997              	.LVL726:
 444:src/main.cpp  **** 
 5998              		.loc 12 444 0 discriminator 2
 5999 0794 3946     		mov	r1, r7
 443:src/main.cpp  ****       float wY = sin(wAngle);
 6000              		.loc 12 443 0 discriminator 2
 6001 0796 0A90     		str	r0, [sp, #40]	@ float
 6002              	.LVL727:
 444:src/main.cpp  **** 
 6003              		.loc 12 444 0 discriminator 2
 6004 0798 3046     		mov	r0, r6
 6005              	.LVL728:
 6006 079a FFF7FEFF 		bl	sin
 6007              	.LVL729:
 6008 079e 0646     		mov	r6, r0
 6009 07a0 0F46     		mov	r7, r1
 6010              	.LVL730:
 446:src/main.cpp  ****     }
 6011              		.loc 12 446 0 discriminator 2
 6012 07a2 2846     		mov	r0, r5
 6013 07a4 4146     		mov	r1, r8
 6014 07a6 FFF7FEFF 		bl	__aeabi_fdiv
 6015              	.LVL731:
 6016 07aa 0A99     		ldr	r1, [sp, #40]	@ float
 6017 07ac FFF7FEFF 		bl	__aeabi_fmul
 6018              	.LVL732:
 6019 07b0 4146     		mov	r1, r8
 6020 07b2 0546     		mov	r5, r0
 6021              	.LVL733:
 6022 07b4 4846     		mov	r0, r9
 6023 07b6 FFF7FEFF 		bl	__aeabi_fdiv
 6024              	.LVL734:
 6025 07ba 3946     		mov	r1, r7
 6026 07bc 8146     		mov	r9, r0
 6027              	.LVL735:
 6028 07be 3046     		mov	r0, r6
 6029 07c0 FFF7FEFF 		bl	__aeabi_d2f
 6030              	.LVL736:
 6031 07c4 0146     		mov	r1, r0
 6032 07c6 4846     		mov	r0, r9
 6033 07c8 FFF7FEFF 		bl	__aeabi_fmul
 6034              	.LVL737:
 6035 07cc 0146     		mov	r1, r0
 6036 07ce 2846     		mov	r0, r5
 6037 07d0 FFF7FEFF 		bl	__aeabi_fadd
 6038              	.LVL738:
 6039 07d4 0A99     		ldr	r1, [sp, #40]	@ float
 6040 07d6 FFF7FEFF 		bl	__aeabi_fmul
 6041              	.LVL739:
 6042 07da FFF7FEFF 		bl	__aeabi_f2d
 6043              	.LVL740:
 6044 07de 0646     		mov	r6, r0
 6045              	.LVL741:
 6046 07e0 4046     		mov	r0, r8
 6047 07e2 0F46     		mov	r7, r1
 6048 07e4 FFF7FEFF 		bl	__aeabi_f2d
 6049              	.LVL742:
 6050 07e8 15A3     		adr	r3, .L318+16
 6051 07ea D3E90023 		ldrd	r2, [r3]
 6052 07ee FFF7FEFF 		bl	__aeabi_dmul
 6053              	.LVL743:
 6054 07f2 0246     		mov	r2, r0
 6055 07f4 0B46     		mov	r3, r1
 6056 07f6 3046     		mov	r0, r6
 6057 07f8 3946     		mov	r1, r7
 6058 07fa FFF7FEFF 		bl	__aeabi_ddiv
 6059              	.LVL744:
 6060 07fe DDE90C23 		ldrd	r2, [sp, #48]
 6061 0802 FFF7FEFF 		bl	__aeabi_dmul
 6062              	.LVL745:
 6063 0806 0646     		mov	r6, r0
 6064 0808 5846     		mov	r0, fp
 6065 080a 0F46     		mov	r7, r1
 6066 080c FFF7FEFF 		bl	__aeabi_f2d
 6067              	.LVL746:
 6068 0810 0246     		mov	r2, r0
 6069 0812 0B46     		mov	r3, r1
 6070 0814 3046     		mov	r0, r6
 6071 0816 3946     		mov	r1, r7
 6072 0818 FFF7FEFF 		bl	__aeabi_dadd
 6073              	.LVL747:
 6074 081c FFF7FEFF 		bl	__aeabi_d2f
 6075              	.LVL748:
 6076              	.LBE318:
 424:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 6077              		.loc 12 424 0 discriminator 2
 6078 0820 0AF1010A 		add	r10, r10, #1
 6079              	.LVL749:
 6080 0824 BAF1040F 		cmp	r10, #4
 6081              	.LBB319:
 446:src/main.cpp  ****     }
 6082              		.loc 12 446 0 discriminator 2
 6083 0828 8346     		mov	fp, r0
 6084              	.LVL750:
 6085              	.LBE319:
 424:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 6086              		.loc 12 424 0 discriminator 2
 6087 082a 7FF4D4AE 		bne	.L294
 6088 082e 13E0     		b	.L319
 6089              	.L320:
 6090              		.align	3
 6091              	.L318:
 6092 0830 182D4454 		.word	1413754136
 6093 0834 FB210940 		.word	1074340347
 6094 0838 182D4454 		.word	1413754136
 6095 083c FB21F93F 		.word	1073291771
 6096 0840 182D4454 		.word	1413754136
 6097 0844 FB211940 		.word	1075388923
 6098 0848 0BD7A33C 		.word	1017370379
 6099 084c 0000B442 		.word	1119092736
 6100 0850 00806640 		.word	1080459264
 6101 0854 00000000 		.word	.LANCHOR1
 6102              	.L319:
 6103              	.LVL751:
 6104              	.LBE317:
 453:src/main.cpp  ****     odom_msg.data[1] = y_dot;
 6105              		.loc 12 453 0
 6106 0858 4FF07A51 		mov	r1, #1048576000
 6107 085c 0E98     		ldr	r0, [sp, #56]	@ float
 6108              	.LVL752:
 6109 085e FFF7FEFF 		bl	__aeabi_fmul
 6110              	.LVL753:
 6111 0862 D4F80C5E 		ldr	r5, [r4, #3596]
 454:src/main.cpp  ****     odom_msg.data[2] = theta_dot;
 6112              		.loc 12 454 0
 6113 0866 4FF07A51 		mov	r1, #1048576000
 453:src/main.cpp  ****     odom_msg.data[1] = y_dot;
 6114              		.loc 12 453 0
 6115 086a 2860     		str	r0, [r5]	@ float
 454:src/main.cpp  ****     odom_msg.data[2] = theta_dot;
 6116              		.loc 12 454 0
 6117 086c 0F98     		ldr	r0, [sp, #60]	@ float
 6118 086e FFF7FEFF 		bl	__aeabi_fmul
 6119              	.LVL754:
 455:src/main.cpp  **** 
 6120              		.loc 12 455 0
 6121 0872 4FF07A51 		mov	r1, #1048576000
 454:src/main.cpp  ****     odom_msg.data[2] = theta_dot;
 6122              		.loc 12 454 0
 6123 0876 6860     		str	r0, [r5, #4]	@ float
 455:src/main.cpp  **** 
 6124              		.loc 12 455 0
 6125 0878 5846     		mov	r0, fp
 6126 087a FFF7FEFF 		bl	__aeabi_fmul
 6127              	.LVL755:
 459:src/main.cpp  ****     debug_pub.publish(&debug_msg);
 6128              		.loc 12 459 0
 6129 087e 04F55E61 		add	r1, r4, #3552
 455:src/main.cpp  **** 
 6130              		.loc 12 455 0
 6131 0882 A860     		str	r0, [r5, #8]	@ float
 459:src/main.cpp  ****     debug_pub.publish(&debug_msg);
 6132              		.loc 12 459 0
 6133 0884 04F6A850 		addw	r0, r4, #3496
 6134 0888 FFF7FEFF 		bl	_ZN3ros9Publisher7publishEPKNS_3MsgE
 6135              	.LVL756:
 460:src/main.cpp  **** 
 6136              		.loc 12 460 0
 6137 088c 04F56161 		add	r1, r4, #3600
 6138 0890 04F6BC50 		addw	r0, r4, #3516
 6139 0894 FFF7FEFF 		bl	_ZN3ros9Publisher7publishEPKNS_3MsgE
 6140              	.LVL757:
 462:src/main.cpp  **** 
 6141              		.loc 12 462 0
 6142 0898 04F58760 		add	r0, r4, #1080
 6143 089c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv
 6144              	.LVL758:
 464:src/main.cpp  ****     if(elapsed > dt){
 6145              		.loc 12 464 0
 6146 08a0 FFF7FEFF 		bl	millis
 6147              	.LVL759:
 465:src/main.cpp  ****       //char elapsed_msg[18];
 6148              		.loc 12 465 0
 6149 08a4 099B     		ldr	r3, [sp, #36]
 6150 08a6 C01A     		subs	r0, r0, r3
 6151              	.LVL760:
 6152 08a8 1428     		cmp	r0, #20
 6153              	.LVL761:
 6154              	.L310:
 6155 08aa 01D9     		bls	.L299
 374:src/main.cpp  ****       debug_toggle();
 6156              		.loc 12 374 0
 6157 08ac 159C     		ldr	r4, [sp, #84]
 6158              	.LBE316:
 365:src/main.cpp  ****    //printf("HELLOO!!!!");
 6159              		.loc 12 365 0
 6160 08ae BDE5     		b	.L296
 6161              	.L299:
 6162              	.LBB320:
 473:src/main.cpp  ****     }
 6163              		.loc 12 473 0
 6164 08b0 FFF7FEFF 		bl	millis
 6165              	.LVL762:
 6166 08b4 099B     		ldr	r3, [sp, #36]
 6167 08b6 C01A     		subs	r0, r0, r3
 6168 08b8 1328     		cmp	r0, #19
 6169 08ba F6E7     		b	.L310
 6170              	.LBE320:
 6171              		.cfi_endproc
 6172              	.LFE1288:
 6173              		.fnend
 6175              		.align	1
 6176              		.thumb
 6177              		.thumb_func
 6179              	_GLOBAL__sub_I_USART_FIFO:
 6180              		.fnstart
 6181              	.LFB1336:
 564:src/main.cpp  ****     //nh.spinOnce();
 565:src/main.cpp  ****   }
 566:src/main.cpp  **** }
 6182              		.loc 12 566 0
 6183              		.cfi_startproc
 6184              		@ args = 0, pretend = 0, frame = 0
 6185              		@ frame_needed = 0, uses_anonymous_args = 0
 6186              	.LVL763:
 6187              	.LBB391:
 6188              	.LBB392:
 6189              	.LBB393:
 6190              	.LBB394:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6191              		.loc 11 119 0
 6192 08bc 554B     		ldr	r3, .L330
 6193 08be 564A     		ldr	r2, .L330+4
 6194              	.LBE394:
 6195              	.LBE393:
 6196              	.LBE392:
 6197              	.LBE391:
 6198              		.loc 12 566 0
 6199 08c0 70B5     		push	{r4, r5, r6, lr}
 6200              	.LCFI61:
 6201              		.cfi_def_cfa_offset 16
 6202              		.cfi_offset 4, -16
 6203              		.cfi_offset 5, -12
 6204              		.cfi_offset 6, -8
 6205              		.cfi_offset 14, -4
 6206              	.LBB494:
 6207              	.LBB493:
 6208              	.LBB412:
 6209              	.LBB411:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6210              		.loc 11 119 0
 6211 08c2 C3F83824 		str	r2, [r3, #1080]
 6212              	.LVL764:
 6213              	.LBB395:
 6214              	.LBB396:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 230400;
 6215              		.loc 13 60 0
 6216 08c6 554A     		ldr	r2, .L330+8
 6217              	.LBE396:
 6218              	.LBE395:
 6219              	.LBB399:
 6220              	.LBB400:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 6221              		.loc 4 70 0
 6222 08c8 5549     		ldr	r1, .L330+12
 6223              	.LBE400:
 6224              	.LBE399:
 6225              	.LBB403:
 6226              	.LBB397:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 230400;
 6227              		.loc 13 60 0
 6228 08ca C3F83C24 		str	r2, [r3, #1084]
  61:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
 6229              		.loc 13 61 0
 6230 08ce 4FF46132 		mov	r2, #230400
 6231 08d2 C3F84024 		str	r2, [r3, #1088]
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
 6232              		.loc 13 62 0
 6233 08d6 0022     		movs	r2, #0
 6234 08d8 1A63     		str	r2, [r3, #48]
 6235              	.LBE397:
 6236              	.LBE403:
 6237              	.LBB404:
 6238              	.LBB401:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 6239              		.loc 4 70 0
 6240 08da C3F8401D 		str	r1, [r3, #3392]
 6241              	.LBE401:
 6242              	.LBE404:
 6243              	.LBB405:
 6244              	.LBB398:
  63:./lib/ros_lib/ArduinoHardware.h ****     }
 6245              		.loc 13 63 0
 6246 08de DA62     		str	r2, [r3, #44]
 6247              	.LVL765:
 6248              	.LBE398:
 6249              	.LBE405:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6250              		.loc 11 119 0
 6251 08e0 83F82C2D 		strb	r2, [r3, #3372]
 6252              	.LVL766:
 6253              	.LBB406:
 6254              	.LBB402:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 6255              		.loc 4 70 0
 6256 08e4 83F8442D 		strb	r2, [r3, #3396]
 6257 08e8 C3F84C2D 		str	r2, [r3, #3404]
 6258 08ec 83F8502D 		strb	r2, [r3, #3408]
 6259 08f0 C3F8582D 		str	r2, [r3, #3416]
 6260 08f4 83F85C2D 		strb	r2, [r3, #3420]
 6261 08f8 C3F8642D 		str	r2, [r3, #3428]
 6262              	.LVL767:
 6263 08fc 03F64C41 		addw	r1, r3, #3148
 6264 0900 03F54B63 		add	r3, r3, #3248
 6265              	.LVL768:
 6266              	.L322:
 6267              	.LBE402:
 6268              	.LBE406:
 6269              	.LBB407:
 122:./lib/ros_lib/ros/node_handle.h **** 
 6270              		.loc 11 122 0
 6271 0904 41F8042F 		str	r2, [r1, #4]!
 121:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 6272              		.loc 11 121 0
 6273 0908 8B42     		cmp	r3, r1
 6274 090a FBD1     		bne	.L322
 6275 090c 454A     		ldr	r2, .L330+16
 6276              	.LBE407:
 6277              	.LBB408:
 125:./lib/ros_lib/ros/node_handle.h **** 
 6278              		.loc 11 125 0
 6279 090e 0021     		movs	r1, #0
 6280              	.L323:
 6281 0910 43F8041F 		str	r1, [r3, #4]!
 6282              	.LVL769:
 124:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 6283              		.loc 11 124 0
 6284 0914 9A42     		cmp	r2, r3
 6285 0916 FBD1     		bne	.L323
 6286 0918 0023     		movs	r3, #0
 6287              	.LBE408:
 6288              	.LBB409:
 128:./lib/ros_lib/ros/node_handle.h **** 
 6289              		.loc 11 128 0
 6290 091a 1946     		mov	r1, r3
 6291 091c 4248     		ldr	r0, .L330+20
 6292              	.L324:
 6293              	.LVL770:
 6294 091e C218     		adds	r2, r0, r3
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 6295              		.loc 11 127 0
 6296 0920 0133     		adds	r3, r3, #1
 6297              	.LVL771:
 6298 0922 B3F5806F 		cmp	r3, #1024
 128:./lib/ros_lib/ros/node_handle.h **** 
 6299              		.loc 11 128 0
 6300 0926 1176     		strb	r1, [r2, #24]
 6301 0928 3F4D     		ldr	r5, .L330+20
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 6302              		.loc 11 127 0
 6303 092a F8D1     		bne	.L324
 6304 092c 0021     		movs	r1, #0
 6305              	.LBE409:
 6306              	.LBB410:
 131:./lib/ros_lib/ros/node_handle.h **** 
 6307              		.loc 11 131 0
 6308 092e 0C46     		mov	r4, r1
 6309              	.LVL772:
 6310              	.L325:
 6311 0930 6818     		adds	r0, r5, r1
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 6312              		.loc 11 130 0
 6313 0932 0131     		adds	r1, r1, #1
 6314              	.LVL773:
 6315 0934 B1F5806F 		cmp	r1, #1024
 131:./lib/ros_lib/ros/node_handle.h **** 
 6316              		.loc 11 131 0
 6317 0938 364B     		ldr	r3, .L330
 6318 093a 4FF00002 		mov	r2, #0
 6319 093e 80F81844 		strb	r4, [r0, #1048]
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 6320              		.loc 11 130 0
 6321 0942 F5D1     		bne	.L325
 6322              	.LVL774:
 6323              	.LBE410:
 6324              	.LBE411:
 6325              	.LBE412:
 6326              	.LBB413:
 6327              	.LBB414:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6328              		.loc 10 67 0
 6329 0944 3949     		ldr	r1, .L330+24
 6330              	.LBB415:
 6331              	.LBB416:
 6332              	.LBB417:
 6333              	.LBB418:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6334              		.loc 8 23 0
 6335 0946 3A48     		ldr	r0, .L330+28
 6336              	.LBE418:
 6337              	.LBE417:
 6338              	.LBE416:
 6339              	.LBE415:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6340              		.loc 10 67 0
 6341 0948 C3F8681D 		str	r1, [r3, #3432]
 6342              	.LVL775:
 6343              	.LBB434:
 6344              	.LBB429:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6345              		.loc 9 33 0
 6346 094c 3949     		ldr	r1, .L330+32
 6347              	.LBE429:
 6348              	.LBE434:
 6349              	.LBE414:
 6350              	.LBE413:
 6351              	.LBB443:
 6352              	.LBB444:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6353              		.loc 7 23 0
 6354 094e 3A4E     		ldr	r6, .L330+36
 6355              	.LBE444:
 6356              	.LBE443:
 6357              	.LBB463:
 6358              	.LBB439:
 6359              	.LBB435:
 6360              	.LBB430:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6361              		.loc 9 33 0
 6362 0950 C3F8741D 		str	r1, [r3, #3444]
 6363              	.LVL776:
 6364              	.LBB425:
 6365              	.LBB421:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6366              		.loc 8 23 0
 6367 0954 3949     		ldr	r1, .L330+40
 6368              	.LBE421:
 6369              	.LBE425:
 6370              	.LBE430:
 6371              	.LBE435:
 6372              	.LBE439:
 6373              	.LBE463:
 6374              	.LBB464:
 6375              	.LBB459:
 6376              	.LBB445:
 6377              	.LBB446:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6378              		.loc 6 23 0
 6379 0956 3A4D     		ldr	r5, .L330+44
 6380              	.LBE446:
 6381              	.LBE445:
 6382              	.LBE459:
 6383              	.LBE464:
 6384              	.LBB465:
 6385              	.LBB440:
 6386              	.LBB436:
 6387              	.LBB431:
 6388              	.LBB426:
 6389              	.LBB422:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6390              		.loc 8 23 0
 6391 0958 C3F8781D 		str	r1, [r3, #3448]
 6392              	.LBE422:
 6393              	.LBE426:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6394              		.loc 9 33 0
 6395 095c 0021     		movs	r1, #0
 6396 095e C3F88C1D 		str	r1, [r3, #3468]	@ float
 6397 0962 C3F8901D 		str	r1, [r3, #3472]	@ float
 6398 0966 C3F8941D 		str	r1, [r3, #3476]	@ float
 6399 096a C3F8981D 		str	r1, [r3, #3480]	@ float
 6400              	.LBE431:
 6401              	.LBE436:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6402              		.loc 10 67 0
 6403 096e 3549     		ldr	r1, .L330+48
 6404              	.LBE440:
 6405              	.LBE465:
 6406              	.LBB466:
 6407              	.LBB460:
 6408              	.LBB456:
 6409              	.LBB453:
 6410              	.LBB447:
 6411              	.LBB448:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6412              		.loc 5 22 0
 6413 0970 354C     		ldr	r4, .L330+52
 6414              	.LBE448:
 6415              	.LBE447:
 6416              	.LBE453:
 6417              	.LBE456:
 6418              	.LBE460:
 6419              	.LBE466:
 6420              	.LBB467:
 6421              	.LBB441:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6422              		.loc 10 67 0
 6423 0972 C3F8A01D 		str	r1, [r3, #3488]
 6424 0976 0121     		movs	r1, #1
 6425 0978 C3F8A41D 		str	r1, [r3, #3492]
  69:./lib/ros_lib/ros/subscriber.h ****       };
 6426              		.loc 10 69 0
 6427 097c 3349     		ldr	r1, .L330+56
 6428              	.LBB437:
 6429              	.LBB432:
 6430              	.LBB427:
 6431              	.LBB423:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6432              		.loc 8 23 0
 6433 097e C3F8880D 		str	r0, [r3, #3464]
 6434              	.LBE423:
 6435              	.LBE427:
 6436              	.LBE432:
 6437              	.LBE437:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 6438              		.loc 10 69 0
 6439 0982 C3F8701D 		str	r1, [r3, #3440]
 6440              	.LBE441:
 6441              	.LBE467:
 6442              	.LBB468:
 6443              	.LBB469:
  50:./lib/ros_lib/ros/publisher.h **** 
 6444              		.loc 15 50 0
 6445 0986 3249     		ldr	r1, .L330+60
 6446              	.LBE469:
 6447              	.LBE468:
 6448              	.LBB472:
 6449              	.LBB461:
 6450              	.LBB457:
 6451              	.LBB454:
 6452              	.LBB451:
 6453              	.LBB449:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6454              		.loc 5 22 0
 6455 0988 C3F8200E 		str	r0, [r3, #3616]
 6456              	.LBE449:
 6457              	.LBE451:
 6458              	.LBE454:
 6459              	.LBE457:
 6460              	.LBE461:
 6461              	.LBE472:
 6462              	.LBB473:
 6463              	.LBB470:
  50:./lib/ros_lib/ros/publisher.h **** 
 6464              		.loc 15 50 0
 6465 098c C3F8BC1D 		str	r1, [r3, #3516]
 6466 0990 03F56161 		add	r1, r3, #3600
 6467 0994 C3F8C01D 		str	r1, [r3, #3520]
 6468              	.LBE470:
 6469              	.LBE473:
 6470              	.LBB474:
 6471              	.LBB442:
 6472              	.LBB438:
 6473              	.LBB433:
 6474              	.LBB428:
 6475              	.LBB424:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6476              		.loc 8 23 0
 6477 0998 C3F87C2D 		str	r2, [r3, #3452]
 6478              	.LVL777:
 6479              	.LBB419:
 6480              	.LBB420:
 6481              		.loc 17 52 0
 6482 099c C3F8802D 		str	r2, [r3, #3456]
 6483 09a0 C3F8842D 		str	r2, [r3, #3460]
 6484              	.LVL778:
 6485              	.LBE420:
 6486              	.LBE419:
 6487              	.LBE424:
 6488              	.LBE428:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6489              		.loc 9 33 0
 6490 09a4 83F89C2D 		strb	r2, [r3, #3484]
 6491              	.LVL779:
 6492              	.LBE433:
 6493              	.LBE438:
 6494              	.LBE442:
 6495              	.LBE474:
 6496              	.LBB475:
 6497              	.LBB462:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6498              		.loc 7 23 0
 6499 09a8 C3F8106E 		str	r6, [r3, #3600]
 6500              	.LVL780:
 6501              	.LBB458:
 6502              	.LBB455:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6503              		.loc 6 23 0
 6504 09ac C3F8145E 		str	r5, [r3, #3604]
 6505 09b0 83F8182E 		strb	r2, [r3, #3608]
 6506              	.LVL781:
 6507              	.LBB452:
 6508              	.LBB450:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6509              		.loc 5 22 0
 6510 09b4 C3F81C4E 		str	r4, [r3, #3612]
 6511 09b8 C3F8242E 		str	r2, [r3, #3620]
 6512 09bc C3F8282E 		str	r2, [r3, #3624]
 6513              	.LVL782:
 6514              	.LBE450:
 6515              	.LBE452:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6516              		.loc 6 23 0
 6517 09c0 C3F82C2E 		str	r2, [r3, #3628]
 6518 09c4 C3F8302E 		str	r2, [r3, #3632]
 6519              	.LVL783:
 6520              	.LBE455:
 6521              	.LBE458:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6522              		.loc 7 23 0
 6523 09c8 83F8342E 		strb	r2, [r3, #3636]
 6524 09cc C3F83C2E 		str	r2, [r3, #3644]
 6525              	.LVL784:
 6526              	.LBE462:
 6527              	.LBE475:
 6528              	.LBB476:
 6529              	.LBB471:
  50:./lib/ros_lib/ros/publisher.h **** 
 6530              		.loc 15 50 0
 6531 09d0 C3F8CC2D 		str	r2, [r3, #3532]
 6532              	.LVL785:
 6533              	.LBE471:
 6534              	.LBE476:
 6535              	.LBB477:
 6536              	.LBB478:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6537              		.loc 7 23 0
 6538 09d4 C3F8E06D 		str	r6, [r3, #3552]
 6539              	.LVL786:
 6540              	.LBB479:
 6541              	.LBB480:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6542              		.loc 6 23 0
 6543 09d8 C3F8E45D 		str	r5, [r3, #3556]
 6544 09dc 83F8E82D 		strb	r2, [r3, #3560]
 6545              	.LVL787:
 6546              	.LBB481:
 6547              	.LBB482:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6548              		.loc 5 22 0
 6549 09e0 C3F8EC4D 		str	r4, [r3, #3564]
 6550 09e4 C3F8F00D 		str	r0, [r3, #3568]
 6551              	.LBE482:
 6552              	.LBE481:
 6553              	.LBE480:
 6554              	.LBE479:
 6555              	.LBE478:
 6556              	.LBE477:
 6557              	.LBB488:
 6558              	.LBB489:
  50:./lib/ros_lib/ros/publisher.h **** 
 6559              		.loc 15 50 0
 6560 09e8 1A48     		ldr	r0, .L330+64
 6561 09ea 03F55E61 		add	r1, r3, #3552
 6562              	.LBE489:
 6563              	.LBE488:
 6564              	.LBB491:
 6565              	.LBB487:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6566              		.loc 7 23 0
 6567 09ee 83F8042E 		strb	r2, [r3, #3588]
 6568              	.LBB486:
 6569              	.LBB485:
 6570              	.LBB484:
 6571              	.LBB483:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6572              		.loc 5 22 0
 6573 09f2 C3F8F42D 		str	r2, [r3, #3572]
 6574 09f6 C3F8F82D 		str	r2, [r3, #3576]
 6575              	.LVL788:
 6576              	.LBE483:
 6577              	.LBE484:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6578              		.loc 6 23 0
 6579 09fa C3F8FC2D 		str	r2, [r3, #3580]
 6580 09fe C3F8002E 		str	r2, [r3, #3584]
 6581              	.LVL789:
 6582              	.LBE485:
 6583              	.LBE486:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6584              		.loc 7 23 0
 6585 0a02 C3F80C2E 		str	r2, [r3, #3596]
 6586              	.LVL790:
 6587              	.LBE487:
 6588              	.LBE491:
 6589              	.LBB492:
 6590              	.LBB490:
  50:./lib/ros_lib/ros/publisher.h **** 
 6591              		.loc 15 50 0
 6592 0a06 C3F8A80D 		str	r0, [r3, #3496]
 6593 0a0a C3F8AC1D 		str	r1, [r3, #3500]
 6594 0a0e C3F8B82D 		str	r2, [r3, #3512]
 6595              	.LVL791:
 6596 0a12 70BD     		pop	{r4, r5, r6, pc}
 6597              	.L331:
 6598              		.align	2
 6599              	.L330:
 6600 0a14 00000000 		.word	.LANCHOR1
 6601 0a18 08000000 		.word	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE+8
 6602 0a1c 00380140 		.word	1073821696
 6603 0a20 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 6604 0a24 140D0000 		.word	.LANCHOR1+3348
 6605 0a28 38040000 		.word	.LANCHOR1+1080
 6606 0a2c 08000000 		.word	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE+8
 6607 0a30 16020000 		.word	.LC20
 6608 0a34 08000000 		.word	_ZTVN12roberto_msgs10MotorStateE+8
 6609 0a38 08000000 		.word	_ZTVN8std_msgs17Float32MultiArrayE+8
 6610 0a3c 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 6611 0a40 08000000 		.word	_ZTVN8std_msgs16MultiArrayLayoutE+8
 6612 0a44 00000000 		.word	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 6613 0a48 08000000 		.word	_ZTVN8std_msgs19MultiArrayDimensionE+8
 6614 0a4c 5A020000 		.word	.LC27
 6615 0a50 6C020000 		.word	.LC28
 6616 0a54 72020000 		.word	.LC29
 6617              	.LBE490:
 6618              	.LBE492:
 6619              	.LBE493:
 6620              	.LBE494:
 6621              		.cfi_endproc
 6622              	.LFE1336:
 6623              		.cantunwind
 6624              		.fnend
 6626              		.section	.init_array,"aw",%init_array
 6627              		.align	2
 6628 0000 00000000 		.word	_GLOBAL__sub_I_USART_FIFO(target1)
 6629              		.weak	_ZTSN3ros3MsgE
 6630              		.section	.rodata._ZTSN3ros3MsgE,"aG",%progbits,_ZTSN3ros3MsgE,comdat
 6633              	_ZTSN3ros3MsgE:
 6634 0000 4E33726F 		.ascii	"N3ros3MsgE\000"
 6634      73334D73 
 6634      674500
 6635              		.weak	_ZTIN3ros3MsgE
 6636              		.section	.rodata._ZTIN3ros3MsgE,"aG",%progbits,_ZTIN3ros3MsgE,comdat
 6637              		.align	2
 6640              	_ZTIN3ros3MsgE:
 6641 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 6642 0004 00000000 		.word	_ZTSN3ros3MsgE
 6643              		.weak	_ZTSN8std_msgs4TimeE
 6644              		.section	.rodata._ZTSN8std_msgs4TimeE,"aG",%progbits,_ZTSN8std_msgs4TimeE,comdat
 6647              	_ZTSN8std_msgs4TimeE:
 6648 0000 4E387374 		.ascii	"N8std_msgs4TimeE\000"
 6648      645F6D73 
 6648      67733454 
 6648      696D6545 
 6648      00
 6649              		.weak	_ZTIN8std_msgs4TimeE
 6650              		.section	.rodata._ZTIN8std_msgs4TimeE,"aG",%progbits,_ZTIN8std_msgs4TimeE,comdat
 6651              		.align	2
 6654              	_ZTIN8std_msgs4TimeE:
 6655 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6656 0004 00000000 		.word	_ZTSN8std_msgs4TimeE
 6657 0008 00000000 		.word	_ZTIN3ros3MsgE
 6658              		.weak	_ZTSN14rosserial_msgs9TopicInfoE
 6659              		.section	.rodata._ZTSN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTSN14rosserial_msgs9TopicInfoE,
 6662              	_ZTSN14rosserial_msgs9TopicInfoE:
 6663 0000 4E313472 		.ascii	"N14rosserial_msgs9TopicInfoE\000"
 6663      6F737365 
 6663      7269616C 
 6663      5F6D7367 
 6663      7339546F 
 6664              		.weak	_ZTIN14rosserial_msgs9TopicInfoE
 6665              		.section	.rodata._ZTIN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTIN14rosserial_msgs9TopicInfoE,
 6666              		.align	2
 6669              	_ZTIN14rosserial_msgs9TopicInfoE:
 6670 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6671 0004 00000000 		.word	_ZTSN14rosserial_msgs9TopicInfoE
 6672 0008 00000000 		.word	_ZTIN3ros3MsgE
 6673              		.weak	_ZTSN14rosserial_msgs3LogE
 6674              		.section	.rodata._ZTSN14rosserial_msgs3LogE,"aG",%progbits,_ZTSN14rosserial_msgs3LogE,comdat
 6677              	_ZTSN14rosserial_msgs3LogE:
 6678 0000 4E313472 		.ascii	"N14rosserial_msgs3LogE\000"
 6678      6F737365 
 6678      7269616C 
 6678      5F6D7367 
 6678      73334C6F 
 6679              		.weak	_ZTIN14rosserial_msgs3LogE
 6680              		.section	.rodata._ZTIN14rosserial_msgs3LogE,"aG",%progbits,_ZTIN14rosserial_msgs3LogE,comdat
 6681              		.align	2
 6684              	_ZTIN14rosserial_msgs3LogE:
 6685 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6686 0004 00000000 		.word	_ZTSN14rosserial_msgs3LogE
 6687 0008 00000000 		.word	_ZTIN3ros3MsgE
 6688              		.weak	_ZTSN14rosserial_msgs20RequestParamResponseE
 6689              		.section	.rodata._ZTSN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTSN14rosserial_msgs
 6692              	_ZTSN14rosserial_msgs20RequestParamResponseE:
 6693 0000 4E313472 		.ascii	"N14rosserial_msgs20RequestParamResponseE\000"
 6693      6F737365 
 6693      7269616C 
 6693      5F6D7367 
 6693      73323052 
 6694              		.weak	_ZTIN14rosserial_msgs20RequestParamResponseE
 6695              		.section	.rodata._ZTIN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTIN14rosserial_msgs
 6696              		.align	2
 6699              	_ZTIN14rosserial_msgs20RequestParamResponseE:
 6700 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6701 0004 00000000 		.word	_ZTSN14rosserial_msgs20RequestParamResponseE
 6702 0008 00000000 		.word	_ZTIN3ros3MsgE
 6703              		.weak	_ZTSN3ros15NodeHandleBase_E
 6704              		.section	.rodata._ZTSN3ros15NodeHandleBase_E,"aG",%progbits,_ZTSN3ros15NodeHandleBase_E,comdat
 6707              	_ZTSN3ros15NodeHandleBase_E:
 6708 0000 4E33726F 		.ascii	"N3ros15NodeHandleBase_E\000"
 6708      7331354E 
 6708      6F646548 
 6708      616E646C 
 6708      65426173 
 6709              		.weak	_ZTIN3ros15NodeHandleBase_E
 6710              		.section	.rodata._ZTIN3ros15NodeHandleBase_E,"aG",%progbits,_ZTIN3ros15NodeHandleBase_E,comdat
 6711              		.align	2
 6714              	_ZTIN3ros15NodeHandleBase_E:
 6715 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 6716 0004 00000000 		.word	_ZTSN3ros15NodeHandleBase_E
 6717              		.weak	_ZTSN3ros11Subscriber_E
 6718              		.section	.rodata._ZTSN3ros11Subscriber_E,"aG",%progbits,_ZTSN3ros11Subscriber_E,comdat
 6721              	_ZTSN3ros11Subscriber_E:
 6722 0000 4E33726F 		.ascii	"N3ros11Subscriber_E\000"
 6722      73313153 
 6722      75627363 
 6722      72696265 
 6722      725F4500 
 6723              		.weak	_ZTIN3ros11Subscriber_E
 6724              		.section	.rodata._ZTIN3ros11Subscriber_E,"aG",%progbits,_ZTIN3ros11Subscriber_E,comdat
 6725              		.align	2
 6728              	_ZTIN3ros11Subscriber_E:
 6729 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 6730 0004 00000000 		.word	_ZTSN3ros11Subscriber_E
 6731              		.weak	_ZTSN8std_msgs19MultiArrayDimensionE
 6732              		.section	.rodata._ZTSN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTSN8std_msgs19MultiArrayDim
 6735              	_ZTSN8std_msgs19MultiArrayDimensionE:
 6736 0000 4E387374 		.ascii	"N8std_msgs19MultiArrayDimensionE\000"
 6736      645F6D73 
 6736      67733139 
 6736      4D756C74 
 6736      69417272 
 6737              		.weak	_ZTIN8std_msgs19MultiArrayDimensionE
 6738              		.section	.rodata._ZTIN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTIN8std_msgs19MultiArrayDim
 6739              		.align	2
 6742              	_ZTIN8std_msgs19MultiArrayDimensionE:
 6743 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6744 0004 00000000 		.word	_ZTSN8std_msgs19MultiArrayDimensionE
 6745 0008 00000000 		.word	_ZTIN3ros3MsgE
 6746              		.weak	_ZTSN8std_msgs16MultiArrayLayoutE
 6747              		.section	.rodata._ZTSN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTSN8std_msgs16MultiArrayLayout
 6750              	_ZTSN8std_msgs16MultiArrayLayoutE:
 6751 0000 4E387374 		.ascii	"N8std_msgs16MultiArrayLayoutE\000"
 6751      645F6D73 
 6751      67733136 
 6751      4D756C74 
 6751      69417272 
 6752              		.weak	_ZTIN8std_msgs16MultiArrayLayoutE
 6753              		.section	.rodata._ZTIN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTIN8std_msgs16MultiArrayLayout
 6754              		.align	2
 6757              	_ZTIN8std_msgs16MultiArrayLayoutE:
 6758 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6759 0004 00000000 		.word	_ZTSN8std_msgs16MultiArrayLayoutE
 6760 0008 00000000 		.word	_ZTIN3ros3MsgE
 6761              		.weak	_ZTSN8std_msgs17Float32MultiArrayE
 6762              		.section	.rodata._ZTSN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTSN8std_msgs17Float32MultiArr
 6765              	_ZTSN8std_msgs17Float32MultiArrayE:
 6766 0000 4E387374 		.ascii	"N8std_msgs17Float32MultiArrayE\000"
 6766      645F6D73 
 6766      67733137 
 6766      466C6F61 
 6766      7433324D 
 6767              		.weak	_ZTIN8std_msgs17Float32MultiArrayE
 6768              		.section	.rodata._ZTIN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTIN8std_msgs17Float32MultiArr
 6769              		.align	2
 6772              	_ZTIN8std_msgs17Float32MultiArrayE:
 6773 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6774 0004 00000000 		.word	_ZTSN8std_msgs17Float32MultiArrayE
 6775 0008 00000000 		.word	_ZTIN3ros3MsgE
 6776              		.weak	_ZTSN8std_msgs6HeaderE
 6777              		.section	.rodata._ZTSN8std_msgs6HeaderE,"aG",%progbits,_ZTSN8std_msgs6HeaderE,comdat
 6780              	_ZTSN8std_msgs6HeaderE:
 6781 0000 4E387374 		.ascii	"N8std_msgs6HeaderE\000"
 6781      645F6D73 
 6781      67733648 
 6781      65616465 
 6781      724500
 6782              		.weak	_ZTIN8std_msgs6HeaderE
 6783              		.section	.rodata._ZTIN8std_msgs6HeaderE,"aG",%progbits,_ZTIN8std_msgs6HeaderE,comdat
 6784              		.align	2
 6787              	_ZTIN8std_msgs6HeaderE:
 6788 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6789 0004 00000000 		.word	_ZTSN8std_msgs6HeaderE
 6790 0008 00000000 		.word	_ZTIN3ros3MsgE
 6791              		.weak	_ZTSN12roberto_msgs10MotorStateE
 6792              		.section	.rodata._ZTSN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTSN12roberto_msgs10MotorStateE,
 6795              	_ZTSN12roberto_msgs10MotorStateE:
 6796 0000 4E313272 		.ascii	"N12roberto_msgs10MotorStateE\000"
 6796      6F626572 
 6796      746F5F6D 
 6796      73677331 
 6796      304D6F74 
 6797              		.weak	_ZTIN12roberto_msgs10MotorStateE
 6798              		.section	.rodata._ZTIN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTIN12roberto_msgs10MotorStateE,
 6799              		.align	2
 6802              	_ZTIN12roberto_msgs10MotorStateE:
 6803 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6804 0004 00000000 		.word	_ZTSN12roberto_msgs10MotorStateE
 6805 0008 00000000 		.word	_ZTIN3ros3MsgE
 6806              		.weak	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
 6807              		.section	.rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE,"aG",%progbits
 6810              	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:
 6811 0000 4E33726F 		.ascii	"N3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi102"
 6811      7331314E 
 6811      6F646548 
 6811      616E646C 
 6811      655F4931 
 6812 0033 34454C69 		.ascii	"4ELi1024EEE\000"
 6812      31303234 
 6812      45454500 
 6813              		.weak	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
 6814              		.section	.rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE,"aG",%progbits
 6815              		.align	2
 6818              	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:
 6819 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6820 0004 00000000 		.word	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
 6821 0008 00000000 		.word	_ZTIN3ros15NodeHandleBase_E
 6822              		.weak	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 6823              		.section	.rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTSN3ros10Su
 6826              	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 6827 0000 4E33726F 		.ascii	"N3ros10SubscriberIN12roberto_msgs10MotorStateEEE\000"
 6827      73313053 
 6827      75627363 
 6827      72696265 
 6827      72494E31 
 6828              		.weak	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 6829              		.section	.rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTIN3ros10Su
 6830              		.align	2
 6833              	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 6834 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6835 0004 00000000 		.word	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 6836 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 6837              		.weak	_ZTVN8std_msgs4TimeE
 6838              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 6839              		.align	2
 6842              	_ZTVN8std_msgs4TimeE:
 6843 0000 00000000 		.word	0
 6844 0004 00000000 		.word	_ZTIN8std_msgs4TimeE
 6845 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 6846 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 6847 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 6848 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 6849              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 6850              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 6851              		.align	2
 6854              	_ZTVN14rosserial_msgs9TopicInfoE:
 6855 0000 00000000 		.word	0
 6856 0004 00000000 		.word	_ZTIN14rosserial_msgs9TopicInfoE
 6857 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 6858 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 6859 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 6860 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 6861              		.weak	_ZTVN14rosserial_msgs3LogE
 6862              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 6863              		.align	2
 6866              	_ZTVN14rosserial_msgs3LogE:
 6867 0000 00000000 		.word	0
 6868 0004 00000000 		.word	_ZTIN14rosserial_msgs3LogE
 6869 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 6870 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 6871 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 6872 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 6873              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 6874              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 6875              		.align	2
 6878              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 6879 0000 00000000 		.word	0
 6880 0004 00000000 		.word	_ZTIN14rosserial_msgs20RequestParamResponseE
 6881 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 6882 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 6883 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 6884 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 6885              		.weak	_ZTVN8std_msgs19MultiArrayDimensionE
 6886              		.section	.rodata._ZTVN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTVN8std_msgs19MultiArrayDim
 6887              		.align	2
 6890              	_ZTVN8std_msgs19MultiArrayDimensionE:
 6891 0000 00000000 		.word	0
 6892 0004 00000000 		.word	_ZTIN8std_msgs19MultiArrayDimensionE
 6893 0008 00000000 		.word	_ZNK8std_msgs19MultiArrayDimension9serializeEPh
 6894 000c 00000000 		.word	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 6895 0010 00000000 		.word	_ZN8std_msgs19MultiArrayDimension7getTypeEv
 6896 0014 00000000 		.word	_ZN8std_msgs19MultiArrayDimension6getMD5Ev
 6897              		.weak	_ZTVN8std_msgs16MultiArrayLayoutE
 6898              		.section	.rodata._ZTVN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTVN8std_msgs16MultiArrayLayout
 6899              		.align	2
 6902              	_ZTVN8std_msgs16MultiArrayLayoutE:
 6903 0000 00000000 		.word	0
 6904 0004 00000000 		.word	_ZTIN8std_msgs16MultiArrayLayoutE
 6905 0008 00000000 		.word	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 6906 000c 00000000 		.word	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 6907 0010 00000000 		.word	_ZN8std_msgs16MultiArrayLayout7getTypeEv
 6908 0014 00000000 		.word	_ZN8std_msgs16MultiArrayLayout6getMD5Ev
 6909              		.weak	_ZTVN8std_msgs17Float32MultiArrayE
 6910              		.section	.rodata._ZTVN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTVN8std_msgs17Float32MultiArr
 6911              		.align	2
 6914              	_ZTVN8std_msgs17Float32MultiArrayE:
 6915 0000 00000000 		.word	0
 6916 0004 00000000 		.word	_ZTIN8std_msgs17Float32MultiArrayE
 6917 0008 00000000 		.word	_ZNK8std_msgs17Float32MultiArray9serializeEPh
 6918 000c 00000000 		.word	_ZN8std_msgs17Float32MultiArray11deserializeEPh
 6919 0010 00000000 		.word	_ZN8std_msgs17Float32MultiArray7getTypeEv
 6920 0014 00000000 		.word	_ZN8std_msgs17Float32MultiArray6getMD5Ev
 6921              		.weak	_ZTVN8std_msgs6HeaderE
 6922              		.section	.rodata._ZTVN8std_msgs6HeaderE,"aG",%progbits,_ZTVN8std_msgs6HeaderE,comdat
 6923              		.align	2
 6926              	_ZTVN8std_msgs6HeaderE:
 6927 0000 00000000 		.word	0
 6928 0004 00000000 		.word	_ZTIN8std_msgs6HeaderE
 6929 0008 00000000 		.word	_ZNK8std_msgs6Header9serializeEPh
 6930 000c 00000000 		.word	_ZN8std_msgs6Header11deserializeEPh
 6931 0010 00000000 		.word	_ZN8std_msgs6Header7getTypeEv
 6932 0014 00000000 		.word	_ZN8std_msgs6Header6getMD5Ev
 6933              		.weak	_ZTVN12roberto_msgs10MotorStateE
 6934              		.section	.rodata._ZTVN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTVN12roberto_msgs10MotorStateE,
 6935              		.align	2
 6938              	_ZTVN12roberto_msgs10MotorStateE:
 6939 0000 00000000 		.word	0
 6940 0004 00000000 		.word	_ZTIN12roberto_msgs10MotorStateE
 6941 0008 00000000 		.word	_ZNK12roberto_msgs10MotorState9serializeEPh
 6942 000c 00000000 		.word	_ZN12roberto_msgs10MotorState11deserializeEPh
 6943 0010 00000000 		.word	_ZN12roberto_msgs10MotorState7getTypeEv
 6944 0014 00000000 		.word	_ZN12roberto_msgs10MotorState6getMD5Ev
 6945              		.weak	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
 6946              		.section	.rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE,"aG",%progbits
 6947              		.align	2
 6950              	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:
 6951 0000 00000000 		.word	0
 6952 0004 00000000 		.word	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
 6953 0008 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE
 6954 000c 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv
 6955 0010 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv
 6956              		.weak	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 6957              		.section	.rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTVN3ros10Su
 6958              		.align	2
 6961              	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 6962 0000 00000000 		.word	0
 6963 0004 00000000 		.word	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 6964 0008 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 6965 000c 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 6966 0010 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 6967 0014 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 6968              		.global	odom_pub
 6969              		.global	odom_msg
 6970              		.global	debug_pub
 6971              		.global	debug_msg
 6972              		.global	motor_sub
 6973              		.global	waitForServos
 6974              		.global	shuttingDown
 6975              		.global	nh
 6976              		.global	initialized
 6977              		.global	lastMsg
 6978              		.global	currentMode
 6979              		.global	motorCmd
 6980              		.global	L
 6981              		.global	d
 6982              		.global	rear_left
 6983              		.global	rear_right
 6984              		.global	front_left
 6985              		.global	front_right
 6986              		.global	servo_right
 6987              		.global	servo_left
 6988              		.global	USART_CNTOUT
 6989              		.global	USART_CNTIN
 6990              		.global	USART_FIFO
 6991              		.section	.rodata
 6992              		.align	2
 6993              		.set	.LANCHOR0,. + 0
 6996              	_ZN14rosserial_msgsL12REQUESTPARAME:
 6997 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 6997      65726961 
 6997      6C5F6D73 
 6997      67732F52 
 6997      65717565 
 6998              	.LC1:
 6999 001c DB0F49BF 		.word	-1085730853
 7000 0020 DB0F493F 		.word	1061752795
 7001 0024 E4CB1640 		.word	1075235812
 7002 0028 E4CB16C0 		.word	-1072247836
 7003              		.section	.rodata.str1.1,"aMS",%progbits,1
 7004              	.LC2:
 7005 0000 7374645F 		.ascii	"std_msgs/Time\000"
 7005      6D736773 
 7005      2F54696D 
 7005      6500
 7006              	.LC3:
 7007 000e 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 7007      36366337 
 7007      34633535 
 7007      32633331 
 7007      31666263 
 7008              	.LC4:
 7009 002f 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 7009      65726961 
 7009      6C5F6D73 
 7009      67732F54 
 7009      6F706963 
 7010              	.LC5:
 7011 0048 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 7011      31663838 
 7011      66633434 
 7011      38393266 
 7011      38633130 
 7012              	.LC6:
 7013 0069 726F7373 		.ascii	"rosserial_msgs/Log\000"
 7013      65726961 
 7013      6C5F6D73 
 7013      67732F4C 
 7013      6F6700
 7014              	.LC7:
 7015 007c 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 7015      64373331 
 7015      63323539 
 7015      33333236 
 7015      31636436 
 7016              	.LC8:
 7017 009d 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 7017      39386264 
 7017      61363539 
 7017      38313938 
 7017      36646466 
 7018              	.LC9:
 7019 00be 7374645F 		.ascii	"std_msgs/MultiArrayDimension\000"
 7019      6D736773 
 7019      2F4D756C 
 7019      74694172 
 7019      72617944 
 7020              	.LC10:
 7021 00db 34636430 		.ascii	"4cd0c83a8683deae40ecdac60e53bfa8\000"
 7021      63383361 
 7021      38363833 
 7021      64656165 
 7021      34306563 
 7022              	.LC11:
 7023 00fc 7374645F 		.ascii	"std_msgs/MultiArrayLayout\000"
 7023      6D736773 
 7023      2F4D756C 
 7023      74694172 
 7023      7261794C 
 7024              	.LC12:
 7025 0116 30666564 		.ascii	"0fed2a11c13e11c5571b4e2a995a91a3\000"
 7025      32613131 
 7025      63313365 
 7025      31316335 
 7025      35373162 
 7026              	.LC13:
 7027 0137 7374645F 		.ascii	"std_msgs/Float32MultiArray\000"
 7027      6D736773 
 7027      2F466C6F 
 7027      61743332 
 7027      4D756C74 
 7028              	.LC14:
 7029 0152 36613430 		.ascii	"6a40e0ffa6a17a503ac3f8616991b1f6\000"
 7029      65306666 
 7029      61366131 
 7029      37613530 
 7029      33616333 
 7030              	.LC15:
 7031 0173 7374645F 		.ascii	"std_msgs/Header\000"
 7031      6D736773 
 7031      2F486561 
 7031      64657200 
 7032              	.LC16:
 7033 0183 32313736 		.ascii	"2176decaecbce78abc3b96ef049fabed\000"
 7033      64656361 
 7033      65636263 
 7033      65373861 
 7033      62633362 
 7034              	.LC17:
 7035 01a4 726F6265 		.ascii	"roberto_msgs/MotorState\000"
 7035      72746F5F 
 7035      6D736773 
 7035      2F4D6F74 
 7035      6F725374 
 7036              	.LC18:
 7037 01bc 65386235 		.ascii	"e8b5d1162b85151c49e02b8224796c0e\000"
 7037      64313136 
 7037      32623835 
 7037      31353163 
 7037      34396530 
 7038              	.LC19:
 7039 01dd 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 7039      61676520 
 7039      66726F6D 
 7039      20646576 
 7039      69636520 
 7040 0210 66666572 		.ascii	"ffer.\000"
 7040      2E00
 7041              	.LC20:
 7042 0216 00       		.ascii	"\000"
 7043              	.LC21:
 7044 0217 73657276 		.ascii	"servo_left\000"
 7044      6F5F6C65 
 7044      667400
 7045              	.LC22:
 7046 0222 73657276 		.ascii	"servo_right\000"
 7046      6F5F7269 
 7046      67687400 
 7047              	.LC23:
 7048 022e 66726F6E 		.ascii	"front_right\000"
 7048      745F7269 
 7048      67687400 
 7049              	.LC24:
 7050 023a 66726F6E 		.ascii	"front_left\000"
 7050      745F6C65 
 7050      667400
 7051              	.LC25:
 7052 0245 72656172 		.ascii	"rear_left\000"
 7052      5F6C6566 
 7052      7400
 7053              	.LC26:
 7054 024f 72656172 		.ascii	"rear_right\000"
 7054      5F726967 
 7054      687400
 7055              	.LC27:
 7056 025a 7468726F 		.ascii	"throttled_joy_vel\000"
 7056      74746C65 
 7056      645F6A6F 
 7056      795F7665 
 7056      6C00
 7057              	.LC28:
 7058 026c 64656275 		.ascii	"debug\000"
 7058      6700
 7059              	.LC29:
 7060 0272 6F646F6D 		.ascii	"odom_vel\000"
 7060      5F76656C 
 7060      00
 7061              		.bss
 7062              		.align	2
 7063              		.set	.LANCHOR1,. + 0
 7066              	initialized:
 7067 0000 00       		.space	1
 7068 0001 000000   		.space	3
 7071              	lastMsg:
 7072 0004 00000000 		.space	4
 7075              	currentMode:
 7076 0008 00       		.space	1
 7079              	waitForServos:
 7080 0009 00       		.space	1
 7081 000a 0000     		.space	2
 7084              	L:
 7085 000c 00000000 		.space	4
 7088              	d:
 7089 0010 00000000 		.space	4
 7092              	servo_left:
 7093 0014 00000000 		.space	4
 7096              	servo_right:
 7097 0018 00000000 		.space	4
 7100              	motorCmd:
 7101 001c 00000000 		.space	16
 7101      00000000 
 7101      00000000 
 7101      00000000 
 7104              	USART_CNTOUT:
 7105 002c 00000000 		.space	4
 7108              	USART_CNTIN:
 7109 0030 00000000 		.space	4
 7112              	USART_FIFO:
 7113 0034 00000000 		.space	1024
 7113      00000000 
 7113      00000000 
 7113      00000000 
 7113      00000000 
 7116              	shuttingDown:
 7117 0434 00       		.space	1
 7118 0435 000000   		.space	3
 7121              	nh:
 7122 0438 00000000 		.space	2352
 7122      00000000 
 7122      00000000 
 7122      00000000 
 7122      00000000 
 7125              	motor_sub:
 7126 0d68 00000000 		.space	64
 7126      00000000 
 7126      00000000 
 7126      00000000 
 7126      00000000 
 7129              	odom_pub:
 7130 0da8 00000000 		.space	20
 7130      00000000 
 7130      00000000 
 7130      00000000 
 7130      00000000 
 7133              	debug_pub:
 7134 0dbc 00000000 		.space	20
 7134      00000000 
 7134      00000000 
 7134      00000000 
 7134      00000000 
 7137              	front_left:
 7138 0dd0 00000000 		.space	4
 7141              	front_right:
 7142 0dd4 00000000 		.space	4
 7145              	rear_left:
 7146 0dd8 00000000 		.space	4
 7149              	rear_right:
 7150 0ddc 00000000 		.space	4
 7153              	odom_msg:
 7154 0de0 00000000 		.space	48
 7154      00000000 
 7154      00000000 
 7154      00000000 
 7154      00000000 
 7157              	debug_msg:
 7158 0e10 00000000 		.space	48
 7158      00000000 
 7158      00000000 
 7158      00000000 
 7158      00000000 
 7159              		.text
 7160              	.Letext0:
 7161              		.file 18 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 7162              		.file 19 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types.h"
 7163              		.file 20 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 7164              		.file 21 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdint.h"
 7165              		.file 22 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 7166              		.file 23 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_usart.h"
 7167              		.file 24 "/opt/gcc-arm-none-eabi-5_2-2015q4/lib/gcc/arm-none-eabi/5.2.1/include/stddef.h"
 7168              		.file 25 "/opt/gcc-arm-none-eabi-5_2-2015q4/lib/gcc/arm-none-eabi/5.2.1/include/stdarg.h"
 7169              		.file 26 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/lock.h"
 7170              		.file 27 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_types.h"
 7171              		.file 28 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/reent.h"
 7172              		.file 29 "<built-in>"
 7173              		.file 30 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/type_traits"
 7174              		.file 31 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/exception_ptr.h"
 7175              		.file 32 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/arm-none-eabi/armv7-m/
 7176              		.file 33 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/debug/debug.h"
 7177              		.file 34 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/cwchar"
 7178              		.file 35 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/cstdint"
 7179              		.file 36 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/clocale"
 7180              		.file 37 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/stl_pair.h"
 7181              		.file 38 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/uses_allocator.h"
 7182              		.file 39 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/tuple"
 7183              		.file 40 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/predefined_ops.h"
 7184              		.file 41 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/ext/new_allocator.h"
 7185              		.file 42 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/ext/numeric_traits.h"
 7186              		.file 43 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/wchar.h"
 7187              		.file 44 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/locale.h"
 7188              		.file 45 "./inc/motorSettings.h"
 7189              		.file 46 "./lib/ros_lib/ros/duration.h"
 7190              		.file 47 "./lib/ros_lib/ros.h"
 7191              		.file 48 "./lib/ros_lib/geometry_msgs/Point.h"
 7192              		.file 49 "./lib/ros_lib/geometry_msgs/TransformStamped.h"
 7193              		.file 50 "./lib/ros_lib/geometry_msgs/Transform.h"
 7194              		.file 51 "./lib/ros_lib/geometry_msgs/Vector3.h"
 7195              		.file 52 "./lib/ros_lib/geometry_msgs/Quaternion.h"
 7196              		.file 53 "./lib/ros_lib/sensor_msgs/Joy.h"
 7197              		.file 54 "./lib/ros_lib/nav_msgs/Odometry.h"
 7198              		.file 55 "./inc/motor.h"
 7199              		.file 56 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/string.h"
 7200              		.file 57 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdlib.h"
 7201              		.file 58 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/math.h"
 7202              		.file 59 "./inc/stm32_time.h"
 7203              		.file 60 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 7204              		.file 61 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_exti.h"
 7205              		.file 62 "./inc/led.h"
 7206              		.file 63 "./inc/encoder.h"
 7207              		.file 64 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/new"
 7208              		.file 65 "./lib/ros_lib/tf/tf.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/cc8FewPc.s:20     .text._ZNK8std_msgs4Time9serializeEPh:00000000 $t
     /tmp/cc8FewPc.s:25     .text._ZNK8std_msgs4Time9serializeEPh:00000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:00000000 $d
     /tmp/cc8FewPc.s:75     .text._ZN8std_msgs4Time11deserializeEPh:00000000 $t
     /tmp/cc8FewPc.s:80     .text._ZN8std_msgs4Time11deserializeEPh:00000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:00000000 $d
     /tmp/cc8FewPc.s:131    .text._ZN8std_msgs4Time7getTypeEv:00000000 $t
     /tmp/cc8FewPc.s:136    .text._ZN8std_msgs4Time7getTypeEv:00000000 _ZN8std_msgs4Time7getTypeEv
     /tmp/cc8FewPc.s:152    .text._ZN8std_msgs4Time7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:00000000 $d
     /tmp/cc8FewPc.s:159    .text._ZN8std_msgs4Time6getMD5Ev:00000000 $t
     /tmp/cc8FewPc.s:164    .text._ZN8std_msgs4Time6getMD5Ev:00000000 _ZN8std_msgs4Time6getMD5Ev
     /tmp/cc8FewPc.s:180    .text._ZN8std_msgs4Time6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:00000000 $d
     /tmp/cc8FewPc.s:187    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $t
     /tmp/cc8FewPc.s:192    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
     /tmp/cc8FewPc.s:209    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $d
     /tmp/cc8FewPc.s:216    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $t
     /tmp/cc8FewPc.s:221    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
     /tmp/cc8FewPc.s:237    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $d
     /tmp/cc8FewPc.s:244    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $t
     /tmp/cc8FewPc.s:249    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 _ZN14rosserial_msgs3Log7getTypeEv
     /tmp/cc8FewPc.s:266    .text._ZN14rosserial_msgs3Log7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $d
     /tmp/cc8FewPc.s:273    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $t
     /tmp/cc8FewPc.s:278    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 _ZN14rosserial_msgs3Log6getMD5Ev
     /tmp/cc8FewPc.s:294    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $d
     /tmp/cc8FewPc.s:301    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $t
     /tmp/cc8FewPc.s:306    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
     /tmp/cc8FewPc.s:323    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $d
     /tmp/cc8FewPc.s:330    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $t
     /tmp/cc8FewPc.s:335    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
     /tmp/cc8FewPc.s:351    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $d
     /tmp/cc8FewPc.s:358    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 $t
     /tmp/cc8FewPc.s:363    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 _ZN8std_msgs19MultiArrayDimension7getTypeEv
     /tmp/cc8FewPc.s:380    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 $d
     /tmp/cc8FewPc.s:387    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 $t
     /tmp/cc8FewPc.s:392    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 _ZN8std_msgs19MultiArrayDimension6getMD5Ev
     /tmp/cc8FewPc.s:408    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 $d
     /tmp/cc8FewPc.s:415    .text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 $t
     /tmp/cc8FewPc.s:420    .text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 _ZNK8std_msgs16MultiArrayLayout9serializeEPh
.ARM.exidx.text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 $d
     /tmp/cc8FewPc.s:513    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 $t
     /tmp/cc8FewPc.s:518    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 _ZN8std_msgs16MultiArrayLayout7getTypeEv
     /tmp/cc8FewPc.s:534    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 $d
     /tmp/cc8FewPc.s:541    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 $t
     /tmp/cc8FewPc.s:546    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 _ZN8std_msgs16MultiArrayLayout6getMD5Ev
     /tmp/cc8FewPc.s:562    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 $d
     /tmp/cc8FewPc.s:569    .text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 $t
     /tmp/cc8FewPc.s:574    .text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 _ZNK8std_msgs17Float32MultiArray9serializeEPh
.ARM.exidx.text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 $d
     /tmp/cc8FewPc.s:666    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 $t
     /tmp/cc8FewPc.s:671    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 _ZN8std_msgs17Float32MultiArray7getTypeEv
     /tmp/cc8FewPc.s:687    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 $d
     /tmp/cc8FewPc.s:694    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 $t
     /tmp/cc8FewPc.s:699    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 _ZN8std_msgs17Float32MultiArray6getMD5Ev
     /tmp/cc8FewPc.s:715    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 $d
     /tmp/cc8FewPc.s:722    .text._ZN8std_msgs6Header7getTypeEv:00000000 $t
     /tmp/cc8FewPc.s:727    .text._ZN8std_msgs6Header7getTypeEv:00000000 _ZN8std_msgs6Header7getTypeEv
     /tmp/cc8FewPc.s:744    .text._ZN8std_msgs6Header7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header7getTypeEv:00000000 $d
     /tmp/cc8FewPc.s:751    .text._ZN8std_msgs6Header6getMD5Ev:00000000 $t
     /tmp/cc8FewPc.s:756    .text._ZN8std_msgs6Header6getMD5Ev:00000000 _ZN8std_msgs6Header6getMD5Ev
     /tmp/cc8FewPc.s:772    .text._ZN8std_msgs6Header6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header6getMD5Ev:00000000 $d
     /tmp/cc8FewPc.s:779    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $t
     /tmp/cc8FewPc.s:784    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 _ZN12roberto_msgs10MotorState7getTypeEv
     /tmp/cc8FewPc.s:801    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $d
     /tmp/cc8FewPc.s:808    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $t
     /tmp/cc8FewPc.s:813    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 _ZN12roberto_msgs10MotorState6getMD5Ev
     /tmp/cc8FewPc.s:829    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $d
     /tmp/cc8FewPc.s:836    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $t
     /tmp/cc8FewPc.s:841    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $d
     /tmp/cc8FewPc.s:861    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $t
     /tmp/cc8FewPc.s:866    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
     /tmp/cc8FewPc.s:882    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $d
     /tmp/cc8FewPc.s:889    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $t
     /tmp/cc8FewPc.s:894    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
     /tmp/cc8FewPc.s:910    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $d
     /tmp/cc8FewPc.s:917    .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv:00000000 $t
     /tmp/cc8FewPc.s:922    .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv:00000000 $d
     /tmp/cc8FewPc.s:942    .text._ZNK8std_msgs6Header9serializeEPh:00000000 $t
     /tmp/cc8FewPc.s:947    .text._ZNK8std_msgs6Header9serializeEPh:00000000 _ZNK8std_msgs6Header9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6Header9serializeEPh:00000000 $d
     /tmp/cc8FewPc.s:1046   .text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 $t
     /tmp/cc8FewPc.s:1051   .text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 _ZNK8std_msgs19MultiArrayDimension9serializeEPh
.ARM.exidx.text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 $d
     /tmp/cc8FewPc.s:1134   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $t
     /tmp/cc8FewPc.s:1139   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $d
     /tmp/cc8FewPc.s:1352   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $t
     /tmp/cc8FewPc.s:1357   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $d
     /tmp/cc8FewPc.s:1416   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $t
     /tmp/cc8FewPc.s:1421   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $d
     /tmp/cc8FewPc.s:1556   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $t
     /tmp/cc8FewPc.s:1561   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $d
     /tmp/cc8FewPc.s:1635   .text._ZN8std_msgs6Header11deserializeEPh:00000000 $t
     /tmp/cc8FewPc.s:1640   .text._ZN8std_msgs6Header11deserializeEPh:00000000 _ZN8std_msgs6Header11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6Header11deserializeEPh:00000000 $d
     /tmp/cc8FewPc.s:1753   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $t
     /tmp/cc8FewPc.s:1758   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $d
     /tmp/cc8FewPc.s:1946   .text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 $t
     /tmp/cc8FewPc.s:1951   .text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 _ZN8std_msgs19MultiArrayDimension11deserializeEPh
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 $d
     /tmp/cc8FewPc.s:2053   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $t
     /tmp/cc8FewPc.s:2058   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $d
     /tmp/cc8FewPc.s:2313   .text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 $t
     /tmp/cc8FewPc.s:2318   .text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 _ZN8std_msgs16MultiArrayLayout11deserializeEPh
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 $d
     /tmp/cc8FewPc.s:2432   .text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 $t
     /tmp/cc8FewPc.s:2437   .text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 _ZN8std_msgs17Float32MultiArray11deserializeEPh
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 $d
     /tmp/cc8FewPc.s:2553   .text:00000000 $t
     /tmp/cc8FewPc.s:2558   .text:00000000 _Z8motor_cbRKN12roberto_msgs10MotorStateE
     /tmp/cc8FewPc.s:2979   .text:00000228 $d
                       .ARM.exidx:00000000 $d
     /tmp/cc8FewPc.s:2995   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:00000000 $t
     /tmp/cc8FewPc.s:3000   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE
     /tmp/cc8FewPc.s:3204   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:000000d0 $d
     /tmp/cc8FewPc.s:6866   .rodata._ZTVN14rosserial_msgs3LogE:00000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:00000000 $d
     /tmp/cc8FewPc.s:3212   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $t
     /tmp/cc8FewPc.s:3217   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 _ZN3ros3Msg19serializeAvrFloat64EPhf
.ARM.exidx.text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $d
     /tmp/cc8FewPc.s:3304   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $t
     /tmp/cc8FewPc.s:3309   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 _ZNK12roberto_msgs10MotorState9serializeEPh
.ARM.exidx.text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $d
     /tmp/cc8FewPc.s:3381   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $t
     /tmp/cc8FewPc.s:3386   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 _ZN3ros3Msg21deserializeAvrFloat64EPKhPf
.ARM.exidx.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $d
     /tmp/cc8FewPc.s:3458   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $t
     /tmp/cc8FewPc.s:3463   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 _ZN12roberto_msgs10MotorState11deserializeEPh
.ARM.exidx.text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $d
     /tmp/cc8FewPc.s:3537   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $t
     /tmp/cc8FewPc.s:3542   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $d
     /tmp/cc8FewPc.s:3586   .text._ZN3ros9Publisher7publishEPKNS_3MsgE:00000000 $t
     /tmp/cc8FewPc.s:3591   .text._ZN3ros9Publisher7publishEPKNS_3MsgE:00000000 _ZN3ros9Publisher7publishEPKNS_3MsgE
.ARM.exidx.text._ZN3ros9Publisher7publishEPKNS_3MsgE:00000000 $d
     /tmp/cc8FewPc.s:3627   .text._ZN15ArduinoHardware4initEv:00000000 $t
     /tmp/cc8FewPc.s:3632   .text._ZN15ArduinoHardware4initEv:00000000 _ZN15ArduinoHardware4initEv
     /tmp/cc8FewPc.s:3749   .text._ZN15ArduinoHardware4initEv:0000008c $d
.ARM.exidx.text._ZN15ArduinoHardware4initEv:00000000 $d
     /tmp/cc8FewPc.s:3756   .text:00000254 $t
     /tmp/cc8FewPc.s:3761   .text:00000254 USART1_IRQHandler
     /tmp/cc8FewPc.s:3824   .text:0000029c $d
     /tmp/cc8FewPc.s:3830   .text:000002a4 $t
     /tmp/cc8FewPc.s:3835   .text:000002a4 _Z6readerN8std_msgs17Float32MultiArrayE
     /tmp/cc8FewPc.s:3870   .text:000002b8 EXTI2_IRQHandler
     /tmp/cc8FewPc.s:3911   .text:000002d8 $d
                       .ARM.extab:00000000 $d
     /tmp/cc8FewPc.s:3916   .text:000002dc $t
     /tmp/cc8FewPc.s:3921   .text:000002dc HardFault_Handler
     /tmp/cc8FewPc.s:3939   .text:000002ec _MSP
     /tmp/cc8FewPc.s:3958   .text:000002f4 hard_fault_handler_c
     /tmp/cc8FewPc.s:4008   .text:0000031c $d
     /tmp/cc8FewPc.s:4018   .text:00000324 $t
     /tmp/cc8FewPc.s:4023   .text:00000324 _Z13assert_failedPhm
     /tmp/cc8FewPc.s:4052   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:00000000 $t
     /tmp/cc8FewPc.s:4057   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
     /tmp/cc8FewPc.s:4127   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:00000024 $d
     /tmp/cc8FewPc.s:6842   .rodata._ZTVN8std_msgs4TimeE:00000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:00000000 $d
     /tmp/cc8FewPc.s:4133   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:00000000 $t
     /tmp/cc8FewPc.s:4138   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv
     /tmp/cc8FewPc.s:4300   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:000000b4 $d
     /tmp/cc8FewPc.s:6854   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 _ZTVN14rosserial_msgs9TopicInfoE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:00000000 $d
     /tmp/cc8FewPc.s:4307   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:00000000 $t
     /tmp/cc8FewPc.s:4312   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh
     /tmp/cc8FewPc.s:4445   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:00000074 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:00000000 $d
     /tmp/cc8FewPc.s:4453   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:00000000 $t
     /tmp/cc8FewPc.s:4458   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv
     /tmp/cc8FewPc.s:4820   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:00000208 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:00000000 $d
     /tmp/cc8FewPc.s:4828   .text.startup:00000000 $t
     /tmp/cc8FewPc.s:4833   .text.startup:00000000 main
     /tmp/cc8FewPc.s:5005   .text.startup:000000b4 $d
     /tmp/cc8FewPc.s:5014   .text.startup:000000cc $t
     /tmp/cc8FewPc.s:5469   .text.startup:000003c8 $d
     /tmp/cc8FewPc.s:5494   .text.startup:00000428 $t
     /tmp/cc8FewPc.s:5598   .text.startup:000004b8 $d
     /tmp/cc8FewPc.s:5603   .text.startup:000004c0 $t
     /tmp/cc8FewPc.s:6092   .text.startup:00000830 $d
     /tmp/cc8FewPc.s:6106   .text.startup:00000858 $t
          .ARM.exidx.text.startup:00000000 $d
     /tmp/cc8FewPc.s:6179   .text.startup:000008bc _GLOBAL__sub_I_USART_FIFO
     /tmp/cc8FewPc.s:6600   .text.startup:00000a14 $d
     /tmp/cc8FewPc.s:6950   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:00000000 _ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
     /tmp/cc8FewPc.s:6878   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 _ZTVN14rosserial_msgs20RequestParamResponseE
     /tmp/cc8FewPc.s:6961   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/cc8FewPc.s:6938   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 _ZTVN12roberto_msgs10MotorStateE
     /tmp/cc8FewPc.s:6914   .rodata._ZTVN8std_msgs17Float32MultiArrayE:00000000 _ZTVN8std_msgs17Float32MultiArrayE
     /tmp/cc8FewPc.s:6926   .rodata._ZTVN8std_msgs6HeaderE:00000000 _ZTVN8std_msgs6HeaderE
     /tmp/cc8FewPc.s:6902   .rodata._ZTVN8std_msgs16MultiArrayLayoutE:00000000 _ZTVN8std_msgs16MultiArrayLayoutE
     /tmp/cc8FewPc.s:6890   .rodata._ZTVN8std_msgs19MultiArrayDimensionE:00000000 _ZTVN8std_msgs19MultiArrayDimensionE
     /tmp/cc8FewPc.s:6627   .init_array:00000000 $d
     /tmp/cc8FewPc.s:6633   .rodata._ZTSN3ros3MsgE:00000000 _ZTSN3ros3MsgE
     /tmp/cc8FewPc.s:6640   .rodata._ZTIN3ros3MsgE:00000000 _ZTIN3ros3MsgE
     /tmp/cc8FewPc.s:6637   .rodata._ZTIN3ros3MsgE:00000000 $d
     /tmp/cc8FewPc.s:6647   .rodata._ZTSN8std_msgs4TimeE:00000000 _ZTSN8std_msgs4TimeE
     /tmp/cc8FewPc.s:6654   .rodata._ZTIN8std_msgs4TimeE:00000000 _ZTIN8std_msgs4TimeE
     /tmp/cc8FewPc.s:6651   .rodata._ZTIN8std_msgs4TimeE:00000000 $d
     /tmp/cc8FewPc.s:6662   .rodata._ZTSN14rosserial_msgs9TopicInfoE:00000000 _ZTSN14rosserial_msgs9TopicInfoE
     /tmp/cc8FewPc.s:6669   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 _ZTIN14rosserial_msgs9TopicInfoE
     /tmp/cc8FewPc.s:6666   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/cc8FewPc.s:6677   .rodata._ZTSN14rosserial_msgs3LogE:00000000 _ZTSN14rosserial_msgs3LogE
     /tmp/cc8FewPc.s:6684   .rodata._ZTIN14rosserial_msgs3LogE:00000000 _ZTIN14rosserial_msgs3LogE
     /tmp/cc8FewPc.s:6681   .rodata._ZTIN14rosserial_msgs3LogE:00000000 $d
     /tmp/cc8FewPc.s:6692   .rodata._ZTSN14rosserial_msgs20RequestParamResponseE:00000000 _ZTSN14rosserial_msgs20RequestParamResponseE
     /tmp/cc8FewPc.s:6699   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 _ZTIN14rosserial_msgs20RequestParamResponseE
     /tmp/cc8FewPc.s:6696   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/cc8FewPc.s:6707   .rodata._ZTSN3ros15NodeHandleBase_E:00000000 _ZTSN3ros15NodeHandleBase_E
     /tmp/cc8FewPc.s:6714   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 _ZTIN3ros15NodeHandleBase_E
     /tmp/cc8FewPc.s:6711   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 $d
     /tmp/cc8FewPc.s:6721   .rodata._ZTSN3ros11Subscriber_E:00000000 _ZTSN3ros11Subscriber_E
     /tmp/cc8FewPc.s:6728   .rodata._ZTIN3ros11Subscriber_E:00000000 _ZTIN3ros11Subscriber_E
     /tmp/cc8FewPc.s:6725   .rodata._ZTIN3ros11Subscriber_E:00000000 $d
     /tmp/cc8FewPc.s:6735   .rodata._ZTSN8std_msgs19MultiArrayDimensionE:00000000 _ZTSN8std_msgs19MultiArrayDimensionE
     /tmp/cc8FewPc.s:6742   .rodata._ZTIN8std_msgs19MultiArrayDimensionE:00000000 _ZTIN8std_msgs19MultiArrayDimensionE
     /tmp/cc8FewPc.s:6739   .rodata._ZTIN8std_msgs19MultiArrayDimensionE:00000000 $d
     /tmp/cc8FewPc.s:6750   .rodata._ZTSN8std_msgs16MultiArrayLayoutE:00000000 _ZTSN8std_msgs16MultiArrayLayoutE
     /tmp/cc8FewPc.s:6757   .rodata._ZTIN8std_msgs16MultiArrayLayoutE:00000000 _ZTIN8std_msgs16MultiArrayLayoutE
     /tmp/cc8FewPc.s:6754   .rodata._ZTIN8std_msgs16MultiArrayLayoutE:00000000 $d
     /tmp/cc8FewPc.s:6765   .rodata._ZTSN8std_msgs17Float32MultiArrayE:00000000 _ZTSN8std_msgs17Float32MultiArrayE
     /tmp/cc8FewPc.s:6772   .rodata._ZTIN8std_msgs17Float32MultiArrayE:00000000 _ZTIN8std_msgs17Float32MultiArrayE
     /tmp/cc8FewPc.s:6769   .rodata._ZTIN8std_msgs17Float32MultiArrayE:00000000 $d
     /tmp/cc8FewPc.s:6780   .rodata._ZTSN8std_msgs6HeaderE:00000000 _ZTSN8std_msgs6HeaderE
     /tmp/cc8FewPc.s:6787   .rodata._ZTIN8std_msgs6HeaderE:00000000 _ZTIN8std_msgs6HeaderE
     /tmp/cc8FewPc.s:6784   .rodata._ZTIN8std_msgs6HeaderE:00000000 $d
     /tmp/cc8FewPc.s:6795   .rodata._ZTSN12roberto_msgs10MotorStateE:00000000 _ZTSN12roberto_msgs10MotorStateE
     /tmp/cc8FewPc.s:6802   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 _ZTIN12roberto_msgs10MotorStateE
     /tmp/cc8FewPc.s:6799   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/cc8FewPc.s:6810   .rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:00000000 _ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
     /tmp/cc8FewPc.s:6818   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:00000000 _ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
     /tmp/cc8FewPc.s:6815   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:00000000 $d
     /tmp/cc8FewPc.s:6826   .rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/cc8FewPc.s:6833   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/cc8FewPc.s:6830   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/cc8FewPc.s:6839   .rodata._ZTVN8std_msgs4TimeE:00000000 $d
     /tmp/cc8FewPc.s:6851   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/cc8FewPc.s:6863   .rodata._ZTVN14rosserial_msgs3LogE:00000000 $d
     /tmp/cc8FewPc.s:6875   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/cc8FewPc.s:6887   .rodata._ZTVN8std_msgs19MultiArrayDimensionE:00000000 $d
     /tmp/cc8FewPc.s:6899   .rodata._ZTVN8std_msgs16MultiArrayLayoutE:00000000 $d
     /tmp/cc8FewPc.s:6911   .rodata._ZTVN8std_msgs17Float32MultiArrayE:00000000 $d
     /tmp/cc8FewPc.s:6923   .rodata._ZTVN8std_msgs6HeaderE:00000000 $d
     /tmp/cc8FewPc.s:6935   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/cc8FewPc.s:6947   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:00000000 $d
     /tmp/cc8FewPc.s:6958   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/cc8FewPc.s:7129   .bss:00000da8 odom_pub
     /tmp/cc8FewPc.s:7153   .bss:00000de0 odom_msg
     /tmp/cc8FewPc.s:7133   .bss:00000dbc debug_pub
     /tmp/cc8FewPc.s:7157   .bss:00000e10 debug_msg
     /tmp/cc8FewPc.s:7125   .bss:00000d68 motor_sub
     /tmp/cc8FewPc.s:7079   .bss:00000009 waitForServos
     /tmp/cc8FewPc.s:7116   .bss:00000434 shuttingDown
     /tmp/cc8FewPc.s:7121   .bss:00000438 nh
     /tmp/cc8FewPc.s:7066   .bss:00000000 initialized
     /tmp/cc8FewPc.s:7071   .bss:00000004 lastMsg
     /tmp/cc8FewPc.s:7075   .bss:00000008 currentMode
     /tmp/cc8FewPc.s:7100   .bss:0000001c motorCmd
     /tmp/cc8FewPc.s:7084   .bss:0000000c L
     /tmp/cc8FewPc.s:7088   .bss:00000010 d
     /tmp/cc8FewPc.s:7145   .bss:00000dd8 rear_left
     /tmp/cc8FewPc.s:7149   .bss:00000ddc rear_right
     /tmp/cc8FewPc.s:7137   .bss:00000dd0 front_left
     /tmp/cc8FewPc.s:7141   .bss:00000dd4 front_right
     /tmp/cc8FewPc.s:7096   .bss:00000018 servo_right
     /tmp/cc8FewPc.s:7092   .bss:00000014 servo_left
     /tmp/cc8FewPc.s:7104   .bss:0000002c USART_CNTOUT
     /tmp/cc8FewPc.s:7108   .bss:00000030 USART_CNTIN
     /tmp/cc8FewPc.s:7112   .bss:00000034 USART_FIFO
     /tmp/cc8FewPc.s:6992   .rodata:00000000 $d
     /tmp/cc8FewPc.s:6996   .rodata:00000000 _ZN14rosserial_msgsL12REQUESTPARAME
     /tmp/cc8FewPc.s:7062   .bss:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_unwind_cpp_pr0
strlen
memcpy
realloc
__aeabi_fcmpeq
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
__aeabi_fadd
__aeabi_fmul
__aeabi_fsub
__aeabi_fdiv
__aeabi_dadd
__aeabi_fcmpgt
__aeabi_fcmplt
millis
sin
atan
USART_SendData
RCC_APB2PeriphClockCmd
GPIO_Init
USART_Cmd
USART_Init
USART_ITConfig
USART_GetITStatus
USART_ReceiveData
EXTI_GetITStatus
EXTI_ClearITPendingBit
__aeabi_unwind_cpp_pr1
RCC_APB1PeriphClockCmd
debug_toggle
delay
_ZN3ros16normalizeSecNSecERmS0_
__aeabi_f2iz
RCC_Configuration
SysTick_Init
GPIO_PinRemapConfig
I2C1_Init
DEBUG_Init
SHUTDOWN_Init
LED_Init
_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
_ZN13motorSettings12setRegulatorEfffff
_ZN5motor11createMotorEP13motorSettings
_Znaj
led_set
sqrt
cos
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
