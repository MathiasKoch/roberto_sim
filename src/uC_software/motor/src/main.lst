   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  20              		.align	1
  21              		.weak	_ZNK8std_msgs4Time9serializeEPh
  22              		.thumb
  23              		.thumb_func
  25              	_ZNK8std_msgs4Time9serializeEPh:
  26              		.fnstart
  27              	.LFB54:
  28              		.file 1 "./lib/ros_lib/std_msgs/Time.h"
   1:./lib/ros_lib/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:./lib/ros_lib/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:./lib/ros_lib/std_msgs/Time.h **** 
   4:./lib/ros_lib/std_msgs/Time.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Time.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Time.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Time.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Time.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Time.h **** 
  10:./lib/ros_lib/std_msgs/Time.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Time.h **** {
  12:./lib/ros_lib/std_msgs/Time.h **** 
  13:./lib/ros_lib/std_msgs/Time.h ****   class Time : public ros::Msg
  14:./lib/ros_lib/std_msgs/Time.h ****   {
  15:./lib/ros_lib/std_msgs/Time.h ****     public:
  16:./lib/ros_lib/std_msgs/Time.h ****       ros::Time data;
  17:./lib/ros_lib/std_msgs/Time.h **** 
  18:./lib/ros_lib/std_msgs/Time.h ****     Time():
  19:./lib/ros_lib/std_msgs/Time.h ****       data()
  20:./lib/ros_lib/std_msgs/Time.h ****     {
  21:./lib/ros_lib/std_msgs/Time.h ****     }
  22:./lib/ros_lib/std_msgs/Time.h **** 
  23:./lib/ros_lib/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  29              		.loc 1 23 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  24:./lib/ros_lib/std_msgs/Time.h ****     {
  25:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  26:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  35              		.loc 1 26 0
  36 0000 4368     		ldr	r3, [r0, #4]
  37 0002 0B70     		strb	r3, [r1]
  27:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  38              		.loc 1 27 0
  39 0004 4368     		ldr	r3, [r0, #4]
  40 0006 1B0A     		lsrs	r3, r3, #8
  41 0008 4B70     		strb	r3, [r1, #1]
  28:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  42              		.loc 1 28 0
  43 000a C388     		ldrh	r3, [r0, #6]
  44 000c 8B70     		strb	r3, [r1, #2]
  29:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  45              		.loc 1 29 0
  46 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  47 0010 CB70     		strb	r3, [r1, #3]
  48              	.LVL1:
  30:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  31:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  49              		.loc 1 31 0
  50 0012 8368     		ldr	r3, [r0, #8]
  51 0014 0B71     		strb	r3, [r1, #4]
  32:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  52              		.loc 1 32 0
  53 0016 8368     		ldr	r3, [r0, #8]
  54 0018 1B0A     		lsrs	r3, r3, #8
  55 001a 4B71     		strb	r3, [r1, #5]
  33:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  56              		.loc 1 33 0
  57 001c 4389     		ldrh	r3, [r0, #10]
  58 001e 8B71     		strb	r3, [r1, #6]
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  59              		.loc 1 34 0
  60 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  35:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  36:./lib/ros_lib/std_msgs/Time.h ****       return offset;
  37:./lib/ros_lib/std_msgs/Time.h ****     }
  61              		.loc 1 37 0
  62 0022 0820     		movs	r0, #8
  63              	.LVL2:
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  64              		.loc 1 34 0
  65 0024 CB71     		strb	r3, [r1, #7]
  66              	.LVL3:
  67              		.loc 1 37 0
  68 0026 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE54:
  71              		.cantunwind
  72              		.fnend
  74              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  75              		.align	1
  76              		.weak	_ZN8std_msgs4Time11deserializeEPh
  77              		.thumb
  78              		.thumb_func
  80              	_ZN8std_msgs4Time11deserializeEPh:
  81              		.fnstart
  82              	.LFB55:
  38:./lib/ros_lib/std_msgs/Time.h **** 
  39:./lib/ros_lib/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  83              		.loc 1 39 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL4:
  40:./lib/ros_lib/std_msgs/Time.h ****     {
  41:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  42:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  89              		.loc 1 42 0
  90 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  91 0002 4360     		str	r3, [r0, #4]
  43:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  92              		.loc 1 43 0
  93 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  94 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  95 000a 4360     		str	r3, [r0, #4]
  44:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  96              		.loc 1 44 0
  97 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  98 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  99 0012 4360     		str	r3, [r0, #4]
  45:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 100              		.loc 1 45 0
 101 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 102 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 103 001a 4360     		str	r3, [r0, #4]
 104              	.LVL5:
  46:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  47:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 105              		.loc 1 47 0
 106 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 107 001e 8360     		str	r3, [r0, #8]
  48:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 108              		.loc 1 48 0
 109 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 110 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 111 0026 8360     		str	r3, [r0, #8]
  49:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 112              		.loc 1 49 0
 113 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 114 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 115 002e 8360     		str	r3, [r0, #8]
  50:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 116              		.loc 1 50 0
 117 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 118 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 119 0036 8360     		str	r3, [r0, #8]
 120              	.LVL6:
  51:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  52:./lib/ros_lib/std_msgs/Time.h ****      return offset;
  53:./lib/ros_lib/std_msgs/Time.h ****     }
 121              		.loc 1 53 0
 122 0038 0820     		movs	r0, #8
 123              	.LVL7:
 124 003a 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE55:
 127              		.cantunwind
 128              		.fnend
 130              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 131              		.align	1
 132              		.weak	_ZN8std_msgs4Time7getTypeEv
 133              		.thumb
 134              		.thumb_func
 136              	_ZN8std_msgs4Time7getTypeEv:
 137              		.fnstart
 138              	.LFB56:
  54:./lib/ros_lib/std_msgs/Time.h **** 
  55:./lib/ros_lib/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 139              		.loc 1 55 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144              	.LVL8:
 145              		.loc 1 55 0
 146 0000 0048     		ldr	r0, .L4
 147              	.LVL9:
 148 0002 7047     		bx	lr
 149              	.L5:
 150              		.align	2
 151              	.L4:
 152 0004 00000000 		.word	.LC0
 153              		.cfi_endproc
 154              	.LFE56:
 155              		.cantunwind
 156              		.fnend
 158              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 159              		.align	1
 160              		.weak	_ZN8std_msgs4Time6getMD5Ev
 161              		.thumb
 162              		.thumb_func
 164              	_ZN8std_msgs4Time6getMD5Ev:
 165              		.fnstart
 166              	.LFB57:
  56:./lib/ros_lib/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 167              		.loc 1 56 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL10:
 173              		.loc 1 56 0
 174 0000 0048     		ldr	r0, .L7
 175              	.LVL11:
 176 0002 7047     		bx	lr
 177              	.L8:
 178              		.align	2
 179              	.L7:
 180 0004 0E000000 		.word	.LC1
 181              		.cfi_endproc
 182              	.LFE57:
 183              		.cantunwind
 184              		.fnend
 186              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 187              		.align	1
 188              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 189              		.thumb
 190              		.thumb_func
 192              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 193              		.fnstart
 194              	.LFB63:
 195              		.file 2 "./lib/ros_lib/rosserial_msgs/TopicInfo.h"
   1:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   4:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   9:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** {
  11:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  12:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   {
  14:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  29:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     TopicInfo():
  30:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_id(0),
  31:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_name(""),
  32:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       message_type(""),
  33:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       md5sum(""),
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       buffer_size(0)
  35:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  36:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  37:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  39:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  40:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  43:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  46:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  51:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  56:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  59:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
  60:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
  61:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  62:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  68:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  69:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       return offset;
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  71:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
  73:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  74:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
  77:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  78:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
  80:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  83:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
  86:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  87:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
  89:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  92:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
  95:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  96:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
  98:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 101:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 104:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 105:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 106:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
 107:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
 108:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 109:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 110:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 111:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 112:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 113:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 115:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 116:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****      return offset;
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
 118:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 119:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 196              		.loc 2 119 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL12:
 202              		.loc 2 119 0
 203 0000 0048     		ldr	r0, .L10
 204              	.LVL13:
 205 0002 7047     		bx	lr
 206              	.L11:
 207              		.align	2
 208              	.L10:
 209 0004 2F000000 		.word	.LC2
 210              		.cfi_endproc
 211              	.LFE63:
 212              		.cantunwind
 213              		.fnend
 215              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 216              		.align	1
 217              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 218              		.thumb
 219              		.thumb_func
 221              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 222              		.fnstart
 223              	.LFB64:
 120:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 224              		.loc 2 120 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL14:
 230              		.loc 2 120 0
 231 0000 0048     		ldr	r0, .L13
 232              	.LVL15:
 233 0002 7047     		bx	lr
 234              	.L14:
 235              		.align	2
 236              	.L13:
 237 0004 48000000 		.word	.LC3
 238              		.cfi_endproc
 239              	.LFE64:
 240              		.cantunwind
 241              		.fnend
 243              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 244              		.align	1
 245              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 246              		.thumb
 247              		.thumb_func
 249              	_ZN14rosserial_msgs3Log7getTypeEv:
 250              		.fnstart
 251              	.LFB70:
 252              		.file 3 "./lib/ros_lib/rosserial_msgs/Log.h"
   1:./lib/ros_lib/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:./lib/ros_lib/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:./lib/ros_lib/rosserial_msgs/Log.h **** 
   4:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/Log.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/Log.h **** 
   9:./lib/ros_lib/rosserial_msgs/Log.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/Log.h **** {
  11:./lib/ros_lib/rosserial_msgs/Log.h **** 
  12:./lib/ros_lib/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/Log.h ****   {
  14:./lib/ros_lib/rosserial_msgs/Log.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/Log.h ****       uint8_t level;
  16:./lib/ros_lib/rosserial_msgs/Log.h ****       const char* msg;
  17:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  18:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  19:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  20:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  21:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  22:./lib/ros_lib/rosserial_msgs/Log.h **** 
  23:./lib/ros_lib/rosserial_msgs/Log.h ****     Log():
  24:./lib/ros_lib/rosserial_msgs/Log.h ****       level(0),
  25:./lib/ros_lib/rosserial_msgs/Log.h ****       msg("")
  26:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  27:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  28:./lib/ros_lib/rosserial_msgs/Log.h **** 
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  31:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  33:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  36:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  38:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  39:./lib/ros_lib/rosserial_msgs/Log.h ****       return offset;
  40:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  41:./lib/ros_lib/rosserial_msgs/Log.h **** 
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
  43:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  44:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
  46:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  47:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg;
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
  49:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  50:./lib/ros_lib/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
  51:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
  52:./lib/ros_lib/rosserial_msgs/Log.h ****       }
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
  55:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  56:./lib/ros_lib/rosserial_msgs/Log.h ****      return offset;
  57:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  58:./lib/ros_lib/rosserial_msgs/Log.h **** 
  59:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 253              		.loc 3 59 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL16:
 259              		.loc 3 59 0
 260 0000 0048     		ldr	r0, .L16
 261              	.LVL17:
 262 0002 7047     		bx	lr
 263              	.L17:
 264              		.align	2
 265              	.L16:
 266 0004 69000000 		.word	.LC4
 267              		.cfi_endproc
 268              	.LFE70:
 269              		.cantunwind
 270              		.fnend
 272              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 273              		.align	1
 274              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 275              		.thumb
 276              		.thumb_func
 278              	_ZN14rosserial_msgs3Log6getMD5Ev:
 279              		.fnstart
 280              	.LFB71:
  60:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 281              		.loc 3 60 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL18:
 287              		.loc 3 60 0
 288 0000 0048     		ldr	r0, .L19
 289              	.LVL19:
 290 0002 7047     		bx	lr
 291              	.L20:
 292              		.align	2
 293              	.L19:
 294 0004 7C000000 		.word	.LC5
 295              		.cfi_endproc
 296              	.LFE71:
 297              		.cantunwind
 298              		.fnend
 300              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 301              		.align	1
 302              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 303              		.thumb
 304              		.thumb_func
 306              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 307              		.fnstart
 308              	.LFB84:
 309              		.file 4 "./lib/ros_lib/rosserial_msgs/RequestParam.h"
   1:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   4:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <string.h>
   5:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   6:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   7:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
   8:./lib/ros_lib/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
   9:./lib/ros_lib/rosserial_msgs/RequestParam.h **** {
  10:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  11:./lib/ros_lib/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  12:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  13:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  14:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  15:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  16:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       const char* name;
  17:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  18:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamRequest():
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       name("")
  20:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  21:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  22:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  24:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  25:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  28:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  30:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  31:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  33:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  35:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  36:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  37:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  39:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  42:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  45:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  46:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  48:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  49:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
  50:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  51:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  52:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   };
  53:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  54:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  55:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  56:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  57:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  58:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  59:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  60:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  61:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float st_floats;
  62:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float * floats;
  63:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  64:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* st_strings;
  65:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* * strings;
  66:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  67:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamResponse():
  68:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length(0), ints(NULL),
  69:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length(0), floats(NULL),
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length(0), strings(NULL)
  71:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  72:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  73:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  75:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  76:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  82:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  83:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
  84:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
  85:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_intsi;
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  91:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  92:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  98:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  99:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 100:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 101:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_floatsi;
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 107:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 108:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 116:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 119:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 120:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 122:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 124:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 125:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 129:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 132:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 133:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
 134:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 135:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 136:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 137:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 138:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 139:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 140:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 142:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 144:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 148:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 151:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 152:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 153:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 154:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 155:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 156:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 157:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 158:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 161:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 163:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 170:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 172:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 175:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 178:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 180:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 181:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 183:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 184:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 310              		.loc 4 184 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL20:
 316              		.loc 4 184 0
 317 0000 0048     		ldr	r0, .L22
 318              	.LVL21:
 319 0002 7047     		bx	lr
 320              	.L23:
 321              		.align	2
 322              	.L22:
 323 0004 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE84:
 326              		.cantunwind
 327              		.fnend
 329              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 330              		.align	1
 331              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 332              		.thumb
 333              		.thumb_func
 335              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 336              		.fnstart
 337              	.LFB85:
 185:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 338              		.loc 4 185 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343              	.LVL22:
 344              		.loc 4 185 0
 345 0000 0048     		ldr	r0, .L25
 346              	.LVL23:
 347 0002 7047     		bx	lr
 348              	.L26:
 349              		.align	2
 350              	.L25:
 351 0004 9D000000 		.word	.LC6
 352              		.cfi_endproc
 353              	.LFE85:
 354              		.cantunwind
 355              		.fnend
 357              		.section	.text._ZNK8std_msgs7Float329serializeEPh,"axG",%progbits,_ZNK8std_msgs7Float329serializeE
 358              		.align	1
 359              		.weak	_ZNK8std_msgs7Float329serializeEPh
 360              		.thumb
 361              		.thumb_func
 363              	_ZNK8std_msgs7Float329serializeEPh:
 364              		.fnstart
 365              	.LFB159:
 366              		.file 5 "./lib/ros_lib/std_msgs/Float32.h"
   1:./lib/ros_lib/std_msgs/Float32.h **** #ifndef _ROS_std_msgs_Float32_h
   2:./lib/ros_lib/std_msgs/Float32.h **** #define _ROS_std_msgs_Float32_h
   3:./lib/ros_lib/std_msgs/Float32.h **** 
   4:./lib/ros_lib/std_msgs/Float32.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Float32.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Float32.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Float32.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Float32.h **** 
   9:./lib/ros_lib/std_msgs/Float32.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/Float32.h **** {
  11:./lib/ros_lib/std_msgs/Float32.h **** 
  12:./lib/ros_lib/std_msgs/Float32.h ****   class Float32 : public ros::Msg
  13:./lib/ros_lib/std_msgs/Float32.h ****   {
  14:./lib/ros_lib/std_msgs/Float32.h ****     public:
  15:./lib/ros_lib/std_msgs/Float32.h ****       float data;
  16:./lib/ros_lib/std_msgs/Float32.h **** 
  17:./lib/ros_lib/std_msgs/Float32.h ****     Float32():
  18:./lib/ros_lib/std_msgs/Float32.h ****       data(0)
  19:./lib/ros_lib/std_msgs/Float32.h ****     {
  20:./lib/ros_lib/std_msgs/Float32.h ****     }
  21:./lib/ros_lib/std_msgs/Float32.h **** 
  22:./lib/ros_lib/std_msgs/Float32.h ****     virtual int serialize(unsigned char *outbuffer) const
 367              		.loc 5 22 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372              	.LVL24:
  23:./lib/ros_lib/std_msgs/Float32.h ****     {
  24:./lib/ros_lib/std_msgs/Float32.h ****       int offset = 0;
  25:./lib/ros_lib/std_msgs/Float32.h ****       union {
  26:./lib/ros_lib/std_msgs/Float32.h ****         float real;
  27:./lib/ros_lib/std_msgs/Float32.h ****         uint32_t base;
  28:./lib/ros_lib/std_msgs/Float32.h ****       } u_data;
  29:./lib/ros_lib/std_msgs/Float32.h ****       u_data.real = this->data;
  30:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 0) = (u_data.base >> (8 * 0)) & 0xFF;
 373              		.loc 5 30 0
 374 0000 4368     		ldr	r3, [r0, #4]
  31:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 1) = (u_data.base >> (8 * 1)) & 0xFF;
  32:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 2) = (u_data.base >> (8 * 2)) & 0xFF;
  33:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 3) = (u_data.base >> (8 * 3)) & 0xFF;
  34:./lib/ros_lib/std_msgs/Float32.h ****       offset += sizeof(this->data);
  35:./lib/ros_lib/std_msgs/Float32.h ****       return offset;
  36:./lib/ros_lib/std_msgs/Float32.h ****     }
 375              		.loc 5 36 0
 376 0002 0420     		movs	r0, #4
 377              	.LVL25:
  31:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 1) = (u_data.base >> (8 * 1)) & 0xFF;
 378              		.loc 5 31 0
 379 0004 1A0A     		lsrs	r2, r3, #8
  30:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 1) = (u_data.base >> (8 * 1)) & 0xFF;
 380              		.loc 5 30 0
 381 0006 0B70     		strb	r3, [r1]
 382              	.LVL26:
  31:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 1) = (u_data.base >> (8 * 1)) & 0xFF;
 383              		.loc 5 31 0
 384 0008 4A70     		strb	r2, [r1, #1]
  32:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 3) = (u_data.base >> (8 * 3)) & 0xFF;
 385              		.loc 5 32 0
 386 000a 1A0C     		lsrs	r2, r3, #16
  33:./lib/ros_lib/std_msgs/Float32.h ****       offset += sizeof(this->data);
 387              		.loc 5 33 0
 388 000c 1B0E     		lsrs	r3, r3, #24
  32:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 3) = (u_data.base >> (8 * 3)) & 0xFF;
 389              		.loc 5 32 0
 390 000e 8A70     		strb	r2, [r1, #2]
  33:./lib/ros_lib/std_msgs/Float32.h ****       offset += sizeof(this->data);
 391              		.loc 5 33 0
 392 0010 CB70     		strb	r3, [r1, #3]
 393              	.LVL27:
 394              		.loc 5 36 0
 395 0012 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE159:
 398              		.cantunwind
 399              		.fnend
 401              		.section	.text._ZN8std_msgs7Float3211deserializeEPh,"axG",%progbits,_ZN8std_msgs7Float3211deserial
 402              		.align	1
 403              		.weak	_ZN8std_msgs7Float3211deserializeEPh
 404              		.thumb
 405              		.thumb_func
 407              	_ZN8std_msgs7Float3211deserializeEPh:
 408              		.fnstart
 409              	.LFB160:
  37:./lib/ros_lib/std_msgs/Float32.h **** 
  38:./lib/ros_lib/std_msgs/Float32.h ****     virtual int deserialize(unsigned char *inbuffer)
 410              		.loc 5 38 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 415              	.LVL28:
  39:./lib/ros_lib/std_msgs/Float32.h ****     {
  40:./lib/ros_lib/std_msgs/Float32.h ****       int offset = 0;
  41:./lib/ros_lib/std_msgs/Float32.h ****       union {
  42:./lib/ros_lib/std_msgs/Float32.h ****         float real;
  43:./lib/ros_lib/std_msgs/Float32.h ****         uint32_t base;
  44:./lib/ros_lib/std_msgs/Float32.h ****       } u_data;
  45:./lib/ros_lib/std_msgs/Float32.h ****       u_data.base = 0;
  46:./lib/ros_lib/std_msgs/Float32.h ****       u_data.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
  47:./lib/ros_lib/std_msgs/Float32.h ****       u_data.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  48:./lib/ros_lib/std_msgs/Float32.h ****       u_data.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  49:./lib/ros_lib/std_msgs/Float32.h ****       u_data.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  50:./lib/ros_lib/std_msgs/Float32.h ****       this->data = u_data.real;
 416              		.loc 5 50 0
 417 0000 0B68     		ldr	r3, [r1]	@ unaligned
 418 0002 4360     		str	r3, [r0, #4]	@ float
 419              	.LVL29:
  51:./lib/ros_lib/std_msgs/Float32.h ****       offset += sizeof(this->data);
  52:./lib/ros_lib/std_msgs/Float32.h ****      return offset;
  53:./lib/ros_lib/std_msgs/Float32.h ****     }
 420              		.loc 5 53 0
 421 0004 0420     		movs	r0, #4
 422              	.LVL30:
 423 0006 7047     		bx	lr
 424              		.cfi_endproc
 425              	.LFE160:
 426              		.cantunwind
 427              		.fnend
 429              		.section	.text._ZN8std_msgs7Float327getTypeEv,"axG",%progbits,_ZN8std_msgs7Float327getTypeEv,comda
 430              		.align	1
 431              		.weak	_ZN8std_msgs7Float327getTypeEv
 432              		.thumb
 433              		.thumb_func
 435              	_ZN8std_msgs7Float327getTypeEv:
 436              		.fnstart
 437              	.LFB161:
  54:./lib/ros_lib/std_msgs/Float32.h **** 
  55:./lib/ros_lib/std_msgs/Float32.h ****     const char * getType(){ return "std_msgs/Float32"; };
 438              		.loc 5 55 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 443              	.LVL31:
 444              		.loc 5 55 0
 445 0000 0048     		ldr	r0, .L30
 446              	.LVL32:
 447 0002 7047     		bx	lr
 448              	.L31:
 449              		.align	2
 450              	.L30:
 451 0004 BE000000 		.word	.LC7
 452              		.cfi_endproc
 453              	.LFE161:
 454              		.cantunwind
 455              		.fnend
 457              		.section	.text._ZN8std_msgs7Float326getMD5Ev,"axG",%progbits,_ZN8std_msgs7Float326getMD5Ev,comdat
 458              		.align	1
 459              		.weak	_ZN8std_msgs7Float326getMD5Ev
 460              		.thumb
 461              		.thumb_func
 463              	_ZN8std_msgs7Float326getMD5Ev:
 464              		.fnstart
 465              	.LFB162:
  56:./lib/ros_lib/std_msgs/Float32.h ****     const char * getMD5(){ return "73fcbf46b49191e672908e50842a83d4"; };
 466              		.loc 5 56 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471              	.LVL33:
 472              		.loc 5 56 0
 473 0000 0048     		ldr	r0, .L33
 474              	.LVL34:
 475 0002 7047     		bx	lr
 476              	.L34:
 477              		.align	2
 478              	.L33:
 479 0004 CF000000 		.word	.LC8
 480              		.cfi_endproc
 481              	.LFE162:
 482              		.cantunwind
 483              		.fnend
 485              		.section	.text._ZNK8std_msgs5UInt89serializeEPh,"axG",%progbits,_ZNK8std_msgs5UInt89serializeEPh,c
 486              		.align	1
 487              		.weak	_ZNK8std_msgs5UInt89serializeEPh
 488              		.thumb
 489              		.thumb_func
 491              	_ZNK8std_msgs5UInt89serializeEPh:
 492              		.fnstart
 493              	.LFB166:
 494              		.file 6 "./lib/ros_lib/std_msgs/UInt8.h"
   1:./lib/ros_lib/std_msgs/UInt8.h **** #ifndef _ROS_std_msgs_UInt8_h
   2:./lib/ros_lib/std_msgs/UInt8.h **** #define _ROS_std_msgs_UInt8_h
   3:./lib/ros_lib/std_msgs/UInt8.h **** 
   4:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/UInt8.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/UInt8.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/UInt8.h **** 
   9:./lib/ros_lib/std_msgs/UInt8.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/UInt8.h **** {
  11:./lib/ros_lib/std_msgs/UInt8.h **** 
  12:./lib/ros_lib/std_msgs/UInt8.h ****   class UInt8 : public ros::Msg
  13:./lib/ros_lib/std_msgs/UInt8.h ****   {
  14:./lib/ros_lib/std_msgs/UInt8.h ****     public:
  15:./lib/ros_lib/std_msgs/UInt8.h ****       uint8_t data;
  16:./lib/ros_lib/std_msgs/UInt8.h **** 
  17:./lib/ros_lib/std_msgs/UInt8.h ****     UInt8():
  18:./lib/ros_lib/std_msgs/UInt8.h ****       data(0)
  19:./lib/ros_lib/std_msgs/UInt8.h ****     {
  20:./lib/ros_lib/std_msgs/UInt8.h ****     }
  21:./lib/ros_lib/std_msgs/UInt8.h **** 
  22:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int serialize(unsigned char *outbuffer) const
 495              		.loc 6 22 0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499              		@ link register save eliminated.
 500              	.LVL35:
  23:./lib/ros_lib/std_msgs/UInt8.h ****     {
  24:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  25:./lib/ros_lib/std_msgs/UInt8.h ****       *(outbuffer + offset + 0) = (this->data >> (8 * 0)) & 0xFF;
 501              		.loc 6 25 0
 502 0000 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  26:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  27:./lib/ros_lib/std_msgs/UInt8.h ****       return offset;
  28:./lib/ros_lib/std_msgs/UInt8.h ****     }
 503              		.loc 6 28 0
 504 0002 0120     		movs	r0, #1
 505              	.LVL36:
  25:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 506              		.loc 6 25 0
 507 0004 0B70     		strb	r3, [r1]
 508              	.LVL37:
 509              		.loc 6 28 0
 510 0006 7047     		bx	lr
 511              		.cfi_endproc
 512              	.LFE166:
 513              		.cantunwind
 514              		.fnend
 516              		.section	.text._ZN8std_msgs5UInt811deserializeEPh,"axG",%progbits,_ZN8std_msgs5UInt811deserializeE
 517              		.align	1
 518              		.weak	_ZN8std_msgs5UInt811deserializeEPh
 519              		.thumb
 520              		.thumb_func
 522              	_ZN8std_msgs5UInt811deserializeEPh:
 523              		.fnstart
 524              	.LFB167:
  29:./lib/ros_lib/std_msgs/UInt8.h **** 
  30:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int deserialize(unsigned char *inbuffer)
 525              		.loc 6 30 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529              		@ link register save eliminated.
 530              	.LVL38:
  31:./lib/ros_lib/std_msgs/UInt8.h ****     {
  32:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  33:./lib/ros_lib/std_msgs/UInt8.h ****       this->data =  ((uint8_t) (*(inbuffer + offset)));
 531              		.loc 6 33 0
 532 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 533 0002 0371     		strb	r3, [r0, #4]
 534              	.LVL39:
  34:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  35:./lib/ros_lib/std_msgs/UInt8.h ****      return offset;
  36:./lib/ros_lib/std_msgs/UInt8.h ****     }
 535              		.loc 6 36 0
 536 0004 0120     		movs	r0, #1
 537              	.LVL40:
 538 0006 7047     		bx	lr
 539              		.cfi_endproc
 540              	.LFE167:
 541              		.cantunwind
 542              		.fnend
 544              		.section	.text._ZN8std_msgs5UInt87getTypeEv,"axG",%progbits,_ZN8std_msgs5UInt87getTypeEv,comdat
 545              		.align	1
 546              		.weak	_ZN8std_msgs5UInt87getTypeEv
 547              		.thumb
 548              		.thumb_func
 550              	_ZN8std_msgs5UInt87getTypeEv:
 551              		.fnstart
 552              	.LFB168:
  37:./lib/ros_lib/std_msgs/UInt8.h **** 
  38:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getType(){ return "std_msgs/UInt8"; };
 553              		.loc 6 38 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              		@ link register save eliminated.
 558              	.LVL41:
 559              		.loc 6 38 0
 560 0000 0048     		ldr	r0, .L38
 561              	.LVL42:
 562 0002 7047     		bx	lr
 563              	.L39:
 564              		.align	2
 565              	.L38:
 566 0004 F0000000 		.word	.LC9
 567              		.cfi_endproc
 568              	.LFE168:
 569              		.cantunwind
 570              		.fnend
 572              		.section	.text._ZN8std_msgs5UInt86getMD5Ev,"axG",%progbits,_ZN8std_msgs5UInt86getMD5Ev,comdat
 573              		.align	1
 574              		.weak	_ZN8std_msgs5UInt86getMD5Ev
 575              		.thumb
 576              		.thumb_func
 578              	_ZN8std_msgs5UInt86getMD5Ev:
 579              		.fnstart
 580              	.LFB169:
  39:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getMD5(){ return "7c8164229e7d2c17eb95e9231617fdee"; };
 581              		.loc 6 39 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586              	.LVL43:
 587              		.loc 6 39 0
 588 0000 0048     		ldr	r0, .L41
 589              	.LVL44:
 590 0002 7047     		bx	lr
 591              	.L42:
 592              		.align	2
 593              	.L41:
 594 0004 FF000000 		.word	.LC10
 595              		.cfi_endproc
 596              	.LFE169:
 597              		.cantunwind
 598              		.fnend
 600              		.section	.text._ZN8std_msgs6Header7getTypeEv,"axG",%progbits,_ZN8std_msgs6Header7getTypeEv,comdat
 601              		.align	1
 602              		.weak	_ZN8std_msgs6Header7getTypeEv
 603              		.thumb
 604              		.thumb_func
 606              	_ZN8std_msgs6Header7getTypeEv:
 607              		.fnstart
 608              	.LFB175:
 609              		.file 7 "./lib/ros_lib/std_msgs/Header.h"
   1:./lib/ros_lib/std_msgs/Header.h **** #ifndef _ROS_std_msgs_Header_h
   2:./lib/ros_lib/std_msgs/Header.h **** #define _ROS_std_msgs_Header_h
   3:./lib/ros_lib/std_msgs/Header.h **** 
   4:./lib/ros_lib/std_msgs/Header.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Header.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Header.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Header.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Header.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Header.h **** 
  10:./lib/ros_lib/std_msgs/Header.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Header.h **** {
  12:./lib/ros_lib/std_msgs/Header.h **** 
  13:./lib/ros_lib/std_msgs/Header.h ****   class Header : public ros::Msg
  14:./lib/ros_lib/std_msgs/Header.h ****   {
  15:./lib/ros_lib/std_msgs/Header.h ****     public:
  16:./lib/ros_lib/std_msgs/Header.h ****       uint32_t seq;
  17:./lib/ros_lib/std_msgs/Header.h ****       ros::Time stamp;
  18:./lib/ros_lib/std_msgs/Header.h ****       const char* frame_id;
  19:./lib/ros_lib/std_msgs/Header.h **** 
  20:./lib/ros_lib/std_msgs/Header.h ****     Header():
  21:./lib/ros_lib/std_msgs/Header.h ****       seq(0),
  22:./lib/ros_lib/std_msgs/Header.h ****       stamp(),
  23:./lib/ros_lib/std_msgs/Header.h ****       frame_id("")
  24:./lib/ros_lib/std_msgs/Header.h ****     {
  25:./lib/ros_lib/std_msgs/Header.h ****     }
  26:./lib/ros_lib/std_msgs/Header.h **** 
  27:./lib/ros_lib/std_msgs/Header.h ****     virtual int serialize(unsigned char *outbuffer) const
  28:./lib/ros_lib/std_msgs/Header.h ****     {
  29:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->seq >> (8 * 0)) & 0xFF;
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
  33:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
  34:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
  38:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
  39:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
  43:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
  44:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  45:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id = strlen(this->frame_id);
  46:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
  47:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  48:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, this->frame_id, length_frame_id);
  49:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  50:./lib/ros_lib/std_msgs/Header.h ****       return offset;
  51:./lib/ros_lib/std_msgs/Header.h ****     }
  52:./lib/ros_lib/std_msgs/Header.h **** 
  53:./lib/ros_lib/std_msgs/Header.h ****     virtual int deserialize(unsigned char *inbuffer)
  54:./lib/ros_lib/std_msgs/Header.h ****     {
  55:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq =  ((uint32_t) (*(inbuffer + offset)));
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  59:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  60:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  64:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  65:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  69:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  70:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  71:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id;
  72:./lib/ros_lib/std_msgs/Header.h ****       memcpy(&length_frame_id, (inbuffer + offset), sizeof(uint32_t));
  73:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  74:./lib/ros_lib/std_msgs/Header.h ****       for(unsigned int k= offset; k< offset+length_frame_id; ++k){
  75:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
  76:./lib/ros_lib/std_msgs/Header.h ****       }
  77:./lib/ros_lib/std_msgs/Header.h ****       inbuffer[offset+length_frame_id-1]=0;
  78:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
  79:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  80:./lib/ros_lib/std_msgs/Header.h ****      return offset;
  81:./lib/ros_lib/std_msgs/Header.h ****     }
  82:./lib/ros_lib/std_msgs/Header.h **** 
  83:./lib/ros_lib/std_msgs/Header.h ****     const char * getType(){ return "std_msgs/Header"; };
 610              		.loc 7 83 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 0
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614              		@ link register save eliminated.
 615              	.LVL45:
 616              		.loc 7 83 0
 617 0000 0048     		ldr	r0, .L44
 618              	.LVL46:
 619 0002 7047     		bx	lr
 620              	.L45:
 621              		.align	2
 622              	.L44:
 623 0004 20010000 		.word	.LC11
 624              		.cfi_endproc
 625              	.LFE175:
 626              		.cantunwind
 627              		.fnend
 629              		.section	.text._ZN8std_msgs6Header6getMD5Ev,"axG",%progbits,_ZN8std_msgs6Header6getMD5Ev,comdat
 630              		.align	1
 631              		.weak	_ZN8std_msgs6Header6getMD5Ev
 632              		.thumb
 633              		.thumb_func
 635              	_ZN8std_msgs6Header6getMD5Ev:
 636              		.fnstart
 637              	.LFB176:
  84:./lib/ros_lib/std_msgs/Header.h ****     const char * getMD5(){ return "2176decaecbce78abc3b96ef049fabed"; };
 638              		.loc 7 84 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              		@ link register save eliminated.
 643              	.LVL47:
 644              		.loc 7 84 0
 645 0000 0048     		ldr	r0, .L47
 646              	.LVL48:
 647 0002 7047     		bx	lr
 648              	.L48:
 649              		.align	2
 650              	.L47:
 651 0004 30010000 		.word	.LC12
 652              		.cfi_endproc
 653              	.LFE176:
 654              		.cantunwind
 655              		.fnend
 657              		.section	.text._ZN11sensor_msgs3Joy7getTypeEv,"axG",%progbits,_ZN11sensor_msgs3Joy7getTypeEv,comda
 658              		.align	1
 659              		.weak	_ZN11sensor_msgs3Joy7getTypeEv
 660              		.thumb
 661              		.thumb_func
 663              	_ZN11sensor_msgs3Joy7getTypeEv:
 664              		.fnstart
 665              	.LFB182:
 666              		.file 8 "./lib/ros_lib/sensor_msgs/Joy.h"
   1:./lib/ros_lib/sensor_msgs/Joy.h **** #ifndef _ROS_sensor_msgs_Joy_h
   2:./lib/ros_lib/sensor_msgs/Joy.h **** #define _ROS_sensor_msgs_Joy_h
   3:./lib/ros_lib/sensor_msgs/Joy.h **** 
   4:./lib/ros_lib/sensor_msgs/Joy.h **** #include <stdint.h>
   5:./lib/ros_lib/sensor_msgs/Joy.h **** #include <string.h>
   6:./lib/ros_lib/sensor_msgs/Joy.h **** #include <stdlib.h>
   7:./lib/ros_lib/sensor_msgs/Joy.h **** #include "ros/msg.h"
   8:./lib/ros_lib/sensor_msgs/Joy.h **** #include "std_msgs/Header.h"
   9:./lib/ros_lib/sensor_msgs/Joy.h **** 
  10:./lib/ros_lib/sensor_msgs/Joy.h **** namespace sensor_msgs
  11:./lib/ros_lib/sensor_msgs/Joy.h **** {
  12:./lib/ros_lib/sensor_msgs/Joy.h **** 
  13:./lib/ros_lib/sensor_msgs/Joy.h ****   class Joy : public ros::Msg
  14:./lib/ros_lib/sensor_msgs/Joy.h ****   {
  15:./lib/ros_lib/sensor_msgs/Joy.h ****     public:
  16:./lib/ros_lib/sensor_msgs/Joy.h ****       std_msgs::Header header;
  17:./lib/ros_lib/sensor_msgs/Joy.h ****       uint8_t axes_length;
  18:./lib/ros_lib/sensor_msgs/Joy.h ****       float st_axes;
  19:./lib/ros_lib/sensor_msgs/Joy.h ****       float * axes;
  20:./lib/ros_lib/sensor_msgs/Joy.h ****       uint8_t buttons_length;
  21:./lib/ros_lib/sensor_msgs/Joy.h ****       int32_t st_buttons;
  22:./lib/ros_lib/sensor_msgs/Joy.h ****       int32_t * buttons;
  23:./lib/ros_lib/sensor_msgs/Joy.h **** 
  24:./lib/ros_lib/sensor_msgs/Joy.h ****     Joy():
  25:./lib/ros_lib/sensor_msgs/Joy.h ****       header(),
  26:./lib/ros_lib/sensor_msgs/Joy.h ****       axes_length(0), axes(NULL),
  27:./lib/ros_lib/sensor_msgs/Joy.h ****       buttons_length(0), buttons(NULL)
  28:./lib/ros_lib/sensor_msgs/Joy.h ****     {
  29:./lib/ros_lib/sensor_msgs/Joy.h ****     }
  30:./lib/ros_lib/sensor_msgs/Joy.h **** 
  31:./lib/ros_lib/sensor_msgs/Joy.h ****     virtual int serialize(unsigned char *outbuffer) const
  32:./lib/ros_lib/sensor_msgs/Joy.h ****     {
  33:./lib/ros_lib/sensor_msgs/Joy.h ****       int offset = 0;
  34:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += this->header.serialize(outbuffer + offset);
  35:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = axes_length;
  36:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
  37:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
  38:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
  39:./lib/ros_lib/sensor_msgs/Joy.h ****       for( uint8_t i = 0; i < axes_length; i++){
  40:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
  41:./lib/ros_lib/sensor_msgs/Joy.h ****         float real;
  42:./lib/ros_lib/sensor_msgs/Joy.h ****         uint32_t base;
  43:./lib/ros_lib/sensor_msgs/Joy.h ****       } u_axesi;
  44:./lib/ros_lib/sensor_msgs/Joy.h ****       u_axesi.real = this->axes[i];
  45:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 0) = (u_axesi.base >> (8 * 0)) & 0xFF;
  46:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 1) = (u_axesi.base >> (8 * 1)) & 0xFF;
  47:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 2) = (u_axesi.base >> (8 * 2)) & 0xFF;
  48:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 3) = (u_axesi.base >> (8 * 3)) & 0xFF;
  49:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->axes[i]);
  50:./lib/ros_lib/sensor_msgs/Joy.h ****       }
  51:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = buttons_length;
  52:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
  53:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
  54:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
  55:./lib/ros_lib/sensor_msgs/Joy.h ****       for( uint8_t i = 0; i < buttons_length; i++){
  56:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
  57:./lib/ros_lib/sensor_msgs/Joy.h ****         int32_t real;
  58:./lib/ros_lib/sensor_msgs/Joy.h ****         uint32_t base;
  59:./lib/ros_lib/sensor_msgs/Joy.h ****       } u_buttonsi;
  60:./lib/ros_lib/sensor_msgs/Joy.h ****       u_buttonsi.real = this->buttons[i];
  61:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 0) = (u_buttonsi.base >> (8 * 0)) & 0xFF;
  62:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 1) = (u_buttonsi.base >> (8 * 1)) & 0xFF;
  63:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 2) = (u_buttonsi.base >> (8 * 2)) & 0xFF;
  64:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 3) = (u_buttonsi.base >> (8 * 3)) & 0xFF;
  65:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->buttons[i]);
  66:./lib/ros_lib/sensor_msgs/Joy.h ****       }
  67:./lib/ros_lib/sensor_msgs/Joy.h ****       return offset;
  68:./lib/ros_lib/sensor_msgs/Joy.h ****     }
  69:./lib/ros_lib/sensor_msgs/Joy.h **** 
  70:./lib/ros_lib/sensor_msgs/Joy.h ****     virtual int deserialize(unsigned char *inbuffer)
  71:./lib/ros_lib/sensor_msgs/Joy.h ****     {
  72:./lib/ros_lib/sensor_msgs/Joy.h ****       int offset = 0;
  73:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += this->header.deserialize(inbuffer + offset);
  74:./lib/ros_lib/sensor_msgs/Joy.h ****       uint8_t axes_lengthT = *(inbuffer + offset++);
  75:./lib/ros_lib/sensor_msgs/Joy.h ****       if(axes_lengthT > axes_length)
  76:./lib/ros_lib/sensor_msgs/Joy.h ****         this->axes = (float*)realloc(this->axes, axes_lengthT * sizeof(float));
  77:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += 3;
  78:./lib/ros_lib/sensor_msgs/Joy.h ****       axes_length = axes_lengthT;
  79:./lib/ros_lib/sensor_msgs/Joy.h ****       for( uint8_t i = 0; i < axes_length; i++){
  80:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
  81:./lib/ros_lib/sensor_msgs/Joy.h ****         float real;
  82:./lib/ros_lib/sensor_msgs/Joy.h ****         uint32_t base;
  83:./lib/ros_lib/sensor_msgs/Joy.h ****       } u_st_axes;
  84:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_axes.base = 0;
  85:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_axes.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
  86:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_axes.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  87:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_axes.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  88:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_axes.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  89:./lib/ros_lib/sensor_msgs/Joy.h ****       this->st_axes = u_st_axes.real;
  90:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->st_axes);
  91:./lib/ros_lib/sensor_msgs/Joy.h ****         memcpy( &(this->axes[i]), &(this->st_axes), sizeof(float));
  92:./lib/ros_lib/sensor_msgs/Joy.h ****       }
  93:./lib/ros_lib/sensor_msgs/Joy.h ****       uint8_t buttons_lengthT = *(inbuffer + offset++);
  94:./lib/ros_lib/sensor_msgs/Joy.h ****       if(buttons_lengthT > buttons_length)
  95:./lib/ros_lib/sensor_msgs/Joy.h ****         this->buttons = (int32_t*)realloc(this->buttons, buttons_lengthT * sizeof(int32_t));
  96:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += 3;
  97:./lib/ros_lib/sensor_msgs/Joy.h ****       buttons_length = buttons_lengthT;
  98:./lib/ros_lib/sensor_msgs/Joy.h ****       for( uint8_t i = 0; i < buttons_length; i++){
  99:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 100:./lib/ros_lib/sensor_msgs/Joy.h ****         int32_t real;
 101:./lib/ros_lib/sensor_msgs/Joy.h ****         uint32_t base;
 102:./lib/ros_lib/sensor_msgs/Joy.h ****       } u_st_buttons;
 103:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_buttons.base = 0;
 104:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_buttons.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 105:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_buttons.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 106:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_buttons.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 107:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_buttons.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 108:./lib/ros_lib/sensor_msgs/Joy.h ****       this->st_buttons = u_st_buttons.real;
 109:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->st_buttons);
 110:./lib/ros_lib/sensor_msgs/Joy.h ****         memcpy( &(this->buttons[i]), &(this->st_buttons), sizeof(int32_t));
 111:./lib/ros_lib/sensor_msgs/Joy.h ****       }
 112:./lib/ros_lib/sensor_msgs/Joy.h ****      return offset;
 113:./lib/ros_lib/sensor_msgs/Joy.h ****     }
 114:./lib/ros_lib/sensor_msgs/Joy.h **** 
 115:./lib/ros_lib/sensor_msgs/Joy.h ****     const char * getType(){ return "sensor_msgs/Joy"; };
 667              		.loc 8 115 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671              		@ link register save eliminated.
 672              	.LVL49:
 673              		.loc 8 115 0
 674 0000 0048     		ldr	r0, .L50
 675              	.LVL50:
 676 0002 7047     		bx	lr
 677              	.L51:
 678              		.align	2
 679              	.L50:
 680 0004 51010000 		.word	.LC13
 681              		.cfi_endproc
 682              	.LFE182:
 683              		.cantunwind
 684              		.fnend
 686              		.section	.text._ZN11sensor_msgs3Joy6getMD5Ev,"axG",%progbits,_ZN11sensor_msgs3Joy6getMD5Ev,comdat
 687              		.align	1
 688              		.weak	_ZN11sensor_msgs3Joy6getMD5Ev
 689              		.thumb
 690              		.thumb_func
 692              	_ZN11sensor_msgs3Joy6getMD5Ev:
 693              		.fnstart
 694              	.LFB183:
 116:./lib/ros_lib/sensor_msgs/Joy.h ****     const char * getMD5(){ return "5a9ea5f83505693b71e785041e67a8bb"; };
 695              		.loc 8 116 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 700              	.LVL51:
 701              		.loc 8 116 0
 702 0000 0048     		ldr	r0, .L53
 703              	.LVL52:
 704 0002 7047     		bx	lr
 705              	.L54:
 706              		.align	2
 707              	.L53:
 708 0004 61010000 		.word	.LC14
 709              		.cfi_endproc
 710              	.LFE183:
 711              		.cantunwind
 712              		.fnend
 714              		.global	__aeabi_fadd
 715              		.text
 716              		.align	1
 717              		.global	_Z8motor_cbRKN11sensor_msgs3JoyE
 718              		.thumb
 719              		.thumb_func
 721              	_Z8motor_cbRKN11sensor_msgs3JoyE:
 722              		.fnstart
 723              	.LFB192:
 724              		.file 9 "src/main.cpp"
   1:src/main.cpp  **** #include <stm32f10x.h>
   2:src/main.cpp  **** 
   3:src/main.cpp  **** #include <stdio.h>
   4:src/main.cpp  **** 
   5:src/main.cpp  **** #include "motor.h"
   6:src/main.cpp  **** #include "motorSettings.h"
   7:src/main.cpp  **** #include "led.h"
   8:src/main.cpp  **** #include "encoder.h"
   9:src/main.cpp  **** #include "stm32_time.h"
  10:src/main.cpp  **** 
  11:src/main.cpp  **** 
  12:src/main.cpp  **** #include <ros.h>
  13:src/main.cpp  **** #include <std_msgs/String.h>
  14:src/main.cpp  **** #include <std_msgs/Float32.h>
  15:src/main.cpp  **** #include <std_msgs/UInt8.h>
  16:src/main.cpp  **** #include <sensor_msgs/Joy.h>
  17:src/main.cpp  **** #include <roberto_msgs/MotorState.h>
  18:src/main.cpp  **** 
  19:src/main.cpp  **** 
  20:src/main.cpp  **** 
  21:src/main.cpp  **** /* Private function prototypes -----------------------------------------------*/
  22:src/main.cpp  **** 
  23:src/main.cpp  **** 
  24:src/main.cpp  **** __IO uint8_t Rx_Idx = 0x00;
  25:src/main.cpp  **** uint8_t slaveAddress;
  26:src/main.cpp  **** uint8_t RxBuffer [RXBUFFERSIZE] = {0};
  27:src/main.cpp  **** __IO uint8_t NumberOfByteToReceive = 0x00;
  28:src/main.cpp  **** __IO uint8_t GenerateStartStatus = 0x00;
  29:src/main.cpp  **** 
  30:src/main.cpp  **** motor *servo_left;
  31:src/main.cpp  **** motor *servo_right;
  32:src/main.cpp  **** motor *front_right;
  33:src/main.cpp  **** motor *front_left;
  34:src/main.cpp  **** motor *rear_right;
  35:src/main.cpp  **** motor *rear_left;
  36:src/main.cpp  **** 
  37:src/main.cpp  **** 
  38:src/main.cpp  **** ros::NodeHandle nh;
  39:src/main.cpp  **** 
  40:src/main.cpp  **** void led_cb( const std_msgs::UInt8& cmd_msg){
  41:src/main.cpp  ****   led_set(cmd_msg.data);
  42:src/main.cpp  **** }
  43:src/main.cpp  **** 
  44:src/main.cpp  **** 
  45:src/main.cpp  **** 
  46:src/main.cpp  **** void motor_cb( const sensor_msgs::Joy& cmd_msg){
 725              		.loc 9 46 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              	.LVL53:
  47:src/main.cpp  ****   front_right->setReference(cmd_msg.axes[1]*2);
 730              		.loc 9 47 0
 731 0000 036A     		ldr	r3, [r0, #32]
  46:src/main.cpp  ****   front_right->setReference(cmd_msg.axes[1]*2);
 732              		.loc 9 46 0
 733 0002 70B5     		push	{r4, r5, r6, lr}
 734              		.save {r4, r5, r6, lr}
 735              	.LCFI0:
 736              		.cfi_def_cfa_offset 16
 737              		.cfi_offset 4, -16
 738              		.cfi_offset 5, -12
 739              		.cfi_offset 6, -8
 740              		.cfi_offset 14, -4
 741              		.loc 9 47 0
 742 0004 5968     		ldr	r1, [r3, #4]	@ float
  46:src/main.cpp  ****   front_right->setReference(cmd_msg.axes[1]*2);
 743              		.loc 9 46 0
 744 0006 0446     		mov	r4, r0
 745              		.loc 9 47 0
 746 0008 0846     		mov	r0, r1
 747              	.LVL54:
 748 000a FFF7FEFF 		bl	__aeabi_fadd
 749              	.LVL55:
 750 000e 154D     		ldr	r5, .L56
 751 0010 0146     		mov	r1, r0
 752 0012 2E68     		ldr	r6, [r5]
 753 0014 3368     		ldr	r3, [r6]
 754 0016 3046     		mov	r0, r6
 755 0018 5B69     		ldr	r3, [r3, #20]
 756 001a 9847     		blx	r3
 757              	.LVL56:
  48:src/main.cpp  ****   front_left->setReference(cmd_msg.axes[1]*2);
 758              		.loc 9 48 0
 759 001c 236A     		ldr	r3, [r4, #32]
 760 001e 6E68     		ldr	r6, [r5, #4]
 761 0020 5968     		ldr	r1, [r3, #4]	@ float
 762 0022 0846     		mov	r0, r1
 763 0024 FFF7FEFF 		bl	__aeabi_fadd
 764              	.LVL57:
 765 0028 3368     		ldr	r3, [r6]
 766 002a 0146     		mov	r1, r0
 767 002c 5B69     		ldr	r3, [r3, #20]
 768 002e 3046     		mov	r0, r6
 769 0030 9847     		blx	r3
 770              	.LVL58:
  49:src/main.cpp  ****   rear_right->setReference(cmd_msg.axes[1]*2);
 771              		.loc 9 49 0
 772 0032 236A     		ldr	r3, [r4, #32]
 773 0034 AE68     		ldr	r6, [r5, #8]
 774 0036 5968     		ldr	r1, [r3, #4]	@ float
 775 0038 0846     		mov	r0, r1
 776 003a FFF7FEFF 		bl	__aeabi_fadd
 777              	.LVL59:
 778 003e 3368     		ldr	r3, [r6]
 779 0040 0146     		mov	r1, r0
 780 0042 5B69     		ldr	r3, [r3, #20]
 781 0044 3046     		mov	r0, r6
 782 0046 9847     		blx	r3
 783              	.LVL60:
  50:src/main.cpp  ****   rear_left->setReference(cmd_msg.axes[1]*2);
 784              		.loc 9 50 0
 785 0048 236A     		ldr	r3, [r4, #32]
 786 004a ED68     		ldr	r5, [r5, #12]
 787 004c 5968     		ldr	r1, [r3, #4]	@ float
 788 004e 0846     		mov	r0, r1
 789 0050 FFF7FEFF 		bl	__aeabi_fadd
 790              	.LVL61:
 791 0054 2B68     		ldr	r3, [r5]
 792 0056 0146     		mov	r1, r0
 793 0058 5B69     		ldr	r3, [r3, #20]
 794 005a 2846     		mov	r0, r5
  51:src/main.cpp  **** }
 795              		.loc 9 51 0
 796 005c BDE87040 		pop	{r4, r5, r6, lr}
 797              	.LCFI1:
 798              		.cfi_restore 14
 799              		.cfi_restore 6
 800              		.cfi_restore 5
 801              		.cfi_restore 4
 802              		.cfi_def_cfa_offset 0
 803              	.LVL62:
  50:src/main.cpp  ****   rear_left->setReference(cmd_msg.axes[1]*2);
 804              		.loc 9 50 0
 805 0060 1847     		bx	r3	@ indirect register sibling call
 806              	.LVL63:
 807              	.L57:
 808 0062 00BF     		.align	2
 809              	.L56:
 810 0064 00000000 		.word	.LANCHOR1
 811              		.cfi_endproc
 812              	.LFE192:
 813              		.fnend
 815              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh,"axG",%progbits,_ZN3ros10Subscri
 816              		.align	1
 817              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 818              		.thumb
 819              		.thumb_func
 821              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:
 822              		.fnstart
 823              	.LFB223:
 824              		.file 10 "./lib/ros_lib/ros/subscriber.h"
   1:./lib/ros_lib/ros/subscriber.h **** /* 
   2:./lib/ros_lib/ros/subscriber.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/subscriber.h ****  *
   4:./lib/ros_lib/ros/subscriber.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/subscriber.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/subscriber.h ****  *
   7:./lib/ros_lib/ros/subscriber.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/subscriber.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/subscriber.h ****  * are met:
  10:./lib/ros_lib/ros/subscriber.h ****  *
  11:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/subscriber.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/subscriber.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/subscriber.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/subscriber.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/subscriber.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/subscriber.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/subscriber.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/subscriber.h ****  *
  21:./lib/ros_lib/ros/subscriber.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/subscriber.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/subscriber.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/subscriber.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/subscriber.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/subscriber.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/subscriber.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/subscriber.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/subscriber.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/subscriber.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/subscriber.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/subscriber.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/subscriber.h ****  */
  34:./lib/ros_lib/ros/subscriber.h **** 
  35:./lib/ros_lib/ros/subscriber.h **** #ifndef ROS_SUBSCRIBER_H_
  36:./lib/ros_lib/ros/subscriber.h **** #define ROS_SUBSCRIBER_H_
  37:./lib/ros_lib/ros/subscriber.h **** 
  38:./lib/ros_lib/ros/subscriber.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/subscriber.h **** 
  40:./lib/ros_lib/ros/subscriber.h **** namespace ros {
  41:./lib/ros_lib/ros/subscriber.h **** 
  42:./lib/ros_lib/ros/subscriber.h ****   /* Base class for objects subscribers. */
  43:./lib/ros_lib/ros/subscriber.h ****   class Subscriber_
  44:./lib/ros_lib/ros/subscriber.h ****   {
  45:./lib/ros_lib/ros/subscriber.h ****     public:
  46:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char *data)=0;
  47:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType()=0;
  48:./lib/ros_lib/ros/subscriber.h **** 
  49:./lib/ros_lib/ros/subscriber.h ****       // id_ is set by NodeHandle when we advertise 
  50:./lib/ros_lib/ros/subscriber.h ****       int id_;
  51:./lib/ros_lib/ros/subscriber.h **** 
  52:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType()=0;
  53:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5()=0;
  54:./lib/ros_lib/ros/subscriber.h ****       const char * topic_;
  55:./lib/ros_lib/ros/subscriber.h ****   };
  56:./lib/ros_lib/ros/subscriber.h **** 
  57:./lib/ros_lib/ros/subscriber.h **** 
  58:./lib/ros_lib/ros/subscriber.h ****   /* Actual subscriber, templated on message type. */
  59:./lib/ros_lib/ros/subscriber.h ****   template<typename MsgT>
  60:./lib/ros_lib/ros/subscriber.h ****   class Subscriber: public Subscriber_{
  61:./lib/ros_lib/ros/subscriber.h ****     public:
  62:./lib/ros_lib/ros/subscriber.h ****       typedef void(*CallbackT)(const MsgT&);
  63:./lib/ros_lib/ros/subscriber.h ****       MsgT msg;
  64:./lib/ros_lib/ros/subscriber.h **** 
  65:./lib/ros_lib/ros/subscriber.h ****       Subscriber(const char * topic_name, CallbackT cb, int endpoint=rosserial_msgs::TopicInfo::ID_
  66:./lib/ros_lib/ros/subscriber.h ****         cb_(cb),
  67:./lib/ros_lib/ros/subscriber.h ****         endpoint_(endpoint)
  68:./lib/ros_lib/ros/subscriber.h ****       {
  69:./lib/ros_lib/ros/subscriber.h ****         topic_ = topic_name;
  70:./lib/ros_lib/ros/subscriber.h ****       };
  71:./lib/ros_lib/ros/subscriber.h **** 
  72:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char* data){
 825              		.loc 10 72 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829              		@ link register save eliminated.
 830              	.LVL64:
 831              	.LBB150:
 832              	.LBB151:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 833              		.loc 6 33 0
 834 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 835              	.LBE151:
 836              	.LBE150:
  73:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
  74:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 837              		.loc 10 74 0
 838 0002 0C30     		adds	r0, r0, #12
 839              	.LVL65:
 840              	.LBB153:
 841              	.LBB152:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 842              		.loc 6 33 0
 843 0004 0371     		strb	r3, [r0, #4]
 844              	.LVL66:
 845              	.LBE152:
 846              	.LBE153:
 847              		.loc 10 74 0
 848 0006 8368     		ldr	r3, [r0, #8]
 849 0008 1847     		bx	r3	@ indirect register sibling call
 850              	.LVL67:
 851              		.cfi_endproc
 852              	.LFE223:
 853              		.cantunwind
 854              		.fnend
 856              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv,"axG",%progbits,_ZN3ros10
 857              		.align	1
 858              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 859              		.thumb
 860              		.thumb_func
 862              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:
 863              		.fnstart
 864              	.LFB224:
  75:./lib/ros_lib/ros/subscriber.h ****       }
  76:./lib/ros_lib/ros/subscriber.h **** 
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType(){ return this->msg.getType(); }
  78:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
  79:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 865              		.loc 10 79 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 870              	.LVL68:
 871              		.loc 10 79 0
 872 0000 8069     		ldr	r0, [r0, #24]
 873              	.LVL69:
 874 0002 7047     		bx	lr
 875              		.cfi_endproc
 876              	.LFE224:
 877              		.cantunwind
 878              		.fnend
 880              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv,"axG",%progbits,_ZN3ros10Subsc
 881              		.align	1
 882              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 883              		.thumb
 884              		.thumb_func
 886              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:
 887              		.fnstart
 888              	.LFB225:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 889              		.loc 10 77 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893              		@ link register save eliminated.
 894              	.LVL70:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 895              		.loc 10 77 0
 896 0000 0048     		ldr	r0, .L61
 897              	.LVL71:
 898 0002 7047     		bx	lr
 899              	.L62:
 900              		.align	2
 901              	.L61:
 902 0004 F0000000 		.word	.LC9
 903              		.cfi_endproc
 904              	.LFE225:
 905              		.cantunwind
 906              		.fnend
 908              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev,"axG",%progbits,_ZN3ros10Subscri
 909              		.align	1
 910              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 911              		.thumb
 912              		.thumb_func
 914              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:
 915              		.fnstart
 916              	.LFB226:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 917              		.loc 10 78 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 0
 920              		@ frame_needed = 0, uses_anonymous_args = 0
 921              		@ link register save eliminated.
 922              	.LVL72:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 923              		.loc 10 78 0
 924 0000 0048     		ldr	r0, .L64
 925              	.LVL73:
 926 0002 7047     		bx	lr
 927              	.L65:
 928              		.align	2
 929              	.L64:
 930 0004 FF000000 		.word	.LC10
 931              		.cfi_endproc
 932              	.LFE226:
 933              		.cantunwind
 934              		.fnend
 936              		.section	.text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE15getEndpointTypeEv,"axG",%progbits,_ZN3ros
 937              		.align	1
 938              		.weak	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE15getEndpointTypeEv
 939              		.thumb
 940              		.thumb_func
 942              	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE15getEndpointTypeEv:
 943              		.fnstart
 944              	.LFB228:
 945              		.loc 10 79 0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949              		@ link register save eliminated.
 950              	.LVL74:
 951              		.loc 10 79 0
 952 0000 006C     		ldr	r0, [r0, #64]
 953              	.LVL75:
 954 0002 7047     		bx	lr
 955              		.cfi_endproc
 956              	.LFE228:
 957              		.cantunwind
 958              		.fnend
 960              		.section	.text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv,"axG",%progbits,_ZN3ros10Sub
 961              		.align	1
 962              		.weak	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv
 963              		.thumb
 964              		.thumb_func
 966              	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv:
 967              		.fnstart
 968              	.LFB229:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 969              		.loc 10 77 0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 0
 972              		@ frame_needed = 0, uses_anonymous_args = 0
 973              		@ link register save eliminated.
 974              	.LVL76:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 975              		.loc 10 77 0
 976 0000 0048     		ldr	r0, .L68
 977              	.LVL77:
 978 0002 7047     		bx	lr
 979              	.L69:
 980              		.align	2
 981              	.L68:
 982 0004 51010000 		.word	.LC13
 983              		.cfi_endproc
 984              	.LFE229:
 985              		.cantunwind
 986              		.fnend
 988              		.section	.text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev,"axG",%progbits,_ZN3ros10Subsc
 989              		.align	1
 990              		.weak	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev
 991              		.thumb
 992              		.thumb_func
 994              	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev:
 995              		.fnstart
 996              	.LFB230:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 997              		.loc 10 78 0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 0
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 1001              		@ link register save eliminated.
 1002              	.LVL78:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1003              		.loc 10 78 0
 1004 0000 0048     		ldr	r0, .L71
 1005              	.LVL79:
 1006 0002 7047     		bx	lr
 1007              	.L72:
 1008              		.align	2
 1009              	.L71:
 1010 0004 61010000 		.word	.LC14
 1011              		.cfi_endproc
 1012              	.LFE230:
 1013              		.cantunwind
 1014              		.fnend
 1016              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv,"axG",%pr
 1017              		.align	1
 1018              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
 1019              		.thumb
 1020              		.thumb_func
 1022              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:
 1023              		.fnstart
 1024              	.LFB231:
 1025              		.file 11 "./lib/ros_lib/ros/node_handle.h"
   1:./lib/ros_lib/ros/node_handle.h **** /*
   2:./lib/ros_lib/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/node_handle.h ****  *
   4:./lib/ros_lib/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/node_handle.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/node_handle.h ****  *
   7:./lib/ros_lib/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/node_handle.h ****  * are met:
  10:./lib/ros_lib/ros/node_handle.h ****  *
  11:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/node_handle.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/node_handle.h ****  *
  21:./lib/ros_lib/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/node_handle.h ****  */
  34:./lib/ros_lib/ros/node_handle.h **** 
  35:./lib/ros_lib/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:./lib/ros_lib/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:./lib/ros_lib/ros/node_handle.h **** 
  38:./lib/ros_lib/ros/node_handle.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/node_handle.h **** 
  40:./lib/ros_lib/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:./lib/ros_lib/ros/node_handle.h **** 
  45:./lib/ros_lib/ros/node_handle.h **** #define SYNC_SECONDS        5
  46:./lib/ros_lib/ros/node_handle.h **** 
  47:./lib/ros_lib/ros/node_handle.h **** #define MODE_FIRST_FF       0
  48:./lib/ros_lib/ros/node_handle.h **** /*
  49:./lib/ros_lib/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  50:./lib/ros_lib/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  51:./lib/ros_lib/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  52:./lib/ros_lib/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  53:./lib/ros_lib/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  54:./lib/ros_lib/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  55:./lib/ros_lib/ros/node_handle.h ****  */
  56:./lib/ros_lib/ros/node_handle.h **** #define MODE_PROTOCOL_VER   1
  57:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER1		0xff // through groovy
  58:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER2		0xfe // in hydro
  59:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER 		PROTOCOL_VER2
  60:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_L         2
  61:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_H         3
  62:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_CHECKSUM  4   // checksum for msg size received from size L and H
  63:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_L        5   // waiting for topic id
  64:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_H        6
  65:./lib/ros_lib/ros/node_handle.h **** #define MODE_MESSAGE        7
  66:./lib/ros_lib/ros/node_handle.h **** #define MODE_MSG_CHECKSUM   8   // checksum for msg and topic id
  67:./lib/ros_lib/ros/node_handle.h **** 
  68:./lib/ros_lib/ros/node_handle.h **** 
  69:./lib/ros_lib/ros/node_handle.h **** #define MSG_TIMEOUT 20  //20 milliseconds to recieve all of message data
  70:./lib/ros_lib/ros/node_handle.h **** 
  71:./lib/ros_lib/ros/node_handle.h **** #include "msg.h"
  72:./lib/ros_lib/ros/node_handle.h **** 
  73:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  74:./lib/ros_lib/ros/node_handle.h **** 
  75:./lib/ros_lib/ros/node_handle.h ****   class NodeHandleBase_{
  76:./lib/ros_lib/ros/node_handle.h ****     public:
  77:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg* msg)=0;
  78:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce()=0;
  79:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected()=0;
  80:./lib/ros_lib/ros/node_handle.h ****     };
  81:./lib/ros_lib/ros/node_handle.h **** }
  82:./lib/ros_lib/ros/node_handle.h **** 
  83:./lib/ros_lib/ros/node_handle.h **** #include "publisher.h"
  84:./lib/ros_lib/ros/node_handle.h **** #include "subscriber.h"
  85:./lib/ros_lib/ros/node_handle.h **** #include "service_server.h"
  86:./lib/ros_lib/ros/node_handle.h **** #include "service_client.h"
  87:./lib/ros_lib/ros/node_handle.h **** 
  88:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  89:./lib/ros_lib/ros/node_handle.h **** 
  90:./lib/ros_lib/ros/node_handle.h ****   using rosserial_msgs::TopicInfo;
  91:./lib/ros_lib/ros/node_handle.h **** 
  92:./lib/ros_lib/ros/node_handle.h ****   /* Node Handle */
  93:./lib/ros_lib/ros/node_handle.h ****   template<class Hardware,
  94:./lib/ros_lib/ros/node_handle.h ****            int MAX_SUBSCRIBERS=25,
  95:./lib/ros_lib/ros/node_handle.h ****            int MAX_PUBLISHERS=25,
  96:./lib/ros_lib/ros/node_handle.h ****            int INPUT_SIZE=512,
  97:./lib/ros_lib/ros/node_handle.h ****            int OUTPUT_SIZE=512>
  98:./lib/ros_lib/ros/node_handle.h ****   class NodeHandle_ : public NodeHandleBase_
  99:./lib/ros_lib/ros/node_handle.h ****   {
 100:./lib/ros_lib/ros/node_handle.h ****     protected:
 101:./lib/ros_lib/ros/node_handle.h ****       Hardware hardware_;
 102:./lib/ros_lib/ros/node_handle.h **** 
 103:./lib/ros_lib/ros/node_handle.h ****       /* time used for syncing */
 104:./lib/ros_lib/ros/node_handle.h ****       uint32_t rt_time;
 105:./lib/ros_lib/ros/node_handle.h **** 
 106:./lib/ros_lib/ros/node_handle.h ****       /* used for computing current time */
 107:./lib/ros_lib/ros/node_handle.h ****       uint32_t sec_offset, nsec_offset;
 108:./lib/ros_lib/ros/node_handle.h **** 
 109:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_in[INPUT_SIZE];
 110:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_out[OUTPUT_SIZE];
 111:./lib/ros_lib/ros/node_handle.h **** 
 112:./lib/ros_lib/ros/node_handle.h ****       Publisher * publishers[MAX_PUBLISHERS];
 113:./lib/ros_lib/ros/node_handle.h ****       Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 114:./lib/ros_lib/ros/node_handle.h **** 
 115:./lib/ros_lib/ros/node_handle.h ****       /*
 116:./lib/ros_lib/ros/node_handle.h ****        * Setup Functions
 117:./lib/ros_lib/ros/node_handle.h ****        */
 118:./lib/ros_lib/ros/node_handle.h ****     public:
 119:./lib/ros_lib/ros/node_handle.h ****       NodeHandle_() : configured_(false) {
 120:./lib/ros_lib/ros/node_handle.h **** 
 121:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_PUBLISHERS; i++)
 122:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 123:./lib/ros_lib/ros/node_handle.h **** 
 124:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_SUBSCRIBERS; i++)
 125:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 126:./lib/ros_lib/ros/node_handle.h **** 
 127:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< INPUT_SIZE; i++)
 128:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 129:./lib/ros_lib/ros/node_handle.h **** 
 130:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< OUTPUT_SIZE; i++)
 131:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 132:./lib/ros_lib/ros/node_handle.h **** 
 133:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 134:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 135:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats_length = 0;
 136:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats = NULL;
 137:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 138:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 139:./lib/ros_lib/ros/node_handle.h ****       }
 140:./lib/ros_lib/ros/node_handle.h **** 
 141:./lib/ros_lib/ros/node_handle.h ****       Hardware* getHardware(){
 142:./lib/ros_lib/ros/node_handle.h ****         return &hardware_;
 143:./lib/ros_lib/ros/node_handle.h ****       }
 144:./lib/ros_lib/ros/node_handle.h **** 
 145:./lib/ros_lib/ros/node_handle.h ****       /* Start serial, initialize buffers */
 146:./lib/ros_lib/ros/node_handle.h ****       void initNode(){
 147:./lib/ros_lib/ros/node_handle.h ****         hardware_.init();
 148:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 149:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 150:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 151:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 152:./lib/ros_lib/ros/node_handle.h ****       };
 153:./lib/ros_lib/ros/node_handle.h **** 
 154:./lib/ros_lib/ros/node_handle.h ****       /* Start a named port, which may be network server IP, initialize buffers */
 155:./lib/ros_lib/ros/node_handle.h ****       void initNode(char *portName){
 156:./lib/ros_lib/ros/node_handle.h ****         hardware_.init(portName);
 157:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 158:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 159:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 160:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 161:./lib/ros_lib/ros/node_handle.h ****       };
 162:./lib/ros_lib/ros/node_handle.h **** 
 163:./lib/ros_lib/ros/node_handle.h ****     protected:
 164:./lib/ros_lib/ros/node_handle.h ****       //State machine variables for spinOnce
 165:./lib/ros_lib/ros/node_handle.h ****       int mode_;
 166:./lib/ros_lib/ros/node_handle.h ****       int bytes_;
 167:./lib/ros_lib/ros/node_handle.h ****       int topic_;
 168:./lib/ros_lib/ros/node_handle.h ****       int index_;
 169:./lib/ros_lib/ros/node_handle.h ****       int checksum_;
 170:./lib/ros_lib/ros/node_handle.h **** 
 171:./lib/ros_lib/ros/node_handle.h ****       bool configured_;
 172:./lib/ros_lib/ros/node_handle.h **** 
 173:./lib/ros_lib/ros/node_handle.h ****       /* used for syncing the time */
 174:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_time;
 175:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_receive_time;
 176:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_msg_timeout_time;
 177:./lib/ros_lib/ros/node_handle.h **** 
 178:./lib/ros_lib/ros/node_handle.h ****     public:
 179:./lib/ros_lib/ros/node_handle.h ****       /* This function goes in your loop() function, it handles
 180:./lib/ros_lib/ros/node_handle.h ****        *  serial input and callbacks for subscribers.
 181:./lib/ros_lib/ros/node_handle.h ****        */
 182:./lib/ros_lib/ros/node_handle.h **** 
 183:./lib/ros_lib/ros/node_handle.h **** 
 184:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce(){
 185:./lib/ros_lib/ros/node_handle.h **** 
 186:./lib/ros_lib/ros/node_handle.h ****         /* restart if timed out */
 187:./lib/ros_lib/ros/node_handle.h ****         uint32_t c_time = hardware_.time();
 188:./lib/ros_lib/ros/node_handle.h ****         if( (c_time - last_sync_receive_time) > (SYNC_SECONDS*2200) ){
 189:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 190:./lib/ros_lib/ros/node_handle.h ****          }
 191:./lib/ros_lib/ros/node_handle.h **** 
 192:./lib/ros_lib/ros/node_handle.h ****         /* reset if message has timed out */
 193:./lib/ros_lib/ros/node_handle.h ****         if ( mode_ != MODE_FIRST_FF){
 194:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 195:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 196:./lib/ros_lib/ros/node_handle.h ****           }
 197:./lib/ros_lib/ros/node_handle.h ****         }
 198:./lib/ros_lib/ros/node_handle.h **** 
 199:./lib/ros_lib/ros/node_handle.h ****         /* while available buffer, read data */
 200:./lib/ros_lib/ros/node_handle.h ****         while( true )
 201:./lib/ros_lib/ros/node_handle.h ****         {
 202:./lib/ros_lib/ros/node_handle.h ****           int data = hardware_.read();
 203:./lib/ros_lib/ros/node_handle.h ****           if( data < 0 )
 204:./lib/ros_lib/ros/node_handle.h ****             break;
 205:./lib/ros_lib/ros/node_handle.h ****           checksum_ += data;
 206:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 207:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 208:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 209:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 210:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 211:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 212:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 213:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 214:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 215:./lib/ros_lib/ros/node_handle.h ****             }
 216:./lib/ros_lib/ros/node_handle.h ****             else if( hardware_.time() - c_time > (SYNC_SECONDS)){
 217:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 218:./lib/ros_lib/ros/node_handle.h ****               configured_=false;
 219:./lib/ros_lib/ros/node_handle.h ****               return -2;
 220:./lib/ros_lib/ros/node_handle.h ****             }
 221:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_PROTOCOL_VER ){
 222:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 223:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 224:./lib/ros_lib/ros/node_handle.h ****             }else{
 225:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_FIRST_FF;
 226:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 227:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 228:./lib/ros_lib/ros/node_handle.h ****             }
 229:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_SIZE_L ){   /* bottom half of message size */
 230:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 231:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 232:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 233:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 234:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_H ){   /* top half of message size */
 235:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 236:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 237:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 238:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 239:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 240:./lib/ros_lib/ros/node_handle.h **** 	    else
 241:./lib/ros_lib/ros/node_handle.h **** 	      mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 242:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 243:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 244:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 245:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 246:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 247:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 248:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 249:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 250:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 251:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_MSG_CHECKSUM ){ /* do checksum */
 252:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 253:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 254:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 255:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 256:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 258:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 259:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 260:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 261:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 262:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 263:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 264:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 265:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 266:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 267:./lib/ros_lib/ros/node_handle.h ****               }else{
 268:./lib/ros_lib/ros/node_handle.h ****                 if(subscribers[topic_-100])
 269:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 270:./lib/ros_lib/ros/node_handle.h ****               }
 271:./lib/ros_lib/ros/node_handle.h ****             }
 272:./lib/ros_lib/ros/node_handle.h ****           }
 273:./lib/ros_lib/ros/node_handle.h ****         }
 274:./lib/ros_lib/ros/node_handle.h **** 
 275:./lib/ros_lib/ros/node_handle.h ****         /* occasionally sync time */
 276:./lib/ros_lib/ros/node_handle.h ****         if( configured_ && ((c_time-last_sync_time) > (SYNC_SECONDS*500) )){
 277:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 278:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 279:./lib/ros_lib/ros/node_handle.h ****         }
 280:./lib/ros_lib/ros/node_handle.h **** 
 281:./lib/ros_lib/ros/node_handle.h ****         return 0;
 282:./lib/ros_lib/ros/node_handle.h ****       }
 283:./lib/ros_lib/ros/node_handle.h **** 
 284:./lib/ros_lib/ros/node_handle.h **** 
 285:./lib/ros_lib/ros/node_handle.h ****       /* Are we connected to the PC? */
 286:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected() {
 1026              		.loc 11 286 0
 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 1030              		@ link register save eliminated.
 1031              	.LVL80:
 287:./lib/ros_lib/ros/node_handle.h ****         return configured_;
 288:./lib/ros_lib/ros/node_handle.h ****       };
 1032              		.loc 11 288 0
 1033 0000 90F8F404 		ldrb	r0, [r0, #1268]	@ zero_extendqisi2
 1034              	.LVL81:
 1035 0004 7047     		bx	lr
 1036              		.cfi_endproc
 1037              	.LFE231:
 1038              		.cantunwind
 1039              		.fnend
 1041              		.text
 1042              		.align	1
 1043              		.global	_Z6led_cbRKN8std_msgs5UInt8E
 1044              		.thumb
 1045              		.thumb_func
 1047              	_Z6led_cbRKN8std_msgs5UInt8E:
 1048              		.fnstart
 1049              	.LFB191:
  40:src/main.cpp  ****   led_set(cmd_msg.data);
 1050              		.loc 9 40 0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 1054              		@ link register save eliminated.
 1055              	.LVL82:
  41:src/main.cpp  **** }
 1056              		.loc 9 41 0
 1057 0068 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 1058              	.LVL83:
 1059 006a FFF7FEBF 		b	led_set
 1060              	.LVL84:
 1061              		.cfi_endproc
 1062              	.LFE191:
 1063              		.cantunwind
 1064              		.fnend
 1066              		.section	.text._ZNK8std_msgs6Header9serializeEPh,"axG",%progbits,_ZNK8std_msgs6Header9serializeEPh
 1067              		.align	1
 1068              		.weak	_ZNK8std_msgs6Header9serializeEPh
 1069              		.thumb
 1070              		.thumb_func
 1072              	_ZNK8std_msgs6Header9serializeEPh:
 1073              		.fnstart
 1074              	.LFB173:
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1075              		.loc 7 27 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 8
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079              	.LVL85:
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1080              		.loc 7 30 0
 1081 0000 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1082              		.loc 7 27 0
 1083 0002 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1084              	.LCFI2:
 1085              		.cfi_def_cfa_offset 24
 1086              		.cfi_offset 4, -16
 1087              		.cfi_offset 5, -12
 1088              		.cfi_offset 6, -8
 1089              		.cfi_offset 14, -4
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1090              		.loc 7 30 0
 1091 0004 0B70     		strb	r3, [r1]
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1092              		.loc 7 31 0
 1093 0006 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1094              		.loc 7 27 0
 1095 0008 0546     		mov	r5, r0
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1096              		.loc 7 31 0
 1097 000a 1B0A     		lsrs	r3, r3, #8
 1098 000c 4B70     		strb	r3, [r1, #1]
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1099              		.loc 7 32 0
 1100 000e C388     		ldrh	r3, [r0, #6]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1101              		.loc 7 27 0
 1102 0010 0C46     		mov	r4, r1
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1103              		.loc 7 32 0
 1104 0012 8B70     		strb	r3, [r1, #2]
  33:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1105              		.loc 7 33 0
 1106 0014 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 1107 0016 CB70     		strb	r3, [r1, #3]
 1108              	.LVL86:
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 1109              		.loc 7 35 0
 1110 0018 8368     		ldr	r3, [r0, #8]
 1111 001a 0B71     		strb	r3, [r1, #4]
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 1112              		.loc 7 36 0
 1113 001c 8368     		ldr	r3, [r0, #8]
 1114 001e 1B0A     		lsrs	r3, r3, #8
 1115 0020 4B71     		strb	r3, [r1, #5]
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 1116              		.loc 7 37 0
 1117 0022 4389     		ldrh	r3, [r0, #10]
 1118 0024 8B71     		strb	r3, [r1, #6]
  38:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1119              		.loc 7 38 0
 1120 0026 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1121 0028 CB71     		strb	r3, [r1, #7]
 1122              	.LVL87:
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 1123              		.loc 7 40 0
 1124 002a C368     		ldr	r3, [r0, #12]
 1125 002c 0B72     		strb	r3, [r1, #8]
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 1126              		.loc 7 41 0
 1127 002e C368     		ldr	r3, [r0, #12]
 1128 0030 1B0A     		lsrs	r3, r3, #8
 1129 0032 4B72     		strb	r3, [r1, #9]
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 1130              		.loc 7 42 0
 1131 0034 C389     		ldrh	r3, [r0, #14]
 1132 0036 8B72     		strb	r3, [r1, #10]
  43:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1133              		.loc 7 43 0
 1134 0038 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 1135 003a CB72     		strb	r3, [r1, #11]
 1136              	.LVL88:
  45:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 1137              		.loc 7 45 0
 1138 003c 0069     		ldr	r0, [r0, #16]
 1139              	.LVL89:
 1140 003e FFF7FEFF 		bl	strlen
 1141              	.LVL90:
 1142 0042 0646     		mov	r6, r0
 1143 0044 02AB     		add	r3, sp, #8
 1144 0046 43F8040D 		str	r0, [r3, #-4]!
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1145              		.loc 7 46 0
 1146 004a 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1147              		.loc 7 48 0
 1148 004c 3246     		mov	r2, r6
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1149              		.loc 7 46 0
 1150 004e E060     		str	r0, [r4, #12]	@ unaligned
 1151              	.LVL91:
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1152              		.loc 7 48 0
 1153 0050 2969     		ldr	r1, [r5, #16]
 1154 0052 04F11000 		add	r0, r4, #16
 1155 0056 FFF7FEFF 		bl	memcpy
 1156              	.LVL92:
  51:./lib/ros_lib/std_msgs/Header.h **** 
 1157              		.loc 7 51 0
 1158 005a 06F11000 		add	r0, r6, #16
 1159              	.LVL93:
 1160 005e 02B0     		add	sp, sp, #8
 1161              	.LCFI3:
 1162              		.cfi_def_cfa_offset 16
 1163              		@ sp needed
 1164 0060 70BD     		pop	{r4, r5, r6, pc}
 1165              		.cfi_endproc
 1166              	.LFE173:
 1167              		.cantunwind
 1168              		.fnend
 1170              		.section	.text._ZNK11sensor_msgs3Joy9serializeEPh,"axG",%progbits,_ZNK11sensor_msgs3Joy9serializeE
 1171              		.align	1
 1172              		.weak	_ZNK11sensor_msgs3Joy9serializeEPh
 1173              		.thumb
 1174              		.thumb_func
 1176              	_ZNK11sensor_msgs3Joy9serializeEPh:
 1177              		.fnstart
 1178              	.LFB180:
  31:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 1179              		.loc 8 31 0
 1180              		.cfi_startproc
 1181              		@ args = 0, pretend = 0, frame = 0
 1182              		@ frame_needed = 0, uses_anonymous_args = 0
 1183              	.LVL94:
 1184 0000 70B5     		push	{r4, r5, r6, lr}
 1185              	.LCFI4:
 1186              		.cfi_def_cfa_offset 16
 1187              		.cfi_offset 4, -16
 1188              		.cfi_offset 5, -12
 1189              		.cfi_offset 6, -8
 1190              		.cfi_offset 14, -4
  31:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 1191              		.loc 8 31 0
 1192 0002 0546     		mov	r5, r0
 1193              	.LVL95:
  34:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = axes_length;
 1194              		.loc 8 34 0
 1195 0004 0430     		adds	r0, r0, #4
 1196              	.LVL96:
  31:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 1197              		.loc 8 31 0
 1198 0006 0C46     		mov	r4, r1
  34:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = axes_length;
 1199              		.loc 8 34 0
 1200 0008 FFF7FEFF 		bl	_ZNK8std_msgs6Header9serializeEPh
 1201              	.LVL97:
  35:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1202              		.loc 8 35 0
 1203 000c 2B7E     		ldrb	r3, [r5, #24]	@ zero_extendqisi2
  36:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1204              		.loc 8 36 0
 1205 000e 2218     		adds	r2, r4, r0
  35:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1206              		.loc 8 35 0
 1207 0010 2354     		strb	r3, [r4, r0]
 1208              	.LVL98:
  36:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1209              		.loc 8 36 0
 1210 0012 0023     		movs	r3, #0
 1211 0014 5370     		strb	r3, [r2, #1]
 1212              	.LVL99:
  37:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1213              		.loc 8 37 0
 1214 0016 9370     		strb	r3, [r2, #2]
 1215              	.LVL100:
  38:./lib/ros_lib/sensor_msgs/Joy.h ****       for( uint8_t i = 0; i < axes_length; i++){
 1216              		.loc 8 38 0
 1217 0018 D370     		strb	r3, [r2, #3]
 1218              	.LVL101:
 1219 001a 1A46     		mov	r2, r3
 1220 001c 0430     		adds	r0, r0, #4
 1221              	.LVL102:
 1222 001e 2044     		add	r0, r0, r4
 1223              	.LVL103:
 1224              	.L78:
 1225              	.LBB154:
  39:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 1226              		.loc 8 39 0 discriminator 3
 1227 0020 2E7E     		ldrb	r6, [r5, #24]	@ zero_extendqisi2
 1228 0022 511C     		adds	r1, r2, #1
 1229 0024 D2B2     		uxtb	r2, r2
 1230 0026 9642     		cmp	r6, r2
 1231 0028 A0EB0403 		sub	r3, r0, r4
 1232              	.LVL104:
 1233 002c 00F10400 		add	r0, r0, #4
 1234 0030 0FD9     		bls	.L77
 1235              	.LBB155:
  44:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 0) = (u_axesi.base >> (8 * 0)) & 0xFF;
 1236              		.loc 8 44 0 discriminator 2
 1237 0032 2B6A     		ldr	r3, [r5, #32]
 1238              	.LVL105:
  45:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 1) = (u_axesi.base >> (8 * 1)) & 0xFF;
 1239              		.loc 8 45 0 discriminator 2
 1240 0034 53F82230 		ldr	r3, [r3, r2, lsl #2]
  46:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 2) = (u_axesi.base >> (8 * 2)) & 0xFF;
 1241              		.loc 8 46 0 discriminator 2
 1242 0038 1A0A     		lsrs	r2, r3, #8
  45:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 1) = (u_axesi.base >> (8 * 1)) & 0xFF;
 1243              		.loc 8 45 0 discriminator 2
 1244 003a 00F8043C 		strb	r3, [r0, #-4]
  46:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 2) = (u_axesi.base >> (8 * 2)) & 0xFF;
 1245              		.loc 8 46 0 discriminator 2
 1246 003e 00F8032C 		strb	r2, [r0, #-3]
  47:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 3) = (u_axesi.base >> (8 * 3)) & 0xFF;
 1247              		.loc 8 47 0 discriminator 2
 1248 0042 1A0C     		lsrs	r2, r3, #16
  48:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->axes[i]);
 1249              		.loc 8 48 0 discriminator 2
 1250 0044 1B0E     		lsrs	r3, r3, #24
  47:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 3) = (u_axesi.base >> (8 * 3)) & 0xFF;
 1251              		.loc 8 47 0 discriminator 2
 1252 0046 00F8022C 		strb	r2, [r0, #-2]
  48:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->axes[i]);
 1253              		.loc 8 48 0 discriminator 2
 1254 004a 00F8013C 		strb	r3, [r0, #-1]
 1255              	.LVL106:
 1256              	.LBE155:
  39:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 1257              		.loc 8 39 0 discriminator 2
 1258 004e 0A46     		mov	r2, r1
 1259 0050 E6E7     		b	.L78
 1260              	.LVL107:
 1261              	.L77:
 1262              	.LBE154:
  51:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1263              		.loc 8 51 0
 1264 0052 95F82420 		ldrb	r2, [r5, #36]	@ zero_extendqisi2
  52:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1265              		.loc 8 52 0
 1266 0056 E118     		adds	r1, r4, r3
  51:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1267              		.loc 8 51 0
 1268 0058 E254     		strb	r2, [r4, r3]
 1269              	.LVL108:
  52:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1270              		.loc 8 52 0
 1271 005a 0022     		movs	r2, #0
 1272 005c 0433     		adds	r3, r3, #4
 1273              	.LVL109:
 1274 005e 4A70     		strb	r2, [r1, #1]
 1275              	.LVL110:
  53:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1276              		.loc 8 53 0
 1277 0060 8A70     		strb	r2, [r1, #2]
  54:./lib/ros_lib/sensor_msgs/Joy.h ****       for( uint8_t i = 0; i < buttons_length; i++){
 1278              		.loc 8 54 0
 1279 0062 CA70     		strb	r2, [r1, #3]
 1280              	.LVL111:
 1281 0064 2344     		add	r3, r3, r4
 1282              	.LVL112:
 1283              	.L80:
 1284              	.LBB156:
  55:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 1285              		.loc 8 55 0 discriminator 3
 1286 0066 95F82460 		ldrb	r6, [r5, #36]	@ zero_extendqisi2
 1287 006a 511C     		adds	r1, r2, #1
 1288 006c D2B2     		uxtb	r2, r2
 1289 006e 9642     		cmp	r6, r2
 1290 0070 A3EB0400 		sub	r0, r3, r4
 1291              	.LVL113:
 1292 0074 03F10403 		add	r3, r3, #4
 1293 0078 0FD9     		bls	.L79
 1294              	.LBB157:
  60:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 0) = (u_buttonsi.base >> (8 * 0)) & 0xFF;
 1295              		.loc 8 60 0 discriminator 2
 1296 007a E86A     		ldr	r0, [r5, #44]
 1297              	.LVL114:
 1298 007c 50F82220 		ldr	r2, [r0, r2, lsl #2]
 1299              	.LVL115:
  62:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 2) = (u_buttonsi.base >> (8 * 2)) & 0xFF;
 1300              		.loc 8 62 0 discriminator 2
 1301 0080 100A     		lsrs	r0, r2, #8
  61:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 1) = (u_buttonsi.base >> (8 * 1)) & 0xFF;
 1302              		.loc 8 61 0 discriminator 2
 1303 0082 03F8042C 		strb	r2, [r3, #-4]
  62:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 2) = (u_buttonsi.base >> (8 * 2)) & 0xFF;
 1304              		.loc 8 62 0 discriminator 2
 1305 0086 03F8030C 		strb	r0, [r3, #-3]
  63:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 3) = (u_buttonsi.base >> (8 * 3)) & 0xFF;
 1306              		.loc 8 63 0 discriminator 2
 1307 008a 100C     		lsrs	r0, r2, #16
  64:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->buttons[i]);
 1308              		.loc 8 64 0 discriminator 2
 1309 008c 120E     		lsrs	r2, r2, #24
 1310              	.LVL116:
 1311 008e 03F8012C 		strb	r2, [r3, #-1]
 1312              	.LVL117:
  63:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 3) = (u_buttonsi.base >> (8 * 3)) & 0xFF;
 1313              		.loc 8 63 0 discriminator 2
 1314 0092 03F8020C 		strb	r0, [r3, #-2]
 1315              	.LBE157:
  55:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 1316              		.loc 8 55 0 discriminator 2
 1317 0096 0A46     		mov	r2, r1
 1318 0098 E5E7     		b	.L80
 1319              	.LVL118:
 1320              	.L79:
 1321              	.LBE156:
  68:./lib/ros_lib/sensor_msgs/Joy.h **** 
 1322              		.loc 8 68 0
 1323 009a 70BD     		pop	{r4, r5, r6, pc}
 1324              		.cfi_endproc
 1325              	.LFE180:
 1326              		.cantunwind
 1327              		.fnend
 1329              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 1330              		.align	1
 1331              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1332              		.thumb
 1333              		.thumb_func
 1335              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1336              		.fnstart
 1337              	.LFB82:
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1338              		.loc 4 74 0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 8
 1341              		@ frame_needed = 0, uses_anonymous_args = 0
 1342              	.LVL119:
 1343 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 1344              	.LCFI5:
 1345              		.cfi_def_cfa_offset 40
 1346              		.cfi_offset 4, -28
 1347              		.cfi_offset 5, -24
 1348              		.cfi_offset 6, -20
 1349              		.cfi_offset 7, -16
 1350              		.cfi_offset 8, -12
 1351              		.cfi_offset 9, -8
 1352              		.cfi_offset 14, -4
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1353              		.loc 4 77 0
 1354 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1355              		.loc 4 74 0
 1356 0006 0746     		mov	r7, r0
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1357              		.loc 4 77 0
 1358 0008 0B70     		strb	r3, [r1]
 1359              	.LVL120:
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1360              		.loc 4 78 0
 1361 000a 0023     		movs	r3, #0
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1362              		.loc 4 80 0
 1363 000c 1A46     		mov	r2, r3
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1364              		.loc 4 74 0
 1365 000e 0C46     		mov	r4, r1
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1366              		.loc 4 78 0
 1367 0010 4B70     		strb	r3, [r1, #1]
 1368              	.LVL121:
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1369              		.loc 4 79 0
 1370 0012 8B70     		strb	r3, [r1, #2]
 1371              	.LVL122:
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1372              		.loc 4 80 0
 1373 0014 CB70     		strb	r3, [r1, #3]
 1374              	.LVL123:
 1375 0016 0431     		adds	r1, r1, #4
 1376              	.LVL124:
 1377              	.L84:
 1378              	.LBB158:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1379              		.loc 4 81 0 discriminator 3
 1380 0018 3D79     		ldrb	r5, [r7, #4]	@ zero_extendqisi2
 1381 001a 501C     		adds	r0, r2, #1
 1382 001c D2B2     		uxtb	r2, r2
 1383 001e 9542     		cmp	r5, r2
 1384 0020 A1EB0403 		sub	r3, r1, r4
 1385              	.LVL125:
 1386 0024 01F10401 		add	r1, r1, #4
 1387 0028 0FD9     		bls	.L83
 1388              	.LBB159:
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1389              		.loc 4 86 0 discriminator 2
 1390 002a FB68     		ldr	r3, [r7, #12]
 1391              	.LVL126:
 1392 002c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1393              	.LVL127:
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1394              		.loc 4 88 0 discriminator 2
 1395 0030 1A0A     		lsrs	r2, r3, #8
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1396              		.loc 4 87 0 discriminator 2
 1397 0032 01F8043C 		strb	r3, [r1, #-4]
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1398              		.loc 4 88 0 discriminator 2
 1399 0036 01F8032C 		strb	r2, [r1, #-3]
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1400              		.loc 4 89 0 discriminator 2
 1401 003a 1A0C     		lsrs	r2, r3, #16
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1402              		.loc 4 90 0 discriminator 2
 1403 003c 1B0E     		lsrs	r3, r3, #24
 1404              	.LVL128:
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1405              		.loc 4 89 0 discriminator 2
 1406 003e 01F8022C 		strb	r2, [r1, #-2]
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1407              		.loc 4 90 0 discriminator 2
 1408 0042 01F8013C 		strb	r3, [r1, #-1]
 1409              	.LVL129:
 1410              	.LBE159:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1411              		.loc 4 81 0 discriminator 2
 1412 0046 0246     		mov	r2, r0
 1413 0048 E6E7     		b	.L84
 1414              	.LVL130:
 1415              	.L83:
 1416              	.LBE158:
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1417              		.loc 4 93 0
 1418 004a 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1419              		.loc 4 94 0
 1420 004c E118     		adds	r1, r4, r3
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1421              		.loc 4 93 0
 1422 004e E254     		strb	r2, [r4, r3]
 1423              	.LVL131:
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1424              		.loc 4 94 0
 1425 0050 0022     		movs	r2, #0
 1426 0052 0433     		adds	r3, r3, #4
 1427              	.LVL132:
 1428 0054 4A70     		strb	r2, [r1, #1]
 1429              	.LVL133:
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1430              		.loc 4 95 0
 1431 0056 8A70     		strb	r2, [r1, #2]
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1432              		.loc 4 96 0
 1433 0058 CA70     		strb	r2, [r1, #3]
 1434              	.LVL134:
 1435 005a 2344     		add	r3, r3, r4
 1436              	.LVL135:
 1437              	.L86:
 1438              	.LBB160:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1439              		.loc 4 97 0 discriminator 3
 1440 005c 387C     		ldrb	r0, [r7, #16]	@ zero_extendqisi2
 1441 005e 511C     		adds	r1, r2, #1
 1442 0060 D2B2     		uxtb	r2, r2
 1443 0062 9042     		cmp	r0, r2
 1444 0064 A3EB0406 		sub	r6, r3, r4
 1445              	.LVL136:
 1446 0068 03F10403 		add	r3, r3, #4
 1447 006c 0FD9     		bls	.L85
 1448              	.LBB161:
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1449              		.loc 4 102 0 discriminator 2
 1450 006e B869     		ldr	r0, [r7, #24]
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1451              		.loc 4 103 0 discriminator 2
 1452 0070 50F82220 		ldr	r2, [r0, r2, lsl #2]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1453              		.loc 4 104 0 discriminator 2
 1454 0074 100A     		lsrs	r0, r2, #8
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1455              		.loc 4 103 0 discriminator 2
 1456 0076 03F8042C 		strb	r2, [r3, #-4]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1457              		.loc 4 104 0 discriminator 2
 1458 007a 03F8030C 		strb	r0, [r3, #-3]
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1459              		.loc 4 105 0 discriminator 2
 1460 007e 100C     		lsrs	r0, r2, #16
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1461              		.loc 4 106 0 discriminator 2
 1462 0080 120E     		lsrs	r2, r2, #24
 1463 0082 03F8012C 		strb	r2, [r3, #-1]
 1464              	.LVL137:
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1465              		.loc 4 105 0 discriminator 2
 1466 0086 03F8020C 		strb	r0, [r3, #-2]
 1467              	.LBE161:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1468              		.loc 4 97 0 discriminator 2
 1469 008a 0A46     		mov	r2, r1
 1470 008c E6E7     		b	.L86
 1471              	.LVL138:
 1472              	.L85:
 1473              	.LBE160:
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1474              		.loc 4 109 0
 1475 008e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1476              		.loc 4 110 0
 1477 0090 A219     		adds	r2, r4, r6
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1478              		.loc 4 109 0
 1479 0092 A355     		strb	r3, [r4, r6]
 1480              	.LVL139:
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1481              		.loc 4 110 0
 1482 0094 0023     		movs	r3, #0
 1483 0096 5370     		strb	r3, [r2, #1]
 1484              	.LVL140:
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1485              		.loc 4 111 0
 1486 0098 9370     		strb	r3, [r2, #2]
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1487              		.loc 4 112 0
 1488 009a 0436     		adds	r6, r6, #4
 1489              	.LVL141:
 1490 009c D370     		strb	r3, [r2, #3]
 1491              	.LVL142:
 1492              	.L88:
 1493              	.LBB162:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1494              		.loc 4 113 0 discriminator 3
 1495 009e 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 1496 00a0 DDB2     		uxtb	r5, r3
 1497 00a2 AA42     		cmp	r2, r5
 1498 00a4 03F10109 		add	r9, r3, #1
 1499 00a8 15D9     		bls	.L87
 1500              	.LBB163:
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1501              		.loc 4 114 0 discriminator 2
 1502 00aa 7B6A     		ldr	r3, [r7, #36]
 1503              	.LVL143:
 1504 00ac 53F82500 		ldr	r0, [r3, r5, lsl #2]
 1505 00b0 FFF7FEFF 		bl	strlen
 1506              	.LVL144:
 1507 00b4 8046     		mov	r8, r0
 1508 00b6 02AB     		add	r3, sp, #8
 1509 00b8 43F8040D 		str	r0, [r3, #-4]!
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1510              		.loc 4 115 0 discriminator 2
 1511 00bc 1868     		ldr	r0, [r3]	@ unaligned
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1512              		.loc 4 117 0 discriminator 2
 1513 00be 4246     		mov	r2, r8
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1514              		.loc 4 115 0 discriminator 2
 1515 00c0 A051     		str	r0, [r4, r6]	@ unaligned
 1516              	.LVL145:
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1517              		.loc 4 117 0 discriminator 2
 1518 00c2 7B6A     		ldr	r3, [r7, #36]
 1519 00c4 0436     		adds	r6, r6, #4
 1520              	.LVL146:
 1521 00c6 53F82510 		ldr	r1, [r3, r5, lsl #2]
 1522 00ca A019     		adds	r0, r4, r6
 1523 00cc FFF7FEFF 		bl	memcpy
 1524              	.LVL147:
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 1525              		.loc 4 118 0 discriminator 2
 1526 00d0 4644     		add	r6, r6, r8
 1527              	.LVL148:
 1528              	.LBE163:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1529              		.loc 4 113 0 discriminator 2
 1530 00d2 4B46     		mov	r3, r9
 1531 00d4 E3E7     		b	.L88
 1532              	.LVL149:
 1533              	.L87:
 1534              	.LBE162:
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 1535              		.loc 4 121 0
 1536 00d6 3046     		mov	r0, r6
 1537 00d8 03B0     		add	sp, sp, #12
 1538              	.LCFI6:
 1539              		.cfi_def_cfa_offset 28
 1540              		@ sp needed
 1541 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1542              		.cfi_endproc
 1543              	.LFE82:
 1544              		.cantunwind
 1545              		.fnend
 1547              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 1548              		.align	1
 1549              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1550              		.thumb
 1551              		.thumb_func
 1553              	_ZNK14rosserial_msgs3Log9serializeEPh:
 1554              		.fnstart
 1555              	.LFB68:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1556              		.loc 3 29 0
 1557              		.cfi_startproc
 1558              		@ args = 0, pretend = 0, frame = 8
 1559              		@ frame_needed = 0, uses_anonymous_args = 0
 1560              	.LVL150:
 1561 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1562              	.LCFI7:
 1563              		.cfi_def_cfa_offset 24
 1564              		.cfi_offset 4, -16
 1565              		.cfi_offset 5, -12
 1566              		.cfi_offset 6, -8
 1567              		.cfi_offset 14, -4
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1568              		.loc 3 32 0
 1569 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1570              		.loc 3 29 0
 1571 0004 0646     		mov	r6, r0
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1572              		.loc 3 32 0
 1573 0006 0B70     		strb	r3, [r1]
 1574              	.LVL151:
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1575              		.loc 3 34 0
 1576 0008 8068     		ldr	r0, [r0, #8]
 1577              	.LVL152:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1578              		.loc 3 29 0
 1579 000a 0D46     		mov	r5, r1
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1580              		.loc 3 34 0
 1581 000c FFF7FEFF 		bl	strlen
 1582              	.LVL153:
 1583 0010 0446     		mov	r4, r0
 1584 0012 02AB     		add	r3, sp, #8
 1585 0014 43F8040D 		str	r0, [r3, #-4]!
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1586              		.loc 3 35 0
 1587 0018 1868     		ldr	r0, [r3]	@ unaligned
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1588              		.loc 3 37 0
 1589 001a 2246     		mov	r2, r4
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1590              		.loc 3 35 0
 1591 001c C5F80100 		str	r0, [r5, #1]	@ unaligned
 1592              	.LVL154:
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1593              		.loc 3 37 0
 1594 0020 B168     		ldr	r1, [r6, #8]
 1595 0022 681D     		adds	r0, r5, #5
 1596 0024 FFF7FEFF 		bl	memcpy
 1597              	.LVL155:
  40:./lib/ros_lib/rosserial_msgs/Log.h **** 
 1598              		.loc 3 40 0
 1599 0028 601D     		adds	r0, r4, #5
 1600              	.LVL156:
 1601 002a 02B0     		add	sp, sp, #8
 1602              	.LCFI8:
 1603              		.cfi_def_cfa_offset 16
 1604              		@ sp needed
 1605 002c 70BD     		pop	{r4, r5, r6, pc}
 1606              		.cfi_endproc
 1607              	.LFE68:
 1608              		.cantunwind
 1609              		.fnend
 1611              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 1612              		.align	1
 1613              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 1614              		.thumb
 1615              		.thumb_func
 1617              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 1618              		.fnstart
 1619              	.LFB61:
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1620              		.loc 2 38 0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 16
 1623              		@ frame_needed = 0, uses_anonymous_args = 0
 1624              	.LVL157:
 1625 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 1626              	.LCFI9:
 1627              		.cfi_def_cfa_offset 40
 1628              		.cfi_offset 4, -24
 1629              		.cfi_offset 5, -20
 1630              		.cfi_offset 6, -16
 1631              		.cfi_offset 7, -12
 1632              		.cfi_offset 8, -8
 1633              		.cfi_offset 14, -4
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1634              		.loc 2 41 0
 1635 0004 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1636              		.loc 2 38 0
 1637 0006 0646     		mov	r6, r0
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1638              		.loc 2 41 0
 1639 0008 0B70     		strb	r3, [r1]
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1640              		.loc 2 42 0
 1641 000a 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1642              		.loc 2 38 0
 1643 000c 0D46     		mov	r5, r1
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1644              		.loc 2 42 0
 1645 000e 1B0A     		lsrs	r3, r3, #8
 1646 0010 4B70     		strb	r3, [r1, #1]
 1647              	.LVL158:
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1648              		.loc 2 44 0
 1649 0012 8068     		ldr	r0, [r0, #8]
 1650              	.LVL159:
 1651 0014 FFF7FEFF 		bl	strlen
 1652              	.LVL160:
 1653 0018 0446     		mov	r4, r0
 1654 001a 04AB     		add	r3, sp, #16
 1655 001c 43F80C0D 		str	r0, [r3, #-12]!
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1656              		.loc 2 45 0
 1657 0020 1868     		ldr	r0, [r3]	@ unaligned
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1658              		.loc 2 47 0
 1659 0022 2246     		mov	r2, r4
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1660              		.loc 2 45 0
 1661 0024 C5F80200 		str	r0, [r5, #2]	@ unaligned
 1662              	.LVL161:
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1663              		.loc 2 47 0
 1664 0028 B168     		ldr	r1, [r6, #8]
 1665 002a A81D     		adds	r0, r5, #6
 1666 002c FFF7FEFF 		bl	memcpy
 1667              	.LVL162:
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 1668              		.loc 2 49 0
 1669 0030 F068     		ldr	r0, [r6, #12]
 1670 0032 FFF7FEFF 		bl	strlen
 1671              	.LVL163:
 1672 0036 0746     		mov	r7, r0
 1673 0038 04AB     		add	r3, sp, #16
 1674 003a 43F8080D 		str	r0, [r3, #-8]!
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1675              		.loc 2 50 0
 1676 003e 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 1677              		.loc 2 48 0
 1678 0040 04F10608 		add	r8, r4, #6
 1679              	.LVL164:
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1680              		.loc 2 50 0
 1681 0044 45F80800 		str	r0, [r5, r8]	@ unaligned
 1682              	.LVL165:
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1683              		.loc 2 52 0
 1684 0048 0A34     		adds	r4, r4, #10
 1685 004a 3A46     		mov	r2, r7
 1686 004c F168     		ldr	r1, [r6, #12]
 1687 004e 2819     		adds	r0, r5, r4
 1688 0050 FFF7FEFF 		bl	memcpy
 1689              	.LVL166:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1690              		.loc 2 54 0
 1691 0054 3069     		ldr	r0, [r6, #16]
 1692 0056 FFF7FEFF 		bl	strlen
 1693              	.LVL167:
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 1694              		.loc 2 53 0
 1695 005a 3C44     		add	r4, r4, r7
 1696              	.LVL168:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1697              		.loc 2 54 0
 1698 005c 0746     		mov	r7, r0
 1699 005e 04AB     		add	r3, sp, #16
 1700 0060 43F8040D 		str	r0, [r3, #-4]!
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1701              		.loc 2 55 0
 1702 0064 1868     		ldr	r0, [r3]	@ unaligned
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1703              		.loc 2 57 0
 1704 0066 3A46     		mov	r2, r7
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1705              		.loc 2 55 0
 1706 0068 2851     		str	r0, [r5, r4]	@ unaligned
 1707              	.LVL169:
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1708              		.loc 2 57 0
 1709 006a 0434     		adds	r4, r4, #4
 1710              	.LVL170:
 1711 006c 2819     		adds	r0, r5, r4
 1712 006e 3169     		ldr	r1, [r6, #16]
 1713 0070 FFF7FEFF 		bl	memcpy
 1714              	.LVL171:
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 1715              		.loc 2 63 0
 1716 0074 7369     		ldr	r3, [r6, #20]
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 1717              		.loc 2 58 0
 1718 0076 3819     		adds	r0, r7, r4
 1719              	.LVL172:
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 1720              		.loc 2 64 0
 1721 0078 2B54     		strb	r3, [r5, r0]
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 1722              		.loc 2 65 0
 1723 007a 1A0A     		lsrs	r2, r3, #8
 1724 007c 0544     		add	r5, r5, r0
 1725              	.LVL173:
 1726 007e 6A70     		strb	r2, [r5, #1]
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1727              		.loc 2 70 0
 1728 0080 0430     		adds	r0, r0, #4
 1729              	.LVL174:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1730              		.loc 2 66 0
 1731 0082 1A0C     		lsrs	r2, r3, #16
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1732              		.loc 2 67 0
 1733 0084 1B0E     		lsrs	r3, r3, #24
 1734              	.LVL175:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1735              		.loc 2 66 0
 1736 0086 AA70     		strb	r2, [r5, #2]
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1737              		.loc 2 67 0
 1738 0088 EB70     		strb	r3, [r5, #3]
 1739              	.LVL176:
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1740              		.loc 2 70 0
 1741 008a 04B0     		add	sp, sp, #16
 1742              	.LCFI10:
 1743              		.cfi_def_cfa_offset 24
 1744              		@ sp needed
 1745 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1746              		.cfi_endproc
 1747              	.LFE61:
 1748              		.cantunwind
 1749              		.fnend
 1751              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
 1752              		.align	1
 1753              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 1754              		.thumb
 1755              		.thumb_func
 1757              	_ZN14rosserial_msgs3Log11deserializeEPh:
 1758              		.fnstart
 1759              	.LFB69:
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1760              		.loc 3 42 0
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 8
 1763              		@ frame_needed = 0, uses_anonymous_args = 0
 1764              	.LVL177:
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1765              		.loc 3 45 0
 1766 0000 0B46     		mov	r3, r1
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1767              		.loc 3 42 0
 1768 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1769              	.LCFI11:
 1770              		.cfi_def_cfa_offset 24
 1771              		.cfi_offset 4, -12
 1772              		.cfi_offset 5, -8
 1773              		.cfi_offset 14, -4
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1774              		.loc 3 45 0
 1775 0004 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1776              		.loc 3 42 0
 1777 0008 0446     		mov	r4, r0
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1778              		.loc 3 45 0
 1779 000a 0271     		strb	r2, [r0, #4]
 1780              	.LVL178:
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1781              		.loc 3 48 0
 1782 000c 1868     		ldr	r0, [r3]	@ unaligned
 1783              	.LVL179:
 1784 000e 4A1D     		adds	r2, r1, #5
 1785 0010 0190     		str	r0, [sp, #4]	@ unaligned
 1786              	.LVL180:
 1787              	.LBB164:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1788              		.loc 3 50 0
 1789 0012 019B     		ldr	r3, [sp, #4]
 1790 0014 581D     		adds	r0, r3, #5
 1791              	.LVL181:
 1792              	.L93:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1793              		.loc 3 50 0 is_stmt 0 discriminator 3
 1794 0016 551A     		subs	r5, r2, r1
 1795              	.LVL182:
 1796 0018 A842     		cmp	r0, r5
 1797 001a 04D9     		bls	.L92
  51:./lib/ros_lib/rosserial_msgs/Log.h ****       }
 1798              		.loc 3 51 0 is_stmt 1 discriminator 2
 1799 001c 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 1800              	.LVL183:
 1801 0020 02F8025C 		strb	r5, [r2, #-2]
 1802              	.LVL184:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1803              		.loc 3 50 0 discriminator 2
 1804 0024 F7E7     		b	.L93
 1805              	.LVL185:
 1806              	.L92:
 1807              	.LBE164:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 1808              		.loc 3 53 0
 1809 0026 0B44     		add	r3, r3, r1
 1810 0028 0022     		movs	r2, #0
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1811              		.loc 3 54 0
 1812 002a 0431     		adds	r1, r1, #4
 1813              	.LVL186:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 1814              		.loc 3 53 0
 1815 002c 1A71     		strb	r2, [r3, #4]
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1816              		.loc 3 54 0
 1817 002e A160     		str	r1, [r4, #8]
 1818              	.LVL187:
  57:./lib/ros_lib/rosserial_msgs/Log.h **** 
 1819              		.loc 3 57 0
 1820 0030 03B0     		add	sp, sp, #12
 1821              	.LCFI12:
 1822              		.cfi_def_cfa_offset 12
 1823              		@ sp needed
 1824 0032 30BD     		pop	{r4, r5, pc}
 1825              		.cfi_endproc
 1826              	.LFE69:
 1827              		.cantunwind
 1828              		.fnend
 1830              		.section	.text._ZN8std_msgs6Header11deserializeEPh,"axG",%progbits,_ZN8std_msgs6Header11deserializ
 1831              		.align	1
 1832              		.weak	_ZN8std_msgs6Header11deserializeEPh
 1833              		.thumb
 1834              		.thumb_func
 1836              	_ZN8std_msgs6Header11deserializeEPh:
 1837              		.fnstart
 1838              	.LFB174:
  53:./lib/ros_lib/std_msgs/Header.h ****     {
 1839              		.loc 7 53 0
 1840              		.cfi_startproc
 1841              		@ args = 0, pretend = 0, frame = 8
 1842              		@ frame_needed = 0, uses_anonymous_args = 0
 1843              	.LVL188:
 1844 0000 0346     		mov	r3, r0
 1845 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1846              	.LCFI13:
 1847              		.cfi_def_cfa_offset 24
 1848              		.cfi_offset 4, -12
 1849              		.cfi_offset 5, -8
 1850              		.cfi_offset 14, -4
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1851              		.loc 7 56 0
 1852 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1853 0006 01F11004 		add	r4, r1, #16
 1854 000a 4260     		str	r2, [r0, #4]
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1855              		.loc 7 57 0
 1856 000c 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 1857              	.LVL189:
 1858 000e 42EA0022 		orr	r2, r2, r0, lsl #8
 1859 0012 5A60     		str	r2, [r3, #4]
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1860              		.loc 7 58 0
 1861 0014 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 1862 0016 42EA0042 		orr	r2, r2, r0, lsl #16
 1863 001a 5A60     		str	r2, [r3, #4]
  59:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1864              		.loc 7 59 0
 1865 001c C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 1866 001e 42EA0062 		orr	r2, r2, r0, lsl #24
 1867 0022 5A60     		str	r2, [r3, #4]
 1868              	.LVL190:
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1869              		.loc 7 61 0
 1870 0024 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 1871 0026 9A60     		str	r2, [r3, #8]
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1872              		.loc 7 62 0
 1873 0028 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 1874 002a 42EA0022 		orr	r2, r2, r0, lsl #8
 1875 002e 9A60     		str	r2, [r3, #8]
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1876              		.loc 7 63 0
 1877 0030 8879     		ldrb	r0, [r1, #6]	@ zero_extendqisi2
 1878 0032 42EA0042 		orr	r2, r2, r0, lsl #16
 1879 0036 9A60     		str	r2, [r3, #8]
  64:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1880              		.loc 7 64 0
 1881 0038 C879     		ldrb	r0, [r1, #7]	@ zero_extendqisi2
 1882 003a 42EA0062 		orr	r2, r2, r0, lsl #24
 1883 003e 9A60     		str	r2, [r3, #8]
 1884              	.LVL191:
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1885              		.loc 7 66 0
 1886 0040 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 1887 0042 DA60     		str	r2, [r3, #12]
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1888              		.loc 7 67 0
 1889 0044 487A     		ldrb	r0, [r1, #9]	@ zero_extendqisi2
 1890 0046 42EA0022 		orr	r2, r2, r0, lsl #8
 1891 004a DA60     		str	r2, [r3, #12]
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1892              		.loc 7 68 0
 1893 004c 887A     		ldrb	r0, [r1, #10]	@ zero_extendqisi2
 1894 004e 42EA0042 		orr	r2, r2, r0, lsl #16
 1895 0052 DA60     		str	r2, [r3, #12]
  69:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1896              		.loc 7 69 0
 1897 0054 C87A     		ldrb	r0, [r1, #11]	@ zero_extendqisi2
 1898 0056 42EA0062 		orr	r2, r2, r0, lsl #24
 1899 005a DA60     		str	r2, [r3, #12]
 1900              	.LVL192:
  72:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1901              		.loc 7 72 0
 1902 005c C868     		ldr	r0, [r1, #12]	@ unaligned
 1903 005e 0190     		str	r0, [sp, #4]	@ unaligned
 1904              	.LVL193:
 1905              	.LBB165:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1906              		.loc 7 74 0
 1907 0060 019A     		ldr	r2, [sp, #4]
 1908 0062 02F11000 		add	r0, r2, #16
 1909              	.LVL194:
 1910              	.L97:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1911              		.loc 7 74 0 is_stmt 0 discriminator 3
 1912 0066 651A     		subs	r5, r4, r1
 1913              	.LVL195:
 1914 0068 A842     		cmp	r0, r5
 1915 006a 04D9     		bls	.L96
  75:./lib/ros_lib/std_msgs/Header.h ****       }
 1916              		.loc 7 75 0 is_stmt 1 discriminator 2
 1917 006c 14F8015B 		ldrb	r5, [r4], #1	@ zero_extendqisi2
 1918              	.LVL196:
 1919 0070 04F8025C 		strb	r5, [r4, #-2]
 1920              	.LVL197:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1921              		.loc 7 74 0 discriminator 2
 1922 0074 F7E7     		b	.L97
 1923              	.LVL198:
 1924              	.L96:
 1925              	.LBE165:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 1926              		.loc 7 77 0
 1927 0076 0A44     		add	r2, r2, r1
 1928 0078 0024     		movs	r4, #0
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1929              		.loc 7 78 0
 1930 007a 0F31     		adds	r1, r1, #15
 1931              	.LVL199:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 1932              		.loc 7 77 0
 1933 007c D473     		strb	r4, [r2, #15]
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1934              		.loc 7 78 0
 1935 007e 1961     		str	r1, [r3, #16]
 1936              	.LVL200:
  81:./lib/ros_lib/std_msgs/Header.h **** 
 1937              		.loc 7 81 0
 1938 0080 03B0     		add	sp, sp, #12
 1939              	.LCFI14:
 1940              		.cfi_def_cfa_offset 12
 1941              		@ sp needed
 1942 0082 30BD     		pop	{r4, r5, pc}
 1943              		.cfi_endproc
 1944              	.LFE174:
 1945              		.cantunwind
 1946              		.fnend
 1948              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 1949              		.align	1
 1950              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 1951              		.thumb
 1952              		.thumb_func
 1954              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 1955              		.fnstart
 1956              	.LFB62:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1957              		.loc 2 72 0
 1958              		.cfi_startproc
 1959              		@ args = 0, pretend = 0, frame = 16
 1960              		@ frame_needed = 0, uses_anonymous_args = 0
 1961              	.LVL201:
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1962              		.loc 2 75 0
 1963 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1964              		.loc 2 72 0
 1965 0002 30B5     		push	{r4, r5, lr}
 1966              	.LCFI15:
 1967              		.cfi_def_cfa_offset 12
 1968              		.cfi_offset 4, -12
 1969              		.cfi_offset 5, -8
 1970              		.cfi_offset 14, -4
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1971              		.loc 2 75 0
 1972 0004 8380     		strh	r3, [r0, #4]	@ movhi
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1973              		.loc 2 76 0
 1974 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1975              		.loc 2 72 0
 1976 0008 0446     		mov	r4, r0
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1977              		.loc 2 76 0
 1978 000a 43EA0223 		orr	r3, r3, r2, lsl #8
 1979 000e 8380     		strh	r3, [r0, #4]	@ movhi
 1980              	.LVL202:
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1981              		.loc 2 79 0
 1982 0010 D1F80200 		ldr	r0, [r1, #2]	@ unaligned
 1983              	.LVL203:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1984              		.loc 2 72 0
 1985 0014 85B0     		sub	sp, sp, #20
 1986              	.LCFI16:
 1987              		.cfi_def_cfa_offset 32
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1988              		.loc 2 79 0
 1989 0016 0190     		str	r0, [sp, #4]	@ unaligned
 1990              	.LVL204:
 1991              	.LBB166:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1992              		.loc 2 81 0
 1993 0018 019D     		ldr	r5, [sp, #4]
 1994 001a 8A1D     		adds	r2, r1, #6
 1995 001c AB1D     		adds	r3, r5, #6
 1996              	.LVL205:
 1997              	.L101:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1998              		.loc 2 81 0 is_stmt 0 discriminator 3
 1999 001e 501A     		subs	r0, r2, r1
 2000              	.LVL206:
 2001 0020 8342     		cmp	r3, r0
 2002 0022 04D9     		bls	.L100
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2003              		.loc 2 82 0 is_stmt 1 discriminator 2
 2004 0024 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 2005              	.LVL207:
 2006 0028 02F8020C 		strb	r0, [r2, #-2]
 2007              	.LVL208:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2008              		.loc 2 81 0 discriminator 2
 2009 002c F7E7     		b	.L101
 2010              	.LVL209:
 2011              	.L100:
 2012              	.LBE166:
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 2013              		.loc 2 84 0
 2014 002e 4A19     		adds	r2, r1, r5
 2015 0030 0020     		movs	r0, #0
 2016              	.LVL210:
 2017 0032 5071     		strb	r0, [r2, #5]
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 2018              		.loc 2 85 0
 2019 0034 4A1D     		adds	r2, r1, #5
 2020 0036 A260     		str	r2, [r4, #8]
 2021              	.LVL211:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2022              		.loc 2 88 0
 2023 0038 C858     		ldr	r0, [r1, r3]	@ unaligned
 2024              	.LBB167:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2025              		.loc 2 90 0
 2026 003a 1A1D     		adds	r2, r3, #4
 2027              	.LBE167:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2028              		.loc 2 88 0
 2029 003c 0290     		str	r0, [sp, #8]	@ unaligned
 2030              	.LVL212:
 2031              	.LBB168:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2032              		.loc 2 90 0
 2033 003e 029B     		ldr	r3, [sp, #8]
 2034 0040 05F10A00 		add	r0, r5, #10
 2035 0044 1344     		add	r3, r3, r2
 2036 0046 0844     		add	r0, r0, r1
 2037              	.LVL213:
 2038              	.L103:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2039              		.loc 2 90 0 is_stmt 0 discriminator 3
 2040 0048 451A     		subs	r5, r0, r1
 2041              	.LVL214:
 2042 004a AB42     		cmp	r3, r5
 2043 004c 04D9     		bls	.L102
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2044              		.loc 2 91 0 is_stmt 1 discriminator 2
 2045 004e 10F8015B 		ldrb	r5, [r0], #1	@ zero_extendqisi2
 2046              	.LVL215:
 2047 0052 00F8025C 		strb	r5, [r0, #-2]
 2048              	.LVL216:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2049              		.loc 2 90 0 discriminator 2
 2050 0056 F7E7     		b	.L103
 2051              	.LVL217:
 2052              	.L102:
 2053              	.LBE168:
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2054              		.loc 2 94 0
 2055 0058 013A     		subs	r2, r2, #1
 2056              	.LVL218:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 2057              		.loc 2 93 0
 2058 005a C818     		adds	r0, r1, r3
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2059              		.loc 2 94 0
 2060 005c 0A44     		add	r2, r2, r1
 2061              	.LVL219:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 2062              		.loc 2 93 0
 2063 005e 0025     		movs	r5, #0
 2064              	.LVL220:
 2065 0060 00F8015C 		strb	r5, [r0, #-1]
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2066              		.loc 2 94 0
 2067 0064 E260     		str	r2, [r4, #12]
 2068              	.LVL221:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2069              		.loc 2 97 0
 2070 0066 0068     		ldr	r0, [r0]	@ unaligned
 2071              	.LBB169:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2072              		.loc 2 99 0
 2073 0068 0433     		adds	r3, r3, #4
 2074              	.LVL222:
 2075              	.LBE169:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2076              		.loc 2 97 0
 2077 006a 0390     		str	r0, [sp, #12]	@ unaligned
 2078              	.LVL223:
 2079              	.LBB170:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2080              		.loc 2 99 0
 2081 006c 0398     		ldr	r0, [sp, #12]
 2082 006e CA18     		adds	r2, r1, r3
 2083 0070 1844     		add	r0, r0, r3
 2084              	.LVL224:
 2085              	.L105:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2086              		.loc 2 99 0 is_stmt 0 discriminator 3
 2087 0072 551A     		subs	r5, r2, r1
 2088              	.LVL225:
 2089 0074 A842     		cmp	r0, r5
 2090 0076 04D9     		bls	.L104
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2091              		.loc 2 100 0 is_stmt 1 discriminator 2
 2092 0078 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 2093              	.LVL226:
 2094 007c 02F8025C 		strb	r5, [r2, #-2]
 2095              	.LVL227:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2096              		.loc 2 99 0 discriminator 2
 2097 0080 F7E7     		b	.L105
 2098              	.LVL228:
 2099              	.L104:
 2100              	.LBE170:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2101              		.loc 2 103 0
 2102 0082 013B     		subs	r3, r3, #1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 2103              		.loc 2 102 0
 2104 0084 0D18     		adds	r5, r1, r0
 2105              	.LVL229:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2106              		.loc 2 103 0
 2107 0086 0B44     		add	r3, r3, r1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 2108              		.loc 2 102 0
 2109 0088 0022     		movs	r2, #0
 2110              	.LVL230:
 2111 008a 05F8012C 		strb	r2, [r5, #-1]
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2112              		.loc 2 103 0
 2113 008e 2361     		str	r3, [r4, #16]
 2114              	.LVL231:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2115              		.loc 2 114 0
 2116 0090 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 2117 0092 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 2118 0094 1B04     		lsls	r3, r3, #16
 2119 0096 43EA0223 		orr	r3, r3, r2, lsl #8
 2120 009a 0A5C     		ldrb	r2, [r1, r0]	@ zero_extendqisi2
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2121              		.loc 2 117 0
 2122 009c 0430     		adds	r0, r0, #4
 2123              	.LVL232:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2124              		.loc 2 114 0
 2125 009e 1343     		orrs	r3, r3, r2
 2126 00a0 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 2127 00a2 43EA0263 		orr	r3, r3, r2, lsl #24
 2128 00a6 6361     		str	r3, [r4, #20]
 2129              	.LVL233:
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2130              		.loc 2 117 0
 2131 00a8 05B0     		add	sp, sp, #20
 2132              	.LCFI17:
 2133              		.cfi_def_cfa_offset 12
 2134              		@ sp needed
 2135 00aa 30BD     		pop	{r4, r5, pc}
 2136              		.cfi_endproc
 2137              	.LFE62:
 2138              		.cantunwind
 2139              		.fnend
 2141              		.section	.text._ZN11sensor_msgs3Joy11deserializeEPh,"axG",%progbits,_ZN11sensor_msgs3Joy11deserial
 2142              		.align	1
 2143              		.weak	_ZN11sensor_msgs3Joy11deserializeEPh
 2144              		.thumb
 2145              		.thumb_func
 2147              	_ZN11sensor_msgs3Joy11deserializeEPh:
 2148              		.fnstart
 2149              	.LFB181:
  70:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 2150              		.loc 8 70 0
 2151              		.cfi_startproc
 2152              		@ args = 0, pretend = 0, frame = 0
 2153              		@ frame_needed = 0, uses_anonymous_args = 0
 2154              	.LVL234:
 2155 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2156              	.LCFI18:
 2157              		.cfi_def_cfa_offset 24
 2158              		.cfi_offset 3, -24
 2159              		.cfi_offset 4, -20
 2160              		.cfi_offset 5, -16
 2161              		.cfi_offset 6, -12
 2162              		.cfi_offset 7, -8
 2163              		.cfi_offset 14, -4
  70:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 2164              		.loc 8 70 0
 2165 0002 0446     		mov	r4, r0
 2166              	.LVL235:
  73:./lib/ros_lib/sensor_msgs/Joy.h ****       uint8_t axes_lengthT = *(inbuffer + offset++);
 2167              		.loc 8 73 0
 2168 0004 0430     		adds	r0, r0, #4
 2169              	.LVL236:
  70:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 2170              		.loc 8 70 0
 2171 0006 0D46     		mov	r5, r1
  73:./lib/ros_lib/sensor_msgs/Joy.h ****       uint8_t axes_lengthT = *(inbuffer + offset++);
 2172              		.loc 8 73 0
 2173 0008 FFF7FEFF 		bl	_ZN8std_msgs6Header11deserializeEPh
 2174              	.LVL237:
  75:./lib/ros_lib/sensor_msgs/Joy.h ****         this->axes = (float*)realloc(this->axes, axes_lengthT * sizeof(float));
 2175              		.loc 8 75 0
 2176 000c 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
  74:./lib/ros_lib/sensor_msgs/Joy.h ****       if(axes_lengthT > axes_length)
 2177              		.loc 8 74 0
 2178 000e 2F5C     		ldrb	r7, [r5, r0]	@ zero_extendqisi2
  73:./lib/ros_lib/sensor_msgs/Joy.h ****       uint8_t axes_lengthT = *(inbuffer + offset++);
 2179              		.loc 8 73 0
 2180 0010 0646     		mov	r6, r0
 2181              	.LVL238:
  75:./lib/ros_lib/sensor_msgs/Joy.h ****         this->axes = (float*)realloc(this->axes, axes_lengthT * sizeof(float));
 2182              		.loc 8 75 0
 2183 0012 BB42     		cmp	r3, r7
 2184 0014 04D2     		bcs	.L110
  76:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += 3;
 2185              		.loc 8 76 0
 2186 0016 B900     		lsls	r1, r7, #2
 2187 0018 206A     		ldr	r0, [r4, #32]
 2188              	.LVL239:
 2189 001a FFF7FEFF 		bl	realloc
 2190              	.LVL240:
 2191 001e 2062     		str	r0, [r4, #32]
 2192              	.L110:
 2193              	.LVL241:
 2194 0020 301D     		adds	r0, r6, #4
 2195              	.LVL242:
  78:./lib/ros_lib/sensor_msgs/Joy.h ****       for( uint8_t i = 0; i < axes_length; i++){
 2196              		.loc 8 78 0
 2197 0022 2776     		strb	r7, [r4, #24]
 2198              	.LVL243:
 2199 0024 2844     		add	r0, r0, r5
 2200              	.LVL244:
 2201 0026 0022     		movs	r2, #0
 2202              	.LVL245:
 2203              	.L112:
 2204              	.LBB171:
  79:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 2205              		.loc 8 79 0 discriminator 3
 2206 0028 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 2207 002a 571C     		adds	r7, r2, #1
 2208 002c D2B2     		uxtb	r2, r2
 2209 002e 9342     		cmp	r3, r2
 2210 0030 A0EB0506 		sub	r6, r0, r5
 2211              	.LVL246:
 2212 0034 00F10400 		add	r0, r0, #4
 2213 0038 14D9     		bls	.L111
 2214              	.LVL247:
 2215              	.LBB172:
  88:./lib/ros_lib/sensor_msgs/Joy.h ****       this->st_axes = u_st_axes.real;
 2216              		.loc 8 88 0 discriminator 2
 2217 003a 10F8023C 		ldrb	r3, [r0, #-2]	@ zero_extendqisi2
 2218 003e 10F8031C 		ldrb	r1, [r0, #-3]	@ zero_extendqisi2
 2219 0042 1B04     		lsls	r3, r3, #16
 2220              	.LVL248:
 2221 0044 43EA0123 		orr	r3, r3, r1, lsl #8
 2222              	.LVL249:
 2223 0048 10F8041C 		ldrb	r1, [r0, #-4]	@ zero_extendqisi2
 2224 004c 0B43     		orrs	r3, r3, r1
 2225 004e 10F8011C 		ldrb	r1, [r0, #-1]	@ zero_extendqisi2
 2226              	.LVL250:
  89:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->st_axes);
 2227              		.loc 8 89 0 discriminator 2
 2228 0052 43EA0163 		orr	r3, r3, r1, lsl #24
 2229 0056 E361     		str	r3, [r4, #28]	@ float
 2230              	.LVL251:
  91:./lib/ros_lib/sensor_msgs/Joy.h ****       }
 2231              		.loc 8 91 0 discriminator 2
 2232 0058 E169     		ldr	r1, [r4, #28]	@ unaligned
 2233 005a 236A     		ldr	r3, [r4, #32]
 2234 005c 43F82210 		str	r1, [r3, r2, lsl #2]	@ unaligned
 2235              	.LVL252:
 2236              	.LBE172:
  79:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 2237              		.loc 8 79 0 discriminator 2
 2238 0060 3A46     		mov	r2, r7
 2239 0062 E1E7     		b	.L112
 2240              	.LVL253:
 2241              	.L111:
 2242              	.LBE171:
  93:./lib/ros_lib/sensor_msgs/Joy.h ****       if(buttons_lengthT > buttons_length)
 2243              		.loc 8 93 0
 2244 0064 AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2245              	.LVL254:
  94:./lib/ros_lib/sensor_msgs/Joy.h ****         this->buttons = (int32_t*)realloc(this->buttons, buttons_lengthT * sizeof(int32_t));
 2246              		.loc 8 94 0
 2247 0066 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 2248 006a BB42     		cmp	r3, r7
 2249 006c 04D2     		bcs	.L113
  95:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += 3;
 2250              		.loc 8 95 0
 2251 006e B900     		lsls	r1, r7, #2
 2252 0070 E06A     		ldr	r0, [r4, #44]
 2253 0072 FFF7FEFF 		bl	realloc
 2254              	.LVL255:
 2255 0076 E062     		str	r0, [r4, #44]
 2256              	.L113:
 2257              	.LVL256:
 2258 0078 331D     		adds	r3, r6, #4
 2259              	.LVL257:
  97:./lib/ros_lib/sensor_msgs/Joy.h ****       for( uint8_t i = 0; i < buttons_length; i++){
 2260              		.loc 8 97 0
 2261 007a 84F82470 		strb	r7, [r4, #36]
 2262              	.LVL258:
 2263 007e 2B44     		add	r3, r3, r5
 2264              	.LVL259:
 2265 0080 0022     		movs	r2, #0
 2266              	.LVL260:
 2267              	.L115:
 2268              	.LBB173:
  98:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 2269              		.loc 8 98 0 discriminator 3
 2270 0082 94F82410 		ldrb	r1, [r4, #36]	@ zero_extendqisi2
 2271 0086 561C     		adds	r6, r2, #1
 2272 0088 D2B2     		uxtb	r2, r2
 2273 008a 9142     		cmp	r1, r2
 2274 008c A3EB0500 		sub	r0, r3, r5
 2275              	.LVL261:
 2276 0090 03F10403 		add	r3, r3, #4
 2277 0094 14D9     		bls	.L114
 2278              	.LVL262:
 2279              	.LBB174:
 108:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->st_buttons);
 2280              		.loc 8 108 0 discriminator 2
 2281 0096 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 2282              	.LVL263:
 2283 009a 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2284              	.LVL264:
 2285 009e 0904     		lsls	r1, r1, #16
 2286              	.LVL265:
 2287 00a0 41EA0021 		orr	r1, r1, r0, lsl #8
 2288 00a4 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2289              	.LVL266:
 2290 00a8 0143     		orrs	r1, r1, r0
 2291 00aa 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2292 00ae 41EA0061 		orr	r1, r1, r0, lsl #24
 2293 00b2 A162     		str	r1, [r4, #40]
 2294              	.LVL267:
 110:./lib/ros_lib/sensor_msgs/Joy.h ****       }
 2295              		.loc 8 110 0 discriminator 2
 2296 00b4 A06A     		ldr	r0, [r4, #40]	@ unaligned
 2297 00b6 E16A     		ldr	r1, [r4, #44]
 2298 00b8 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 2299              	.LVL268:
 2300              	.LBE174:
  98:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 2301              		.loc 8 98 0 discriminator 2
 2302 00bc 3246     		mov	r2, r6
 2303 00be E0E7     		b	.L115
 2304              	.LVL269:
 2305              	.L114:
 2306              	.LBE173:
 113:./lib/ros_lib/sensor_msgs/Joy.h **** 
 2307              		.loc 8 113 0
 2308 00c0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2309              		.cfi_endproc
 2310              	.LFE181:
 2311              		.cantunwind
 2312              		.fnend
 2314              		.section	.text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE8callbackEPh,"axG",%progbits,_ZN3ros10Subsc
 2315              		.align	1
 2316              		.weak	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE8callbackEPh
 2317              		.thumb
 2318              		.thumb_func
 2320              	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE8callbackEPh:
 2321              		.fnstart
 2322              	.LFB227:
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 2323              		.loc 10 72 0
 2324              		.cfi_startproc
 2325              		@ args = 0, pretend = 0, frame = 0
 2326              		@ frame_needed = 0, uses_anonymous_args = 0
 2327              	.LVL270:
 2328 0000 70B5     		push	{r4, r5, r6, lr}
 2329              	.LCFI19:
 2330              		.cfi_def_cfa_offset 16
 2331              		.cfi_offset 4, -16
 2332              		.cfi_offset 5, -12
 2333              		.cfi_offset 6, -8
 2334              		.cfi_offset 14, -4
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 2335              		.loc 10 72 0
 2336 0002 0546     		mov	r5, r0
  73:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 2337              		.loc 10 73 0
 2338 0004 00F10C04 		add	r4, r0, #12
 2339 0008 2046     		mov	r0, r4
 2340              	.LVL271:
 2341 000a FFF7FEFF 		bl	_ZN11sensor_msgs3Joy11deserializeEPh
 2342              	.LVL272:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 2343              		.loc 10 74 0
 2344 000e EB6B     		ldr	r3, [r5, #60]
 2345 0010 2046     		mov	r0, r4
  75:./lib/ros_lib/ros/subscriber.h **** 
 2346              		.loc 10 75 0
 2347 0012 BDE87040 		pop	{r4, r5, r6, lr}
 2348              	.LCFI20:
 2349              		.cfi_restore 14
 2350              		.cfi_restore 6
 2351              		.cfi_restore 5
 2352              		.cfi_restore 4
 2353              		.cfi_def_cfa_offset 0
 2354              	.LVL273:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 2355              		.loc 10 74 0
 2356 0016 1847     		bx	r3	@ indirect register sibling call
 2357              	.LVL274:
 2358              		.cfi_endproc
 2359              	.LFE227:
 2360              		.cantunwind
 2361              		.fnend
 2363              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 2364              		.align	1
 2365              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 2366              		.thumb
 2367              		.thumb_func
 2369              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 2370              		.fnstart
 2371              	.LFB83:
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2372              		.loc 4 123 0
 2373              		.cfi_startproc
 2374              		@ args = 0, pretend = 0, frame = 8
 2375              		@ frame_needed = 0, uses_anonymous_args = 0
 2376              	.LVL275:
 2377 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2378              	.LCFI21:
 2379              		.cfi_def_cfa_offset 32
 2380              		.cfi_offset 4, -20
 2381              		.cfi_offset 5, -16
 2382              		.cfi_offset 6, -12
 2383              		.cfi_offset 7, -8
 2384              		.cfi_offset 14, -4
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 2385              		.loc 4 126 0
 2386 0002 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 2387              	.LVL276:
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2388              		.loc 4 127 0
 2389 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2390              		.loc 4 123 0
 2391 0006 0446     		mov	r4, r0
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2392              		.loc 4 127 0
 2393 0008 AB42     		cmp	r3, r5
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2394              		.loc 4 123 0
 2395 000a 0E46     		mov	r6, r1
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2396              		.loc 4 127 0
 2397 000c 04D2     		bcs	.L118
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2398              		.loc 4 128 0
 2399 000e A900     		lsls	r1, r5, #2
 2400              	.LVL277:
 2401 0010 C068     		ldr	r0, [r0, #12]
 2402              	.LVL278:
 2403 0012 FFF7FEFF 		bl	realloc
 2404              	.LVL279:
 2405 0016 E060     		str	r0, [r4, #12]
 2406              	.L118:
 2407              	.LVL280:
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 2408              		.loc 4 130 0
 2409 0018 2571     		strb	r5, [r4, #4]
 2410              	.LVL281:
 2411 001a 321D     		adds	r2, r6, #4
 2412 001c 0021     		movs	r1, #0
 2413              	.LVL282:
 2414              	.L120:
 2415              	.LBB175:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2416              		.loc 4 131 0 discriminator 3
 2417 001e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2418 0020 4F1C     		adds	r7, r1, #1
 2419 0022 C9B2     		uxtb	r1, r1
 2420 0024 8B42     		cmp	r3, r1
 2421 0026 A2EB0605 		sub	r5, r2, r6
 2422              	.LVL283:
 2423 002a 02F10402 		add	r2, r2, #4
 2424 002e 14D9     		bls	.L119
 2425              	.LVL284:
 2426              	.LBB176:
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 2427              		.loc 4 141 0 discriminator 2
 2428 0030 12F8023C 		ldrb	r3, [r2, #-2]	@ zero_extendqisi2
 2429              	.LVL285:
 2430 0034 12F8030C 		ldrb	r0, [r2, #-3]	@ zero_extendqisi2
 2431              	.LVL286:
 2432 0038 1B04     		lsls	r3, r3, #16
 2433              	.LVL287:
 2434 003a 43EA0023 		orr	r3, r3, r0, lsl #8
 2435 003e 12F8040C 		ldrb	r0, [r2, #-4]	@ zero_extendqisi2
 2436              	.LVL288:
 2437 0042 0343     		orrs	r3, r3, r0
 2438 0044 12F8010C 		ldrb	r0, [r2, #-1]	@ zero_extendqisi2
 2439 0048 43EA0063 		orr	r3, r3, r0, lsl #24
 2440 004c A360     		str	r3, [r4, #8]
 2441              	.LVL289:
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2442              		.loc 4 143 0 discriminator 2
 2443 004e A068     		ldr	r0, [r4, #8]	@ unaligned
 2444 0050 E368     		ldr	r3, [r4, #12]
 2445 0052 43F82100 		str	r0, [r3, r1, lsl #2]	@ unaligned
 2446              	.LVL290:
 2447              	.LBE176:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2448              		.loc 4 131 0 discriminator 2
 2449 0056 3946     		mov	r1, r7
 2450 0058 E1E7     		b	.L120
 2451              	.LVL291:
 2452              	.L119:
 2453              	.LBE175:
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 2454              		.loc 4 145 0
 2455 005a 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2456              	.LVL292:
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 2457              		.loc 4 146 0
 2458 005c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 2459 005e BB42     		cmp	r3, r7
 2460 0060 04D2     		bcs	.L121
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2461              		.loc 4 147 0
 2462 0062 B900     		lsls	r1, r7, #2
 2463 0064 A069     		ldr	r0, [r4, #24]
 2464 0066 FFF7FEFF 		bl	realloc
 2465              	.LVL293:
 2466 006a A061     		str	r0, [r4, #24]
 2467              	.L121:
 2468              	.LVL294:
 2469 006c 2B1D     		adds	r3, r5, #4
 2470              	.LVL295:
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 2471              		.loc 4 149 0
 2472 006e 2774     		strb	r7, [r4, #16]
 2473              	.LVL296:
 2474 0070 3344     		add	r3, r3, r6
 2475              	.LVL297:
 2476 0072 0022     		movs	r2, #0
 2477              	.LVL298:
 2478              	.L123:
 2479              	.LBB177:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2480              		.loc 4 150 0 discriminator 3
 2481 0074 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 2482 0076 571C     		adds	r7, r2, #1
 2483 0078 D2B2     		uxtb	r2, r2
 2484 007a 9142     		cmp	r1, r2
 2485 007c A3EB0605 		sub	r5, r3, r6
 2486              	.LVL299:
 2487 0080 03F10403 		add	r3, r3, #4
 2488 0084 14D9     		bls	.L122
 2489              	.LVL300:
 2490              	.LBB178:
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 2491              		.loc 4 159 0 discriminator 2
 2492 0086 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 2493 008a 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2494 008e 0904     		lsls	r1, r1, #16
 2495              	.LVL301:
 2496 0090 41EA0021 		orr	r1, r1, r0, lsl #8
 2497              	.LVL302:
 2498 0094 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2499 0098 0143     		orrs	r1, r1, r0
 2500 009a 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2501              	.LVL303:
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 2502              		.loc 4 160 0 discriminator 2
 2503 009e 41EA0061 		orr	r1, r1, r0, lsl #24
 2504 00a2 6161     		str	r1, [r4, #20]	@ float
 2505              	.LVL304:
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2506              		.loc 4 162 0 discriminator 2
 2507 00a4 6069     		ldr	r0, [r4, #20]	@ unaligned
 2508 00a6 A169     		ldr	r1, [r4, #24]
 2509 00a8 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 2510              	.LVL305:
 2511              	.LBE178:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2512              		.loc 4 150 0 discriminator 2
 2513 00ac 3A46     		mov	r2, r7
 2514 00ae E1E7     		b	.L123
 2515              	.LVL306:
 2516              	.L122:
 2517              	.LBE177:
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 2518              		.loc 4 164 0
 2519 00b0 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2520              	.LVL307:
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 2521              		.loc 4 165 0
 2522 00b2 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 2523 00b4 BB42     		cmp	r3, r7
 2524 00b6 04D2     		bcs	.L124
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2525              		.loc 4 166 0
 2526 00b8 B900     		lsls	r1, r7, #2
 2527 00ba 606A     		ldr	r0, [r4, #36]
 2528 00bc FFF7FEFF 		bl	realloc
 2529              	.LVL308:
 2530 00c0 6062     		str	r0, [r4, #36]
 2531              	.L124:
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 2532              		.loc 4 167 0
 2533 00c2 2B1D     		adds	r3, r5, #4
 2534              	.LVL309:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2535              		.loc 4 168 0
 2536 00c4 0025     		movs	r5, #0
 2537              	.LBB179:
 2538              	.LBB180:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2539              		.loc 4 176 0
 2540 00c6 AE46     		mov	lr, r5
 2541              	.LBE180:
 2542              	.LBE179:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2543              		.loc 4 168 0
 2544 00c8 2777     		strb	r7, [r4, #28]
 2545              	.LVL310:
 2546              	.L128:
 2547              	.LBB184:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2548              		.loc 4 169 0 discriminator 1
 2549 00ca 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 2550 00cc EFB2     		uxtb	r7, r5
 2551 00ce BA42     		cmp	r2, r7
 2552 00d0 19D9     		bls	.L125
 2553              	.LBB183:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2554              		.loc 4 171 0
 2555 00d2 F058     		ldr	r0, [r6, r3]	@ unaligned
 2556              	.LBB181:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2557              		.loc 4 173 0
 2558 00d4 1A1D     		adds	r2, r3, #4
 2559              	.LBE181:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2560              		.loc 4 171 0
 2561 00d6 0190     		str	r0, [sp, #4]	@ unaligned
 2562              	.LVL311:
 2563              	.LBB182:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2564              		.loc 4 173 0
 2565 00d8 019B     		ldr	r3, [sp, #4]
 2566 00da B118     		adds	r1, r6, r2
 2567 00dc 1344     		add	r3, r3, r2
 2568              	.LVL312:
 2569              	.L127:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2570              		.loc 4 173 0 is_stmt 0 discriminator 3
 2571 00de 881B     		subs	r0, r1, r6
 2572              	.LVL313:
 2573 00e0 8342     		cmp	r3, r0
 2574 00e2 04D9     		bls	.L126
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2575              		.loc 4 174 0 is_stmt 1 discriminator 2
 2576 00e4 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 2577              	.LVL314:
 2578 00e8 01F8020C 		strb	r0, [r1, #-2]
 2579              	.LVL315:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2580              		.loc 4 173 0 discriminator 2
 2581 00ec F7E7     		b	.L127
 2582              	.LVL316:
 2583              	.L126:
 2584              	.LBE182:
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2585              		.loc 4 177 0 discriminator 2
 2586 00ee 013A     		subs	r2, r2, #1
 2587              	.LVL317:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2588              		.loc 4 176 0 discriminator 2
 2589 00f0 F118     		adds	r1, r6, r3
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2590              		.loc 4 177 0 discriminator 2
 2591 00f2 3244     		add	r2, r2, r6
 2592              	.LVL318:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2593              		.loc 4 176 0 discriminator 2
 2594 00f4 01F801EC 		strb	lr, [r1, #-1]
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2595              		.loc 4 177 0 discriminator 2
 2596 00f8 2262     		str	r2, [r4, #32]
 2597              	.LVL319:
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2598              		.loc 4 179 0 discriminator 2
 2599 00fa 216A     		ldr	r1, [r4, #32]	@ unaligned
 2600 00fc 626A     		ldr	r2, [r4, #36]
 2601 00fe 0135     		adds	r5, r5, #1
 2602              	.LVL320:
 2603 0100 42F82710 		str	r1, [r2, r7, lsl #2]	@ unaligned
 2604              	.LVL321:
 2605              	.LBE183:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2606              		.loc 4 169 0 discriminator 2
 2607 0104 E1E7     		b	.L128
 2608              	.LVL322:
 2609              	.L125:
 2610              	.LBE184:
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2611              		.loc 4 182 0
 2612 0106 1846     		mov	r0, r3
 2613 0108 03B0     		add	sp, sp, #12
 2614              	.LCFI22:
 2615              		.cfi_def_cfa_offset 20
 2616              		@ sp needed
 2617 010a F0BD     		pop	{r4, r5, r6, r7, pc}
 2618              		.cfi_endproc
 2619              	.LFE83:
 2620              		.cantunwind
 2621              		.fnend
 2623              		.section	.text._ZN15ArduinoHardware4initEv,"axG",%progbits,_ZN15ArduinoHardware4initEv,comdat
 2624              		.align	1
 2625              		.weak	_ZN15ArduinoHardware4initEv
 2626              		.thumb
 2627              		.thumb_func
 2629              	_ZN15ArduinoHardware4initEv:
 2630              		.fnstart
 2631              	.LFB144:
 2632              		.file 12 "./lib/ros_lib/ArduinoHardware.h"
   1:./lib/ros_lib/ArduinoHardware.h **** /* 
   2:./lib/ros_lib/ArduinoHardware.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ArduinoHardware.h ****  *
   4:./lib/ros_lib/ArduinoHardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ArduinoHardware.h ****  * All rights reserved.
   6:./lib/ros_lib/ArduinoHardware.h ****  *
   7:./lib/ros_lib/ArduinoHardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ArduinoHardware.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ArduinoHardware.h ****  * are met:
  10:./lib/ros_lib/ArduinoHardware.h ****  *
  11:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ArduinoHardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ArduinoHardware.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ArduinoHardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ArduinoHardware.h ****  *    with the distribution.
  17:./lib/ros_lib/ArduinoHardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ArduinoHardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ArduinoHardware.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ArduinoHardware.h ****  *
  21:./lib/ros_lib/ArduinoHardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ArduinoHardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ArduinoHardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ArduinoHardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ArduinoHardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ArduinoHardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ArduinoHardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ArduinoHardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ArduinoHardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ArduinoHardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ArduinoHardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ArduinoHardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ArduinoHardware.h ****  */
  34:./lib/ros_lib/ArduinoHardware.h **** 
  35:./lib/ros_lib/ArduinoHardware.h **** #ifndef ROS_ARDUINO_HARDWARE_H_
  36:./lib/ros_lib/ArduinoHardware.h **** #define ROS_ARDUINO_HARDWARE_H_
  37:./lib/ros_lib/ArduinoHardware.h **** 
  38:./lib/ros_lib/ArduinoHardware.h **** #include "stm32f10x.h"
  39:./lib/ros_lib/ArduinoHardware.h **** #include "stm32_time.h"
  40:./lib/ros_lib/ArduinoHardware.h **** #include "led.h"
  41:./lib/ros_lib/ArduinoHardware.h **** 
  42:./lib/ros_lib/ArduinoHardware.h **** #define BUFFER_SIZE 512
  43:./lib/ros_lib/ArduinoHardware.h **** 
  44:./lib/ros_lib/ArduinoHardware.h **** 
  45:./lib/ros_lib/ArduinoHardware.h **** volatile uint16_t USART_FIFO[BUFFER_SIZE];
  46:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTIN;
  47:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTOUT;
  48:./lib/ros_lib/ArduinoHardware.h **** 
  49:./lib/ros_lib/ArduinoHardware.h **** class ArduinoHardware {
  50:./lib/ros_lib/ArduinoHardware.h ****   public:
  51:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(USART_TypeDef* io , long baud= 115200){
  52:./lib/ros_lib/ArduinoHardware.h ****       iostream = io;
  53:./lib/ros_lib/ArduinoHardware.h ****       baud_ = baud;
  54:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  55:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  56:./lib/ros_lib/ArduinoHardware.h ****     }
  57:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware()
  58:./lib/ros_lib/ArduinoHardware.h ****     {
  59:./lib/ros_lib/ArduinoHardware.h ****       /* Leonardo support */
  60:./lib/ros_lib/ArduinoHardware.h ****       iostream = USART1;
  61:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  63:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  64:./lib/ros_lib/ArduinoHardware.h ****     }
  65:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(ArduinoHardware& h){
  66:./lib/ros_lib/ArduinoHardware.h ****       this->iostream = iostream;
  67:./lib/ros_lib/ArduinoHardware.h ****       this->baud_ = h.baud_;
  68:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  69:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  70:./lib/ros_lib/ArduinoHardware.h ****     }
  71:./lib/ros_lib/ArduinoHardware.h ****   
  72:./lib/ros_lib/ArduinoHardware.h ****     void setBaud(long baud){
  73:./lib/ros_lib/ArduinoHardware.h ****       this->baud_= baud;
  74:./lib/ros_lib/ArduinoHardware.h ****     }
  75:./lib/ros_lib/ArduinoHardware.h ****   
  76:./lib/ros_lib/ArduinoHardware.h ****     int getBaud(){return baud_;}
  77:./lib/ros_lib/ArduinoHardware.h **** 
  78:./lib/ros_lib/ArduinoHardware.h ****     void init(){
 2633              		.loc 12 78 0
 2634              		.cfi_startproc
 2635              		@ args = 0, pretend = 0, frame = 24
 2636              		@ frame_needed = 0, uses_anonymous_args = 0
 2637              	.LVL323:
 2638 0000 70B5     		push	{r4, r5, r6, lr}
 2639              		.save {r4, r5, r6, lr}
 2640              	.LCFI23:
 2641              		.cfi_def_cfa_offset 16
 2642              		.cfi_offset 4, -16
 2643              		.cfi_offset 5, -12
 2644              		.cfi_offset 6, -8
 2645              		.cfi_offset 14, -4
 2646 0002 0446     		mov	r4, r0
 2647              		.pad #24
 2648 0004 86B0     		sub	sp, sp, #24
 2649              	.LCFI24:
 2650              		.cfi_def_cfa_offset 40
  79:./lib/ros_lib/ArduinoHardware.h ****       USART_InitTypeDef usart1_init_struct;
  80:./lib/ros_lib/ArduinoHardware.h ****       /* Bit configuration structure for GPIOA PIN9 and PIN10 */
  81:./lib/ros_lib/ArduinoHardware.h ****       GPIO_InitTypeDef gpioa_init_struct;
  82:./lib/ros_lib/ArduinoHardware.h **** 
  83:./lib/ros_lib/ArduinoHardware.h ****       /* Enalbe clock for USART1, AFIO and GPIOA */
  84:./lib/ros_lib/ArduinoHardware.h ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2Periph_AFIO | 
  85:./lib/ros_lib/ArduinoHardware.h ****                            RCC_APB2Periph_GPIOA, ENABLE);
  86:./lib/ros_lib/ArduinoHardware.h ****                             
  87:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Tx */
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_9;
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  90:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
  91:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 2651              		.loc 12 91 0
 2652 0006 214D     		ldr	r5, .L131
  85:./lib/ros_lib/ArduinoHardware.h ****                             
 2653              		.loc 12 85 0
 2654 0008 0121     		movs	r1, #1
 2655 000a 44F20500 		movw	r0, #16389
 2656              	.LVL324:
 2657 000e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 2658              	.LVL325:
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 2659              		.loc 12 88 0
 2660 0012 4FF40073 		mov	r3, #512
 2661 0016 ADF80430 		strh	r3, [sp, #4]	@ movhi
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 2662              		.loc 12 89 0
 2663 001a 0326     		movs	r6, #3
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 2664              		.loc 12 90 0
 2665 001c 1823     		movs	r3, #24
 2666              		.loc 12 91 0
 2667 001e 01A9     		add	r1, sp, #4
 2668 0020 2846     		mov	r0, r5
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 2669              		.loc 12 90 0
 2670 0022 8DF80730 		strb	r3, [sp, #7]
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 2671              		.loc 12 89 0
 2672 0026 8DF80660 		strb	r6, [sp, #6]
 2673              		.loc 12 91 0
 2674 002a FFF7FEFF 		bl	GPIO_Init
 2675              	.LVL326:
  92:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
  93:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_10;
 2676              		.loc 12 93 0
 2677 002e 4FF48063 		mov	r3, #1024
 2678 0032 ADF80430 		strh	r3, [sp, #4]	@ movhi
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  95:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 2679              		.loc 12 95 0
 2680 0036 0423     		movs	r3, #4
  96:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 2681              		.loc 12 96 0
 2682 0038 0DEB0301 		add	r1, sp, r3
 2683 003c 2846     		mov	r0, r5
  95:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 2684              		.loc 12 95 0
 2685 003e 8DF80730 		strb	r3, [sp, #7]
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 2686              		.loc 12 94 0
 2687 0042 8DF80660 		strb	r6, [sp, #6]
 2688              		.loc 12 96 0
 2689 0046 FFF7FEFF 		bl	GPIO_Init
 2690              	.LVL327:
  97:./lib/ros_lib/ArduinoHardware.h **** 
  98:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 */
  99:./lib/ros_lib/ArduinoHardware.h ****       USART_Cmd(iostream, ENABLE);  
 2691              		.loc 12 99 0
 2692 004a 2068     		ldr	r0, [r4]
 2693 004c 0121     		movs	r1, #1
 2694 004e FFF7FEFF 		bl	USART_Cmd
 2695              	.LVL328:
 100:./lib/ros_lib/ArduinoHardware.h ****       /* Baud rate 115200, 8-bit data, One stop bit
 101:./lib/ros_lib/ArduinoHardware.h ****       * No parity, Do both Rx and Tx, No HW flow control
 102:./lib/ros_lib/ArduinoHardware.h ****       */
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_BaudRate = baud_;   
 2696              		.loc 12 103 0
 2697 0052 6368     		ldr	r3, [r4, #4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 2698              		.loc 12 107 0
 2699 0054 0C22     		movs	r2, #12
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 2700              		.loc 12 103 0
 2701 0056 0293     		str	r3, [sp, #8]
 108:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 109:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 110:./lib/ros_lib/ArduinoHardware.h ****       USART_Init(iostream, &usart1_init_struct);
 2702              		.loc 12 110 0
 2703 0058 02A9     		add	r1, sp, #8
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 2704              		.loc 12 104 0
 2705 005a 0023     		movs	r3, #0
 2706              		.loc 12 110 0
 2707 005c 2068     		ldr	r0, [r4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 2708              		.loc 12 104 0
 2709 005e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 2710              		.loc 12 105 0
 2711 0062 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 2712              		.loc 12 106 0
 2713 0066 ADF81030 		strh	r3, [sp, #16]	@ movhi
 108:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 2714              		.loc 12 108 0
 2715 006a ADF81430 		strh	r3, [sp, #20]	@ movhi
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 2716              		.loc 12 107 0
 2717 006e ADF81220 		strh	r2, [sp, #18]	@ movhi
 2718              		.loc 12 110 0
 2719 0072 FFF7FEFF 		bl	USART_Init
 2720              	.LVL329:
 111:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 112:./lib/ros_lib/ArduinoHardware.h ****       USART_ITConfig(iostream, USART_IT_RXNE, ENABLE);
 2721              		.loc 12 112 0
 2722 0076 0122     		movs	r2, #1
 2723 0078 40F22551 		movw	r1, #1317
 2724 007c 2068     		ldr	r0, [r4]
 2725 007e FFF7FEFF 		bl	USART_ITConfig
 2726              	.LVL330:
 2727              	.LBB185:
 2728              	.LBB186:
 2729              		.file 13 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
   1:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**************************************************************************//**
   2:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @file     core_cm3.h
   3:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @version  V1.30
   5:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @date     30. October 2009
   6:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
   7:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @note
   8:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  10:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  11:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  15:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  16:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  22:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
  23:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  24:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CORE_H__
  26:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  27:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  29:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 10: \n
  31:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  34:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 530: \n
  35:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     return(__regBasePri); \n
  36:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * . 
  38:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 550: \n
  39:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  42:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 754: \n
  43:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  46:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 750: \n
  47:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  50:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 528: \n
  51:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  54:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 751: \n
  55:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  58:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  60:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  61:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  62:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -save */
  63:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e10  */
  64:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e530 */
  65:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e550 */
  66:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e754 */
  67:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e750 */
  68:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e528 */
  69:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e751 */
  70:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  71:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  72:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - CMSIS version number
  75:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
  78:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  79:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  80:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
  81:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  extern "C" {
  82:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif 
  83:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  84:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  88:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  90:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  92:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__ICCARM__)
  93:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
  95:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  96:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  97:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * IO definitions
 106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
 111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                 Register Abstraction
 122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  @{
 125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
 126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }  NVIC_Type;                                               
 148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SCB_Type;                                                
 177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                                      
 314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for SysTick
 363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SysTick_Type;
 372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  union  
 413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   {
 414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } ITM_Type;                                                
 445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 505:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0;
 506:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 510:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1;
 511:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 512:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } InterruptType_Type;
 513:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 514:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 518:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 522:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 525:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 529:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 530:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 534:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 535:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 536:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 537:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } MPU_Type;                                                
 549:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 550:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Type Register */
 551:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 554:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 557:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 560:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Control Register */
 561:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 564:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 567:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 570:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Number Register */
 571:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 574:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Base Address Register */
 575:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 578:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 581:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 584:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 588:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 591:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 594:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 597:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 600:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 603:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 606:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 609:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 612:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 614:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 615:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 616:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 619:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 620:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 621:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 622:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } CoreDebug_Type;
 627:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 628:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 632:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 635:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 638:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 641:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 644:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 647:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 650:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 653:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 656:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 659:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 662:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 665:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 669:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 672:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 676:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 679:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 682:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 685:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 688:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 691:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 694:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 697:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 700:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 703:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 706:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 709:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 713:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 714:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 722:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 729:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 733:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 734:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 736:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 737:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 738:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 740:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 741:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 745:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 749:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 753:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 757:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 758:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 759:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 760:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 762:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ARM armcc specific functions */
 764:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 765:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 768:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                             __nop
 769:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFI                             __wfi
 770:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFE                             __wfe
 771:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __SEV                             __sev
 772:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __REV                             __rev
 776:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __RBIT                            __rbit
 777:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 784:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 785:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 790:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 791:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 792:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 794:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
 795:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 796:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
 797:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 798:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 800:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 801:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 803:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 805:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 808:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 810:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 811:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 813:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
 814:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 815:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
 817:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 818:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 820:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 821:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 823:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 825:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 828:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 830:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 831:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 833:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 834:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 835:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 836:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 838:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 840:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 841:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 843:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 844:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 845:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 846:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 848:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 850:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 851:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 853:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 854:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 856:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 858:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __CLREX(void);
 859:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 860:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 861:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 863:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 864:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 865:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 866:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 867:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 869:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 870:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 872:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 873:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 874:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 875:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 876:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 878:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 879:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 881:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 882:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 883:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 885:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 887:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 888:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 890:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   priMask  PriMask
 891:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 892:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 894:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 896:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 897:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 899:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 900:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 901:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 902:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 903:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 905:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 906:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 908:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask faultMask value
 909:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 910:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
 911:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 912:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 914:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 915:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
 916:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
 917:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
 918:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 919:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
 920:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 921:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 923:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 924:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
 925:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 926:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
 927:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 928:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
 929:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 930:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 932:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 934:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 935:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 937:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 939:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CLREX                           __clrex
 940:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 941:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 942:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 944:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 945:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 946:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 947:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 948:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 950:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regBasePri);
 952:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 953:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 954:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 955:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 957:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 958:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 959:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 960:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 961:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 963:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 966:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 967:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 968:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 970:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 971:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 972:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 974:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 976:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regPriMask);
 978:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 979:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 980:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 981:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 983:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
 984:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 985:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 987:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 989:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regPriMask = (priMask);
 991:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 992:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 993:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 994:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 996:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 997:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 998:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 999:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1000:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1002:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regFaultMask);
1004:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1005:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1006:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1007:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1009:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1011:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1012:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1013:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1015:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1018:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1019:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1020:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1021:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1022:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
1023:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1024:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1025:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1026:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1028:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regControl);
1030:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1031:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1032:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1033:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1034:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1035:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1036:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1037:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1038:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1039:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1041:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regControl = control;
1043:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1044:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1045:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1047:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1048:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1049:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* IAR iccarm specific functions */
1051:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1052:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1055:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1058:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1064:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1076:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1077:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1078:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1080:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1081:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1082:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1083:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1084:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1086:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1087:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1089:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1091:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1094:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1096:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1097:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1099:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* GNU gcc specific functions */
1203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
1261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
1263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
1265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
1270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
1272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
1274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
1281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
1290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
1299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
1301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** * 
1316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** *  @return Control value
1317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in integer value
1338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* TASKING carm specific functions */
1437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*
1439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Including the CMSIS ones.
1442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
1445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   Core  Function Interface containing:
1449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core NVIC Functions
1450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core SysTick Functions
1451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core Reset Functions
1452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
1453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@{*/
1454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t reg_value;
1471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   
1473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return priority grouping field 
1485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 2730              		.loc 13 1504 0
 2731 0082 034B     		ldr	r3, .L131+4
 2732 0084 2022     		movs	r2, #32
 2733 0086 5A60     		str	r2, [r3, #4]
 2734              	.LVL331:
 2735              	.LBE186:
 2736              	.LBE185:
 113:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 global interrupt */
 114:./lib/ros_lib/ArduinoHardware.h ****       NVIC_EnableIRQ(USART1_IRQn);
 115:./lib/ros_lib/ArduinoHardware.h ****     }
 2737              		.loc 12 115 0
 2738 0088 06B0     		add	sp, sp, #24
 2739              	.LCFI25:
 2740              		.cfi_def_cfa_offset 16
 2741              		@ sp needed
 2742 008a 70BD     		pop	{r4, r5, r6, pc}
 2743              	.LVL332:
 2744              	.L132:
 2745              		.align	2
 2746              	.L131:
 2747 008c 00080140 		.word	1073809408
 2748 0090 00E100E0 		.word	-536813312
 2749              		.cfi_endproc
 2750              	.LFE144:
 2751              		.fnend
 2753              		.text
 2754              		.align	1
 2755              		.global	USART1_IRQHandler
 2756              		.thumb
 2757              		.thumb_func
 2759              	USART1_IRQHandler:
 2760              		.fnstart
 2761              	.LFB148:
 116:./lib/ros_lib/ArduinoHardware.h **** 
 117:./lib/ros_lib/ArduinoHardware.h ****     int read(){
 118:./lib/ros_lib/ArduinoHardware.h ****       if(USART_CNTIN == USART_CNTOUT)
 119:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 120:./lib/ros_lib/ArduinoHardware.h ****       
 121:./lib/ros_lib/ArduinoHardware.h ****       int returnVal = USART_FIFO[USART_CNTOUT];
 122:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 123:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 124:./lib/ros_lib/ArduinoHardware.h ****     }
 125:./lib/ros_lib/ArduinoHardware.h **** 
 126:./lib/ros_lib/ArduinoHardware.h ****     void write(uint8_t* data, int length){
 127:./lib/ros_lib/ArduinoHardware.h ****       for(int i=0; i<length; i++){
 128:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 129:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 130:./lib/ros_lib/ArduinoHardware.h ****       }
 131:./lib/ros_lib/ArduinoHardware.h ****     }
 132:./lib/ros_lib/ArduinoHardware.h **** 
 133:./lib/ros_lib/ArduinoHardware.h ****     uint32_t time(){
 134:./lib/ros_lib/ArduinoHardware.h ****       return millis();
 135:./lib/ros_lib/ArduinoHardware.h ****     }
 136:./lib/ros_lib/ArduinoHardware.h **** 
 137:./lib/ros_lib/ArduinoHardware.h ****   protected:
 138:./lib/ros_lib/ArduinoHardware.h ****     USART_TypeDef* iostream;
 139:./lib/ros_lib/ArduinoHardware.h ****     long baud_;
 140:./lib/ros_lib/ArduinoHardware.h **** 
 141:./lib/ros_lib/ArduinoHardware.h **** };
 142:./lib/ros_lib/ArduinoHardware.h **** 
 143:./lib/ros_lib/ArduinoHardware.h **** 
 144:./lib/ros_lib/ArduinoHardware.h **** 
 145:./lib/ros_lib/ArduinoHardware.h **** extern "C"{
 146:./lib/ros_lib/ArduinoHardware.h ****   void USART1_IRQHandler(void){
 2762              		.loc 12 146 0
 2763              		.cfi_startproc
 2764              		@ args = 0, pretend = 0, frame = 0
 2765              		@ frame_needed = 0, uses_anonymous_args = 0
 2766 006e 38B5     		push	{r3, r4, r5, lr}
 2767              		.save {r3, r4, r5, lr}
 2768              	.LCFI26:
 2769              		.cfi_def_cfa_offset 16
 2770              		.cfi_offset 3, -16
 2771              		.cfi_offset 4, -12
 2772              		.cfi_offset 5, -8
 2773              		.cfi_offset 14, -4
 147:./lib/ros_lib/ArduinoHardware.h **** 
 148:./lib/ros_lib/ArduinoHardware.h ****     if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET 
 2774              		.loc 12 148 0
 2775 0070 40F22551 		movw	r1, #1317
 2776 0074 0F48     		ldr	r0, .L140
 2777 0076 FFF7FEFF 		bl	USART_GetITStatus
 2778              	.LVL333:
 149:./lib/ros_lib/ArduinoHardware.h ****       && USART_CNTIN != (( USART_CNTOUT - 1 + BUFFER_SIZE) % BUFFER_SIZE)){
 2779              		.loc 12 149 0
 2780 007a 40B1     		cbz	r0, .L134
 2781              		.loc 12 149 0 is_stmt 0 discriminator 1
 2782 007c 0E4C     		ldr	r4, .L140+4
 2783 007e 2369     		ldr	r3, [r4, #16]
 2784 0080 6269     		ldr	r2, [r4, #20]
 2785 0082 03F2FF13 		addw	r3, r3, #511
 2786 0086 C3F30803 		ubfx	r3, r3, #0, #9
 2787 008a 9342     		cmp	r3, r2
 2788 008c 04D1     		bne	.L135
 2789              	.L134:
 150:./lib/ros_lib/ArduinoHardware.h **** 
 151:./lib/ros_lib/ArduinoHardware.h ****       USART_FIFO[USART_CNTIN] = USART_ReceiveData(USART1);
 152:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 153:./lib/ros_lib/ArduinoHardware.h ****     }else{
 154:./lib/ros_lib/ArduinoHardware.h ****       // Should NEVER reach this point!
 155:./lib/ros_lib/ArduinoHardware.h ****       (void)USART_ReceiveData(USART1);  // Clear inerrupt flag by reading byte
 156:./lib/ros_lib/ArduinoHardware.h ****     }
 157:./lib/ros_lib/ArduinoHardware.h ****   }   
 2790              		.loc 12 157 0 is_stmt 1
 2791 008e BDE83840 		pop	{r3, r4, r5, lr}
 2792              	.LCFI27:
 2793              		.cfi_remember_state
 2794              		.cfi_restore 14
 2795              		.cfi_restore 5
 2796              		.cfi_restore 4
 2797              		.cfi_restore 3
 2798              		.cfi_def_cfa_offset 0
 155:./lib/ros_lib/ArduinoHardware.h ****     }
 2799              		.loc 12 155 0
 2800 0092 0848     		ldr	r0, .L140
 2801 0094 FFF7FEBF 		b	USART_ReceiveData
 2802              	.LVL334:
 2803              	.L135:
 2804              	.LCFI28:
 2805              		.cfi_restore_state
 151:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 2806              		.loc 12 151 0
 2807 0098 0648     		ldr	r0, .L140
 2808 009a 6569     		ldr	r5, [r4, #20]
 2809 009c FFF7FEFF 		bl	USART_ReceiveData
 2810              	.LVL335:
 2811 00a0 04EB4505 		add	r5, r4, r5, lsl #1
 2812 00a4 2883     		strh	r0, [r5, #24]	@ movhi
 152:./lib/ros_lib/ArduinoHardware.h ****     }else{
 2813              		.loc 12 152 0
 2814 00a6 6369     		ldr	r3, [r4, #20]
 2815 00a8 0133     		adds	r3, r3, #1
 2816 00aa C3F30803 		ubfx	r3, r3, #0, #9
 2817 00ae 6361     		str	r3, [r4, #20]
 2818 00b0 38BD     		pop	{r3, r4, r5, pc}
 2819              	.L141:
 2820 00b2 00BF     		.align	2
 2821              	.L140:
 2822 00b4 00380140 		.word	1073821696
 2823 00b8 00000000 		.word	.LANCHOR1
 2824              		.cfi_endproc
 2825              	.LFE148:
 2826              		.fnend
 2828              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc,"axG",%p
 2829              		.align	1
 2830              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 2831              		.thumb
 2832              		.thumb_func
 2834              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:
 2835              		.fnstart
 2836              	.LFB214:
 289:./lib/ros_lib/ros/node_handle.h **** 
 290:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 291:./lib/ros_lib/ros/node_handle.h ****        * Time functions
 292:./lib/ros_lib/ros/node_handle.h ****        */
 293:./lib/ros_lib/ros/node_handle.h **** 
 294:./lib/ros_lib/ros/node_handle.h ****       void requestSyncTime()
 295:./lib/ros_lib/ros/node_handle.h ****       {
 296:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 297:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_TIME, &t);
 298:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 299:./lib/ros_lib/ros/node_handle.h ****       }
 300:./lib/ros_lib/ros/node_handle.h **** 
 301:./lib/ros_lib/ros/node_handle.h ****       void syncTime(uint8_t * data)
 302:./lib/ros_lib/ros/node_handle.h ****       {
 303:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 304:./lib/ros_lib/ros/node_handle.h ****         uint32_t offset = hardware_.time() - rt_time;
 305:./lib/ros_lib/ros/node_handle.h **** 
 306:./lib/ros_lib/ros/node_handle.h ****         t.deserialize(data);
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 308:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 309:./lib/ros_lib/ros/node_handle.h **** 
 310:./lib/ros_lib/ros/node_handle.h ****         this->setNow(t.data);
 311:./lib/ros_lib/ros/node_handle.h ****         last_sync_receive_time = hardware_.time();
 312:./lib/ros_lib/ros/node_handle.h ****       }
 313:./lib/ros_lib/ros/node_handle.h **** 
 314:./lib/ros_lib/ros/node_handle.h ****       Time now()
 315:./lib/ros_lib/ros/node_handle.h ****       {
 316:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 317:./lib/ros_lib/ros/node_handle.h ****         Time current_time;
 318:./lib/ros_lib/ros/node_handle.h ****         current_time.sec = ms/1000 + sec_offset;
 319:./lib/ros_lib/ros/node_handle.h ****         current_time.nsec = (ms%1000)*1000000UL + nsec_offset;
 320:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(current_time.sec, current_time.nsec);
 321:./lib/ros_lib/ros/node_handle.h ****         return current_time;
 322:./lib/ros_lib/ros/node_handle.h ****       }
 323:./lib/ros_lib/ros/node_handle.h **** 
 324:./lib/ros_lib/ros/node_handle.h ****       void setNow( Time & new_now )
 325:./lib/ros_lib/ros/node_handle.h ****       {
 326:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 327:./lib/ros_lib/ros/node_handle.h ****         sec_offset = new_now.sec - ms/1000 - 1;
 328:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 329:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 330:./lib/ros_lib/ros/node_handle.h ****       }
 331:./lib/ros_lib/ros/node_handle.h **** 
 332:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 333:./lib/ros_lib/ros/node_handle.h ****        * Topic Management
 334:./lib/ros_lib/ros/node_handle.h ****        */
 335:./lib/ros_lib/ros/node_handle.h **** 
 336:./lib/ros_lib/ros/node_handle.h ****       /* Register a new publisher */
 337:./lib/ros_lib/ros/node_handle.h ****       bool advertise(Publisher & p)
 338:./lib/ros_lib/ros/node_handle.h ****       {
 339:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_PUBLISHERS; i++){
 340:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 341:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 342:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 343:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 344:./lib/ros_lib/ros/node_handle.h ****             return true;
 345:./lib/ros_lib/ros/node_handle.h ****           }
 346:./lib/ros_lib/ros/node_handle.h ****         }
 347:./lib/ros_lib/ros/node_handle.h ****         return false;
 348:./lib/ros_lib/ros/node_handle.h ****       }
 349:./lib/ros_lib/ros/node_handle.h **** 
 350:./lib/ros_lib/ros/node_handle.h ****       /* Register a new subscriber */
 351:./lib/ros_lib/ros/node_handle.h ****       template<typename MsgT>
 352:./lib/ros_lib/ros/node_handle.h ****       bool subscribe(Subscriber< MsgT> & s){
 353:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 354:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 355:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 356:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 357:./lib/ros_lib/ros/node_handle.h ****             return true;
 358:./lib/ros_lib/ros/node_handle.h ****           }
 359:./lib/ros_lib/ros/node_handle.h ****         }
 360:./lib/ros_lib/ros/node_handle.h ****         return false;
 361:./lib/ros_lib/ros/node_handle.h ****       }
 362:./lib/ros_lib/ros/node_handle.h **** 
 363:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Server */
 364:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 365:./lib/ros_lib/ros/node_handle.h ****       bool advertiseService(ServiceServer<MReq,MRes>& srv){
 366:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 367:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 368:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 369:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 370:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 371:./lib/ros_lib/ros/node_handle.h ****             return v;
 372:./lib/ros_lib/ros/node_handle.h ****           }
 373:./lib/ros_lib/ros/node_handle.h ****         }
 374:./lib/ros_lib/ros/node_handle.h ****         return false;
 375:./lib/ros_lib/ros/node_handle.h ****       }
 376:./lib/ros_lib/ros/node_handle.h **** 
 377:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Client */
 378:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 379:./lib/ros_lib/ros/node_handle.h ****       bool serviceClient(ServiceClient<MReq, MRes>& srv){
 380:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 381:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 382:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 383:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 384:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 385:./lib/ros_lib/ros/node_handle.h ****             return v;
 386:./lib/ros_lib/ros/node_handle.h ****           }
 387:./lib/ros_lib/ros/node_handle.h ****         }
 388:./lib/ros_lib/ros/node_handle.h ****         return false;
 389:./lib/ros_lib/ros/node_handle.h ****       }
 390:./lib/ros_lib/ros/node_handle.h **** 
 391:./lib/ros_lib/ros/node_handle.h ****       void negotiateTopics()
 392:./lib/ros_lib/ros/node_handle.h ****       {
 393:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::TopicInfo ti;
 394:./lib/ros_lib/ros/node_handle.h ****         int i;
 395:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_PUBLISHERS; i++)
 396:./lib/ros_lib/ros/node_handle.h ****         {
 397:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] != 0) // non-empty slot
 398:./lib/ros_lib/ros/node_handle.h ****           {
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = publishers[i]->id_;
 400:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 401:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 402:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 403:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 404:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 405:./lib/ros_lib/ros/node_handle.h ****           }
 406:./lib/ros_lib/ros/node_handle.h ****         }
 407:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_SUBSCRIBERS; i++)
 408:./lib/ros_lib/ros/node_handle.h ****         {
 409:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] != 0) // non-empty slot
 410:./lib/ros_lib/ros/node_handle.h ****           {
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = subscribers[i]->id_;
 412:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 413:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 414:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 415:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 416:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 417:./lib/ros_lib/ros/node_handle.h ****           }
 418:./lib/ros_lib/ros/node_handle.h ****         }
 419:./lib/ros_lib/ros/node_handle.h ****         configured_ = true;
 420:./lib/ros_lib/ros/node_handle.h ****       }
 421:./lib/ros_lib/ros/node_handle.h **** 
 422:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg * msg)
 423:./lib/ros_lib/ros/node_handle.h ****       {
 424:./lib/ros_lib/ros/node_handle.h ****         if(id >= 100 && !configured_)
 425:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 426:./lib/ros_lib/ros/node_handle.h **** 
 427:./lib/ros_lib/ros/node_handle.h ****         /* serialize message */
 428:./lib/ros_lib/ros/node_handle.h ****         uint16_t l = msg->serialize(message_out+7);
 429:./lib/ros_lib/ros/node_handle.h **** 
 430:./lib/ros_lib/ros/node_handle.h ****         /* setup the header */
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[0] = 0xff;
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 435:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 437:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 438:./lib/ros_lib/ros/node_handle.h **** 
 439:./lib/ros_lib/ros/node_handle.h ****         /* calculate checksum */
 440:./lib/ros_lib/ros/node_handle.h ****         int chk = 0;
 441:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 442:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 443:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 444:./lib/ros_lib/ros/node_handle.h ****         message_out[l++] = 255 - (chk%256);
 445:./lib/ros_lib/ros/node_handle.h **** 
 446:./lib/ros_lib/ros/node_handle.h ****         if( l <= OUTPUT_SIZE ){
 447:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 448:./lib/ros_lib/ros/node_handle.h ****           return l;
 449:./lib/ros_lib/ros/node_handle.h ****         }else{
 450:./lib/ros_lib/ros/node_handle.h ****           logerror("Message from device dropped: message larger than buffer.");
 451:./lib/ros_lib/ros/node_handle.h ****           return -1;
 452:./lib/ros_lib/ros/node_handle.h ****         }
 453:./lib/ros_lib/ros/node_handle.h ****       }
 454:./lib/ros_lib/ros/node_handle.h **** 
 455:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 456:./lib/ros_lib/ros/node_handle.h ****        * Logging
 457:./lib/ros_lib/ros/node_handle.h ****        */
 458:./lib/ros_lib/ros/node_handle.h **** 
 459:./lib/ros_lib/ros/node_handle.h ****     private:
 460:./lib/ros_lib/ros/node_handle.h ****       void log(char byte, const char * msg){
 461:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::Log l;
 462:./lib/ros_lib/ros/node_handle.h ****         l.level= byte;
 463:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 464:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 465:./lib/ros_lib/ros/node_handle.h ****       }
 466:./lib/ros_lib/ros/node_handle.h **** 
 467:./lib/ros_lib/ros/node_handle.h ****     public:
 468:./lib/ros_lib/ros/node_handle.h ****       void logdebug(const char* msg){
 469:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ROSDEBUG, msg);
 470:./lib/ros_lib/ros/node_handle.h ****       }
 471:./lib/ros_lib/ros/node_handle.h ****       void loginfo(const char * msg){
 472:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::INFO, msg);
 473:./lib/ros_lib/ros/node_handle.h ****       }
 474:./lib/ros_lib/ros/node_handle.h ****       void logwarn(const char *msg){
 475:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::WARN, msg);
 476:./lib/ros_lib/ros/node_handle.h ****       }
 477:./lib/ros_lib/ros/node_handle.h ****       void logerror(const char*msg){
 2837              		.loc 11 477 0
 2838              		.cfi_startproc
 2839              		@ args = 0, pretend = 0, frame = 16
 2840              		@ frame_needed = 0, uses_anonymous_args = 0
 2841              	.LVL336:
 2842 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 2843              		.save {lr}
 2844              		.pad #20
 2845              	.LCFI29:
 2846              		.cfi_def_cfa_offset 24
 2847              		.cfi_offset 14, -4
 2848              	.LVL337:
 2849              	.LBB193:
 2850              	.LBB194:
 2851              	.LBB195:
 2852              	.LBB196:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2853              		.loc 3 25 0
 2854 0002 074B     		ldr	r3, .L143
 2855              	.LBE196:
 2856              	.LBE195:
 463:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2857              		.loc 11 463 0
 2858 0004 0391     		str	r1, [sp, #12]
 2859              	.LBB198:
 2860              	.LBB197:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2861              		.loc 3 25 0
 2862 0006 0193     		str	r3, [sp, #4]
 2863              	.LVL338:
 2864              	.LBE197:
 2865              	.LBE198:
 462:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 2866              		.loc 11 462 0
 2867 0008 0323     		movs	r3, #3
 2868 000a 8DF80830 		strb	r3, [sp, #8]
 464:./lib/ros_lib/ros/node_handle.h ****       }
 2869              		.loc 11 464 0
 2870 000e 0368     		ldr	r3, [r0]
 2871 0010 01AA     		add	r2, sp, #4
 2872 0012 1B68     		ldr	r3, [r3]
 2873 0014 0721     		movs	r1, #7
 2874              	.LVL339:
 2875 0016 9847     		blx	r3
 2876              	.LVL340:
 2877              	.LBE194:
 2878              	.LBE193:
 478:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ERROR, msg);
 479:./lib/ros_lib/ros/node_handle.h ****       }
 2879              		.loc 11 479 0
 2880 0018 05B0     		add	sp, sp, #20
 2881              	.LCFI30:
 2882              		.cfi_def_cfa_offset 4
 2883              		@ sp needed
 2884 001a 5DF804FB 		ldr	pc, [sp], #4
 2885              	.L144:
 2886 001e 00BF     		.align	2
 2887              	.L143:
 2888 0020 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 2889              		.cfi_endproc
 2890              	.LFE214:
 2891              		.fnend
 2893              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE,"
 2894              		.align	1
 2895              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 2896              		.thumb
 2897              		.thumb_func
 2899              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:
 2900              		.fnstart
 2901              	.LFB220:
 422:./lib/ros_lib/ros/node_handle.h ****       {
 2902              		.loc 11 422 0
 2903              		.cfi_startproc
 2904              		@ args = 0, pretend = 0, frame = 0
 2905              		@ frame_needed = 0, uses_anonymous_args = 0
 2906              	.LVL341:
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 2907              		.loc 11 424 0
 2908 0000 6329     		cmp	r1, #99
 422:./lib/ros_lib/ros/node_handle.h ****       {
 2909              		.loc 11 422 0
 2910 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2911              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 2912              	.LCFI31:
 2913              		.cfi_def_cfa_offset 32
 2914              		.cfi_offset 3, -32
 2915              		.cfi_offset 4, -28
 2916              		.cfi_offset 5, -24
 2917              		.cfi_offset 6, -20
 2918              		.cfi_offset 7, -16
 2919              		.cfi_offset 8, -12
 2920              		.cfi_offset 9, -8
 2921              		.cfi_offset 14, -4
 422:./lib/ros_lib/ros/node_handle.h ****       {
 2922              		.loc 11 422 0
 2923 0006 0446     		mov	r4, r0
 2924 0008 0E46     		mov	r6, r1
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 2925              		.loc 11 424 0
 2926 000a 03DD     		ble	.L146
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 2927              		.loc 11 424 0 is_stmt 0 discriminator 1
 2928 000c 90F8F454 		ldrb	r5, [r0, #1268]	@ zero_extendqisi2
 2929 0010 002D     		cmp	r5, #0
 2930 0012 4FD0     		beq	.L147
 2931              	.L146:
 428:./lib/ros_lib/ros/node_handle.h **** 
 2932              		.loc 11 428 0 is_stmt 1
 2933 0014 1368     		ldr	r3, [r2]
 2934 0016 04F21F21 		addw	r1, r4, #543
 2935              	.LVL342:
 2936 001a 1B68     		ldr	r3, [r3]
 2937 001c 1046     		mov	r0, r2
 2938              	.LVL343:
 2939 001e 9847     		blx	r3
 2940              	.LVL344:
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 2941              		.loc 11 431 0
 2942 0020 FF22     		movs	r2, #255
 2943 0022 84F81822 		strb	r2, [r4, #536]
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 2944              		.loc 11 432 0
 2945 0026 FE22     		movs	r2, #254
 428:./lib/ros_lib/ros/node_handle.h **** 
 2946              		.loc 11 428 0
 2947 0028 83B2     		uxth	r3, r0
 2948              	.LVL345:
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 2949              		.loc 11 432 0
 2950 002a 84F81922 		strb	r2, [r4, #537]
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 2951              		.loc 11 433 0
 2952 002e C2B2     		uxtb	r2, r0
 434:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 2953              		.loc 11 434 0
 2954 0030 C0F30720 		ubfx	r0, r0, #8, #8
 2955 0034 84F81B02 		strb	r0, [r4, #539]
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 2956              		.loc 11 435 0
 2957 0038 1044     		add	r0, r0, r2
 2958 003a C043     		mvns	r0, r0
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 2959              		.loc 11 436 0
 2960 003c 84F81D62 		strb	r6, [r4, #541]
 437:./lib/ros_lib/ros/node_handle.h **** 
 2961              		.loc 11 437 0
 2962 0040 46F30726 		sbfx	r6, r6, #8, #8
 2963              	.LVL346:
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 2964              		.loc 11 433 0
 2965 0044 84F81A22 		strb	r2, [r4, #538]
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 2966              		.loc 11 435 0
 2967 0048 84F81C02 		strb	r0, [r4, #540]
 437:./lib/ros_lib/ros/node_handle.h **** 
 2968              		.loc 11 437 0
 2969 004c 84F81E62 		strb	r6, [r4, #542]
 2970              	.LVL347:
 2971 0050 04F50770 		add	r0, r4, #540
 2972              	.LBB203:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 2973              		.loc 11 441 0
 2974 0054 0521     		movs	r1, #5
 2975              	.LBE203:
 440:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 2976              		.loc 11 440 0
 2977 0056 0022     		movs	r2, #0
 2978              	.LBB204:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 2979              		.loc 11 441 0
 2980 0058 9E1D     		adds	r6, r3, #6
 2981              	.LVL348:
 2982              	.L149:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 2983              		.loc 11 441 0 is_stmt 0 discriminator 3
 2984 005a B142     		cmp	r1, r6
 2985 005c 04DC     		bgt	.L148
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 2986              		.loc 11 442 0 is_stmt 1 discriminator 2
 2987 005e 10F8015F 		ldrb	r5, [r0, #1]!	@ zero_extendqisi2
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 2988              		.loc 11 441 0 discriminator 2
 2989 0062 0131     		adds	r1, r1, #1
 2990              	.LVL349:
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 2991              		.loc 11 442 0 discriminator 2
 2992 0064 2A44     		add	r2, r2, r5
 2993              	.LVL350:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 2994              		.loc 11 441 0 discriminator 2
 2995 0066 F8E7     		b	.L149
 2996              	.L148:
 2997              	.LVL351:
 2998              	.LBE204:
 444:./lib/ros_lib/ros/node_handle.h **** 
 2999              		.loc 11 444 0
 3000 0068 D243     		mvns	r2, r2
 3001              	.LVL352:
 3002 006a 03F10806 		add	r6, r3, #8
 3003 006e 0733     		adds	r3, r3, #7
 3004              	.LVL353:
 3005 0070 B6B2     		uxth	r6, r6
 3006              	.LVL354:
 3007 0072 9BB2     		uxth	r3, r3
 3008 0074 2344     		add	r3, r3, r4
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 3009              		.loc 11 446 0
 3010 0076 B6F5007F 		cmp	r6, #512
 444:./lib/ros_lib/ros/node_handle.h **** 
 3011              		.loc 11 444 0
 3012 007a 83F81822 		strb	r2, [r3, #536]
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 3013              		.loc 11 446 0
 3014 007e 13D8     		bhi	.L150
 447:./lib/ros_lib/ros/node_handle.h ****           return l;
 3015              		.loc 11 447 0
 3016 0080 04F50678 		add	r8, r4, #536
 3017 0084 3546     		mov	r5, r6
 3018              	.LVL355:
 3019 0086 4746     		mov	r7, r8
 3020              	.LBB205:
 3021              	.LBB206:
 128:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 3022              		.loc 12 128 0
 3023 0088 DFF83490 		ldr	r9, .L157+4
 3024              	.LVL356:
 3025              	.L152:
 127:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 3026              		.loc 12 127 0
 3027 008c C8EB0703 		rsb	r3, r8, r7
 3028 0090 9E42     		cmp	r6, r3
 3029 0092 0FDD     		ble	.L147
 3030              	.L155:
 128:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 3031              		.loc 12 128 0
 3032 0094 B9F80030 		ldrh	r3, [r9]
 3033 0098 5B06     		lsls	r3, r3, #25
 3034 009a FBD5     		bpl	.L155
 129:./lib/ros_lib/ArduinoHardware.h ****       }
 3035              		.loc 12 129 0
 3036 009c 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 3037              	.LVL357:
 3038 00a0 6068     		ldr	r0, [r4, #4]
 3039 00a2 FFF7FEFF 		bl	USART_SendData
 3040              	.LVL358:
 3041 00a6 F1E7     		b	.L152
 3042              	.LVL359:
 3043              	.L150:
 3044              	.LBE206:
 3045              	.LBE205:
 450:./lib/ros_lib/ros/node_handle.h ****           return -1;
 3046              		.loc 11 450 0
 3047 00a8 0449     		ldr	r1, .L157
 3048              	.LVL360:
 3049 00aa 2046     		mov	r0, r4
 3050 00ac FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 3051              	.LVL361:
 451:./lib/ros_lib/ros/node_handle.h ****         }
 3052              		.loc 11 451 0
 3053 00b0 4FF0FF35 		mov	r5, #-1
 3054              	.LVL362:
 3055              	.L147:
 453:./lib/ros_lib/ros/node_handle.h **** 
 3056              		.loc 11 453 0
 3057 00b4 2846     		mov	r0, r5
 3058 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3059              	.LVL363:
 3060              	.L158:
 3061 00ba 00BF     		.align	2
 3062              	.L157:
 3063 00bc 82010000 		.word	.LC15
 3064 00c0 00380140 		.word	1073821696
 3065              		.cfi_endproc
 3066              	.LFE220:
 3067              		.fnend
 3069              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv,"a
 3070              		.align	1
 3071              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 3072              		.thumb
 3073              		.thumb_func
 3075              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:
 3076              		.fnstart
 3077              	.LFB217:
 294:./lib/ros_lib/ros/node_handle.h ****       {
 3078              		.loc 11 294 0
 3079              		.cfi_startproc
 3080              		@ args = 0, pretend = 0, frame = 16
 3081              		@ frame_needed = 0, uses_anonymous_args = 0
 3082              	.LVL364:
 3083 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 3084              		.save {r4, lr}
 3085              		.pad #16
 3086              	.LCFI32:
 3087              		.cfi_def_cfa_offset 24
 3088              		.cfi_offset 4, -8
 3089              		.cfi_offset 14, -4
 3090              	.LVL365:
 3091              	.LBB207:
 3092              	.LBB208:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 3093              		.loc 1 19 0
 3094 0002 084B     		ldr	r3, .L160
 3095              	.LBE208:
 3096              	.LBE207:
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 3097              		.loc 11 297 0
 3098 0004 01AA     		add	r2, sp, #4
 3099              	.LVL366:
 3100              	.LBB212:
 3101              	.LBB211:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 3102              		.loc 1 19 0
 3103 0006 0193     		str	r3, [sp, #4]
 3104              	.LVL367:
 3105              	.LBB209:
 3106              	.LBB210:
 3107              		.file 14 "./lib/ros_lib/ros/time.h"
   1:./lib/ros_lib/ros/time.h **** /*
   2:./lib/ros_lib/ros/time.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/time.h ****  *
   4:./lib/ros_lib/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/time.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/time.h ****  *
   7:./lib/ros_lib/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/time.h ****  * are met:
  10:./lib/ros_lib/ros/time.h ****  *
  11:./lib/ros_lib/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/time.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/time.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/time.h ****  *
  21:./lib/ros_lib/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/time.h ****  */
  34:./lib/ros_lib/ros/time.h **** 
  35:./lib/ros_lib/ros/time.h **** #ifndef ROS_TIME_H_
  36:./lib/ros_lib/ros/time.h **** #define ROS_TIME_H_
  37:./lib/ros_lib/ros/time.h **** 
  38:./lib/ros_lib/ros/time.h **** #include <math.h>
  39:./lib/ros_lib/ros/time.h **** #include <stdint.h>
  40:./lib/ros_lib/ros/time.h **** 
  41:./lib/ros_lib/ros/time.h **** #include "ros/duration.h"
  42:./lib/ros_lib/ros/time.h **** 
  43:./lib/ros_lib/ros/time.h **** namespace ros
  44:./lib/ros_lib/ros/time.h **** {
  45:./lib/ros_lib/ros/time.h ****   void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  46:./lib/ros_lib/ros/time.h **** 
  47:./lib/ros_lib/ros/time.h ****   class Time
  48:./lib/ros_lib/ros/time.h ****   {
  49:./lib/ros_lib/ros/time.h ****     public:
  50:./lib/ros_lib/ros/time.h ****       uint32_t sec, nsec;
  51:./lib/ros_lib/ros/time.h **** 
  52:./lib/ros_lib/ros/time.h ****       Time() : sec(0), nsec(0) {}
 3108              		.loc 14 52 0
 3109 0008 0023     		movs	r3, #0
 3110 000a 0293     		str	r3, [sp, #8]
 3111 000c 0393     		str	r3, [sp, #12]
 3112              	.LVL368:
 3113              	.LBE210:
 3114              	.LBE209:
 3115              	.LBE211:
 3116              	.LBE212:
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 3117              		.loc 11 297 0
 3118 000e 0368     		ldr	r3, [r0]
 3119 0010 0A21     		movs	r1, #10
 3120 0012 1B68     		ldr	r3, [r3]
 294:./lib/ros_lib/ros/node_handle.h ****       {
 3121              		.loc 11 294 0
 3122 0014 0446     		mov	r4, r0
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 3123              		.loc 11 297 0
 3124 0016 9847     		blx	r3
 3125              	.LVL369:
 3126              	.LBB213:
 3127              	.LBB214:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3128              		.loc 12 134 0
 3129 0018 FFF7FEFF 		bl	millis
 3130              	.LVL370:
 3131              	.LBE214:
 3132              	.LBE213:
 298:./lib/ros_lib/ros/node_handle.h ****       }
 3133              		.loc 11 298 0
 3134 001c E060     		str	r0, [r4, #12]
 299:./lib/ros_lib/ros/node_handle.h **** 
 3135              		.loc 11 299 0
 3136 001e 04B0     		add	sp, sp, #16
 3137              	.LCFI33:
 3138              		.cfi_def_cfa_offset 8
 3139              		@ sp needed
 3140 0020 10BD     		pop	{r4, pc}
 3141              	.LVL371:
 3142              	.L161:
 3143 0022 00BF     		.align	2
 3144              	.L160:
 3145 0024 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 3146              		.cfi_endproc
 3147              	.LFE217:
 3148              		.fnend
 3150              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv,"a
 3151              		.align	1
 3152              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 3153              		.thumb
 3154              		.thumb_func
 3156              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:
 3157              		.fnstart
 3158              	.LFB218:
 391:./lib/ros_lib/ros/node_handle.h ****       {
 3159              		.loc 11 391 0
 3160              		.cfi_startproc
 3161              		@ args = 0, pretend = 0, frame = 24
 3162              		@ frame_needed = 0, uses_anonymous_args = 0
 3163              	.LVL372:
 3164 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3165              		.save {r4, r5, r6, r7, r8, lr}
 3166              	.LCFI34:
 3167              		.cfi_def_cfa_offset 24
 3168              		.cfi_offset 4, -24
 3169              		.cfi_offset 5, -20
 3170              		.cfi_offset 6, -16
 3171              		.cfi_offset 7, -12
 3172              		.cfi_offset 8, -8
 3173              		.cfi_offset 14, -4
 3174 0004 0446     		mov	r4, r0
 3175              	.LBB220:
 3176              	.LBB221:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 3177              		.loc 2 34 0
 3178 0006 2B4B     		ldr	r3, .L175
 3179              	.LBE221:
 3180              	.LBE220:
 391:./lib/ros_lib/ros/node_handle.h ****       {
 3181              		.loc 11 391 0
 3182              		.pad #24
 3183 0008 86B0     		sub	sp, sp, #24
 3184              	.LCFI35:
 3185              		.cfi_def_cfa_offset 48
 3186              	.LVL373:
 3187              	.LBB223:
 3188              	.LBB222:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 3189              		.loc 2 34 0
 3190 000a 0093     		str	r3, [sp]
 3191 000c 2A4B     		ldr	r3, .L175+4
 3192 000e 0022     		movs	r2, #0
 3193 0010 ADF80420 		strh	r2, [sp, #4]	@ movhi
 3194 0014 0293     		str	r3, [sp, #8]
 3195 0016 0393     		str	r3, [sp, #12]
 3196 0018 0493     		str	r3, [sp, #16]
 3197 001a 0592     		str	r2, [sp, #20]
 3198              	.LVL374:
 3199 001c 00F21446 		addw	r6, r0, #1044
 3200 0020 00F58F65 		add	r5, r0, #1144
 3201              	.LBE222:
 3202              	.LBE223:
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 3203              		.loc 11 403 0
 3204 0024 4FF40077 		mov	r7, #512
 3205              	.LVL375:
 3206              	.L164:
 397:./lib/ros_lib/ros/node_handle.h ****           {
 3207              		.loc 11 397 0
 3208 0028 56F8043F 		ldr	r3, [r6, #4]!
 3209 002c BBB1     		cbz	r3, .L163
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 3210              		.loc 11 399 0
 3211 002e 9A68     		ldr	r2, [r3, #8]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3212              		.loc 11 401 0
 3213 0030 5868     		ldr	r0, [r3, #4]
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 3214              		.loc 11 399 0
 3215 0032 ADF80420 		strh	r2, [sp, #4]	@ movhi
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 3216              		.loc 11 400 0
 3217 0036 1A68     		ldr	r2, [r3]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3218              		.loc 11 401 0
 3219 0038 0368     		ldr	r3, [r0]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 3220              		.loc 11 400 0
 3221 003a 0292     		str	r2, [sp, #8]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3222              		.loc 11 401 0
 3223 003c 9B68     		ldr	r3, [r3, #8]
 3224 003e 9847     		blx	r3
 3225              	.LVL376:
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 3226              		.loc 11 402 0
 3227 0040 3368     		ldr	r3, [r6]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3228              		.loc 11 401 0
 3229 0042 0390     		str	r0, [sp, #12]
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 3230              		.loc 11 402 0
 3231 0044 5868     		ldr	r0, [r3, #4]
 3232 0046 0368     		ldr	r3, [r0]
 3233 0048 DB68     		ldr	r3, [r3, #12]
 3234 004a 9847     		blx	r3
 3235              	.LVL377:
 3236 004c 3168     		ldr	r1, [r6]
 404:./lib/ros_lib/ros/node_handle.h ****           }
 3237              		.loc 11 404 0
 3238 004e 2368     		ldr	r3, [r4]
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 3239              		.loc 11 402 0
 3240 0050 0490     		str	r0, [sp, #16]
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 3241              		.loc 11 403 0
 3242 0052 0597     		str	r7, [sp, #20]
 3243              	.LVL378:
 404:./lib/ros_lib/ros/node_handle.h ****           }
 3244              		.loc 11 404 0
 3245 0054 1B68     		ldr	r3, [r3]
 3246 0056 6A46     		mov	r2, sp
 3247 0058 0969     		ldr	r1, [r1, #16]
 3248              	.LVL379:
 3249 005a 2046     		mov	r0, r4
 3250 005c 9847     		blx	r3
 3251              	.LVL380:
 3252              	.L163:
 395:./lib/ros_lib/ros/node_handle.h ****         {
 3253              		.loc 11 395 0 discriminator 2
 3254 005e AE42     		cmp	r6, r5
 3255 0060 E2D1     		bne	.L164
 3256 0062 04F2DC46 		addw	r6, r4, #1244
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 3257              		.loc 11 415 0
 3258 0066 4FF40077 		mov	r7, #512
 3259              	.L166:
 409:./lib/ros_lib/ros/node_handle.h ****           {
 3260              		.loc 11 409 0
 3261 006a 55F8040F 		ldr	r0, [r5, #4]!
 3262 006e C8B1     		cbz	r0, .L165
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 3263              		.loc 11 411 0
 3264 0070 4368     		ldr	r3, [r0, #4]
 3265 0072 ADF80430 		strh	r3, [sp, #4]	@ movhi
 412:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 3266              		.loc 11 412 0
 3267 0076 8368     		ldr	r3, [r0, #8]
 3268 0078 0293     		str	r3, [sp, #8]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 3269              		.loc 11 413 0
 3270 007a 0368     		ldr	r3, [r0]
 3271 007c 9B68     		ldr	r3, [r3, #8]
 3272 007e 9847     		blx	r3
 3273              	.LVL381:
 3274 0080 0390     		str	r0, [sp, #12]
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 3275              		.loc 11 414 0
 3276 0082 2868     		ldr	r0, [r5]
 3277 0084 0368     		ldr	r3, [r0]
 3278 0086 DB68     		ldr	r3, [r3, #12]
 3279 0088 9847     		blx	r3
 3280              	.LVL382:
 416:./lib/ros_lib/ros/node_handle.h ****           }
 3281              		.loc 11 416 0
 3282 008a 2368     		ldr	r3, [r4]
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 3283              		.loc 11 414 0
 3284 008c 0490     		str	r0, [sp, #16]
 416:./lib/ros_lib/ros/node_handle.h ****           }
 3285              		.loc 11 416 0
 3286 008e 2868     		ldr	r0, [r5]
 3287 0090 D3F80080 		ldr	r8, [r3]
 3288 0094 0368     		ldr	r3, [r0]
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 3289              		.loc 11 415 0
 3290 0096 0597     		str	r7, [sp, #20]
 416:./lib/ros_lib/ros/node_handle.h ****           }
 3291              		.loc 11 416 0
 3292 0098 5B68     		ldr	r3, [r3, #4]
 3293 009a 9847     		blx	r3
 3294              	.LVL383:
 3295 009c 6A46     		mov	r2, sp
 3296 009e 0146     		mov	r1, r0
 3297 00a0 2046     		mov	r0, r4
 3298 00a2 C047     		blx	r8
 3299              	.LVL384:
 3300              	.L165:
 407:./lib/ros_lib/ros/node_handle.h ****         {
 3301              		.loc 11 407 0 discriminator 2
 3302 00a4 AE42     		cmp	r6, r5
 3303 00a6 E0D1     		bne	.L166
 419:./lib/ros_lib/ros/node_handle.h ****       }
 3304              		.loc 11 419 0
 3305 00a8 0123     		movs	r3, #1
 3306 00aa 84F8F434 		strb	r3, [r4, #1268]
 420:./lib/ros_lib/ros/node_handle.h **** 
 3307              		.loc 11 420 0
 3308 00ae 06B0     		add	sp, sp, #24
 3309              	.LCFI36:
 3310              		.cfi_def_cfa_offset 24
 3311              	.LVL385:
 3312              		@ sp needed
 3313 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3314              	.LVL386:
 3315              	.L176:
 3316              		.align	2
 3317              	.L175:
 3318 00b4 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 3319 00b8 BB010000 		.word	.LC16
 3320              		.cfi_endproc
 3321              	.LFE218:
 3322              		.fnend
 3324              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh,"axG",%pr
 3325              		.align	1
 3326              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 3327              		.thumb
 3328              		.thumb_func
 3330              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:
 3331              		.fnstart
 3332              	.LFB219:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 3333              		.loc 11 301 0
 3334              		.cfi_startproc
 3335              		@ args = 0, pretend = 0, frame = 16
 3336              		@ frame_needed = 0, uses_anonymous_args = 0
 3337              	.LVL387:
 3338 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 3339              		.save {r4, r5, r6, lr}
 3340              		.pad #16
 3341              	.LCFI37:
 3342              		.cfi_def_cfa_offset 32
 3343              		.cfi_offset 4, -16
 3344              		.cfi_offset 5, -12
 3345              		.cfi_offset 6, -8
 3346              		.cfi_offset 14, -4
 3347              	.LVL388:
 3348              	.LBB238:
 3349              	.LBB239:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 3350              		.loc 1 19 0
 3351 0002 1C4B     		ldr	r3, .L178
 3352              	.LBE239:
 3353              	.LBE238:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 3354              		.loc 11 301 0
 3355 0004 0446     		mov	r4, r0
 3356              	.LBB243:
 3357              	.LBB242:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 3358              		.loc 1 19 0
 3359 0006 0193     		str	r3, [sp, #4]
 3360              	.LVL389:
 3361              	.LBB240:
 3362              	.LBB241:
 3363              		.loc 14 52 0
 3364 0008 0023     		movs	r3, #0
 3365 000a 0293     		str	r3, [sp, #8]
 3366 000c 0393     		str	r3, [sp, #12]
 3367              	.LVL390:
 3368              	.LBE241:
 3369              	.LBE240:
 3370              	.LBE242:
 3371              	.LBE243:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 3372              		.loc 11 301 0
 3373 000e 0D46     		mov	r5, r1
 3374              	.LBB244:
 3375              	.LBB245:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3376              		.loc 12 134 0
 3377 0010 FFF7FEFF 		bl	millis
 3378              	.LVL391:
 3379              	.LBE245:
 3380              	.LBE244:
 304:./lib/ros_lib/ros/node_handle.h **** 
 3381              		.loc 11 304 0
 3382 0014 E268     		ldr	r2, [r4, #12]
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 3383              		.loc 11 306 0
 3384 0016 2946     		mov	r1, r5
 304:./lib/ros_lib/ros/node_handle.h **** 
 3385              		.loc 11 304 0
 3386 0018 861A     		subs	r6, r0, r2
 3387              	.LVL392:
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 3388              		.loc 11 307 0
 3389 001a 4FF47A75 		mov	r5, #1000
 3390              	.LVL393:
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 3391              		.loc 11 306 0
 3392 001e 01A8     		add	r0, sp, #4
 3393 0020 FFF7FEFF 		bl	_ZN8std_msgs4Time11deserializeEPh
 3394              	.LVL394:
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 3395              		.loc 11 307 0
 3396 0024 B6FBF5F2 		udiv	r2, r6, r5
 3397 0028 029B     		ldr	r3, [sp, #8]
 3398 002a 1344     		add	r3, r3, r2
 308:./lib/ros_lib/ros/node_handle.h **** 
 3399              		.loc 11 308 0
 3400 002c 05FB1262 		mls	r2, r5, r2, r6
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 3401              		.loc 11 307 0
 3402 0030 0293     		str	r3, [sp, #8]
 308:./lib/ros_lib/ros/node_handle.h **** 
 3403              		.loc 11 308 0
 3404 0032 114E     		ldr	r6, .L178+4
 3405              	.LVL395:
 3406 0034 039B     		ldr	r3, [sp, #12]
 3407 0036 06FB0232 		mla	r2, r6, r2, r3
 3408 003a 0392     		str	r2, [sp, #12]
 3409              	.LVL396:
 3410              	.LBB246:
 3411              	.LBB247:
 3412              	.LBB248:
 3413              	.LBB249:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3414              		.loc 12 134 0
 3415 003c FFF7FEFF 		bl	millis
 3416              	.LVL397:
 3417              	.LBE249:
 3418              	.LBE248:
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 3419              		.loc 11 327 0
 3420 0040 B0FBF5F3 		udiv	r3, r0, r5
 3421 0044 029A     		ldr	r2, [sp, #8]
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 3422              		.loc 11 328 0
 3423 0046 0399     		ldr	r1, [sp, #12]
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 3424              		.loc 11 327 0
 3425 0048 013A     		subs	r2, r2, #1
 3426 004a D21A     		subs	r2, r2, r3
 3427 004c 2261     		str	r2, [r4, #16]
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 3428              		.loc 11 328 0
 3429 004e 0B4A     		ldr	r2, .L178+8
 3430 0050 05FB1300 		mls	r0, r5, r3, r0
 3431              	.LVL398:
 3432 0054 0A44     		add	r2, r2, r1
 3433 0056 2146     		mov	r1, r4
 3434 0058 06FB1023 		mls	r3, r6, r0, r2
 329:./lib/ros_lib/ros/node_handle.h ****       }
 3435              		.loc 11 329 0
 3436 005c 04F11000 		add	r0, r4, #16
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 3437              		.loc 11 328 0
 3438 0060 41F8143F 		str	r3, [r1, #20]!
 329:./lib/ros_lib/ros/node_handle.h ****       }
 3439              		.loc 11 329 0
 3440 0064 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 3441              	.LVL399:
 3442              	.LBE247:
 3443              	.LBE246:
 3444              	.LBB250:
 3445              	.LBB251:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3446              		.loc 12 134 0
 3447 0068 FFF7FEFF 		bl	millis
 3448              	.LVL400:
 3449              	.LBE251:
 3450              	.LBE250:
 311:./lib/ros_lib/ros/node_handle.h ****       }
 3451              		.loc 11 311 0
 3452 006c C4F8FC04 		str	r0, [r4, #1276]
 312:./lib/ros_lib/ros/node_handle.h **** 
 3453              		.loc 11 312 0
 3454 0070 04B0     		add	sp, sp, #16
 3455              	.LCFI38:
 3456              		.cfi_def_cfa_offset 16
 3457              		@ sp needed
 3458 0072 70BD     		pop	{r4, r5, r6, pc}
 3459              	.LVL401:
 3460              	.L179:
 3461              		.align	2
 3462              	.L178:
 3463 0074 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 3464 0078 40420F00 		.word	1000000
 3465 007c 00CA9A3B 		.word	1000000000
 3466              		.cfi_endproc
 3467              	.LFE219:
 3468              		.fnend
 3470              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv,"axG",%pro
 3471              		.align	1
 3472              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 3473              		.thumb
 3474              		.thumb_func
 3476              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:
 3477              		.fnstart
 3478              	.LFB215:
 184:./lib/ros_lib/ros/node_handle.h **** 
 3479              		.loc 11 184 0
 3480              		.cfi_startproc
 3481              		@ args = 0, pretend = 0, frame = 0
 3482              		@ frame_needed = 0, uses_anonymous_args = 0
 3483              	.LVL402:
 3484 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3485              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 3486              	.LCFI39:
 3487              		.cfi_def_cfa_offset 32
 3488              		.cfi_offset 3, -32
 3489              		.cfi_offset 4, -28
 3490              		.cfi_offset 5, -24
 3491              		.cfi_offset 6, -20
 3492              		.cfi_offset 7, -16
 3493              		.cfi_offset 8, -12
 3494              		.cfi_offset 9, -8
 3495              		.cfi_offset 14, -4
 184:./lib/ros_lib/ros/node_handle.h **** 
 3496              		.loc 11 184 0
 3497 0004 0446     		mov	r4, r0
 3498              	.LVL403:
 3499              	.LBB259:
 3500              	.LBB260:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3501              		.loc 12 134 0
 3502 0006 FFF7FEFF 		bl	millis
 3503              	.LVL404:
 3504              	.LBE260:
 3505              	.LBE259:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 3506              		.loc 11 188 0
 3507 000a 42F6F822 		movw	r2, #11000
 3508 000e D4F8FC34 		ldr	r3, [r4, #1276]
 3509              	.LBB262:
 3510              	.LBB261:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3511              		.loc 12 134 0
 3512 0012 0646     		mov	r6, r0
 3513              	.LVL405:
 3514              	.LBE261:
 3515              	.LBE262:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 3516              		.loc 11 188 0
 3517 0014 C31A     		subs	r3, r0, r3
 3518 0016 9342     		cmp	r3, r2
 189:./lib/ros_lib/ros/node_handle.h ****          }
 3519              		.loc 11 189 0
 3520 0018 84BF     		itt	hi
 3521 001a 0023     		movhi	r3, #0
 3522 001c 84F8F434 		strbhi	r3, [r4, #1268]
 193:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 3523              		.loc 11 193 0
 3524 0020 D4F8E034 		ldr	r3, [r4, #1248]
 3525 0024 33B1     		cbz	r3, .L182
 194:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 3526              		.loc 11 194 0
 3527 0026 D4F80035 		ldr	r3, [r4, #1280]
 3528 002a 8342     		cmp	r3, r0
 195:./lib/ros_lib/ros/node_handle.h ****           }
 3529              		.loc 11 195 0
 3530 002c 3CBF     		itt	cc
 3531 002e 0023     		movcc	r3, #0
 3532 0030 C4F8E034 		strcc	r3, [r4, #1248]
 3533              	.L182:
 3534              	.LBB263:
 3535              	.LBB264:
 3536              	.LBB265:
 118:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 3537              		.loc 12 118 0
 3538 0034 744F     		ldr	r7, .L222
 3539              	.LBE265:
 3540              	.LBE264:
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 3541              		.loc 11 252 0
 3542 0036 4FF00008 		mov	r8, #0
 269:./lib/ros_lib/ros/node_handle.h ****               }
 3543              		.loc 11 269 0
 3544 003a 04F11809 		add	r9, r4, #24
 3545              	.LVL406:
 3546              	.L183:
 3547              	.LBB268:
 3548              	.LBB266:
 118:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 3549              		.loc 12 118 0
 3550 003e 7A69     		ldr	r2, [r7, #20]
 3551 0040 3B69     		ldr	r3, [r7, #16]
 3552 0042 9A42     		cmp	r2, r3
 3553 0044 00F0CC80 		beq	.L184
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 3554              		.loc 12 121 0
 3555 0048 3B69     		ldr	r3, [r7, #16]
 3556              	.LBE266:
 3557              	.LBE268:
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 3558              		.loc 11 206 0
 3559 004a D4F8E054 		ldr	r5, [r4, #1248]
 3560              	.LBB269:
 3561              	.LBB267:
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 3562              		.loc 12 121 0
 3563 004e 07EB4303 		add	r3, r7, r3, lsl #1
 3564 0052 1B8B     		ldrh	r3, [r3, #24]
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 3565              		.loc 12 122 0
 3566 0054 3A69     		ldr	r2, [r7, #16]
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 3567              		.loc 12 121 0
 3568 0056 9BB2     		uxth	r3, r3
 3569              	.LVL407:
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 3570              		.loc 12 122 0
 3571 0058 0132     		adds	r2, r2, #1
 3572 005a C2F30802 		ubfx	r2, r2, #0, #9
 3573 005e 3A61     		str	r2, [r7, #16]
 3574              	.LVL408:
 3575              	.LBE267:
 3576              	.LBE269:
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 3577              		.loc 11 205 0
 3578 0060 D4F8F024 		ldr	r2, [r4, #1264]
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 3579              		.loc 11 206 0
 3580 0064 072D     		cmp	r5, #7
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 3581              		.loc 11 205 0
 3582 0066 1A44     		add	r2, r2, r3
 3583 0068 C4F8F024 		str	r2, [r4, #1264]
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 3584              		.loc 11 206 0
 3585 006c 0FD1     		bne	.L185
 207:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 3586              		.loc 11 207 0
 3587 006e D4F8EC24 		ldr	r2, [r4, #1260]
 3588 0072 511C     		adds	r1, r2, #1
 3589 0074 2244     		add	r2, r2, r4
 3590 0076 C4F8EC14 		str	r1, [r4, #1260]
 3591 007a 1376     		strb	r3, [r2, #24]
 208:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 3592              		.loc 11 208 0
 3593 007c D4F8E434 		ldr	r3, [r4, #1252]
 3594 0080 013B     		subs	r3, r3, #1
 3595 0082 C4F8E434 		str	r3, [r4, #1252]
 3596              	.L220:
 209:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 3597              		.loc 11 209 0
 3598 0086 002B     		cmp	r3, #0
 3599 0088 D9D1     		bne	.L183
 210:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 3600              		.loc 11 210 0
 3601 008a 0823     		movs	r3, #8
 3602 008c 1AE0     		b	.L218
 3603              	.L185:
 211:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 3604              		.loc 11 211 0
 3605 008e A5B9     		cbnz	r5, .L188
 212:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 3606              		.loc 11 212 0
 3607 0090 FF2B     		cmp	r3, #255
 3608 0092 07D1     		bne	.L189
 213:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 3609              		.loc 11 213 0
 3610 0094 0123     		movs	r3, #1
 3611 0096 C4F8E034 		str	r3, [r4, #1248]
 214:./lib/ros_lib/ros/node_handle.h ****             }
 3612              		.loc 11 214 0
 3613 009a 06F11403 		add	r3, r6, #20
 3614 009e C4F80035 		str	r3, [r4, #1280]
 3615 00a2 CCE7     		b	.L183
 3616              	.L189:
 3617              	.LVL409:
 3618              	.LBB270:
 3619              	.LBB271:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3620              		.loc 12 134 0
 3621 00a4 FFF7FEFF 		bl	millis
 3622              	.LVL410:
 3623              	.LBE271:
 3624              	.LBE270:
 216:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 3625              		.loc 11 216 0
 3626 00a8 801B     		subs	r0, r0, r6
 3627 00aa 0528     		cmp	r0, #5
 3628 00ac C7D9     		bls	.L183
 218:./lib/ros_lib/ros/node_handle.h ****               return -2;
 3629              		.loc 11 218 0
 3630 00ae 84F8F454 		strb	r5, [r4, #1268]
 219:./lib/ros_lib/ros/node_handle.h ****             }
 3631              		.loc 11 219 0
 3632 00b2 6FF00100 		mvn	r0, #1
 3633 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3634              	.LVL411:
 3635              	.L188:
 221:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 3636              		.loc 11 221 0
 3637 00ba 012D     		cmp	r5, #1
 3638 00bc 0FD1     		bne	.L191
 222:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 3639              		.loc 11 222 0
 3640 00be FE2B     		cmp	r3, #254
 3641 00c0 03D1     		bne	.L192
 223:./lib/ros_lib/ros/node_handle.h ****             }else{
 3642              		.loc 11 223 0
 3643 00c2 0223     		movs	r3, #2
 3644              	.L218:
 3645 00c4 C4F8E034 		str	r3, [r4, #1248]
 3646 00c8 B9E7     		b	.L183
 3647              	.L192:
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 3648              		.loc 11 226 0
 3649 00ca 94F8F434 		ldrb	r3, [r4, #1268]	@ zero_extendqisi2
 225:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 3650              		.loc 11 225 0
 3651 00ce C4F8E084 		str	r8, [r4, #1248]
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 3652              		.loc 11 226 0
 3653 00d2 002B     		cmp	r3, #0
 3654 00d4 B3D1     		bne	.L183
 227:./lib/ros_lib/ros/node_handle.h ****             }
 3655              		.loc 11 227 0
 3656 00d6 2046     		mov	r0, r4
 3657 00d8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 3658              	.LVL412:
 3659 00dc AFE7     		b	.L183
 3660              	.L191:
 229:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 3661              		.loc 11 229 0
 3662 00de 022D     		cmp	r5, #2
 3663 00e0 05D1     		bne	.L193
 230:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 3664              		.loc 11 230 0
 3665 00e2 C4F8E434 		str	r3, [r4, #1252]
 231:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 3666              		.loc 11 231 0
 3667 00e6 C4F8EC84 		str	r8, [r4, #1260]
 232:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 3668              		.loc 11 232 0
 3669 00ea 0322     		movs	r2, #3
 3670 00ec 20E0     		b	.L219
 3671              	.L193:
 234:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 3672              		.loc 11 234 0
 3673 00ee 032D     		cmp	r5, #3
 3674 00f0 07D1     		bne	.L194
 235:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 3675              		.loc 11 235 0
 3676 00f2 D4F8E424 		ldr	r2, [r4, #1252]
 3677 00f6 02EB0323 		add	r3, r2, r3, lsl #8
 3678 00fa C4F8E434 		str	r3, [r4, #1252]
 236:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 3679              		.loc 11 236 0
 3680 00fe 0423     		movs	r3, #4
 3681 0100 E0E7     		b	.L218
 3682              	.L194:
 237:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 3683              		.loc 11 237 0
 3684 0102 042D     		cmp	r5, #4
 3685 0104 0FD1     		bne	.L195
 238:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 3686              		.loc 11 238 0
 3687 0106 414B     		ldr	r3, .L222+4
 3688 0108 1340     		ands	r3, r3, r2
 3689 010a 002B     		cmp	r3, #0
 3690 010c BEBF     		ittt	lt
 3691 010e 03F1FF33 		addlt	r3, r3, #-1
 3692 0112 63F0FF03 		ornlt	r3, r3, #255
 3693 0116 0133     		addlt	r3, r3, #1
 3694 0118 FF2B     		cmp	r3, #255
 3695 011a 01D1     		bne	.L196
 239:./lib/ros_lib/ros/node_handle.h **** 	    else
 3696              		.loc 11 239 0
 3697 011c 0523     		movs	r3, #5
 3698 011e D1E7     		b	.L218
 3699              	.L196:
 241:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 3700              		.loc 11 241 0
 3701 0120 C4F8E084 		str	r8, [r4, #1248]
 3702 0124 8BE7     		b	.L183
 3703              	.L195:
 242:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 3704              		.loc 11 242 0
 3705 0126 052D     		cmp	r5, #5
 3706 0128 07D1     		bne	.L198
 243:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 3707              		.loc 11 243 0
 3708 012a C4F8E834 		str	r3, [r4, #1256]
 244:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 3709              		.loc 11 244 0
 3710 012e 0622     		movs	r2, #6
 3711              	.L219:
 3712 0130 C4F8E024 		str	r2, [r4, #1248]
 245:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 3713              		.loc 11 245 0
 3714 0134 C4F8F034 		str	r3, [r4, #1264]
 3715 0138 81E7     		b	.L183
 3716              	.L198:
 246:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 3717              		.loc 11 246 0
 3718 013a 062D     		cmp	r5, #6
 3719 013c 0BD1     		bne	.L199
 247:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 3720              		.loc 11 247 0
 3721 013e D4F8E824 		ldr	r2, [r4, #1256]
 3722 0142 02EB0323 		add	r3, r2, r3, lsl #8
 3723 0146 C4F8E834 		str	r3, [r4, #1256]
 248:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 3724              		.loc 11 248 0
 3725 014a 0723     		movs	r3, #7
 3726 014c C4F8E034 		str	r3, [r4, #1248]
 249:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 3727              		.loc 11 249 0
 3728 0150 D4F8E434 		ldr	r3, [r4, #1252]
 3729 0154 97E7     		b	.L220
 3730              	.L199:
 251:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 3731              		.loc 11 251 0
 3732 0156 082D     		cmp	r5, #8
 3733 0158 7FF471AF 		bne	.L183
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 3734              		.loc 11 253 0
 3735 015c 2B4B     		ldr	r3, .L222+4
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 3736              		.loc 11 252 0
 3737 015e C4F8E084 		str	r8, [r4, #1248]
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 3738              		.loc 11 253 0
 3739 0162 1340     		ands	r3, r3, r2
 3740 0164 002B     		cmp	r3, #0
 3741 0166 BEBF     		ittt	lt
 3742 0168 03F1FF33 		addlt	r3, r3, #-1
 3743 016c 63F0FF03 		ornlt	r3, r3, #255
 3744 0170 0133     		addlt	r3, r3, #1
 3745 0172 FF2B     		cmp	r3, #255
 3746 0174 7FF463AF 		bne	.L183
 254:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 3747              		.loc 11 254 0
 3748 0178 D4F8E834 		ldr	r3, [r4, #1256]
 3749 017c 6BB9     		cbnz	r3, .L202
 255:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 3750              		.loc 11 255 0
 3751 017e 2046     		mov	r0, r4
 3752 0180 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 3753              	.LVL413:
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 3754              		.loc 11 256 0
 3755 0184 2046     		mov	r0, r4
 3756 0186 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 3757              	.LVL414:
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 3758              		.loc 11 257 0
 3759 018a C4F8F864 		str	r6, [r4, #1272]
 258:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 3760              		.loc 11 258 0
 3761 018e C4F8FC64 		str	r6, [r4, #1276]
 259:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 3762              		.loc 11 259 0
 3763 0192 4FF0FF30 		mov	r0, #-1
 3764 0196 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3765              	.LVL415:
 3766              	.L202:
 260:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 3767              		.loc 11 260 0
 3768 019a 0A2B     		cmp	r3, #10
 3769 019c 04D1     		bne	.L203
 261:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 3770              		.loc 11 261 0
 3771 019e 4946     		mov	r1, r9
 3772 01a0 2046     		mov	r0, r4
 3773 01a2 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 3774              	.LVL416:
 3775 01a6 4AE7     		b	.L183
 3776              	.L203:
 262:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 3777              		.loc 11 262 0
 3778 01a8 062B     		cmp	r3, #6
 3779 01aa 08D1     		bne	.L204
 263:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 3780              		.loc 11 263 0
 3781 01ac 4946     		mov	r1, r9
 3782 01ae 04F5A160 		add	r0, r4, #1288
 3783 01b2 FFF7FEFF 		bl	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 3784              	.LVL417:
 264:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 3785              		.loc 11 264 0
 3786 01b6 0123     		movs	r3, #1
 3787 01b8 84F80435 		strb	r3, [r4, #1284]
 3788 01bc 3FE7     		b	.L183
 3789              	.L204:
 265:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 3790              		.loc 11 265 0
 3791 01be 0B2B     		cmp	r3, #11
 3792 01c0 02D1     		bne	.L205
 266:./lib/ros_lib/ros/node_handle.h ****               }else{
 3793              		.loc 11 266 0
 3794 01c2 84F8F484 		strb	r8, [r4, #1268]
 3795 01c6 3AE7     		b	.L183
 3796              	.L205:
 268:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 3797              		.loc 11 268 0
 3798 01c8 04EB8303 		add	r3, r4, r3, lsl #2
 3799 01cc D3F8EC02 		ldr	r0, [r3, #748]
 3800 01d0 0028     		cmp	r0, #0
 3801 01d2 3FF434AF 		beq	.L183
 269:./lib/ros_lib/ros/node_handle.h ****               }
 3802              		.loc 11 269 0
 3803 01d6 0368     		ldr	r3, [r0]
 3804 01d8 4946     		mov	r1, r9
 3805 01da 1B68     		ldr	r3, [r3]
 3806 01dc 9847     		blx	r3
 3807              	.LVL418:
 3808 01de 2EE7     		b	.L183
 3809              	.L184:
 3810              	.LBE263:
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 3811              		.loc 11 276 0
 3812 01e0 94F8F404 		ldrb	r0, [r4, #1268]	@ zero_extendqisi2
 3813 01e4 70B1     		cbz	r0, .L221
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 3814              		.loc 11 276 0 is_stmt 0 discriminator 1
 3815 01e6 40F6C412 		movw	r2, #2500
 3816 01ea D4F8F834 		ldr	r3, [r4, #1272]
 3817 01ee F31A     		subs	r3, r6, r3
 3818 01f0 9342     		cmp	r3, r2
 3819 01f2 04D9     		bls	.L207
 277:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 3820              		.loc 11 277 0 is_stmt 1
 3821 01f4 2046     		mov	r0, r4
 3822 01f6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 3823              	.LVL419:
 278:./lib/ros_lib/ros/node_handle.h ****         }
 3824              		.loc 11 278 0
 3825 01fa C4F8F864 		str	r6, [r4, #1272]
 3826              	.L207:
 281:./lib/ros_lib/ros/node_handle.h ****       }
 3827              		.loc 11 281 0
 3828 01fe 0020     		movs	r0, #0
 3829 0200 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3830              	.LVL420:
 3831              	.L221:
 282:./lib/ros_lib/ros/node_handle.h **** 
 3832              		.loc 11 282 0
 3833 0204 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3834              	.LVL421:
 3835              	.L223:
 3836              		.align	2
 3837              	.L222:
 3838 0208 00000000 		.word	.LANCHOR1
 3839 020c FF000080 		.word	-2147483393
 3840              		.cfi_endproc
 3841              	.LFE215:
 3842              		.fnend
 3844              		.section	.text.startup,"ax",%progbits
 3845              		.align	1
 3846              		.global	main
 3847              		.thumb
 3848              		.thumb_func
 3850              	main:
 3851              		.fnstart
 3852              	.LFB193:
  52:src/main.cpp  **** 
  53:src/main.cpp  **** 
  54:src/main.cpp  **** //ros::Subscriber<roberto_msgs::MotorState> motor_sub("motor", &motor_cb);
  55:src/main.cpp  **** ros::Subscriber<sensor_msgs::Joy> motor_sub("joy", &motor_cb);
  56:src/main.cpp  **** ros::Subscriber<std_msgs::UInt8> led_sub("led", &led_cb);
  57:src/main.cpp  **** 
  58:src/main.cpp  **** std_msgs::Float32 str_msg;
  59:src/main.cpp  **** ros::Publisher chatter("encoder", &str_msg);
  60:src/main.cpp  **** 
  61:src/main.cpp  **** char hello[25];
  62:src/main.cpp  **** char str[150];
  63:src/main.cpp  **** 
  64:src/main.cpp  **** 
  65:src/main.cpp  **** int main(){
 3853              		.loc 9 65 0
 3854              		.cfi_startproc
 3855              		@ args = 0, pretend = 0, frame = 576
 3856              		@ frame_needed = 0, uses_anonymous_args = 0
 3857 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3858              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3859              	.LCFI40:
 3860              		.cfi_def_cfa_offset 36
 3861              		.cfi_offset 4, -36
 3862              		.cfi_offset 5, -32
 3863              		.cfi_offset 6, -28
 3864              		.cfi_offset 7, -24
 3865              		.cfi_offset 8, -20
 3866              		.cfi_offset 9, -16
 3867              		.cfi_offset 10, -12
 3868              		.cfi_offset 11, -8
 3869              		.cfi_offset 14, -4
 3870              	.LBB286:
 3871              	.LBB287:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 3872              		.loc 11 147 0
 3873 0004 224C     		ldr	r4, .L244
 3874              	.LBE287:
 3875              	.LBE286:
 3876              		.loc 9 65 0
 3877              		.pad #612
 3878 0006 ADF5197D 		sub	sp, sp, #612
 3879              	.LCFI41:
 3880              		.cfi_def_cfa_offset 648
  66:src/main.cpp  ****   /* System Clocks Configuration */
  67:src/main.cpp  ****   RCC_Configuration();
 3881              		.loc 9 67 0
 3882 000a FFF7FEFF 		bl	RCC_Configuration
 3883              	.LVL422:
 3884              	.LBB289:
 3885              	.LBB288:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 3886              		.loc 11 147 0
 3887 000e 04F21C40 		addw	r0, r4, #1052
 3888 0012 FFF7FEFF 		bl	_ZN15ArduinoHardware4initEv
 3889              	.LVL423:
 3890 0016 04F50962 		add	r2, r4, #2192
 151:./lib/ros_lib/ros/node_handle.h ****       };
 3891              		.loc 11 151 0
 3892 001a 1146     		mov	r1, r2
 148:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 3893              		.loc 11 148 0
 3894 001c 0023     		movs	r3, #0
 3895 001e C4F8F838 		str	r3, [r4, #2296]
 149:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 3896              		.loc 11 149 0
 3897 0022 C4F8FC38 		str	r3, [r4, #2300]
 150:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 3898              		.loc 11 150 0
 3899 0026 C4F80439 		str	r3, [r4, #2308]
 151:./lib/ros_lib/ros/node_handle.h ****       };
 3900              		.loc 11 151 0
 3901 002a C4F80039 		str	r3, [r4, #2304]
 3902              	.LVL424:
 3903              	.L227:
 3904              	.LBE288:
 3905              	.LBE289:
 3906              	.LBB290:
 3907              	.LBB291:
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 3908              		.loc 11 354 0
 3909 002e 51F8040F 		ldr	r0, [r1, #4]!
 3910 0032 40B9     		cbnz	r0, .L225
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 3911              		.loc 11 355 0
 3912 0034 1748     		ldr	r0, .L244+4
 3913 0036 04EB8301 		add	r1, r4, r3, lsl #2
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 3914              		.loc 11 356 0
 3915 003a 6433     		adds	r3, r3, #100
 3916              	.LVL425:
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 3917              		.loc 11 355 0
 3918 003c C1F89408 		str	r0, [r1, #2196]
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 3919              		.loc 11 356 0
 3920 0040 C4F84C39 		str	r3, [r4, #2380]
 3921 0044 02E0     		b	.L226
 3922              	.LVL426:
 3923              	.L225:
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 3924              		.loc 11 353 0
 3925 0046 0133     		adds	r3, r3, #1
 3926              	.LVL427:
 3927 0048 192B     		cmp	r3, #25
 3928 004a F0D1     		bne	.L227
 3929              	.LVL428:
 3930              	.L226:
 3931              	.LBE291:
 3932              	.LBE290:
 3933              	.LBB292:
 3934              	.LBB293:
 3935 004c 0023     		movs	r3, #0
 3936              	.LVL429:
 3937              	.L230:
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 3938              		.loc 11 354 0
 3939 004e 52F8041F 		ldr	r1, [r2, #4]!
 3940 0052 41B9     		cbnz	r1, .L228
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 3941              		.loc 11 355 0
 3942 0054 1049     		ldr	r1, .L244+8
 3943 0056 04EB8302 		add	r2, r4, r3, lsl #2
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 3944              		.loc 11 356 0
 3945 005a 6433     		adds	r3, r3, #100
 3946              	.LVL430:
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 3947              		.loc 11 355 0
 3948 005c C2F89418 		str	r1, [r2, #2196]
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 3949              		.loc 11 356 0
 3950 0060 C4F89039 		str	r3, [r4, #2448]
 3951 0064 02E0     		b	.L229
 3952              	.LVL431:
 3953              	.L228:
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 3954              		.loc 11 353 0
 3955 0066 0133     		adds	r3, r3, #1
 3956              	.LVL432:
 3957 0068 192B     		cmp	r3, #25
 3958 006a F0D1     		bne	.L230
 3959              	.LVL433:
 3960              	.L229:
 3961 006c 0B4A     		ldr	r2, .L244+12
 3962              	.LBE293:
 3963              	.LBE292:
 3964              	.LBB294:
 3965              	.LBB295:
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 3966              		.loc 11 339 0
 3967 006e 0023     		movs	r3, #0
 3968              	.LVL434:
 3969              	.L233:
 340:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 3970              		.loc 11 340 0
 3971 0070 52F8041F 		ldr	r1, [r2, #4]!
 3972 0074 B1B9     		cbnz	r1, .L231
 341:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 3973              		.loc 11 341 0
 3974 0076 0A4A     		ldr	r2, .L244+16
 3975 0078 04EB8301 		add	r1, r4, r3, lsl #2
 3976 007c C1F83028 		str	r2, [r1, #2096]
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 3977              		.loc 11 342 0
 3978 0080 7D33     		adds	r3, r3, #125
 3979              	.LVL435:
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 3980              		.loc 11 343 0
 3981 0082 A2F5B262 		sub	r2, r2, #1424
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 3982              		.loc 11 342 0
 3983 0086 C4F8B039 		str	r3, [r4, #2480]
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 3984              		.loc 11 343 0
 3985 008a C4F8B429 		str	r2, [r4, #2484]
 3986 008e 0CE0     		b	.L232
 3987              	.L245:
 3988              		.align	2
 3989              	.L244:
 3990 0090 00000000 		.word	.LANCHOR1
 3991 0094 48090000 		.word	.LANCHOR1+2376
 3992 0098 8C090000 		.word	.LANCHOR1+2444
 3993 009c 2C080000 		.word	.LANCHOR1+2092
 3994 00a0 A8090000 		.word	.LANCHOR1+2472
 3995              	.LVL436:
 3996              	.L231:
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 3997              		.loc 11 339 0
 3998 00a4 0133     		adds	r3, r3, #1
 3999              	.LVL437:
 4000 00a6 192B     		cmp	r3, #25
 4001 00a8 E2D1     		bne	.L233
 4002              	.LVL438:
 4003              	.L232:
 4004              	.LBE295:
 4005              	.LBE294:
  68:src/main.cpp  **** 
  69:src/main.cpp  ****   nh.initNode();
  70:src/main.cpp  ****   nh.subscribe(motor_sub);
  71:src/main.cpp  ****   nh.subscribe(led_sub);
  72:src/main.cpp  ****   nh.advertise(chatter);
  73:src/main.cpp  **** 
  74:src/main.cpp  ****   GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
 4006              		.loc 9 74 0
 4007 00aa 0121     		movs	r1, #1
 4008 00ac B648     		ldr	r0, .L246
 4009 00ae FFF7FEFF 		bl	GPIO_PinRemapConfig
 4010              	.LVL439:
  75:src/main.cpp  ****   I2C1_Init();
  76:src/main.cpp  ****   SysTick_Init();
  77:src/main.cpp  ****   DEBUG_Init();
  78:src/main.cpp  ****   LED_Init();
  79:src/main.cpp  **** 
  80:src/main.cpp  ****   float KP = 500;
  81:src/main.cpp  ****   float KI = 500;
  82:src/main.cpp  ****   float KD = 4;
  83:src/main.cpp  ****   float integralSaturation = 100000;
  84:src/main.cpp  ****   float wheelRadius = 0.04;
  85:src/main.cpp  **** 
  86:src/main.cpp  ****   delay(1000);
  87:src/main.cpp  **** 
  88:src/main.cpp  ****   motorSettings SL(MOTOR_TYPE_SERVO, "servo_left", TIM4, 4);
 4011              		.loc 9 88 0
 4012 00b2 0427     		movs	r7, #4
  75:src/main.cpp  ****   I2C1_Init();
 4013              		.loc 9 75 0
 4014 00b4 FFF7FEFF 		bl	I2C1_Init
 4015              	.LVL440:
  76:src/main.cpp  ****   DEBUG_Init();
 4016              		.loc 9 76 0
 4017 00b8 FFF7FEFF 		bl	SysTick_Init
 4018              	.LVL441:
  77:src/main.cpp  ****   LED_Init();
 4019              		.loc 9 77 0
 4020 00bc FFF7FEFF 		bl	DEBUG_Init
 4021              	.LVL442:
  78:src/main.cpp  **** 
 4022              		.loc 9 78 0
 4023 00c0 FFF7FEFF 		bl	LED_Init
 4024              	.LVL443:
  86:src/main.cpp  **** 
 4025              		.loc 9 86 0
 4026 00c4 4FF47A70 		mov	r0, #1000
 4027 00c8 FFF7FEFF 		bl	delay
 4028              	.LVL444:
 4029              		.loc 9 88 0
 4030 00cc AF4B     		ldr	r3, .L246+4
 4031 00ce B04A     		ldr	r2, .L246+8
 4032 00d0 0121     		movs	r1, #1
 4033 00d2 0097     		str	r7, [sp]
 4034 00d4 08A8     		add	r0, sp, #32
 4035 00d6 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4036              	.LVL445:
  89:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 4037              		.loc 9 89 0
 4038 00da 4FF40073 		mov	r3, #512
  90:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 4039              		.loc 9 90 0
 4040 00de AD4D     		ldr	r5, .L246+12
  89:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 4041              		.loc 9 89 0
 4042 00e0 0E93     		str	r3, [sp, #56]
  91:src/main.cpp  **** 
  92:src/main.cpp  ****   motorSettings SR(MOTOR_TYPE_SERVO, "servo_right", TIM4, 3);
 4043              		.loc 9 92 0
 4044 00e2 0323     		movs	r3, #3
  93:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
  94:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
  95:src/main.cpp  **** 
  96:src/main.cpp  ****   motorSettings FR(MOTOR_TYPE_DC_MOTOR, "front_right", TIM1, 1);
 4045              		.loc 9 96 0
 4046 00e4 4FF00108 		mov	r8, #1
  92:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 4047              		.loc 9 92 0
 4048 00e8 0093     		str	r3, [sp]
 4049 00ea AB4A     		ldr	r2, .L246+16
 4050 00ec A74B     		ldr	r3, .L246+4
 4051 00ee 0121     		movs	r1, #1
 4052 00f0 20A8     		add	r0, sp, #128
  93:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 4053              		.loc 9 93 0
 4054 00f2 4FF48079 		mov	r9, #256
  90:src/main.cpp  **** 
 4055              		.loc 9 90 0
 4056 00f6 0F95     		str	r5, [sp, #60]
  92:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 4057              		.loc 9 92 0
 4058 00f8 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4059              	.LVL446:
 4060              		.loc 9 96 0
 4061 00fc CDF80080 		str	r8, [sp]
 4062 0100 A64B     		ldr	r3, .L246+20
 4063 0102 A74A     		ldr	r2, .L246+24
 4064 0104 0221     		movs	r1, #2
 4065 0106 38A8     		add	r0, sp, #224
  97:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
  98:src/main.cpp  ****               GPIO_Pin_15, GPIOC, GPIO_Pin_0, GPIOA,
  99:src/main.cpp  ****               GPIO_Pin_8, GPIOA);
 4066              		.loc 9 99 0
 4067 0108 A64E     		ldr	r6, .L246+28
  93:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 4068              		.loc 9 93 0
 4069 010a CDF89890 		str	r9, [sp, #152]
  94:src/main.cpp  **** 
 4070              		.loc 9 94 0
 4071 010e 2795     		str	r5, [sp, #156]
  96:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 4072              		.loc 9 96 0
 4073 0110 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4074              	.LVL447:
 4075              		.loc 9 99 0
 4076 0114 A44A     		ldr	r2, .L246+32
 4077 0116 4FF40043 		mov	r3, #32768
 4078 011a 8DE80C00 		stmia	sp, {r2, r3}
 4079 011e CDF81490 		str	r9, [sp, #20]
 4080 0122 CDF80C80 		str	r8, [sp, #12]
 4081 0126 0292     		str	r2, [sp, #8]
 4082 0128 4FF48043 		mov	r3, #16384
 4083 012c 4FF40051 		mov	r1, #8192
 4084 0130 38A8     		add	r0, sp, #224
 4085 0132 0696     		str	r6, [sp, #24]
 4086 0134 0496     		str	r6, [sp, #16]
 4087 0136 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 4088              	.LVL448:
 100:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 101:src/main.cpp  ****   FR.setRegulator(KP,KI,KD,integralSaturation);
 4089              		.loc 9 101 0
 4090 013a DFF88C92 		ldr	r9, .L246+64
 4091 013e 9B4A     		ldr	r2, .L246+36
 100:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 4092              		.loc 9 100 0
 4093 0140 1823     		movs	r3, #24
 102:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 4094              		.loc 9 102 0
 4095 0142 DFF88882 		ldr	r8, .L246+68
 101:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 4096              		.loc 9 101 0
 4097 0146 1146     		mov	r1, r2
 100:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 4098              		.loc 9 100 0
 4099 0148 ADF82831 		strh	r3, [sp, #296]	@ movhi
 101:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 4100              		.loc 9 101 0
 4101 014c 38A8     		add	r0, sp, #224
 4102 014e 4FF08143 		mov	r3, #1082130432
 4103 0152 CDF80090 		str	r9, [sp]	@ float
 4104 0156 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 4105              	.LVL449:
 103:src/main.cpp  **** 
 104:src/main.cpp  ****   motorSettings FL(MOTOR_TYPE_DC_MOTOR, "front_left", TIM3, 4);
 4106              		.loc 9 104 0
 4107 015a 954B     		ldr	r3, .L246+40
 4108 015c 954A     		ldr	r2, .L246+44
 4109 015e 0221     		movs	r1, #2
 4110 0160 0097     		str	r7, [sp]
 4111 0162 50A8     		add	r0, sp, #320
 105:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 106:src/main.cpp  ****               GPIO_Pin_4, GPIOA,GPIO_Pin_10,GPIOB,
 107:src/main.cpp  ****               GPIO_Pin_1, GPIOB);
 4112              		.loc 9 107 0
 4113 0164 4FF0020A 		mov	r10, #2
 4114 0168 4FF0100B 		mov	fp, #16
 102:src/main.cpp  **** 
 4115              		.loc 9 102 0
 4116 016c CDF83C81 		str	r8, [sp, #316]	@ float
 104:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 4117              		.loc 9 104 0
 4118 0170 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4119              	.LVL450:
 4120              		.loc 9 107 0
 4121 0174 4FF48063 		mov	r3, #1024
 4122 0178 2A46     		mov	r2, r5
 4123 017a 0695     		str	r5, [sp, #24]
 4124 017c 0495     		str	r5, [sp, #16]
 4125 017e 0393     		str	r3, [sp, #12]
 4126 0180 8DE84008 		stmia	sp, {r6, fp}
 4127 0184 2023     		movs	r3, #32
 4128 0186 3946     		mov	r1, r7
 4129 0188 50A8     		add	r0, sp, #320
 4130 018a CDF814A0 		str	r10, [sp, #20]
 4131 018e 0296     		str	r6, [sp, #8]
 4132 0190 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 4133              	.LVL451:
 108:src/main.cpp  ****   FL.encoderAddr = (0x10);
 109:src/main.cpp  ****   FL.setRegulator(KP,KI,KD,integralSaturation);
 4134              		.loc 9 109 0
 4135 0194 854A     		ldr	r2, .L246+36
 4136 0196 4FF08143 		mov	r3, #1082130432
 4137 019a 1146     		mov	r1, r2
 4138 019c 50A8     		add	r0, sp, #320
 4139 019e CDF80090 		str	r9, [sp]	@ float
 108:src/main.cpp  ****   FL.encoderAddr = (0x10);
 4140              		.loc 9 108 0
 4141 01a2 ADF888B1 		strh	fp, [sp, #392]	@ movhi
 4142              		.loc 9 109 0
 4143 01a6 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 4144              	.LVL452:
 110:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 111:src/main.cpp  **** 
 112:src/main.cpp  ****   motorSettings RL(MOTOR_TYPE_DC_MOTOR, "rear_left", TIM2, 4);
 4145              		.loc 9 112 0
 4146 01aa 4FF08043 		mov	r3, #1073741824
 4147 01ae 824A     		ldr	r2, .L246+48
 4148 01b0 5146     		mov	r1, r10
 4149 01b2 0097     		str	r7, [sp]
 4150 01b4 68A8     		add	r0, sp, #416
 110:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 4151              		.loc 9 110 0
 4152 01b6 CDF89C81 		str	r8, [sp, #412]	@ float
 4153              		.loc 9 112 0
 4154 01ba FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4155              	.LVL453:
 113:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 114:src/main.cpp  ****     GPIO_Pin_13, GPIOB, GPIO_Pin_14, GPIOB,
 115:src/main.cpp  ****     GPIO_Pin_3, GPIOA);
 4156              		.loc 9 115 0
 4157 01be 4FF48043 		mov	r3, #16384
 4158 01c2 4FF0080B 		mov	fp, #8
 4159 01c6 0393     		str	r3, [sp, #12]
 4160 01c8 4FF40053 		mov	r3, #8192
 4161 01cc 2A46     		mov	r2, r5
 4162 01ce 0495     		str	r5, [sp, #16]
 4163 01d0 0295     		str	r5, [sp, #8]
 4164 01d2 0193     		str	r3, [sp, #4]
 4165 01d4 0095     		str	r5, [sp]
 4166 01d6 4FF48053 		mov	r3, #4096
 4167 01da 4FF40061 		mov	r1, #2048
 4168 01de 68A8     		add	r0, sp, #416
 4169 01e0 0696     		str	r6, [sp, #24]
 4170 01e2 CDF814B0 		str	fp, [sp, #20]
 4171 01e6 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 4172              	.LVL454:
 116:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 117:src/main.cpp  ****   RL.setRegulator(KP,KI,KD,integralSaturation);
 4173              		.loc 9 117 0
 4174 01ea 704A     		ldr	r2, .L246+36
 116:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 4175              		.loc 9 116 0
 4176 01ec 1423     		movs	r3, #20
 4177              		.loc 9 117 0
 4178 01ee 1146     		mov	r1, r2
 116:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 4179              		.loc 9 116 0
 4180 01f0 ADF8E831 		strh	r3, [sp, #488]	@ movhi
 4181              		.loc 9 117 0
 4182 01f4 68A8     		add	r0, sp, #416
 4183 01f6 4FF08143 		mov	r3, #1082130432
 4184 01fa CDF80090 		str	r9, [sp]	@ float
 4185 01fe FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 4186              	.LVL455:
 118:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 119:src/main.cpp  **** 
 120:src/main.cpp  ****   motorSettings RR(MOTOR_TYPE_DC_MOTOR, "rear_right", TIM1, 4);
 4187              		.loc 9 120 0
 4188 0202 664B     		ldr	r3, .L246+20
 4189 0204 6D4A     		ldr	r2, .L246+52
 4190 0206 5146     		mov	r1, r10
 4191 0208 0097     		str	r7, [sp]
 4192 020a 80A8     		add	r0, sp, #512
 118:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 4193              		.loc 9 118 0
 4194 020c CDF8FC81 		str	r8, [sp, #508]	@ float
 4195              		.loc 9 120 0
 4196 0210 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4197              	.LVL456:
 121:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 122:src/main.cpp  ****               GPIO_Pin_15, GPIOA, GPIO_Pin_3, GPIOB,
 123:src/main.cpp  ****               GPIO_Pin_11, GPIOA);
 4198              		.loc 9 123 0
 4199 0214 4FF40063 		mov	r3, #2048
 4200 0218 0593     		str	r3, [sp, #20]
 4201 021a 4FF40043 		mov	r3, #32768
 4202 021e 2A46     		mov	r2, r5
 4203 0220 0495     		str	r5, [sp, #16]
 4204 0222 0193     		str	r3, [sp, #4]
 4205 0224 4FF40041 		mov	r1, #32768
 4206 0228 4FF48053 		mov	r3, #4096
 4207 022c 80A8     		add	r0, sp, #512
 4208 022e 0696     		str	r6, [sp, #24]
 4209 0230 CDF80CB0 		str	fp, [sp, #12]
 4210 0234 0296     		str	r6, [sp, #8]
 4211 0236 0096     		str	r6, [sp]
 4212 0238 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 4213              	.LVL457:
 124:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 125:src/main.cpp  ****   RR.setRegulator(KP,KI,KD,integralSaturation);
 4214              		.loc 9 125 0
 4215 023c 5B4A     		ldr	r2, .L246+36
 124:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 4216              		.loc 9 124 0
 4217 023e 1C23     		movs	r3, #28
 4218 0240 ADF84832 		strh	r3, [sp, #584]	@ movhi
 4219              		.loc 9 125 0
 4220 0244 1146     		mov	r1, r2
 4221 0246 4FF08143 		mov	r3, #1082130432
 4222 024a 80A8     		add	r0, sp, #512
 4223 024c CDF80090 		str	r9, [sp]	@ float
 4224 0250 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 4225              	.LVL458:
 126:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 127:src/main.cpp  **** 
 128:src/main.cpp  ****   servo_left = motor::createMotor(&SL);
 4226              		.loc 9 128 0
 4227 0254 08A8     		add	r0, sp, #32
 126:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 4228              		.loc 9 126 0
 4229 0256 CDF85C82 		str	r8, [sp, #604]	@ float
 4230              		.loc 9 128 0
 4231 025a FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4232              	.LVL459:
 129:src/main.cpp  ****   if(!servo_left->motorInit()){
 4233              		.loc 9 129 0
 4234 025e 0368     		ldr	r3, [r0]
 128:src/main.cpp  ****   if(!servo_left->motorInit()){
 4235              		.loc 9 128 0
 4236 0260 C4F8BC09 		str	r0, [r4, #2492]
 4237              		.loc 9 129 0
 4238 0264 DB68     		ldr	r3, [r3, #12]
 128:src/main.cpp  ****   if(!servo_left->motorInit()){
 4239              		.loc 9 128 0
 4240 0266 564D     		ldr	r5, .L246+56
 4241              		.loc 9 129 0
 4242 0268 9847     		blx	r3
 4243              	.LVL460:
 4244 026a 80B9     		cbnz	r0, .L234
 130:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 4245              		.loc 9 130 0
 4246 026c D5F8BC09 		ldr	r0, [r5, #2492]
 4247 0270 0368     		ldr	r3, [r0]
 4248 0272 1B69     		ldr	r3, [r3, #16]
 4249 0274 9847     		blx	r3
 4250              	.LVL461:
 4251 0276 5349     		ldr	r1, .L246+60
 4252 0278 0246     		mov	r2, r0
 4253 027a 05F51C60 		add	r0, r5, #2496
 4254 027e FFF7FEFF 		bl	sprintf
 4255              	.LVL462:
 131:src/main.cpp  ****     nh.logerror(str);
 4256              		.loc 9 131 0
 4257 0282 05F51C61 		add	r1, r5, #2496
 4258 0286 05F58360 		add	r0, r5, #1048
 4259 028a FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4260              	.LVL463:
 4261              	.L234:
 132:src/main.cpp  ****   }
 133:src/main.cpp  **** 
 134:src/main.cpp  ****   servo_right = motor::createMotor(&SR);
 4262              		.loc 9 134 0
 4263 028e 20A8     		add	r0, sp, #128
 4264 0290 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4265              	.LVL464:
 135:src/main.cpp  ****   if(!servo_right->motorInit()){
 4266              		.loc 9 135 0
 4267 0294 0368     		ldr	r3, [r0]
 134:src/main.cpp  ****   if(!servo_right->motorInit()){
 4268              		.loc 9 134 0
 4269 0296 C4F8580A 		str	r0, [r4, #2648]
 4270              		.loc 9 135 0
 4271 029a DB68     		ldr	r3, [r3, #12]
 134:src/main.cpp  ****   if(!servo_right->motorInit()){
 4272              		.loc 9 134 0
 4273 029c 484D     		ldr	r5, .L246+56
 4274              		.loc 9 135 0
 4275 029e 9847     		blx	r3
 4276              	.LVL465:
 4277 02a0 80B9     		cbnz	r0, .L235
 136:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 4278              		.loc 9 136 0
 4279 02a2 D5F8580A 		ldr	r0, [r5, #2648]
 4280 02a6 0368     		ldr	r3, [r0]
 4281 02a8 1B69     		ldr	r3, [r3, #16]
 4282 02aa 9847     		blx	r3
 4283              	.LVL466:
 4284 02ac 4549     		ldr	r1, .L246+60
 4285 02ae 0246     		mov	r2, r0
 4286 02b0 05F51C60 		add	r0, r5, #2496
 4287 02b4 FFF7FEFF 		bl	sprintf
 4288              	.LVL467:
 137:src/main.cpp  ****     nh.logerror(str);
 4289              		.loc 9 137 0
 4290 02b8 05F51C61 		add	r1, r5, #2496
 4291 02bc 05F58360 		add	r0, r5, #1048
 4292 02c0 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4293              	.LVL468:
 4294              	.L235:
 138:src/main.cpp  ****   }
 139:src/main.cpp  **** 
 140:src/main.cpp  ****   front_left = motor::createMotor(&FL);
 4295              		.loc 9 140 0
 4296 02c4 50A8     		add	r0, sp, #320
 4297 02c6 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4298              	.LVL469:
 141:src/main.cpp  ****   if(!front_left->motorInit()){
 4299              		.loc 9 141 0
 4300 02ca 0368     		ldr	r3, [r0]
 140:src/main.cpp  ****   if(!front_left->motorInit()){
 4301              		.loc 9 140 0
 4302 02cc 6060     		str	r0, [r4, #4]
 4303              		.loc 9 141 0
 4304 02ce DB68     		ldr	r3, [r3, #12]
 140:src/main.cpp  ****   if(!front_left->motorInit()){
 4305              		.loc 9 140 0
 4306 02d0 3B4D     		ldr	r5, .L246+56
 4307              		.loc 9 141 0
 4308 02d2 9847     		blx	r3
 4309              	.LVL470:
 4310 02d4 78B9     		cbnz	r0, .L236
 142:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 4311              		.loc 9 142 0
 4312 02d6 6868     		ldr	r0, [r5, #4]
 4313 02d8 0368     		ldr	r3, [r0]
 4314 02da 1B69     		ldr	r3, [r3, #16]
 4315 02dc 9847     		blx	r3
 4316              	.LVL471:
 4317 02de 3949     		ldr	r1, .L246+60
 4318 02e0 0246     		mov	r2, r0
 4319 02e2 05F51C60 		add	r0, r5, #2496
 4320 02e6 FFF7FEFF 		bl	sprintf
 4321              	.LVL472:
 143:src/main.cpp  ****     nh.logerror(str);
 4322              		.loc 9 143 0
 4323 02ea 05F51C61 		add	r1, r5, #2496
 4324 02ee 05F58360 		add	r0, r5, #1048
 4325 02f2 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4326              	.LVL473:
 4327              	.L236:
 144:src/main.cpp  ****   }
 145:src/main.cpp  **** 
 146:src/main.cpp  ****   front_right = motor::createMotor(&FR);
 4328              		.loc 9 146 0
 4329 02f6 38A8     		add	r0, sp, #224
 4330 02f8 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4331              	.LVL474:
 147:src/main.cpp  ****   if(!front_right->motorInit()){
 4332              		.loc 9 147 0
 4333 02fc 0368     		ldr	r3, [r0]
 146:src/main.cpp  ****   if(!front_right->motorInit()){
 4334              		.loc 9 146 0
 4335 02fe 2060     		str	r0, [r4]
 4336              		.loc 9 147 0
 4337 0300 DB68     		ldr	r3, [r3, #12]
 146:src/main.cpp  ****   if(!front_right->motorInit()){
 4338              		.loc 9 146 0
 4339 0302 2F4D     		ldr	r5, .L246+56
 4340              		.loc 9 147 0
 4341 0304 9847     		blx	r3
 4342              	.LVL475:
 4343 0306 78B9     		cbnz	r0, .L237
 148:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 4344              		.loc 9 148 0
 4345 0308 2868     		ldr	r0, [r5]
 4346 030a 0368     		ldr	r3, [r0]
 4347 030c 1B69     		ldr	r3, [r3, #16]
 4348 030e 9847     		blx	r3
 4349              	.LVL476:
 4350 0310 2C49     		ldr	r1, .L246+60
 4351 0312 0246     		mov	r2, r0
 4352 0314 05F51C60 		add	r0, r5, #2496
 4353 0318 FFF7FEFF 		bl	sprintf
 4354              	.LVL477:
 149:src/main.cpp  ****     nh.logerror(str);
 4355              		.loc 9 149 0
 4356 031c 05F51C61 		add	r1, r5, #2496
 4357 0320 05F58360 		add	r0, r5, #1048
 4358 0324 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4359              	.LVL478:
 4360              	.L237:
 150:src/main.cpp  ****   }
 151:src/main.cpp  **** 
 152:src/main.cpp  ****   rear_left = motor::createMotor(&RL);
 4361              		.loc 9 152 0
 4362 0328 68A8     		add	r0, sp, #416
 4363 032a FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4364              	.LVL479:
 153:src/main.cpp  ****   if(!rear_left->motorInit()){
 4365              		.loc 9 153 0
 4366 032e 0368     		ldr	r3, [r0]
 152:src/main.cpp  ****   if(!rear_left->motorInit()){
 4367              		.loc 9 152 0
 4368 0330 E060     		str	r0, [r4, #12]
 4369              		.loc 9 153 0
 4370 0332 DB68     		ldr	r3, [r3, #12]
 152:src/main.cpp  ****   if(!rear_left->motorInit()){
 4371              		.loc 9 152 0
 4372 0334 224D     		ldr	r5, .L246+56
 4373              		.loc 9 153 0
 4374 0336 9847     		blx	r3
 4375              	.LVL480:
 4376 0338 78B9     		cbnz	r0, .L238
 154:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 4377              		.loc 9 154 0
 4378 033a E868     		ldr	r0, [r5, #12]
 4379 033c 0368     		ldr	r3, [r0]
 4380 033e 1B69     		ldr	r3, [r3, #16]
 4381 0340 9847     		blx	r3
 4382              	.LVL481:
 4383 0342 2049     		ldr	r1, .L246+60
 4384 0344 0246     		mov	r2, r0
 4385 0346 05F51C60 		add	r0, r5, #2496
 4386 034a FFF7FEFF 		bl	sprintf
 4387              	.LVL482:
 155:src/main.cpp  ****     nh.logerror(str);
 4388              		.loc 9 155 0
 4389 034e 05F51C61 		add	r1, r5, #2496
 4390 0352 05F58360 		add	r0, r5, #1048
 4391 0356 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4392              	.LVL483:
 4393              	.L238:
 156:src/main.cpp  ****   }
 157:src/main.cpp  **** 
 158:src/main.cpp  ****   rear_right = motor::createMotor(&RR);
 4394              		.loc 9 158 0
 4395 035a 80A8     		add	r0, sp, #512
 4396 035c FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4397              	.LVL484:
 159:src/main.cpp  ****   if(!rear_right->motorInit()){
 4398              		.loc 9 159 0
 4399 0360 0368     		ldr	r3, [r0]
 158:src/main.cpp  ****   if(!rear_right->motorInit()){
 4400              		.loc 9 158 0
 4401 0362 A060     		str	r0, [r4, #8]
 4402              		.loc 9 159 0
 4403 0364 DB68     		ldr	r3, [r3, #12]
 158:src/main.cpp  ****   if(!rear_right->motorInit()){
 4404              		.loc 9 158 0
 4405 0366 164D     		ldr	r5, .L246+56
 4406              		.loc 9 159 0
 4407 0368 9847     		blx	r3
 4408              	.LVL485:
 4409 036a A8BB     		cbnz	r0, .L239
 160:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 4410              		.loc 9 160 0
 4411 036c A868     		ldr	r0, [r5, #8]
 4412 036e 0368     		ldr	r3, [r0]
 4413 0370 1B69     		ldr	r3, [r3, #16]
 4414 0372 9847     		blx	r3
 4415              	.LVL486:
 4416 0374 1349     		ldr	r1, .L246+60
 4417 0376 0246     		mov	r2, r0
 4418 0378 05F51C60 		add	r0, r5, #2496
 4419 037c FFF7FEFF 		bl	sprintf
 4420              	.LVL487:
 161:src/main.cpp  ****     nh.logerror(str);
 4421              		.loc 9 161 0
 4422 0380 05F51C61 		add	r1, r5, #2496
 4423 0384 24E0     		b	.L247
 4424              	.L248:
 4425 0386 00BF     		.align	2
 4426              	.L246:
 4427 0388 00023000 		.word	3146240
 4428 038c 00080040 		.word	1073743872
 4429 0390 BC010000 		.word	.LC17
 4430 0394 000C0140 		.word	1073810432
 4431 0398 C7010000 		.word	.LC18
 4432 039c 002C0140 		.word	1073818624
 4433 03a0 D3010000 		.word	.LC19
 4434 03a4 00080140 		.word	1073809408
 4435 03a8 00100140 		.word	1073811456
 4436 03ac 0000FA43 		.word	1140457472
 4437 03b0 00040040 		.word	1073742848
 4438 03b4 DF010000 		.word	.LC20
 4439 03b8 EA010000 		.word	.LC21
 4440 03bc F4010000 		.word	.LC22
 4441 03c0 00000000 		.word	.LANCHOR1
 4442 03c4 FF010000 		.word	.LC23
 4443 03c8 0050C347 		.word	1203982336
 4444 03cc 0AD7233D 		.word	1025758986
 4445              	.L247:
 4446 03d0 05F58360 		add	r0, r5, #1048
 4447 03d4 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4448              	.LVL488:
 4449              	.L239:
 162:src/main.cpp  ****   }
 163:src/main.cpp  **** 
 164:src/main.cpp  **** 
 165:src/main.cpp  ****   
 166:src/main.cpp  ****   //led_set(200);
 167:src/main.cpp  **** 
 168:src/main.cpp  ****   servo_left->setReference(90);
 4450              		.loc 9 168 0
 4451 03d8 D4F8BC09 		ldr	r0, [r4, #2492]
 4452 03dc 2049     		ldr	r1, .L249
 4453 03de 0368     		ldr	r3, [r0]
 4454 03e0 5B69     		ldr	r3, [r3, #20]
 4455 03e2 9847     		blx	r3
 4456              	.LVL489:
 169:src/main.cpp  ****   servo_right->setReference(100);
 4457              		.loc 9 169 0
 4458 03e4 D4F8580A 		ldr	r0, [r4, #2648]
 4459 03e8 1E49     		ldr	r1, .L249+4
 4460 03ea 0368     		ldr	r3, [r0]
 4461 03ec 5B69     		ldr	r3, [r3, #20]
 4462 03ee 9847     		blx	r3
 4463              	.LVL490:
 170:src/main.cpp  ****   front_right->setReference(0);
 4464              		.loc 9 170 0
 4465 03f0 2068     		ldr	r0, [r4]
 4466 03f2 0021     		movs	r1, #0
 4467 03f4 0368     		ldr	r3, [r0]
 4468 03f6 5B69     		ldr	r3, [r3, #20]
 4469 03f8 9847     		blx	r3
 4470              	.LVL491:
 171:src/main.cpp  ****   front_left->setReference(0);
 4471              		.loc 9 171 0
 4472 03fa 6068     		ldr	r0, [r4, #4]
 4473 03fc 0021     		movs	r1, #0
 4474 03fe 0368     		ldr	r3, [r0]
 4475 0400 5B69     		ldr	r3, [r3, #20]
 4476 0402 9847     		blx	r3
 4477              	.LVL492:
 172:src/main.cpp  ****   rear_right->setReference(0);
 4478              		.loc 9 172 0
 4479 0404 A068     		ldr	r0, [r4, #8]
 4480 0406 0021     		movs	r1, #0
 4481 0408 0368     		ldr	r3, [r0]
 4482 040a 5B69     		ldr	r3, [r3, #20]
 4483 040c 9847     		blx	r3
 4484              	.LVL493:
 173:src/main.cpp  ****   rear_left->setReference(0);
 4485              		.loc 9 173 0
 4486 040e E068     		ldr	r0, [r4, #12]
 4487 0410 0021     		movs	r1, #0
 4488 0412 0368     		ldr	r3, [r0]
 4489 0414 5B69     		ldr	r3, [r3, #20]
 4490 0416 9847     		blx	r3
 4491              	.LVL494:
 4492              	.L240:
 4493              	.LBB296:
 174:src/main.cpp  **** 
 175:src/main.cpp  ****   while (1){
 176:src/main.cpp  ****     debug_toggle();
 4494              		.loc 9 176 0
 4495 0418 FFF7FEFF 		bl	debug_toggle
 4496              	.LVL495:
 177:src/main.cpp  **** 
 178:src/main.cpp  ****     
 179:src/main.cpp  ****     servo_left->update(0.1);
 4497              		.loc 9 179 0
 4498 041c D4F8BC09 		ldr	r0, [r4, #2492]
 4499 0420 1149     		ldr	r1, .L249+8
 4500 0422 0368     		ldr	r3, [r0]
 4501 0424 DB69     		ldr	r3, [r3, #28]
 4502 0426 9847     		blx	r3
 4503              	.LVL496:
 180:src/main.cpp  ****     servo_right->update(0.1);
 4504              		.loc 9 180 0
 4505 0428 D4F8580A 		ldr	r0, [r4, #2648]
 4506 042c 0E49     		ldr	r1, .L249+8
 4507 042e 0368     		ldr	r3, [r0]
 4508 0430 DB69     		ldr	r3, [r3, #28]
 4509 0432 9847     		blx	r3
 4510              	.LVL497:
 181:src/main.cpp  ****     float s_ = rear_right->update(0.1);
 4511              		.loc 9 181 0
 4512 0434 A068     		ldr	r0, [r4, #8]
 4513 0436 0C49     		ldr	r1, .L249+8
 4514 0438 0368     		ldr	r3, [r0]
 4515 043a DB69     		ldr	r3, [r3, #28]
 4516 043c 9847     		blx	r3
 4517              	.LVL498:
 182:src/main.cpp  ****     //rear_left->update(0.1);
 183:src/main.cpp  ****     //front_left->update(0.1);
 184:src/main.cpp  ****     //front_right->update(0.1);
 185:src/main.cpp  **** 
 186:src/main.cpp  ****     //printf(hello, "Speed is: %d", (int)s_);
 187:src/main.cpp  ****     str_msg.data = s_;
 4518              		.loc 9 187 0
 4519 043e C4F8600A 		str	r0, [r4, #2656]	@ float
 4520              	.LVL499:
 4521              	.LBB297:
 4522              	.LBB298:
 4523              		.file 15 "./lib/ros_lib/ros/publisher.h"
   1:./lib/ros_lib/ros/publisher.h **** /* 
   2:./lib/ros_lib/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/publisher.h ****  *
   4:./lib/ros_lib/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/publisher.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/publisher.h ****  *
   7:./lib/ros_lib/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/publisher.h ****  * are met:
  10:./lib/ros_lib/ros/publisher.h ****  *
  11:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/publisher.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/publisher.h ****  *
  21:./lib/ros_lib/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/publisher.h ****  */
  34:./lib/ros_lib/ros/publisher.h **** 
  35:./lib/ros_lib/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:./lib/ros_lib/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:./lib/ros_lib/ros/publisher.h **** 
  38:./lib/ros_lib/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/publisher.h **** #include "node_handle.h"
  40:./lib/ros_lib/ros/publisher.h **** 
  41:./lib/ros_lib/ros/publisher.h **** namespace ros {
  42:./lib/ros_lib/ros/publisher.h **** 
  43:./lib/ros_lib/ros/publisher.h ****   /* Generic Publisher */
  44:./lib/ros_lib/ros/publisher.h ****   class Publisher
  45:./lib/ros_lib/ros/publisher.h ****   {
  46:./lib/ros_lib/ros/publisher.h ****     public:
  47:./lib/ros_lib/ros/publisher.h ****       Publisher( const char * topic_name, Msg * msg, int endpoint=rosserial_msgs::TopicInfo::ID_PUB
  48:./lib/ros_lib/ros/publisher.h ****         topic_(topic_name), 
  49:./lib/ros_lib/ros/publisher.h ****         msg_(msg),
  50:./lib/ros_lib/ros/publisher.h ****         endpoint_(endpoint) {};
  51:./lib/ros_lib/ros/publisher.h **** 
  52:./lib/ros_lib/ros/publisher.h ****       int publish( const Msg * msg ) { return nh_->publish(id_, msg); };
 4524              		.loc 15 52 0
 4525 0442 D4F8B409 		ldr	r0, [r4, #2484]
 4526              	.LVL500:
 4527 0446 094A     		ldr	r2, .L249+12
 4528 0448 0368     		ldr	r3, [r0]
 4529 044a D4F8B019 		ldr	r1, [r4, #2480]
 4530 044e 1B68     		ldr	r3, [r3]
 4531 0450 9847     		blx	r3
 4532              	.LVL501:
 4533              	.LBE298:
 4534              	.LBE297:
 188:src/main.cpp  ****     chatter.publish( &str_msg );
 189:src/main.cpp  **** 
 190:src/main.cpp  ****     nh.spinOnce();
 4535              		.loc 9 190 0
 4536 0452 0748     		ldr	r0, .L249+16
 4537 0454 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 4538              	.LVL502:
 191:src/main.cpp  **** 
 192:src/main.cpp  ****     delay(10);
 4539              		.loc 9 192 0
 4540 0458 0A20     		movs	r0, #10
 4541 045a FFF7FEFF 		bl	delay
 4542              	.LVL503:
 4543 045e DBE7     		b	.L240
 4544              	.L250:
 4545              		.align	2
 4546              	.L249:
 4547 0460 0000B442 		.word	1119092736
 4548 0464 0000C842 		.word	1120403456
 4549 0468 CDCCCC3D 		.word	1036831949
 4550 046c 5C0A0000 		.word	.LANCHOR1+2652
 4551 0470 18040000 		.word	.LANCHOR1+1048
 4552              	.LBE296:
 4553              		.cfi_endproc
 4554              	.LFE193:
 4555              		.fnend
 4557              		.text
 4558              		.align	1
 4559              		.global	_Z13assert_failedPhm
 4560              		.thumb
 4561              		.thumb_func
 4563              	_Z13assert_failedPhm:
 4564              		.fnstart
 4565              	.LFB194:
 193:src/main.cpp  ****   }
 194:src/main.cpp  ****   return 0;
 195:src/main.cpp  **** }
 196:src/main.cpp  **** 
 197:src/main.cpp  **** void assert_failed(uint8_t* file, uint32_t line){
 4566              		.loc 9 197 0
 4567              		.cfi_startproc
 4568              		@ args = 0, pretend = 0, frame = 152
 4569              		@ frame_needed = 0, uses_anonymous_args = 0
 4570              	.LVL504:
 4571 00bc 00B5     		push	{lr}
 4572              		.save {lr}
 4573              	.LCFI42:
 4574              		.cfi_def_cfa_offset 4
 4575              		.cfi_offset 14, -4
 4576              		.pad #156
 4577 00be A7B0     		sub	sp, sp, #156
 4578              	.LCFI43:
 4579              		.cfi_def_cfa_offset 160
 198:src/main.cpp  ****   /* User can add his own implementation to report the file name and line number,
 199:src/main.cpp  ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 200:src/main.cpp  ****   char str[150];
 201:src/main.cpp  **** 
 202:src/main.cpp  ****   sprintf(str, "Wrong parameters value: file %s on line %d\r\n", file, line);
 4580              		.loc 9 202 0
 4581 00c0 0B46     		mov	r3, r1
 4582 00c2 0246     		mov	r2, r0
 4583 00c4 0849     		ldr	r1, .L253
 4584              	.LVL505:
 4585 00c6 6846     		mov	r0, sp
 4586              	.LVL506:
 4587 00c8 FFF7FEFF 		bl	sprintf
 4588              	.LVL507:
 203:src/main.cpp  ****   nh.logerror(str);
 4589              		.loc 9 203 0
 4590 00cc 6946     		mov	r1, sp
 4591 00ce 0748     		ldr	r0, .L253+4
 4592 00d0 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4593              	.LVL508:
 4594              	.L252:
 204:src/main.cpp  ****   while (1){
 205:src/main.cpp  ****     debug_toggle();
 4595              		.loc 9 205 0
 4596 00d4 FFF7FEFF 		bl	debug_toggle
 4597              	.LVL509:
 206:src/main.cpp  ****     delay(100);
 4598              		.loc 9 206 0
 4599 00d8 6420     		movs	r0, #100
 4600 00da FFF7FEFF 		bl	delay
 4601              	.LVL510:
 207:src/main.cpp  ****     nh.spinOnce();
 4602              		.loc 9 207 0
 4603 00de 0348     		ldr	r0, .L253+4
 4604 00e0 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 4605              	.LVL511:
 4606 00e4 F6E7     		b	.L252
 4607              	.L254:
 4608 00e6 00BF     		.align	2
 4609              	.L253:
 4610 00e8 29020000 		.word	.LC24
 4611 00ec 18040000 		.word	.LANCHOR1+1048
 4612              		.cfi_endproc
 4613              	.LFE194:
 4614              		.fnend
 4616              		.section	.text.startup
 4617              		.align	1
 4618              		.thumb
 4619              		.thumb_func
 4621              	_GLOBAL__sub_I_USART_FIFO:
 4622              		.fnstart
 4623              	.LFB232:
 208:src/main.cpp  ****   }
 209:src/main.cpp  **** }
 4624              		.loc 9 209 0
 4625              		.cfi_startproc
 4626              		@ args = 0, pretend = 0, frame = 0
 4627              		@ frame_needed = 0, uses_anonymous_args = 0
 4628              	.LVL512:
 4629              	.LBB349:
 4630              	.LBB350:
 4631              	.LBB351:
 4632              	.LBB352:
 119:./lib/ros_lib/ros/node_handle.h **** 
 4633              		.loc 11 119 0
 4634 0474 434B     		ldr	r3, .L264
 4635 0476 444A     		ldr	r2, .L264+4
 4636              	.LBE352:
 4637              	.LBE351:
 4638              	.LBE350:
 4639              	.LBE349:
 4640              		.loc 9 209 0
 4641 0478 30B5     		push	{r4, r5, lr}
 4642              	.LCFI44:
 4643              		.cfi_def_cfa_offset 12
 4644              		.cfi_offset 4, -12
 4645              		.cfi_offset 5, -8
 4646              		.cfi_offset 14, -4
 4647              	.LBB442:
 4648              	.LBB441:
 4649              	.LBB370:
 4650              	.LBB369:
 119:./lib/ros_lib/ros/node_handle.h **** 
 4651              		.loc 11 119 0
 4652 047a C3F81824 		str	r2, [r3, #1048]
 4653              	.LVL513:
 4654              	.LBB353:
 4655              	.LBB354:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
 4656              		.loc 12 60 0
 4657 047e 434A     		ldr	r2, .L264+8
 4658              	.LBE354:
 4659              	.LBE353:
 4660              	.LBB357:
 4661              	.LBB358:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 4662              		.loc 4 70 0
 4663 0480 4349     		ldr	r1, .L264+12
 4664              	.LBE358:
 4665              	.LBE357:
 4666              	.LBB361:
 4667              	.LBB355:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
 4668              		.loc 12 60 0
 4669 0482 C3F81C24 		str	r2, [r3, #1052]
  61:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
 4670              		.loc 12 61 0
 4671 0486 4FF4E132 		mov	r2, #115200
 4672 048a C3F82024 		str	r2, [r3, #1056]
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
 4673              		.loc 12 62 0
 4674 048e 0022     		movs	r2, #0
 4675 0490 5A61     		str	r2, [r3, #20]
 4676              	.LBE355:
 4677              	.LBE361:
 4678              	.LBB362:
 4679              	.LBB359:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 4680              		.loc 4 70 0
 4681 0492 C3F82019 		str	r1, [r3, #2336]
 4682              	.LBE359:
 4683              	.LBE362:
 4684              	.LBB363:
 4685              	.LBB356:
  63:./lib/ros_lib/ArduinoHardware.h ****     }
 4686              		.loc 12 63 0
 4687 0496 1A61     		str	r2, [r3, #16]
 4688              	.LVL514:
 4689              	.LBE356:
 4690              	.LBE363:
 119:./lib/ros_lib/ros/node_handle.h **** 
 4691              		.loc 11 119 0
 4692 0498 83F80C29 		strb	r2, [r3, #2316]
 4693              	.LVL515:
 4694              	.LBB364:
 4695              	.LBB360:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 4696              		.loc 4 70 0
 4697 049c 83F82429 		strb	r2, [r3, #2340]
 4698 04a0 C3F82C29 		str	r2, [r3, #2348]
 4699 04a4 83F83029 		strb	r2, [r3, #2352]
 4700 04a8 C3F83829 		str	r2, [r3, #2360]
 4701 04ac 83F83C29 		strb	r2, [r3, #2364]
 4702 04b0 C3F84429 		str	r2, [r3, #2372]
 4703              	.LVL516:
 4704 04b4 03F62C01 		addw	r1, r3, #2092
 4705 04b8 03F50963 		add	r3, r3, #2192
 4706              	.LVL517:
 4707              	.L256:
 4708              	.LBE360:
 4709              	.LBE364:
 4710              	.LBB365:
 122:./lib/ros_lib/ros/node_handle.h **** 
 4711              		.loc 11 122 0
 4712 04bc 41F8042F 		str	r2, [r1, #4]!
 121:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 4713              		.loc 11 121 0
 4714 04c0 8B42     		cmp	r3, r1
 4715 04c2 FBD1     		bne	.L256
 4716 04c4 334A     		ldr	r2, .L264+16
 4717              	.LBE365:
 4718              	.LBB366:
 125:./lib/ros_lib/ros/node_handle.h **** 
 4719              		.loc 11 125 0
 4720 04c6 0021     		movs	r1, #0
 4721              	.L257:
 4722 04c8 43F8041F 		str	r1, [r3, #4]!
 4723              	.LVL518:
 124:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 4724              		.loc 11 124 0
 4725 04cc 9A42     		cmp	r2, r3
 4726 04ce FBD1     		bne	.L257
 4727 04d0 0023     		movs	r3, #0
 4728              	.LBE366:
 4729              	.LBB367:
 128:./lib/ros_lib/ros/node_handle.h **** 
 4730              		.loc 11 128 0
 4731 04d2 1946     		mov	r1, r3
 4732 04d4 3048     		ldr	r0, .L264+20
 4733              	.L258:
 4734              	.LVL519:
 4735 04d6 C218     		adds	r2, r0, r3
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 4736              		.loc 11 127 0
 4737 04d8 0133     		adds	r3, r3, #1
 4738              	.LVL520:
 4739 04da B3F5007F 		cmp	r3, #512
 128:./lib/ros_lib/ros/node_handle.h **** 
 4740              		.loc 11 128 0
 4741 04de 1176     		strb	r1, [r2, #24]
 4742 04e0 2D4D     		ldr	r5, .L264+20
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 4743              		.loc 11 127 0
 4744 04e2 F8D1     		bne	.L258
 4745 04e4 0021     		movs	r1, #0
 4746              	.LBE367:
 4747              	.LBB368:
 131:./lib/ros_lib/ros/node_handle.h **** 
 4748              		.loc 11 131 0
 4749 04e6 0C46     		mov	r4, r1
 4750              	.LVL521:
 4751              	.L259:
 4752 04e8 6818     		adds	r0, r5, r1
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 4753              		.loc 11 130 0
 4754 04ea 0131     		adds	r1, r1, #1
 4755              	.LVL522:
 4756 04ec B1F5007F 		cmp	r1, #512
 131:./lib/ros_lib/ros/node_handle.h **** 
 4757              		.loc 11 131 0
 4758 04f0 244B     		ldr	r3, .L264
 4759 04f2 4FF00002 		mov	r2, #0
 4760 04f6 80F81842 		strb	r4, [r0, #536]
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 4761              		.loc 11 130 0
 4762 04fa F5D1     		bne	.L259
 4763              	.LVL523:
 4764              	.LBE368:
 4765              	.LBE369:
 4766              	.LBE370:
 4767              	.LBB371:
 4768              	.LBB372:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4769              		.loc 10 67 0
 4770 04fc 2749     		ldr	r1, .L264+24
  69:./lib/ros_lib/ros/subscriber.h ****       };
 4771              		.loc 10 69 0
 4772 04fe 2848     		ldr	r0, .L264+28
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4773              		.loc 10 67 0
 4774 0500 C3F84819 		str	r1, [r3, #2376]
 4775              	.LVL524:
 4776              	.LBB373:
 4777              	.LBB374:
  27:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 4778              		.loc 8 27 0
 4779 0504 2749     		ldr	r1, .L264+32
 4780              	.LBE374:
 4781              	.LBE373:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 4782              		.loc 10 69 0
 4783 0506 C3F85009 		str	r0, [r3, #2384]
 4784              	.LBB391:
 4785              	.LBB385:
  27:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 4786              		.loc 8 27 0
 4787 050a C3F85419 		str	r1, [r3, #2388]
 4788              	.LVL525:
 4789              	.LBB375:
 4790              	.LBB376:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 4791              		.loc 7 23 0
 4792 050e 2649     		ldr	r1, .L264+36
 4793              	.LBE376:
 4794              	.LBE375:
 4795              	.LBE385:
 4796              	.LBE391:
 4797              	.LBE372:
 4798              	.LBE371:
 4799              	.LBB403:
 4800              	.LBB404:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4801              		.loc 10 67 0
 4802 0510 2648     		ldr	r0, .L264+40
 4803              	.LBE404:
 4804              	.LBE403:
 4805              	.LBB417:
 4806              	.LBB397:
 4807              	.LBB392:
 4808              	.LBB386:
 4809              	.LBB382:
 4810              	.LBB379:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 4811              		.loc 7 23 0
 4812 0512 C3F85819 		str	r1, [r3, #2392]
 4813 0516 2649     		ldr	r1, .L264+44
 4814              	.LBE379:
 4815              	.LBE382:
 4816              	.LBE386:
 4817              	.LBE392:
 4818              	.LBE397:
 4819              	.LBE417:
 4820              	.LBB418:
 4821              	.LBB411:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4822              		.loc 10 67 0
 4823 0518 C3F88C09 		str	r0, [r3, #2444]
 4824              	.LBE411:
 4825              	.LBE418:
 4826              	.LBB419:
 4827              	.LBB398:
 4828              	.LBB393:
 4829              	.LBB387:
 4830              	.LBB383:
 4831              	.LBB380:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 4832              		.loc 7 23 0
 4833 051c C3F86819 		str	r1, [r3, #2408]
 4834              	.LBE380:
 4835              	.LBE383:
 4836              	.LBE387:
 4837              	.LBE393:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4838              		.loc 10 67 0
 4839 0520 2449     		ldr	r1, .L264+48
 4840              	.LBE398:
 4841              	.LBE419:
 4842              	.LBB420:
 4843              	.LBB412:
 4844              	.LBB405:
 4845              	.LBB406:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 4846              		.loc 6 18 0
 4847 0522 2548     		ldr	r0, .L264+52
 4848              	.LBE406:
 4849              	.LBE405:
 4850              	.LBE412:
 4851              	.LBE420:
 4852              	.LBB421:
 4853              	.LBB399:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4854              		.loc 10 67 0
 4855 0524 C3F88419 		str	r1, [r3, #2436]
 4856 0528 0121     		movs	r1, #1
 4857 052a C3F88819 		str	r1, [r3, #2440]
 4858              	.LBE399:
 4859              	.LBE421:
 4860              	.LBB422:
 4861              	.LBB413:
 4862 052e C3F8A419 		str	r1, [r3, #2468]
  69:./lib/ros_lib/ros/subscriber.h ****       };
 4863              		.loc 10 69 0
 4864 0532 2249     		ldr	r1, .L264+56
 4865              	.LBB409:
 4866              	.LBB407:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 4867              		.loc 6 18 0
 4868 0534 C3F89809 		str	r0, [r3, #2456]
 4869              	.LBE407:
 4870              	.LBE409:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 4871              		.loc 10 69 0
 4872 0538 C3F89419 		str	r1, [r3, #2452]
 4873              	.LBE413:
 4874              	.LBE422:
 4875              	.LBB423:
 4876              	.LBB424:
  18:./lib/ros_lib/std_msgs/Float32.h ****     {
 4877              		.loc 5 18 0
 4878 053c 2049     		ldr	r1, .L264+60
 4879              	.LBE424:
 4880              	.LBE423:
 4881              	.LBB426:
 4882              	.LBB414:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4883              		.loc 10 67 0
 4884 053e 2148     		ldr	r0, .L264+64
 4885              	.LBE414:
 4886              	.LBE426:
 4887              	.LBB427:
 4888              	.LBB425:
  18:./lib/ros_lib/std_msgs/Float32.h ****     {
 4889              		.loc 5 18 0
 4890 0540 C3F85C1A 		str	r1, [r3, #2652]
 4891 0544 0021     		movs	r1, #0
 4892 0546 C3F8601A 		str	r1, [r3, #2656]	@ float
 4893              	.LBE425:
 4894              	.LBE427:
 4895              	.LBB428:
 4896              	.LBB429:
  50:./lib/ros_lib/ros/publisher.h **** 
 4897              		.loc 15 50 0
 4898 054a 1F49     		ldr	r1, .L264+68
 4899              	.LBE429:
 4900              	.LBE428:
 4901              	.LBB433:
 4902              	.LBB400:
 4903              	.LBB394:
 4904              	.LBB388:
  27:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 4905              		.loc 8 27 0
 4906 054c 83F86C29 		strb	r2, [r3, #2412]
 4907              	.LBE388:
 4908              	.LBE394:
 4909              	.LBE400:
 4910              	.LBE433:
 4911              	.LBB434:
 4912              	.LBB430:
  50:./lib/ros_lib/ros/publisher.h **** 
 4913              		.loc 15 50 0
 4914 0550 C3F8A819 		str	r1, [r3, #2472]
 4915              	.LBE430:
 4916              	.LBE434:
 4917              	.LBB435:
 4918              	.LBB401:
 4919              	.LBB395:
 4920              	.LBB389:
  27:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 4921              		.loc 8 27 0
 4922 0554 83F87829 		strb	r2, [r3, #2424]
 4923              	.LBE389:
 4924              	.LBE395:
 4925              	.LBE401:
 4926              	.LBE435:
 4927              	.LBB436:
 4928              	.LBB431:
  50:./lib/ros_lib/ros/publisher.h **** 
 4929              		.loc 15 50 0
 4930 0558 03F65C21 		addw	r1, r3, #2652
 4931              	.LBE431:
 4932              	.LBE436:
 4933              	.LBB437:
 4934              	.LBB415:
 4935              	.LBB410:
 4936              	.LBB408:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 4937              		.loc 6 18 0
 4938 055c 83F89C29 		strb	r2, [r3, #2460]
 4939              	.LBE408:
 4940              	.LBE410:
 4941              	.LBE415:
 4942              	.LBE437:
 4943              	.LBB438:
 4944              	.LBB402:
 4945              	.LBB396:
 4946              	.LBB390:
 4947              	.LBB384:
 4948              	.LBB381:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 4949              		.loc 7 23 0
 4950 0560 C3F85C29 		str	r2, [r3, #2396]
 4951              	.LVL526:
 4952              	.LBB377:
 4953              	.LBB378:
 4954              		.loc 14 52 0
 4955 0564 C3F86029 		str	r2, [r3, #2400]
 4956 0568 C3F86429 		str	r2, [r3, #2404]
 4957              	.LVL527:
 4958              	.LBE378:
 4959              	.LBE377:
 4960              	.LBE381:
 4961              	.LBE384:
  27:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 4962              		.loc 8 27 0
 4963 056c C3F87429 		str	r2, [r3, #2420]
 4964 0570 C3F88029 		str	r2, [r3, #2432]
 4965              	.LVL528:
 4966              	.LBE390:
 4967              	.LBE396:
 4968              	.LBE402:
 4969              	.LBE438:
 4970              	.LBB439:
 4971              	.LBB416:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4972              		.loc 10 67 0
 4973 0574 C3F8A009 		str	r0, [r3, #2464]
 4974              	.LBE416:
 4975              	.LBE439:
 4976              	.LBB440:
 4977              	.LBB432:
  50:./lib/ros_lib/ros/publisher.h **** 
 4978              		.loc 15 50 0
 4979 0578 C3F8AC19 		str	r1, [r3, #2476]
 4980 057c C3F8B829 		str	r2, [r3, #2488]
 4981              	.LVL529:
 4982 0580 30BD     		pop	{r4, r5, pc}
 4983              	.L265:
 4984 0582 00BF     		.align	2
 4985              	.L264:
 4986 0584 00000000 		.word	.LANCHOR1
 4987 0588 08000000 		.word	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE+8
 4988 058c 00380140 		.word	1073821696
 4989 0590 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 4990 0594 F4080000 		.word	.LANCHOR1+2292
 4991 0598 18040000 		.word	.LANCHOR1+1048
 4992 059c 08000000 		.word	_ZTVN3ros10SubscriberIN11sensor_msgs3JoyEEE+8
 4993 05a0 56020000 		.word	.LC25
 4994 05a4 08000000 		.word	_ZTVN11sensor_msgs3JoyE+8
 4995 05a8 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 4996 05ac 08000000 		.word	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE+8
 4997 05b0 BB010000 		.word	.LC16
 4998 05b4 00000000 		.word	_Z8motor_cbRKN11sensor_msgs3JoyE
 4999 05b8 08000000 		.word	_ZTVN8std_msgs5UInt8E+8
 5000 05bc 5A020000 		.word	.LC26
 5001 05c0 08000000 		.word	_ZTVN8std_msgs7Float32E+8
 5002 05c4 00000000 		.word	_Z6led_cbRKN8std_msgs5UInt8E
 5003 05c8 5E020000 		.word	.LC27
 5004              	.LBE432:
 5005              	.LBE440:
 5006              	.LBE441:
 5007              	.LBE442:
 5008              		.cfi_endproc
 5009              	.LFE232:
 5010              		.cantunwind
 5011              		.fnend
 5013              		.section	.init_array,"aw",%init_array
 5014              		.align	2
 5015 0000 00000000 		.word	_GLOBAL__sub_I_USART_FIFO(target1)
 5016              		.weak	_ZTSN3ros3MsgE
 5017              		.section	.rodata._ZTSN3ros3MsgE,"aG",%progbits,_ZTSN3ros3MsgE,comdat
 5020              	_ZTSN3ros3MsgE:
 5021 0000 4E33726F 		.ascii	"N3ros3MsgE\000"
 5021      73334D73 
 5021      674500
 5022              		.weak	_ZTIN3ros3MsgE
 5023              		.section	.rodata._ZTIN3ros3MsgE,"aG",%progbits,_ZTIN3ros3MsgE,comdat
 5024              		.align	2
 5027              	_ZTIN3ros3MsgE:
 5028 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 5029 0004 00000000 		.word	_ZTSN3ros3MsgE
 5030              		.weak	_ZTSN8std_msgs4TimeE
 5031              		.section	.rodata._ZTSN8std_msgs4TimeE,"aG",%progbits,_ZTSN8std_msgs4TimeE,comdat
 5034              	_ZTSN8std_msgs4TimeE:
 5035 0000 4E387374 		.ascii	"N8std_msgs4TimeE\000"
 5035      645F6D73 
 5035      67733454 
 5035      696D6545 
 5035      00
 5036              		.weak	_ZTIN8std_msgs4TimeE
 5037              		.section	.rodata._ZTIN8std_msgs4TimeE,"aG",%progbits,_ZTIN8std_msgs4TimeE,comdat
 5038              		.align	2
 5041              	_ZTIN8std_msgs4TimeE:
 5042 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5043 0004 00000000 		.word	_ZTSN8std_msgs4TimeE
 5044 0008 00000000 		.word	_ZTIN3ros3MsgE
 5045              		.weak	_ZTSN14rosserial_msgs9TopicInfoE
 5046              		.section	.rodata._ZTSN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTSN14rosserial_msgs9TopicInfoE,
 5049              	_ZTSN14rosserial_msgs9TopicInfoE:
 5050 0000 4E313472 		.ascii	"N14rosserial_msgs9TopicInfoE\000"
 5050      6F737365 
 5050      7269616C 
 5050      5F6D7367 
 5050      7339546F 
 5051              		.weak	_ZTIN14rosserial_msgs9TopicInfoE
 5052              		.section	.rodata._ZTIN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTIN14rosserial_msgs9TopicInfoE,
 5053              		.align	2
 5056              	_ZTIN14rosserial_msgs9TopicInfoE:
 5057 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5058 0004 00000000 		.word	_ZTSN14rosserial_msgs9TopicInfoE
 5059 0008 00000000 		.word	_ZTIN3ros3MsgE
 5060              		.weak	_ZTSN14rosserial_msgs3LogE
 5061              		.section	.rodata._ZTSN14rosserial_msgs3LogE,"aG",%progbits,_ZTSN14rosserial_msgs3LogE,comdat
 5064              	_ZTSN14rosserial_msgs3LogE:
 5065 0000 4E313472 		.ascii	"N14rosserial_msgs3LogE\000"
 5065      6F737365 
 5065      7269616C 
 5065      5F6D7367 
 5065      73334C6F 
 5066              		.weak	_ZTIN14rosserial_msgs3LogE
 5067              		.section	.rodata._ZTIN14rosserial_msgs3LogE,"aG",%progbits,_ZTIN14rosserial_msgs3LogE,comdat
 5068              		.align	2
 5071              	_ZTIN14rosserial_msgs3LogE:
 5072 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5073 0004 00000000 		.word	_ZTSN14rosserial_msgs3LogE
 5074 0008 00000000 		.word	_ZTIN3ros3MsgE
 5075              		.weak	_ZTSN14rosserial_msgs20RequestParamResponseE
 5076              		.section	.rodata._ZTSN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTSN14rosserial_msgs
 5079              	_ZTSN14rosserial_msgs20RequestParamResponseE:
 5080 0000 4E313472 		.ascii	"N14rosserial_msgs20RequestParamResponseE\000"
 5080      6F737365 
 5080      7269616C 
 5080      5F6D7367 
 5080      73323052 
 5081              		.weak	_ZTIN14rosserial_msgs20RequestParamResponseE
 5082              		.section	.rodata._ZTIN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTIN14rosserial_msgs
 5083              		.align	2
 5086              	_ZTIN14rosserial_msgs20RequestParamResponseE:
 5087 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5088 0004 00000000 		.word	_ZTSN14rosserial_msgs20RequestParamResponseE
 5089 0008 00000000 		.word	_ZTIN3ros3MsgE
 5090              		.weak	_ZTSN3ros15NodeHandleBase_E
 5091              		.section	.rodata._ZTSN3ros15NodeHandleBase_E,"aG",%progbits,_ZTSN3ros15NodeHandleBase_E,comdat
 5094              	_ZTSN3ros15NodeHandleBase_E:
 5095 0000 4E33726F 		.ascii	"N3ros15NodeHandleBase_E\000"
 5095      7331354E 
 5095      6F646548 
 5095      616E646C 
 5095      65426173 
 5096              		.weak	_ZTIN3ros15NodeHandleBase_E
 5097              		.section	.rodata._ZTIN3ros15NodeHandleBase_E,"aG",%progbits,_ZTIN3ros15NodeHandleBase_E,comdat
 5098              		.align	2
 5101              	_ZTIN3ros15NodeHandleBase_E:
 5102 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 5103 0004 00000000 		.word	_ZTSN3ros15NodeHandleBase_E
 5104              		.weak	_ZTSN3ros11Subscriber_E
 5105              		.section	.rodata._ZTSN3ros11Subscriber_E,"aG",%progbits,_ZTSN3ros11Subscriber_E,comdat
 5108              	_ZTSN3ros11Subscriber_E:
 5109 0000 4E33726F 		.ascii	"N3ros11Subscriber_E\000"
 5109      73313153 
 5109      75627363 
 5109      72696265 
 5109      725F4500 
 5110              		.weak	_ZTIN3ros11Subscriber_E
 5111              		.section	.rodata._ZTIN3ros11Subscriber_E,"aG",%progbits,_ZTIN3ros11Subscriber_E,comdat
 5112              		.align	2
 5115              	_ZTIN3ros11Subscriber_E:
 5116 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 5117 0004 00000000 		.word	_ZTSN3ros11Subscriber_E
 5118              		.weak	_ZTSN8std_msgs7Float32E
 5119              		.section	.rodata._ZTSN8std_msgs7Float32E,"aG",%progbits,_ZTSN8std_msgs7Float32E,comdat
 5122              	_ZTSN8std_msgs7Float32E:
 5123 0000 4E387374 		.ascii	"N8std_msgs7Float32E\000"
 5123      645F6D73 
 5123      67733746 
 5123      6C6F6174 
 5123      33324500 
 5124              		.weak	_ZTIN8std_msgs7Float32E
 5125              		.section	.rodata._ZTIN8std_msgs7Float32E,"aG",%progbits,_ZTIN8std_msgs7Float32E,comdat
 5126              		.align	2
 5129              	_ZTIN8std_msgs7Float32E:
 5130 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5131 0004 00000000 		.word	_ZTSN8std_msgs7Float32E
 5132 0008 00000000 		.word	_ZTIN3ros3MsgE
 5133              		.weak	_ZTSN8std_msgs5UInt8E
 5134              		.section	.rodata._ZTSN8std_msgs5UInt8E,"aG",%progbits,_ZTSN8std_msgs5UInt8E,comdat
 5137              	_ZTSN8std_msgs5UInt8E:
 5138 0000 4E387374 		.ascii	"N8std_msgs5UInt8E\000"
 5138      645F6D73 
 5138      67733555 
 5138      496E7438 
 5138      4500
 5139              		.weak	_ZTIN8std_msgs5UInt8E
 5140              		.section	.rodata._ZTIN8std_msgs5UInt8E,"aG",%progbits,_ZTIN8std_msgs5UInt8E,comdat
 5141              		.align	2
 5144              	_ZTIN8std_msgs5UInt8E:
 5145 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5146 0004 00000000 		.word	_ZTSN8std_msgs5UInt8E
 5147 0008 00000000 		.word	_ZTIN3ros3MsgE
 5148              		.weak	_ZTSN8std_msgs6HeaderE
 5149              		.section	.rodata._ZTSN8std_msgs6HeaderE,"aG",%progbits,_ZTSN8std_msgs6HeaderE,comdat
 5152              	_ZTSN8std_msgs6HeaderE:
 5153 0000 4E387374 		.ascii	"N8std_msgs6HeaderE\000"
 5153      645F6D73 
 5153      67733648 
 5153      65616465 
 5153      724500
 5154              		.weak	_ZTIN8std_msgs6HeaderE
 5155              		.section	.rodata._ZTIN8std_msgs6HeaderE,"aG",%progbits,_ZTIN8std_msgs6HeaderE,comdat
 5156              		.align	2
 5159              	_ZTIN8std_msgs6HeaderE:
 5160 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5161 0004 00000000 		.word	_ZTSN8std_msgs6HeaderE
 5162 0008 00000000 		.word	_ZTIN3ros3MsgE
 5163              		.weak	_ZTSN11sensor_msgs3JoyE
 5164              		.section	.rodata._ZTSN11sensor_msgs3JoyE,"aG",%progbits,_ZTSN11sensor_msgs3JoyE,comdat
 5167              	_ZTSN11sensor_msgs3JoyE:
 5168 0000 4E313173 		.ascii	"N11sensor_msgs3JoyE\000"
 5168      656E736F 
 5168      725F6D73 
 5168      6773334A 
 5168      6F794500 
 5169              		.weak	_ZTIN11sensor_msgs3JoyE
 5170              		.section	.rodata._ZTIN11sensor_msgs3JoyE,"aG",%progbits,_ZTIN11sensor_msgs3JoyE,comdat
 5171              		.align	2
 5174              	_ZTIN11sensor_msgs3JoyE:
 5175 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5176 0004 00000000 		.word	_ZTSN11sensor_msgs3JoyE
 5177 0008 00000000 		.word	_ZTIN3ros3MsgE
 5178              		.weak	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5179              		.section	.rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 5182              	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 5183 0000 4E33726F 		.ascii	"N3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512"
 5183      7331314E 
 5183      6F646548 
 5183      616E646C 
 5183      655F4931 
 5184 0033 454C6935 		.ascii	"ELi512EEE\000"
 5184      31324545 
 5184      4500
 5185              		.weak	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5186              		.section	.rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 5187              		.align	2
 5190              	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 5191 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5192 0004 00000000 		.word	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5193 0008 00000000 		.word	_ZTIN3ros15NodeHandleBase_E
 5194              		.weak	_ZTSN3ros10SubscriberIN11sensor_msgs3JoyEEE
 5195              		.section	.rodata._ZTSN3ros10SubscriberIN11sensor_msgs3JoyEEE,"aG",%progbits,_ZTSN3ros10SubscriberI
 5198              	_ZTSN3ros10SubscriberIN11sensor_msgs3JoyEEE:
 5199 0000 4E33726F 		.ascii	"N3ros10SubscriberIN11sensor_msgs3JoyEEE\000"
 5199      73313053 
 5199      75627363 
 5199      72696265 
 5199      72494E31 
 5200              		.weak	_ZTIN3ros10SubscriberIN11sensor_msgs3JoyEEE
 5201              		.section	.rodata._ZTIN3ros10SubscriberIN11sensor_msgs3JoyEEE,"aG",%progbits,_ZTIN3ros10SubscriberI
 5202              		.align	2
 5205              	_ZTIN3ros10SubscriberIN11sensor_msgs3JoyEEE:
 5206 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5207 0004 00000000 		.word	_ZTSN3ros10SubscriberIN11sensor_msgs3JoyEEE
 5208 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 5209              		.weak	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 5210              		.section	.rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTSN3ros10SubscriberIN8
 5213              	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:
 5214 0000 4E33726F 		.ascii	"N3ros10SubscriberIN8std_msgs5UInt8EEE\000"
 5214      73313053 
 5214      75627363 
 5214      72696265 
 5214      72494E38 
 5215              		.weak	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 5216              		.section	.rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTIN3ros10SubscriberIN8
 5217              		.align	2
 5220              	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:
 5221 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5222 0004 00000000 		.word	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 5223 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 5224              		.weak	_ZTVN8std_msgs4TimeE
 5225              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 5226              		.align	2
 5229              	_ZTVN8std_msgs4TimeE:
 5230 0000 00000000 		.word	0
 5231 0004 00000000 		.word	_ZTIN8std_msgs4TimeE
 5232 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 5233 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 5234 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 5235 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 5236              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 5237              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 5238              		.align	2
 5241              	_ZTVN14rosserial_msgs9TopicInfoE:
 5242 0000 00000000 		.word	0
 5243 0004 00000000 		.word	_ZTIN14rosserial_msgs9TopicInfoE
 5244 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 5245 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 5246 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 5247 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 5248              		.weak	_ZTVN14rosserial_msgs3LogE
 5249              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 5250              		.align	2
 5253              	_ZTVN14rosserial_msgs3LogE:
 5254 0000 00000000 		.word	0
 5255 0004 00000000 		.word	_ZTIN14rosserial_msgs3LogE
 5256 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 5257 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 5258 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 5259 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 5260              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 5261              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 5262              		.align	2
 5265              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 5266 0000 00000000 		.word	0
 5267 0004 00000000 		.word	_ZTIN14rosserial_msgs20RequestParamResponseE
 5268 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 5269 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 5270 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 5271 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 5272              		.weak	_ZTVN8std_msgs7Float32E
 5273              		.section	.rodata._ZTVN8std_msgs7Float32E,"aG",%progbits,_ZTVN8std_msgs7Float32E,comdat
 5274              		.align	2
 5277              	_ZTVN8std_msgs7Float32E:
 5278 0000 00000000 		.word	0
 5279 0004 00000000 		.word	_ZTIN8std_msgs7Float32E
 5280 0008 00000000 		.word	_ZNK8std_msgs7Float329serializeEPh
 5281 000c 00000000 		.word	_ZN8std_msgs7Float3211deserializeEPh
 5282 0010 00000000 		.word	_ZN8std_msgs7Float327getTypeEv
 5283 0014 00000000 		.word	_ZN8std_msgs7Float326getMD5Ev
 5284              		.weak	_ZTVN8std_msgs5UInt8E
 5285              		.section	.rodata._ZTVN8std_msgs5UInt8E,"aG",%progbits,_ZTVN8std_msgs5UInt8E,comdat
 5286              		.align	2
 5289              	_ZTVN8std_msgs5UInt8E:
 5290 0000 00000000 		.word	0
 5291 0004 00000000 		.word	_ZTIN8std_msgs5UInt8E
 5292 0008 00000000 		.word	_ZNK8std_msgs5UInt89serializeEPh
 5293 000c 00000000 		.word	_ZN8std_msgs5UInt811deserializeEPh
 5294 0010 00000000 		.word	_ZN8std_msgs5UInt87getTypeEv
 5295 0014 00000000 		.word	_ZN8std_msgs5UInt86getMD5Ev
 5296              		.weak	_ZTVN8std_msgs6HeaderE
 5297              		.section	.rodata._ZTVN8std_msgs6HeaderE,"aG",%progbits,_ZTVN8std_msgs6HeaderE,comdat
 5298              		.align	2
 5301              	_ZTVN8std_msgs6HeaderE:
 5302 0000 00000000 		.word	0
 5303 0004 00000000 		.word	_ZTIN8std_msgs6HeaderE
 5304 0008 00000000 		.word	_ZNK8std_msgs6Header9serializeEPh
 5305 000c 00000000 		.word	_ZN8std_msgs6Header11deserializeEPh
 5306 0010 00000000 		.word	_ZN8std_msgs6Header7getTypeEv
 5307 0014 00000000 		.word	_ZN8std_msgs6Header6getMD5Ev
 5308              		.weak	_ZTVN11sensor_msgs3JoyE
 5309              		.section	.rodata._ZTVN11sensor_msgs3JoyE,"aG",%progbits,_ZTVN11sensor_msgs3JoyE,comdat
 5310              		.align	2
 5313              	_ZTVN11sensor_msgs3JoyE:
 5314 0000 00000000 		.word	0
 5315 0004 00000000 		.word	_ZTIN11sensor_msgs3JoyE
 5316 0008 00000000 		.word	_ZNK11sensor_msgs3Joy9serializeEPh
 5317 000c 00000000 		.word	_ZN11sensor_msgs3Joy11deserializeEPh
 5318 0010 00000000 		.word	_ZN11sensor_msgs3Joy7getTypeEv
 5319 0014 00000000 		.word	_ZN11sensor_msgs3Joy6getMD5Ev
 5320              		.weak	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5321              		.section	.rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 5322              		.align	2
 5325              	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 5326 0000 00000000 		.word	0
 5327 0004 00000000 		.word	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5328 0008 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 5329 000c 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 5330 0010 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
 5331              		.weak	_ZTVN3ros10SubscriberIN11sensor_msgs3JoyEEE
 5332              		.section	.rodata._ZTVN3ros10SubscriberIN11sensor_msgs3JoyEEE,"aG",%progbits,_ZTVN3ros10SubscriberI
 5333              		.align	2
 5336              	_ZTVN3ros10SubscriberIN11sensor_msgs3JoyEEE:
 5337 0000 00000000 		.word	0
 5338 0004 00000000 		.word	_ZTIN3ros10SubscriberIN11sensor_msgs3JoyEEE
 5339 0008 00000000 		.word	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE8callbackEPh
 5340 000c 00000000 		.word	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE15getEndpointTypeEv
 5341 0010 00000000 		.word	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv
 5342 0014 00000000 		.word	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev
 5343              		.weak	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
 5344              		.section	.rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTVN3ros10SubscriberIN8
 5345              		.align	2
 5348              	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:
 5349 0000 00000000 		.word	0
 5350 0004 00000000 		.word	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 5351 0008 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 5352 000c 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 5353 0010 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 5354 0014 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 5355              		.global	str
 5356              		.global	hello
 5357              		.global	chatter
 5358              		.global	str_msg
 5359              		.global	led_sub
 5360              		.global	motor_sub
 5361              		.global	nh
 5362              		.global	rear_left
 5363              		.global	rear_right
 5364              		.global	front_left
 5365              		.global	front_right
 5366              		.global	servo_right
 5367              		.global	servo_left
 5368              		.global	GenerateStartStatus
 5369              		.global	NumberOfByteToReceive
 5370              		.global	RxBuffer
 5371              		.global	slaveAddress
 5372              		.global	Rx_Idx
 5373              		.global	USART_CNTOUT
 5374              		.global	USART_CNTIN
 5375              		.global	USART_FIFO
 5376              		.section	.rodata
 5377              		.set	.LANCHOR0,. + 0
 5380              	_ZN14rosserial_msgsL12REQUESTPARAME:
 5381 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 5381      65726961 
 5381      6C5F6D73 
 5381      67732F52 
 5381      65717565 
 5382              		.section	.rodata.str1.1,"aMS",%progbits,1
 5383              	.LC0:
 5384 0000 7374645F 		.ascii	"std_msgs/Time\000"
 5384      6D736773 
 5384      2F54696D 
 5384      6500
 5385              	.LC1:
 5386 000e 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 5386      36366337 
 5386      34633535 
 5386      32633331 
 5386      31666263 
 5387              	.LC2:
 5388 002f 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 5388      65726961 
 5388      6C5F6D73 
 5388      67732F54 
 5388      6F706963 
 5389              	.LC3:
 5390 0048 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 5390      31663838 
 5390      66633434 
 5390      38393266 
 5390      38633130 
 5391              	.LC4:
 5392 0069 726F7373 		.ascii	"rosserial_msgs/Log\000"
 5392      65726961 
 5392      6C5F6D73 
 5392      67732F4C 
 5392      6F6700
 5393              	.LC5:
 5394 007c 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 5394      64373331 
 5394      63323539 
 5394      33333236 
 5394      31636436 
 5395              	.LC6:
 5396 009d 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 5396      39386264 
 5396      61363539 
 5396      38313938 
 5396      36646466 
 5397              	.LC7:
 5398 00be 7374645F 		.ascii	"std_msgs/Float32\000"
 5398      6D736773 
 5398      2F466C6F 
 5398      61743332 
 5398      00
 5399              	.LC8:
 5400 00cf 37336663 		.ascii	"73fcbf46b49191e672908e50842a83d4\000"
 5400      62663436 
 5400      62343931 
 5400      39316536 
 5400      37323930 
 5401              	.LC9:
 5402 00f0 7374645F 		.ascii	"std_msgs/UInt8\000"
 5402      6D736773 
 5402      2F55496E 
 5402      743800
 5403              	.LC10:
 5404 00ff 37633831 		.ascii	"7c8164229e7d2c17eb95e9231617fdee\000"
 5404      36343232 
 5404      39653764 
 5404      32633137 
 5404      65623935 
 5405              	.LC11:
 5406 0120 7374645F 		.ascii	"std_msgs/Header\000"
 5406      6D736773 
 5406      2F486561 
 5406      64657200 
 5407              	.LC12:
 5408 0130 32313736 		.ascii	"2176decaecbce78abc3b96ef049fabed\000"
 5408      64656361 
 5408      65636263 
 5408      65373861 
 5408      62633362 
 5409              	.LC13:
 5410 0151 73656E73 		.ascii	"sensor_msgs/Joy\000"
 5410      6F725F6D 
 5410      7367732F 
 5410      4A6F7900 
 5411              	.LC14:
 5412 0161 35613965 		.ascii	"5a9ea5f83505693b71e785041e67a8bb\000"
 5412      61356638 
 5412      33353035 
 5412      36393362 
 5412      37316537 
 5413              	.LC15:
 5414 0182 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 5414      61676520 
 5414      66726F6D 
 5414      20646576 
 5414      69636520 
 5415 01b5 66666572 		.ascii	"ffer.\000"
 5415      2E00
 5416              	.LC16:
 5417 01bb 00       		.ascii	"\000"
 5418              	.LC17:
 5419 01bc 73657276 		.ascii	"servo_left\000"
 5419      6F5F6C65 
 5419      667400
 5420              	.LC18:
 5421 01c7 73657276 		.ascii	"servo_right\000"
 5421      6F5F7269 
 5421      67687400 
 5422              	.LC19:
 5423 01d3 66726F6E 		.ascii	"front_right\000"
 5423      745F7269 
 5423      67687400 
 5424              	.LC20:
 5425 01df 66726F6E 		.ascii	"front_left\000"
 5425      745F6C65 
 5425      667400
 5426              	.LC21:
 5427 01ea 72656172 		.ascii	"rear_left\000"
 5427      5F6C6566 
 5427      7400
 5428              	.LC22:
 5429 01f4 72656172 		.ascii	"rear_right\000"
 5429      5F726967 
 5429      687400
 5430              	.LC23:
 5431 01ff 556E6162 		.ascii	"Unable to initialize motor: %s - [FAIL]\015\012\000"
 5431      6C652074 
 5431      6F20696E 
 5431      69746961 
 5431      6C697A65 
 5432              	.LC24:
 5433 0229 57726F6E 		.ascii	"Wrong parameters value: file %s on line %d\015\012\000"
 5433      67207061 
 5433      72616D65 
 5433      74657273 
 5433      2076616C 
 5434              	.LC25:
 5435 0256 6A6F7900 		.ascii	"joy\000"
 5436              	.LC26:
 5437 025a 6C656400 		.ascii	"led\000"
 5438              	.LC27:
 5439 025e 656E636F 		.ascii	"encoder\000"
 5439      64657200 
 5440              		.bss
 5441              		.align	2
 5442              		.set	.LANCHOR1,. + 0
 5445              	front_right:
 5446 0000 00000000 		.space	4
 5449              	front_left:
 5450 0004 00000000 		.space	4
 5453              	rear_right:
 5454 0008 00000000 		.space	4
 5457              	rear_left:
 5458 000c 00000000 		.space	4
 5461              	USART_CNTOUT:
 5462 0010 00000000 		.space	4
 5465              	USART_CNTIN:
 5466 0014 00000000 		.space	4
 5469              	USART_FIFO:
 5470 0018 00000000 		.space	1024
 5470      00000000 
 5470      00000000 
 5470      00000000 
 5470      00000000 
 5473              	nh:
 5474 0418 00000000 		.space	1328
 5474      00000000 
 5474      00000000 
 5474      00000000 
 5474      00000000 
 5477              	motor_sub:
 5478 0948 00000000 		.space	68
 5478      00000000 
 5478      00000000 
 5478      00000000 
 5478      00000000 
 5481              	led_sub:
 5482 098c 00000000 		.space	28
 5482      00000000 
 5482      00000000 
 5482      00000000 
 5482      00000000 
 5485              	chatter:
 5486 09a8 00000000 		.space	20
 5486      00000000 
 5486      00000000 
 5486      00000000 
 5486      00000000 
 5489              	servo_left:
 5490 09bc 00000000 		.space	4
 5493              	str:
 5494 09c0 00000000 		.space	150
 5494      00000000 
 5494      00000000 
 5494      00000000 
 5494      00000000 
 5495 0a56 0000     		.space	2
 5498              	servo_right:
 5499 0a58 00000000 		.space	4
 5502              	str_msg:
 5503 0a5c 00000000 		.space	8
 5503      00000000 
 5506              	hello:
 5507 0a64 00000000 		.space	25
 5507      00000000 
 5507      00000000 
 5507      00000000 
 5507      00000000 
 5510              	GenerateStartStatus:
 5511 0a7d 00       		.space	1
 5514              	NumberOfByteToReceive:
 5515 0a7e 00       		.space	1
 5518              	RxBuffer:
 5519 0a7f 00000000 		.space	4
 5522              	slaveAddress:
 5523 0a83 00       		.space	1
 5526              	Rx_Idx:
 5527 0a84 00       		.space	1
 5528              		.text
 5529              	.Letext0:
 5530              		.file 16 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 5531              		.file 17 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types.h"
 5532              		.file 18 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 5533              		.file 19 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 5534              		.file 20 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_usart.h"
 5535              		.file 21 "./inc/motorSettings.h"
 5536              		.file 22 "./lib/ros_lib/ros/duration.h"
 5537              		.file 23 "./lib/ros_lib/ros/msg.h"
 5538              		.file 24 "./lib/ros_lib/ros.h"
 5539              		.file 25 "./inc/motor.h"
 5540              		.file 26 "./inc/led.h"
 5541              		.file 27 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/string.h"
 5542              		.file 28 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdlib.h"
 5543              		.file 29 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 5544              		.file 30 "./inc/stm32_time.h"
 5545              		.file 31 "./inc/encoder.h"
 5546              		.file 32 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdio.h"
 5547              		.file 33 "./lib/ros_lib/roberto_msgs/MotorState.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/cceHOSWf.s:20     .text._ZNK8std_msgs4Time9serializeEPh:00000000 $t
     /tmp/cceHOSWf.s:25     .text._ZNK8std_msgs4Time9serializeEPh:00000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:00000000 $d
     /tmp/cceHOSWf.s:75     .text._ZN8std_msgs4Time11deserializeEPh:00000000 $t
     /tmp/cceHOSWf.s:80     .text._ZN8std_msgs4Time11deserializeEPh:00000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:00000000 $d
     /tmp/cceHOSWf.s:131    .text._ZN8std_msgs4Time7getTypeEv:00000000 $t
     /tmp/cceHOSWf.s:136    .text._ZN8std_msgs4Time7getTypeEv:00000000 _ZN8std_msgs4Time7getTypeEv
     /tmp/cceHOSWf.s:152    .text._ZN8std_msgs4Time7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:00000000 $d
     /tmp/cceHOSWf.s:159    .text._ZN8std_msgs4Time6getMD5Ev:00000000 $t
     /tmp/cceHOSWf.s:164    .text._ZN8std_msgs4Time6getMD5Ev:00000000 _ZN8std_msgs4Time6getMD5Ev
     /tmp/cceHOSWf.s:180    .text._ZN8std_msgs4Time6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:00000000 $d
     /tmp/cceHOSWf.s:187    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $t
     /tmp/cceHOSWf.s:192    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
     /tmp/cceHOSWf.s:209    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $d
     /tmp/cceHOSWf.s:216    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $t
     /tmp/cceHOSWf.s:221    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
     /tmp/cceHOSWf.s:237    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $d
     /tmp/cceHOSWf.s:244    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $t
     /tmp/cceHOSWf.s:249    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 _ZN14rosserial_msgs3Log7getTypeEv
     /tmp/cceHOSWf.s:266    .text._ZN14rosserial_msgs3Log7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $d
     /tmp/cceHOSWf.s:273    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $t
     /tmp/cceHOSWf.s:278    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 _ZN14rosserial_msgs3Log6getMD5Ev
     /tmp/cceHOSWf.s:294    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $d
     /tmp/cceHOSWf.s:301    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $t
     /tmp/cceHOSWf.s:306    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
     /tmp/cceHOSWf.s:323    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $d
     /tmp/cceHOSWf.s:330    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $t
     /tmp/cceHOSWf.s:335    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
     /tmp/cceHOSWf.s:351    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $d
     /tmp/cceHOSWf.s:358    .text._ZNK8std_msgs7Float329serializeEPh:00000000 $t
     /tmp/cceHOSWf.s:363    .text._ZNK8std_msgs7Float329serializeEPh:00000000 _ZNK8std_msgs7Float329serializeEPh
.ARM.exidx.text._ZNK8std_msgs7Float329serializeEPh:00000000 $d
     /tmp/cceHOSWf.s:402    .text._ZN8std_msgs7Float3211deserializeEPh:00000000 $t
     /tmp/cceHOSWf.s:407    .text._ZN8std_msgs7Float3211deserializeEPh:00000000 _ZN8std_msgs7Float3211deserializeEPh
.ARM.exidx.text._ZN8std_msgs7Float3211deserializeEPh:00000000 $d
     /tmp/cceHOSWf.s:430    .text._ZN8std_msgs7Float327getTypeEv:00000000 $t
     /tmp/cceHOSWf.s:435    .text._ZN8std_msgs7Float327getTypeEv:00000000 _ZN8std_msgs7Float327getTypeEv
     /tmp/cceHOSWf.s:451    .text._ZN8std_msgs7Float327getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs7Float327getTypeEv:00000000 $d
     /tmp/cceHOSWf.s:458    .text._ZN8std_msgs7Float326getMD5Ev:00000000 $t
     /tmp/cceHOSWf.s:463    .text._ZN8std_msgs7Float326getMD5Ev:00000000 _ZN8std_msgs7Float326getMD5Ev
     /tmp/cceHOSWf.s:479    .text._ZN8std_msgs7Float326getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs7Float326getMD5Ev:00000000 $d
     /tmp/cceHOSWf.s:486    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 $t
     /tmp/cceHOSWf.s:491    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 _ZNK8std_msgs5UInt89serializeEPh
.ARM.exidx.text._ZNK8std_msgs5UInt89serializeEPh:00000000 $d
     /tmp/cceHOSWf.s:517    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 $t
     /tmp/cceHOSWf.s:522    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 _ZN8std_msgs5UInt811deserializeEPh
.ARM.exidx.text._ZN8std_msgs5UInt811deserializeEPh:00000000 $d
     /tmp/cceHOSWf.s:545    .text._ZN8std_msgs5UInt87getTypeEv:00000000 $t
     /tmp/cceHOSWf.s:550    .text._ZN8std_msgs5UInt87getTypeEv:00000000 _ZN8std_msgs5UInt87getTypeEv
     /tmp/cceHOSWf.s:566    .text._ZN8std_msgs5UInt87getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt87getTypeEv:00000000 $d
     /tmp/cceHOSWf.s:573    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 $t
     /tmp/cceHOSWf.s:578    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 _ZN8std_msgs5UInt86getMD5Ev
     /tmp/cceHOSWf.s:594    .text._ZN8std_msgs5UInt86getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt86getMD5Ev:00000000 $d
     /tmp/cceHOSWf.s:601    .text._ZN8std_msgs6Header7getTypeEv:00000000 $t
     /tmp/cceHOSWf.s:606    .text._ZN8std_msgs6Header7getTypeEv:00000000 _ZN8std_msgs6Header7getTypeEv
     /tmp/cceHOSWf.s:623    .text._ZN8std_msgs6Header7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header7getTypeEv:00000000 $d
     /tmp/cceHOSWf.s:630    .text._ZN8std_msgs6Header6getMD5Ev:00000000 $t
     /tmp/cceHOSWf.s:635    .text._ZN8std_msgs6Header6getMD5Ev:00000000 _ZN8std_msgs6Header6getMD5Ev
     /tmp/cceHOSWf.s:651    .text._ZN8std_msgs6Header6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header6getMD5Ev:00000000 $d
     /tmp/cceHOSWf.s:658    .text._ZN11sensor_msgs3Joy7getTypeEv:00000000 $t
     /tmp/cceHOSWf.s:663    .text._ZN11sensor_msgs3Joy7getTypeEv:00000000 _ZN11sensor_msgs3Joy7getTypeEv
     /tmp/cceHOSWf.s:680    .text._ZN11sensor_msgs3Joy7getTypeEv:00000004 $d
.ARM.exidx.text._ZN11sensor_msgs3Joy7getTypeEv:00000000 $d
     /tmp/cceHOSWf.s:687    .text._ZN11sensor_msgs3Joy6getMD5Ev:00000000 $t
     /tmp/cceHOSWf.s:692    .text._ZN11sensor_msgs3Joy6getMD5Ev:00000000 _ZN11sensor_msgs3Joy6getMD5Ev
     /tmp/cceHOSWf.s:708    .text._ZN11sensor_msgs3Joy6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN11sensor_msgs3Joy6getMD5Ev:00000000 $d
     /tmp/cceHOSWf.s:716    .text:00000000 $t
     /tmp/cceHOSWf.s:721    .text:00000000 _Z8motor_cbRKN11sensor_msgs3JoyE
     /tmp/cceHOSWf.s:810    .text:00000064 $d
                       .ARM.exidx:00000000 $d
     /tmp/cceHOSWf.s:816    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $t
     /tmp/cceHOSWf.s:821    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $d
     /tmp/cceHOSWf.s:857    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $t
     /tmp/cceHOSWf.s:862    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $d
     /tmp/cceHOSWf.s:881    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $t
     /tmp/cceHOSWf.s:886    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
     /tmp/cceHOSWf.s:902    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $d
     /tmp/cceHOSWf.s:909    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $t
     /tmp/cceHOSWf.s:914    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
     /tmp/cceHOSWf.s:930    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $d
     /tmp/cceHOSWf.s:937    .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE15getEndpointTypeEv:00000000 $t
     /tmp/cceHOSWf.s:942    .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN11sensor_msgs3JoyEE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE15getEndpointTypeEv:00000000 $d
     /tmp/cceHOSWf.s:961    .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv:00000000 $t
     /tmp/cceHOSWf.s:966    .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv
     /tmp/cceHOSWf.s:982    .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv:00000000 $d
     /tmp/cceHOSWf.s:989    .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev:00000000 $t
     /tmp/cceHOSWf.s:994    .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev
     /tmp/cceHOSWf.s:1010   .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev:00000000 $d
     /tmp/cceHOSWf.s:1017   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 $t
     /tmp/cceHOSWf.s:1022   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 $d
     /tmp/cceHOSWf.s:1042   .text:00000068 $t
     /tmp/cceHOSWf.s:1047   .text:00000068 _Z6led_cbRKN8std_msgs5UInt8E
     /tmp/cceHOSWf.s:1067   .text._ZNK8std_msgs6Header9serializeEPh:00000000 $t
     /tmp/cceHOSWf.s:1072   .text._ZNK8std_msgs6Header9serializeEPh:00000000 _ZNK8std_msgs6Header9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6Header9serializeEPh:00000000 $d
     /tmp/cceHOSWf.s:1171   .text._ZNK11sensor_msgs3Joy9serializeEPh:00000000 $t
     /tmp/cceHOSWf.s:1176   .text._ZNK11sensor_msgs3Joy9serializeEPh:00000000 _ZNK11sensor_msgs3Joy9serializeEPh
.ARM.exidx.text._ZNK11sensor_msgs3Joy9serializeEPh:00000000 $d
     /tmp/cceHOSWf.s:1330   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $t
     /tmp/cceHOSWf.s:1335   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $d
     /tmp/cceHOSWf.s:1548   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $t
     /tmp/cceHOSWf.s:1553   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $d
     /tmp/cceHOSWf.s:1612   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $t
     /tmp/cceHOSWf.s:1617   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $d
     /tmp/cceHOSWf.s:1752   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $t
     /tmp/cceHOSWf.s:1757   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $d
     /tmp/cceHOSWf.s:1831   .text._ZN8std_msgs6Header11deserializeEPh:00000000 $t
     /tmp/cceHOSWf.s:1836   .text._ZN8std_msgs6Header11deserializeEPh:00000000 _ZN8std_msgs6Header11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6Header11deserializeEPh:00000000 $d
     /tmp/cceHOSWf.s:1949   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $t
     /tmp/cceHOSWf.s:1954   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $d
     /tmp/cceHOSWf.s:2142   .text._ZN11sensor_msgs3Joy11deserializeEPh:00000000 $t
     /tmp/cceHOSWf.s:2147   .text._ZN11sensor_msgs3Joy11deserializeEPh:00000000 _ZN11sensor_msgs3Joy11deserializeEPh
.ARM.exidx.text._ZN11sensor_msgs3Joy11deserializeEPh:00000000 $d
     /tmp/cceHOSWf.s:2315   .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE8callbackEPh:00000000 $t
     /tmp/cceHOSWf.s:2320   .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE8callbackEPh:00000000 _ZN3ros10SubscriberIN11sensor_msgs3JoyEE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE8callbackEPh:00000000 $d
     /tmp/cceHOSWf.s:2364   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $t
     /tmp/cceHOSWf.s:2369   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $d
     /tmp/cceHOSWf.s:2624   .text._ZN15ArduinoHardware4initEv:00000000 $t
     /tmp/cceHOSWf.s:2629   .text._ZN15ArduinoHardware4initEv:00000000 _ZN15ArduinoHardware4initEv
     /tmp/cceHOSWf.s:2747   .text._ZN15ArduinoHardware4initEv:0000008c $d
.ARM.exidx.text._ZN15ArduinoHardware4initEv:00000000 $d
     /tmp/cceHOSWf.s:2759   .text:0000006e USART1_IRQHandler
     /tmp/cceHOSWf.s:2822   .text:000000b4 $d
     /tmp/cceHOSWf.s:2829   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 $t
     /tmp/cceHOSWf.s:2834   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
     /tmp/cceHOSWf.s:2888   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000020 $d
     /tmp/cceHOSWf.s:5253   .rodata._ZTVN14rosserial_msgs3LogE:00000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 $d
     /tmp/cceHOSWf.s:2894   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 $t
     /tmp/cceHOSWf.s:2899   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
     /tmp/cceHOSWf.s:3063   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:000000bc $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 $d
     /tmp/cceHOSWf.s:3070   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 $t
     /tmp/cceHOSWf.s:3075   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
     /tmp/cceHOSWf.s:3145   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000024 $d
     /tmp/cceHOSWf.s:5229   .rodata._ZTVN8std_msgs4TimeE:00000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 $d
     /tmp/cceHOSWf.s:3151   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 $t
     /tmp/cceHOSWf.s:3156   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
     /tmp/cceHOSWf.s:3318   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:000000b4 $d
     /tmp/cceHOSWf.s:5241   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 _ZTVN14rosserial_msgs9TopicInfoE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 $d
     /tmp/cceHOSWf.s:3325   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 $t
     /tmp/cceHOSWf.s:3330   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
     /tmp/cceHOSWf.s:3463   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000074 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 $d
     /tmp/cceHOSWf.s:3471   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 $t
     /tmp/cceHOSWf.s:3476   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
     /tmp/cceHOSWf.s:3838   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000208 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 $d
     /tmp/cceHOSWf.s:3845   .text.startup:00000000 $t
     /tmp/cceHOSWf.s:3850   .text.startup:00000000 main
     /tmp/cceHOSWf.s:3990   .text.startup:00000090 $d
     /tmp/cceHOSWf.s:3998   .text.startup:000000a4 $t
     /tmp/cceHOSWf.s:4427   .text.startup:00000388 $d
     /tmp/cceHOSWf.s:4446   .text.startup:000003d0 $t
     /tmp/cceHOSWf.s:4547   .text.startup:00000460 $d
          .ARM.exidx.text.startup:00000000 $d
     /tmp/cceHOSWf.s:4558   .text:000000bc $t
     /tmp/cceHOSWf.s:4563   .text:000000bc _Z13assert_failedPhm
     /tmp/cceHOSWf.s:4610   .text:000000e8 $d
     /tmp/cceHOSWf.s:4617   .text.startup:00000474 $t
     /tmp/cceHOSWf.s:4621   .text.startup:00000474 _GLOBAL__sub_I_USART_FIFO
     /tmp/cceHOSWf.s:4986   .text.startup:00000584 $d
     /tmp/cceHOSWf.s:5325   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/cceHOSWf.s:5265   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 _ZTVN14rosserial_msgs20RequestParamResponseE
     /tmp/cceHOSWf.s:5336   .rodata._ZTVN3ros10SubscriberIN11sensor_msgs3JoyEEE:00000000 _ZTVN3ros10SubscriberIN11sensor_msgs3JoyEEE
     /tmp/cceHOSWf.s:5313   .rodata._ZTVN11sensor_msgs3JoyE:00000000 _ZTVN11sensor_msgs3JoyE
     /tmp/cceHOSWf.s:5301   .rodata._ZTVN8std_msgs6HeaderE:00000000 _ZTVN8std_msgs6HeaderE
     /tmp/cceHOSWf.s:5348   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/cceHOSWf.s:5289   .rodata._ZTVN8std_msgs5UInt8E:00000000 _ZTVN8std_msgs5UInt8E
     /tmp/cceHOSWf.s:5277   .rodata._ZTVN8std_msgs7Float32E:00000000 _ZTVN8std_msgs7Float32E
     /tmp/cceHOSWf.s:5014   .init_array:00000000 $d
     /tmp/cceHOSWf.s:5020   .rodata._ZTSN3ros3MsgE:00000000 _ZTSN3ros3MsgE
     /tmp/cceHOSWf.s:5027   .rodata._ZTIN3ros3MsgE:00000000 _ZTIN3ros3MsgE
     /tmp/cceHOSWf.s:5024   .rodata._ZTIN3ros3MsgE:00000000 $d
     /tmp/cceHOSWf.s:5034   .rodata._ZTSN8std_msgs4TimeE:00000000 _ZTSN8std_msgs4TimeE
     /tmp/cceHOSWf.s:5041   .rodata._ZTIN8std_msgs4TimeE:00000000 _ZTIN8std_msgs4TimeE
     /tmp/cceHOSWf.s:5038   .rodata._ZTIN8std_msgs4TimeE:00000000 $d
     /tmp/cceHOSWf.s:5049   .rodata._ZTSN14rosserial_msgs9TopicInfoE:00000000 _ZTSN14rosserial_msgs9TopicInfoE
     /tmp/cceHOSWf.s:5056   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 _ZTIN14rosserial_msgs9TopicInfoE
     /tmp/cceHOSWf.s:5053   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/cceHOSWf.s:5064   .rodata._ZTSN14rosserial_msgs3LogE:00000000 _ZTSN14rosserial_msgs3LogE
     /tmp/cceHOSWf.s:5071   .rodata._ZTIN14rosserial_msgs3LogE:00000000 _ZTIN14rosserial_msgs3LogE
     /tmp/cceHOSWf.s:5068   .rodata._ZTIN14rosserial_msgs3LogE:00000000 $d
     /tmp/cceHOSWf.s:5079   .rodata._ZTSN14rosserial_msgs20RequestParamResponseE:00000000 _ZTSN14rosserial_msgs20RequestParamResponseE
     /tmp/cceHOSWf.s:5086   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 _ZTIN14rosserial_msgs20RequestParamResponseE
     /tmp/cceHOSWf.s:5083   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/cceHOSWf.s:5094   .rodata._ZTSN3ros15NodeHandleBase_E:00000000 _ZTSN3ros15NodeHandleBase_E
     /tmp/cceHOSWf.s:5101   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 _ZTIN3ros15NodeHandleBase_E
     /tmp/cceHOSWf.s:5098   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 $d
     /tmp/cceHOSWf.s:5108   .rodata._ZTSN3ros11Subscriber_E:00000000 _ZTSN3ros11Subscriber_E
     /tmp/cceHOSWf.s:5115   .rodata._ZTIN3ros11Subscriber_E:00000000 _ZTIN3ros11Subscriber_E
     /tmp/cceHOSWf.s:5112   .rodata._ZTIN3ros11Subscriber_E:00000000 $d
     /tmp/cceHOSWf.s:5122   .rodata._ZTSN8std_msgs7Float32E:00000000 _ZTSN8std_msgs7Float32E
     /tmp/cceHOSWf.s:5129   .rodata._ZTIN8std_msgs7Float32E:00000000 _ZTIN8std_msgs7Float32E
     /tmp/cceHOSWf.s:5126   .rodata._ZTIN8std_msgs7Float32E:00000000 $d
     /tmp/cceHOSWf.s:5137   .rodata._ZTSN8std_msgs5UInt8E:00000000 _ZTSN8std_msgs5UInt8E
     /tmp/cceHOSWf.s:5144   .rodata._ZTIN8std_msgs5UInt8E:00000000 _ZTIN8std_msgs5UInt8E
     /tmp/cceHOSWf.s:5141   .rodata._ZTIN8std_msgs5UInt8E:00000000 $d
     /tmp/cceHOSWf.s:5152   .rodata._ZTSN8std_msgs6HeaderE:00000000 _ZTSN8std_msgs6HeaderE
     /tmp/cceHOSWf.s:5159   .rodata._ZTIN8std_msgs6HeaderE:00000000 _ZTIN8std_msgs6HeaderE
     /tmp/cceHOSWf.s:5156   .rodata._ZTIN8std_msgs6HeaderE:00000000 $d
     /tmp/cceHOSWf.s:5167   .rodata._ZTSN11sensor_msgs3JoyE:00000000 _ZTSN11sensor_msgs3JoyE
     /tmp/cceHOSWf.s:5174   .rodata._ZTIN11sensor_msgs3JoyE:00000000 _ZTIN11sensor_msgs3JoyE
     /tmp/cceHOSWf.s:5171   .rodata._ZTIN11sensor_msgs3JoyE:00000000 $d
     /tmp/cceHOSWf.s:5182   .rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/cceHOSWf.s:5190   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/cceHOSWf.s:5187   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 $d
     /tmp/cceHOSWf.s:5198   .rodata._ZTSN3ros10SubscriberIN11sensor_msgs3JoyEEE:00000000 _ZTSN3ros10SubscriberIN11sensor_msgs3JoyEEE
     /tmp/cceHOSWf.s:5205   .rodata._ZTIN3ros10SubscriberIN11sensor_msgs3JoyEEE:00000000 _ZTIN3ros10SubscriberIN11sensor_msgs3JoyEEE
     /tmp/cceHOSWf.s:5202   .rodata._ZTIN3ros10SubscriberIN11sensor_msgs3JoyEEE:00000000 $d
     /tmp/cceHOSWf.s:5213   .rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/cceHOSWf.s:5220   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/cceHOSWf.s:5217   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/cceHOSWf.s:5226   .rodata._ZTVN8std_msgs4TimeE:00000000 $d
     /tmp/cceHOSWf.s:5238   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/cceHOSWf.s:5250   .rodata._ZTVN14rosserial_msgs3LogE:00000000 $d
     /tmp/cceHOSWf.s:5262   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/cceHOSWf.s:5274   .rodata._ZTVN8std_msgs7Float32E:00000000 $d
     /tmp/cceHOSWf.s:5286   .rodata._ZTVN8std_msgs5UInt8E:00000000 $d
     /tmp/cceHOSWf.s:5298   .rodata._ZTVN8std_msgs6HeaderE:00000000 $d
     /tmp/cceHOSWf.s:5310   .rodata._ZTVN11sensor_msgs3JoyE:00000000 $d
     /tmp/cceHOSWf.s:5322   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 $d
     /tmp/cceHOSWf.s:5333   .rodata._ZTVN3ros10SubscriberIN11sensor_msgs3JoyEEE:00000000 $d
     /tmp/cceHOSWf.s:5345   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/cceHOSWf.s:5493   .bss:000009c0 str
     /tmp/cceHOSWf.s:5506   .bss:00000a64 hello
     /tmp/cceHOSWf.s:5485   .bss:000009a8 chatter
     /tmp/cceHOSWf.s:5502   .bss:00000a5c str_msg
     /tmp/cceHOSWf.s:5481   .bss:0000098c led_sub
     /tmp/cceHOSWf.s:5477   .bss:00000948 motor_sub
     /tmp/cceHOSWf.s:5473   .bss:00000418 nh
     /tmp/cceHOSWf.s:5457   .bss:0000000c rear_left
     /tmp/cceHOSWf.s:5453   .bss:00000008 rear_right
     /tmp/cceHOSWf.s:5449   .bss:00000004 front_left
     /tmp/cceHOSWf.s:5445   .bss:00000000 front_right
     /tmp/cceHOSWf.s:5498   .bss:00000a58 servo_right
     /tmp/cceHOSWf.s:5489   .bss:000009bc servo_left
     /tmp/cceHOSWf.s:5510   .bss:00000a7d GenerateStartStatus
     /tmp/cceHOSWf.s:5514   .bss:00000a7e NumberOfByteToReceive
     /tmp/cceHOSWf.s:5518   .bss:00000a7f RxBuffer
     /tmp/cceHOSWf.s:5522   .bss:00000a83 slaveAddress
     /tmp/cceHOSWf.s:5526   .bss:00000a84 Rx_Idx
     /tmp/cceHOSWf.s:5461   .bss:00000010 USART_CNTOUT
     /tmp/cceHOSWf.s:5465   .bss:00000014 USART_CNTIN
     /tmp/cceHOSWf.s:5469   .bss:00000018 USART_FIFO
     /tmp/cceHOSWf.s:5380   .rodata:00000000 _ZN14rosserial_msgsL12REQUESTPARAME
     /tmp/cceHOSWf.s:5441   .bss:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_fadd
__aeabi_unwind_cpp_pr0
led_set
strlen
memcpy
realloc
RCC_APB2PeriphClockCmd
GPIO_Init
USART_Cmd
USART_Init
USART_ITConfig
USART_GetITStatus
USART_ReceiveData
USART_SendData
millis
_ZN3ros16normalizeSecNSecERmS0_
RCC_Configuration
GPIO_PinRemapConfig
I2C1_Init
SysTick_Init
DEBUG_Init
LED_Init
delay
_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
_ZN13motorSettings12setRegulatorEffff
_ZN5motor11createMotorEP13motorSettings
sprintf
debug_toggle
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
