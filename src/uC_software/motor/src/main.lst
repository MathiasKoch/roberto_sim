   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  20              		.align	1
  21              		.weak	_ZNK8std_msgs4Time9serializeEPh
  22              		.thumb
  23              		.thumb_func
  25              	_ZNK8std_msgs4Time9serializeEPh:
  26              		.fnstart
  27              	.LFB1046:
  28              		.file 1 "./lib/ros_lib/std_msgs/Time.h"
   1:./lib/ros_lib/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:./lib/ros_lib/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:./lib/ros_lib/std_msgs/Time.h **** 
   4:./lib/ros_lib/std_msgs/Time.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Time.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Time.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Time.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Time.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Time.h **** 
  10:./lib/ros_lib/std_msgs/Time.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Time.h **** {
  12:./lib/ros_lib/std_msgs/Time.h **** 
  13:./lib/ros_lib/std_msgs/Time.h ****   class Time : public ros::Msg
  14:./lib/ros_lib/std_msgs/Time.h ****   {
  15:./lib/ros_lib/std_msgs/Time.h ****     public:
  16:./lib/ros_lib/std_msgs/Time.h ****       ros::Time data;
  17:./lib/ros_lib/std_msgs/Time.h **** 
  18:./lib/ros_lib/std_msgs/Time.h ****     Time():
  19:./lib/ros_lib/std_msgs/Time.h ****       data()
  20:./lib/ros_lib/std_msgs/Time.h ****     {
  21:./lib/ros_lib/std_msgs/Time.h ****     }
  22:./lib/ros_lib/std_msgs/Time.h **** 
  23:./lib/ros_lib/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  29              		.loc 1 23 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  24:./lib/ros_lib/std_msgs/Time.h ****     {
  25:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  26:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  35              		.loc 1 26 0
  36 0000 4368     		ldr	r3, [r0, #4]
  37 0002 0B70     		strb	r3, [r1]
  27:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  38              		.loc 1 27 0
  39 0004 4368     		ldr	r3, [r0, #4]
  40 0006 1B0A     		lsrs	r3, r3, #8
  41 0008 4B70     		strb	r3, [r1, #1]
  28:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  42              		.loc 1 28 0
  43 000a C388     		ldrh	r3, [r0, #6]
  44 000c 8B70     		strb	r3, [r1, #2]
  29:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  45              		.loc 1 29 0
  46 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  47 0010 CB70     		strb	r3, [r1, #3]
  48              	.LVL1:
  30:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  31:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  49              		.loc 1 31 0
  50 0012 8368     		ldr	r3, [r0, #8]
  51 0014 0B71     		strb	r3, [r1, #4]
  32:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  52              		.loc 1 32 0
  53 0016 8368     		ldr	r3, [r0, #8]
  54 0018 1B0A     		lsrs	r3, r3, #8
  55 001a 4B71     		strb	r3, [r1, #5]
  33:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  56              		.loc 1 33 0
  57 001c 4389     		ldrh	r3, [r0, #10]
  58 001e 8B71     		strb	r3, [r1, #6]
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  59              		.loc 1 34 0
  60 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  35:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  36:./lib/ros_lib/std_msgs/Time.h ****       return offset;
  37:./lib/ros_lib/std_msgs/Time.h ****     }
  61              		.loc 1 37 0
  62 0022 0820     		movs	r0, #8
  63              	.LVL2:
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  64              		.loc 1 34 0
  65 0024 CB71     		strb	r3, [r1, #7]
  66              	.LVL3:
  67              		.loc 1 37 0
  68 0026 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE1046:
  71              		.cantunwind
  72              		.fnend
  74              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  75              		.align	1
  76              		.weak	_ZN8std_msgs4Time11deserializeEPh
  77              		.thumb
  78              		.thumb_func
  80              	_ZN8std_msgs4Time11deserializeEPh:
  81              		.fnstart
  82              	.LFB1047:
  38:./lib/ros_lib/std_msgs/Time.h **** 
  39:./lib/ros_lib/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  83              		.loc 1 39 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL4:
  40:./lib/ros_lib/std_msgs/Time.h ****     {
  41:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  42:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  89              		.loc 1 42 0
  90 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  91 0002 4360     		str	r3, [r0, #4]
  43:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  92              		.loc 1 43 0
  93 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  94 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  95 000a 4360     		str	r3, [r0, #4]
  44:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  96              		.loc 1 44 0
  97 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  98 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  99 0012 4360     		str	r3, [r0, #4]
  45:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 100              		.loc 1 45 0
 101 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 102 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 103 001a 4360     		str	r3, [r0, #4]
 104              	.LVL5:
  46:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  47:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 105              		.loc 1 47 0
 106 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 107 001e 8360     		str	r3, [r0, #8]
  48:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 108              		.loc 1 48 0
 109 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 110 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 111 0026 8360     		str	r3, [r0, #8]
  49:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 112              		.loc 1 49 0
 113 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 114 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 115 002e 8360     		str	r3, [r0, #8]
  50:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 116              		.loc 1 50 0
 117 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 118 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 119 0036 8360     		str	r3, [r0, #8]
 120              	.LVL6:
  51:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  52:./lib/ros_lib/std_msgs/Time.h ****      return offset;
  53:./lib/ros_lib/std_msgs/Time.h ****     }
 121              		.loc 1 53 0
 122 0038 0820     		movs	r0, #8
 123              	.LVL7:
 124 003a 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE1047:
 127              		.cantunwind
 128              		.fnend
 130              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 131              		.align	1
 132              		.weak	_ZN8std_msgs4Time7getTypeEv
 133              		.thumb
 134              		.thumb_func
 136              	_ZN8std_msgs4Time7getTypeEv:
 137              		.fnstart
 138              	.LFB1048:
  54:./lib/ros_lib/std_msgs/Time.h **** 
  55:./lib/ros_lib/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 139              		.loc 1 55 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144              	.LVL8:
 145              		.loc 1 55 0
 146 0000 0048     		ldr	r0, .L4
 147              	.LVL9:
 148 0002 7047     		bx	lr
 149              	.L5:
 150              		.align	2
 151              	.L4:
 152 0004 00000000 		.word	.LC0
 153              		.cfi_endproc
 154              	.LFE1048:
 155              		.cantunwind
 156              		.fnend
 158              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 159              		.align	1
 160              		.weak	_ZN8std_msgs4Time6getMD5Ev
 161              		.thumb
 162              		.thumb_func
 164              	_ZN8std_msgs4Time6getMD5Ev:
 165              		.fnstart
 166              	.LFB1049:
  56:./lib/ros_lib/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 167              		.loc 1 56 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL10:
 173              		.loc 1 56 0
 174 0000 0048     		ldr	r0, .L7
 175              	.LVL11:
 176 0002 7047     		bx	lr
 177              	.L8:
 178              		.align	2
 179              	.L7:
 180 0004 0E000000 		.word	.LC1
 181              		.cfi_endproc
 182              	.LFE1049:
 183              		.cantunwind
 184              		.fnend
 186              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 187              		.align	1
 188              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 189              		.thumb
 190              		.thumb_func
 192              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 193              		.fnstart
 194              	.LFB1055:
 195              		.file 2 "./lib/ros_lib/rosserial_msgs/TopicInfo.h"
   1:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   4:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   9:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** {
  11:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  12:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   {
  14:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  29:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     TopicInfo():
  30:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_id(0),
  31:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_name(""),
  32:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       message_type(""),
  33:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       md5sum(""),
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       buffer_size(0)
  35:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  36:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  37:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  39:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  40:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  43:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  46:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  51:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  56:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  59:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
  60:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
  61:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  62:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  68:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  69:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       return offset;
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  71:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
  73:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  74:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
  77:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  78:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
  80:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  83:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
  86:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  87:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
  89:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  92:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
  95:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  96:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
  98:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 101:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 104:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 105:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 106:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
 107:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
 108:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 109:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 110:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 111:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 112:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 113:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 115:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 116:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****      return offset;
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
 118:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 119:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 196              		.loc 2 119 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL12:
 202              		.loc 2 119 0
 203 0000 0048     		ldr	r0, .L10
 204              	.LVL13:
 205 0002 7047     		bx	lr
 206              	.L11:
 207              		.align	2
 208              	.L10:
 209 0004 2F000000 		.word	.LC2
 210              		.cfi_endproc
 211              	.LFE1055:
 212              		.cantunwind
 213              		.fnend
 215              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 216              		.align	1
 217              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 218              		.thumb
 219              		.thumb_func
 221              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 222              		.fnstart
 223              	.LFB1056:
 120:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 224              		.loc 2 120 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL14:
 230              		.loc 2 120 0
 231 0000 0048     		ldr	r0, .L13
 232              	.LVL15:
 233 0002 7047     		bx	lr
 234              	.L14:
 235              		.align	2
 236              	.L13:
 237 0004 48000000 		.word	.LC3
 238              		.cfi_endproc
 239              	.LFE1056:
 240              		.cantunwind
 241              		.fnend
 243              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 244              		.align	1
 245              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 246              		.thumb
 247              		.thumb_func
 249              	_ZN14rosserial_msgs3Log7getTypeEv:
 250              		.fnstart
 251              	.LFB1062:
 252              		.file 3 "./lib/ros_lib/rosserial_msgs/Log.h"
   1:./lib/ros_lib/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:./lib/ros_lib/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:./lib/ros_lib/rosserial_msgs/Log.h **** 
   4:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/Log.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/Log.h **** 
   9:./lib/ros_lib/rosserial_msgs/Log.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/Log.h **** {
  11:./lib/ros_lib/rosserial_msgs/Log.h **** 
  12:./lib/ros_lib/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/Log.h ****   {
  14:./lib/ros_lib/rosserial_msgs/Log.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/Log.h ****       uint8_t level;
  16:./lib/ros_lib/rosserial_msgs/Log.h ****       const char* msg;
  17:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  18:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  19:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  20:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  21:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  22:./lib/ros_lib/rosserial_msgs/Log.h **** 
  23:./lib/ros_lib/rosserial_msgs/Log.h ****     Log():
  24:./lib/ros_lib/rosserial_msgs/Log.h ****       level(0),
  25:./lib/ros_lib/rosserial_msgs/Log.h ****       msg("")
  26:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  27:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  28:./lib/ros_lib/rosserial_msgs/Log.h **** 
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  31:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  33:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  36:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  38:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  39:./lib/ros_lib/rosserial_msgs/Log.h ****       return offset;
  40:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  41:./lib/ros_lib/rosserial_msgs/Log.h **** 
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
  43:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  44:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
  46:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  47:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg;
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
  49:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  50:./lib/ros_lib/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
  51:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
  52:./lib/ros_lib/rosserial_msgs/Log.h ****       }
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
  55:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  56:./lib/ros_lib/rosserial_msgs/Log.h ****      return offset;
  57:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  58:./lib/ros_lib/rosserial_msgs/Log.h **** 
  59:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 253              		.loc 3 59 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL16:
 259              		.loc 3 59 0
 260 0000 0048     		ldr	r0, .L16
 261              	.LVL17:
 262 0002 7047     		bx	lr
 263              	.L17:
 264              		.align	2
 265              	.L16:
 266 0004 69000000 		.word	.LC4
 267              		.cfi_endproc
 268              	.LFE1062:
 269              		.cantunwind
 270              		.fnend
 272              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 273              		.align	1
 274              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 275              		.thumb
 276              		.thumb_func
 278              	_ZN14rosserial_msgs3Log6getMD5Ev:
 279              		.fnstart
 280              	.LFB1063:
  60:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 281              		.loc 3 60 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL18:
 287              		.loc 3 60 0
 288 0000 0048     		ldr	r0, .L19
 289              	.LVL19:
 290 0002 7047     		bx	lr
 291              	.L20:
 292              		.align	2
 293              	.L19:
 294 0004 7C000000 		.word	.LC5
 295              		.cfi_endproc
 296              	.LFE1063:
 297              		.cantunwind
 298              		.fnend
 300              		.section	.text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv,"axG",%progbits,_ZN14rosserial_m
 301              		.align	1
 302              		.weak	_ZN14rosserial_msgs19RequestParamRequest7getTypeEv
 303              		.thumb
 304              		.thumb_func
 306              	_ZN14rosserial_msgs19RequestParamRequest7getTypeEv:
 307              		.fnstart
 308              	.LFB1069:
 309              		.file 4 "./lib/ros_lib/rosserial_msgs/RequestParam.h"
   1:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   4:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <string.h>
   5:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   6:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   7:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
   8:./lib/ros_lib/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
   9:./lib/ros_lib/rosserial_msgs/RequestParam.h **** {
  10:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  11:./lib/ros_lib/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  12:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  13:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  14:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  15:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  16:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       const char* name;
  17:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  18:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamRequest():
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       name("")
  20:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  21:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  22:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  24:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  25:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  28:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  30:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  31:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  33:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  35:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  36:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  37:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  39:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  42:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  45:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  46:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  48:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  49:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 310              		.loc 4 49 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL20:
 316              		.loc 4 49 0
 317 0000 0048     		ldr	r0, .L22
 318              	.LVL21:
 319 0002 7047     		bx	lr
 320              	.L23:
 321              		.align	2
 322              	.L22:
 323 0004 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE1069:
 326              		.cantunwind
 327              		.fnend
 329              		.section	.text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev,"axG",%progbits,_ZN14rosserial_ms
 330              		.align	1
 331              		.weak	_ZN14rosserial_msgs19RequestParamRequest6getMD5Ev
 332              		.thumb
 333              		.thumb_func
 335              	_ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:
 336              		.fnstart
 337              	.LFB1070:
  50:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
 338              		.loc 4 50 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343              	.LVL22:
 344              		.loc 4 50 0
 345 0000 0048     		ldr	r0, .L25
 346              	.LVL23:
 347 0002 7047     		bx	lr
 348              	.L26:
 349              		.align	2
 350              	.L25:
 351 0004 9D000000 		.word	.LC6
 352              		.cfi_endproc
 353              	.LFE1070:
 354              		.cantunwind
 355              		.fnend
 357              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 358              		.align	1
 359              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 360              		.thumb
 361              		.thumb_func
 363              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 364              		.fnstart
 365              	.LFB1076:
  51:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  52:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   };
  53:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  54:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  55:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  56:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  57:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  58:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  59:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  60:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  61:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float st_floats;
  62:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float * floats;
  63:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  64:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* st_strings;
  65:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* * strings;
  66:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  67:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamResponse():
  68:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length(0), ints(NULL),
  69:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length(0), floats(NULL),
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length(0), strings(NULL)
  71:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  72:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  73:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  75:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  76:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  82:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  83:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
  84:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
  85:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_intsi;
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  91:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  92:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  98:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  99:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 100:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 101:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_floatsi;
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 107:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 108:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 116:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 119:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 120:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 122:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 124:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 125:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 129:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 132:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 133:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
 134:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 135:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 136:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 137:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 138:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 139:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 140:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 142:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 144:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 148:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 151:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 152:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 153:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 154:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 155:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 156:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 157:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 158:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 161:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 163:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 170:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 172:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 175:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 178:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 180:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 181:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 183:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 184:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 366              		.loc 4 184 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371              	.LVL24:
 372              		.loc 4 184 0
 373 0000 0048     		ldr	r0, .L28
 374              	.LVL25:
 375 0002 7047     		bx	lr
 376              	.L29:
 377              		.align	2
 378              	.L28:
 379 0004 00000000 		.word	.LANCHOR0
 380              		.cfi_endproc
 381              	.LFE1076:
 382              		.cantunwind
 383              		.fnend
 385              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 386              		.align	1
 387              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 388              		.thumb
 389              		.thumb_func
 391              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 392              		.fnstart
 393              	.LFB1077:
 185:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 394              		.loc 4 185 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 399              	.LVL26:
 400              		.loc 4 185 0
 401 0000 0048     		ldr	r0, .L31
 402              	.LVL27:
 403 0002 7047     		bx	lr
 404              	.L32:
 405              		.align	2
 406              	.L31:
 407 0004 BE000000 		.word	.LC7
 408              		.cfi_endproc
 409              	.LFE1077:
 410              		.cantunwind
 411              		.fnend
 413              		.section	.text._ZNK8std_msgs5UInt89serializeEPh,"axG",%progbits,_ZNK8std_msgs5UInt89serializeEPh,c
 414              		.align	1
 415              		.weak	_ZNK8std_msgs5UInt89serializeEPh
 416              		.thumb
 417              		.thumb_func
 419              	_ZNK8std_msgs5UInt89serializeEPh:
 420              		.fnstart
 421              	.LFB1165:
 422              		.file 5 "./lib/ros_lib/std_msgs/UInt8.h"
   1:./lib/ros_lib/std_msgs/UInt8.h **** #ifndef _ROS_std_msgs_UInt8_h
   2:./lib/ros_lib/std_msgs/UInt8.h **** #define _ROS_std_msgs_UInt8_h
   3:./lib/ros_lib/std_msgs/UInt8.h **** 
   4:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/UInt8.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/UInt8.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/UInt8.h **** 
   9:./lib/ros_lib/std_msgs/UInt8.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/UInt8.h **** {
  11:./lib/ros_lib/std_msgs/UInt8.h **** 
  12:./lib/ros_lib/std_msgs/UInt8.h ****   class UInt8 : public ros::Msg
  13:./lib/ros_lib/std_msgs/UInt8.h ****   {
  14:./lib/ros_lib/std_msgs/UInt8.h ****     public:
  15:./lib/ros_lib/std_msgs/UInt8.h ****       uint8_t data;
  16:./lib/ros_lib/std_msgs/UInt8.h **** 
  17:./lib/ros_lib/std_msgs/UInt8.h ****     UInt8():
  18:./lib/ros_lib/std_msgs/UInt8.h ****       data(0)
  19:./lib/ros_lib/std_msgs/UInt8.h ****     {
  20:./lib/ros_lib/std_msgs/UInt8.h ****     }
  21:./lib/ros_lib/std_msgs/UInt8.h **** 
  22:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int serialize(unsigned char *outbuffer) const
 423              		.loc 5 22 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 428              	.LVL28:
  23:./lib/ros_lib/std_msgs/UInt8.h ****     {
  24:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  25:./lib/ros_lib/std_msgs/UInt8.h ****       *(outbuffer + offset + 0) = (this->data >> (8 * 0)) & 0xFF;
 429              		.loc 5 25 0
 430 0000 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  26:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  27:./lib/ros_lib/std_msgs/UInt8.h ****       return offset;
  28:./lib/ros_lib/std_msgs/UInt8.h ****     }
 431              		.loc 5 28 0
 432 0002 0120     		movs	r0, #1
 433              	.LVL29:
  25:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 434              		.loc 5 25 0
 435 0004 0B70     		strb	r3, [r1]
 436              	.LVL30:
 437              		.loc 5 28 0
 438 0006 7047     		bx	lr
 439              		.cfi_endproc
 440              	.LFE1165:
 441              		.cantunwind
 442              		.fnend
 444              		.section	.text._ZN8std_msgs5UInt811deserializeEPh,"axG",%progbits,_ZN8std_msgs5UInt811deserializeE
 445              		.align	1
 446              		.weak	_ZN8std_msgs5UInt811deserializeEPh
 447              		.thumb
 448              		.thumb_func
 450              	_ZN8std_msgs5UInt811deserializeEPh:
 451              		.fnstart
 452              	.LFB1166:
  29:./lib/ros_lib/std_msgs/UInt8.h **** 
  30:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int deserialize(unsigned char *inbuffer)
 453              		.loc 5 30 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 458              	.LVL31:
  31:./lib/ros_lib/std_msgs/UInt8.h ****     {
  32:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  33:./lib/ros_lib/std_msgs/UInt8.h ****       this->data =  ((uint8_t) (*(inbuffer + offset)));
 459              		.loc 5 33 0
 460 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 461 0002 0371     		strb	r3, [r0, #4]
 462              	.LVL32:
  34:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  35:./lib/ros_lib/std_msgs/UInt8.h ****      return offset;
  36:./lib/ros_lib/std_msgs/UInt8.h ****     }
 463              		.loc 5 36 0
 464 0004 0120     		movs	r0, #1
 465              	.LVL33:
 466 0006 7047     		bx	lr
 467              		.cfi_endproc
 468              	.LFE1166:
 469              		.cantunwind
 470              		.fnend
 472              		.section	.text._ZN8std_msgs5UInt87getTypeEv,"axG",%progbits,_ZN8std_msgs5UInt87getTypeEv,comdat
 473              		.align	1
 474              		.weak	_ZN8std_msgs5UInt87getTypeEv
 475              		.thumb
 476              		.thumb_func
 478              	_ZN8std_msgs5UInt87getTypeEv:
 479              		.fnstart
 480              	.LFB1167:
  37:./lib/ros_lib/std_msgs/UInt8.h **** 
  38:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getType(){ return "std_msgs/UInt8"; };
 481              		.loc 5 38 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486              	.LVL34:
 487              		.loc 5 38 0
 488 0000 0048     		ldr	r0, .L36
 489              	.LVL35:
 490 0002 7047     		bx	lr
 491              	.L37:
 492              		.align	2
 493              	.L36:
 494 0004 DF000000 		.word	.LC8
 495              		.cfi_endproc
 496              	.LFE1167:
 497              		.cantunwind
 498              		.fnend
 500              		.section	.text._ZN8std_msgs5UInt86getMD5Ev,"axG",%progbits,_ZN8std_msgs5UInt86getMD5Ev,comdat
 501              		.align	1
 502              		.weak	_ZN8std_msgs5UInt86getMD5Ev
 503              		.thumb
 504              		.thumb_func
 506              	_ZN8std_msgs5UInt86getMD5Ev:
 507              		.fnstart
 508              	.LFB1168:
  39:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getMD5(){ return "7c8164229e7d2c17eb95e9231617fdee"; };
 509              		.loc 5 39 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 514              	.LVL36:
 515              		.loc 5 39 0
 516 0000 0048     		ldr	r0, .L39
 517              	.LVL37:
 518 0002 7047     		bx	lr
 519              	.L40:
 520              		.align	2
 521              	.L39:
 522 0004 EE000000 		.word	.LC9
 523              		.cfi_endproc
 524              	.LFE1168:
 525              		.cantunwind
 526              		.fnend
 528              		.section	.text._ZN8std_msgs6Header7getTypeEv,"axG",%progbits,_ZN8std_msgs6Header7getTypeEv,comdat
 529              		.align	1
 530              		.weak	_ZN8std_msgs6Header7getTypeEv
 531              		.thumb
 532              		.thumb_func
 534              	_ZN8std_msgs6Header7getTypeEv:
 535              		.fnstart
 536              	.LFB1174:
 537              		.file 6 "./lib/ros_lib/std_msgs/Header.h"
   1:./lib/ros_lib/std_msgs/Header.h **** #ifndef _ROS_std_msgs_Header_h
   2:./lib/ros_lib/std_msgs/Header.h **** #define _ROS_std_msgs_Header_h
   3:./lib/ros_lib/std_msgs/Header.h **** 
   4:./lib/ros_lib/std_msgs/Header.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Header.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Header.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Header.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Header.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Header.h **** 
  10:./lib/ros_lib/std_msgs/Header.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Header.h **** {
  12:./lib/ros_lib/std_msgs/Header.h **** 
  13:./lib/ros_lib/std_msgs/Header.h ****   class Header : public ros::Msg
  14:./lib/ros_lib/std_msgs/Header.h ****   {
  15:./lib/ros_lib/std_msgs/Header.h ****     public:
  16:./lib/ros_lib/std_msgs/Header.h ****       uint32_t seq;
  17:./lib/ros_lib/std_msgs/Header.h ****       ros::Time stamp;
  18:./lib/ros_lib/std_msgs/Header.h ****       const char* frame_id;
  19:./lib/ros_lib/std_msgs/Header.h **** 
  20:./lib/ros_lib/std_msgs/Header.h ****     Header():
  21:./lib/ros_lib/std_msgs/Header.h ****       seq(0),
  22:./lib/ros_lib/std_msgs/Header.h ****       stamp(),
  23:./lib/ros_lib/std_msgs/Header.h ****       frame_id("")
  24:./lib/ros_lib/std_msgs/Header.h ****     {
  25:./lib/ros_lib/std_msgs/Header.h ****     }
  26:./lib/ros_lib/std_msgs/Header.h **** 
  27:./lib/ros_lib/std_msgs/Header.h ****     virtual int serialize(unsigned char *outbuffer) const
  28:./lib/ros_lib/std_msgs/Header.h ****     {
  29:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->seq >> (8 * 0)) & 0xFF;
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
  33:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
  34:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
  38:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
  39:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
  43:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
  44:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  45:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id = strlen(this->frame_id);
  46:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
  47:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  48:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, this->frame_id, length_frame_id);
  49:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  50:./lib/ros_lib/std_msgs/Header.h ****       return offset;
  51:./lib/ros_lib/std_msgs/Header.h ****     }
  52:./lib/ros_lib/std_msgs/Header.h **** 
  53:./lib/ros_lib/std_msgs/Header.h ****     virtual int deserialize(unsigned char *inbuffer)
  54:./lib/ros_lib/std_msgs/Header.h ****     {
  55:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq =  ((uint32_t) (*(inbuffer + offset)));
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  59:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  60:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  64:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  65:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  69:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  70:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  71:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id;
  72:./lib/ros_lib/std_msgs/Header.h ****       memcpy(&length_frame_id, (inbuffer + offset), sizeof(uint32_t));
  73:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  74:./lib/ros_lib/std_msgs/Header.h ****       for(unsigned int k= offset; k< offset+length_frame_id; ++k){
  75:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
  76:./lib/ros_lib/std_msgs/Header.h ****       }
  77:./lib/ros_lib/std_msgs/Header.h ****       inbuffer[offset+length_frame_id-1]=0;
  78:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
  79:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  80:./lib/ros_lib/std_msgs/Header.h ****      return offset;
  81:./lib/ros_lib/std_msgs/Header.h ****     }
  82:./lib/ros_lib/std_msgs/Header.h **** 
  83:./lib/ros_lib/std_msgs/Header.h ****     const char * getType(){ return "std_msgs/Header"; };
 538              		.loc 6 83 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 543              	.LVL38:
 544              		.loc 6 83 0
 545 0000 0048     		ldr	r0, .L42
 546              	.LVL39:
 547 0002 7047     		bx	lr
 548              	.L43:
 549              		.align	2
 550              	.L42:
 551 0004 0F010000 		.word	.LC10
 552              		.cfi_endproc
 553              	.LFE1174:
 554              		.cantunwind
 555              		.fnend
 557              		.section	.text._ZN8std_msgs6Header6getMD5Ev,"axG",%progbits,_ZN8std_msgs6Header6getMD5Ev,comdat
 558              		.align	1
 559              		.weak	_ZN8std_msgs6Header6getMD5Ev
 560              		.thumb
 561              		.thumb_func
 563              	_ZN8std_msgs6Header6getMD5Ev:
 564              		.fnstart
 565              	.LFB1175:
  84:./lib/ros_lib/std_msgs/Header.h ****     const char * getMD5(){ return "2176decaecbce78abc3b96ef049fabed"; };
 566              		.loc 6 84 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              		@ link register save eliminated.
 571              	.LVL40:
 572              		.loc 6 84 0
 573 0000 0048     		ldr	r0, .L45
 574              	.LVL41:
 575 0002 7047     		bx	lr
 576              	.L46:
 577              		.align	2
 578              	.L45:
 579 0004 1F010000 		.word	.LC11
 580              		.cfi_endproc
 581              	.LFE1175:
 582              		.cantunwind
 583              		.fnend
 585              		.section	.text._ZN13geometry_msgs5Point7getTypeEv,"axG",%progbits,_ZN13geometry_msgs5Point7getType
 586              		.align	1
 587              		.weak	_ZN13geometry_msgs5Point7getTypeEv
 588              		.thumb
 589              		.thumb_func
 591              	_ZN13geometry_msgs5Point7getTypeEv:
 592              		.fnstart
 593              	.LFB1181:
 594              		.file 7 "./lib/ros_lib/geometry_msgs/Point.h"
   1:./lib/ros_lib/geometry_msgs/Point.h **** #ifndef _ROS_geometry_msgs_Point_h
   2:./lib/ros_lib/geometry_msgs/Point.h **** #define _ROS_geometry_msgs_Point_h
   3:./lib/ros_lib/geometry_msgs/Point.h **** 
   4:./lib/ros_lib/geometry_msgs/Point.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/Point.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/Point.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/Point.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/Point.h **** 
   9:./lib/ros_lib/geometry_msgs/Point.h **** namespace geometry_msgs
  10:./lib/ros_lib/geometry_msgs/Point.h **** {
  11:./lib/ros_lib/geometry_msgs/Point.h **** 
  12:./lib/ros_lib/geometry_msgs/Point.h ****   class Point : public ros::Msg
  13:./lib/ros_lib/geometry_msgs/Point.h ****   {
  14:./lib/ros_lib/geometry_msgs/Point.h ****     public:
  15:./lib/ros_lib/geometry_msgs/Point.h ****       float x;
  16:./lib/ros_lib/geometry_msgs/Point.h ****       float y;
  17:./lib/ros_lib/geometry_msgs/Point.h ****       float z;
  18:./lib/ros_lib/geometry_msgs/Point.h **** 
  19:./lib/ros_lib/geometry_msgs/Point.h ****     Point():
  20:./lib/ros_lib/geometry_msgs/Point.h ****       x(0),
  21:./lib/ros_lib/geometry_msgs/Point.h ****       y(0),
  22:./lib/ros_lib/geometry_msgs/Point.h ****       z(0)
  23:./lib/ros_lib/geometry_msgs/Point.h ****     {
  24:./lib/ros_lib/geometry_msgs/Point.h ****     }
  25:./lib/ros_lib/geometry_msgs/Point.h **** 
  26:./lib/ros_lib/geometry_msgs/Point.h ****     virtual int serialize(unsigned char *outbuffer) const
  27:./lib/ros_lib/geometry_msgs/Point.h ****     {
  28:./lib/ros_lib/geometry_msgs/Point.h ****       int offset = 0;
  29:./lib/ros_lib/geometry_msgs/Point.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->x);
  30:./lib/ros_lib/geometry_msgs/Point.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
  31:./lib/ros_lib/geometry_msgs/Point.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
  32:./lib/ros_lib/geometry_msgs/Point.h ****       return offset;
  33:./lib/ros_lib/geometry_msgs/Point.h ****     }
  34:./lib/ros_lib/geometry_msgs/Point.h **** 
  35:./lib/ros_lib/geometry_msgs/Point.h ****     virtual int deserialize(unsigned char *inbuffer)
  36:./lib/ros_lib/geometry_msgs/Point.h ****     {
  37:./lib/ros_lib/geometry_msgs/Point.h ****       int offset = 0;
  38:./lib/ros_lib/geometry_msgs/Point.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->x));
  39:./lib/ros_lib/geometry_msgs/Point.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
  40:./lib/ros_lib/geometry_msgs/Point.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
  41:./lib/ros_lib/geometry_msgs/Point.h ****      return offset;
  42:./lib/ros_lib/geometry_msgs/Point.h ****     }
  43:./lib/ros_lib/geometry_msgs/Point.h **** 
  44:./lib/ros_lib/geometry_msgs/Point.h ****     const char * getType(){ return "geometry_msgs/Point"; };
 595              		.loc 7 44 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600              	.LVL42:
 601              		.loc 7 44 0
 602 0000 0048     		ldr	r0, .L48
 603              	.LVL43:
 604 0002 7047     		bx	lr
 605              	.L49:
 606              		.align	2
 607              	.L48:
 608 0004 40010000 		.word	.LC12
 609              		.cfi_endproc
 610              	.LFE1181:
 611              		.cantunwind
 612              		.fnend
 614              		.section	.text._ZN13geometry_msgs5Point6getMD5Ev,"axG",%progbits,_ZN13geometry_msgs5Point6getMD5Ev
 615              		.align	1
 616              		.weak	_ZN13geometry_msgs5Point6getMD5Ev
 617              		.thumb
 618              		.thumb_func
 620              	_ZN13geometry_msgs5Point6getMD5Ev:
 621              		.fnstart
 622              	.LFB1182:
  45:./lib/ros_lib/geometry_msgs/Point.h ****     const char * getMD5(){ return "4a842b65f413084dc2b10fb484ea7f17"; };
 623              		.loc 7 45 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 628              	.LVL44:
 629              		.loc 7 45 0
 630 0000 0048     		ldr	r0, .L51
 631              	.LVL45:
 632 0002 7047     		bx	lr
 633              	.L52:
 634              		.align	2
 635              	.L51:
 636 0004 54010000 		.word	.LC13
 637              		.cfi_endproc
 638              	.LFE1182:
 639              		.cantunwind
 640              		.fnend
 642              		.section	.text._ZN13geometry_msgs10Quaternion7getTypeEv,"axG",%progbits,_ZN13geometry_msgs10Quater
 643              		.align	1
 644              		.weak	_ZN13geometry_msgs10Quaternion7getTypeEv
 645              		.thumb
 646              		.thumb_func
 648              	_ZN13geometry_msgs10Quaternion7getTypeEv:
 649              		.fnstart
 650              	.LFB1188:
 651              		.file 8 "./lib/ros_lib/geometry_msgs/Quaternion.h"
   1:./lib/ros_lib/geometry_msgs/Quaternion.h **** #ifndef _ROS_geometry_msgs_Quaternion_h
   2:./lib/ros_lib/geometry_msgs/Quaternion.h **** #define _ROS_geometry_msgs_Quaternion_h
   3:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
   4:./lib/ros_lib/geometry_msgs/Quaternion.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/Quaternion.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/Quaternion.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/Quaternion.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
   9:./lib/ros_lib/geometry_msgs/Quaternion.h **** namespace geometry_msgs
  10:./lib/ros_lib/geometry_msgs/Quaternion.h **** {
  11:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
  12:./lib/ros_lib/geometry_msgs/Quaternion.h ****   class Quaternion : public ros::Msg
  13:./lib/ros_lib/geometry_msgs/Quaternion.h ****   {
  14:./lib/ros_lib/geometry_msgs/Quaternion.h ****     public:
  15:./lib/ros_lib/geometry_msgs/Quaternion.h ****       float x;
  16:./lib/ros_lib/geometry_msgs/Quaternion.h ****       float y;
  17:./lib/ros_lib/geometry_msgs/Quaternion.h ****       float z;
  18:./lib/ros_lib/geometry_msgs/Quaternion.h ****       float w;
  19:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
  20:./lib/ros_lib/geometry_msgs/Quaternion.h ****     Quaternion():
  21:./lib/ros_lib/geometry_msgs/Quaternion.h ****       x(0),
  22:./lib/ros_lib/geometry_msgs/Quaternion.h ****       y(0),
  23:./lib/ros_lib/geometry_msgs/Quaternion.h ****       z(0),
  24:./lib/ros_lib/geometry_msgs/Quaternion.h ****       w(0)
  25:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
  26:./lib/ros_lib/geometry_msgs/Quaternion.h ****     }
  27:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
  28:./lib/ros_lib/geometry_msgs/Quaternion.h ****     virtual int serialize(unsigned char *outbuffer) const
  29:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
  30:./lib/ros_lib/geometry_msgs/Quaternion.h ****       int offset = 0;
  31:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->x);
  32:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
  33:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
  34:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->w);
  35:./lib/ros_lib/geometry_msgs/Quaternion.h ****       return offset;
  36:./lib/ros_lib/geometry_msgs/Quaternion.h ****     }
  37:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
  38:./lib/ros_lib/geometry_msgs/Quaternion.h ****     virtual int deserialize(unsigned char *inbuffer)
  39:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
  40:./lib/ros_lib/geometry_msgs/Quaternion.h ****       int offset = 0;
  41:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->x));
  42:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
  43:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
  44:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->w));
  45:./lib/ros_lib/geometry_msgs/Quaternion.h ****      return offset;
  46:./lib/ros_lib/geometry_msgs/Quaternion.h ****     }
  47:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
  48:./lib/ros_lib/geometry_msgs/Quaternion.h ****     const char * getType(){ return "geometry_msgs/Quaternion"; };
 652              		.loc 8 48 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 657              	.LVL46:
 658              		.loc 8 48 0
 659 0000 0048     		ldr	r0, .L54
 660              	.LVL47:
 661 0002 7047     		bx	lr
 662              	.L55:
 663              		.align	2
 664              	.L54:
 665 0004 75010000 		.word	.LC14
 666              		.cfi_endproc
 667              	.LFE1188:
 668              		.cantunwind
 669              		.fnend
 671              		.section	.text._ZN13geometry_msgs10Quaternion6getMD5Ev,"axG",%progbits,_ZN13geometry_msgs10Quatern
 672              		.align	1
 673              		.weak	_ZN13geometry_msgs10Quaternion6getMD5Ev
 674              		.thumb
 675              		.thumb_func
 677              	_ZN13geometry_msgs10Quaternion6getMD5Ev:
 678              		.fnstart
 679              	.LFB1189:
  49:./lib/ros_lib/geometry_msgs/Quaternion.h ****     const char * getMD5(){ return "a779879fadf0160734f906b8c19c7004"; };
 680              		.loc 8 49 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 685              	.LVL48:
 686              		.loc 8 49 0
 687 0000 0048     		ldr	r0, .L57
 688              	.LVL49:
 689 0002 7047     		bx	lr
 690              	.L58:
 691              		.align	2
 692              	.L57:
 693 0004 8E010000 		.word	.LC15
 694              		.cfi_endproc
 695              	.LFE1189:
 696              		.cantunwind
 697              		.fnend
 699              		.section	.text._ZN13geometry_msgs4Pose7getTypeEv,"axG",%progbits,_ZN13geometry_msgs4Pose7getTypeEv
 700              		.align	1
 701              		.weak	_ZN13geometry_msgs4Pose7getTypeEv
 702              		.thumb
 703              		.thumb_func
 705              	_ZN13geometry_msgs4Pose7getTypeEv:
 706              		.fnstart
 707              	.LFB1195:
 708              		.file 9 "./lib/ros_lib/geometry_msgs/Pose.h"
   1:./lib/ros_lib/geometry_msgs/Pose.h **** #ifndef _ROS_geometry_msgs_Pose_h
   2:./lib/ros_lib/geometry_msgs/Pose.h **** #define _ROS_geometry_msgs_Pose_h
   3:./lib/ros_lib/geometry_msgs/Pose.h **** 
   4:./lib/ros_lib/geometry_msgs/Pose.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/Pose.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/Pose.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/Pose.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/Pose.h **** #include "geometry_msgs/Point.h"
   9:./lib/ros_lib/geometry_msgs/Pose.h **** #include "geometry_msgs/Quaternion.h"
  10:./lib/ros_lib/geometry_msgs/Pose.h **** 
  11:./lib/ros_lib/geometry_msgs/Pose.h **** namespace geometry_msgs
  12:./lib/ros_lib/geometry_msgs/Pose.h **** {
  13:./lib/ros_lib/geometry_msgs/Pose.h **** 
  14:./lib/ros_lib/geometry_msgs/Pose.h ****   class Pose : public ros::Msg
  15:./lib/ros_lib/geometry_msgs/Pose.h ****   {
  16:./lib/ros_lib/geometry_msgs/Pose.h ****     public:
  17:./lib/ros_lib/geometry_msgs/Pose.h ****       geometry_msgs::Point position;
  18:./lib/ros_lib/geometry_msgs/Pose.h ****       geometry_msgs::Quaternion orientation;
  19:./lib/ros_lib/geometry_msgs/Pose.h **** 
  20:./lib/ros_lib/geometry_msgs/Pose.h ****     Pose():
  21:./lib/ros_lib/geometry_msgs/Pose.h ****       position(),
  22:./lib/ros_lib/geometry_msgs/Pose.h ****       orientation()
  23:./lib/ros_lib/geometry_msgs/Pose.h ****     {
  24:./lib/ros_lib/geometry_msgs/Pose.h ****     }
  25:./lib/ros_lib/geometry_msgs/Pose.h **** 
  26:./lib/ros_lib/geometry_msgs/Pose.h ****     virtual int serialize(unsigned char *outbuffer) const
  27:./lib/ros_lib/geometry_msgs/Pose.h ****     {
  28:./lib/ros_lib/geometry_msgs/Pose.h ****       int offset = 0;
  29:./lib/ros_lib/geometry_msgs/Pose.h ****       offset += this->position.serialize(outbuffer + offset);
  30:./lib/ros_lib/geometry_msgs/Pose.h ****       offset += this->orientation.serialize(outbuffer + offset);
  31:./lib/ros_lib/geometry_msgs/Pose.h ****       return offset;
  32:./lib/ros_lib/geometry_msgs/Pose.h ****     }
  33:./lib/ros_lib/geometry_msgs/Pose.h **** 
  34:./lib/ros_lib/geometry_msgs/Pose.h ****     virtual int deserialize(unsigned char *inbuffer)
  35:./lib/ros_lib/geometry_msgs/Pose.h ****     {
  36:./lib/ros_lib/geometry_msgs/Pose.h ****       int offset = 0;
  37:./lib/ros_lib/geometry_msgs/Pose.h ****       offset += this->position.deserialize(inbuffer + offset);
  38:./lib/ros_lib/geometry_msgs/Pose.h ****       offset += this->orientation.deserialize(inbuffer + offset);
  39:./lib/ros_lib/geometry_msgs/Pose.h ****      return offset;
  40:./lib/ros_lib/geometry_msgs/Pose.h ****     }
  41:./lib/ros_lib/geometry_msgs/Pose.h **** 
  42:./lib/ros_lib/geometry_msgs/Pose.h ****     const char * getType(){ return "geometry_msgs/Pose"; };
 709              		.loc 9 42 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 714              	.LVL50:
 715              		.loc 9 42 0
 716 0000 0048     		ldr	r0, .L60
 717              	.LVL51:
 718 0002 7047     		bx	lr
 719              	.L61:
 720              		.align	2
 721              	.L60:
 722 0004 AF010000 		.word	.LC16
 723              		.cfi_endproc
 724              	.LFE1195:
 725              		.cantunwind
 726              		.fnend
 728              		.section	.text._ZN13geometry_msgs4Pose6getMD5Ev,"axG",%progbits,_ZN13geometry_msgs4Pose6getMD5Ev,c
 729              		.align	1
 730              		.weak	_ZN13geometry_msgs4Pose6getMD5Ev
 731              		.thumb
 732              		.thumb_func
 734              	_ZN13geometry_msgs4Pose6getMD5Ev:
 735              		.fnstart
 736              	.LFB1196:
  43:./lib/ros_lib/geometry_msgs/Pose.h ****     const char * getMD5(){ return "e45d45a5a1ce597b249e23fb30fc871f"; };
 737              		.loc 9 43 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742              	.LVL52:
 743              		.loc 9 43 0
 744 0000 0048     		ldr	r0, .L63
 745              	.LVL53:
 746 0002 7047     		bx	lr
 747              	.L64:
 748              		.align	2
 749              	.L63:
 750 0004 C2010000 		.word	.LC17
 751              		.cfi_endproc
 752              	.LFE1196:
 753              		.cantunwind
 754              		.fnend
 756              		.section	.text._ZN13geometry_msgs18PoseWithCovariance7getTypeEv,"axG",%progbits,_ZN13geometry_msgs
 757              		.align	1
 758              		.weak	_ZN13geometry_msgs18PoseWithCovariance7getTypeEv
 759              		.thumb
 760              		.thumb_func
 762              	_ZN13geometry_msgs18PoseWithCovariance7getTypeEv:
 763              		.fnstart
 764              	.LFB1202:
 765              		.file 10 "./lib/ros_lib/geometry_msgs/PoseWithCovariance.h"
   1:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** #ifndef _ROS_geometry_msgs_PoseWithCovariance_h
   2:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** #define _ROS_geometry_msgs_PoseWithCovariance_h
   3:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
   4:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** #include "geometry_msgs/Pose.h"
   9:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
  10:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** namespace geometry_msgs
  11:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** {
  12:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
  13:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****   class PoseWithCovariance : public ros::Msg
  14:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****   {
  15:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     public:
  16:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       geometry_msgs::Pose pose;
  17:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       float covariance[36];
  18:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
  19:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     PoseWithCovariance():
  20:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       pose(),
  21:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       covariance()
  22:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
  23:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     }
  24:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
  25:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     virtual int serialize(unsigned char *outbuffer) const
  26:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
  27:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       int offset = 0;
  28:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       offset += this->pose.serialize(outbuffer + offset);
  29:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
  30:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->covariance[i]);
  31:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       }
  32:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       return offset;
  33:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     }
  34:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
  35:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     virtual int deserialize(unsigned char *inbuffer)
  36:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
  37:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       int offset = 0;
  38:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       offset += this->pose.deserialize(inbuffer + offset);
  39:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
  40:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->covariance[i]));
  41:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       }
  42:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****      return offset;
  43:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     }
  44:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
  45:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     const char * getType(){ return "geometry_msgs/PoseWithCovariance"; };
 766              		.loc 10 45 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              		@ link register save eliminated.
 771              	.LVL54:
 772              		.loc 10 45 0
 773 0000 0048     		ldr	r0, .L66
 774              	.LVL55:
 775 0002 7047     		bx	lr
 776              	.L67:
 777              		.align	2
 778              	.L66:
 779 0004 E3010000 		.word	.LC18
 780              		.cfi_endproc
 781              	.LFE1202:
 782              		.cantunwind
 783              		.fnend
 785              		.section	.text._ZN13geometry_msgs18PoseWithCovariance6getMD5Ev,"axG",%progbits,_ZN13geometry_msgs1
 786              		.align	1
 787              		.weak	_ZN13geometry_msgs18PoseWithCovariance6getMD5Ev
 788              		.thumb
 789              		.thumb_func
 791              	_ZN13geometry_msgs18PoseWithCovariance6getMD5Ev:
 792              		.fnstart
 793              	.LFB1203:
  46:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     const char * getMD5(){ return "c23e848cf1b7533a8d7c259073a97e6f"; };
 794              		.loc 10 46 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 799              	.LVL56:
 800              		.loc 10 46 0
 801 0000 0048     		ldr	r0, .L69
 802              	.LVL57:
 803 0002 7047     		bx	lr
 804              	.L70:
 805              		.align	2
 806              	.L69:
 807 0004 04020000 		.word	.LC19
 808              		.cfi_endproc
 809              	.LFE1203:
 810              		.cantunwind
 811              		.fnend
 813              		.section	.text._ZN13geometry_msgs7Vector37getTypeEv,"axG",%progbits,_ZN13geometry_msgs7Vector37get
 814              		.align	1
 815              		.weak	_ZN13geometry_msgs7Vector37getTypeEv
 816              		.thumb
 817              		.thumb_func
 819              	_ZN13geometry_msgs7Vector37getTypeEv:
 820              		.fnstart
 821              	.LFB1209:
 822              		.file 11 "./lib/ros_lib/geometry_msgs/Vector3.h"
   1:./lib/ros_lib/geometry_msgs/Vector3.h **** #ifndef _ROS_geometry_msgs_Vector3_h
   2:./lib/ros_lib/geometry_msgs/Vector3.h **** #define _ROS_geometry_msgs_Vector3_h
   3:./lib/ros_lib/geometry_msgs/Vector3.h **** 
   4:./lib/ros_lib/geometry_msgs/Vector3.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/Vector3.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/Vector3.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/Vector3.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/Vector3.h **** 
   9:./lib/ros_lib/geometry_msgs/Vector3.h **** namespace geometry_msgs
  10:./lib/ros_lib/geometry_msgs/Vector3.h **** {
  11:./lib/ros_lib/geometry_msgs/Vector3.h **** 
  12:./lib/ros_lib/geometry_msgs/Vector3.h ****   class Vector3 : public ros::Msg
  13:./lib/ros_lib/geometry_msgs/Vector3.h ****   {
  14:./lib/ros_lib/geometry_msgs/Vector3.h ****     public:
  15:./lib/ros_lib/geometry_msgs/Vector3.h ****       float x;
  16:./lib/ros_lib/geometry_msgs/Vector3.h ****       float y;
  17:./lib/ros_lib/geometry_msgs/Vector3.h ****       float z;
  18:./lib/ros_lib/geometry_msgs/Vector3.h **** 
  19:./lib/ros_lib/geometry_msgs/Vector3.h ****     Vector3():
  20:./lib/ros_lib/geometry_msgs/Vector3.h ****       x(0),
  21:./lib/ros_lib/geometry_msgs/Vector3.h ****       y(0),
  22:./lib/ros_lib/geometry_msgs/Vector3.h ****       z(0)
  23:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
  24:./lib/ros_lib/geometry_msgs/Vector3.h ****     }
  25:./lib/ros_lib/geometry_msgs/Vector3.h **** 
  26:./lib/ros_lib/geometry_msgs/Vector3.h ****     virtual int serialize(unsigned char *outbuffer) const
  27:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
  28:./lib/ros_lib/geometry_msgs/Vector3.h ****       int offset = 0;
  29:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->x);
  30:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
  31:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
  32:./lib/ros_lib/geometry_msgs/Vector3.h ****       return offset;
  33:./lib/ros_lib/geometry_msgs/Vector3.h ****     }
  34:./lib/ros_lib/geometry_msgs/Vector3.h **** 
  35:./lib/ros_lib/geometry_msgs/Vector3.h ****     virtual int deserialize(unsigned char *inbuffer)
  36:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
  37:./lib/ros_lib/geometry_msgs/Vector3.h ****       int offset = 0;
  38:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->x));
  39:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
  40:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
  41:./lib/ros_lib/geometry_msgs/Vector3.h ****      return offset;
  42:./lib/ros_lib/geometry_msgs/Vector3.h ****     }
  43:./lib/ros_lib/geometry_msgs/Vector3.h **** 
  44:./lib/ros_lib/geometry_msgs/Vector3.h ****     const char * getType(){ return "geometry_msgs/Vector3"; };
 823              		.loc 11 44 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 828              	.LVL58:
 829              		.loc 11 44 0
 830 0000 0048     		ldr	r0, .L72
 831              	.LVL59:
 832 0002 7047     		bx	lr
 833              	.L73:
 834              		.align	2
 835              	.L72:
 836 0004 25020000 		.word	.LC20
 837              		.cfi_endproc
 838              	.LFE1209:
 839              		.cantunwind
 840              		.fnend
 842              		.section	.text._ZN13geometry_msgs7Vector36getMD5Ev,"axG",%progbits,_ZN13geometry_msgs7Vector36getM
 843              		.align	1
 844              		.weak	_ZN13geometry_msgs7Vector36getMD5Ev
 845              		.thumb
 846              		.thumb_func
 848              	_ZN13geometry_msgs7Vector36getMD5Ev:
 849              		.fnstart
 850              	.LFB1210:
  45:./lib/ros_lib/geometry_msgs/Vector3.h ****     const char * getMD5(){ return "4a842b65f413084dc2b10fb484ea7f17"; };
 851              		.loc 11 45 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 856              	.LVL60:
 857              		.loc 11 45 0
 858 0000 0048     		ldr	r0, .L75
 859              	.LVL61:
 860 0002 7047     		bx	lr
 861              	.L76:
 862              		.align	2
 863              	.L75:
 864 0004 54010000 		.word	.LC13
 865              		.cfi_endproc
 866              	.LFE1210:
 867              		.cantunwind
 868              		.fnend
 870              		.section	.text._ZN13geometry_msgs5Twist7getTypeEv,"axG",%progbits,_ZN13geometry_msgs5Twist7getType
 871              		.align	1
 872              		.weak	_ZN13geometry_msgs5Twist7getTypeEv
 873              		.thumb
 874              		.thumb_func
 876              	_ZN13geometry_msgs5Twist7getTypeEv:
 877              		.fnstart
 878              	.LFB1216:
 879              		.file 12 "./lib/ros_lib/geometry_msgs/Twist.h"
   1:./lib/ros_lib/geometry_msgs/Twist.h **** #ifndef _ROS_geometry_msgs_Twist_h
   2:./lib/ros_lib/geometry_msgs/Twist.h **** #define _ROS_geometry_msgs_Twist_h
   3:./lib/ros_lib/geometry_msgs/Twist.h **** 
   4:./lib/ros_lib/geometry_msgs/Twist.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/Twist.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/Twist.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/Twist.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/Twist.h **** #include "geometry_msgs/Vector3.h"
   9:./lib/ros_lib/geometry_msgs/Twist.h **** 
  10:./lib/ros_lib/geometry_msgs/Twist.h **** namespace geometry_msgs
  11:./lib/ros_lib/geometry_msgs/Twist.h **** {
  12:./lib/ros_lib/geometry_msgs/Twist.h **** 
  13:./lib/ros_lib/geometry_msgs/Twist.h ****   class Twist : public ros::Msg
  14:./lib/ros_lib/geometry_msgs/Twist.h ****   {
  15:./lib/ros_lib/geometry_msgs/Twist.h ****     public:
  16:./lib/ros_lib/geometry_msgs/Twist.h ****       geometry_msgs::Vector3 linear;
  17:./lib/ros_lib/geometry_msgs/Twist.h ****       geometry_msgs::Vector3 angular;
  18:./lib/ros_lib/geometry_msgs/Twist.h **** 
  19:./lib/ros_lib/geometry_msgs/Twist.h ****     Twist():
  20:./lib/ros_lib/geometry_msgs/Twist.h ****       linear(),
  21:./lib/ros_lib/geometry_msgs/Twist.h ****       angular()
  22:./lib/ros_lib/geometry_msgs/Twist.h ****     {
  23:./lib/ros_lib/geometry_msgs/Twist.h ****     }
  24:./lib/ros_lib/geometry_msgs/Twist.h **** 
  25:./lib/ros_lib/geometry_msgs/Twist.h ****     virtual int serialize(unsigned char *outbuffer) const
  26:./lib/ros_lib/geometry_msgs/Twist.h ****     {
  27:./lib/ros_lib/geometry_msgs/Twist.h ****       int offset = 0;
  28:./lib/ros_lib/geometry_msgs/Twist.h ****       offset += this->linear.serialize(outbuffer + offset);
  29:./lib/ros_lib/geometry_msgs/Twist.h ****       offset += this->angular.serialize(outbuffer + offset);
  30:./lib/ros_lib/geometry_msgs/Twist.h ****       return offset;
  31:./lib/ros_lib/geometry_msgs/Twist.h ****     }
  32:./lib/ros_lib/geometry_msgs/Twist.h **** 
  33:./lib/ros_lib/geometry_msgs/Twist.h ****     virtual int deserialize(unsigned char *inbuffer)
  34:./lib/ros_lib/geometry_msgs/Twist.h ****     {
  35:./lib/ros_lib/geometry_msgs/Twist.h ****       int offset = 0;
  36:./lib/ros_lib/geometry_msgs/Twist.h ****       offset += this->linear.deserialize(inbuffer + offset);
  37:./lib/ros_lib/geometry_msgs/Twist.h ****       offset += this->angular.deserialize(inbuffer + offset);
  38:./lib/ros_lib/geometry_msgs/Twist.h ****      return offset;
  39:./lib/ros_lib/geometry_msgs/Twist.h ****     }
  40:./lib/ros_lib/geometry_msgs/Twist.h **** 
  41:./lib/ros_lib/geometry_msgs/Twist.h ****     const char * getType(){ return "geometry_msgs/Twist"; };
 880              		.loc 12 41 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884              		@ link register save eliminated.
 885              	.LVL62:
 886              		.loc 12 41 0
 887 0000 0048     		ldr	r0, .L78
 888              	.LVL63:
 889 0002 7047     		bx	lr
 890              	.L79:
 891              		.align	2
 892              	.L78:
 893 0004 3B020000 		.word	.LC21
 894              		.cfi_endproc
 895              	.LFE1216:
 896              		.cantunwind
 897              		.fnend
 899              		.section	.text._ZN13geometry_msgs5Twist6getMD5Ev,"axG",%progbits,_ZN13geometry_msgs5Twist6getMD5Ev
 900              		.align	1
 901              		.weak	_ZN13geometry_msgs5Twist6getMD5Ev
 902              		.thumb
 903              		.thumb_func
 905              	_ZN13geometry_msgs5Twist6getMD5Ev:
 906              		.fnstart
 907              	.LFB1217:
  42:./lib/ros_lib/geometry_msgs/Twist.h ****     const char * getMD5(){ return "9f195f881246fdfa2798d1d3eebca84a"; };
 908              		.loc 12 42 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 912              		@ link register save eliminated.
 913              	.LVL64:
 914              		.loc 12 42 0
 915 0000 0048     		ldr	r0, .L81
 916              	.LVL65:
 917 0002 7047     		bx	lr
 918              	.L82:
 919              		.align	2
 920              	.L81:
 921 0004 4F020000 		.word	.LC22
 922              		.cfi_endproc
 923              	.LFE1217:
 924              		.cantunwind
 925              		.fnend
 927              		.section	.text._ZN13geometry_msgs19TwistWithCovariance7getTypeEv,"axG",%progbits,_ZN13geometry_msg
 928              		.align	1
 929              		.weak	_ZN13geometry_msgs19TwistWithCovariance7getTypeEv
 930              		.thumb
 931              		.thumb_func
 933              	_ZN13geometry_msgs19TwistWithCovariance7getTypeEv:
 934              		.fnstart
 935              	.LFB1223:
 936              		.file 13 "./lib/ros_lib/geometry_msgs/TwistWithCovariance.h"
   1:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** #ifndef _ROS_geometry_msgs_TwistWithCovariance_h
   2:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** #define _ROS_geometry_msgs_TwistWithCovariance_h
   3:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
   4:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** #include "geometry_msgs/Twist.h"
   9:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
  10:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** namespace geometry_msgs
  11:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** {
  12:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
  13:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****   class TwistWithCovariance : public ros::Msg
  14:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****   {
  15:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     public:
  16:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       geometry_msgs::Twist twist;
  17:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       float covariance[36];
  18:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
  19:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     TwistWithCovariance():
  20:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       twist(),
  21:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       covariance()
  22:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
  23:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     }
  24:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
  25:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     virtual int serialize(unsigned char *outbuffer) const
  26:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
  27:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       int offset = 0;
  28:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       offset += this->twist.serialize(outbuffer + offset);
  29:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
  30:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->covariance[i]);
  31:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       }
  32:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       return offset;
  33:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     }
  34:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
  35:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     virtual int deserialize(unsigned char *inbuffer)
  36:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
  37:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       int offset = 0;
  38:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       offset += this->twist.deserialize(inbuffer + offset);
  39:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
  40:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->covariance[i]));
  41:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       }
  42:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****      return offset;
  43:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     }
  44:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
  45:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     const char * getType(){ return "geometry_msgs/TwistWithCovariance"; };
 937              		.loc 13 45 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              		@ link register save eliminated.
 942              	.LVL66:
 943              		.loc 13 45 0
 944 0000 0048     		ldr	r0, .L84
 945              	.LVL67:
 946 0002 7047     		bx	lr
 947              	.L85:
 948              		.align	2
 949              	.L84:
 950 0004 70020000 		.word	.LC23
 951              		.cfi_endproc
 952              	.LFE1223:
 953              		.cantunwind
 954              		.fnend
 956              		.section	.text._ZN13geometry_msgs19TwistWithCovariance6getMD5Ev,"axG",%progbits,_ZN13geometry_msgs
 957              		.align	1
 958              		.weak	_ZN13geometry_msgs19TwistWithCovariance6getMD5Ev
 959              		.thumb
 960              		.thumb_func
 962              	_ZN13geometry_msgs19TwistWithCovariance6getMD5Ev:
 963              		.fnstart
 964              	.LFB1224:
  46:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     const char * getMD5(){ return "1fe8a28e6890a4cc3ae4c3ca5c7d82e6"; };
 965              		.loc 13 46 0
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 0
 968              		@ frame_needed = 0, uses_anonymous_args = 0
 969              		@ link register save eliminated.
 970              	.LVL68:
 971              		.loc 13 46 0
 972 0000 0048     		ldr	r0, .L87
 973              	.LVL69:
 974 0002 7047     		bx	lr
 975              	.L88:
 976              		.align	2
 977              	.L87:
 978 0004 92020000 		.word	.LC24
 979              		.cfi_endproc
 980              	.LFE1224:
 981              		.cantunwind
 982              		.fnend
 984              		.section	.text._ZN8nav_msgs8Odometry7getTypeEv,"axG",%progbits,_ZN8nav_msgs8Odometry7getTypeEv,com
 985              		.align	1
 986              		.weak	_ZN8nav_msgs8Odometry7getTypeEv
 987              		.thumb
 988              		.thumb_func
 990              	_ZN8nav_msgs8Odometry7getTypeEv:
 991              		.fnstart
 992              	.LFB1230:
 993              		.file 14 "./lib/ros_lib/nav_msgs/Odometry.h"
   1:./lib/ros_lib/nav_msgs/Odometry.h **** #ifndef _ROS_nav_msgs_Odometry_h
   2:./lib/ros_lib/nav_msgs/Odometry.h **** #define _ROS_nav_msgs_Odometry_h
   3:./lib/ros_lib/nav_msgs/Odometry.h **** 
   4:./lib/ros_lib/nav_msgs/Odometry.h **** #include <stdint.h>
   5:./lib/ros_lib/nav_msgs/Odometry.h **** #include <string.h>
   6:./lib/ros_lib/nav_msgs/Odometry.h **** #include <stdlib.h>
   7:./lib/ros_lib/nav_msgs/Odometry.h **** #include "ros/msg.h"
   8:./lib/ros_lib/nav_msgs/Odometry.h **** #include "std_msgs/Header.h"
   9:./lib/ros_lib/nav_msgs/Odometry.h **** #include "geometry_msgs/PoseWithCovariance.h"
  10:./lib/ros_lib/nav_msgs/Odometry.h **** #include "geometry_msgs/TwistWithCovariance.h"
  11:./lib/ros_lib/nav_msgs/Odometry.h **** 
  12:./lib/ros_lib/nav_msgs/Odometry.h **** namespace nav_msgs
  13:./lib/ros_lib/nav_msgs/Odometry.h **** {
  14:./lib/ros_lib/nav_msgs/Odometry.h **** 
  15:./lib/ros_lib/nav_msgs/Odometry.h ****   class Odometry : public ros::Msg
  16:./lib/ros_lib/nav_msgs/Odometry.h ****   {
  17:./lib/ros_lib/nav_msgs/Odometry.h ****     public:
  18:./lib/ros_lib/nav_msgs/Odometry.h ****       std_msgs::Header header;
  19:./lib/ros_lib/nav_msgs/Odometry.h ****       const char* child_frame_id;
  20:./lib/ros_lib/nav_msgs/Odometry.h ****       geometry_msgs::PoseWithCovariance pose;
  21:./lib/ros_lib/nav_msgs/Odometry.h ****       geometry_msgs::TwistWithCovariance twist;
  22:./lib/ros_lib/nav_msgs/Odometry.h **** 
  23:./lib/ros_lib/nav_msgs/Odometry.h ****     Odometry():
  24:./lib/ros_lib/nav_msgs/Odometry.h ****       header(),
  25:./lib/ros_lib/nav_msgs/Odometry.h ****       child_frame_id(""),
  26:./lib/ros_lib/nav_msgs/Odometry.h ****       pose(),
  27:./lib/ros_lib/nav_msgs/Odometry.h ****       twist()
  28:./lib/ros_lib/nav_msgs/Odometry.h ****     {
  29:./lib/ros_lib/nav_msgs/Odometry.h ****     }
  30:./lib/ros_lib/nav_msgs/Odometry.h **** 
  31:./lib/ros_lib/nav_msgs/Odometry.h ****     virtual int serialize(unsigned char *outbuffer) const
  32:./lib/ros_lib/nav_msgs/Odometry.h ****     {
  33:./lib/ros_lib/nav_msgs/Odometry.h ****       int offset = 0;
  34:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->header.serialize(outbuffer + offset);
  35:./lib/ros_lib/nav_msgs/Odometry.h ****       uint32_t length_child_frame_id = strlen(this->child_frame_id);
  36:./lib/ros_lib/nav_msgs/Odometry.h ****       memcpy(outbuffer + offset, &length_child_frame_id, sizeof(uint32_t));
  37:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += 4;
  38:./lib/ros_lib/nav_msgs/Odometry.h ****       memcpy(outbuffer + offset, this->child_frame_id, length_child_frame_id);
  39:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += length_child_frame_id;
  40:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->pose.serialize(outbuffer + offset);
  41:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->twist.serialize(outbuffer + offset);
  42:./lib/ros_lib/nav_msgs/Odometry.h ****       return offset;
  43:./lib/ros_lib/nav_msgs/Odometry.h ****     }
  44:./lib/ros_lib/nav_msgs/Odometry.h **** 
  45:./lib/ros_lib/nav_msgs/Odometry.h ****     virtual int deserialize(unsigned char *inbuffer)
  46:./lib/ros_lib/nav_msgs/Odometry.h ****     {
  47:./lib/ros_lib/nav_msgs/Odometry.h ****       int offset = 0;
  48:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->header.deserialize(inbuffer + offset);
  49:./lib/ros_lib/nav_msgs/Odometry.h ****       uint32_t length_child_frame_id;
  50:./lib/ros_lib/nav_msgs/Odometry.h ****       memcpy(&length_child_frame_id, (inbuffer + offset), sizeof(uint32_t));
  51:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += 4;
  52:./lib/ros_lib/nav_msgs/Odometry.h ****       for(unsigned int k= offset; k< offset+length_child_frame_id; ++k){
  53:./lib/ros_lib/nav_msgs/Odometry.h ****           inbuffer[k-1]=inbuffer[k];
  54:./lib/ros_lib/nav_msgs/Odometry.h ****       }
  55:./lib/ros_lib/nav_msgs/Odometry.h ****       inbuffer[offset+length_child_frame_id-1]=0;
  56:./lib/ros_lib/nav_msgs/Odometry.h ****       this->child_frame_id = (char *)(inbuffer + offset-1);
  57:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += length_child_frame_id;
  58:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->pose.deserialize(inbuffer + offset);
  59:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->twist.deserialize(inbuffer + offset);
  60:./lib/ros_lib/nav_msgs/Odometry.h ****      return offset;
  61:./lib/ros_lib/nav_msgs/Odometry.h ****     }
  62:./lib/ros_lib/nav_msgs/Odometry.h **** 
  63:./lib/ros_lib/nav_msgs/Odometry.h ****     const char * getType(){ return "nav_msgs/Odometry"; };
 994              		.loc 14 63 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 998              		@ link register save eliminated.
 999              	.LVL70:
 1000              		.loc 14 63 0
 1001 0000 0048     		ldr	r0, .L90
 1002              	.LVL71:
 1003 0002 7047     		bx	lr
 1004              	.L91:
 1005              		.align	2
 1006              	.L90:
 1007 0004 B3020000 		.word	.LC25
 1008              		.cfi_endproc
 1009              	.LFE1230:
 1010              		.cantunwind
 1011              		.fnend
 1013              		.section	.text._ZN8nav_msgs8Odometry6getMD5Ev,"axG",%progbits,_ZN8nav_msgs8Odometry6getMD5Ev,comda
 1014              		.align	1
 1015              		.weak	_ZN8nav_msgs8Odometry6getMD5Ev
 1016              		.thumb
 1017              		.thumb_func
 1019              	_ZN8nav_msgs8Odometry6getMD5Ev:
 1020              		.fnstart
 1021              	.LFB1231:
  64:./lib/ros_lib/nav_msgs/Odometry.h ****     const char * getMD5(){ return "cd5e73d190d741a2f92e81eda573aca7"; };
 1022              		.loc 14 64 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 1026              		@ link register save eliminated.
 1027              	.LVL72:
 1028              		.loc 14 64 0
 1029 0000 0048     		ldr	r0, .L93
 1030              	.LVL73:
 1031 0002 7047     		bx	lr
 1032              	.L94:
 1033              		.align	2
 1034              	.L93:
 1035 0004 C5020000 		.word	.LC26
 1036              		.cfi_endproc
 1037              	.LFE1231:
 1038              		.cantunwind
 1039              		.fnend
 1041              		.section	.text._ZN12roberto_msgs10MotorState7getTypeEv,"axG",%progbits,_ZN12roberto_msgs10MotorSta
 1042              		.align	1
 1043              		.weak	_ZN12roberto_msgs10MotorState7getTypeEv
 1044              		.thumb
 1045              		.thumb_func
 1047              	_ZN12roberto_msgs10MotorState7getTypeEv:
 1048              		.fnstart
 1049              	.LFB1244:
 1050              		.file 15 "./lib/ros_lib/roberto_msgs/MotorState.h"
   1:./lib/ros_lib/roberto_msgs/MotorState.h **** #ifndef _ROS_roberto_msgs_MotorState_h
   2:./lib/ros_lib/roberto_msgs/MotorState.h **** #define _ROS_roberto_msgs_MotorState_h
   3:./lib/ros_lib/roberto_msgs/MotorState.h **** 
   4:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdint.h>
   5:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <string.h>
   6:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdlib.h>
   7:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "ros/msg.h"
   8:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "std_msgs/Header.h"
   9:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  10:./lib/ros_lib/roberto_msgs/MotorState.h **** namespace roberto_msgs
  11:./lib/ros_lib/roberto_msgs/MotorState.h **** {
  12:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  13:./lib/ros_lib/roberto_msgs/MotorState.h ****   class MotorState : public ros::Msg
  14:./lib/ros_lib/roberto_msgs/MotorState.h ****   {
  15:./lib/ros_lib/roberto_msgs/MotorState.h ****     public:
  16:./lib/ros_lib/roberto_msgs/MotorState.h ****       std_msgs::Header header;
  17:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_angle;
  18:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_velocity;
  19:./lib/ros_lib/roberto_msgs/MotorState.h ****       float speed;
  20:./lib/ros_lib/roberto_msgs/MotorState.h ****       float acceleration;
  21:./lib/ros_lib/roberto_msgs/MotorState.h ****       uint8_t mode;
  22:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_AUTO = 0 };
  23:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_PIVOT = 1 };
  24:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SPIN = 2 };
  25:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SIDEWAYS = 3 };
  26:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  27:./lib/ros_lib/roberto_msgs/MotorState.h ****     MotorState():
  28:./lib/ros_lib/roberto_msgs/MotorState.h ****       header(),
  29:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_angle(0),
  30:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_velocity(0),
  31:./lib/ros_lib/roberto_msgs/MotorState.h ****       speed(0),
  32:./lib/ros_lib/roberto_msgs/MotorState.h ****       acceleration(0),
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****       mode(0)
  34:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  35:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  36:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int serialize(unsigned char *outbuffer) const
  38:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  39:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.serialize(outbuffer + offset);
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
  46:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  47:./lib/ros_lib/roberto_msgs/MotorState.h ****       return offset;
  48:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  49:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  52:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.deserialize(inbuffer + offset);
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
  59:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  60:./lib/ros_lib/roberto_msgs/MotorState.h ****      return offset;
  61:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  62:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  63:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getType(){ return "roberto_msgs/MotorState"; };
 1051              		.loc 15 63 0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 1055              		@ link register save eliminated.
 1056              	.LVL74:
 1057              		.loc 15 63 0
 1058 0000 0048     		ldr	r0, .L96
 1059              	.LVL75:
 1060 0002 7047     		bx	lr
 1061              	.L97:
 1062              		.align	2
 1063              	.L96:
 1064 0004 E6020000 		.word	.LC27
 1065              		.cfi_endproc
 1066              	.LFE1244:
 1067              		.cantunwind
 1068              		.fnend
 1070              		.section	.text._ZN12roberto_msgs10MotorState6getMD5Ev,"axG",%progbits,_ZN12roberto_msgs10MotorStat
 1071              		.align	1
 1072              		.weak	_ZN12roberto_msgs10MotorState6getMD5Ev
 1073              		.thumb
 1074              		.thumb_func
 1076              	_ZN12roberto_msgs10MotorState6getMD5Ev:
 1077              		.fnstart
 1078              	.LFB1245:
  64:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getMD5(){ return "e8b5d1162b85151c49e02b8224796c0e"; };
 1079              		.loc 15 64 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083              		@ link register save eliminated.
 1084              	.LVL76:
 1085              		.loc 15 64 0
 1086 0000 0048     		ldr	r0, .L99
 1087              	.LVL77:
 1088 0002 7047     		bx	lr
 1089              	.L100:
 1090              		.align	2
 1091              	.L99:
 1092 0004 FE020000 		.word	.LC28
 1093              		.cfi_endproc
 1094              	.LFE1245:
 1095              		.cantunwind
 1096              		.fnend
 1098              		.section	.text._ZN13geometry_msgs9Transform7getTypeEv,"axG",%progbits,_ZN13geometry_msgs9Transform
 1099              		.align	1
 1100              		.weak	_ZN13geometry_msgs9Transform7getTypeEv
 1101              		.thumb
 1102              		.thumb_func
 1104              	_ZN13geometry_msgs9Transform7getTypeEv:
 1105              		.fnstart
 1106              	.LFB1251:
 1107              		.file 16 "./lib/ros_lib/geometry_msgs/Transform.h"
   1:./lib/ros_lib/geometry_msgs/Transform.h **** #ifndef _ROS_geometry_msgs_Transform_h
   2:./lib/ros_lib/geometry_msgs/Transform.h **** #define _ROS_geometry_msgs_Transform_h
   3:./lib/ros_lib/geometry_msgs/Transform.h **** 
   4:./lib/ros_lib/geometry_msgs/Transform.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/Transform.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/Transform.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/Transform.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/Transform.h **** #include "geometry_msgs/Vector3.h"
   9:./lib/ros_lib/geometry_msgs/Transform.h **** #include "geometry_msgs/Quaternion.h"
  10:./lib/ros_lib/geometry_msgs/Transform.h **** 
  11:./lib/ros_lib/geometry_msgs/Transform.h **** namespace geometry_msgs
  12:./lib/ros_lib/geometry_msgs/Transform.h **** {
  13:./lib/ros_lib/geometry_msgs/Transform.h **** 
  14:./lib/ros_lib/geometry_msgs/Transform.h ****   class Transform : public ros::Msg
  15:./lib/ros_lib/geometry_msgs/Transform.h ****   {
  16:./lib/ros_lib/geometry_msgs/Transform.h ****     public:
  17:./lib/ros_lib/geometry_msgs/Transform.h ****       geometry_msgs::Vector3 translation;
  18:./lib/ros_lib/geometry_msgs/Transform.h ****       geometry_msgs::Quaternion rotation;
  19:./lib/ros_lib/geometry_msgs/Transform.h **** 
  20:./lib/ros_lib/geometry_msgs/Transform.h ****     Transform():
  21:./lib/ros_lib/geometry_msgs/Transform.h ****       translation(),
  22:./lib/ros_lib/geometry_msgs/Transform.h ****       rotation()
  23:./lib/ros_lib/geometry_msgs/Transform.h ****     {
  24:./lib/ros_lib/geometry_msgs/Transform.h ****     }
  25:./lib/ros_lib/geometry_msgs/Transform.h **** 
  26:./lib/ros_lib/geometry_msgs/Transform.h ****     virtual int serialize(unsigned char *outbuffer) const
  27:./lib/ros_lib/geometry_msgs/Transform.h ****     {
  28:./lib/ros_lib/geometry_msgs/Transform.h ****       int offset = 0;
  29:./lib/ros_lib/geometry_msgs/Transform.h ****       offset += this->translation.serialize(outbuffer + offset);
  30:./lib/ros_lib/geometry_msgs/Transform.h ****       offset += this->rotation.serialize(outbuffer + offset);
  31:./lib/ros_lib/geometry_msgs/Transform.h ****       return offset;
  32:./lib/ros_lib/geometry_msgs/Transform.h ****     }
  33:./lib/ros_lib/geometry_msgs/Transform.h **** 
  34:./lib/ros_lib/geometry_msgs/Transform.h ****     virtual int deserialize(unsigned char *inbuffer)
  35:./lib/ros_lib/geometry_msgs/Transform.h ****     {
  36:./lib/ros_lib/geometry_msgs/Transform.h ****       int offset = 0;
  37:./lib/ros_lib/geometry_msgs/Transform.h ****       offset += this->translation.deserialize(inbuffer + offset);
  38:./lib/ros_lib/geometry_msgs/Transform.h ****       offset += this->rotation.deserialize(inbuffer + offset);
  39:./lib/ros_lib/geometry_msgs/Transform.h ****      return offset;
  40:./lib/ros_lib/geometry_msgs/Transform.h ****     }
  41:./lib/ros_lib/geometry_msgs/Transform.h **** 
  42:./lib/ros_lib/geometry_msgs/Transform.h ****     const char * getType(){ return "geometry_msgs/Transform"; };
 1108              		.loc 16 42 0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 0
 1111              		@ frame_needed = 0, uses_anonymous_args = 0
 1112              		@ link register save eliminated.
 1113              	.LVL78:
 1114              		.loc 16 42 0
 1115 0000 0048     		ldr	r0, .L102
 1116              	.LVL79:
 1117 0002 7047     		bx	lr
 1118              	.L103:
 1119              		.align	2
 1120              	.L102:
 1121 0004 1F030000 		.word	.LC29
 1122              		.cfi_endproc
 1123              	.LFE1251:
 1124              		.cantunwind
 1125              		.fnend
 1127              		.section	.text._ZN13geometry_msgs9Transform6getMD5Ev,"axG",%progbits,_ZN13geometry_msgs9Transform6
 1128              		.align	1
 1129              		.weak	_ZN13geometry_msgs9Transform6getMD5Ev
 1130              		.thumb
 1131              		.thumb_func
 1133              	_ZN13geometry_msgs9Transform6getMD5Ev:
 1134              		.fnstart
 1135              	.LFB1252:
  43:./lib/ros_lib/geometry_msgs/Transform.h ****     const char * getMD5(){ return "ac9eff44abf714214112b05d54a3cf9b"; };
 1136              		.loc 16 43 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140              		@ link register save eliminated.
 1141              	.LVL80:
 1142              		.loc 16 43 0
 1143 0000 0048     		ldr	r0, .L105
 1144              	.LVL81:
 1145 0002 7047     		bx	lr
 1146              	.L106:
 1147              		.align	2
 1148              	.L105:
 1149 0004 37030000 		.word	.LC30
 1150              		.cfi_endproc
 1151              	.LFE1252:
 1152              		.cantunwind
 1153              		.fnend
 1155              		.section	.text._ZN13geometry_msgs16TransformStamped7getTypeEv,"axG",%progbits,_ZN13geometry_msgs16
 1156              		.align	1
 1157              		.weak	_ZN13geometry_msgs16TransformStamped7getTypeEv
 1158              		.thumb
 1159              		.thumb_func
 1161              	_ZN13geometry_msgs16TransformStamped7getTypeEv:
 1162              		.fnstart
 1163              	.LFB1258:
 1164              		.file 17 "./lib/ros_lib/geometry_msgs/TransformStamped.h"
   1:./lib/ros_lib/geometry_msgs/TransformStamped.h **** #ifndef _ROS_geometry_msgs_TransformStamped_h
   2:./lib/ros_lib/geometry_msgs/TransformStamped.h **** #define _ROS_geometry_msgs_TransformStamped_h
   3:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
   4:./lib/ros_lib/geometry_msgs/TransformStamped.h **** #include <stdint.h>
   5:./lib/ros_lib/geometry_msgs/TransformStamped.h **** #include <string.h>
   6:./lib/ros_lib/geometry_msgs/TransformStamped.h **** #include <stdlib.h>
   7:./lib/ros_lib/geometry_msgs/TransformStamped.h **** #include "ros/msg.h"
   8:./lib/ros_lib/geometry_msgs/TransformStamped.h **** #include "std_msgs/Header.h"
   9:./lib/ros_lib/geometry_msgs/TransformStamped.h **** #include "geometry_msgs/Transform.h"
  10:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
  11:./lib/ros_lib/geometry_msgs/TransformStamped.h **** namespace geometry_msgs
  12:./lib/ros_lib/geometry_msgs/TransformStamped.h **** {
  13:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
  14:./lib/ros_lib/geometry_msgs/TransformStamped.h ****   class TransformStamped : public ros::Msg
  15:./lib/ros_lib/geometry_msgs/TransformStamped.h ****   {
  16:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     public:
  17:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       std_msgs::Header header;
  18:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       const char* child_frame_id;
  19:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       geometry_msgs::Transform transform;
  20:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
  21:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     TransformStamped():
  22:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       header(),
  23:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       child_frame_id(""),
  24:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       transform()
  25:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
  26:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     }
  27:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
  28:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     virtual int serialize(unsigned char *outbuffer) const
  29:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
  30:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       int offset = 0;
  31:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += this->header.serialize(outbuffer + offset);
  32:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       uint32_t length_child_frame_id = strlen(this->child_frame_id);
  33:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       memcpy(outbuffer + offset, &length_child_frame_id, sizeof(uint32_t));
  34:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += 4;
  35:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       memcpy(outbuffer + offset, this->child_frame_id, length_child_frame_id);
  36:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += length_child_frame_id;
  37:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += this->transform.serialize(outbuffer + offset);
  38:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       return offset;
  39:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     }
  40:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
  41:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     virtual int deserialize(unsigned char *inbuffer)
  42:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
  43:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       int offset = 0;
  44:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += this->header.deserialize(inbuffer + offset);
  45:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       uint32_t length_child_frame_id;
  46:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       memcpy(&length_child_frame_id, (inbuffer + offset), sizeof(uint32_t));
  47:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += 4;
  48:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       for(unsigned int k= offset; k< offset+length_child_frame_id; ++k){
  49:./lib/ros_lib/geometry_msgs/TransformStamped.h ****           inbuffer[k-1]=inbuffer[k];
  50:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       }
  51:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       inbuffer[offset+length_child_frame_id-1]=0;
  52:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       this->child_frame_id = (char *)(inbuffer + offset-1);
  53:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += length_child_frame_id;
  54:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += this->transform.deserialize(inbuffer + offset);
  55:./lib/ros_lib/geometry_msgs/TransformStamped.h ****      return offset;
  56:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     }
  57:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
  58:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     const char * getType(){ return "geometry_msgs/TransformStamped"; };
 1165              		.loc 17 58 0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 0
 1168              		@ frame_needed = 0, uses_anonymous_args = 0
 1169              		@ link register save eliminated.
 1170              	.LVL82:
 1171              		.loc 17 58 0
 1172 0000 0048     		ldr	r0, .L108
 1173              	.LVL83:
 1174 0002 7047     		bx	lr
 1175              	.L109:
 1176              		.align	2
 1177              	.L108:
 1178 0004 58030000 		.word	.LC31
 1179              		.cfi_endproc
 1180              	.LFE1258:
 1181              		.cantunwind
 1182              		.fnend
 1184              		.section	.text._ZN13geometry_msgs16TransformStamped6getMD5Ev,"axG",%progbits,_ZN13geometry_msgs16T
 1185              		.align	1
 1186              		.weak	_ZN13geometry_msgs16TransformStamped6getMD5Ev
 1187              		.thumb
 1188              		.thumb_func
 1190              	_ZN13geometry_msgs16TransformStamped6getMD5Ev:
 1191              		.fnstart
 1192              	.LFB1259:
  59:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     const char * getMD5(){ return "b5764a33bfeb3588febc2682852579b0"; };
 1193              		.loc 17 59 0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 0
 1196              		@ frame_needed = 0, uses_anonymous_args = 0
 1197              		@ link register save eliminated.
 1198              	.LVL84:
 1199              		.loc 17 59 0
 1200 0000 0048     		ldr	r0, .L111
 1201              	.LVL85:
 1202 0002 7047     		bx	lr
 1203              	.L112:
 1204              		.align	2
 1205              	.L111:
 1206 0004 77030000 		.word	.LC32
 1207              		.cfi_endproc
 1208              	.LFE1259:
 1209              		.cantunwind
 1210              		.fnend
 1212              		.section	.text._ZNK2tf9tfMessage9serializeEPh,"axG",%progbits,_ZNK2tf9tfMessage9serializeEPh,comda
 1213              		.align	1
 1214              		.weak	_ZNK2tf9tfMessage9serializeEPh
 1215              		.thumb
 1216              		.thumb_func
 1218              	_ZNK2tf9tfMessage9serializeEPh:
 1219              		.fnstart
 1220              	.LFB1270:
 1221              		.file 18 "./lib/ros_lib/tf/tfMessage.h"
   1:./lib/ros_lib/tf/tfMessage.h **** #ifndef _ROS_tf_tfMessage_h
   2:./lib/ros_lib/tf/tfMessage.h **** #define _ROS_tf_tfMessage_h
   3:./lib/ros_lib/tf/tfMessage.h **** 
   4:./lib/ros_lib/tf/tfMessage.h **** #include <stdint.h>
   5:./lib/ros_lib/tf/tfMessage.h **** #include <string.h>
   6:./lib/ros_lib/tf/tfMessage.h **** #include <stdlib.h>
   7:./lib/ros_lib/tf/tfMessage.h **** #include "ros/msg.h"
   8:./lib/ros_lib/tf/tfMessage.h **** #include "geometry_msgs/TransformStamped.h"
   9:./lib/ros_lib/tf/tfMessage.h **** 
  10:./lib/ros_lib/tf/tfMessage.h **** namespace tf
  11:./lib/ros_lib/tf/tfMessage.h **** {
  12:./lib/ros_lib/tf/tfMessage.h **** 
  13:./lib/ros_lib/tf/tfMessage.h ****   class tfMessage : public ros::Msg
  14:./lib/ros_lib/tf/tfMessage.h ****   {
  15:./lib/ros_lib/tf/tfMessage.h ****     public:
  16:./lib/ros_lib/tf/tfMessage.h ****       uint8_t transforms_length;
  17:./lib/ros_lib/tf/tfMessage.h ****       geometry_msgs::TransformStamped st_transforms;
  18:./lib/ros_lib/tf/tfMessage.h ****       geometry_msgs::TransformStamped * transforms;
  19:./lib/ros_lib/tf/tfMessage.h **** 
  20:./lib/ros_lib/tf/tfMessage.h ****     tfMessage():
  21:./lib/ros_lib/tf/tfMessage.h ****       transforms_length(0), transforms(NULL)
  22:./lib/ros_lib/tf/tfMessage.h ****     {
  23:./lib/ros_lib/tf/tfMessage.h ****     }
  24:./lib/ros_lib/tf/tfMessage.h **** 
  25:./lib/ros_lib/tf/tfMessage.h ****     virtual int serialize(unsigned char *outbuffer) const
 1222              		.loc 18 25 0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 0
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
 1226              	.LVL86:
 1227 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1228              		.save {r4, r5, r6, r7, r8, lr}
 1229              	.LCFI0:
 1230              		.cfi_def_cfa_offset 24
 1231              		.cfi_offset 4, -24
 1232              		.cfi_offset 5, -20
 1233              		.cfi_offset 6, -16
 1234              		.cfi_offset 7, -12
 1235              		.cfi_offset 8, -8
 1236              		.cfi_offset 14, -4
 1237              		.loc 18 25 0
 1238 0004 0C46     		mov	r4, r1
  26:./lib/ros_lib/tf/tfMessage.h ****     {
  27:./lib/ros_lib/tf/tfMessage.h ****       int offset = 0;
  28:./lib/ros_lib/tf/tfMessage.h ****       *(outbuffer + offset++) = transforms_length;
 1239              		.loc 18 28 0
 1240 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  25:./lib/ros_lib/tf/tfMessage.h ****     {
 1241              		.loc 18 25 0
 1242 0008 0646     		mov	r6, r0
  29:./lib/ros_lib/tf/tfMessage.h ****       *(outbuffer + offset++) = 0;
 1243              		.loc 18 29 0
 1244 000a 0020     		movs	r0, #0
 1245              	.LVL87:
  28:./lib/ros_lib/tf/tfMessage.h ****       *(outbuffer + offset++) = 0;
 1246              		.loc 18 28 0
 1247 000c 0B70     		strb	r3, [r1]
 1248              	.LVL88:
 1249              		.loc 18 29 0
 1250 000e 4870     		strb	r0, [r1, #1]
 1251              	.LVL89:
  30:./lib/ros_lib/tf/tfMessage.h ****       *(outbuffer + offset++) = 0;
 1252              		.loc 18 30 0
 1253 0010 8870     		strb	r0, [r1, #2]
 1254              	.LVL90:
  31:./lib/ros_lib/tf/tfMessage.h ****       *(outbuffer + offset++) = 0;
 1255              		.loc 18 31 0
 1256 0012 C870     		strb	r0, [r1, #3]
 1257              	.LVL91:
 1258 0014 0425     		movs	r5, #4
 1259              	.LBB340:
  32:./lib/ros_lib/tf/tfMessage.h ****       for( uint8_t i = 0; i < transforms_length; i++){
  33:./lib/ros_lib/tf/tfMessage.h ****       offset += this->transforms[i].serialize(outbuffer + offset);
 1260              		.loc 18 33 0
 1261 0016 4FF04408 		mov	r8, #68
 1262              	.LVL92:
 1263              	.L115:
  32:./lib/ros_lib/tf/tfMessage.h ****       for( uint8_t i = 0; i < transforms_length; i++){
 1264              		.loc 18 32 0 discriminator 3
 1265 001a 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 1266 001c 471C     		adds	r7, r0, #1
 1267 001e C0B2     		uxtb	r0, r0
 1268 0020 8342     		cmp	r3, r0
 1269 0022 0AD9     		bls	.L114
 1270              		.loc 18 33 0 discriminator 2
 1271 0024 08FB00F0 		mul	r0, r8, r0
 1272              	.LVL93:
 1273 0028 F36C     		ldr	r3, [r6, #76]
 1274 002a 6119     		adds	r1, r4, r5
 1275 002c 1A58     		ldr	r2, [r3, r0]
 1276 002e 1844     		add	r0, r0, r3
 1277 0030 1268     		ldr	r2, [r2]
 1278 0032 9047     		blx	r2
 1279              	.LVL94:
 1280 0034 0544     		add	r5, r5, r0
 1281              	.LVL95:
  32:./lib/ros_lib/tf/tfMessage.h ****       for( uint8_t i = 0; i < transforms_length; i++){
 1282              		.loc 18 32 0 discriminator 2
 1283 0036 3846     		mov	r0, r7
 1284 0038 EFE7     		b	.L115
 1285              	.LVL96:
 1286              	.L114:
 1287              	.LBE340:
  34:./lib/ros_lib/tf/tfMessage.h ****       }
  35:./lib/ros_lib/tf/tfMessage.h ****       return offset;
  36:./lib/ros_lib/tf/tfMessage.h ****     }
 1288              		.loc 18 36 0
 1289 003a 2846     		mov	r0, r5
 1290              	.LVL97:
 1291 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1292              		.cfi_endproc
 1293              	.LFE1270:
 1294              		.fnend
 1296              		.section	.text._ZN2tf9tfMessage7getTypeEv,"axG",%progbits,_ZN2tf9tfMessage7getTypeEv,comdat
 1297              		.align	1
 1298              		.weak	_ZN2tf9tfMessage7getTypeEv
 1299              		.thumb
 1300              		.thumb_func
 1302              	_ZN2tf9tfMessage7getTypeEv:
 1303              		.fnstart
 1304              	.LFB1272:
  37:./lib/ros_lib/tf/tfMessage.h **** 
  38:./lib/ros_lib/tf/tfMessage.h ****     virtual int deserialize(unsigned char *inbuffer)
  39:./lib/ros_lib/tf/tfMessage.h ****     {
  40:./lib/ros_lib/tf/tfMessage.h ****       int offset = 0;
  41:./lib/ros_lib/tf/tfMessage.h ****       uint8_t transforms_lengthT = *(inbuffer + offset++);
  42:./lib/ros_lib/tf/tfMessage.h ****       if(transforms_lengthT > transforms_length)
  43:./lib/ros_lib/tf/tfMessage.h ****         this->transforms = (geometry_msgs::TransformStamped*)realloc(this->transforms, transforms_l
  44:./lib/ros_lib/tf/tfMessage.h ****       offset += 3;
  45:./lib/ros_lib/tf/tfMessage.h ****       transforms_length = transforms_lengthT;
  46:./lib/ros_lib/tf/tfMessage.h ****       for( uint8_t i = 0; i < transforms_length; i++){
  47:./lib/ros_lib/tf/tfMessage.h ****       offset += this->st_transforms.deserialize(inbuffer + offset);
  48:./lib/ros_lib/tf/tfMessage.h ****         memcpy( &(this->transforms[i]), &(this->st_transforms), sizeof(geometry_msgs::TransformStam
  49:./lib/ros_lib/tf/tfMessage.h ****       }
  50:./lib/ros_lib/tf/tfMessage.h ****      return offset;
  51:./lib/ros_lib/tf/tfMessage.h ****     }
  52:./lib/ros_lib/tf/tfMessage.h **** 
  53:./lib/ros_lib/tf/tfMessage.h ****     const char * getType(){ return "tf/tfMessage"; };
 1305              		.loc 18 53 0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309              		@ link register save eliminated.
 1310              	.LVL98:
 1311              		.loc 18 53 0
 1312 0000 0048     		ldr	r0, .L118
 1313              	.LVL99:
 1314 0002 7047     		bx	lr
 1315              	.L119:
 1316              		.align	2
 1317              	.L118:
 1318 0004 98030000 		.word	.LC33
 1319              		.cfi_endproc
 1320              	.LFE1272:
 1321              		.cantunwind
 1322              		.fnend
 1324              		.section	.text._ZN2tf9tfMessage6getMD5Ev,"axG",%progbits,_ZN2tf9tfMessage6getMD5Ev,comdat
 1325              		.align	1
 1326              		.weak	_ZN2tf9tfMessage6getMD5Ev
 1327              		.thumb
 1328              		.thumb_func
 1330              	_ZN2tf9tfMessage6getMD5Ev:
 1331              		.fnstart
 1332              	.LFB1273:
  54:./lib/ros_lib/tf/tfMessage.h ****     const char * getMD5(){ return "94810edda583a504dfda3829e70d7eec"; };
 1333              		.loc 18 54 0
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 0
 1336              		@ frame_needed = 0, uses_anonymous_args = 0
 1337              		@ link register save eliminated.
 1338              	.LVL100:
 1339              		.loc 18 54 0
 1340 0000 0048     		ldr	r0, .L121
 1341              	.LVL101:
 1342 0002 7047     		bx	lr
 1343              	.L122:
 1344              		.align	2
 1345              	.L121:
 1346 0004 A5030000 		.word	.LC34
 1347              		.cfi_endproc
 1348              	.LFE1273:
 1349              		.cantunwind
 1350              		.fnend
 1352              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv,"axG",%pr
 1353              		.align	1
 1354              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
 1355              		.thumb
 1356              		.thumb_func
 1358              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:
 1359              		.fnstart
 1360              	.LFB1364:
 1361              		.file 19 "./lib/ros_lib/ros/node_handle.h"
   1:./lib/ros_lib/ros/node_handle.h **** /*
   2:./lib/ros_lib/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/node_handle.h ****  *
   4:./lib/ros_lib/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/node_handle.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/node_handle.h ****  *
   7:./lib/ros_lib/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/node_handle.h ****  * are met:
  10:./lib/ros_lib/ros/node_handle.h ****  *
  11:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/node_handle.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/node_handle.h ****  *
  21:./lib/ros_lib/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/node_handle.h ****  */
  34:./lib/ros_lib/ros/node_handle.h **** 
  35:./lib/ros_lib/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:./lib/ros_lib/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:./lib/ros_lib/ros/node_handle.h **** 
  38:./lib/ros_lib/ros/node_handle.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/node_handle.h **** 
  40:./lib/ros_lib/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:./lib/ros_lib/ros/node_handle.h **** 
  45:./lib/ros_lib/ros/node_handle.h **** #define SYNC_SECONDS        5
  46:./lib/ros_lib/ros/node_handle.h **** 
  47:./lib/ros_lib/ros/node_handle.h **** #define MODE_FIRST_FF       0
  48:./lib/ros_lib/ros/node_handle.h **** /*
  49:./lib/ros_lib/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  50:./lib/ros_lib/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  51:./lib/ros_lib/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  52:./lib/ros_lib/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  53:./lib/ros_lib/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  54:./lib/ros_lib/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  55:./lib/ros_lib/ros/node_handle.h ****  */
  56:./lib/ros_lib/ros/node_handle.h **** #define MODE_PROTOCOL_VER   1
  57:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER1		0xff // through groovy
  58:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER2		0xfe // in hydro
  59:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER 		PROTOCOL_VER2
  60:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_L         2
  61:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_H         3
  62:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_CHECKSUM  4   // checksum for msg size received from size L and H
  63:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_L        5   // waiting for topic id
  64:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_H        6
  65:./lib/ros_lib/ros/node_handle.h **** #define MODE_MESSAGE        7
  66:./lib/ros_lib/ros/node_handle.h **** #define MODE_MSG_CHECKSUM   8   // checksum for msg and topic id
  67:./lib/ros_lib/ros/node_handle.h **** 
  68:./lib/ros_lib/ros/node_handle.h **** 
  69:./lib/ros_lib/ros/node_handle.h **** #define MSG_TIMEOUT 20  //20 milliseconds to recieve all of message data
  70:./lib/ros_lib/ros/node_handle.h **** 
  71:./lib/ros_lib/ros/node_handle.h **** #include "msg.h"
  72:./lib/ros_lib/ros/node_handle.h **** 
  73:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  74:./lib/ros_lib/ros/node_handle.h **** 
  75:./lib/ros_lib/ros/node_handle.h ****   class NodeHandleBase_{
  76:./lib/ros_lib/ros/node_handle.h ****     public:
  77:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg* msg)=0;
  78:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce()=0;
  79:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected()=0;
  80:./lib/ros_lib/ros/node_handle.h ****     };
  81:./lib/ros_lib/ros/node_handle.h **** }
  82:./lib/ros_lib/ros/node_handle.h **** 
  83:./lib/ros_lib/ros/node_handle.h **** #include "publisher.h"
  84:./lib/ros_lib/ros/node_handle.h **** #include "subscriber.h"
  85:./lib/ros_lib/ros/node_handle.h **** #include "service_server.h"
  86:./lib/ros_lib/ros/node_handle.h **** #include "service_client.h"
  87:./lib/ros_lib/ros/node_handle.h **** 
  88:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  89:./lib/ros_lib/ros/node_handle.h **** 
  90:./lib/ros_lib/ros/node_handle.h ****   using rosserial_msgs::TopicInfo;
  91:./lib/ros_lib/ros/node_handle.h **** 
  92:./lib/ros_lib/ros/node_handle.h ****   /* Node Handle */
  93:./lib/ros_lib/ros/node_handle.h ****   template<class Hardware,
  94:./lib/ros_lib/ros/node_handle.h ****            int MAX_SUBSCRIBERS=25,
  95:./lib/ros_lib/ros/node_handle.h ****            int MAX_PUBLISHERS=25,
  96:./lib/ros_lib/ros/node_handle.h ****            int INPUT_SIZE=512,
  97:./lib/ros_lib/ros/node_handle.h ****            int OUTPUT_SIZE=512>
  98:./lib/ros_lib/ros/node_handle.h ****   class NodeHandle_ : public NodeHandleBase_
  99:./lib/ros_lib/ros/node_handle.h ****   {
 100:./lib/ros_lib/ros/node_handle.h ****     protected:
 101:./lib/ros_lib/ros/node_handle.h ****       Hardware hardware_;
 102:./lib/ros_lib/ros/node_handle.h **** 
 103:./lib/ros_lib/ros/node_handle.h ****       /* time used for syncing */
 104:./lib/ros_lib/ros/node_handle.h ****       uint32_t rt_time;
 105:./lib/ros_lib/ros/node_handle.h **** 
 106:./lib/ros_lib/ros/node_handle.h ****       /* used for computing current time */
 107:./lib/ros_lib/ros/node_handle.h ****       uint32_t sec_offset, nsec_offset;
 108:./lib/ros_lib/ros/node_handle.h **** 
 109:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_in[INPUT_SIZE];
 110:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_out[OUTPUT_SIZE];
 111:./lib/ros_lib/ros/node_handle.h **** 
 112:./lib/ros_lib/ros/node_handle.h ****       Publisher * publishers[MAX_PUBLISHERS];
 113:./lib/ros_lib/ros/node_handle.h ****       Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 114:./lib/ros_lib/ros/node_handle.h **** 
 115:./lib/ros_lib/ros/node_handle.h ****       /*
 116:./lib/ros_lib/ros/node_handle.h ****        * Setup Functions
 117:./lib/ros_lib/ros/node_handle.h ****        */
 118:./lib/ros_lib/ros/node_handle.h ****     public:
 119:./lib/ros_lib/ros/node_handle.h ****       NodeHandle_() : configured_(false) {
 120:./lib/ros_lib/ros/node_handle.h **** 
 121:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_PUBLISHERS; i++)
 122:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 123:./lib/ros_lib/ros/node_handle.h **** 
 124:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_SUBSCRIBERS; i++)
 125:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 126:./lib/ros_lib/ros/node_handle.h **** 
 127:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< INPUT_SIZE; i++)
 128:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 129:./lib/ros_lib/ros/node_handle.h **** 
 130:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< OUTPUT_SIZE; i++)
 131:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 132:./lib/ros_lib/ros/node_handle.h **** 
 133:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 134:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 135:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats_length = 0;
 136:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats = NULL;
 137:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 138:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 139:./lib/ros_lib/ros/node_handle.h ****       }
 140:./lib/ros_lib/ros/node_handle.h **** 
 141:./lib/ros_lib/ros/node_handle.h ****       Hardware* getHardware(){
 142:./lib/ros_lib/ros/node_handle.h ****         return &hardware_;
 143:./lib/ros_lib/ros/node_handle.h ****       }
 144:./lib/ros_lib/ros/node_handle.h **** 
 145:./lib/ros_lib/ros/node_handle.h ****       /* Start serial, initialize buffers */
 146:./lib/ros_lib/ros/node_handle.h ****       void initNode(){
 147:./lib/ros_lib/ros/node_handle.h ****         hardware_.init();
 148:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 149:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 150:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 151:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 152:./lib/ros_lib/ros/node_handle.h ****       };
 153:./lib/ros_lib/ros/node_handle.h **** 
 154:./lib/ros_lib/ros/node_handle.h ****       /* Start a named port, which may be network server IP, initialize buffers */
 155:./lib/ros_lib/ros/node_handle.h ****       void initNode(char *portName){
 156:./lib/ros_lib/ros/node_handle.h ****         hardware_.init(portName);
 157:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 158:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 159:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 160:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 161:./lib/ros_lib/ros/node_handle.h ****       };
 162:./lib/ros_lib/ros/node_handle.h **** 
 163:./lib/ros_lib/ros/node_handle.h ****     protected:
 164:./lib/ros_lib/ros/node_handle.h ****       //State machine variables for spinOnce
 165:./lib/ros_lib/ros/node_handle.h ****       int mode_;
 166:./lib/ros_lib/ros/node_handle.h ****       int bytes_;
 167:./lib/ros_lib/ros/node_handle.h ****       int topic_;
 168:./lib/ros_lib/ros/node_handle.h ****       int index_;
 169:./lib/ros_lib/ros/node_handle.h ****       int checksum_;
 170:./lib/ros_lib/ros/node_handle.h **** 
 171:./lib/ros_lib/ros/node_handle.h ****       bool configured_;
 172:./lib/ros_lib/ros/node_handle.h **** 
 173:./lib/ros_lib/ros/node_handle.h ****       /* used for syncing the time */
 174:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_time;
 175:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_receive_time;
 176:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_msg_timeout_time;
 177:./lib/ros_lib/ros/node_handle.h **** 
 178:./lib/ros_lib/ros/node_handle.h ****     public:
 179:./lib/ros_lib/ros/node_handle.h ****       /* This function goes in your loop() function, it handles
 180:./lib/ros_lib/ros/node_handle.h ****        *  serial input and callbacks for subscribers.
 181:./lib/ros_lib/ros/node_handle.h ****        */
 182:./lib/ros_lib/ros/node_handle.h **** 
 183:./lib/ros_lib/ros/node_handle.h **** 
 184:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce(){
 185:./lib/ros_lib/ros/node_handle.h **** 
 186:./lib/ros_lib/ros/node_handle.h ****         /* restart if timed out */
 187:./lib/ros_lib/ros/node_handle.h ****         uint32_t c_time = hardware_.time();
 188:./lib/ros_lib/ros/node_handle.h ****         if( (c_time - last_sync_receive_time) > (SYNC_SECONDS*2200) ){
 189:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 190:./lib/ros_lib/ros/node_handle.h ****          }
 191:./lib/ros_lib/ros/node_handle.h **** 
 192:./lib/ros_lib/ros/node_handle.h ****         /* reset if message has timed out */
 193:./lib/ros_lib/ros/node_handle.h ****         if ( mode_ != MODE_FIRST_FF){
 194:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 195:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 196:./lib/ros_lib/ros/node_handle.h ****           }
 197:./lib/ros_lib/ros/node_handle.h ****         }
 198:./lib/ros_lib/ros/node_handle.h **** 
 199:./lib/ros_lib/ros/node_handle.h ****         /* while available buffer, read data */
 200:./lib/ros_lib/ros/node_handle.h ****         while( true )
 201:./lib/ros_lib/ros/node_handle.h ****         {
 202:./lib/ros_lib/ros/node_handle.h ****           int data = hardware_.read();
 203:./lib/ros_lib/ros/node_handle.h ****           if( data < 0 )
 204:./lib/ros_lib/ros/node_handle.h ****             break;
 205:./lib/ros_lib/ros/node_handle.h ****           checksum_ += data;
 206:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 207:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 208:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 209:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 210:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 211:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 212:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 213:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 214:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 215:./lib/ros_lib/ros/node_handle.h ****             }
 216:./lib/ros_lib/ros/node_handle.h ****             else if( hardware_.time() - c_time > (SYNC_SECONDS)){
 217:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 218:./lib/ros_lib/ros/node_handle.h ****               configured_=false;
 219:./lib/ros_lib/ros/node_handle.h ****               return -2;
 220:./lib/ros_lib/ros/node_handle.h ****             }
 221:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_PROTOCOL_VER ){
 222:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 223:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 224:./lib/ros_lib/ros/node_handle.h ****             }else{
 225:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_FIRST_FF;
 226:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 227:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 228:./lib/ros_lib/ros/node_handle.h ****             }
 229:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_SIZE_L ){   /* bottom half of message size */
 230:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 231:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 232:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 233:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 234:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_H ){   /* top half of message size */
 235:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 236:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 237:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 238:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 239:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 240:./lib/ros_lib/ros/node_handle.h **** 	    else
 241:./lib/ros_lib/ros/node_handle.h **** 	      mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 242:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 243:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 244:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 245:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 246:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 247:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 248:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 249:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 250:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 251:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_MSG_CHECKSUM ){ /* do checksum */
 252:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 253:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 254:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 255:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 256:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 258:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 259:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 260:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 261:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 262:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 263:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 264:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 265:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 266:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 267:./lib/ros_lib/ros/node_handle.h ****               }else{
 268:./lib/ros_lib/ros/node_handle.h ****                 if(subscribers[topic_-100])
 269:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 270:./lib/ros_lib/ros/node_handle.h ****               }
 271:./lib/ros_lib/ros/node_handle.h ****             }
 272:./lib/ros_lib/ros/node_handle.h ****           }
 273:./lib/ros_lib/ros/node_handle.h ****         }
 274:./lib/ros_lib/ros/node_handle.h **** 
 275:./lib/ros_lib/ros/node_handle.h ****         /* occasionally sync time */
 276:./lib/ros_lib/ros/node_handle.h ****         if( configured_ && ((c_time-last_sync_time) > (SYNC_SECONDS*500) )){
 277:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 278:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 279:./lib/ros_lib/ros/node_handle.h ****         }
 280:./lib/ros_lib/ros/node_handle.h **** 
 281:./lib/ros_lib/ros/node_handle.h ****         return 0;
 282:./lib/ros_lib/ros/node_handle.h ****       }
 283:./lib/ros_lib/ros/node_handle.h **** 
 284:./lib/ros_lib/ros/node_handle.h **** 
 285:./lib/ros_lib/ros/node_handle.h ****       /* Are we connected to the PC? */
 286:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected() {
 1362              		.loc 19 286 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 0
 1365              		@ frame_needed = 0, uses_anonymous_args = 0
 1366              		@ link register save eliminated.
 1367              	.LVL102:
 287:./lib/ros_lib/ros/node_handle.h ****         return configured_;
 288:./lib/ros_lib/ros/node_handle.h ****       };
 1368              		.loc 19 288 0
 1369 0000 90F8F404 		ldrb	r0, [r0, #1268]	@ zero_extendqisi2
 1370              	.LVL103:
 1371 0004 7047     		bx	lr
 1372              		.cfi_endproc
 1373              	.LFE1364:
 1374              		.cantunwind
 1375              		.fnend
 1377              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh,"axG",%progbits,_ZN3ros10Subscri
 1378              		.align	1
 1379              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 1380              		.thumb
 1381              		.thumb_func
 1383              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:
 1384              		.fnstart
 1385              	.LFB1380:
 1386              		.file 20 "./lib/ros_lib/ros/subscriber.h"
   1:./lib/ros_lib/ros/subscriber.h **** /* 
   2:./lib/ros_lib/ros/subscriber.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/subscriber.h ****  *
   4:./lib/ros_lib/ros/subscriber.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/subscriber.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/subscriber.h ****  *
   7:./lib/ros_lib/ros/subscriber.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/subscriber.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/subscriber.h ****  * are met:
  10:./lib/ros_lib/ros/subscriber.h ****  *
  11:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/subscriber.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/subscriber.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/subscriber.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/subscriber.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/subscriber.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/subscriber.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/subscriber.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/subscriber.h ****  *
  21:./lib/ros_lib/ros/subscriber.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/subscriber.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/subscriber.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/subscriber.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/subscriber.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/subscriber.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/subscriber.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/subscriber.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/subscriber.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/subscriber.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/subscriber.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/subscriber.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/subscriber.h ****  */
  34:./lib/ros_lib/ros/subscriber.h **** 
  35:./lib/ros_lib/ros/subscriber.h **** #ifndef ROS_SUBSCRIBER_H_
  36:./lib/ros_lib/ros/subscriber.h **** #define ROS_SUBSCRIBER_H_
  37:./lib/ros_lib/ros/subscriber.h **** 
  38:./lib/ros_lib/ros/subscriber.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/subscriber.h **** 
  40:./lib/ros_lib/ros/subscriber.h **** namespace ros {
  41:./lib/ros_lib/ros/subscriber.h **** 
  42:./lib/ros_lib/ros/subscriber.h ****   /* Base class for objects subscribers. */
  43:./lib/ros_lib/ros/subscriber.h ****   class Subscriber_
  44:./lib/ros_lib/ros/subscriber.h ****   {
  45:./lib/ros_lib/ros/subscriber.h ****     public:
  46:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char *data)=0;
  47:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType()=0;
  48:./lib/ros_lib/ros/subscriber.h **** 
  49:./lib/ros_lib/ros/subscriber.h ****       // id_ is set by NodeHandle when we advertise 
  50:./lib/ros_lib/ros/subscriber.h ****       int id_;
  51:./lib/ros_lib/ros/subscriber.h **** 
  52:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType()=0;
  53:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5()=0;
  54:./lib/ros_lib/ros/subscriber.h ****       const char * topic_;
  55:./lib/ros_lib/ros/subscriber.h ****   };
  56:./lib/ros_lib/ros/subscriber.h **** 
  57:./lib/ros_lib/ros/subscriber.h **** 
  58:./lib/ros_lib/ros/subscriber.h ****   /* Actual subscriber, templated on message type. */
  59:./lib/ros_lib/ros/subscriber.h ****   template<typename MsgT>
  60:./lib/ros_lib/ros/subscriber.h ****   class Subscriber: public Subscriber_{
  61:./lib/ros_lib/ros/subscriber.h ****     public:
  62:./lib/ros_lib/ros/subscriber.h ****       typedef void(*CallbackT)(const MsgT&);
  63:./lib/ros_lib/ros/subscriber.h ****       MsgT msg;
  64:./lib/ros_lib/ros/subscriber.h **** 
  65:./lib/ros_lib/ros/subscriber.h ****       Subscriber(const char * topic_name, CallbackT cb, int endpoint=rosserial_msgs::TopicInfo::ID_
  66:./lib/ros_lib/ros/subscriber.h ****         cb_(cb),
  67:./lib/ros_lib/ros/subscriber.h ****         endpoint_(endpoint)
  68:./lib/ros_lib/ros/subscriber.h ****       {
  69:./lib/ros_lib/ros/subscriber.h ****         topic_ = topic_name;
  70:./lib/ros_lib/ros/subscriber.h ****       };
  71:./lib/ros_lib/ros/subscriber.h **** 
  72:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char* data){
 1387              		.loc 20 72 0
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 0
 1390              		@ frame_needed = 0, uses_anonymous_args = 0
 1391              		@ link register save eliminated.
 1392              	.LVL104:
 1393              	.LBB341:
 1394              	.LBB342:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 1395              		.loc 5 33 0
 1396 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1397              	.LBE342:
 1398              	.LBE341:
  73:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
  74:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 1399              		.loc 20 74 0
 1400 0002 0C30     		adds	r0, r0, #12
 1401              	.LVL105:
 1402              	.LBB344:
 1403              	.LBB343:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 1404              		.loc 5 33 0
 1405 0004 0371     		strb	r3, [r0, #4]
 1406              	.LVL106:
 1407              	.LBE343:
 1408              	.LBE344:
 1409              		.loc 20 74 0
 1410 0006 8368     		ldr	r3, [r0, #8]
 1411 0008 1847     		bx	r3	@ indirect register sibling call
 1412              	.LVL107:
 1413              		.cfi_endproc
 1414              	.LFE1380:
 1415              		.cantunwind
 1416              		.fnend
 1418              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv,"axG",%progbits,_ZN3ros10
 1419              		.align	1
 1420              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 1421              		.thumb
 1422              		.thumb_func
 1424              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:
 1425              		.fnstart
 1426              	.LFB1381:
  75:./lib/ros_lib/ros/subscriber.h ****       }
  76:./lib/ros_lib/ros/subscriber.h **** 
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType(){ return this->msg.getType(); }
  78:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
  79:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1427              		.loc 20 79 0
 1428              		.cfi_startproc
 1429              		@ args = 0, pretend = 0, frame = 0
 1430              		@ frame_needed = 0, uses_anonymous_args = 0
 1431              		@ link register save eliminated.
 1432              	.LVL108:
 1433              		.loc 20 79 0
 1434 0000 8069     		ldr	r0, [r0, #24]
 1435              	.LVL109:
 1436 0002 7047     		bx	lr
 1437              		.cfi_endproc
 1438              	.LFE1381:
 1439              		.cantunwind
 1440              		.fnend
 1442              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv,"axG",%progbits,_ZN3ros10Subsc
 1443              		.align	1
 1444              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 1445              		.thumb
 1446              		.thumb_func
 1448              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:
 1449              		.fnstart
 1450              	.LFB1382:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1451              		.loc 20 77 0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 0
 1454              		@ frame_needed = 0, uses_anonymous_args = 0
 1455              		@ link register save eliminated.
 1456              	.LVL110:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1457              		.loc 20 77 0
 1458 0000 0048     		ldr	r0, .L127
 1459              	.LVL111:
 1460 0002 7047     		bx	lr
 1461              	.L128:
 1462              		.align	2
 1463              	.L127:
 1464 0004 DF000000 		.word	.LC8
 1465              		.cfi_endproc
 1466              	.LFE1382:
 1467              		.cantunwind
 1468              		.fnend
 1470              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev,"axG",%progbits,_ZN3ros10Subscri
 1471              		.align	1
 1472              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 1473              		.thumb
 1474              		.thumb_func
 1476              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:
 1477              		.fnstart
 1478              	.LFB1383:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1479              		.loc 20 78 0
 1480              		.cfi_startproc
 1481              		@ args = 0, pretend = 0, frame = 0
 1482              		@ frame_needed = 0, uses_anonymous_args = 0
 1483              		@ link register save eliminated.
 1484              	.LVL112:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1485              		.loc 20 78 0
 1486 0000 0048     		ldr	r0, .L130
 1487              	.LVL113:
 1488 0002 7047     		bx	lr
 1489              	.L131:
 1490              		.align	2
 1491              	.L130:
 1492 0004 EE000000 		.word	.LC9
 1493              		.cfi_endproc
 1494              	.LFE1383:
 1495              		.cantunwind
 1496              		.fnend
 1498              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv,"axG",%progbit
 1499              		.align	1
 1500              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 1501              		.thumb
 1502              		.thumb_func
 1504              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:
 1505              		.fnstart
 1506              	.LFB1385:
 1507              		.loc 20 79 0
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 0
 1510              		@ frame_needed = 0, uses_anonymous_args = 0
 1511              		@ link register save eliminated.
 1512              	.LVL114:
 1513              		.loc 20 79 0
 1514 0000 C06B     		ldr	r0, [r0, #60]
 1515              	.LVL115:
 1516 0002 7047     		bx	lr
 1517              		.cfi_endproc
 1518              	.LFE1385:
 1519              		.cantunwind
 1520              		.fnend
 1522              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv,"axG",%progbits,_ZN
 1523              		.align	1
 1524              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 1525              		.thumb
 1526              		.thumb_func
 1528              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:
 1529              		.fnstart
 1530              	.LFB1386:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1531              		.loc 20 77 0
 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 0
 1534              		@ frame_needed = 0, uses_anonymous_args = 0
 1535              		@ link register save eliminated.
 1536              	.LVL116:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1537              		.loc 20 77 0
 1538 0000 0048     		ldr	r0, .L134
 1539              	.LVL117:
 1540 0002 7047     		bx	lr
 1541              	.L135:
 1542              		.align	2
 1543              	.L134:
 1544 0004 E6020000 		.word	.LC27
 1545              		.cfi_endproc
 1546              	.LFE1386:
 1547              		.cantunwind
 1548              		.fnend
 1550              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev,"axG",%progbits,_ZN3r
 1551              		.align	1
 1552              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 1553              		.thumb
 1554              		.thumb_func
 1556              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:
 1557              		.fnstart
 1558              	.LFB1387:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1559              		.loc 20 78 0
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 0
 1562              		@ frame_needed = 0, uses_anonymous_args = 0
 1563              		@ link register save eliminated.
 1564              	.LVL118:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1565              		.loc 20 78 0
 1566 0000 0048     		ldr	r0, .L137
 1567              	.LVL119:
 1568 0002 7047     		bx	lr
 1569              	.L138:
 1570              		.align	2
 1571              	.L137:
 1572 0004 FE020000 		.word	.LC28
 1573              		.cfi_endproc
 1574              	.LFE1387:
 1575              		.cantunwind
 1576              		.fnend
 1578              		.text
 1579              		.align	1
 1580              		.global	_Z6led_cbRKN8std_msgs5UInt8E
 1581              		.thumb
 1582              		.thumb_func
 1584              	_Z6led_cbRKN8std_msgs5UInt8E:
 1585              		.fnstart
 1586              	.LFB1279:
 1587              		.file 21 "src/main.cpp"
   1:src/main.cpp  **** #include <stm32f10x.h>
   2:src/main.cpp  **** 
   3:src/main.cpp  **** #include <stdio.h>
   4:src/main.cpp  **** #include <math.h>
   5:src/main.cpp  **** 
   6:src/main.cpp  **** #include "motor.h"
   7:src/main.cpp  **** #include "motorSettings.h"
   8:src/main.cpp  **** #include "led.h"
   9:src/main.cpp  **** #include "encoder.h"
  10:src/main.cpp  **** #include "stm32_time.h"
  11:src/main.cpp  **** 
  12:src/main.cpp  **** 
  13:src/main.cpp  **** #include <ros.h>
  14:src/main.cpp  **** #include <std_msgs/MultiArrayDimension.h>
  15:src/main.cpp  **** #include <std_msgs/Float32MultiArray.h>
  16:src/main.cpp  **** #include <std_msgs/UInt8.h>
  17:src/main.cpp  **** #include <nav_msgs/Odometry.h>
  18:src/main.cpp  **** #include <sensor_msgs/Joy.h>
  19:src/main.cpp  **** #include <roberto_msgs/MotorState.h>
  20:src/main.cpp  **** #include <tf/tf.h>
  21:src/main.cpp  **** #include <tf/transform_broadcaster.h>
  22:src/main.cpp  **** #include <ros/time.h>
  23:src/main.cpp  **** 
  24:src/main.cpp  **** 
  25:src/main.cpp  **** 
  26:src/main.cpp  **** /* Private function prototypes -----------------------------------------------*/
  27:src/main.cpp  **** 
  28:src/main.cpp  **** 
  29:src/main.cpp  **** 
  30:src/main.cpp  **** __IO uint8_t Rx_Idx = 0x00;
  31:src/main.cpp  **** uint8_t slaveAddress;
  32:src/main.cpp  **** uint8_t RxBuffer [RXBUFFERSIZE] = {0};
  33:src/main.cpp  **** __IO uint8_t NumberOfByteToReceive = 0x00;
  34:src/main.cpp  **** __IO uint8_t GenerateStartStatus = 0x00;
  35:src/main.cpp  **** 
  36:src/main.cpp  **** motor *servo_left;
  37:src/main.cpp  **** motor *servo_right;
  38:src/main.cpp  **** motor *front_right;
  39:src/main.cpp  **** motor *front_left;
  40:src/main.cpp  **** motor *rear_right;
  41:src/main.cpp  **** motor *rear_left;
  42:src/main.cpp  **** 
  43:src/main.cpp  **** float d, L;
  44:src/main.cpp  **** 
  45:src/main.cpp  **** float motorCmd[4];
  46:src/main.cpp  **** uint8_t currentMode;
  47:src/main.cpp  **** 
  48:src/main.cpp  **** ros::NodeHandle nh;
  49:src/main.cpp  **** 
  50:src/main.cpp  **** __IO bool shuttingDown = false;
  51:src/main.cpp  **** __IO bool waitForServos = false;
  52:src/main.cpp  **** 
  53:src/main.cpp  **** void led_cb( const std_msgs::UInt8& cmd_msg){
 1588              		.loc 21 53 0
 1589              		.cfi_startproc
 1590              		@ args = 0, pretend = 0, frame = 0
 1591              		@ frame_needed = 0, uses_anonymous_args = 0
 1592              		@ link register save eliminated.
 1593              	.LVL120:
  54:src/main.cpp  ****   led_set(cmd_msg.data);
 1594              		.loc 21 54 0
 1595 0000 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 1596              	.LVL121:
 1597 0002 FFF7FEBF 		b	led_set
 1598              	.LVL122:
 1599              		.cfi_endproc
 1600              	.LFE1279:
 1601              		.cantunwind
 1602              		.fnend
 1604              		.global	__aeabi_fcmpeq
 1605              		.global	__aeabi_fmul
 1606              		.global	__aeabi_fadd
 1607              		.global	__aeabi_fdiv
 1608              		.global	__aeabi_f2d
 1609              		.global	__aeabi_d2f
 1610              		.global	__aeabi_fsub
 1611              		.global	__aeabi_fcmpgt
 1612              		.global	__aeabi_fcmplt
 1613              		.align	1
 1614              		.global	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 1615              		.thumb
 1616              		.thumb_func
 1618              	_Z8motor_cbRKN12roberto_msgs10MotorStateE:
 1619              		.fnstart
 1620              	.LFB1280:
  55:src/main.cpp  **** }
  56:src/main.cpp  **** 
  57:src/main.cpp  **** 
  58:src/main.cpp  **** 
  59:src/main.cpp  **** void motor_cb( const roberto_msgs::MotorState& cmd_msg){
 1621              		.loc 21 59 0
 1622              		.cfi_startproc
 1623              		@ args = 0, pretend = 0, frame = 0
 1624              		@ frame_needed = 0, uses_anonymous_args = 0
 1625              	.LVL123:
 1626 0006 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1627              		.save {r4, r5, r6, r7, r8, r9, r10, lr}
 1628              	.LCFI1:
 1629              		.cfi_def_cfa_offset 32
 1630              		.cfi_offset 4, -32
 1631              		.cfi_offset 5, -28
 1632              		.cfi_offset 6, -24
 1633              		.cfi_offset 7, -20
 1634              		.cfi_offset 8, -16
 1635              		.cfi_offset 9, -12
 1636              		.cfi_offset 10, -8
 1637              		.cfi_offset 14, -4
  60:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
  61:src/main.cpp  ****   if(intMode == cmd_msg.DRIVE_MODE_AUTO){
  62:src/main.cpp  **** 
  63:src/main.cpp  ****   }
  64:src/main.cpp  **** 
  65:src/main.cpp  ****   if(currentMode != intMode){
 1638              		.loc 21 65 0
 1639 000a 574C     		ldr	r4, .L161
  60:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
 1640              		.loc 21 60 0
 1641 000c 90F82880 		ldrb	r8, [r0, #40]	@ zero_extendqisi2
 1642              	.LVL124:
 1643              		.loc 21 65 0
 1644 0010 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  59:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
 1645              		.loc 21 59 0
 1646 0012 8146     		mov	r9, r0
 1647              		.loc 21 65 0
 1648 0014 4345     		cmp	r3, r8
  66:src/main.cpp  ****     waitForServos = true;
 1649              		.loc 21 66 0
 1650 0016 1CBF     		itt	ne
 1651 0018 0123     		movne	r3, #1
 1652 001a 6370     		strbne	r3, [r4, #1]
 1653              	.LBB345:
  67:src/main.cpp  ****   }
  68:src/main.cpp  **** 
  69:src/main.cpp  ****   if(intMode == cmd_msg.DRIVE_MODE_PIVOT){
 1654              		.loc 21 69 0
 1655 001c B8F1010F 		cmp	r8, #1
 1656 0020 73D1     		bne	.L142
 1657              	.LVL125:
 1658              	.LBB346:
 1659              	.LBB347:
  70:src/main.cpp  ****     float angle[2] = {0, 0};
  71:src/main.cpp  ****     float speedMult = 1;
  72:src/main.cpp  ****     if (cmd_msg.heading_angle != 0){
 1660              		.loc 21 72 0
 1661 0022 8769     		ldr	r7, [r0, #24]	@ float
 1662 0024 0021     		movs	r1, #0
 1663 0026 3846     		mov	r0, r7
 1664              	.LVL126:
 1665 0028 FFF7FEFF 		bl	__aeabi_fcmpeq
 1666              	.LVL127:
 1667 002c 0028     		cmp	r0, #0
 1668 002e 30D1     		bne	.L158
 1669              	.LBB348:
  73:src/main.cpp  ****       float R = (1+cmd_msg.heading_angle*cmd_msg.heading_angle)/(2*cmd_msg.heading_angle);
 1670              		.loc 21 73 0
 1671 0030 3946     		mov	r1, r7
 1672 0032 3846     		mov	r0, r7
 1673 0034 FFF7FEFF 		bl	__aeabi_fmul
 1674              	.LVL128:
 1675 0038 4FF07E51 		mov	r1, #1065353216
 1676 003c FFF7FEFF 		bl	__aeabi_fadd
 1677              	.LVL129:
 1678 0040 3946     		mov	r1, r7
 1679 0042 0546     		mov	r5, r0
 1680 0044 3846     		mov	r0, r7
 1681 0046 FFF7FEFF 		bl	__aeabi_fadd
 1682              	.LVL130:
 1683 004a 0146     		mov	r1, r0
 1684 004c 2846     		mov	r0, r5
 1685 004e FFF7FEFF 		bl	__aeabi_fdiv
 1686              	.LVL131:
  74:src/main.cpp  ****       //angle[0] = atan(L/(B+R));   // B=L as robot is quadratic
  75:src/main.cpp  ****       angle[0] = atan(L/(L+R));
 1687              		.loc 21 75 0
 1688 0052 6568     		ldr	r5, [r4, #4]	@ float
  73:src/main.cpp  ****       float R = (1+cmd_msg.heading_angle*cmd_msg.heading_angle)/(2*cmd_msg.heading_angle);
 1689              		.loc 21 73 0
 1690 0054 8246     		mov	r10, r0
 1691              	.LVL132:
 1692              		.loc 21 75 0
 1693 0056 2946     		mov	r1, r5
 1694 0058 FFF7FEFF 		bl	__aeabi_fadd
 1695              	.LVL133:
 1696 005c 0146     		mov	r1, r0
 1697 005e 2846     		mov	r0, r5
 1698 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1699              	.LVL134:
 1700 0064 FFF7FEFF 		bl	__aeabi_f2d
 1701              	.LVL135:
 1702 0068 FFF7FEFF 		bl	atan
 1703              	.LVL136:
 1704 006c FFF7FEFF 		bl	__aeabi_d2f
 1705              	.LVL137:
  76:src/main.cpp  ****       angle[1] = atan(L/(L-R));
 1706              		.loc 21 76 0
 1707 0070 5146     		mov	r1, r10
  75:src/main.cpp  ****       angle[1] = atan(L/(L-R));
 1708              		.loc 21 75 0
 1709 0072 0646     		mov	r6, r0
 1710              	.LVL138:
 1711              		.loc 21 76 0
 1712 0074 2846     		mov	r0, r5
 1713              	.LVL139:
 1714 0076 FFF7FEFF 		bl	__aeabi_fsub
 1715              	.LVL140:
 1716 007a 0146     		mov	r1, r0
 1717 007c 2846     		mov	r0, r5
 1718 007e FFF7FEFF 		bl	__aeabi_fdiv
 1719              	.LVL141:
 1720 0082 FFF7FEFF 		bl	__aeabi_f2d
 1721              	.LVL142:
 1722 0086 FFF7FEFF 		bl	atan
 1723              	.LVL143:
 1724 008a FFF7FEFF 		bl	__aeabi_d2f
 1725              	.LVL144:
 1726 008e 0546     		mov	r5, r0
 1727              	.LVL145:
 1728              	.LBE348:
 1729 0090 01E0     		b	.L143
 1730              	.LVL146:
 1731              	.L158:
 1732              	.LBE347:
  70:src/main.cpp  ****     float speedMult = 1;
 1733              		.loc 21 70 0
 1734 0092 0025     		movs	r5, #0
 1735 0094 2E46     		mov	r6, r5
 1736              	.LVL147:
 1737              	.L143:
  77:src/main.cpp  ****     }
  78:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed*speedMult;
 1738              		.loc 21 78 0
 1739 0096 D9F82030 		ldr	r3, [r9, #32]	@ float
  79:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult;
  80:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed*speedMult;
  81:src/main.cpp  ****     motorCmd[3] = cmd_msg.speed*speedMult;
  82:src/main.cpp  **** 
  83:src/main.cpp  ****     angle[0] = angle[0] > MAX_ANGLE_PIVOT? MAX_ANGLE_PIVOT : ( angle[0] < -MAX_ANGLE_PIVOT? -MAX_AN
 1740              		.loc 21 83 0
 1741 009a 3449     		ldr	r1, .L161+4
  78:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult;
 1742              		.loc 21 78 0
 1743 009c A360     		str	r3, [r4, #8]	@ float
  79:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult;
 1744              		.loc 21 79 0
 1745 009e E360     		str	r3, [r4, #12]	@ float
  80:src/main.cpp  ****     motorCmd[3] = cmd_msg.speed*speedMult;
 1746              		.loc 21 80 0
 1747 00a0 2361     		str	r3, [r4, #16]	@ float
  81:src/main.cpp  **** 
 1748              		.loc 21 81 0
 1749 00a2 6361     		str	r3, [r4, #20]	@ float
 1750              		.loc 21 83 0
 1751 00a4 3046     		mov	r0, r6
 1752 00a6 FFF7FEFF 		bl	__aeabi_fcmpgt
 1753              	.LVL148:
 1754 00aa 30B9     		cbnz	r0, .L152
 1755              		.loc 21 83 0 is_stmt 0 discriminator 2
 1756 00ac 3049     		ldr	r1, .L161+8
 1757 00ae 3046     		mov	r0, r6
 1758 00b0 FFF7FEFF 		bl	__aeabi_fcmplt
 1759              	.LVL149:
 1760 00b4 10B1     		cbz	r0, .L145
 1761              		.loc 21 83 0
 1762 00b6 2E4E     		ldr	r6, .L161+8
 1763              	.LVL150:
 1764 00b8 00E0     		b	.L145
 1765              	.LVL151:
 1766              	.L152:
 1767 00ba 2C4E     		ldr	r6, .L161+4
 1768              	.LVL152:
 1769              	.L145:
  84:src/main.cpp  ****     angle[1] = angle[1] > MAX_ANGLE_PIVOT? MAX_ANGLE_PIVOT : ( angle[1] < -MAX_ANGLE_PIVOT? -MAX_AN
 1770              		.loc 21 84 0 is_stmt 1 discriminator 8
 1771 00bc 2B49     		ldr	r1, .L161+4
 1772 00be 2846     		mov	r0, r5
 1773 00c0 FFF7FEFF 		bl	__aeabi_fcmpgt
 1774              	.LVL153:
 1775 00c4 30B9     		cbnz	r0, .L154
 1776              		.loc 21 84 0 is_stmt 0 discriminator 2
 1777 00c6 2A49     		ldr	r1, .L161+8
 1778 00c8 2846     		mov	r0, r5
 1779 00ca FFF7FEFF 		bl	__aeabi_fcmplt
 1780              	.LVL154:
 1781 00ce 10B1     		cbz	r0, .L146
 1782              		.loc 21 84 0
 1783 00d0 274D     		ldr	r5, .L161+8
 1784              	.LVL155:
 1785 00d2 00E0     		b	.L146
 1786              	.LVL156:
 1787              	.L154:
 1788 00d4 254D     		ldr	r5, .L161+4
 1789              	.LVL157:
 1790              	.L146:
  85:src/main.cpp  **** 
  86:src/main.cpp  ****     if(cmd_msg.heading_angle > 0){
 1791              		.loc 21 86 0 is_stmt 1 discriminator 8
 1792 00d6 0021     		movs	r1, #0
 1793 00d8 3846     		mov	r0, r7
 1794 00da FFF7FEFF 		bl	__aeabi_fcmpgt
 1795              	.LVL158:
 1796 00de 48B1     		cbz	r0, .L159
  87:src/main.cpp  ****       servo_left->setReference(angle[0]);
 1797              		.loc 21 87 0
 1798 00e0 A069     		ldr	r0, [r4, #24]
 1799 00e2 3146     		mov	r1, r6
 1800 00e4 0368     		ldr	r3, [r0]
 1801 00e6 5B69     		ldr	r3, [r3, #20]
 1802 00e8 9847     		blx	r3
 1803              	.LVL159:
  88:src/main.cpp  ****       servo_right->setReference(angle[1]);
 1804              		.loc 21 88 0
 1805 00ea E069     		ldr	r0, [r4, #28]
 1806 00ec 2946     		mov	r1, r5
 1807 00ee 0368     		ldr	r3, [r0]
 1808 00f0 5B69     		ldr	r3, [r3, #20]
 1809 00f2 08E0     		b	.L160
 1810              	.L159:
  89:src/main.cpp  **** 
  90:src/main.cpp  ****     }else{
  91:src/main.cpp  ****       servo_left->setReference(angle[1]);
 1811              		.loc 21 91 0
 1812 00f4 A069     		ldr	r0, [r4, #24]
 1813 00f6 2946     		mov	r1, r5
 1814 00f8 0368     		ldr	r3, [r0]
 1815 00fa 5B69     		ldr	r3, [r3, #20]
 1816 00fc 9847     		blx	r3
 1817              	.LVL160:
  92:src/main.cpp  ****       servo_right->setReference(angle[0]);
 1818              		.loc 21 92 0
 1819 00fe 3146     		mov	r1, r6
 1820 0100 E069     		ldr	r0, [r4, #28]
 1821 0102 0368     		ldr	r3, [r0]
 1822 0104 5B69     		ldr	r3, [r3, #20]
 1823              	.L160:
 1824 0106 9847     		blx	r3
 1825              	.LVL161:
 1826 0108 2AE0     		b	.L149
 1827              	.LVL162:
 1828              	.L142:
 1829              	.LBE346:
 1830              	.LBB349:
  93:src/main.cpp  ****     }
  94:src/main.cpp  **** 
  95:src/main.cpp  ****   }else if(intMode == cmd_msg.DRIVE_MODE_SPIN){
 1831              		.loc 21 95 0
 1832 010a B8F1020F 		cmp	r8, #2
 1833 010e 12D1     		bne	.L150
 1834              	.LVL163:
 1835              	.LBB350:
  96:src/main.cpp  ****     float h = 45;
  97:src/main.cpp  ****     servo_left->setReference(h);
 1836              		.loc 21 97 0
 1837 0110 A069     		ldr	r0, [r4, #24]
 1838              	.LVL164:
 1839 0112 1849     		ldr	r1, .L161+12
 1840 0114 0368     		ldr	r3, [r0]
 1841 0116 5B69     		ldr	r3, [r3, #20]
 1842 0118 9847     		blx	r3
 1843              	.LVL165:
  98:src/main.cpp  ****     servo_right->setReference(h);
 1844              		.loc 21 98 0
 1845 011a E069     		ldr	r0, [r4, #28]
 1846 011c 1549     		ldr	r1, .L161+12
 1847 011e 0368     		ldr	r3, [r0]
 1848 0120 5B69     		ldr	r3, [r3, #20]
 1849 0122 9847     		blx	r3
 1850              	.LVL166:
  99:src/main.cpp  **** 
 100:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed;
 1851              		.loc 21 100 0
 1852 0124 D9F82030 		ldr	r3, [r9, #32]	@ float
 101:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed;
 1853              		.loc 21 101 0
 1854 0128 03F10042 		add	r2, r3, #-2147483648
 100:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed;
 1855              		.loc 21 100 0
 1856 012c A360     		str	r3, [r4, #8]	@ float
 1857              		.loc 21 101 0
 1858 012e E260     		str	r2, [r4, #12]	@ float
 102:src/main.cpp  ****     motorCmd[2] = -cmd_msg.speed;
 1859              		.loc 21 102 0
 1860 0130 2261     		str	r2, [r4, #16]	@ float
 103:src/main.cpp  ****     motorCmd[3] = cmd_msg.speed;
 1861              		.loc 21 103 0
 1862 0132 6361     		str	r3, [r4, #20]	@ float
 1863              	.LBE350:
 1864 0134 14E0     		b	.L149
 1865              	.LVL167:
 1866              	.L150:
 1867              	.LBB351:
 104:src/main.cpp  **** 
 105:src/main.cpp  ****   }else if(intMode == cmd_msg.DRIVE_MODE_SIDEWAYS){
 1868              		.loc 21 105 0
 1869 0136 B8F1030F 		cmp	r8, #3
 1870 013a 11D1     		bne	.L149
 1871              	.LVL168:
 1872              	.LBB352:
 106:src/main.cpp  ****     float h = 90;
 107:src/main.cpp  ****     servo_left->setReference(h);
 1873              		.loc 21 107 0
 1874 013c A069     		ldr	r0, [r4, #24]
 1875              	.LVL169:
 1876 013e 0E49     		ldr	r1, .L161+16
 1877 0140 0368     		ldr	r3, [r0]
 1878 0142 5B69     		ldr	r3, [r3, #20]
 1879 0144 9847     		blx	r3
 1880              	.LVL170:
 108:src/main.cpp  ****     servo_right->setReference(h);
 1881              		.loc 21 108 0
 1882 0146 E069     		ldr	r0, [r4, #28]
 1883 0148 0B49     		ldr	r1, .L161+16
 1884 014a 0368     		ldr	r3, [r0]
 1885 014c 5B69     		ldr	r3, [r3, #20]
 1886 014e 9847     		blx	r3
 1887              	.LVL171:
 109:src/main.cpp  **** 
 110:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed;
 1888              		.loc 21 110 0
 1889 0150 D9F82030 		ldr	r3, [r9, #32]	@ float
 111:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed;
 1890              		.loc 21 111 0
 1891 0154 03F10042 		add	r2, r3, #-2147483648
 110:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed;
 1892              		.loc 21 110 0
 1893 0158 A360     		str	r3, [r4, #8]	@ float
 1894              		.loc 21 111 0
 1895 015a E260     		str	r2, [r4, #12]	@ float
 112:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed;
 1896              		.loc 21 112 0
 1897 015c 2361     		str	r3, [r4, #16]	@ float
 113:src/main.cpp  ****     motorCmd[3] = -cmd_msg.speed;
 1898              		.loc 21 113 0
 1899 015e 6261     		str	r2, [r4, #20]	@ float
 1900              	.LVL172:
 1901              	.L149:
 1902              	.LBE352:
 1903              	.LBE351:
 1904              	.LBE349:
 1905              	.LBE345:
 114:src/main.cpp  ****   }
 115:src/main.cpp  ****   currentMode = intMode;
 1906              		.loc 21 115 0
 1907 0160 84F80080 		strb	r8, [r4]
 1908 0164 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1909              	.LVL173:
 1910              	.L162:
 1911              		.align	2
 1912              	.L161:
 1913 0168 00000000 		.word	.LANCHOR1
 1914 016c 00007041 		.word	1097859072
 1915 0170 000070C1 		.word	-1049624576
 1916 0174 00003442 		.word	1110704128
 1917 0178 0000B442 		.word	1119092736
 1918              		.cfi_endproc
 1919              	.LFE1280:
 1920              		.fnend
 1922              		.section	.text._ZNK8std_msgs6Header9serializeEPh,"axG",%progbits,_ZNK8std_msgs6Header9serializeEPh
 1923              		.align	1
 1924              		.weak	_ZNK8std_msgs6Header9serializeEPh
 1925              		.thumb
 1926              		.thumb_func
 1928              	_ZNK8std_msgs6Header9serializeEPh:
 1929              		.fnstart
 1930              	.LFB1172:
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1931              		.loc 6 27 0
 1932              		.cfi_startproc
 1933              		@ args = 0, pretend = 0, frame = 8
 1934              		@ frame_needed = 0, uses_anonymous_args = 0
 1935              	.LVL174:
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1936              		.loc 6 30 0
 1937 0000 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1938              		.loc 6 27 0
 1939 0002 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1940              	.LCFI2:
 1941              		.cfi_def_cfa_offset 24
 1942              		.cfi_offset 4, -16
 1943              		.cfi_offset 5, -12
 1944              		.cfi_offset 6, -8
 1945              		.cfi_offset 14, -4
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1946              		.loc 6 30 0
 1947 0004 0B70     		strb	r3, [r1]
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1948              		.loc 6 31 0
 1949 0006 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1950              		.loc 6 27 0
 1951 0008 0546     		mov	r5, r0
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1952              		.loc 6 31 0
 1953 000a 1B0A     		lsrs	r3, r3, #8
 1954 000c 4B70     		strb	r3, [r1, #1]
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1955              		.loc 6 32 0
 1956 000e C388     		ldrh	r3, [r0, #6]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1957              		.loc 6 27 0
 1958 0010 0C46     		mov	r4, r1
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1959              		.loc 6 32 0
 1960 0012 8B70     		strb	r3, [r1, #2]
  33:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1961              		.loc 6 33 0
 1962 0014 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 1963 0016 CB70     		strb	r3, [r1, #3]
 1964              	.LVL175:
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 1965              		.loc 6 35 0
 1966 0018 8368     		ldr	r3, [r0, #8]
 1967 001a 0B71     		strb	r3, [r1, #4]
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 1968              		.loc 6 36 0
 1969 001c 8368     		ldr	r3, [r0, #8]
 1970 001e 1B0A     		lsrs	r3, r3, #8
 1971 0020 4B71     		strb	r3, [r1, #5]
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 1972              		.loc 6 37 0
 1973 0022 4389     		ldrh	r3, [r0, #10]
 1974 0024 8B71     		strb	r3, [r1, #6]
  38:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1975              		.loc 6 38 0
 1976 0026 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1977 0028 CB71     		strb	r3, [r1, #7]
 1978              	.LVL176:
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 1979              		.loc 6 40 0
 1980 002a C368     		ldr	r3, [r0, #12]
 1981 002c 0B72     		strb	r3, [r1, #8]
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 1982              		.loc 6 41 0
 1983 002e C368     		ldr	r3, [r0, #12]
 1984 0030 1B0A     		lsrs	r3, r3, #8
 1985 0032 4B72     		strb	r3, [r1, #9]
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 1986              		.loc 6 42 0
 1987 0034 C389     		ldrh	r3, [r0, #14]
 1988 0036 8B72     		strb	r3, [r1, #10]
  43:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1989              		.loc 6 43 0
 1990 0038 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 1991 003a CB72     		strb	r3, [r1, #11]
 1992              	.LVL177:
  45:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 1993              		.loc 6 45 0
 1994 003c 0069     		ldr	r0, [r0, #16]
 1995              	.LVL178:
 1996 003e FFF7FEFF 		bl	strlen
 1997              	.LVL179:
 1998 0042 0646     		mov	r6, r0
 1999 0044 02AB     		add	r3, sp, #8
 2000 0046 43F8040D 		str	r0, [r3, #-4]!
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 2001              		.loc 6 46 0
 2002 004a 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 2003              		.loc 6 48 0
 2004 004c 3246     		mov	r2, r6
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 2005              		.loc 6 46 0
 2006 004e E060     		str	r0, [r4, #12]	@ unaligned
 2007              	.LVL180:
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 2008              		.loc 6 48 0
 2009 0050 2969     		ldr	r1, [r5, #16]
 2010 0052 04F11000 		add	r0, r4, #16
 2011 0056 FFF7FEFF 		bl	memcpy
 2012              	.LVL181:
  51:./lib/ros_lib/std_msgs/Header.h **** 
 2013              		.loc 6 51 0
 2014 005a 06F11000 		add	r0, r6, #16
 2015              	.LVL182:
 2016 005e 02B0     		add	sp, sp, #8
 2017              	.LCFI3:
 2018              		.cfi_def_cfa_offset 16
 2019              		@ sp needed
 2020 0060 70BD     		pop	{r4, r5, r6, pc}
 2021              		.cfi_endproc
 2022              	.LFE1172:
 2023              		.cantunwind
 2024              		.fnend
 2026              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 2027              		.align	1
 2028              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 2029              		.thumb
 2030              		.thumb_func
 2032              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 2033              		.fnstart
 2034              	.LFB1074:
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2035              		.loc 4 74 0
 2036              		.cfi_startproc
 2037              		@ args = 0, pretend = 0, frame = 8
 2038              		@ frame_needed = 0, uses_anonymous_args = 0
 2039              	.LVL183:
 2040 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 2041              	.LCFI4:
 2042              		.cfi_def_cfa_offset 40
 2043              		.cfi_offset 4, -28
 2044              		.cfi_offset 5, -24
 2045              		.cfi_offset 6, -20
 2046              		.cfi_offset 7, -16
 2047              		.cfi_offset 8, -12
 2048              		.cfi_offset 9, -8
 2049              		.cfi_offset 14, -4
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2050              		.loc 4 77 0
 2051 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2052              		.loc 4 74 0
 2053 0006 0746     		mov	r7, r0
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2054              		.loc 4 77 0
 2055 0008 0B70     		strb	r3, [r1]
 2056              	.LVL184:
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2057              		.loc 4 78 0
 2058 000a 0023     		movs	r3, #0
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 2059              		.loc 4 80 0
 2060 000c 1A46     		mov	r2, r3
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2061              		.loc 4 74 0
 2062 000e 0C46     		mov	r4, r1
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2063              		.loc 4 78 0
 2064 0010 4B70     		strb	r3, [r1, #1]
 2065              	.LVL185:
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2066              		.loc 4 79 0
 2067 0012 8B70     		strb	r3, [r1, #2]
 2068              	.LVL186:
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 2069              		.loc 4 80 0
 2070 0014 CB70     		strb	r3, [r1, #3]
 2071              	.LVL187:
 2072 0016 0431     		adds	r1, r1, #4
 2073              	.LVL188:
 2074              	.L166:
 2075              	.LBB353:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2076              		.loc 4 81 0 discriminator 3
 2077 0018 3D79     		ldrb	r5, [r7, #4]	@ zero_extendqisi2
 2078 001a 501C     		adds	r0, r2, #1
 2079 001c D2B2     		uxtb	r2, r2
 2080 001e 9542     		cmp	r5, r2
 2081 0020 A1EB0403 		sub	r3, r1, r4
 2082              	.LVL189:
 2083 0024 01F10401 		add	r1, r1, #4
 2084 0028 0FD9     		bls	.L165
 2085              	.LBB354:
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 2086              		.loc 4 86 0 discriminator 2
 2087 002a FB68     		ldr	r3, [r7, #12]
 2088              	.LVL190:
 2089 002c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2090              	.LVL191:
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 2091              		.loc 4 88 0 discriminator 2
 2092 0030 1A0A     		lsrs	r2, r3, #8
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 2093              		.loc 4 87 0 discriminator 2
 2094 0032 01F8043C 		strb	r3, [r1, #-4]
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 2095              		.loc 4 88 0 discriminator 2
 2096 0036 01F8032C 		strb	r2, [r1, #-3]
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 2097              		.loc 4 89 0 discriminator 2
 2098 003a 1A0C     		lsrs	r2, r3, #16
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 2099              		.loc 4 90 0 discriminator 2
 2100 003c 1B0E     		lsrs	r3, r3, #24
 2101              	.LVL192:
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 2102              		.loc 4 89 0 discriminator 2
 2103 003e 01F8022C 		strb	r2, [r1, #-2]
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 2104              		.loc 4 90 0 discriminator 2
 2105 0042 01F8013C 		strb	r3, [r1, #-1]
 2106              	.LVL193:
 2107              	.LBE354:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2108              		.loc 4 81 0 discriminator 2
 2109 0046 0246     		mov	r2, r0
 2110 0048 E6E7     		b	.L166
 2111              	.LVL194:
 2112              	.L165:
 2113              	.LBE353:
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2114              		.loc 4 93 0
 2115 004a 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2116              		.loc 4 94 0
 2117 004c E118     		adds	r1, r4, r3
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2118              		.loc 4 93 0
 2119 004e E254     		strb	r2, [r4, r3]
 2120              	.LVL195:
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2121              		.loc 4 94 0
 2122 0050 0022     		movs	r2, #0
 2123 0052 0433     		adds	r3, r3, #4
 2124              	.LVL196:
 2125 0054 4A70     		strb	r2, [r1, #1]
 2126              	.LVL197:
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2127              		.loc 4 95 0
 2128 0056 8A70     		strb	r2, [r1, #2]
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 2129              		.loc 4 96 0
 2130 0058 CA70     		strb	r2, [r1, #3]
 2131              	.LVL198:
 2132 005a 2344     		add	r3, r3, r4
 2133              	.LVL199:
 2134              	.L168:
 2135              	.LBB355:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2136              		.loc 4 97 0 discriminator 3
 2137 005c 387C     		ldrb	r0, [r7, #16]	@ zero_extendqisi2
 2138 005e 511C     		adds	r1, r2, #1
 2139 0060 D2B2     		uxtb	r2, r2
 2140 0062 9042     		cmp	r0, r2
 2141 0064 A3EB0406 		sub	r6, r3, r4
 2142              	.LVL200:
 2143 0068 03F10403 		add	r3, r3, #4
 2144 006c 0FD9     		bls	.L167
 2145              	.LBB356:
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 2146              		.loc 4 102 0 discriminator 2
 2147 006e B869     		ldr	r0, [r7, #24]
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 2148              		.loc 4 103 0 discriminator 2
 2149 0070 50F82220 		ldr	r2, [r0, r2, lsl #2]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 2150              		.loc 4 104 0 discriminator 2
 2151 0074 100A     		lsrs	r0, r2, #8
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 2152              		.loc 4 103 0 discriminator 2
 2153 0076 03F8042C 		strb	r2, [r3, #-4]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 2154              		.loc 4 104 0 discriminator 2
 2155 007a 03F8030C 		strb	r0, [r3, #-3]
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 2156              		.loc 4 105 0 discriminator 2
 2157 007e 100C     		lsrs	r0, r2, #16
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 2158              		.loc 4 106 0 discriminator 2
 2159 0080 120E     		lsrs	r2, r2, #24
 2160 0082 03F8012C 		strb	r2, [r3, #-1]
 2161              	.LVL201:
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 2162              		.loc 4 105 0 discriminator 2
 2163 0086 03F8020C 		strb	r0, [r3, #-2]
 2164              	.LBE356:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2165              		.loc 4 97 0 discriminator 2
 2166 008a 0A46     		mov	r2, r1
 2167 008c E6E7     		b	.L168
 2168              	.LVL202:
 2169              	.L167:
 2170              	.LBE355:
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2171              		.loc 4 109 0
 2172 008e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2173              		.loc 4 110 0
 2174 0090 A219     		adds	r2, r4, r6
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2175              		.loc 4 109 0
 2176 0092 A355     		strb	r3, [r4, r6]
 2177              	.LVL203:
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2178              		.loc 4 110 0
 2179 0094 0023     		movs	r3, #0
 2180 0096 5370     		strb	r3, [r2, #1]
 2181              	.LVL204:
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 2182              		.loc 4 111 0
 2183 0098 9370     		strb	r3, [r2, #2]
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2184              		.loc 4 112 0
 2185 009a 0436     		adds	r6, r6, #4
 2186              	.LVL205:
 2187 009c D370     		strb	r3, [r2, #3]
 2188              	.LVL206:
 2189              	.L170:
 2190              	.LBB357:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 2191              		.loc 4 113 0 discriminator 3
 2192 009e 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 2193 00a0 DDB2     		uxtb	r5, r3
 2194 00a2 AA42     		cmp	r2, r5
 2195 00a4 03F10109 		add	r9, r3, #1
 2196 00a8 15D9     		bls	.L169
 2197              	.LBB358:
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 2198              		.loc 4 114 0 discriminator 2
 2199 00aa 7B6A     		ldr	r3, [r7, #36]
 2200              	.LVL207:
 2201 00ac 53F82500 		ldr	r0, [r3, r5, lsl #2]
 2202 00b0 FFF7FEFF 		bl	strlen
 2203              	.LVL208:
 2204 00b4 8046     		mov	r8, r0
 2205 00b6 02AB     		add	r3, sp, #8
 2206 00b8 43F8040D 		str	r0, [r3, #-4]!
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2207              		.loc 4 115 0 discriminator 2
 2208 00bc 1868     		ldr	r0, [r3]	@ unaligned
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 2209              		.loc 4 117 0 discriminator 2
 2210 00be 4246     		mov	r2, r8
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2211              		.loc 4 115 0 discriminator 2
 2212 00c0 A051     		str	r0, [r4, r6]	@ unaligned
 2213              	.LVL209:
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 2214              		.loc 4 117 0 discriminator 2
 2215 00c2 7B6A     		ldr	r3, [r7, #36]
 2216 00c4 0436     		adds	r6, r6, #4
 2217              	.LVL210:
 2218 00c6 53F82510 		ldr	r1, [r3, r5, lsl #2]
 2219 00ca A019     		adds	r0, r4, r6
 2220 00cc FFF7FEFF 		bl	memcpy
 2221              	.LVL211:
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2222              		.loc 4 118 0 discriminator 2
 2223 00d0 4644     		add	r6, r6, r8
 2224              	.LVL212:
 2225              	.LBE358:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 2226              		.loc 4 113 0 discriminator 2
 2227 00d2 4B46     		mov	r3, r9
 2228 00d4 E3E7     		b	.L170
 2229              	.LVL213:
 2230              	.L169:
 2231              	.LBE357:
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2232              		.loc 4 121 0
 2233 00d6 3046     		mov	r0, r6
 2234 00d8 03B0     		add	sp, sp, #12
 2235              	.LCFI5:
 2236              		.cfi_def_cfa_offset 28
 2237              		@ sp needed
 2238 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2239              		.cfi_endproc
 2240              	.LFE1074:
 2241              		.cantunwind
 2242              		.fnend
 2244              		.section	.text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh,"axG",%progbits,_ZNK14rosser
 2245              		.align	1
 2246              		.weak	_ZNK14rosserial_msgs19RequestParamRequest9serializeEPh
 2247              		.thumb
 2248              		.thumb_func
 2250              	_ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:
 2251              		.fnstart
 2252              	.LFB1067:
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2253              		.loc 4 23 0
 2254              		.cfi_startproc
 2255              		@ args = 0, pretend = 0, frame = 8
 2256              		@ frame_needed = 0, uses_anonymous_args = 0
 2257              	.LVL214:
 2258 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 2259              	.LCFI6:
 2260              		.cfi_def_cfa_offset 24
 2261              		.cfi_offset 4, -16
 2262              		.cfi_offset 5, -12
 2263              		.cfi_offset 6, -8
 2264              		.cfi_offset 14, -4
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2265              		.loc 4 23 0
 2266 0002 0646     		mov	r6, r0
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
 2267              		.loc 4 26 0
 2268 0004 4068     		ldr	r0, [r0, #4]
 2269              	.LVL215:
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2270              		.loc 4 23 0
 2271 0006 0C46     		mov	r4, r1
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
 2272              		.loc 4 26 0
 2273 0008 FFF7FEFF 		bl	strlen
 2274              	.LVL216:
 2275 000c 02AB     		add	r3, sp, #8
 2276 000e 43F8040D 		str	r0, [r3, #-4]!
 2277 0012 0546     		mov	r5, r0
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2278              		.loc 4 27 0
 2279 0014 1868     		ldr	r0, [r3]	@ unaligned
 2280 0016 2346     		mov	r3, r4
 2281 0018 43F8040B 		str	r0, [r3], #4	@ unaligned
 2282              	.LVL217:
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
 2283              		.loc 4 29 0
 2284 001c 2A46     		mov	r2, r5
 2285 001e 7168     		ldr	r1, [r6, #4]
 2286 0020 1846     		mov	r0, r3
 2287 0022 FFF7FEFF 		bl	memcpy
 2288              	.LVL218:
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2289              		.loc 4 32 0
 2290 0026 281D     		adds	r0, r5, #4
 2291              	.LVL219:
 2292 0028 02B0     		add	sp, sp, #8
 2293              	.LCFI7:
 2294              		.cfi_def_cfa_offset 16
 2295              		@ sp needed
 2296 002a 70BD     		pop	{r4, r5, r6, pc}
 2297              		.cfi_endproc
 2298              	.LFE1067:
 2299              		.cantunwind
 2300              		.fnend
 2302              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 2303              		.align	1
 2304              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 2305              		.thumb
 2306              		.thumb_func
 2308              	_ZNK14rosserial_msgs3Log9serializeEPh:
 2309              		.fnstart
 2310              	.LFB1060:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2311              		.loc 3 29 0
 2312              		.cfi_startproc
 2313              		@ args = 0, pretend = 0, frame = 8
 2314              		@ frame_needed = 0, uses_anonymous_args = 0
 2315              	.LVL220:
 2316 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 2317              	.LCFI8:
 2318              		.cfi_def_cfa_offset 24
 2319              		.cfi_offset 4, -16
 2320              		.cfi_offset 5, -12
 2321              		.cfi_offset 6, -8
 2322              		.cfi_offset 14, -4
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2323              		.loc 3 32 0
 2324 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2325              		.loc 3 29 0
 2326 0004 0646     		mov	r6, r0
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2327              		.loc 3 32 0
 2328 0006 0B70     		strb	r3, [r1]
 2329              	.LVL221:
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 2330              		.loc 3 34 0
 2331 0008 8068     		ldr	r0, [r0, #8]
 2332              	.LVL222:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2333              		.loc 3 29 0
 2334 000a 0D46     		mov	r5, r1
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 2335              		.loc 3 34 0
 2336 000c FFF7FEFF 		bl	strlen
 2337              	.LVL223:
 2338 0010 0446     		mov	r4, r0
 2339 0012 02AB     		add	r3, sp, #8
 2340 0014 43F8040D 		str	r0, [r3, #-4]!
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 2341              		.loc 3 35 0
 2342 0018 1868     		ldr	r0, [r3]	@ unaligned
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2343              		.loc 3 37 0
 2344 001a 2246     		mov	r2, r4
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 2345              		.loc 3 35 0
 2346 001c C5F80100 		str	r0, [r5, #1]	@ unaligned
 2347              	.LVL224:
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2348              		.loc 3 37 0
 2349 0020 B168     		ldr	r1, [r6, #8]
 2350 0022 681D     		adds	r0, r5, #5
 2351 0024 FFF7FEFF 		bl	memcpy
 2352              	.LVL225:
  40:./lib/ros_lib/rosserial_msgs/Log.h **** 
 2353              		.loc 3 40 0
 2354 0028 601D     		adds	r0, r4, #5
 2355              	.LVL226:
 2356 002a 02B0     		add	sp, sp, #8
 2357              	.LCFI9:
 2358              		.cfi_def_cfa_offset 16
 2359              		@ sp needed
 2360 002c 70BD     		pop	{r4, r5, r6, pc}
 2361              		.cfi_endproc
 2362              	.LFE1060:
 2363              		.cantunwind
 2364              		.fnend
 2366              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 2367              		.align	1
 2368              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 2369              		.thumb
 2370              		.thumb_func
 2372              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 2373              		.fnstart
 2374              	.LFB1053:
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2375              		.loc 2 38 0
 2376              		.cfi_startproc
 2377              		@ args = 0, pretend = 0, frame = 16
 2378              		@ frame_needed = 0, uses_anonymous_args = 0
 2379              	.LVL227:
 2380 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 2381              	.LCFI10:
 2382              		.cfi_def_cfa_offset 40
 2383              		.cfi_offset 4, -24
 2384              		.cfi_offset 5, -20
 2385              		.cfi_offset 6, -16
 2386              		.cfi_offset 7, -12
 2387              		.cfi_offset 8, -8
 2388              		.cfi_offset 14, -4
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 2389              		.loc 2 41 0
 2390 0004 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2391              		.loc 2 38 0
 2392 0006 0646     		mov	r6, r0
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 2393              		.loc 2 41 0
 2394 0008 0B70     		strb	r3, [r1]
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2395              		.loc 2 42 0
 2396 000a 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2397              		.loc 2 38 0
 2398 000c 0D46     		mov	r5, r1
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2399              		.loc 2 42 0
 2400 000e 1B0A     		lsrs	r3, r3, #8
 2401 0010 4B70     		strb	r3, [r1, #1]
 2402              	.LVL228:
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 2403              		.loc 2 44 0
 2404 0012 8068     		ldr	r0, [r0, #8]
 2405              	.LVL229:
 2406 0014 FFF7FEFF 		bl	strlen
 2407              	.LVL230:
 2408 0018 0446     		mov	r4, r0
 2409 001a 04AB     		add	r3, sp, #16
 2410 001c 43F80C0D 		str	r0, [r3, #-12]!
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2411              		.loc 2 45 0
 2412 0020 1868     		ldr	r0, [r3]	@ unaligned
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 2413              		.loc 2 47 0
 2414 0022 2246     		mov	r2, r4
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2415              		.loc 2 45 0
 2416 0024 C5F80200 		str	r0, [r5, #2]	@ unaligned
 2417              	.LVL231:
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 2418              		.loc 2 47 0
 2419 0028 B168     		ldr	r1, [r6, #8]
 2420 002a A81D     		adds	r0, r5, #6
 2421 002c FFF7FEFF 		bl	memcpy
 2422              	.LVL232:
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 2423              		.loc 2 49 0
 2424 0030 F068     		ldr	r0, [r6, #12]
 2425 0032 FFF7FEFF 		bl	strlen
 2426              	.LVL233:
 2427 0036 0746     		mov	r7, r0
 2428 0038 04AB     		add	r3, sp, #16
 2429 003a 43F8080D 		str	r0, [r3, #-8]!
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2430              		.loc 2 50 0
 2431 003e 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 2432              		.loc 2 48 0
 2433 0040 04F10608 		add	r8, r4, #6
 2434              	.LVL234:
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2435              		.loc 2 50 0
 2436 0044 45F80800 		str	r0, [r5, r8]	@ unaligned
 2437              	.LVL235:
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2438              		.loc 2 52 0
 2439 0048 0A34     		adds	r4, r4, #10
 2440 004a 3A46     		mov	r2, r7
 2441 004c F168     		ldr	r1, [r6, #12]
 2442 004e 2819     		adds	r0, r5, r4
 2443 0050 FFF7FEFF 		bl	memcpy
 2444              	.LVL236:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 2445              		.loc 2 54 0
 2446 0054 3069     		ldr	r0, [r6, #16]
 2447 0056 FFF7FEFF 		bl	strlen
 2448              	.LVL237:
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 2449              		.loc 2 53 0
 2450 005a 3C44     		add	r4, r4, r7
 2451              	.LVL238:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 2452              		.loc 2 54 0
 2453 005c 0746     		mov	r7, r0
 2454 005e 04AB     		add	r3, sp, #16
 2455 0060 43F8040D 		str	r0, [r3, #-4]!
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2456              		.loc 2 55 0
 2457 0064 1868     		ldr	r0, [r3]	@ unaligned
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2458              		.loc 2 57 0
 2459 0066 3A46     		mov	r2, r7
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2460              		.loc 2 55 0
 2461 0068 2851     		str	r0, [r5, r4]	@ unaligned
 2462              	.LVL239:
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2463              		.loc 2 57 0
 2464 006a 0434     		adds	r4, r4, #4
 2465              	.LVL240:
 2466 006c 2819     		adds	r0, r5, r4
 2467 006e 3169     		ldr	r1, [r6, #16]
 2468 0070 FFF7FEFF 		bl	memcpy
 2469              	.LVL241:
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 2470              		.loc 2 63 0
 2471 0074 7369     		ldr	r3, [r6, #20]
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 2472              		.loc 2 58 0
 2473 0076 3819     		adds	r0, r7, r4
 2474              	.LVL242:
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 2475              		.loc 2 64 0
 2476 0078 2B54     		strb	r3, [r5, r0]
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 2477              		.loc 2 65 0
 2478 007a 1A0A     		lsrs	r2, r3, #8
 2479 007c 0544     		add	r5, r5, r0
 2480              	.LVL243:
 2481 007e 6A70     		strb	r2, [r5, #1]
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2482              		.loc 2 70 0
 2483 0080 0430     		adds	r0, r0, #4
 2484              	.LVL244:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 2485              		.loc 2 66 0
 2486 0082 1A0C     		lsrs	r2, r3, #16
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2487              		.loc 2 67 0
 2488 0084 1B0E     		lsrs	r3, r3, #24
 2489              	.LVL245:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 2490              		.loc 2 66 0
 2491 0086 AA70     		strb	r2, [r5, #2]
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2492              		.loc 2 67 0
 2493 0088 EB70     		strb	r3, [r5, #3]
 2494              	.LVL246:
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2495              		.loc 2 70 0
 2496 008a 04B0     		add	sp, sp, #16
 2497              	.LCFI11:
 2498              		.cfi_def_cfa_offset 24
 2499              		@ sp needed
 2500 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2501              		.cfi_endproc
 2502              	.LFE1053:
 2503              		.cantunwind
 2504              		.fnend
 2506              		.section	.text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh,"axG",%progbits,_ZN14rosse
 2507              		.align	1
 2508              		.weak	_ZN14rosserial_msgs19RequestParamRequest11deserializeEPh
 2509              		.thumb
 2510              		.thumb_func
 2512              	_ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:
 2513              		.fnstart
 2514              	.LFB1068:
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2515              		.loc 4 34 0
 2516              		.cfi_startproc
 2517              		@ args = 0, pretend = 0, frame = 8
 2518              		@ frame_needed = 0, uses_anonymous_args = 0
 2519              	.LVL247:
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2520              		.loc 4 38 0
 2521 0000 0B46     		mov	r3, r1
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2522              		.loc 4 34 0
 2523 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2524              	.LCFI12:
 2525              		.cfi_def_cfa_offset 24
 2526              		.cfi_offset 4, -12
 2527              		.cfi_offset 5, -8
 2528              		.cfi_offset 14, -4
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2529              		.loc 4 34 0
 2530 0004 0446     		mov	r4, r0
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2531              		.loc 4 38 0
 2532 0006 53F8040B 		ldr	r0, [r3], #4	@ unaligned
 2533              	.LVL248:
 2534 000a 0190     		str	r0, [sp, #4]	@ unaligned
 2535              	.LVL249:
 2536              	.LBB359:
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2537              		.loc 4 40 0
 2538 000c 019A     		ldr	r2, [sp, #4]
 2539 000e 101D     		adds	r0, r2, #4
 2540              	.LVL250:
 2541              	.L176:
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2542              		.loc 4 40 0 is_stmt 0 discriminator 3
 2543 0010 5D1A     		subs	r5, r3, r1
 2544              	.LVL251:
 2545 0012 A842     		cmp	r0, r5
 2546 0014 04D9     		bls	.L175
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2547              		.loc 4 41 0 is_stmt 1 discriminator 2
 2548 0016 13F8015B 		ldrb	r5, [r3], #1	@ zero_extendqisi2
 2549              	.LVL252:
 2550 001a 03F8025C 		strb	r5, [r3, #-2]
 2551              	.LVL253:
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2552              		.loc 4 40 0 discriminator 2
 2553 001e F7E7     		b	.L176
 2554              	.LVL254:
 2555              	.L175:
 2556              	.LBE359:
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
 2557              		.loc 4 43 0
 2558 0020 0A44     		add	r2, r2, r1
 2559 0022 0023     		movs	r3, #0
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
 2560              		.loc 4 44 0
 2561 0024 0331     		adds	r1, r1, #3
 2562              	.LVL255:
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
 2563              		.loc 4 43 0
 2564 0026 D370     		strb	r3, [r2, #3]
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
 2565              		.loc 4 44 0
 2566 0028 6160     		str	r1, [r4, #4]
 2567              	.LVL256:
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2568              		.loc 4 47 0
 2569 002a 03B0     		add	sp, sp, #12
 2570              	.LCFI13:
 2571              		.cfi_def_cfa_offset 12
 2572              		@ sp needed
 2573 002c 30BD     		pop	{r4, r5, pc}
 2574              		.cfi_endproc
 2575              	.LFE1068:
 2576              		.cantunwind
 2577              		.fnend
 2579              		.section	.text._ZN8std_msgs6Header11deserializeEPh,"axG",%progbits,_ZN8std_msgs6Header11deserializ
 2580              		.align	1
 2581              		.weak	_ZN8std_msgs6Header11deserializeEPh
 2582              		.thumb
 2583              		.thumb_func
 2585              	_ZN8std_msgs6Header11deserializeEPh:
 2586              		.fnstart
 2587              	.LFB1173:
  53:./lib/ros_lib/std_msgs/Header.h ****     {
 2588              		.loc 6 53 0
 2589              		.cfi_startproc
 2590              		@ args = 0, pretend = 0, frame = 8
 2591              		@ frame_needed = 0, uses_anonymous_args = 0
 2592              	.LVL257:
 2593 0000 0346     		mov	r3, r0
 2594 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2595              	.LCFI14:
 2596              		.cfi_def_cfa_offset 24
 2597              		.cfi_offset 4, -12
 2598              		.cfi_offset 5, -8
 2599              		.cfi_offset 14, -4
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2600              		.loc 6 56 0
 2601 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2602 0006 01F11004 		add	r4, r1, #16
 2603 000a 4260     		str	r2, [r0, #4]
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2604              		.loc 6 57 0
 2605 000c 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 2606              	.LVL258:
 2607 000e 42EA0022 		orr	r2, r2, r0, lsl #8
 2608 0012 5A60     		str	r2, [r3, #4]
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2609              		.loc 6 58 0
 2610 0014 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 2611 0016 42EA0042 		orr	r2, r2, r0, lsl #16
 2612 001a 5A60     		str	r2, [r3, #4]
  59:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 2613              		.loc 6 59 0
 2614 001c C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 2615 001e 42EA0062 		orr	r2, r2, r0, lsl #24
 2616 0022 5A60     		str	r2, [r3, #4]
 2617              	.LVL259:
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2618              		.loc 6 61 0
 2619 0024 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 2620 0026 9A60     		str	r2, [r3, #8]
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2621              		.loc 6 62 0
 2622 0028 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 2623 002a 42EA0022 		orr	r2, r2, r0, lsl #8
 2624 002e 9A60     		str	r2, [r3, #8]
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2625              		.loc 6 63 0
 2626 0030 8879     		ldrb	r0, [r1, #6]	@ zero_extendqisi2
 2627 0032 42EA0042 		orr	r2, r2, r0, lsl #16
 2628 0036 9A60     		str	r2, [r3, #8]
  64:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 2629              		.loc 6 64 0
 2630 0038 C879     		ldrb	r0, [r1, #7]	@ zero_extendqisi2
 2631 003a 42EA0062 		orr	r2, r2, r0, lsl #24
 2632 003e 9A60     		str	r2, [r3, #8]
 2633              	.LVL260:
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2634              		.loc 6 66 0
 2635 0040 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 2636 0042 DA60     		str	r2, [r3, #12]
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2637              		.loc 6 67 0
 2638 0044 487A     		ldrb	r0, [r1, #9]	@ zero_extendqisi2
 2639 0046 42EA0022 		orr	r2, r2, r0, lsl #8
 2640 004a DA60     		str	r2, [r3, #12]
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2641              		.loc 6 68 0
 2642 004c 887A     		ldrb	r0, [r1, #10]	@ zero_extendqisi2
 2643 004e 42EA0042 		orr	r2, r2, r0, lsl #16
 2644 0052 DA60     		str	r2, [r3, #12]
  69:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 2645              		.loc 6 69 0
 2646 0054 C87A     		ldrb	r0, [r1, #11]	@ zero_extendqisi2
 2647 0056 42EA0062 		orr	r2, r2, r0, lsl #24
 2648 005a DA60     		str	r2, [r3, #12]
 2649              	.LVL261:
  72:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 2650              		.loc 6 72 0
 2651 005c C868     		ldr	r0, [r1, #12]	@ unaligned
 2652 005e 0190     		str	r0, [sp, #4]	@ unaligned
 2653              	.LVL262:
 2654              	.LBB360:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2655              		.loc 6 74 0
 2656 0060 019A     		ldr	r2, [sp, #4]
 2657 0062 02F11000 		add	r0, r2, #16
 2658              	.LVL263:
 2659              	.L180:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2660              		.loc 6 74 0 is_stmt 0 discriminator 3
 2661 0066 651A     		subs	r5, r4, r1
 2662              	.LVL264:
 2663 0068 A842     		cmp	r0, r5
 2664 006a 04D9     		bls	.L179
  75:./lib/ros_lib/std_msgs/Header.h ****       }
 2665              		.loc 6 75 0 is_stmt 1 discriminator 2
 2666 006c 14F8015B 		ldrb	r5, [r4], #1	@ zero_extendqisi2
 2667              	.LVL265:
 2668 0070 04F8025C 		strb	r5, [r4, #-2]
 2669              	.LVL266:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2670              		.loc 6 74 0 discriminator 2
 2671 0074 F7E7     		b	.L180
 2672              	.LVL267:
 2673              	.L179:
 2674              	.LBE360:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 2675              		.loc 6 77 0
 2676 0076 0A44     		add	r2, r2, r1
 2677 0078 0024     		movs	r4, #0
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 2678              		.loc 6 78 0
 2679 007a 0F31     		adds	r1, r1, #15
 2680              	.LVL268:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 2681              		.loc 6 77 0
 2682 007c D473     		strb	r4, [r2, #15]
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 2683              		.loc 6 78 0
 2684 007e 1961     		str	r1, [r3, #16]
 2685              	.LVL269:
  81:./lib/ros_lib/std_msgs/Header.h **** 
 2686              		.loc 6 81 0
 2687 0080 03B0     		add	sp, sp, #12
 2688              	.LCFI15:
 2689              		.cfi_def_cfa_offset 12
 2690              		@ sp needed
 2691 0082 30BD     		pop	{r4, r5, pc}
 2692              		.cfi_endproc
 2693              	.LFE1173:
 2694              		.cantunwind
 2695              		.fnend
 2697              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 2698              		.align	1
 2699              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 2700              		.thumb
 2701              		.thumb_func
 2703              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 2704              		.fnstart
 2705              	.LFB1054:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2706              		.loc 2 72 0
 2707              		.cfi_startproc
 2708              		@ args = 0, pretend = 0, frame = 16
 2709              		@ frame_needed = 0, uses_anonymous_args = 0
 2710              	.LVL270:
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2711              		.loc 2 75 0
 2712 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2713              		.loc 2 72 0
 2714 0002 30B5     		push	{r4, r5, lr}
 2715              	.LCFI16:
 2716              		.cfi_def_cfa_offset 12
 2717              		.cfi_offset 4, -12
 2718              		.cfi_offset 5, -8
 2719              		.cfi_offset 14, -4
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2720              		.loc 2 75 0
 2721 0004 8380     		strh	r3, [r0, #4]	@ movhi
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2722              		.loc 2 76 0
 2723 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2724              		.loc 2 72 0
 2725 0008 0446     		mov	r4, r0
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2726              		.loc 2 76 0
 2727 000a 43EA0223 		orr	r3, r3, r2, lsl #8
 2728 000e 8380     		strh	r3, [r0, #4]	@ movhi
 2729              	.LVL271:
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2730              		.loc 2 79 0
 2731 0010 D1F80200 		ldr	r0, [r1, #2]	@ unaligned
 2732              	.LVL272:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2733              		.loc 2 72 0
 2734 0014 85B0     		sub	sp, sp, #20
 2735              	.LCFI17:
 2736              		.cfi_def_cfa_offset 32
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2737              		.loc 2 79 0
 2738 0016 0190     		str	r0, [sp, #4]	@ unaligned
 2739              	.LVL273:
 2740              	.LBB361:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2741              		.loc 2 81 0
 2742 0018 019D     		ldr	r5, [sp, #4]
 2743 001a 8A1D     		adds	r2, r1, #6
 2744 001c AB1D     		adds	r3, r5, #6
 2745              	.LVL274:
 2746              	.L184:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2747              		.loc 2 81 0 is_stmt 0 discriminator 3
 2748 001e 501A     		subs	r0, r2, r1
 2749              	.LVL275:
 2750 0020 8342     		cmp	r3, r0
 2751 0022 04D9     		bls	.L183
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2752              		.loc 2 82 0 is_stmt 1 discriminator 2
 2753 0024 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 2754              	.LVL276:
 2755 0028 02F8020C 		strb	r0, [r2, #-2]
 2756              	.LVL277:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2757              		.loc 2 81 0 discriminator 2
 2758 002c F7E7     		b	.L184
 2759              	.LVL278:
 2760              	.L183:
 2761              	.LBE361:
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 2762              		.loc 2 84 0
 2763 002e 4A19     		adds	r2, r1, r5
 2764 0030 0020     		movs	r0, #0
 2765              	.LVL279:
 2766 0032 5071     		strb	r0, [r2, #5]
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 2767              		.loc 2 85 0
 2768 0034 4A1D     		adds	r2, r1, #5
 2769 0036 A260     		str	r2, [r4, #8]
 2770              	.LVL280:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2771              		.loc 2 88 0
 2772 0038 C858     		ldr	r0, [r1, r3]	@ unaligned
 2773              	.LBB362:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2774              		.loc 2 90 0
 2775 003a 1A1D     		adds	r2, r3, #4
 2776              	.LBE362:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2777              		.loc 2 88 0
 2778 003c 0290     		str	r0, [sp, #8]	@ unaligned
 2779              	.LVL281:
 2780              	.LBB363:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2781              		.loc 2 90 0
 2782 003e 029B     		ldr	r3, [sp, #8]
 2783 0040 05F10A00 		add	r0, r5, #10
 2784 0044 1344     		add	r3, r3, r2
 2785 0046 0844     		add	r0, r0, r1
 2786              	.LVL282:
 2787              	.L186:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2788              		.loc 2 90 0 is_stmt 0 discriminator 3
 2789 0048 451A     		subs	r5, r0, r1
 2790              	.LVL283:
 2791 004a AB42     		cmp	r3, r5
 2792 004c 04D9     		bls	.L185
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2793              		.loc 2 91 0 is_stmt 1 discriminator 2
 2794 004e 10F8015B 		ldrb	r5, [r0], #1	@ zero_extendqisi2
 2795              	.LVL284:
 2796 0052 00F8025C 		strb	r5, [r0, #-2]
 2797              	.LVL285:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2798              		.loc 2 90 0 discriminator 2
 2799 0056 F7E7     		b	.L186
 2800              	.LVL286:
 2801              	.L185:
 2802              	.LBE363:
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2803              		.loc 2 94 0
 2804 0058 013A     		subs	r2, r2, #1
 2805              	.LVL287:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 2806              		.loc 2 93 0
 2807 005a C818     		adds	r0, r1, r3
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2808              		.loc 2 94 0
 2809 005c 0A44     		add	r2, r2, r1
 2810              	.LVL288:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 2811              		.loc 2 93 0
 2812 005e 0025     		movs	r5, #0
 2813              	.LVL289:
 2814 0060 00F8015C 		strb	r5, [r0, #-1]
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2815              		.loc 2 94 0
 2816 0064 E260     		str	r2, [r4, #12]
 2817              	.LVL290:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2818              		.loc 2 97 0
 2819 0066 0068     		ldr	r0, [r0]	@ unaligned
 2820              	.LBB364:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2821              		.loc 2 99 0
 2822 0068 0433     		adds	r3, r3, #4
 2823              	.LVL291:
 2824              	.LBE364:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2825              		.loc 2 97 0
 2826 006a 0390     		str	r0, [sp, #12]	@ unaligned
 2827              	.LVL292:
 2828              	.LBB365:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2829              		.loc 2 99 0
 2830 006c 0398     		ldr	r0, [sp, #12]
 2831 006e CA18     		adds	r2, r1, r3
 2832 0070 1844     		add	r0, r0, r3
 2833              	.LVL293:
 2834              	.L188:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2835              		.loc 2 99 0 is_stmt 0 discriminator 3
 2836 0072 551A     		subs	r5, r2, r1
 2837              	.LVL294:
 2838 0074 A842     		cmp	r0, r5
 2839 0076 04D9     		bls	.L187
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2840              		.loc 2 100 0 is_stmt 1 discriminator 2
 2841 0078 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 2842              	.LVL295:
 2843 007c 02F8025C 		strb	r5, [r2, #-2]
 2844              	.LVL296:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2845              		.loc 2 99 0 discriminator 2
 2846 0080 F7E7     		b	.L188
 2847              	.LVL297:
 2848              	.L187:
 2849              	.LBE365:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2850              		.loc 2 103 0
 2851 0082 013B     		subs	r3, r3, #1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 2852              		.loc 2 102 0
 2853 0084 0D18     		adds	r5, r1, r0
 2854              	.LVL298:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2855              		.loc 2 103 0
 2856 0086 0B44     		add	r3, r3, r1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 2857              		.loc 2 102 0
 2858 0088 0022     		movs	r2, #0
 2859              	.LVL299:
 2860 008a 05F8012C 		strb	r2, [r5, #-1]
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2861              		.loc 2 103 0
 2862 008e 2361     		str	r3, [r4, #16]
 2863              	.LVL300:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2864              		.loc 2 114 0
 2865 0090 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 2866 0092 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 2867 0094 1B04     		lsls	r3, r3, #16
 2868 0096 43EA0223 		orr	r3, r3, r2, lsl #8
 2869 009a 0A5C     		ldrb	r2, [r1, r0]	@ zero_extendqisi2
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2870              		.loc 2 117 0
 2871 009c 0430     		adds	r0, r0, #4
 2872              	.LVL301:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2873              		.loc 2 114 0
 2874 009e 1343     		orrs	r3, r3, r2
 2875 00a0 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 2876 00a2 43EA0263 		orr	r3, r3, r2, lsl #24
 2877 00a6 6361     		str	r3, [r4, #20]
 2878              	.LVL302:
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2879              		.loc 2 117 0
 2880 00a8 05B0     		add	sp, sp, #20
 2881              	.LCFI18:
 2882              		.cfi_def_cfa_offset 12
 2883              		@ sp needed
 2884 00aa 30BD     		pop	{r4, r5, pc}
 2885              		.cfi_endproc
 2886              	.LFE1054:
 2887              		.cantunwind
 2888              		.fnend
 2890              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
 2891              		.align	1
 2892              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 2893              		.thumb
 2894              		.thumb_func
 2896              	_ZN14rosserial_msgs3Log11deserializeEPh:
 2897              		.fnstart
 2898              	.LFB1061:
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2899              		.loc 3 42 0
 2900              		.cfi_startproc
 2901              		@ args = 0, pretend = 0, frame = 8
 2902              		@ frame_needed = 0, uses_anonymous_args = 0
 2903              	.LVL303:
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2904              		.loc 3 45 0
 2905 0000 0B46     		mov	r3, r1
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2906              		.loc 3 42 0
 2907 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2908              	.LCFI19:
 2909              		.cfi_def_cfa_offset 24
 2910              		.cfi_offset 4, -12
 2911              		.cfi_offset 5, -8
 2912              		.cfi_offset 14, -4
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2913              		.loc 3 45 0
 2914 0004 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2915              		.loc 3 42 0
 2916 0008 0446     		mov	r4, r0
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2917              		.loc 3 45 0
 2918 000a 0271     		strb	r2, [r0, #4]
 2919              	.LVL304:
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 2920              		.loc 3 48 0
 2921 000c 1868     		ldr	r0, [r3]	@ unaligned
 2922              	.LVL305:
 2923 000e 4A1D     		adds	r2, r1, #5
 2924 0010 0190     		str	r0, [sp, #4]	@ unaligned
 2925              	.LVL306:
 2926              	.LBB366:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2927              		.loc 3 50 0
 2928 0012 019B     		ldr	r3, [sp, #4]
 2929 0014 581D     		adds	r0, r3, #5
 2930              	.LVL307:
 2931              	.L194:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2932              		.loc 3 50 0 is_stmt 0 discriminator 3
 2933 0016 551A     		subs	r5, r2, r1
 2934              	.LVL308:
 2935 0018 A842     		cmp	r0, r5
 2936 001a 04D9     		bls	.L193
  51:./lib/ros_lib/rosserial_msgs/Log.h ****       }
 2937              		.loc 3 51 0 is_stmt 1 discriminator 2
 2938 001c 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 2939              	.LVL309:
 2940 0020 02F8025C 		strb	r5, [r2, #-2]
 2941              	.LVL310:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2942              		.loc 3 50 0 discriminator 2
 2943 0024 F7E7     		b	.L194
 2944              	.LVL311:
 2945              	.L193:
 2946              	.LBE366:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 2947              		.loc 3 53 0
 2948 0026 0B44     		add	r3, r3, r1
 2949 0028 0022     		movs	r2, #0
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2950              		.loc 3 54 0
 2951 002a 0431     		adds	r1, r1, #4
 2952              	.LVL312:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 2953              		.loc 3 53 0
 2954 002c 1A71     		strb	r2, [r3, #4]
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2955              		.loc 3 54 0
 2956 002e A160     		str	r1, [r4, #8]
 2957              	.LVL313:
  57:./lib/ros_lib/rosserial_msgs/Log.h **** 
 2958              		.loc 3 57 0
 2959 0030 03B0     		add	sp, sp, #12
 2960              	.LCFI20:
 2961              		.cfi_def_cfa_offset 12
 2962              		@ sp needed
 2963 0032 30BD     		pop	{r4, r5, pc}
 2964              		.cfi_endproc
 2965              	.LFE1061:
 2966              		.cantunwind
 2967              		.fnend
 2969              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 2970              		.align	1
 2971              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 2972              		.thumb
 2973              		.thumb_func
 2975              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 2976              		.fnstart
 2977              	.LFB1075:
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2978              		.loc 4 123 0
 2979              		.cfi_startproc
 2980              		@ args = 0, pretend = 0, frame = 8
 2981              		@ frame_needed = 0, uses_anonymous_args = 0
 2982              	.LVL314:
 2983 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2984              	.LCFI21:
 2985              		.cfi_def_cfa_offset 32
 2986              		.cfi_offset 4, -20
 2987              		.cfi_offset 5, -16
 2988              		.cfi_offset 6, -12
 2989              		.cfi_offset 7, -8
 2990              		.cfi_offset 14, -4
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 2991              		.loc 4 126 0
 2992 0002 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 2993              	.LVL315:
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2994              		.loc 4 127 0
 2995 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2996              		.loc 4 123 0
 2997 0006 0446     		mov	r4, r0
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2998              		.loc 4 127 0
 2999 0008 AB42     		cmp	r3, r5
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 3000              		.loc 4 123 0
 3001 000a 0E46     		mov	r6, r1
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 3002              		.loc 4 127 0
 3003 000c 04D2     		bcs	.L197
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 3004              		.loc 4 128 0
 3005 000e A900     		lsls	r1, r5, #2
 3006              	.LVL316:
 3007 0010 C068     		ldr	r0, [r0, #12]
 3008              	.LVL317:
 3009 0012 FFF7FEFF 		bl	realloc
 3010              	.LVL318:
 3011 0016 E060     		str	r0, [r4, #12]
 3012              	.L197:
 3013              	.LVL319:
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 3014              		.loc 4 130 0
 3015 0018 2571     		strb	r5, [r4, #4]
 3016              	.LVL320:
 3017 001a 321D     		adds	r2, r6, #4
 3018 001c 0021     		movs	r1, #0
 3019              	.LVL321:
 3020              	.L199:
 3021              	.LBB367:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 3022              		.loc 4 131 0 discriminator 3
 3023 001e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3024 0020 4F1C     		adds	r7, r1, #1
 3025 0022 C9B2     		uxtb	r1, r1
 3026 0024 8B42     		cmp	r3, r1
 3027 0026 A2EB0605 		sub	r5, r2, r6
 3028              	.LVL322:
 3029 002a 02F10402 		add	r2, r2, #4
 3030 002e 14D9     		bls	.L198
 3031              	.LVL323:
 3032              	.LBB368:
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 3033              		.loc 4 141 0 discriminator 2
 3034 0030 12F8023C 		ldrb	r3, [r2, #-2]	@ zero_extendqisi2
 3035              	.LVL324:
 3036 0034 12F8030C 		ldrb	r0, [r2, #-3]	@ zero_extendqisi2
 3037              	.LVL325:
 3038 0038 1B04     		lsls	r3, r3, #16
 3039              	.LVL326:
 3040 003a 43EA0023 		orr	r3, r3, r0, lsl #8
 3041 003e 12F8040C 		ldrb	r0, [r2, #-4]	@ zero_extendqisi2
 3042              	.LVL327:
 3043 0042 0343     		orrs	r3, r3, r0
 3044 0044 12F8010C 		ldrb	r0, [r2, #-1]	@ zero_extendqisi2
 3045 0048 43EA0063 		orr	r3, r3, r0, lsl #24
 3046 004c A360     		str	r3, [r4, #8]
 3047              	.LVL328:
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 3048              		.loc 4 143 0 discriminator 2
 3049 004e A068     		ldr	r0, [r4, #8]	@ unaligned
 3050 0050 E368     		ldr	r3, [r4, #12]
 3051 0052 43F82100 		str	r0, [r3, r1, lsl #2]	@ unaligned
 3052              	.LVL329:
 3053              	.LBE368:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 3054              		.loc 4 131 0 discriminator 2
 3055 0056 3946     		mov	r1, r7
 3056 0058 E1E7     		b	.L199
 3057              	.LVL330:
 3058              	.L198:
 3059              	.LBE367:
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 3060              		.loc 4 145 0
 3061 005a 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 3062              	.LVL331:
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 3063              		.loc 4 146 0
 3064 005c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 3065 005e BB42     		cmp	r3, r7
 3066 0060 04D2     		bcs	.L200
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 3067              		.loc 4 147 0
 3068 0062 B900     		lsls	r1, r7, #2
 3069 0064 A069     		ldr	r0, [r4, #24]
 3070 0066 FFF7FEFF 		bl	realloc
 3071              	.LVL332:
 3072 006a A061     		str	r0, [r4, #24]
 3073              	.L200:
 3074              	.LVL333:
 3075 006c 2B1D     		adds	r3, r5, #4
 3076              	.LVL334:
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 3077              		.loc 4 149 0
 3078 006e 2774     		strb	r7, [r4, #16]
 3079              	.LVL335:
 3080 0070 3344     		add	r3, r3, r6
 3081              	.LVL336:
 3082 0072 0022     		movs	r2, #0
 3083              	.LVL337:
 3084              	.L202:
 3085              	.LBB369:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 3086              		.loc 4 150 0 discriminator 3
 3087 0074 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 3088 0076 571C     		adds	r7, r2, #1
 3089 0078 D2B2     		uxtb	r2, r2
 3090 007a 9142     		cmp	r1, r2
 3091 007c A3EB0605 		sub	r5, r3, r6
 3092              	.LVL338:
 3093 0080 03F10403 		add	r3, r3, #4
 3094 0084 14D9     		bls	.L201
 3095              	.LVL339:
 3096              	.LBB370:
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 3097              		.loc 4 159 0 discriminator 2
 3098 0086 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 3099 008a 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 3100 008e 0904     		lsls	r1, r1, #16
 3101              	.LVL340:
 3102 0090 41EA0021 		orr	r1, r1, r0, lsl #8
 3103              	.LVL341:
 3104 0094 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 3105 0098 0143     		orrs	r1, r1, r0
 3106 009a 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 3107              	.LVL342:
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 3108              		.loc 4 160 0 discriminator 2
 3109 009e 41EA0061 		orr	r1, r1, r0, lsl #24
 3110 00a2 6161     		str	r1, [r4, #20]	@ float
 3111              	.LVL343:
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 3112              		.loc 4 162 0 discriminator 2
 3113 00a4 6069     		ldr	r0, [r4, #20]	@ unaligned
 3114 00a6 A169     		ldr	r1, [r4, #24]
 3115 00a8 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 3116              	.LVL344:
 3117              	.LBE370:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 3118              		.loc 4 150 0 discriminator 2
 3119 00ac 3A46     		mov	r2, r7
 3120 00ae E1E7     		b	.L202
 3121              	.LVL345:
 3122              	.L201:
 3123              	.LBE369:
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 3124              		.loc 4 164 0
 3125 00b0 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 3126              	.LVL346:
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 3127              		.loc 4 165 0
 3128 00b2 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 3129 00b4 BB42     		cmp	r3, r7
 3130 00b6 04D2     		bcs	.L203
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 3131              		.loc 4 166 0
 3132 00b8 B900     		lsls	r1, r7, #2
 3133 00ba 606A     		ldr	r0, [r4, #36]
 3134 00bc FFF7FEFF 		bl	realloc
 3135              	.LVL347:
 3136 00c0 6062     		str	r0, [r4, #36]
 3137              	.L203:
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 3138              		.loc 4 167 0
 3139 00c2 2B1D     		adds	r3, r5, #4
 3140              	.LVL348:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 3141              		.loc 4 168 0
 3142 00c4 0025     		movs	r5, #0
 3143              	.LBB371:
 3144              	.LBB372:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 3145              		.loc 4 176 0
 3146 00c6 AE46     		mov	lr, r5
 3147              	.LBE372:
 3148              	.LBE371:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 3149              		.loc 4 168 0
 3150 00c8 2777     		strb	r7, [r4, #28]
 3151              	.LVL349:
 3152              	.L207:
 3153              	.LBB376:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 3154              		.loc 4 169 0 discriminator 1
 3155 00ca 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 3156 00cc EFB2     		uxtb	r7, r5
 3157 00ce BA42     		cmp	r2, r7
 3158 00d0 19D9     		bls	.L204
 3159              	.LBB375:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 3160              		.loc 4 171 0
 3161 00d2 F058     		ldr	r0, [r6, r3]	@ unaligned
 3162              	.LBB373:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3163              		.loc 4 173 0
 3164 00d4 1A1D     		adds	r2, r3, #4
 3165              	.LBE373:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 3166              		.loc 4 171 0
 3167 00d6 0190     		str	r0, [sp, #4]	@ unaligned
 3168              	.LVL350:
 3169              	.LBB374:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3170              		.loc 4 173 0
 3171 00d8 019B     		ldr	r3, [sp, #4]
 3172 00da B118     		adds	r1, r6, r2
 3173 00dc 1344     		add	r3, r3, r2
 3174              	.LVL351:
 3175              	.L206:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3176              		.loc 4 173 0 is_stmt 0 discriminator 3
 3177 00de 881B     		subs	r0, r1, r6
 3178              	.LVL352:
 3179 00e0 8342     		cmp	r3, r0
 3180 00e2 04D9     		bls	.L205
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 3181              		.loc 4 174 0 is_stmt 1 discriminator 2
 3182 00e4 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 3183              	.LVL353:
 3184 00e8 01F8020C 		strb	r0, [r1, #-2]
 3185              	.LVL354:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3186              		.loc 4 173 0 discriminator 2
 3187 00ec F7E7     		b	.L206
 3188              	.LVL355:
 3189              	.L205:
 3190              	.LBE374:
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 3191              		.loc 4 177 0 discriminator 2
 3192 00ee 013A     		subs	r2, r2, #1
 3193              	.LVL356:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 3194              		.loc 4 176 0 discriminator 2
 3195 00f0 F118     		adds	r1, r6, r3
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 3196              		.loc 4 177 0 discriminator 2
 3197 00f2 3244     		add	r2, r2, r6
 3198              	.LVL357:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 3199              		.loc 4 176 0 discriminator 2
 3200 00f4 01F801EC 		strb	lr, [r1, #-1]
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 3201              		.loc 4 177 0 discriminator 2
 3202 00f8 2262     		str	r2, [r4, #32]
 3203              	.LVL358:
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 3204              		.loc 4 179 0 discriminator 2
 3205 00fa 216A     		ldr	r1, [r4, #32]	@ unaligned
 3206 00fc 626A     		ldr	r2, [r4, #36]
 3207 00fe 0135     		adds	r5, r5, #1
 3208              	.LVL359:
 3209 0100 42F82710 		str	r1, [r2, r7, lsl #2]	@ unaligned
 3210              	.LVL360:
 3211              	.LBE375:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 3212              		.loc 4 169 0 discriminator 2
 3213 0104 E1E7     		b	.L207
 3214              	.LVL361:
 3215              	.L204:
 3216              	.LBE376:
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 3217              		.loc 4 182 0
 3218 0106 1846     		mov	r0, r3
 3219 0108 03B0     		add	sp, sp, #12
 3220              	.LCFI22:
 3221              		.cfi_def_cfa_offset 20
 3222              		@ sp needed
 3223 010a F0BD     		pop	{r4, r5, r6, r7, pc}
 3224              		.cfi_endproc
 3225              	.LFE1075:
 3226              		.cantunwind
 3227              		.fnend
 3229              		.section	.text._ZN3ros3Msg19serializeAvrFloat64EPhf,"axG",%progbits,_ZN3ros3Msg19serializeAvrFloat
 3230              		.align	1
 3231              		.weak	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3232              		.thumb
 3233              		.thumb_func
 3235              	_ZN3ros3Msg19serializeAvrFloat64EPhf:
 3236              		.fnstart
 3237              	.LFB1021:
 3238              		.file 22 "./lib/ros_lib/ros/msg.h"
   1:./lib/ros_lib/ros/msg.h **** /* 
   2:./lib/ros_lib/ros/msg.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/msg.h ****  *
   4:./lib/ros_lib/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/msg.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/msg.h ****  *
   7:./lib/ros_lib/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/msg.h ****  * are met:
  10:./lib/ros_lib/ros/msg.h ****  *
  11:./lib/ros_lib/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/msg.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/msg.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/msg.h ****  *
  21:./lib/ros_lib/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/msg.h ****  */
  34:./lib/ros_lib/ros/msg.h **** 
  35:./lib/ros_lib/ros/msg.h **** #ifndef _ROS_MSG_H_
  36:./lib/ros_lib/ros/msg.h **** #define _ROS_MSG_H_
  37:./lib/ros_lib/ros/msg.h **** 
  38:./lib/ros_lib/ros/msg.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/msg.h **** 
  40:./lib/ros_lib/ros/msg.h **** namespace ros {
  41:./lib/ros_lib/ros/msg.h **** 
  42:./lib/ros_lib/ros/msg.h **** /* Base Message Type */
  43:./lib/ros_lib/ros/msg.h **** class Msg
  44:./lib/ros_lib/ros/msg.h **** {
  45:./lib/ros_lib/ros/msg.h **** public:
  46:./lib/ros_lib/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  47:./lib/ros_lib/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  48:./lib/ros_lib/ros/msg.h ****   virtual const char * getType() = 0;
  49:./lib/ros_lib/ros/msg.h ****   virtual const char * getMD5() = 0;
  50:./lib/ros_lib/ros/msg.h **** 
  51:./lib/ros_lib/ros/msg.h ****   /**
  52:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  53:./lib/ros_lib/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  54:./lib/ros_lib/ros/msg.h ****    *        fields, despite AVV having no native support for double.
  55:./lib/ros_lib/ros/msg.h ****    *
  56:./lib/ros_lib/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  57:./lib/ros_lib/ros/msg.h ****    * @param[in] f value to serialize.
  58:./lib/ros_lib/ros/msg.h ****    *
  59:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  60:./lib/ros_lib/ros/msg.h ****    *
  61:./lib/ros_lib/ros/msg.h ****    */
  62:./lib/ros_lib/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
 3239              		.loc 22 62 0
 3240              		.cfi_startproc
 3241              		@ args = 0, pretend = 0, frame = 0
 3242              		@ frame_needed = 0, uses_anonymous_args = 0
 3243              	.LVL362:
 3244 0000 38B5     		push	{r3, r4, r5, lr}
 3245              	.LCFI23:
 3246              		.cfi_def_cfa_offset 16
 3247              		.cfi_offset 3, -16
 3248              		.cfi_offset 4, -12
 3249              		.cfi_offset 5, -8
 3250              		.cfi_offset 14, -4
  63:./lib/ros_lib/ros/msg.h ****   {
  64:./lib/ros_lib/ros/msg.h ****     const int32_t* val = (int32_t*) &f;
  65:./lib/ros_lib/ros/msg.h ****     int32_t exp = ((*val >> 23) & 255);
 3251              		.loc 22 65 0
 3252 0002 C1F3C753 		ubfx	r3, r1, #23, #8
 3253              	.LVL363:
  62:./lib/ros_lib/ros/msg.h ****   {
 3254              		.loc 22 62 0
 3255 0006 0546     		mov	r5, r0
 3256              		.loc 22 65 0
 3257 0008 0A46     		mov	r2, r1
  62:./lib/ros_lib/ros/msg.h ****   {
 3258              		.loc 22 62 0
 3259 000a 0846     		mov	r0, r1
 3260              	.LVL364:
  66:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 3261              		.loc 22 66 0
 3262 000c 0BB1     		cbz	r3, .L210
  67:./lib/ros_lib/ros/msg.h ****     {
  68:./lib/ros_lib/ros/msg.h ****       exp += 1023 - 127;
 3263              		.loc 22 68 0
 3264 000e 03F56073 		add	r3, r3, #896
 3265              	.LVL365:
 3266              	.L210:
  69:./lib/ros_lib/ros/msg.h ****     }
  70:./lib/ros_lib/ros/msg.h **** 
  71:./lib/ros_lib/ros/msg.h ****     int32_t sig = *val;
  72:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3267              		.loc 22 72 0
 3268 0012 0021     		movs	r1, #0
 3269              	.LVL366:
 3270 0014 2970     		strb	r1, [r5]
 3271              	.LVL367:
  73:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3272              		.loc 22 73 0
 3273 0016 6970     		strb	r1, [r5, #1]
 3274              	.LVL368:
  74:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3275              		.loc 22 74 0
 3276 0018 A970     		strb	r1, [r5, #2]
 3277              	.LVL369:
  75:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 3278              		.loc 22 75 0
 3279 001a 5101     		lsls	r1, r2, #5
 3280 001c E970     		strb	r1, [r5, #3]
 3281              	.LVL370:
  76:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 3282              		.loc 22 76 0
 3283 001e D110     		asrs	r1, r2, #3
 3284 0020 2971     		strb	r1, [r5, #4]
 3285              	.LVL371:
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 3286              		.loc 22 77 0
 3287 0022 D112     		asrs	r1, r2, #11
  78:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 3288              		.loc 22 78 0
 3289 0024 C2F3C342 		ubfx	r2, r2, #19, #4
 3290 0028 42EA0312 		orr	r2, r2, r3, lsl #4
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 3291              		.loc 22 77 0
 3292 002c 6971     		strb	r1, [r5, #5]
 3293              	.LVL372:
 3294              		.loc 22 78 0
 3295 002e AA71     		strb	r2, [r5, #6]
 3296              	.LVL373:
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
  80:./lib/ros_lib/ros/msg.h **** 
  81:./lib/ros_lib/ros/msg.h ****     // Mark negative bit as necessary.
  82:./lib/ros_lib/ros/msg.h ****     if (f < 0)
 3297              		.loc 22 82 0
 3298 0030 0021     		movs	r1, #0
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 3299              		.loc 22 79 0
 3300 0032 C3F30714 		ubfx	r4, r3, #4, #8
 3301              		.loc 22 82 0
 3302 0036 FFF7FEFF 		bl	__aeabi_fcmplt
 3303              	.LVL374:
 3304 003a 08B9     		cbnz	r0, .L211
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 3305              		.loc 22 79 0
 3306 003c EC71     		strb	r4, [r5, #7]
 3307 003e 02E0     		b	.L212
 3308              	.L211:
  83:./lib/ros_lib/ros/msg.h ****     {
  84:./lib/ros_lib/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
 3309              		.loc 22 84 0
 3310 0040 64F07F03 		orn	r3, r4, #127
 3311 0044 EB71     		strb	r3, [r5, #7]
 3312              	.L212:
  85:./lib/ros_lib/ros/msg.h ****     }
  86:./lib/ros_lib/ros/msg.h **** 
  87:./lib/ros_lib/ros/msg.h ****     return 8;
  88:./lib/ros_lib/ros/msg.h ****   }
 3313              		.loc 22 88 0
 3314 0046 0820     		movs	r0, #8
 3315 0048 38BD     		pop	{r3, r4, r5, pc}
 3316              		.cfi_endproc
 3317              	.LFE1021:
 3318              		.cantunwind
 3319              		.fnend
 3321              		.section	.text._ZNK12roberto_msgs10MotorState9serializeEPh,"axG",%progbits,_ZNK12roberto_msgs10Mot
 3322              		.align	1
 3323              		.weak	_ZNK12roberto_msgs10MotorState9serializeEPh
 3324              		.thumb
 3325              		.thumb_func
 3327              	_ZNK12roberto_msgs10MotorState9serializeEPh:
 3328              		.fnstart
 3329              	.LFB1242:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3330              		.loc 15 37 0
 3331              		.cfi_startproc
 3332              		@ args = 0, pretend = 0, frame = 0
 3333              		@ frame_needed = 0, uses_anonymous_args = 0
 3334              	.LVL375:
 3335 0000 70B5     		push	{r4, r5, r6, lr}
 3336              	.LCFI24:
 3337              		.cfi_def_cfa_offset 16
 3338              		.cfi_offset 4, -16
 3339              		.cfi_offset 5, -12
 3340              		.cfi_offset 6, -8
 3341              		.cfi_offset 14, -4
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3342              		.loc 15 37 0
 3343 0002 0546     		mov	r5, r0
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3344              		.loc 15 40 0
 3345 0004 0430     		adds	r0, r0, #4
 3346              	.LVL376:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3347              		.loc 15 37 0
 3348 0006 0E46     		mov	r6, r1
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3349              		.loc 15 40 0
 3350 0008 FFF7FEFF 		bl	_ZNK8std_msgs6Header9serializeEPh
 3351              	.LVL377:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 3352              		.loc 15 41 0
 3353 000c A969     		ldr	r1, [r5, #24]	@ float
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3354              		.loc 15 40 0
 3355 000e 0446     		mov	r4, r0
 3356              	.LVL378:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 3357              		.loc 15 41 0
 3358 0010 3018     		adds	r0, r6, r0
 3359              	.LVL379:
 3360 0012 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3361              	.LVL380:
 3362 0016 0444     		add	r4, r4, r0
 3363              	.LVL381:
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
 3364              		.loc 15 42 0
 3365 0018 E969     		ldr	r1, [r5, #28]	@ float
 3366 001a 3019     		adds	r0, r6, r4
 3367 001c FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3368              	.LVL382:
 3369 0020 0444     		add	r4, r4, r0
 3370              	.LVL383:
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
 3371              		.loc 15 43 0
 3372 0022 296A     		ldr	r1, [r5, #32]	@ float
 3373 0024 3019     		adds	r0, r6, r4
 3374 0026 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3375              	.LVL384:
 3376 002a 0444     		add	r4, r4, r0
 3377              	.LVL385:
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
 3378              		.loc 15 44 0
 3379 002c 696A     		ldr	r1, [r5, #36]	@ float
 3380 002e 3019     		adds	r0, r6, r4
 3381 0030 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3382              	.LVL386:
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3383              		.loc 15 45 0
 3384 0034 95F82830 		ldrb	r3, [r5, #40]	@ zero_extendqisi2
 3385 0038 2044     		add	r0, r0, r4
 3386              	.LVL387:
 3387 003a 3354     		strb	r3, [r6, r0]
 3388              	.LVL388:
  48:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3389              		.loc 15 48 0
 3390 003c 0130     		adds	r0, r0, #1
 3391              	.LVL389:
 3392 003e 70BD     		pop	{r4, r5, r6, pc}
 3393              		.cfi_endproc
 3394              	.LFE1242:
 3395              		.cantunwind
 3396              		.fnend
 3398              		.section	.text._ZNK13geometry_msgs7Vector39serializeEPh,"axG",%progbits,_ZNK13geometry_msgs7Vector
 3399              		.align	1
 3400              		.weak	_ZNK13geometry_msgs7Vector39serializeEPh
 3401              		.thumb
 3402              		.thumb_func
 3404              	_ZNK13geometry_msgs7Vector39serializeEPh:
 3405              		.fnstart
 3406              	.LFB1207:
  26:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
 3407              		.loc 11 26 0
 3408              		.cfi_startproc
 3409              		@ args = 0, pretend = 0, frame = 0
 3410              		@ frame_needed = 0, uses_anonymous_args = 0
 3411              	.LVL390:
 3412 0000 70B5     		push	{r4, r5, r6, lr}
 3413              	.LCFI25:
 3414              		.cfi_def_cfa_offset 16
 3415              		.cfi_offset 4, -16
 3416              		.cfi_offset 5, -12
 3417              		.cfi_offset 6, -8
 3418              		.cfi_offset 14, -4
  26:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
 3419              		.loc 11 26 0
 3420 0002 0D46     		mov	r5, r1
 3421 0004 0646     		mov	r6, r0
  29:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
 3422              		.loc 11 29 0
 3423 0006 4168     		ldr	r1, [r0, #4]	@ float
 3424              	.LVL391:
 3425 0008 2846     		mov	r0, r5
 3426              	.LVL392:
 3427 000a FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3428              	.LVL393:
  30:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
 3429              		.loc 11 30 0
 3430 000e B168     		ldr	r1, [r6, #8]	@ float
  29:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
 3431              		.loc 11 29 0
 3432 0010 0446     		mov	r4, r0
 3433              	.LVL394:
  30:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
 3434              		.loc 11 30 0
 3435 0012 2818     		adds	r0, r5, r0
 3436              	.LVL395:
 3437 0014 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3438              	.LVL396:
 3439 0018 0444     		add	r4, r4, r0
 3440              	.LVL397:
  31:./lib/ros_lib/geometry_msgs/Vector3.h ****       return offset;
 3441              		.loc 11 31 0
 3442 001a F168     		ldr	r1, [r6, #12]	@ float
 3443 001c 2819     		adds	r0, r5, r4
 3444 001e FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3445              	.LVL398:
  33:./lib/ros_lib/geometry_msgs/Vector3.h **** 
 3446              		.loc 11 33 0
 3447 0022 2044     		add	r0, r0, r4
 3448              	.LVL399:
 3449 0024 70BD     		pop	{r4, r5, r6, pc}
 3450              		.cfi_endproc
 3451              	.LFE1207:
 3452              		.cantunwind
 3453              		.fnend
 3455              		.section	.text._ZNK13geometry_msgs5Twist9serializeEPh,"axG",%progbits,_ZNK13geometry_msgs5Twist9se
 3456              		.align	1
 3457              		.weak	_ZNK13geometry_msgs5Twist9serializeEPh
 3458              		.thumb
 3459              		.thumb_func
 3461              	_ZNK13geometry_msgs5Twist9serializeEPh:
 3462              		.fnstart
 3463              	.LFB1214:
  25:./lib/ros_lib/geometry_msgs/Twist.h ****     {
 3464              		.loc 12 25 0
 3465              		.cfi_startproc
 3466              		@ args = 0, pretend = 0, frame = 0
 3467              		@ frame_needed = 0, uses_anonymous_args = 0
 3468              	.LVL400:
 3469 0000 70B5     		push	{r4, r5, r6, lr}
 3470              	.LCFI26:
 3471              		.cfi_def_cfa_offset 16
 3472              		.cfi_offset 4, -16
 3473              		.cfi_offset 5, -12
 3474              		.cfi_offset 6, -8
 3475              		.cfi_offset 14, -4
  25:./lib/ros_lib/geometry_msgs/Twist.h ****     {
 3476              		.loc 12 25 0
 3477 0002 0546     		mov	r5, r0
  28:./lib/ros_lib/geometry_msgs/Twist.h ****       offset += this->angular.serialize(outbuffer + offset);
 3478              		.loc 12 28 0
 3479 0004 0430     		adds	r0, r0, #4
 3480              	.LVL401:
  25:./lib/ros_lib/geometry_msgs/Twist.h ****     {
 3481              		.loc 12 25 0
 3482 0006 0E46     		mov	r6, r1
  28:./lib/ros_lib/geometry_msgs/Twist.h ****       offset += this->angular.serialize(outbuffer + offset);
 3483              		.loc 12 28 0
 3484 0008 FFF7FEFF 		bl	_ZNK13geometry_msgs7Vector39serializeEPh
 3485              	.LVL402:
 3486 000c 0446     		mov	r4, r0
 3487              	.LVL403:
  29:./lib/ros_lib/geometry_msgs/Twist.h ****       return offset;
 3488              		.loc 12 29 0
 3489 000e 3118     		adds	r1, r6, r0
 3490 0010 05F11400 		add	r0, r5, #20
 3491              	.LVL404:
 3492 0014 FFF7FEFF 		bl	_ZNK13geometry_msgs7Vector39serializeEPh
 3493              	.LVL405:
  31:./lib/ros_lib/geometry_msgs/Twist.h **** 
 3494              		.loc 12 31 0
 3495 0018 2044     		add	r0, r0, r4
 3496              	.LVL406:
 3497 001a 70BD     		pop	{r4, r5, r6, pc}
 3498              		.cfi_endproc
 3499              	.LFE1214:
 3500              		.cantunwind
 3501              		.fnend
 3503              		.section	.text._ZNK13geometry_msgs19TwistWithCovariance9serializeEPh,"axG",%progbits,_ZNK13geometr
 3504              		.align	1
 3505              		.weak	_ZNK13geometry_msgs19TwistWithCovariance9serializeEPh
 3506              		.thumb
 3507              		.thumb_func
 3509              	_ZNK13geometry_msgs19TwistWithCovariance9serializeEPh:
 3510              		.fnstart
 3511              	.LFB1221:
  25:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 3512              		.loc 13 25 0
 3513              		.cfi_startproc
 3514              		@ args = 0, pretend = 0, frame = 0
 3515              		@ frame_needed = 0, uses_anonymous_args = 0
 3516              	.LVL407:
 3517 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3518              	.LCFI27:
 3519              		.cfi_def_cfa_offset 24
 3520              		.cfi_offset 3, -24
 3521              		.cfi_offset 4, -20
 3522              		.cfi_offset 5, -16
 3523              		.cfi_offset 6, -12
 3524              		.cfi_offset 7, -8
 3525              		.cfi_offset 14, -4
  25:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 3526              		.loc 13 25 0
 3527 0002 0446     		mov	r4, r0
  28:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
 3528              		.loc 13 28 0
 3529 0004 0430     		adds	r0, r0, #4
 3530              	.LVL408:
  25:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 3531              		.loc 13 25 0
 3532 0006 0F46     		mov	r7, r1
  28:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
 3533              		.loc 13 28 0
 3534 0008 FFF7FEFF 		bl	_ZNK13geometry_msgs5Twist9serializeEPh
 3535              	.LVL409:
 3536 000c 0546     		mov	r5, r0
 3537              	.LVL410:
 3538 000e 04F12406 		add	r6, r4, #36
 3539 0012 B434     		adds	r4, r4, #180
 3540              	.LVL411:
 3541              	.L220:
 3542              	.LBB377:
  30:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       }
 3543              		.loc 13 30 0 discriminator 2
 3544 0014 56F8041F 		ldr	r1, [r6, #4]!	@ float
 3545 0018 7819     		adds	r0, r7, r5
 3546 001a FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3547              	.LVL412:
  29:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->covariance[i]);
 3548              		.loc 13 29 0 discriminator 2
 3549 001e A642     		cmp	r6, r4
  30:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       }
 3550              		.loc 13 30 0 discriminator 2
 3551 0020 0544     		add	r5, r5, r0
 3552              	.LVL413:
  29:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->covariance[i]);
 3553              		.loc 13 29 0 discriminator 2
 3554 0022 F7D1     		bne	.L220
 3555              	.LBE377:
  33:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
 3556              		.loc 13 33 0
 3557 0024 2846     		mov	r0, r5
 3558 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3559              		.cfi_endproc
 3560              	.LFE1221:
 3561              		.cantunwind
 3562              		.fnend
 3564              		.section	.text._ZNK13geometry_msgs10Quaternion9serializeEPh,"axG",%progbits,_ZNK13geometry_msgs10Q
 3565              		.align	1
 3566              		.weak	_ZNK13geometry_msgs10Quaternion9serializeEPh
 3567              		.thumb
 3568              		.thumb_func
 3570              	_ZNK13geometry_msgs10Quaternion9serializeEPh:
 3571              		.fnstart
 3572              	.LFB1186:
  28:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 3573              		.loc 8 28 0
 3574              		.cfi_startproc
 3575              		@ args = 0, pretend = 0, frame = 0
 3576              		@ frame_needed = 0, uses_anonymous_args = 0
 3577              	.LVL414:
 3578 0000 70B5     		push	{r4, r5, r6, lr}
 3579              	.LCFI28:
 3580              		.cfi_def_cfa_offset 16
 3581              		.cfi_offset 4, -16
 3582              		.cfi_offset 5, -12
 3583              		.cfi_offset 6, -8
 3584              		.cfi_offset 14, -4
  28:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 3585              		.loc 8 28 0
 3586 0002 0D46     		mov	r5, r1
 3587 0004 0646     		mov	r6, r0
  31:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
 3588              		.loc 8 31 0
 3589 0006 4168     		ldr	r1, [r0, #4]	@ float
 3590              	.LVL415:
 3591 0008 2846     		mov	r0, r5
 3592              	.LVL416:
 3593 000a FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3594              	.LVL417:
  32:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
 3595              		.loc 8 32 0
 3596 000e B168     		ldr	r1, [r6, #8]	@ float
  31:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
 3597              		.loc 8 31 0
 3598 0010 0446     		mov	r4, r0
 3599              	.LVL418:
  32:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
 3600              		.loc 8 32 0
 3601 0012 2818     		adds	r0, r5, r0
 3602              	.LVL419:
 3603 0014 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3604              	.LVL420:
 3605 0018 0444     		add	r4, r4, r0
 3606              	.LVL421:
  33:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->w);
 3607              		.loc 8 33 0
 3608 001a F168     		ldr	r1, [r6, #12]	@ float
 3609 001c 2819     		adds	r0, r5, r4
 3610 001e FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3611              	.LVL422:
 3612 0022 0444     		add	r4, r4, r0
 3613              	.LVL423:
  34:./lib/ros_lib/geometry_msgs/Quaternion.h ****       return offset;
 3614              		.loc 8 34 0
 3615 0024 3169     		ldr	r1, [r6, #16]	@ float
 3616 0026 2819     		adds	r0, r5, r4
 3617 0028 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3618              	.LVL424:
  36:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
 3619              		.loc 8 36 0
 3620 002c 2044     		add	r0, r0, r4
 3621              	.LVL425:
 3622 002e 70BD     		pop	{r4, r5, r6, pc}
 3623              		.cfi_endproc
 3624              	.LFE1186:
 3625              		.cantunwind
 3626              		.fnend
 3628              		.section	.text._ZNK13geometry_msgs9Transform9serializeEPh,"axG",%progbits,_ZNK13geometry_msgs9Tran
 3629              		.align	1
 3630              		.weak	_ZNK13geometry_msgs9Transform9serializeEPh
 3631              		.thumb
 3632              		.thumb_func
 3634              	_ZNK13geometry_msgs9Transform9serializeEPh:
 3635              		.fnstart
 3636              	.LFB1249:
  26:./lib/ros_lib/geometry_msgs/Transform.h ****     {
 3637              		.loc 16 26 0
 3638              		.cfi_startproc
 3639              		@ args = 0, pretend = 0, frame = 0
 3640              		@ frame_needed = 0, uses_anonymous_args = 0
 3641              	.LVL426:
 3642 0000 70B5     		push	{r4, r5, r6, lr}
 3643              	.LCFI29:
 3644              		.cfi_def_cfa_offset 16
 3645              		.cfi_offset 4, -16
 3646              		.cfi_offset 5, -12
 3647              		.cfi_offset 6, -8
 3648              		.cfi_offset 14, -4
  26:./lib/ros_lib/geometry_msgs/Transform.h ****     {
 3649              		.loc 16 26 0
 3650 0002 0546     		mov	r5, r0
  29:./lib/ros_lib/geometry_msgs/Transform.h ****       offset += this->rotation.serialize(outbuffer + offset);
 3651              		.loc 16 29 0
 3652 0004 0430     		adds	r0, r0, #4
 3653              	.LVL427:
  26:./lib/ros_lib/geometry_msgs/Transform.h ****     {
 3654              		.loc 16 26 0
 3655 0006 0E46     		mov	r6, r1
  29:./lib/ros_lib/geometry_msgs/Transform.h ****       offset += this->rotation.serialize(outbuffer + offset);
 3656              		.loc 16 29 0
 3657 0008 FFF7FEFF 		bl	_ZNK13geometry_msgs7Vector39serializeEPh
 3658              	.LVL428:
 3659 000c 0446     		mov	r4, r0
 3660              	.LVL429:
  30:./lib/ros_lib/geometry_msgs/Transform.h ****       return offset;
 3661              		.loc 16 30 0
 3662 000e 3118     		adds	r1, r6, r0
 3663 0010 05F11400 		add	r0, r5, #20
 3664              	.LVL430:
 3665 0014 FFF7FEFF 		bl	_ZNK13geometry_msgs10Quaternion9serializeEPh
 3666              	.LVL431:
  32:./lib/ros_lib/geometry_msgs/Transform.h **** 
 3667              		.loc 16 32 0
 3668 0018 2044     		add	r0, r0, r4
 3669              	.LVL432:
 3670 001a 70BD     		pop	{r4, r5, r6, pc}
 3671              		.cfi_endproc
 3672              	.LFE1249:
 3673              		.cantunwind
 3674              		.fnend
 3676              		.section	.text._ZNK13geometry_msgs16TransformStamped9serializeEPh,"axG",%progbits,_ZNK13geometry_m
 3677              		.align	1
 3678              		.weak	_ZNK13geometry_msgs16TransformStamped9serializeEPh
 3679              		.thumb
 3680              		.thumb_func
 3682              	_ZNK13geometry_msgs16TransformStamped9serializeEPh:
 3683              		.fnstart
 3684              	.LFB1256:
  28:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 3685              		.loc 17 28 0
 3686              		.cfi_startproc
 3687              		@ args = 0, pretend = 0, frame = 8
 3688              		@ frame_needed = 0, uses_anonymous_args = 0
 3689              	.LVL433:
 3690 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 3691              	.LCFI30:
 3692              		.cfi_def_cfa_offset 32
 3693              		.cfi_offset 4, -24
 3694              		.cfi_offset 5, -20
 3695              		.cfi_offset 6, -16
 3696              		.cfi_offset 7, -12
 3697              		.cfi_offset 8, -8
 3698              		.cfi_offset 14, -4
  28:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 3699              		.loc 17 28 0
 3700 0004 0646     		mov	r6, r0
  31:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       uint32_t length_child_frame_id = strlen(this->child_frame_id);
 3701              		.loc 17 31 0
 3702 0006 0430     		adds	r0, r0, #4
 3703              	.LVL434:
  28:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 3704              		.loc 17 28 0
 3705 0008 0F46     		mov	r7, r1
  31:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       uint32_t length_child_frame_id = strlen(this->child_frame_id);
 3706              		.loc 17 31 0
 3707 000a FFF7FEFF 		bl	_ZNK8std_msgs6Header9serializeEPh
 3708              	.LVL435:
 3709 000e 0546     		mov	r5, r0
 3710              	.LVL436:
  32:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       memcpy(outbuffer + offset, &length_child_frame_id, sizeof(uint32_t));
 3711              		.loc 17 32 0
 3712 0010 B069     		ldr	r0, [r6, #24]
 3713              	.LVL437:
 3714 0012 FFF7FEFF 		bl	strlen
 3715              	.LVL438:
 3716 0016 8046     		mov	r8, r0
 3717 0018 02AB     		add	r3, sp, #8
 3718 001a 43F8040D 		str	r0, [r3, #-4]!
  33:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += 4;
 3719              		.loc 17 33 0
 3720 001e 1868     		ldr	r0, [r3]	@ unaligned
  35:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += length_child_frame_id;
 3721              		.loc 17 35 0
 3722 0020 2C1D     		adds	r4, r5, #4
  33:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += 4;
 3723              		.loc 17 33 0
 3724 0022 7851     		str	r0, [r7, r5]	@ unaligned
 3725              	.LVL439:
  35:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += length_child_frame_id;
 3726              		.loc 17 35 0
 3727 0024 4246     		mov	r2, r8
 3728 0026 B169     		ldr	r1, [r6, #24]
 3729 0028 3819     		adds	r0, r7, r4
  36:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += this->transform.serialize(outbuffer + offset);
 3730              		.loc 17 36 0
 3731 002a 4444     		add	r4, r4, r8
 3732              	.LVL440:
  35:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += length_child_frame_id;
 3733              		.loc 17 35 0
 3734 002c FFF7FEFF 		bl	memcpy
 3735              	.LVL441:
  37:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       return offset;
 3736              		.loc 17 37 0
 3737 0030 3919     		adds	r1, r7, r4
 3738 0032 06F11C00 		add	r0, r6, #28
 3739 0036 FFF7FEFF 		bl	_ZNK13geometry_msgs9Transform9serializeEPh
 3740              	.LVL442:
  39:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
 3741              		.loc 17 39 0
 3742 003a 2044     		add	r0, r0, r4
 3743              	.LVL443:
 3744 003c 02B0     		add	sp, sp, #8
 3745              	.LCFI31:
 3746              		.cfi_def_cfa_offset 24
 3747              		@ sp needed
 3748 003e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3749              		.cfi_endproc
 3750              	.LFE1256:
 3751              		.cantunwind
 3752              		.fnend
 3754              		.section	.text._ZNK13geometry_msgs5Point9serializeEPh,"axG",%progbits,_ZNK13geometry_msgs5Point9se
 3755              		.align	1
 3756              		.weak	_ZNK13geometry_msgs5Point9serializeEPh
 3757              		.thumb
 3758              		.thumb_func
 3760              	_ZNK13geometry_msgs5Point9serializeEPh:
 3761              		.fnstart
 3762              	.LFB1179:
  26:./lib/ros_lib/geometry_msgs/Point.h ****     {
 3763              		.loc 7 26 0
 3764              		.cfi_startproc
 3765              		@ args = 0, pretend = 0, frame = 0
 3766              		@ frame_needed = 0, uses_anonymous_args = 0
 3767              	.LVL444:
 3768 0000 70B5     		push	{r4, r5, r6, lr}
 3769              	.LCFI32:
 3770              		.cfi_def_cfa_offset 16
 3771              		.cfi_offset 4, -16
 3772              		.cfi_offset 5, -12
 3773              		.cfi_offset 6, -8
 3774              		.cfi_offset 14, -4
  26:./lib/ros_lib/geometry_msgs/Point.h ****     {
 3775              		.loc 7 26 0
 3776 0002 0D46     		mov	r5, r1
 3777 0004 0646     		mov	r6, r0
  29:./lib/ros_lib/geometry_msgs/Point.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
 3778              		.loc 7 29 0
 3779 0006 4168     		ldr	r1, [r0, #4]	@ float
 3780              	.LVL445:
 3781 0008 2846     		mov	r0, r5
 3782              	.LVL446:
 3783 000a FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3784              	.LVL447:
  30:./lib/ros_lib/geometry_msgs/Point.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
 3785              		.loc 7 30 0
 3786 000e B168     		ldr	r1, [r6, #8]	@ float
  29:./lib/ros_lib/geometry_msgs/Point.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->y);
 3787              		.loc 7 29 0
 3788 0010 0446     		mov	r4, r0
 3789              	.LVL448:
  30:./lib/ros_lib/geometry_msgs/Point.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->z);
 3790              		.loc 7 30 0
 3791 0012 2818     		adds	r0, r5, r0
 3792              	.LVL449:
 3793 0014 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3794              	.LVL450:
 3795 0018 0444     		add	r4, r4, r0
 3796              	.LVL451:
  31:./lib/ros_lib/geometry_msgs/Point.h ****       return offset;
 3797              		.loc 7 31 0
 3798 001a F168     		ldr	r1, [r6, #12]	@ float
 3799 001c 2819     		adds	r0, r5, r4
 3800 001e FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3801              	.LVL452:
  33:./lib/ros_lib/geometry_msgs/Point.h **** 
 3802              		.loc 7 33 0
 3803 0022 2044     		add	r0, r0, r4
 3804              	.LVL453:
 3805 0024 70BD     		pop	{r4, r5, r6, pc}
 3806              		.cfi_endproc
 3807              	.LFE1179:
 3808              		.cantunwind
 3809              		.fnend
 3811              		.section	.text._ZNK13geometry_msgs4Pose9serializeEPh,"axG",%progbits,_ZNK13geometry_msgs4Pose9seri
 3812              		.align	1
 3813              		.weak	_ZNK13geometry_msgs4Pose9serializeEPh
 3814              		.thumb
 3815              		.thumb_func
 3817              	_ZNK13geometry_msgs4Pose9serializeEPh:
 3818              		.fnstart
 3819              	.LFB1193:
  26:./lib/ros_lib/geometry_msgs/Pose.h ****     {
 3820              		.loc 9 26 0
 3821              		.cfi_startproc
 3822              		@ args = 0, pretend = 0, frame = 0
 3823              		@ frame_needed = 0, uses_anonymous_args = 0
 3824              	.LVL454:
 3825 0000 70B5     		push	{r4, r5, r6, lr}
 3826              	.LCFI33:
 3827              		.cfi_def_cfa_offset 16
 3828              		.cfi_offset 4, -16
 3829              		.cfi_offset 5, -12
 3830              		.cfi_offset 6, -8
 3831              		.cfi_offset 14, -4
  26:./lib/ros_lib/geometry_msgs/Pose.h ****     {
 3832              		.loc 9 26 0
 3833 0002 0546     		mov	r5, r0
  29:./lib/ros_lib/geometry_msgs/Pose.h ****       offset += this->orientation.serialize(outbuffer + offset);
 3834              		.loc 9 29 0
 3835 0004 0430     		adds	r0, r0, #4
 3836              	.LVL455:
  26:./lib/ros_lib/geometry_msgs/Pose.h ****     {
 3837              		.loc 9 26 0
 3838 0006 0E46     		mov	r6, r1
  29:./lib/ros_lib/geometry_msgs/Pose.h ****       offset += this->orientation.serialize(outbuffer + offset);
 3839              		.loc 9 29 0
 3840 0008 FFF7FEFF 		bl	_ZNK13geometry_msgs5Point9serializeEPh
 3841              	.LVL456:
 3842 000c 0446     		mov	r4, r0
 3843              	.LVL457:
  30:./lib/ros_lib/geometry_msgs/Pose.h ****       return offset;
 3844              		.loc 9 30 0
 3845 000e 3118     		adds	r1, r6, r0
 3846 0010 05F11400 		add	r0, r5, #20
 3847              	.LVL458:
 3848 0014 FFF7FEFF 		bl	_ZNK13geometry_msgs10Quaternion9serializeEPh
 3849              	.LVL459:
  32:./lib/ros_lib/geometry_msgs/Pose.h **** 
 3850              		.loc 9 32 0
 3851 0018 2044     		add	r0, r0, r4
 3852              	.LVL460:
 3853 001a 70BD     		pop	{r4, r5, r6, pc}
 3854              		.cfi_endproc
 3855              	.LFE1193:
 3856              		.cantunwind
 3857              		.fnend
 3859              		.section	.text._ZNK13geometry_msgs18PoseWithCovariance9serializeEPh,"axG",%progbits,_ZNK13geometry
 3860              		.align	1
 3861              		.weak	_ZNK13geometry_msgs18PoseWithCovariance9serializeEPh
 3862              		.thumb
 3863              		.thumb_func
 3865              	_ZNK13geometry_msgs18PoseWithCovariance9serializeEPh:
 3866              		.fnstart
 3867              	.LFB1200:
  25:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 3868              		.loc 10 25 0
 3869              		.cfi_startproc
 3870              		@ args = 0, pretend = 0, frame = 0
 3871              		@ frame_needed = 0, uses_anonymous_args = 0
 3872              	.LVL461:
 3873 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3874              	.LCFI34:
 3875              		.cfi_def_cfa_offset 24
 3876              		.cfi_offset 3, -24
 3877              		.cfi_offset 4, -20
 3878              		.cfi_offset 5, -16
 3879              		.cfi_offset 6, -12
 3880              		.cfi_offset 7, -8
 3881              		.cfi_offset 14, -4
  25:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 3882              		.loc 10 25 0
 3883 0002 0446     		mov	r4, r0
  28:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
 3884              		.loc 10 28 0
 3885 0004 0430     		adds	r0, r0, #4
 3886              	.LVL462:
  25:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 3887              		.loc 10 25 0
 3888 0006 0F46     		mov	r7, r1
  28:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
 3889              		.loc 10 28 0
 3890 0008 FFF7FEFF 		bl	_ZNK13geometry_msgs4Pose9serializeEPh
 3891              	.LVL463:
 3892 000c 0546     		mov	r5, r0
 3893              	.LVL464:
 3894 000e 04F12806 		add	r6, r4, #40
 3895 0012 B834     		adds	r4, r4, #184
 3896              	.LVL465:
 3897              	.L228:
 3898              	.LBB378:
  30:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       }
 3899              		.loc 10 30 0 discriminator 2
 3900 0014 56F8041F 		ldr	r1, [r6, #4]!	@ float
 3901 0018 7819     		adds	r0, r7, r5
 3902 001a FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3903              	.LVL466:
  29:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->covariance[i]);
 3904              		.loc 10 29 0 discriminator 2
 3905 001e A642     		cmp	r6, r4
  30:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       }
 3906              		.loc 10 30 0 discriminator 2
 3907 0020 0544     		add	r5, r5, r0
 3908              	.LVL467:
  29:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->covariance[i]);
 3909              		.loc 10 29 0 discriminator 2
 3910 0022 F7D1     		bne	.L228
 3911              	.LBE378:
  33:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
 3912              		.loc 10 33 0
 3913 0024 2846     		mov	r0, r5
 3914 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3915              		.cfi_endproc
 3916              	.LFE1200:
 3917              		.cantunwind
 3918              		.fnend
 3920              		.section	.text._ZNK8nav_msgs8Odometry9serializeEPh,"axG",%progbits,_ZNK8nav_msgs8Odometry9serializ
 3921              		.align	1
 3922              		.weak	_ZNK8nav_msgs8Odometry9serializeEPh
 3923              		.thumb
 3924              		.thumb_func
 3926              	_ZNK8nav_msgs8Odometry9serializeEPh:
 3927              		.fnstart
 3928              	.LFB1228:
  31:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 3929              		.loc 14 31 0
 3930              		.cfi_startproc
 3931              		@ args = 0, pretend = 0, frame = 8
 3932              		@ frame_needed = 0, uses_anonymous_args = 0
 3933              	.LVL468:
 3934 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 3935              	.LCFI35:
 3936              		.cfi_def_cfa_offset 32
 3937              		.cfi_offset 4, -24
 3938              		.cfi_offset 5, -20
 3939              		.cfi_offset 6, -16
 3940              		.cfi_offset 7, -12
 3941              		.cfi_offset 8, -8
 3942              		.cfi_offset 14, -4
  31:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 3943              		.loc 14 31 0
 3944 0004 0646     		mov	r6, r0
  34:./lib/ros_lib/nav_msgs/Odometry.h ****       uint32_t length_child_frame_id = strlen(this->child_frame_id);
 3945              		.loc 14 34 0
 3946 0006 0430     		adds	r0, r0, #4
 3947              	.LVL469:
  31:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 3948              		.loc 14 31 0
 3949 0008 0F46     		mov	r7, r1
  34:./lib/ros_lib/nav_msgs/Odometry.h ****       uint32_t length_child_frame_id = strlen(this->child_frame_id);
 3950              		.loc 14 34 0
 3951 000a FFF7FEFF 		bl	_ZNK8std_msgs6Header9serializeEPh
 3952              	.LVL470:
 3953 000e 0546     		mov	r5, r0
 3954              	.LVL471:
  35:./lib/ros_lib/nav_msgs/Odometry.h ****       memcpy(outbuffer + offset, &length_child_frame_id, sizeof(uint32_t));
 3955              		.loc 14 35 0
 3956 0010 B069     		ldr	r0, [r6, #24]
 3957              	.LVL472:
 3958 0012 FFF7FEFF 		bl	strlen
 3959              	.LVL473:
 3960 0016 8046     		mov	r8, r0
 3961 0018 02AB     		add	r3, sp, #8
 3962 001a 43F8040D 		str	r0, [r3, #-4]!
  36:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += 4;
 3963              		.loc 14 36 0
 3964 001e 1868     		ldr	r0, [r3]	@ unaligned
  38:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += length_child_frame_id;
 3965              		.loc 14 38 0
 3966 0020 2C1D     		adds	r4, r5, #4
  36:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += 4;
 3967              		.loc 14 36 0
 3968 0022 7851     		str	r0, [r7, r5]	@ unaligned
 3969              	.LVL474:
  38:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += length_child_frame_id;
 3970              		.loc 14 38 0
 3971 0024 4246     		mov	r2, r8
 3972 0026 B169     		ldr	r1, [r6, #24]
 3973 0028 3819     		adds	r0, r7, r4
  39:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->pose.serialize(outbuffer + offset);
 3974              		.loc 14 39 0
 3975 002a 4444     		add	r4, r4, r8
 3976              	.LVL475:
  38:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += length_child_frame_id;
 3977              		.loc 14 38 0
 3978 002c FFF7FEFF 		bl	memcpy
 3979              	.LVL476:
  40:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->twist.serialize(outbuffer + offset);
 3980              		.loc 14 40 0
 3981 0030 3919     		adds	r1, r7, r4
 3982 0032 06F11C00 		add	r0, r6, #28
 3983 0036 FFF7FEFF 		bl	_ZNK13geometry_msgs18PoseWithCovariance9serializeEPh
 3984              	.LVL477:
 3985 003a 0444     		add	r4, r4, r0
 3986              	.LVL478:
  41:./lib/ros_lib/nav_msgs/Odometry.h ****       return offset;
 3987              		.loc 14 41 0
 3988 003c 3919     		adds	r1, r7, r4
 3989 003e 06F1D800 		add	r0, r6, #216
 3990 0042 FFF7FEFF 		bl	_ZNK13geometry_msgs19TwistWithCovariance9serializeEPh
 3991              	.LVL479:
  43:./lib/ros_lib/nav_msgs/Odometry.h **** 
 3992              		.loc 14 43 0
 3993 0046 2044     		add	r0, r0, r4
 3994              	.LVL480:
 3995 0048 02B0     		add	sp, sp, #8
 3996              	.LCFI36:
 3997              		.cfi_def_cfa_offset 24
 3998              		@ sp needed
 3999 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4000              		.cfi_endproc
 4001              	.LFE1228:
 4002              		.cantunwind
 4003              		.fnend
 4005              		.section	.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf,"axG",%progbits,_ZN3ros3Msg21deserializeAv
 4006              		.align	1
 4007              		.weak	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4008              		.thumb
 4009              		.thumb_func
 4011              	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf:
 4012              		.fnstart
 4013              	.LFB1022:
  89:./lib/ros_lib/ros/msg.h **** 
  90:./lib/ros_lib/ros/msg.h ****   /**
  91:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
  92:./lib/ros_lib/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
  93:./lib/ros_lib/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
  94:./lib/ros_lib/ros/msg.h ****    *
  95:./lib/ros_lib/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
  96:./lib/ros_lib/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
  97:./lib/ros_lib/ros/msg.h ****    *
  98:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  99:./lib/ros_lib/ros/msg.h ****    */
 100:./lib/ros_lib/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 4014              		.loc 22 100 0
 4015              		.cfi_startproc
 4016              		@ args = 0, pretend = 0, frame = 0
 4017              		@ frame_needed = 0, uses_anonymous_args = 0
 4018              	.LVL481:
 4019 0000 30B5     		push	{r4, r5, lr}
 4020              	.LCFI37:
 4021              		.cfi_def_cfa_offset 12
 4022              		.cfi_offset 4, -12
 4023              		.cfi_offset 5, -8
 4024              		.cfi_offset 14, -4
 101:./lib/ros_lib/ros/msg.h ****   {
 102:./lib/ros_lib/ros/msg.h ****     uint32_t* val = (uint32_t*)f;
 103:./lib/ros_lib/ros/msg.h ****     inbuffer += 3;
 104:./lib/ros_lib/ros/msg.h **** 
 105:./lib/ros_lib/ros/msg.h ****     // Copy truncated mantissa.
 106:./lib/ros_lib/ros/msg.h ****     *val = ((uint32_t)(*(inbuffer++)) >> 5 & 0x07);
 4025              		.loc 22 106 0
 4026 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 4027 0004 5B09     		lsrs	r3, r3, #5
 4028 0006 0B60     		str	r3, [r1]
 4029              	.LVL482:
 107:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 4030              		.loc 22 107 0
 4031 0008 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 4032 000a 43EAC203 		orr	r3, r3, r2, lsl #3
 4033 000e 0B60     		str	r3, [r1]
 4034              	.LVL483:
 108:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 4035              		.loc 22 108 0
 4036 0010 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 4037 0012 43EAC222 		orr	r2, r3, r2, lsl #11
 4038 0016 0A60     		str	r2, [r1]
 109:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 4039              		.loc 22 109 0
 4040 0018 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 4041 001a DB04     		lsls	r3, r3, #19
 4042 001c 03F4F003 		and	r3, r3, #7864320
 4043 0020 1343     		orrs	r3, r3, r2
 4044 0022 0B60     		str	r3, [r1]
 4045              	.LVL484:
 110:./lib/ros_lib/ros/msg.h **** 
 111:./lib/ros_lib/ros/msg.h ****     // Copy truncated exponent.
 112:./lib/ros_lib/ros/msg.h ****     uint32_t exp = ((uint32_t)(*(inbuffer++)) & 0xf0)>>4;
 113:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 4046              		.loc 22 113 0
 4047 0024 C479     		ldrb	r4, [r0, #7]	@ zero_extendqisi2
 112:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 4048              		.loc 22 112 0
 4049 0026 8579     		ldrb	r5, [r0, #6]	@ zero_extendqisi2
 4050              	.LVL485:
 4051              		.loc 22 113 0
 4052 0028 2401     		lsls	r4, r4, #4
 4053 002a 04F4FE62 		and	r2, r4, #2032
 4054              	.LVL486:
 114:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 4055              		.loc 22 114 0
 4056 002e 52EA1512 		orrs	r2, r2, r5, lsr #4
 4057              	.LVL487:
 115:./lib/ros_lib/ros/msg.h ****     {
 116:./lib/ros_lib/ros/msg.h ****       *val |= ((exp) - 1023 + 127) << 23;
 4058              		.loc 22 116 0
 4059 0032 1EBF     		ittt	ne
 4060 0034 A2F56072 		subne	r2, r2, #896
 4061              	.LVL488:
 4062 0038 43EAC253 		orrne	r3, r3, r2, lsl #23
 4063 003c 0B60     		strne	r3, [r1]
 4064              	.LVL489:
 117:./lib/ros_lib/ros/msg.h ****     }  
 118:./lib/ros_lib/ros/msg.h **** 
 119:./lib/ros_lib/ros/msg.h ****     // Copy negative sign.
 120:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0x80) << 24;
 4065              		.loc 22 120 0
 4066 003e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 121:./lib/ros_lib/ros/msg.h **** 
 122:./lib/ros_lib/ros/msg.h ****     return 8;
 123:./lib/ros_lib/ros/msg.h ****   }
 4067              		.loc 22 123 0
 4068 0040 0820     		movs	r0, #8
 4069              	.LVL490:
 120:./lib/ros_lib/ros/msg.h **** 
 4070              		.loc 22 120 0
 4071 0042 23F07F02 		bic	r2, r3, #127
 4072 0046 0B68     		ldr	r3, [r1]
 4073 0048 43EA0263 		orr	r3, r3, r2, lsl #24
 4074 004c 0B60     		str	r3, [r1]
 4075              		.loc 22 123 0
 4076 004e 30BD     		pop	{r4, r5, pc}
 4077              		.cfi_endproc
 4078              	.LFE1022:
 4079              		.cantunwind
 4080              		.fnend
 4082              		.section	.text._ZN12roberto_msgs10MotorState11deserializeEPh,"axG",%progbits,_ZN12roberto_msgs10Mo
 4083              		.align	1
 4084              		.weak	_ZN12roberto_msgs10MotorState11deserializeEPh
 4085              		.thumb
 4086              		.thumb_func
 4088              	_ZN12roberto_msgs10MotorState11deserializeEPh:
 4089              		.fnstart
 4090              	.LFB1243:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 4091              		.loc 15 50 0
 4092              		.cfi_startproc
 4093              		@ args = 0, pretend = 0, frame = 0
 4094              		@ frame_needed = 0, uses_anonymous_args = 0
 4095              	.LVL491:
 4096 0000 70B5     		push	{r4, r5, r6, lr}
 4097              	.LCFI38:
 4098              		.cfi_def_cfa_offset 16
 4099              		.cfi_offset 4, -16
 4100              		.cfi_offset 5, -12
 4101              		.cfi_offset 6, -8
 4102              		.cfi_offset 14, -4
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 4103              		.loc 15 50 0
 4104 0002 0546     		mov	r5, r0
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 4105              		.loc 15 53 0
 4106 0004 0430     		adds	r0, r0, #4
 4107              	.LVL492:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 4108              		.loc 15 50 0
 4109 0006 0E46     		mov	r6, r1
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 4110              		.loc 15 53 0
 4111 0008 FFF7FEFF 		bl	_ZN8std_msgs6Header11deserializeEPh
 4112              	.LVL493:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 4113              		.loc 15 54 0
 4114 000c 05F11801 		add	r1, r5, #24
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 4115              		.loc 15 53 0
 4116 0010 0446     		mov	r4, r0
 4117              	.LVL494:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 4118              		.loc 15 54 0
 4119 0012 3018     		adds	r0, r6, r0
 4120              	.LVL495:
 4121 0014 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4122              	.LVL496:
 4123 0018 0444     		add	r4, r4, r0
 4124              	.LVL497:
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
 4125              		.loc 15 55 0
 4126 001a 05F11C01 		add	r1, r5, #28
 4127 001e 3019     		adds	r0, r6, r4
 4128 0020 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4129              	.LVL498:
 4130 0024 0444     		add	r4, r4, r0
 4131              	.LVL499:
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
 4132              		.loc 15 56 0
 4133 0026 05F12001 		add	r1, r5, #32
 4134 002a 3019     		adds	r0, r6, r4
 4135 002c FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4136              	.LVL500:
 4137 0030 0444     		add	r4, r4, r0
 4138              	.LVL501:
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
 4139              		.loc 15 57 0
 4140 0032 05F12401 		add	r1, r5, #36
 4141 0036 3019     		adds	r0, r6, r4
 4142 0038 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4143              	.LVL502:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 4144              		.loc 15 58 0
 4145 003c 2044     		add	r0, r0, r4
 4146              	.LVL503:
 4147 003e 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 4148              		.loc 15 61 0
 4149 0040 0130     		adds	r0, r0, #1
 4150              	.LVL504:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 4151              		.loc 15 58 0
 4152 0042 85F82830 		strb	r3, [r5, #40]
 4153              	.LVL505:
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 4154              		.loc 15 61 0
 4155 0046 70BD     		pop	{r4, r5, r6, pc}
 4156              		.cfi_endproc
 4157              	.LFE1243:
 4158              		.cantunwind
 4159              		.fnend
 4161              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh,"axG",%progbits,_ZN3r
 4162              		.align	1
 4163              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 4164              		.thumb
 4165              		.thumb_func
 4167              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:
 4168              		.fnstart
 4169              	.LFB1384:
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 4170              		.loc 20 72 0
 4171              		.cfi_startproc
 4172              		@ args = 0, pretend = 0, frame = 0
 4173              		@ frame_needed = 0, uses_anonymous_args = 0
 4174              	.LVL506:
 4175 0000 70B5     		push	{r4, r5, r6, lr}
 4176              	.LCFI39:
 4177              		.cfi_def_cfa_offset 16
 4178              		.cfi_offset 4, -16
 4179              		.cfi_offset 5, -12
 4180              		.cfi_offset 6, -8
 4181              		.cfi_offset 14, -4
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 4182              		.loc 20 72 0
 4183 0002 0546     		mov	r5, r0
  73:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 4184              		.loc 20 73 0
 4185 0004 00F10C04 		add	r4, r0, #12
 4186 0008 2046     		mov	r0, r4
 4187              	.LVL507:
 4188 000a FFF7FEFF 		bl	_ZN12roberto_msgs10MotorState11deserializeEPh
 4189              	.LVL508:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 4190              		.loc 20 74 0
 4191 000e AB6B     		ldr	r3, [r5, #56]
 4192 0010 2046     		mov	r0, r4
  75:./lib/ros_lib/ros/subscriber.h **** 
 4193              		.loc 20 75 0
 4194 0012 BDE87040 		pop	{r4, r5, r6, lr}
 4195              	.LCFI40:
 4196              		.cfi_restore 14
 4197              		.cfi_restore 6
 4198              		.cfi_restore 5
 4199              		.cfi_restore 4
 4200              		.cfi_def_cfa_offset 0
 4201              	.LVL509:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 4202              		.loc 20 74 0
 4203 0016 1847     		bx	r3	@ indirect register sibling call
 4204              	.LVL510:
 4205              		.cfi_endproc
 4206              	.LFE1384:
 4207              		.cantunwind
 4208              		.fnend
 4210              		.section	.text._ZN13geometry_msgs10Quaternion11deserializeEPh,"axG",%progbits,_ZN13geometry_msgs10
 4211              		.align	1
 4212              		.weak	_ZN13geometry_msgs10Quaternion11deserializeEPh
 4213              		.thumb
 4214              		.thumb_func
 4216              	_ZN13geometry_msgs10Quaternion11deserializeEPh:
 4217              		.fnstart
 4218              	.LFB1187:
  38:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 4219              		.loc 8 38 0
 4220              		.cfi_startproc
 4221              		@ args = 0, pretend = 0, frame = 0
 4222              		@ frame_needed = 0, uses_anonymous_args = 0
 4223              	.LVL511:
 4224 0000 70B5     		push	{r4, r5, r6, lr}
 4225              	.LCFI41:
 4226              		.cfi_def_cfa_offset 16
 4227              		.cfi_offset 4, -16
 4228              		.cfi_offset 5, -12
 4229              		.cfi_offset 6, -8
 4230              		.cfi_offset 14, -4
  38:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 4231              		.loc 8 38 0
 4232 0002 0D46     		mov	r5, r1
 4233 0004 0646     		mov	r6, r0
  41:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
 4234              		.loc 8 41 0
 4235 0006 011D     		adds	r1, r0, #4
 4236              	.LVL512:
 4237 0008 2846     		mov	r0, r5
 4238              	.LVL513:
 4239 000a FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4240              	.LVL514:
  42:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
 4241              		.loc 8 42 0
 4242 000e 06F10801 		add	r1, r6, #8
  41:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
 4243              		.loc 8 41 0
 4244 0012 0446     		mov	r4, r0
 4245              	.LVL515:
  42:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
 4246              		.loc 8 42 0
 4247 0014 2818     		adds	r0, r5, r0
 4248              	.LVL516:
 4249 0016 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4250              	.LVL517:
 4251 001a 0444     		add	r4, r4, r0
 4252              	.LVL518:
  43:./lib/ros_lib/geometry_msgs/Quaternion.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->w));
 4253              		.loc 8 43 0
 4254 001c 06F10C01 		add	r1, r6, #12
 4255 0020 2819     		adds	r0, r5, r4
 4256 0022 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4257              	.LVL519:
 4258 0026 0444     		add	r4, r4, r0
 4259              	.LVL520:
  44:./lib/ros_lib/geometry_msgs/Quaternion.h ****      return offset;
 4260              		.loc 8 44 0
 4261 0028 06F11001 		add	r1, r6, #16
 4262 002c 2819     		adds	r0, r5, r4
 4263 002e FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4264              	.LVL521:
  46:./lib/ros_lib/geometry_msgs/Quaternion.h **** 
 4265              		.loc 8 46 0
 4266 0032 2044     		add	r0, r0, r4
 4267              	.LVL522:
 4268 0034 70BD     		pop	{r4, r5, r6, pc}
 4269              		.cfi_endproc
 4270              	.LFE1187:
 4271              		.cantunwind
 4272              		.fnend
 4274              		.section	.text._ZN13geometry_msgs7Vector311deserializeEPh,"axG",%progbits,_ZN13geometry_msgs7Vecto
 4275              		.align	1
 4276              		.weak	_ZN13geometry_msgs7Vector311deserializeEPh
 4277              		.thumb
 4278              		.thumb_func
 4280              	_ZN13geometry_msgs7Vector311deserializeEPh:
 4281              		.fnstart
 4282              	.LFB1208:
  35:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
 4283              		.loc 11 35 0
 4284              		.cfi_startproc
 4285              		@ args = 0, pretend = 0, frame = 0
 4286              		@ frame_needed = 0, uses_anonymous_args = 0
 4287              	.LVL523:
 4288 0000 70B5     		push	{r4, r5, r6, lr}
 4289              	.LCFI42:
 4290              		.cfi_def_cfa_offset 16
 4291              		.cfi_offset 4, -16
 4292              		.cfi_offset 5, -12
 4293              		.cfi_offset 6, -8
 4294              		.cfi_offset 14, -4
  35:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
 4295              		.loc 11 35 0
 4296 0002 0D46     		mov	r5, r1
 4297 0004 0646     		mov	r6, r0
  38:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
 4298              		.loc 11 38 0
 4299 0006 011D     		adds	r1, r0, #4
 4300              	.LVL524:
 4301 0008 2846     		mov	r0, r5
 4302              	.LVL525:
 4303 000a FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4304              	.LVL526:
  39:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
 4305              		.loc 11 39 0
 4306 000e 06F10801 		add	r1, r6, #8
  38:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
 4307              		.loc 11 38 0
 4308 0012 0446     		mov	r4, r0
 4309              	.LVL527:
  39:./lib/ros_lib/geometry_msgs/Vector3.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
 4310              		.loc 11 39 0
 4311 0014 2818     		adds	r0, r5, r0
 4312              	.LVL528:
 4313 0016 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4314              	.LVL529:
 4315 001a 0444     		add	r4, r4, r0
 4316              	.LVL530:
  40:./lib/ros_lib/geometry_msgs/Vector3.h ****      return offset;
 4317              		.loc 11 40 0
 4318 001c 06F10C01 		add	r1, r6, #12
 4319 0020 2819     		adds	r0, r5, r4
 4320 0022 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4321              	.LVL531:
  42:./lib/ros_lib/geometry_msgs/Vector3.h **** 
 4322              		.loc 11 42 0
 4323 0026 2044     		add	r0, r0, r4
 4324              	.LVL532:
 4325 0028 70BD     		pop	{r4, r5, r6, pc}
 4326              		.cfi_endproc
 4327              	.LFE1208:
 4328              		.cantunwind
 4329              		.fnend
 4331              		.section	.text._ZN13geometry_msgs9Transform11deserializeEPh,"axG",%progbits,_ZN13geometry_msgs9Tra
 4332              		.align	1
 4333              		.weak	_ZN13geometry_msgs9Transform11deserializeEPh
 4334              		.thumb
 4335              		.thumb_func
 4337              	_ZN13geometry_msgs9Transform11deserializeEPh:
 4338              		.fnstart
 4339              	.LFB1250:
  34:./lib/ros_lib/geometry_msgs/Transform.h ****     {
 4340              		.loc 16 34 0
 4341              		.cfi_startproc
 4342              		@ args = 0, pretend = 0, frame = 0
 4343              		@ frame_needed = 0, uses_anonymous_args = 0
 4344              	.LVL533:
 4345 0000 70B5     		push	{r4, r5, r6, lr}
 4346              	.LCFI43:
 4347              		.cfi_def_cfa_offset 16
 4348              		.cfi_offset 4, -16
 4349              		.cfi_offset 5, -12
 4350              		.cfi_offset 6, -8
 4351              		.cfi_offset 14, -4
  34:./lib/ros_lib/geometry_msgs/Transform.h ****     {
 4352              		.loc 16 34 0
 4353 0002 0546     		mov	r5, r0
  37:./lib/ros_lib/geometry_msgs/Transform.h ****       offset += this->rotation.deserialize(inbuffer + offset);
 4354              		.loc 16 37 0
 4355 0004 0430     		adds	r0, r0, #4
 4356              	.LVL534:
  34:./lib/ros_lib/geometry_msgs/Transform.h ****     {
 4357              		.loc 16 34 0
 4358 0006 0E46     		mov	r6, r1
  37:./lib/ros_lib/geometry_msgs/Transform.h ****       offset += this->rotation.deserialize(inbuffer + offset);
 4359              		.loc 16 37 0
 4360 0008 FFF7FEFF 		bl	_ZN13geometry_msgs7Vector311deserializeEPh
 4361              	.LVL535:
 4362 000c 0446     		mov	r4, r0
 4363              	.LVL536:
  38:./lib/ros_lib/geometry_msgs/Transform.h ****      return offset;
 4364              		.loc 16 38 0
 4365 000e 3118     		adds	r1, r6, r0
 4366 0010 05F11400 		add	r0, r5, #20
 4367              	.LVL537:
 4368 0014 FFF7FEFF 		bl	_ZN13geometry_msgs10Quaternion11deserializeEPh
 4369              	.LVL538:
  40:./lib/ros_lib/geometry_msgs/Transform.h **** 
 4370              		.loc 16 40 0
 4371 0018 2044     		add	r0, r0, r4
 4372              	.LVL539:
 4373 001a 70BD     		pop	{r4, r5, r6, pc}
 4374              		.cfi_endproc
 4375              	.LFE1250:
 4376              		.cantunwind
 4377              		.fnend
 4379              		.section	.text._ZN13geometry_msgs16TransformStamped11deserializeEPh,"axG",%progbits,_ZN13geometry_
 4380              		.align	1
 4381              		.weak	_ZN13geometry_msgs16TransformStamped11deserializeEPh
 4382              		.thumb
 4383              		.thumb_func
 4385              	_ZN13geometry_msgs16TransformStamped11deserializeEPh:
 4386              		.fnstart
 4387              	.LFB1257:
  41:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 4388              		.loc 17 41 0
 4389              		.cfi_startproc
 4390              		@ args = 0, pretend = 0, frame = 8
 4391              		@ frame_needed = 0, uses_anonymous_args = 0
 4392              	.LVL540:
 4393 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 4394              	.LCFI44:
 4395              		.cfi_def_cfa_offset 24
 4396              		.cfi_offset 4, -16
 4397              		.cfi_offset 5, -12
 4398              		.cfi_offset 6, -8
 4399              		.cfi_offset 14, -4
  41:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 4400              		.loc 17 41 0
 4401 0002 0646     		mov	r6, r0
  44:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       uint32_t length_child_frame_id;
 4402              		.loc 17 44 0
 4403 0004 0430     		adds	r0, r0, #4
 4404              	.LVL541:
  41:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 4405              		.loc 17 41 0
 4406 0006 0D46     		mov	r5, r1
  44:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       uint32_t length_child_frame_id;
 4407              		.loc 17 44 0
 4408 0008 FFF7FEFF 		bl	_ZN8std_msgs6Header11deserializeEPh
 4409              	.LVL542:
 4410 000c 0346     		mov	r3, r0
 4411              	.LVL543:
  46:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += 4;
 4412              		.loc 17 46 0
 4413 000e 2858     		ldr	r0, [r5, r0]	@ unaligned
 4414              	.LVL544:
 4415 0010 0190     		str	r0, [sp, #4]	@ unaligned
 4416              	.LVL545:
 4417              	.LBB379:
  48:./lib/ros_lib/geometry_msgs/TransformStamped.h ****           inbuffer[k-1]=inbuffer[k];
 4418              		.loc 17 48 0
 4419 0012 019C     		ldr	r4, [sp, #4]
 4420 0014 181D     		adds	r0, r3, #4
 4421              	.LVL546:
 4422 0016 0444     		add	r4, r4, r0
 4423 0018 2B18     		adds	r3, r5, r0
 4424              	.LVL547:
 4425              	.L243:
  48:./lib/ros_lib/geometry_msgs/TransformStamped.h ****           inbuffer[k-1]=inbuffer[k];
 4426              		.loc 17 48 0 is_stmt 0 discriminator 3
 4427 001a 5A1B     		subs	r2, r3, r5
 4428              	.LVL548:
 4429 001c 9442     		cmp	r4, r2
 4430 001e 04D9     		bls	.L242
  49:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       }
 4431              		.loc 17 49 0 is_stmt 1 discriminator 2
 4432 0020 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 4433              	.LVL549:
 4434 0024 03F8022C 		strb	r2, [r3, #-2]
 4435              	.LVL550:
  48:./lib/ros_lib/geometry_msgs/TransformStamped.h ****           inbuffer[k-1]=inbuffer[k];
 4436              		.loc 17 48 0 discriminator 2
 4437 0028 F7E7     		b	.L243
 4438              	.LVL551:
 4439              	.L242:
 4440              	.LBE379:
  52:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += length_child_frame_id;
 4441              		.loc 17 52 0
 4442 002a 0138     		subs	r0, r0, #1
 4443              	.LVL552:
  51:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       this->child_frame_id = (char *)(inbuffer + offset-1);
 4444              		.loc 17 51 0
 4445 002c 2919     		adds	r1, r5, r4
 4446 002e 0023     		movs	r3, #0
  52:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += length_child_frame_id;
 4447              		.loc 17 52 0
 4448 0030 2844     		add	r0, r0, r5
 4449              	.LVL553:
  51:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       this->child_frame_id = (char *)(inbuffer + offset-1);
 4450              		.loc 17 51 0
 4451 0032 01F8013C 		strb	r3, [r1, #-1]
  52:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       offset += length_child_frame_id;
 4452              		.loc 17 52 0
 4453 0036 B061     		str	r0, [r6, #24]
 4454              	.LVL554:
  54:./lib/ros_lib/geometry_msgs/TransformStamped.h ****      return offset;
 4455              		.loc 17 54 0
 4456 0038 06F11C00 		add	r0, r6, #28
 4457 003c FFF7FEFF 		bl	_ZN13geometry_msgs9Transform11deserializeEPh
 4458              	.LVL555:
  56:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
 4459              		.loc 17 56 0
 4460 0040 2044     		add	r0, r0, r4
 4461              	.LVL556:
 4462 0042 02B0     		add	sp, sp, #8
 4463              	.LCFI45:
 4464              		.cfi_def_cfa_offset 16
 4465              		@ sp needed
 4466 0044 70BD     		pop	{r4, r5, r6, pc}
 4467              		.cfi_endproc
 4468              	.LFE1257:
 4469              		.cantunwind
 4470              		.fnend
 4472              		.section	.text._ZN2tf9tfMessage11deserializeEPh,"axG",%progbits,_ZN2tf9tfMessage11deserializeEPh,c
 4473              		.align	1
 4474              		.weak	_ZN2tf9tfMessage11deserializeEPh
 4475              		.thumb
 4476              		.thumb_func
 4478              	_ZN2tf9tfMessage11deserializeEPh:
 4479              		.fnstart
 4480              	.LFB1271:
  38:./lib/ros_lib/tf/tfMessage.h ****     {
 4481              		.loc 18 38 0
 4482              		.cfi_startproc
 4483              		@ args = 0, pretend = 0, frame = 0
 4484              		@ frame_needed = 0, uses_anonymous_args = 0
 4485              	.LVL557:
 4486 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4487              	.LCFI46:
 4488              		.cfi_def_cfa_offset 32
 4489              		.cfi_offset 4, -32
 4490              		.cfi_offset 5, -28
 4491              		.cfi_offset 6, -24
 4492              		.cfi_offset 7, -20
 4493              		.cfi_offset 8, -16
 4494              		.cfi_offset 9, -12
 4495              		.cfi_offset 10, -8
 4496              		.cfi_offset 14, -4
  41:./lib/ros_lib/tf/tfMessage.h ****       if(transforms_lengthT > transforms_length)
 4497              		.loc 18 41 0
 4498 0004 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 4499              	.LVL558:
  42:./lib/ros_lib/tf/tfMessage.h ****         this->transforms = (geometry_msgs::TransformStamped*)realloc(this->transforms, transforms_l
 4500              		.loc 18 42 0
 4501 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  38:./lib/ros_lib/tf/tfMessage.h ****     {
 4502              		.loc 18 38 0
 4503 0008 0446     		mov	r4, r0
  42:./lib/ros_lib/tf/tfMessage.h ****         this->transforms = (geometry_msgs::TransformStamped*)realloc(this->transforms, transforms_l
 4504              		.loc 18 42 0
 4505 000a AB42     		cmp	r3, r5
  38:./lib/ros_lib/tf/tfMessage.h ****     {
 4506              		.loc 18 38 0
 4507 000c 8846     		mov	r8, r1
  42:./lib/ros_lib/tf/tfMessage.h ****         this->transforms = (geometry_msgs::TransformStamped*)realloc(this->transforms, transforms_l
 4508              		.loc 18 42 0
 4509 000e 05D2     		bcs	.L246
  43:./lib/ros_lib/tf/tfMessage.h ****       offset += 3;
 4510              		.loc 18 43 0
 4511 0010 4421     		movs	r1, #68
 4512              	.LVL559:
 4513 0012 6943     		muls	r1, r5, r1
 4514 0014 C06C     		ldr	r0, [r0, #76]
 4515              	.LVL560:
 4516 0016 FFF7FEFF 		bl	realloc
 4517              	.LVL561:
 4518 001a E064     		str	r0, [r4, #76]
 4519              	.L246:
 4520              	.LVL562:
  45:./lib/ros_lib/tf/tfMessage.h ****       for( uint8_t i = 0; i < transforms_length; i++){
 4521              		.loc 18 45 0
 4522 001c 2571     		strb	r5, [r4, #4]
 4523              	.LVL563:
 4524 001e 0020     		movs	r0, #0
  44:./lib/ros_lib/tf/tfMessage.h ****       transforms_length = transforms_lengthT;
 4525              		.loc 18 44 0
 4526 0020 0426     		movs	r6, #4
 4527              	.LBB380:
  47:./lib/ros_lib/tf/tfMessage.h ****         memcpy( &(this->transforms[i]), &(this->st_transforms), sizeof(geometry_msgs::TransformStam
 4528              		.loc 18 47 0
 4529 0022 04F10807 		add	r7, r4, #8
  48:./lib/ros_lib/tf/tfMessage.h ****       }
 4530              		.loc 18 48 0
 4531 0026 4FF0440A 		mov	r10, #68
 4532              	.LVL564:
 4533              	.L248:
  46:./lib/ros_lib/tf/tfMessage.h ****       offset += this->st_transforms.deserialize(inbuffer + offset);
 4534              		.loc 18 46 0 discriminator 3
 4535 002a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4536 002c C5B2     		uxtb	r5, r0
 4537 002e AB42     		cmp	r3, r5
 4538 0030 00F10109 		add	r9, r0, #1
 4539 0034 0ED9     		bls	.L247
  47:./lib/ros_lib/tf/tfMessage.h ****         memcpy( &(this->transforms[i]), &(this->st_transforms), sizeof(geometry_msgs::TransformStam
 4540              		.loc 18 47 0 discriminator 2
 4541 0036 08EB0601 		add	r1, r8, r6
 4542 003a 3846     		mov	r0, r7
 4543              	.LVL565:
 4544 003c FFF7FEFF 		bl	_ZN13geometry_msgs16TransformStamped11deserializeEPh
 4545              	.LVL566:
 4546 0040 0644     		add	r6, r6, r0
 4547              	.LVL567:
  48:./lib/ros_lib/tf/tfMessage.h ****       }
 4548              		.loc 18 48 0 discriminator 2
 4549 0042 E06C     		ldr	r0, [r4, #76]
 4550 0044 4422     		movs	r2, #68
 4551 0046 3946     		mov	r1, r7
 4552 0048 0AFB0500 		mla	r0, r10, r5, r0
 4553 004c FFF7FEFF 		bl	memcpy
 4554              	.LVL568:
  46:./lib/ros_lib/tf/tfMessage.h ****       offset += this->st_transforms.deserialize(inbuffer + offset);
 4555              		.loc 18 46 0 discriminator 2
 4556 0050 4846     		mov	r0, r9
 4557 0052 EAE7     		b	.L248
 4558              	.LVL569:
 4559              	.L247:
 4560              	.LBE380:
  51:./lib/ros_lib/tf/tfMessage.h **** 
 4561              		.loc 18 51 0
 4562 0054 3046     		mov	r0, r6
 4563              	.LVL570:
 4564 0056 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4565              		.cfi_endproc
 4566              	.LFE1271:
 4567              		.cantunwind
 4568              		.fnend
 4570              		.section	.text._ZN13geometry_msgs5Twist11deserializeEPh,"axG",%progbits,_ZN13geometry_msgs5Twist11
 4571              		.align	1
 4572              		.weak	_ZN13geometry_msgs5Twist11deserializeEPh
 4573              		.thumb
 4574              		.thumb_func
 4576              	_ZN13geometry_msgs5Twist11deserializeEPh:
 4577              		.fnstart
 4578              	.LFB1215:
  33:./lib/ros_lib/geometry_msgs/Twist.h ****     {
 4579              		.loc 12 33 0
 4580              		.cfi_startproc
 4581              		@ args = 0, pretend = 0, frame = 0
 4582              		@ frame_needed = 0, uses_anonymous_args = 0
 4583              	.LVL571:
 4584 0000 70B5     		push	{r4, r5, r6, lr}
 4585              	.LCFI47:
 4586              		.cfi_def_cfa_offset 16
 4587              		.cfi_offset 4, -16
 4588              		.cfi_offset 5, -12
 4589              		.cfi_offset 6, -8
 4590              		.cfi_offset 14, -4
  33:./lib/ros_lib/geometry_msgs/Twist.h ****     {
 4591              		.loc 12 33 0
 4592 0002 0546     		mov	r5, r0
  36:./lib/ros_lib/geometry_msgs/Twist.h ****       offset += this->angular.deserialize(inbuffer + offset);
 4593              		.loc 12 36 0
 4594 0004 0430     		adds	r0, r0, #4
 4595              	.LVL572:
  33:./lib/ros_lib/geometry_msgs/Twist.h ****     {
 4596              		.loc 12 33 0
 4597 0006 0E46     		mov	r6, r1
  36:./lib/ros_lib/geometry_msgs/Twist.h ****       offset += this->angular.deserialize(inbuffer + offset);
 4598              		.loc 12 36 0
 4599 0008 FFF7FEFF 		bl	_ZN13geometry_msgs7Vector311deserializeEPh
 4600              	.LVL573:
 4601 000c 0446     		mov	r4, r0
 4602              	.LVL574:
  37:./lib/ros_lib/geometry_msgs/Twist.h ****      return offset;
 4603              		.loc 12 37 0
 4604 000e 3118     		adds	r1, r6, r0
 4605 0010 05F11400 		add	r0, r5, #20
 4606              	.LVL575:
 4607 0014 FFF7FEFF 		bl	_ZN13geometry_msgs7Vector311deserializeEPh
 4608              	.LVL576:
  39:./lib/ros_lib/geometry_msgs/Twist.h **** 
 4609              		.loc 12 39 0
 4610 0018 2044     		add	r0, r0, r4
 4611              	.LVL577:
 4612 001a 70BD     		pop	{r4, r5, r6, pc}
 4613              		.cfi_endproc
 4614              	.LFE1215:
 4615              		.cantunwind
 4616              		.fnend
 4618              		.section	.text._ZN13geometry_msgs5Point11deserializeEPh,"axG",%progbits,_ZN13geometry_msgs5Point11
 4619              		.align	1
 4620              		.weak	_ZN13geometry_msgs5Point11deserializeEPh
 4621              		.thumb
 4622              		.thumb_func
 4624              	_ZN13geometry_msgs5Point11deserializeEPh:
 4625              		.fnstart
 4626              	.LFB1180:
  35:./lib/ros_lib/geometry_msgs/Point.h ****     {
 4627              		.loc 7 35 0
 4628              		.cfi_startproc
 4629              		@ args = 0, pretend = 0, frame = 0
 4630              		@ frame_needed = 0, uses_anonymous_args = 0
 4631              	.LVL578:
 4632 0000 70B5     		push	{r4, r5, r6, lr}
 4633              	.LCFI48:
 4634              		.cfi_def_cfa_offset 16
 4635              		.cfi_offset 4, -16
 4636              		.cfi_offset 5, -12
 4637              		.cfi_offset 6, -8
 4638              		.cfi_offset 14, -4
  35:./lib/ros_lib/geometry_msgs/Point.h ****     {
 4639              		.loc 7 35 0
 4640 0002 0D46     		mov	r5, r1
 4641 0004 0646     		mov	r6, r0
  38:./lib/ros_lib/geometry_msgs/Point.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
 4642              		.loc 7 38 0
 4643 0006 011D     		adds	r1, r0, #4
 4644              	.LVL579:
 4645 0008 2846     		mov	r0, r5
 4646              	.LVL580:
 4647 000a FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4648              	.LVL581:
  39:./lib/ros_lib/geometry_msgs/Point.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
 4649              		.loc 7 39 0
 4650 000e 06F10801 		add	r1, r6, #8
  38:./lib/ros_lib/geometry_msgs/Point.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->y));
 4651              		.loc 7 38 0
 4652 0012 0446     		mov	r4, r0
 4653              	.LVL582:
  39:./lib/ros_lib/geometry_msgs/Point.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->z));
 4654              		.loc 7 39 0
 4655 0014 2818     		adds	r0, r5, r0
 4656              	.LVL583:
 4657 0016 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4658              	.LVL584:
 4659 001a 0444     		add	r4, r4, r0
 4660              	.LVL585:
  40:./lib/ros_lib/geometry_msgs/Point.h ****      return offset;
 4661              		.loc 7 40 0
 4662 001c 06F10C01 		add	r1, r6, #12
 4663 0020 2819     		adds	r0, r5, r4
 4664 0022 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4665              	.LVL586:
  42:./lib/ros_lib/geometry_msgs/Point.h **** 
 4666              		.loc 7 42 0
 4667 0026 2044     		add	r0, r0, r4
 4668              	.LVL587:
 4669 0028 70BD     		pop	{r4, r5, r6, pc}
 4670              		.cfi_endproc
 4671              	.LFE1180:
 4672              		.cantunwind
 4673              		.fnend
 4675              		.section	.text._ZN13geometry_msgs4Pose11deserializeEPh,"axG",%progbits,_ZN13geometry_msgs4Pose11de
 4676              		.align	1
 4677              		.weak	_ZN13geometry_msgs4Pose11deserializeEPh
 4678              		.thumb
 4679              		.thumb_func
 4681              	_ZN13geometry_msgs4Pose11deserializeEPh:
 4682              		.fnstart
 4683              	.LFB1194:
  34:./lib/ros_lib/geometry_msgs/Pose.h ****     {
 4684              		.loc 9 34 0
 4685              		.cfi_startproc
 4686              		@ args = 0, pretend = 0, frame = 0
 4687              		@ frame_needed = 0, uses_anonymous_args = 0
 4688              	.LVL588:
 4689 0000 70B5     		push	{r4, r5, r6, lr}
 4690              	.LCFI49:
 4691              		.cfi_def_cfa_offset 16
 4692              		.cfi_offset 4, -16
 4693              		.cfi_offset 5, -12
 4694              		.cfi_offset 6, -8
 4695              		.cfi_offset 14, -4
  34:./lib/ros_lib/geometry_msgs/Pose.h ****     {
 4696              		.loc 9 34 0
 4697 0002 0546     		mov	r5, r0
  37:./lib/ros_lib/geometry_msgs/Pose.h ****       offset += this->orientation.deserialize(inbuffer + offset);
 4698              		.loc 9 37 0
 4699 0004 0430     		adds	r0, r0, #4
 4700              	.LVL589:
  34:./lib/ros_lib/geometry_msgs/Pose.h ****     {
 4701              		.loc 9 34 0
 4702 0006 0E46     		mov	r6, r1
  37:./lib/ros_lib/geometry_msgs/Pose.h ****       offset += this->orientation.deserialize(inbuffer + offset);
 4703              		.loc 9 37 0
 4704 0008 FFF7FEFF 		bl	_ZN13geometry_msgs5Point11deserializeEPh
 4705              	.LVL590:
 4706 000c 0446     		mov	r4, r0
 4707              	.LVL591:
  38:./lib/ros_lib/geometry_msgs/Pose.h ****      return offset;
 4708              		.loc 9 38 0
 4709 000e 3118     		adds	r1, r6, r0
 4710 0010 05F11400 		add	r0, r5, #20
 4711              	.LVL592:
 4712 0014 FFF7FEFF 		bl	_ZN13geometry_msgs10Quaternion11deserializeEPh
 4713              	.LVL593:
  40:./lib/ros_lib/geometry_msgs/Pose.h **** 
 4714              		.loc 9 40 0
 4715 0018 2044     		add	r0, r0, r4
 4716              	.LVL594:
 4717 001a 70BD     		pop	{r4, r5, r6, pc}
 4718              		.cfi_endproc
 4719              	.LFE1194:
 4720              		.cantunwind
 4721              		.fnend
 4723              		.section	.text._ZN13geometry_msgs18PoseWithCovariance11deserializeEPh,"axG",%progbits,_ZN13geometr
 4724              		.align	1
 4725              		.weak	_ZN13geometry_msgs18PoseWithCovariance11deserializeEPh
 4726              		.thumb
 4727              		.thumb_func
 4729              	_ZN13geometry_msgs18PoseWithCovariance11deserializeEPh:
 4730              		.fnstart
 4731              	.LFB1201:
  35:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 4732              		.loc 10 35 0
 4733              		.cfi_startproc
 4734              		@ args = 0, pretend = 0, frame = 0
 4735              		@ frame_needed = 0, uses_anonymous_args = 0
 4736              	.LVL595:
 4737 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4738              	.LCFI50:
 4739              		.cfi_def_cfa_offset 24
 4740              		.cfi_offset 3, -24
 4741              		.cfi_offset 4, -20
 4742              		.cfi_offset 5, -16
 4743              		.cfi_offset 6, -12
 4744              		.cfi_offset 7, -8
 4745              		.cfi_offset 14, -4
  35:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 4746              		.loc 10 35 0
 4747 0002 0446     		mov	r4, r0
  38:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
 4748              		.loc 10 38 0
 4749 0004 0430     		adds	r0, r0, #4
 4750              	.LVL596:
  35:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 4751              		.loc 10 35 0
 4752 0006 0F46     		mov	r7, r1
  38:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
 4753              		.loc 10 38 0
 4754 0008 FFF7FEFF 		bl	_ZN13geometry_msgs4Pose11deserializeEPh
 4755              	.LVL597:
 4756 000c 0546     		mov	r5, r0
 4757              	.LVL598:
 4758 000e 04F12C06 		add	r6, r4, #44
 4759 0012 BC34     		adds	r4, r4, #188
 4760              	.LVL599:
 4761              	.L253:
 4762              	.LBB381:
  40:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       }
 4763              		.loc 10 40 0 discriminator 2
 4764 0014 3146     		mov	r1, r6
 4765 0016 7819     		adds	r0, r7, r5
 4766 0018 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4767              	.LVL600:
 4768 001c 0436     		adds	r6, r6, #4
  39:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->covariance[i]));
 4769              		.loc 10 39 0 discriminator 2
 4770 001e A642     		cmp	r6, r4
  40:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       }
 4771              		.loc 10 40 0 discriminator 2
 4772 0020 0544     		add	r5, r5, r0
 4773              	.LVL601:
  39:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->covariance[i]));
 4774              		.loc 10 39 0 discriminator 2
 4775 0022 F7D1     		bne	.L253
 4776              	.LBE381:
  43:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h **** 
 4777              		.loc 10 43 0
 4778 0024 2846     		mov	r0, r5
 4779 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4780              		.cfi_endproc
 4781              	.LFE1201:
 4782              		.cantunwind
 4783              		.fnend
 4785              		.section	.text._ZN13geometry_msgs19TwistWithCovariance11deserializeEPh,"axG",%progbits,_ZN13geomet
 4786              		.align	1
 4787              		.weak	_ZN13geometry_msgs19TwistWithCovariance11deserializeEPh
 4788              		.thumb
 4789              		.thumb_func
 4791              	_ZN13geometry_msgs19TwistWithCovariance11deserializeEPh:
 4792              		.fnstart
 4793              	.LFB1222:
  35:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 4794              		.loc 13 35 0
 4795              		.cfi_startproc
 4796              		@ args = 0, pretend = 0, frame = 0
 4797              		@ frame_needed = 0, uses_anonymous_args = 0
 4798              	.LVL602:
 4799 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4800              	.LCFI51:
 4801              		.cfi_def_cfa_offset 24
 4802              		.cfi_offset 3, -24
 4803              		.cfi_offset 4, -20
 4804              		.cfi_offset 5, -16
 4805              		.cfi_offset 6, -12
 4806              		.cfi_offset 7, -8
 4807              		.cfi_offset 14, -4
  35:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 4808              		.loc 13 35 0
 4809 0002 0446     		mov	r4, r0
  38:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
 4810              		.loc 13 38 0
 4811 0004 0430     		adds	r0, r0, #4
 4812              	.LVL603:
  35:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 4813              		.loc 13 35 0
 4814 0006 0F46     		mov	r7, r1
  38:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       for( uint8_t i = 0; i < 36; i++){
 4815              		.loc 13 38 0
 4816 0008 FFF7FEFF 		bl	_ZN13geometry_msgs5Twist11deserializeEPh
 4817              	.LVL604:
 4818 000c 0546     		mov	r5, r0
 4819              	.LVL605:
 4820 000e 04F12806 		add	r6, r4, #40
 4821 0012 B834     		adds	r4, r4, #184
 4822              	.LVL606:
 4823              	.L256:
 4824              	.LBB382:
  40:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       }
 4825              		.loc 13 40 0 discriminator 2
 4826 0014 3146     		mov	r1, r6
 4827 0016 7819     		adds	r0, r7, r5
 4828 0018 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 4829              	.LVL607:
 4830 001c 0436     		adds	r6, r6, #4
  39:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->covariance[i]));
 4831              		.loc 13 39 0 discriminator 2
 4832 001e A642     		cmp	r6, r4
  40:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       }
 4833              		.loc 13 40 0 discriminator 2
 4834 0020 0544     		add	r5, r5, r0
 4835              	.LVL608:
  39:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->covariance[i]));
 4836              		.loc 13 39 0 discriminator 2
 4837 0022 F7D1     		bne	.L256
 4838              	.LBE382:
  43:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h **** 
 4839              		.loc 13 43 0
 4840 0024 2846     		mov	r0, r5
 4841 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4842              		.cfi_endproc
 4843              	.LFE1222:
 4844              		.cantunwind
 4845              		.fnend
 4847              		.section	.text._ZN8nav_msgs8Odometry11deserializeEPh,"axG",%progbits,_ZN8nav_msgs8Odometry11deseri
 4848              		.align	1
 4849              		.weak	_ZN8nav_msgs8Odometry11deserializeEPh
 4850              		.thumb
 4851              		.thumb_func
 4853              	_ZN8nav_msgs8Odometry11deserializeEPh:
 4854              		.fnstart
 4855              	.LFB1229:
  45:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 4856              		.loc 14 45 0
 4857              		.cfi_startproc
 4858              		@ args = 0, pretend = 0, frame = 8
 4859              		@ frame_needed = 0, uses_anonymous_args = 0
 4860              	.LVL609:
 4861 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 4862              	.LCFI52:
 4863              		.cfi_def_cfa_offset 24
 4864              		.cfi_offset 4, -16
 4865              		.cfi_offset 5, -12
 4866              		.cfi_offset 6, -8
 4867              		.cfi_offset 14, -4
  45:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 4868              		.loc 14 45 0
 4869 0002 0646     		mov	r6, r0
  48:./lib/ros_lib/nav_msgs/Odometry.h ****       uint32_t length_child_frame_id;
 4870              		.loc 14 48 0
 4871 0004 0430     		adds	r0, r0, #4
 4872              	.LVL610:
  45:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 4873              		.loc 14 45 0
 4874 0006 0D46     		mov	r5, r1
  48:./lib/ros_lib/nav_msgs/Odometry.h ****       uint32_t length_child_frame_id;
 4875              		.loc 14 48 0
 4876 0008 FFF7FEFF 		bl	_ZN8std_msgs6Header11deserializeEPh
 4877              	.LVL611:
 4878 000c 0346     		mov	r3, r0
 4879              	.LVL612:
  50:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += 4;
 4880              		.loc 14 50 0
 4881 000e 2858     		ldr	r0, [r5, r0]	@ unaligned
 4882              	.LVL613:
 4883 0010 0190     		str	r0, [sp, #4]	@ unaligned
 4884              	.LVL614:
 4885              	.LBB383:
  52:./lib/ros_lib/nav_msgs/Odometry.h ****           inbuffer[k-1]=inbuffer[k];
 4886              		.loc 14 52 0
 4887 0012 019C     		ldr	r4, [sp, #4]
 4888 0014 181D     		adds	r0, r3, #4
 4889              	.LVL615:
 4890 0016 0444     		add	r4, r4, r0
 4891 0018 2B18     		adds	r3, r5, r0
 4892              	.LVL616:
 4893              	.L260:
  52:./lib/ros_lib/nav_msgs/Odometry.h ****           inbuffer[k-1]=inbuffer[k];
 4894              		.loc 14 52 0 is_stmt 0 discriminator 3
 4895 001a 5A1B     		subs	r2, r3, r5
 4896              	.LVL617:
 4897 001c 9442     		cmp	r4, r2
 4898 001e 04D9     		bls	.L259
  53:./lib/ros_lib/nav_msgs/Odometry.h ****       }
 4899              		.loc 14 53 0 is_stmt 1 discriminator 2
 4900 0020 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 4901              	.LVL618:
 4902 0024 03F8022C 		strb	r2, [r3, #-2]
 4903              	.LVL619:
  52:./lib/ros_lib/nav_msgs/Odometry.h ****           inbuffer[k-1]=inbuffer[k];
 4904              		.loc 14 52 0 discriminator 2
 4905 0028 F7E7     		b	.L260
 4906              	.LVL620:
 4907              	.L259:
 4908              	.LBE383:
  56:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += length_child_frame_id;
 4909              		.loc 14 56 0
 4910 002a 0138     		subs	r0, r0, #1
 4911              	.LVL621:
  55:./lib/ros_lib/nav_msgs/Odometry.h ****       this->child_frame_id = (char *)(inbuffer + offset-1);
 4912              		.loc 14 55 0
 4913 002c 2919     		adds	r1, r5, r4
 4914 002e 0023     		movs	r3, #0
  56:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += length_child_frame_id;
 4915              		.loc 14 56 0
 4916 0030 2844     		add	r0, r0, r5
 4917              	.LVL622:
  55:./lib/ros_lib/nav_msgs/Odometry.h ****       this->child_frame_id = (char *)(inbuffer + offset-1);
 4918              		.loc 14 55 0
 4919 0032 01F8013C 		strb	r3, [r1, #-1]
  56:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += length_child_frame_id;
 4920              		.loc 14 56 0
 4921 0036 B061     		str	r0, [r6, #24]
 4922              	.LVL623:
  58:./lib/ros_lib/nav_msgs/Odometry.h ****       offset += this->twist.deserialize(inbuffer + offset);
 4923              		.loc 14 58 0
 4924 0038 06F11C00 		add	r0, r6, #28
 4925 003c FFF7FEFF 		bl	_ZN13geometry_msgs18PoseWithCovariance11deserializeEPh
 4926              	.LVL624:
 4927 0040 0444     		add	r4, r4, r0
 4928              	.LVL625:
  59:./lib/ros_lib/nav_msgs/Odometry.h ****      return offset;
 4929              		.loc 14 59 0
 4930 0042 2919     		adds	r1, r5, r4
 4931 0044 06F1D800 		add	r0, r6, #216
 4932 0048 FFF7FEFF 		bl	_ZN13geometry_msgs19TwistWithCovariance11deserializeEPh
 4933              	.LVL626:
  61:./lib/ros_lib/nav_msgs/Odometry.h **** 
 4934              		.loc 14 61 0
 4935 004c 2044     		add	r0, r0, r4
 4936              	.LVL627:
 4937 004e 02B0     		add	sp, sp, #8
 4938              	.LCFI53:
 4939              		.cfi_def_cfa_offset 16
 4940              		@ sp needed
 4941 0050 70BD     		pop	{r4, r5, r6, pc}
 4942              		.cfi_endproc
 4943              	.LFE1229:
 4944              		.cantunwind
 4945              		.fnend
 4947              		.section	.text._ZN3ros9Publisher7publishEPKNS_3MsgE,"axG",%progbits,_ZN3ros9Publisher7publishEPKNS
 4948              		.align	1
 4949              		.weak	_ZN3ros9Publisher7publishEPKNS_3MsgE
 4950              		.thumb
 4951              		.thumb_func
 4953              	_ZN3ros9Publisher7publishEPKNS_3MsgE:
 4954              		.fnstart
 4955              	.LFB1081:
 4956              		.file 23 "./lib/ros_lib/ros/publisher.h"
   1:./lib/ros_lib/ros/publisher.h **** /* 
   2:./lib/ros_lib/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/publisher.h ****  *
   4:./lib/ros_lib/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/publisher.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/publisher.h ****  *
   7:./lib/ros_lib/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/publisher.h ****  * are met:
  10:./lib/ros_lib/ros/publisher.h ****  *
  11:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/publisher.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/publisher.h ****  *
  21:./lib/ros_lib/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/publisher.h ****  */
  34:./lib/ros_lib/ros/publisher.h **** 
  35:./lib/ros_lib/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:./lib/ros_lib/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:./lib/ros_lib/ros/publisher.h **** 
  38:./lib/ros_lib/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/publisher.h **** #include "node_handle.h"
  40:./lib/ros_lib/ros/publisher.h **** 
  41:./lib/ros_lib/ros/publisher.h **** namespace ros {
  42:./lib/ros_lib/ros/publisher.h **** 
  43:./lib/ros_lib/ros/publisher.h ****   /* Generic Publisher */
  44:./lib/ros_lib/ros/publisher.h ****   class Publisher
  45:./lib/ros_lib/ros/publisher.h ****   {
  46:./lib/ros_lib/ros/publisher.h ****     public:
  47:./lib/ros_lib/ros/publisher.h ****       Publisher( const char * topic_name, Msg * msg, int endpoint=rosserial_msgs::TopicInfo::ID_PUB
  48:./lib/ros_lib/ros/publisher.h ****         topic_(topic_name), 
  49:./lib/ros_lib/ros/publisher.h ****         msg_(msg),
  50:./lib/ros_lib/ros/publisher.h ****         endpoint_(endpoint) {};
  51:./lib/ros_lib/ros/publisher.h **** 
  52:./lib/ros_lib/ros/publisher.h ****       int publish( const Msg * msg ) { return nh_->publish(id_, msg); };
 4957              		.loc 23 52 0
 4958              		.cfi_startproc
 4959              		@ args = 0, pretend = 0, frame = 0
 4960              		@ frame_needed = 0, uses_anonymous_args = 0
 4961              		@ link register save eliminated.
 4962              	.LVL628:
 4963 0000 C368     		ldr	r3, [r0, #12]
 4964 0002 10B4     		push	{r4}
 4965              	.LCFI54:
 4966              		.cfi_def_cfa_offset 4
 4967              		.cfi_offset 4, -4
 4968              		.loc 23 52 0
 4969 0004 1A68     		ldr	r2, [r3]
 4970 0006 1468     		ldr	r4, [r2]
 4971 0008 0A46     		mov	r2, r1
 4972 000a 8168     		ldr	r1, [r0, #8]
 4973              	.LVL629:
 4974 000c 1846     		mov	r0, r3
 4975              	.LVL630:
 4976 000e 2346     		mov	r3, r4
 4977 0010 10BC     		pop	{r4}
 4978              	.LCFI55:
 4979              		.cfi_restore 4
 4980              		.cfi_def_cfa_offset 0
 4981 0012 1847     		bx	r3
 4982              	.LVL631:
 4983              		.cfi_endproc
 4984              	.LFE1081:
 4985              		.cantunwind
 4986              		.fnend
 4988              		.section	.text._ZN15ArduinoHardware4initEv,"axG",%progbits,_ZN15ArduinoHardware4initEv,comdat
 4989              		.align	1
 4990              		.weak	_ZN15ArduinoHardware4initEv
 4991              		.thumb
 4992              		.thumb_func
 4994              	_ZN15ArduinoHardware4initEv:
 4995              		.fnstart
 4996              	.LFB1136:
 4997              		.file 24 "./lib/ros_lib/ArduinoHardware.h"
   1:./lib/ros_lib/ArduinoHardware.h **** /* 
   2:./lib/ros_lib/ArduinoHardware.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ArduinoHardware.h ****  *
   4:./lib/ros_lib/ArduinoHardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ArduinoHardware.h ****  * All rights reserved.
   6:./lib/ros_lib/ArduinoHardware.h ****  *
   7:./lib/ros_lib/ArduinoHardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ArduinoHardware.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ArduinoHardware.h ****  * are met:
  10:./lib/ros_lib/ArduinoHardware.h ****  *
  11:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ArduinoHardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ArduinoHardware.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ArduinoHardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ArduinoHardware.h ****  *    with the distribution.
  17:./lib/ros_lib/ArduinoHardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ArduinoHardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ArduinoHardware.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ArduinoHardware.h ****  *
  21:./lib/ros_lib/ArduinoHardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ArduinoHardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ArduinoHardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ArduinoHardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ArduinoHardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ArduinoHardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ArduinoHardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ArduinoHardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ArduinoHardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ArduinoHardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ArduinoHardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ArduinoHardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ArduinoHardware.h ****  */
  34:./lib/ros_lib/ArduinoHardware.h **** 
  35:./lib/ros_lib/ArduinoHardware.h **** #ifndef ROS_ARDUINO_HARDWARE_H_
  36:./lib/ros_lib/ArduinoHardware.h **** #define ROS_ARDUINO_HARDWARE_H_
  37:./lib/ros_lib/ArduinoHardware.h **** 
  38:./lib/ros_lib/ArduinoHardware.h **** #include "stm32f10x.h"
  39:./lib/ros_lib/ArduinoHardware.h **** #include "stm32_time.h"
  40:./lib/ros_lib/ArduinoHardware.h **** #include "led.h"
  41:./lib/ros_lib/ArduinoHardware.h **** 
  42:./lib/ros_lib/ArduinoHardware.h **** #define BUFFER_SIZE 512
  43:./lib/ros_lib/ArduinoHardware.h **** 
  44:./lib/ros_lib/ArduinoHardware.h **** 
  45:./lib/ros_lib/ArduinoHardware.h **** volatile uint16_t USART_FIFO[BUFFER_SIZE];
  46:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTIN;
  47:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTOUT;
  48:./lib/ros_lib/ArduinoHardware.h **** 
  49:./lib/ros_lib/ArduinoHardware.h **** class ArduinoHardware {
  50:./lib/ros_lib/ArduinoHardware.h ****   public:
  51:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(USART_TypeDef* io , long baud= 115200){
  52:./lib/ros_lib/ArduinoHardware.h ****       iostream = io;
  53:./lib/ros_lib/ArduinoHardware.h ****       baud_ = baud;
  54:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  55:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  56:./lib/ros_lib/ArduinoHardware.h ****     }
  57:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware()
  58:./lib/ros_lib/ArduinoHardware.h ****     {
  59:./lib/ros_lib/ArduinoHardware.h ****       /* Leonardo support */
  60:./lib/ros_lib/ArduinoHardware.h ****       iostream = USART1;
  61:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  63:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  64:./lib/ros_lib/ArduinoHardware.h ****     }
  65:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(ArduinoHardware& h){
  66:./lib/ros_lib/ArduinoHardware.h ****       this->iostream = iostream;
  67:./lib/ros_lib/ArduinoHardware.h ****       this->baud_ = h.baud_;
  68:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  69:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  70:./lib/ros_lib/ArduinoHardware.h ****     }
  71:./lib/ros_lib/ArduinoHardware.h ****   
  72:./lib/ros_lib/ArduinoHardware.h ****     void setBaud(long baud){
  73:./lib/ros_lib/ArduinoHardware.h ****       this->baud_= baud;
  74:./lib/ros_lib/ArduinoHardware.h ****     }
  75:./lib/ros_lib/ArduinoHardware.h ****   
  76:./lib/ros_lib/ArduinoHardware.h ****     int getBaud(){return baud_;}
  77:./lib/ros_lib/ArduinoHardware.h **** 
  78:./lib/ros_lib/ArduinoHardware.h ****     void init(){
 4998              		.loc 24 78 0
 4999              		.cfi_startproc
 5000              		@ args = 0, pretend = 0, frame = 24
 5001              		@ frame_needed = 0, uses_anonymous_args = 0
 5002              	.LVL632:
 5003 0000 70B5     		push	{r4, r5, r6, lr}
 5004              		.save {r4, r5, r6, lr}
 5005              	.LCFI56:
 5006              		.cfi_def_cfa_offset 16
 5007              		.cfi_offset 4, -16
 5008              		.cfi_offset 5, -12
 5009              		.cfi_offset 6, -8
 5010              		.cfi_offset 14, -4
 5011 0002 0446     		mov	r4, r0
 5012              		.pad #24
 5013 0004 86B0     		sub	sp, sp, #24
 5014              	.LCFI57:
 5015              		.cfi_def_cfa_offset 40
  79:./lib/ros_lib/ArduinoHardware.h ****       USART_InitTypeDef usart1_init_struct;
  80:./lib/ros_lib/ArduinoHardware.h ****       /* Bit configuration structure for GPIOA PIN9 and PIN10 */
  81:./lib/ros_lib/ArduinoHardware.h ****       GPIO_InitTypeDef gpioa_init_struct;
  82:./lib/ros_lib/ArduinoHardware.h **** 
  83:./lib/ros_lib/ArduinoHardware.h ****       /* Enalbe clock for USART1, AFIO and GPIOA */
  84:./lib/ros_lib/ArduinoHardware.h ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2Periph_AFIO | 
  85:./lib/ros_lib/ArduinoHardware.h ****                            RCC_APB2Periph_GPIOA, ENABLE);
  86:./lib/ros_lib/ArduinoHardware.h ****                             
  87:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Tx */
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_9;
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  90:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
  91:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 5016              		.loc 24 91 0
 5017 0006 214D     		ldr	r5, .L264
  85:./lib/ros_lib/ArduinoHardware.h ****                             
 5018              		.loc 24 85 0
 5019 0008 0121     		movs	r1, #1
 5020 000a 44F20500 		movw	r0, #16389
 5021              	.LVL633:
 5022 000e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 5023              	.LVL634:
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 5024              		.loc 24 88 0
 5025 0012 4FF40073 		mov	r3, #512
 5026 0016 ADF80430 		strh	r3, [sp, #4]	@ movhi
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 5027              		.loc 24 89 0
 5028 001a 0326     		movs	r6, #3
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 5029              		.loc 24 90 0
 5030 001c 1823     		movs	r3, #24
 5031              		.loc 24 91 0
 5032 001e 01A9     		add	r1, sp, #4
 5033 0020 2846     		mov	r0, r5
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 5034              		.loc 24 90 0
 5035 0022 8DF80730 		strb	r3, [sp, #7]
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 5036              		.loc 24 89 0
 5037 0026 8DF80660 		strb	r6, [sp, #6]
 5038              		.loc 24 91 0
 5039 002a FFF7FEFF 		bl	GPIO_Init
 5040              	.LVL635:
  92:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
  93:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_10;
 5041              		.loc 24 93 0
 5042 002e 4FF48063 		mov	r3, #1024
 5043 0032 ADF80430 		strh	r3, [sp, #4]	@ movhi
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  95:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 5044              		.loc 24 95 0
 5045 0036 0423     		movs	r3, #4
  96:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 5046              		.loc 24 96 0
 5047 0038 0DEB0301 		add	r1, sp, r3
 5048 003c 2846     		mov	r0, r5
  95:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 5049              		.loc 24 95 0
 5050 003e 8DF80730 		strb	r3, [sp, #7]
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 5051              		.loc 24 94 0
 5052 0042 8DF80660 		strb	r6, [sp, #6]
 5053              		.loc 24 96 0
 5054 0046 FFF7FEFF 		bl	GPIO_Init
 5055              	.LVL636:
  97:./lib/ros_lib/ArduinoHardware.h **** 
  98:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 */
  99:./lib/ros_lib/ArduinoHardware.h ****       USART_Cmd(iostream, ENABLE);  
 5056              		.loc 24 99 0
 5057 004a 2068     		ldr	r0, [r4]
 5058 004c 0121     		movs	r1, #1
 5059 004e FFF7FEFF 		bl	USART_Cmd
 5060              	.LVL637:
 100:./lib/ros_lib/ArduinoHardware.h ****       /* Baud rate 115200, 8-bit data, One stop bit
 101:./lib/ros_lib/ArduinoHardware.h ****       * No parity, Do both Rx and Tx, No HW flow control
 102:./lib/ros_lib/ArduinoHardware.h ****       */
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_BaudRate = baud_;   
 5061              		.loc 24 103 0
 5062 0052 6368     		ldr	r3, [r4, #4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 5063              		.loc 24 107 0
 5064 0054 0C22     		movs	r2, #12
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 5065              		.loc 24 103 0
 5066 0056 0293     		str	r3, [sp, #8]
 108:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 109:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 110:./lib/ros_lib/ArduinoHardware.h ****       USART_Init(iostream, &usart1_init_struct);
 5067              		.loc 24 110 0
 5068 0058 02A9     		add	r1, sp, #8
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 5069              		.loc 24 104 0
 5070 005a 0023     		movs	r3, #0
 5071              		.loc 24 110 0
 5072 005c 2068     		ldr	r0, [r4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 5073              		.loc 24 104 0
 5074 005e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 5075              		.loc 24 105 0
 5076 0062 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 5077              		.loc 24 106 0
 5078 0066 ADF81030 		strh	r3, [sp, #16]	@ movhi
 108:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 5079              		.loc 24 108 0
 5080 006a ADF81430 		strh	r3, [sp, #20]	@ movhi
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 5081              		.loc 24 107 0
 5082 006e ADF81220 		strh	r2, [sp, #18]	@ movhi
 5083              		.loc 24 110 0
 5084 0072 FFF7FEFF 		bl	USART_Init
 5085              	.LVL638:
 111:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 112:./lib/ros_lib/ArduinoHardware.h ****       USART_ITConfig(iostream, USART_IT_RXNE, ENABLE);
 5086              		.loc 24 112 0
 5087 0076 0122     		movs	r2, #1
 5088 0078 40F22551 		movw	r1, #1317
 5089 007c 2068     		ldr	r0, [r4]
 5090 007e FFF7FEFF 		bl	USART_ITConfig
 5091              	.LVL639:
 5092              	.LBB384:
 5093              	.LBB385:
 5094              		.file 25 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
   1:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**************************************************************************//**
   2:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @file     core_cm3.h
   3:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @version  V1.30
   5:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @date     30. October 2009
   6:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
   7:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @note
   8:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  10:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  11:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  15:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  16:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  22:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
  23:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  24:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CORE_H__
  26:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  27:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  29:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 10: \n
  31:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  34:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 530: \n
  35:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     return(__regBasePri); \n
  36:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * . 
  38:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 550: \n
  39:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  42:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 754: \n
  43:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  46:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 750: \n
  47:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  50:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 528: \n
  51:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  54:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 751: \n
  55:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  58:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  60:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  61:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  62:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -save */
  63:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e10  */
  64:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e530 */
  65:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e550 */
  66:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e754 */
  67:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e750 */
  68:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e528 */
  69:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e751 */
  70:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  71:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  72:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - CMSIS version number
  75:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
  78:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  79:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  80:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
  81:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  extern "C" {
  82:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif 
  83:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  84:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  88:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  90:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  92:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__ICCARM__)
  93:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
  95:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  96:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  97:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * IO definitions
 106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
 111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                 Register Abstraction
 122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  @{
 125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
 126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }  NVIC_Type;                                               
 148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SCB_Type;                                                
 177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                                      
 314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for SysTick
 363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SysTick_Type;
 372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  union  
 413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   {
 414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } ITM_Type;                                                
 445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 505:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0;
 506:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 510:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1;
 511:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 512:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } InterruptType_Type;
 513:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 514:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 518:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 522:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 525:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 529:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 530:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 534:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 535:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 536:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 537:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } MPU_Type;                                                
 549:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 550:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Type Register */
 551:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 554:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 557:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 560:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Control Register */
 561:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 564:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 567:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 570:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Number Register */
 571:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 574:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Base Address Register */
 575:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 578:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 581:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 584:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 588:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 591:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 594:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 597:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 600:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 603:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 606:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 609:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 612:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 614:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 615:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 616:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 619:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 620:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 621:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 622:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } CoreDebug_Type;
 627:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 628:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 632:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 635:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 638:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 641:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 644:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 647:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 650:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 653:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 656:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 659:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 662:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 665:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 669:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 672:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 676:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 679:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 682:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 685:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 688:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 691:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 694:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 697:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 700:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 703:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 706:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 709:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 713:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 714:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 722:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 729:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 733:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 734:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 736:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 737:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 738:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 740:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 741:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 745:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 749:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 753:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 757:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 758:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 759:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 760:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 762:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ARM armcc specific functions */
 764:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 765:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 768:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                             __nop
 769:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFI                             __wfi
 770:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFE                             __wfe
 771:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __SEV                             __sev
 772:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __REV                             __rev
 776:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __RBIT                            __rbit
 777:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 784:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 785:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 790:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 791:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 792:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 794:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
 795:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 796:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
 797:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 798:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 800:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 801:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 803:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 805:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 808:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 810:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 811:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 813:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
 814:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 815:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
 817:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 818:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 820:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 821:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 823:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 825:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 828:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 830:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 831:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 833:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 834:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 835:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 836:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 838:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 840:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 841:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 843:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 844:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 845:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 846:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 848:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 850:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 851:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 853:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 854:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 856:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 858:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __CLREX(void);
 859:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 860:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 861:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 863:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 864:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 865:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 866:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 867:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 869:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 870:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 872:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 873:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 874:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 875:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 876:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 878:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 879:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 881:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 882:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 883:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 885:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 887:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 888:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 890:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   priMask  PriMask
 891:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 892:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 894:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 896:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 897:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 899:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 900:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 901:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 902:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 903:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 905:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 906:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 908:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask faultMask value
 909:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 910:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
 911:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 912:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 914:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 915:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
 916:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
 917:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
 918:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 919:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
 920:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 921:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 923:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 924:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
 925:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 926:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
 927:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 928:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
 929:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 930:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 932:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 934:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 935:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 937:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 939:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CLREX                           __clrex
 940:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 941:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 942:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 944:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 945:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 946:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 947:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 948:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 950:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regBasePri);
 952:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 953:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 954:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 955:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 957:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 958:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 959:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 960:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 961:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 963:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 966:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 967:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 968:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 970:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 971:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 972:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 974:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 976:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regPriMask);
 978:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 979:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 980:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 981:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 983:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
 984:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 985:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 987:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 989:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regPriMask = (priMask);
 991:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 992:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 993:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 994:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 996:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 997:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 998:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 999:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1000:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1002:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regFaultMask);
1004:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1005:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1006:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1007:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1009:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1011:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1012:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1013:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1015:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1018:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1019:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1020:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1021:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1022:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
1023:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1024:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1025:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1026:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1028:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regControl);
1030:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1031:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1032:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1033:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1034:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1035:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1036:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1037:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1038:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1039:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1041:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regControl = control;
1043:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1044:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1045:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1047:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1048:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1049:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* IAR iccarm specific functions */
1051:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1052:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1055:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1058:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1064:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1076:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1077:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1078:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1080:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1081:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1082:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1083:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1084:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1086:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1087:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1089:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1091:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1094:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1096:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1097:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1099:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* GNU gcc specific functions */
1203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
1261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
1263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
1265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
1270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
1272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
1274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
1281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
1290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
1299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
1301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** * 
1316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** *  @return Control value
1317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in integer value
1338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* TASKING carm specific functions */
1437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*
1439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Including the CMSIS ones.
1442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
1445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   Core  Function Interface containing:
1449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core NVIC Functions
1450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core SysTick Functions
1451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core Reset Functions
1452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
1453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@{*/
1454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t reg_value;
1471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   
1473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return priority grouping field 
1485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 5095              		.loc 25 1504 0
 5096 0082 034B     		ldr	r3, .L264+4
 5097 0084 2022     		movs	r2, #32
 5098 0086 5A60     		str	r2, [r3, #4]
 5099              	.LVL640:
 5100              	.LBE385:
 5101              	.LBE384:
 113:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 global interrupt */
 114:./lib/ros_lib/ArduinoHardware.h ****       NVIC_EnableIRQ(USART1_IRQn);
 115:./lib/ros_lib/ArduinoHardware.h ****     }
 5102              		.loc 24 115 0
 5103 0088 06B0     		add	sp, sp, #24
 5104              	.LCFI58:
 5105              		.cfi_def_cfa_offset 16
 5106              		@ sp needed
 5107 008a 70BD     		pop	{r4, r5, r6, pc}
 5108              	.LVL641:
 5109              	.L265:
 5110              		.align	2
 5111              	.L264:
 5112 008c 00080140 		.word	1073809408
 5113 0090 00E100E0 		.word	-536813312
 5114              		.cfi_endproc
 5115              	.LFE1136:
 5116              		.fnend
 5118              		.text
 5119              		.align	1
 5120              		.global	USART1_IRQHandler
 5121              		.thumb
 5122              		.thumb_func
 5124              	USART1_IRQHandler:
 5125              		.fnstart
 5126              	.LFB1140:
 116:./lib/ros_lib/ArduinoHardware.h **** 
 117:./lib/ros_lib/ArduinoHardware.h ****     int read(){
 118:./lib/ros_lib/ArduinoHardware.h ****       if(USART_CNTIN == USART_CNTOUT)
 119:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 120:./lib/ros_lib/ArduinoHardware.h ****       
 121:./lib/ros_lib/ArduinoHardware.h ****       int returnVal = USART_FIFO[USART_CNTOUT];
 122:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 123:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 124:./lib/ros_lib/ArduinoHardware.h ****     }
 125:./lib/ros_lib/ArduinoHardware.h **** 
 126:./lib/ros_lib/ArduinoHardware.h ****     void write(uint8_t* data, int length){
 127:./lib/ros_lib/ArduinoHardware.h ****       for(int i=0; i<length; i++){
 128:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 129:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 130:./lib/ros_lib/ArduinoHardware.h ****       }
 131:./lib/ros_lib/ArduinoHardware.h ****     }
 132:./lib/ros_lib/ArduinoHardware.h **** 
 133:./lib/ros_lib/ArduinoHardware.h ****     uint32_t time(){
 134:./lib/ros_lib/ArduinoHardware.h ****       return millis();
 135:./lib/ros_lib/ArduinoHardware.h ****     }
 136:./lib/ros_lib/ArduinoHardware.h **** 
 137:./lib/ros_lib/ArduinoHardware.h ****   protected:
 138:./lib/ros_lib/ArduinoHardware.h ****     USART_TypeDef* iostream;
 139:./lib/ros_lib/ArduinoHardware.h ****     long baud_;
 140:./lib/ros_lib/ArduinoHardware.h **** 
 141:./lib/ros_lib/ArduinoHardware.h **** };
 142:./lib/ros_lib/ArduinoHardware.h **** 
 143:./lib/ros_lib/ArduinoHardware.h **** 
 144:./lib/ros_lib/ArduinoHardware.h **** 
 145:./lib/ros_lib/ArduinoHardware.h **** extern "C"{
 146:./lib/ros_lib/ArduinoHardware.h ****   void USART1_IRQHandler(void){
 5127              		.loc 24 146 0
 5128              		.cfi_startproc
 5129              		@ args = 0, pretend = 0, frame = 0
 5130              		@ frame_needed = 0, uses_anonymous_args = 0
 5131 017c 38B5     		push	{r3, r4, r5, lr}
 5132              		.save {r3, r4, r5, lr}
 5133              	.LCFI59:
 5134              		.cfi_def_cfa_offset 16
 5135              		.cfi_offset 3, -16
 5136              		.cfi_offset 4, -12
 5137              		.cfi_offset 5, -8
 5138              		.cfi_offset 14, -4
 147:./lib/ros_lib/ArduinoHardware.h **** 
 148:./lib/ros_lib/ArduinoHardware.h ****     if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET 
 5139              		.loc 24 148 0
 5140 017e 40F22551 		movw	r1, #1317
 5141 0182 0F48     		ldr	r0, .L273
 5142 0184 FFF7FEFF 		bl	USART_GetITStatus
 5143              	.LVL642:
 149:./lib/ros_lib/ArduinoHardware.h ****       && USART_CNTIN != (( USART_CNTOUT - 1 + BUFFER_SIZE) % BUFFER_SIZE)){
 5144              		.loc 24 149 0
 5145 0188 40B1     		cbz	r0, .L267
 5146              		.loc 24 149 0 is_stmt 0 discriminator 1
 5147 018a 0E4C     		ldr	r4, .L273+4
 5148 018c 236A     		ldr	r3, [r4, #32]
 5149 018e 626A     		ldr	r2, [r4, #36]
 5150 0190 03F2FF13 		addw	r3, r3, #511
 5151 0194 C3F30803 		ubfx	r3, r3, #0, #9
 5152 0198 9342     		cmp	r3, r2
 5153 019a 04D1     		bne	.L268
 5154              	.L267:
 150:./lib/ros_lib/ArduinoHardware.h **** 
 151:./lib/ros_lib/ArduinoHardware.h ****       USART_FIFO[USART_CNTIN] = USART_ReceiveData(USART1);
 152:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 153:./lib/ros_lib/ArduinoHardware.h ****     }else{
 154:./lib/ros_lib/ArduinoHardware.h ****       // Should NEVER reach this point!
 155:./lib/ros_lib/ArduinoHardware.h ****       (void)USART_ReceiveData(USART1);  // Clear inerrupt flag by reading byte
 156:./lib/ros_lib/ArduinoHardware.h ****     }
 157:./lib/ros_lib/ArduinoHardware.h ****   }   
 5155              		.loc 24 157 0 is_stmt 1
 5156 019c BDE83840 		pop	{r3, r4, r5, lr}
 5157              	.LCFI60:
 5158              		.cfi_remember_state
 5159              		.cfi_restore 14
 5160              		.cfi_restore 5
 5161              		.cfi_restore 4
 5162              		.cfi_restore 3
 5163              		.cfi_def_cfa_offset 0
 155:./lib/ros_lib/ArduinoHardware.h ****     }
 5164              		.loc 24 155 0
 5165 01a0 0748     		ldr	r0, .L273
 5166 01a2 FFF7FEBF 		b	USART_ReceiveData
 5167              	.LVL643:
 5168              	.L268:
 5169              	.LCFI61:
 5170              		.cfi_restore_state
 151:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 5171              		.loc 24 151 0
 5172 01a6 0648     		ldr	r0, .L273
 5173 01a8 656A     		ldr	r5, [r4, #36]
 5174 01aa FFF7FEFF 		bl	USART_ReceiveData
 5175              	.LVL644:
 5176 01ae 04EB4505 		add	r5, r4, r5, lsl #1
 5177 01b2 2885     		strh	r0, [r5, #40]	@ movhi
 152:./lib/ros_lib/ArduinoHardware.h ****     }else{
 5178              		.loc 24 152 0
 5179 01b4 636A     		ldr	r3, [r4, #36]
 5180 01b6 0133     		adds	r3, r3, #1
 5181 01b8 C3F30803 		ubfx	r3, r3, #0, #9
 5182 01bc 6362     		str	r3, [r4, #36]
 5183 01be 38BD     		pop	{r3, r4, r5, pc}
 5184              	.L274:
 5185              		.align	2
 5186              	.L273:
 5187 01c0 00380140 		.word	1073821696
 5188 01c4 00000000 		.word	.LANCHOR1
 5189              		.cfi_endproc
 5190              	.LFE1140:
 5191              		.fnend
 5193              		.section	.text._ZN13geometry_msgs16TransformStampedC2Ev,"axG",%progbits,_ZN13geometry_msgs16Transf
 5194              		.align	1
 5195              		.weak	_ZN13geometry_msgs16TransformStampedC2Ev
 5196              		.thumb
 5197              		.thumb_func
 5199              	_ZN13geometry_msgs16TransformStampedC2Ev:
 5200              		.fnstart
 5201              	.LFB1254:
  21:./lib/ros_lib/geometry_msgs/TransformStamped.h ****       header(),
 5202              		.loc 17 21 0
 5203              		.cfi_startproc
 5204              		@ args = 0, pretend = 0, frame = 0
 5205              		@ frame_needed = 0, uses_anonymous_args = 0
 5206              		@ link register save eliminated.
 5207              	.LVL645:
 5208              	.LBB411:
  24:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 5209              		.loc 17 24 0
 5210 0000 0C4A     		ldr	r2, .L276
 5211              	.LBB412:
 5212              	.LBB413:
 5213              	.LBB414:
 5214              	.LBB415:
  24:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 5215              		.loc 8 24 0
 5216 0002 0D49     		ldr	r1, .L276+4
 5217              	.LBE415:
 5218              	.LBE414:
 5219              	.LBE413:
 5220              	.LBE412:
  24:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 5221              		.loc 17 24 0
 5222 0004 0260     		str	r2, [r0]
 5223              	.LVL646:
 5224              	.LBB424:
 5225              	.LBB425:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 5226              		.loc 6 23 0
 5227 0006 0D4A     		ldr	r2, .L276+8
 5228              	.LBE425:
 5229              	.LBE424:
 5230              	.LBB429:
 5231              	.LBB422:
 5232              	.LBB418:
 5233              	.LBB416:
  24:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 5234              		.loc 8 24 0
 5235 0008 0163     		str	r1, [r0, #48]
 5236              	.LBE416:
 5237              	.LBE418:
 5238              	.LBE422:
 5239              	.LBE429:
 5240              	.LBB430:
 5241              	.LBB428:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 5242              		.loc 6 23 0
 5243 000a 4260     		str	r2, [r0, #4]
 5244 000c 0022     		movs	r2, #0
 5245 000e 8260     		str	r2, [r0, #8]
 5246              	.LVL647:
 5247              	.LBB426:
 5248              	.LBB427:
 5249              		.file 26 "./lib/ros_lib/ros/time.h"
   1:./lib/ros_lib/ros/time.h **** /*
   2:./lib/ros_lib/ros/time.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/time.h ****  *
   4:./lib/ros_lib/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/time.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/time.h ****  *
   7:./lib/ros_lib/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/time.h ****  * are met:
  10:./lib/ros_lib/ros/time.h ****  *
  11:./lib/ros_lib/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/time.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/time.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/time.h ****  *
  21:./lib/ros_lib/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/time.h ****  */
  34:./lib/ros_lib/ros/time.h **** 
  35:./lib/ros_lib/ros/time.h **** #ifndef ROS_TIME_H_
  36:./lib/ros_lib/ros/time.h **** #define ROS_TIME_H_
  37:./lib/ros_lib/ros/time.h **** 
  38:./lib/ros_lib/ros/time.h **** #include <math.h>
  39:./lib/ros_lib/ros/time.h **** #include <stdint.h>
  40:./lib/ros_lib/ros/time.h **** 
  41:./lib/ros_lib/ros/time.h **** #include "ros/duration.h"
  42:./lib/ros_lib/ros/time.h **** 
  43:./lib/ros_lib/ros/time.h **** namespace ros
  44:./lib/ros_lib/ros/time.h **** {
  45:./lib/ros_lib/ros/time.h ****   void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  46:./lib/ros_lib/ros/time.h **** 
  47:./lib/ros_lib/ros/time.h ****   class Time
  48:./lib/ros_lib/ros/time.h ****   {
  49:./lib/ros_lib/ros/time.h ****     public:
  50:./lib/ros_lib/ros/time.h ****       uint32_t sec, nsec;
  51:./lib/ros_lib/ros/time.h **** 
  52:./lib/ros_lib/ros/time.h ****       Time() : sec(0), nsec(0) {}
 5250              		.loc 26 52 0
 5251 0010 C260     		str	r2, [r0, #12]
 5252 0012 0261     		str	r2, [r0, #16]
 5253              	.LVL648:
 5254              	.LBE427:
 5255              	.LBE426:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 5256              		.loc 6 23 0
 5257 0014 0A4A     		ldr	r2, .L276+12
 5258 0016 4261     		str	r2, [r0, #20]
 5259              	.LVL649:
 5260              	.LBE428:
 5261              	.LBE430:
  24:./lib/ros_lib/geometry_msgs/TransformStamped.h ****     {
 5262              		.loc 17 24 0
 5263 0018 8261     		str	r2, [r0, #24]
 5264              	.LVL650:
 5265              	.LBB431:
 5266              	.LBB423:
  22:./lib/ros_lib/geometry_msgs/Transform.h ****     {
 5267              		.loc 16 22 0
 5268 001a 0A4A     		ldr	r2, .L276+16
 5269 001c C261     		str	r2, [r0, #28]
 5270              	.LVL651:
 5271              	.LBB419:
 5272              	.LBB420:
  22:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
 5273              		.loc 11 22 0
 5274 001e 0A4A     		ldr	r2, .L276+20
 5275 0020 0262     		str	r2, [r0, #32]
 5276 0022 0022     		movs	r2, #0
 5277 0024 4262     		str	r2, [r0, #36]	@ float
 5278 0026 8262     		str	r2, [r0, #40]	@ float
 5279 0028 C262     		str	r2, [r0, #44]	@ float
 5280              	.LVL652:
 5281              	.LBE420:
 5282              	.LBE419:
 5283              	.LBB421:
 5284              	.LBB417:
  24:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 5285              		.loc 8 24 0
 5286 002a 4263     		str	r2, [r0, #52]	@ float
 5287 002c 8263     		str	r2, [r0, #56]	@ float
 5288 002e C263     		str	r2, [r0, #60]	@ float
 5289 0030 0264     		str	r2, [r0, #64]	@ float
 5290              	.LVL653:
 5291              	.LBE417:
 5292              	.LBE421:
 5293              	.LBE423:
 5294              	.LBE431:
 5295              	.LBE411:
  26:./lib/ros_lib/geometry_msgs/TransformStamped.h **** 
 5296              		.loc 17 26 0
 5297 0032 7047     		bx	lr
 5298              	.L277:
 5299              		.align	2
 5300              	.L276:
 5301 0034 08000000 		.word	_ZTVN13geometry_msgs16TransformStampedE+8
 5302 0038 08000000 		.word	_ZTVN13geometry_msgs10QuaternionE+8
 5303 003c 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 5304 0040 C6030000 		.word	.LC35
 5305 0044 08000000 		.word	_ZTVN13geometry_msgs9TransformE+8
 5306 0048 08000000 		.word	_ZTVN13geometry_msgs7Vector3E+8
 5307              		.cfi_endproc
 5308              	.LFE1254:
 5309              		.cantunwind
 5310              		.fnend
 5312              		.weak	_ZN13geometry_msgs16TransformStampedC1Ev
 5313              		.thumb_set _ZN13geometry_msgs16TransformStampedC1Ev,_ZN13geometry_msgs16TransformStampedC2Ev
 5314              		.text
 5315              		.align	1
 5316              		.global	EXTI2_IRQHandler
 5317              		.thumb
 5318              		.thumb_func
 5320              	EXTI2_IRQHandler:
 5321              		.fnstart
 5322              	.LFB1333:
 116:src/main.cpp  **** }
 117:src/main.cpp  **** 
 118:src/main.cpp  **** 
 119:src/main.cpp  **** ros::Subscriber<roberto_msgs::MotorState> motor_sub("throttled_joy_vel", &motor_cb);
 120:src/main.cpp  **** //ros::Subscriber<sensor_msgs::Joy> motor_sub("joy", &motor_cb);
 121:src/main.cpp  **** ros::Subscriber<std_msgs::UInt8> led_sub("led", &led_cb);
 122:src/main.cpp  **** 
 123:src/main.cpp  **** geometry_msgs::TransformStamped odom_trans;
 124:src/main.cpp  **** tf::TransformBroadcaster odom_broadcaster;
 125:src/main.cpp  **** 
 126:src/main.cpp  **** 
 127:src/main.cpp  **** nav_msgs::Odometry odom;
 128:src/main.cpp  **** ros::Publisher odom_pub("odom", &odom);
 129:src/main.cpp  **** 
 130:src/main.cpp  **** int main(){
 131:src/main.cpp  ****   /* System Clocks Configuration */
 132:src/main.cpp  ****   RCC_Configuration();
 133:src/main.cpp  **** 
 134:src/main.cpp  ****   GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
 135:src/main.cpp  ****   I2C1_Init();
 136:src/main.cpp  ****   SysTick_Init();
 137:src/main.cpp  ****   DEBUG_Init();
 138:src/main.cpp  ****   SHUTDOWN_Init();
 139:src/main.cpp  ****   LED_Init();
 140:src/main.cpp  **** 
 141:src/main.cpp  ****   /*str_msg.data = (float *)malloc(sizeof(float)*4);
 142:src/main.cpp  ****   str_msg.data_length = 4;*/
 143:src/main.cpp  **** 
 144:src/main.cpp  ****   nh.initNode();
 145:src/main.cpp  **** 
 146:src/main.cpp  ****   nh.subscribe(motor_sub);
 147:src/main.cpp  ****   nh.subscribe(led_sub);
 148:src/main.cpp  ****   nh.advertise(odom_pub);
 149:src/main.cpp  ****   odom_broadcaster.init(nh);
 150:src/main.cpp  **** 
 151:src/main.cpp  ****   while(!nh.connected()){
 152:src/main.cpp  ****     nh.spinOnce();
 153:src/main.cpp  ****   }
 154:src/main.cpp  **** 
 155:src/main.cpp  ****   shuttingDown = false;
 156:src/main.cpp  **** 
 157:src/main.cpp  ****   
 158:src/main.cpp  **** 
 159:src/main.cpp  ****   float KP;
 160:src/main.cpp  ****   if(!nh.getParam("serial_node/KP", &KP, 1)){
 161:src/main.cpp  ****     KP = 5000;
 162:src/main.cpp  ****   }
 163:src/main.cpp  ****   float KI;
 164:src/main.cpp  ****   if(!nh.getParam("serial_node/KI", &KI, 1)){
 165:src/main.cpp  ****     KI = 5000;
 166:src/main.cpp  ****   }
 167:src/main.cpp  ****   float KD;
 168:src/main.cpp  ****   if(!nh.getParam("serial_node/KD", &KD, 1)){
 169:src/main.cpp  ****     KD = 4;
 170:src/main.cpp  ****   }
 171:src/main.cpp  ****   float integralSaturation;
 172:src/main.cpp  ****   if(!nh.getParam("serial_node/integralSaturation", &integralSaturation, 1)){
 173:src/main.cpp  ****     integralSaturation = 10000;
 174:src/main.cpp  ****   }
 175:src/main.cpp  ****   float wheelRadius;
 176:src/main.cpp  ****   if(!nh.getParam("serial_node/wheelRadius", &wheelRadius, 1)){
 177:src/main.cpp  ****     wheelRadius = 0.04;
 178:src/main.cpp  ****   }
 179:src/main.cpp  **** 
 180:src/main.cpp  ****   if(!nh.getParam("serial_node/widthBetweenMotorPivotPoints", &L, 1)){
 181:src/main.cpp  ****     L = 0.17;
 182:src/main.cpp  ****   }
 183:src/main.cpp  **** 
 184:src/main.cpp  ****   if(!nh.getParam("serial_node/motorPivotPointToWheel", &d, 1)){
 185:src/main.cpp  ****     d = 0.06;
 186:src/main.cpp  ****   }
 187:src/main.cpp  **** 
 188:src/main.cpp  ****   delay(1000);
 189:src/main.cpp  **** 
 190:src/main.cpp  ****   motorSettings SL(MOTOR_TYPE_SERVO, "servo_left", TIM4, 4);
 191:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 192:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 193:src/main.cpp  **** 
 194:src/main.cpp  ****   motorSettings SR(MOTOR_TYPE_SERVO, "servo_right", TIM4, 3);
 195:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 196:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 197:src/main.cpp  **** 
 198:src/main.cpp  ****   motorSettings FR(MOTOR_TYPE_DC_MOTOR, "front_right", TIM1, 1);
 199:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 200:src/main.cpp  ****               GPIO_Pin_15, GPIOC, GPIO_Pin_0, GPIOA,
 201:src/main.cpp  ****               GPIO_Pin_8, GPIOA);
 202:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 203:src/main.cpp  ****   FR.setRegulator(KP,KI,KD,integralSaturation);
 204:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 205:src/main.cpp  **** 
 206:src/main.cpp  ****   motorSettings FL(MOTOR_TYPE_DC_MOTOR, "front_left", TIM3, 4);
 207:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 208:src/main.cpp  ****               GPIO_Pin_4, GPIOA,GPIO_Pin_10,GPIOB,
 209:src/main.cpp  ****               GPIO_Pin_1, GPIOB);
 210:src/main.cpp  ****   FL.encoderAddr = (0x10);
 211:src/main.cpp  ****   FL.setRegulator(KP,KI,KD,integralSaturation);
 212:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 213:src/main.cpp  **** 
 214:src/main.cpp  ****   motorSettings RL(MOTOR_TYPE_DC_MOTOR, "rear_left", TIM2, 4);
 215:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 216:src/main.cpp  ****     GPIO_Pin_13, GPIOB, GPIO_Pin_14, GPIOB,
 217:src/main.cpp  ****     GPIO_Pin_3, GPIOA);
 218:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 219:src/main.cpp  ****   RL.setRegulator(KP,KI,KD,integralSaturation);
 220:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 221:src/main.cpp  **** 
 222:src/main.cpp  ****   motorSettings RR(MOTOR_TYPE_DC_MOTOR, "rear_right", TIM1, 4);
 223:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 224:src/main.cpp  ****               GPIO_Pin_15, GPIOA, GPIO_Pin_3, GPIOB,
 225:src/main.cpp  ****               GPIO_Pin_11, GPIOA);
 226:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 227:src/main.cpp  ****   RR.setRegulator(KP,KI,KD,integralSaturation);
 228:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 229:src/main.cpp  **** 
 230:src/main.cpp  ****   char error[150];
 231:src/main.cpp  ****   servo_left = motor::createMotor(&SL);
 232:src/main.cpp  ****   if(!servo_left->motorInit()){
 233:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 234:src/main.cpp  ****     nh.logerror(error);
 235:src/main.cpp  ****   }
 236:src/main.cpp  **** 
 237:src/main.cpp  ****   servo_right = motor::createMotor(&SR);
 238:src/main.cpp  ****   if(!servo_right->motorInit()){
 239:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 240:src/main.cpp  ****     nh.logerror(error);
 241:src/main.cpp  ****   }
 242:src/main.cpp  **** 
 243:src/main.cpp  ****   front_left = motor::createMotor(&FL);
 244:src/main.cpp  ****   if(!front_left->motorInit()){
 245:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 246:src/main.cpp  ****     nh.logerror(error);
 247:src/main.cpp  ****   }
 248:src/main.cpp  **** 
 249:src/main.cpp  ****   front_right = motor::createMotor(&FR);
 250:src/main.cpp  ****   if(!front_right->motorInit()){
 251:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 252:src/main.cpp  ****     nh.logerror(error);
 253:src/main.cpp  ****   }
 254:src/main.cpp  **** 
 255:src/main.cpp  ****   rear_left = motor::createMotor(&RL);
 256:src/main.cpp  ****   if(!rear_left->motorInit()){
 257:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 258:src/main.cpp  ****     nh.logerror(error);
 259:src/main.cpp  ****   }
 260:src/main.cpp  **** 
 261:src/main.cpp  ****   rear_right = motor::createMotor(&RR);
 262:src/main.cpp  ****   if(!rear_right->motorInit()){
 263:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 264:src/main.cpp  ****     nh.logerror(error);
 265:src/main.cpp  ****   }
 266:src/main.cpp  ****   
 267:src/main.cpp  ****   
 268:src/main.cpp  ****   led_set(0);
 269:src/main.cpp  **** 
 270:src/main.cpp  ****   servo_left->setReference(0);
 271:src/main.cpp  ****   servo_right->setReference(0);
 272:src/main.cpp  ****   front_right->setReference(0);
 273:src/main.cpp  ****   front_left->setReference(0);
 274:src/main.cpp  ****   rear_right->setReference(0);
 275:src/main.cpp  ****   rear_left->setReference(0);
 276:src/main.cpp  **** 
 277:src/main.cpp  ****   bool connected = false;
 278:src/main.cpp  **** 
 279:src/main.cpp  ****   int cnt = 0;
 280:src/main.cpp  ****   float start_time;
 281:src/main.cpp  ****   float dt = 0.02;
 282:src/main.cpp  **** 
 283:src/main.cpp  ****   double x = 0.0;
 284:src/main.cpp  ****   double y = 0.0;
 285:src/main.cpp  ****   double th = 0.0;
 286:src/main.cpp  ****   float l = sqrt(pow((L/2),2)*2);
 287:src/main.cpp  **** 
 288:src/main.cpp  ****   float alpha[4] = {0,0,0,0};
 289:src/main.cpp  **** 
 290:src/main.cpp  **** 
 291:src/main.cpp  ****   while (1){
 292:src/main.cpp  ****     nh.spinOnce();
 293:src/main.cpp  ****     start_time = ((int)millis()) / 1000.0;
 294:src/main.cpp  **** 
 295:src/main.cpp  ****     if(shuttingDown){
 296:src/main.cpp  ****       connected = false;
 297:src/main.cpp  ****       // TODO: Advertise shutdown??
 298:src/main.cpp  ****     }else{
 299:src/main.cpp  ****       connected = nh.connected();
 300:src/main.cpp  ****       if(cnt++%10==0)
 301:src/main.cpp  ****         debug_toggle();
 302:src/main.cpp  ****     }
 303:src/main.cpp  **** 
 304:src/main.cpp  ****     auto sl = servo_left->update(0.1, connected);
 305:src/main.cpp  ****     auto sr = servo_right->update(0.1, connected);
 306:src/main.cpp  **** 
 307:src/main.cpp  ****     if(waitForServos){
 308:src/main.cpp  ****       if(std::get<2>(sr) == (int)servo_right->getReference() && std::get<2>(sl) == (int)servo_left-
 309:src/main.cpp  ****         waitForServos = false;
 310:src/main.cpp  ****         front_right->setReference(motorCmd[0]);
 311:src/main.cpp  ****         front_left->setReference(motorCmd[1]);
 312:src/main.cpp  ****         rear_left->setReference(motorCmd[2]);
 313:src/main.cpp  ****         rear_right->setReference(motorCmd[3]);
 314:src/main.cpp  ****       }else{
 315:src/main.cpp  ****         front_right->setReference(0);
 316:src/main.cpp  ****         front_left->setReference(0);
 317:src/main.cpp  ****         rear_left->setReference(0);
 318:src/main.cpp  ****         rear_right->setReference(0);
 319:src/main.cpp  ****       }
 320:src/main.cpp  ****     }
 321:src/main.cpp  ****     
 322:src/main.cpp  ****     auto fr = front_right->update(0.1, connected);
 323:src/main.cpp  ****     auto fl = front_left->update(0.1, connected);
 324:src/main.cpp  ****     auto rl = rear_left->update(0.1, connected);
 325:src/main.cpp  ****     auto rr = rear_right->update(0.1, connected);
 326:src/main.cpp  **** 
 327:src/main.cpp  ****     if(std::get<3>(fr) == 65535){
 328:src/main.cpp  ****       sprintf(error, "Encoder timeout: %s - [FAIL]", front_right->motorName());
 329:src/main.cpp  ****       nh.logerror(error);
 330:src/main.cpp  ****     }
 331:src/main.cpp  ****     if(std::get<3>(fl) == 65535){
 332:src/main.cpp  ****       sprintf(error, "Encoder timeout: %s - [FAIL]", front_left->motorName());
 333:src/main.cpp  ****       nh.logerror(error);
 334:src/main.cpp  ****     }
 335:src/main.cpp  ****     if(std::get<3>(rl) == 65535){
 336:src/main.cpp  ****       sprintf(error, "Encoder timeout: %s - [FAIL]", rear_left->motorName());
 337:src/main.cpp  ****       nh.logerror(error);
 338:src/main.cpp  ****     }
 339:src/main.cpp  ****     if(std::get<3>(rr) == 65535){
 340:src/main.cpp  ****       sprintf(error, "Encoder timeout: %s - [FAIL]", rear_right->motorName());
 341:src/main.cpp  ****       nh.logerror(error);
 342:src/main.cpp  ****     }
 343:src/main.cpp  **** 
 344:src/main.cpp  ****     float speeds[4] = {std::get<0>(fr), std::get<0>(fl), std::get<0>(rl), std::get<0>(rr)};
 345:src/main.cpp  **** 
 346:src/main.cpp  ****     // TODO: Correct these to fit!
 347:src/main.cpp  ****     float angles[4] = {std::get<0>(sl), std::get<0>(sr), std::get<0>(sl), std::get<0>(sr)};
 348:src/main.cpp  **** 
 349:src/main.cpp  ****     int i;
 350:src/main.cpp  ****     float x_dot = 0;
 351:src/main.cpp  ****     float y_dot = 0;
 352:src/main.cpp  ****     float theta_dot = 0;
 353:src/main.cpp  ****     for(i = 0; i < 4; i++){
 354:src/main.cpp  ****       // TODO: Calculate beta correctly
 355:src/main.cpp  ****       float beta = angles[i];//*PWM2DEG;
 356:src/main.cpp  ****       x_dot += sin(alpha[i]+beta)*speeds[i];
 357:src/main.cpp  ****       y_dot += cos(alpha[i]+beta)*speeds[i];
 358:src/main.cpp  ****       theta_dot += cos(beta - atan((l*cos(alpha[i]+d*cos(alpha[i] + beta)))/(l*sin(alpha[i] + d*sin
 359:src/main.cpp  ****     }
 360:src/main.cpp  ****     x_dot /= 4;
 361:src/main.cpp  ****     y_dot /= 4;
 362:src/main.cpp  ****     theta_dot /= 4;
 363:src/main.cpp  **** 
 364:src/main.cpp  **** 
 365:src/main.cpp  **** 
 366:src/main.cpp  ****     double delta_x = (x_dot * cos(th) - y_dot * sin(th)) * dt;
 367:src/main.cpp  ****     double delta_y = (x_dot * sin(th) + y_dot * cos(th)) * dt;
 368:src/main.cpp  ****     double delta_th = theta_dot * dt;
 369:src/main.cpp  **** 
 370:src/main.cpp  ****     x += delta_x;
 371:src/main.cpp  ****     y += delta_y;
 372:src/main.cpp  ****     th += delta_th;
 373:src/main.cpp  **** 
 374:src/main.cpp  **** 
 375:src/main.cpp  ****     geometry_msgs::Quaternion odom_quat = tf::createQuaternionFromYaw(th);
 376:src/main.cpp  **** 
 377:src/main.cpp  ****     //first, we'll publish the transform over tf
 378:src/main.cpp  ****     odom_trans.header.stamp = ros::Time(start_time,0);
 379:src/main.cpp  ****     odom_trans.header.frame_id = "odom";
 380:src/main.cpp  ****     odom_trans.child_frame_id = "base_link";
 381:src/main.cpp  **** 
 382:src/main.cpp  ****     odom_trans.transform.translation.x = x;
 383:src/main.cpp  ****     odom_trans.transform.translation.y = y;
 384:src/main.cpp  ****     odom_trans.transform.translation.z = 0.0;
 385:src/main.cpp  ****     odom_trans.transform.rotation = odom_quat;
 386:src/main.cpp  **** 
 387:src/main.cpp  ****     //send the transform
 388:src/main.cpp  ****     odom_broadcaster.sendTransform(odom_trans);
 389:src/main.cpp  **** 
 390:src/main.cpp  ****     //next, we'll publish the odometry message over ROS
 391:src/main.cpp  ****     odom.header.stamp = ros::Time(start_time,0);
 392:src/main.cpp  ****     odom.header.frame_id = "odom";
 393:src/main.cpp  **** 
 394:src/main.cpp  ****     //set the position
 395:src/main.cpp  ****     odom.pose.pose.position.x = x;
 396:src/main.cpp  ****     odom.pose.pose.position.y = y;
 397:src/main.cpp  ****     odom.pose.pose.position.z = 0.0;
 398:src/main.cpp  ****     odom.pose.pose.orientation = odom_quat;
 399:src/main.cpp  **** 
 400:src/main.cpp  ****     //set the velocity
 401:src/main.cpp  ****     odom.child_frame_id = "base_link";
 402:src/main.cpp  ****     odom.twist.twist.linear.x = x_dot;
 403:src/main.cpp  ****     odom.twist.twist.linear.y = y_dot;
 404:src/main.cpp  ****     odom.twist.twist.angular.z = theta_dot;
 405:src/main.cpp  **** 
 406:src/main.cpp  ****     //publish the message
 407:src/main.cpp  ****     odom_pub.publish(&odom);
 408:src/main.cpp  **** 
 409:src/main.cpp  ****     //delay(20);
 410:src/main.cpp  ****     if((((int)millis()) / 1000.0) - start_time >= dt){
 411:src/main.cpp  ****       nh.logerror("Main loop running slower than expected!");
 412:src/main.cpp  ****     }else{
 413:src/main.cpp  ****       while( (((int)millis()) / 1000.0) - start_time <= dt){}
 414:src/main.cpp  ****     }
 415:src/main.cpp  ****   }
 416:src/main.cpp  ****   return 0;
 417:src/main.cpp  **** }
 418:src/main.cpp  **** 
 419:src/main.cpp  **** 
 420:src/main.cpp  **** 
 421:src/main.cpp  **** extern "C" void EXTI2_IRQHandler(void){
 5323              		.loc 21 421 0
 5324              		.cfi_startproc
 5325              		@ args = 0, pretend = 0, frame = 0
 5326              		@ frame_needed = 0, uses_anonymous_args = 0
 5327 01c8 08B5     		push	{r3, lr}
 5328              		.save {r3, lr}
 5329              	.LCFI62:
 5330              		.cfi_def_cfa_offset 8
 5331              		.cfi_offset 3, -8
 5332              		.cfi_offset 14, -4
 422:src/main.cpp  ****   if(EXTI_GetITStatus(EXTI_Line2) != RESET){
 5333              		.loc 21 422 0
 5334 01ca 0420     		movs	r0, #4
 5335 01cc FFF7FEFF 		bl	EXTI_GetITStatus
 5336              	.LVL654:
 5337 01d0 40B1     		cbz	r0, .L278
 423:src/main.cpp  ****     shuttingDown = true;
 5338              		.loc 21 423 0
 5339 01d2 054B     		ldr	r3, .L280
 5340 01d4 0122     		movs	r2, #1
 5341 01d6 83F82824 		strb	r2, [r3, #1064]
 424:src/main.cpp  ****     EXTI_ClearITPendingBit(EXTI_Line2);
 5342              		.loc 21 424 0
 5343 01da 0420     		movs	r0, #4
 425:src/main.cpp  ****   }
 426:src/main.cpp  **** }
 5344              		.loc 21 426 0
 5345 01dc BDE80840 		pop	{r3, lr}
 5346              	.LCFI63:
 5347              		.cfi_remember_state
 5348              		.cfi_restore 14
 5349              		.cfi_restore 3
 5350              		.cfi_def_cfa_offset 0
 424:src/main.cpp  ****     EXTI_ClearITPendingBit(EXTI_Line2);
 5351              		.loc 21 424 0
 5352 01e0 FFF7FEBF 		b	EXTI_ClearITPendingBit
 5353              	.LVL655:
 5354              	.L278:
 5355              	.LCFI64:
 5356              		.cfi_restore_state
 5357 01e4 08BD     		pop	{r3, pc}
 5358              	.L281:
 5359 01e6 00BF     		.align	2
 5360              	.L280:
 5361 01e8 00000000 		.word	.LANCHOR1
 5362              		.cfi_endproc
 5363              	.LFE1333:
 5364              		.fnend
 5366              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi,"axG"
 5367              		.align	1
 5368              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 5369              		.thumb
 5370              		.thumb_func
 5372              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:
 5373              		.fnstart
 5374              	.LFB1366:
 289:./lib/ros_lib/ros/node_handle.h **** 
 290:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 291:./lib/ros_lib/ros/node_handle.h ****        * Time functions
 292:./lib/ros_lib/ros/node_handle.h ****        */
 293:./lib/ros_lib/ros/node_handle.h **** 
 294:./lib/ros_lib/ros/node_handle.h ****       void requestSyncTime()
 295:./lib/ros_lib/ros/node_handle.h ****       {
 296:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 297:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_TIME, &t);
 298:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 299:./lib/ros_lib/ros/node_handle.h ****       }
 300:./lib/ros_lib/ros/node_handle.h **** 
 301:./lib/ros_lib/ros/node_handle.h ****       void syncTime(uint8_t * data)
 302:./lib/ros_lib/ros/node_handle.h ****       {
 303:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 304:./lib/ros_lib/ros/node_handle.h ****         uint32_t offset = hardware_.time() - rt_time;
 305:./lib/ros_lib/ros/node_handle.h **** 
 306:./lib/ros_lib/ros/node_handle.h ****         t.deserialize(data);
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 308:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 309:./lib/ros_lib/ros/node_handle.h **** 
 310:./lib/ros_lib/ros/node_handle.h ****         this->setNow(t.data);
 311:./lib/ros_lib/ros/node_handle.h ****         last_sync_receive_time = hardware_.time();
 312:./lib/ros_lib/ros/node_handle.h ****       }
 313:./lib/ros_lib/ros/node_handle.h **** 
 314:./lib/ros_lib/ros/node_handle.h ****       Time now()
 315:./lib/ros_lib/ros/node_handle.h ****       {
 316:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 317:./lib/ros_lib/ros/node_handle.h ****         Time current_time;
 318:./lib/ros_lib/ros/node_handle.h ****         current_time.sec = ms/1000 + sec_offset;
 319:./lib/ros_lib/ros/node_handle.h ****         current_time.nsec = (ms%1000)*1000000UL + nsec_offset;
 320:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(current_time.sec, current_time.nsec);
 321:./lib/ros_lib/ros/node_handle.h ****         return current_time;
 322:./lib/ros_lib/ros/node_handle.h ****       }
 323:./lib/ros_lib/ros/node_handle.h **** 
 324:./lib/ros_lib/ros/node_handle.h ****       void setNow( Time & new_now )
 325:./lib/ros_lib/ros/node_handle.h ****       {
 326:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 327:./lib/ros_lib/ros/node_handle.h ****         sec_offset = new_now.sec - ms/1000 - 1;
 328:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 329:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 330:./lib/ros_lib/ros/node_handle.h ****       }
 331:./lib/ros_lib/ros/node_handle.h **** 
 332:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 333:./lib/ros_lib/ros/node_handle.h ****        * Topic Management
 334:./lib/ros_lib/ros/node_handle.h ****        */
 335:./lib/ros_lib/ros/node_handle.h **** 
 336:./lib/ros_lib/ros/node_handle.h ****       /* Register a new publisher */
 337:./lib/ros_lib/ros/node_handle.h ****       bool advertise(Publisher & p)
 338:./lib/ros_lib/ros/node_handle.h ****       {
 339:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_PUBLISHERS; i++){
 340:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 341:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 342:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 343:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 344:./lib/ros_lib/ros/node_handle.h ****             return true;
 345:./lib/ros_lib/ros/node_handle.h ****           }
 346:./lib/ros_lib/ros/node_handle.h ****         }
 347:./lib/ros_lib/ros/node_handle.h ****         return false;
 348:./lib/ros_lib/ros/node_handle.h ****       }
 349:./lib/ros_lib/ros/node_handle.h **** 
 350:./lib/ros_lib/ros/node_handle.h ****       /* Register a new subscriber */
 351:./lib/ros_lib/ros/node_handle.h ****       template<typename MsgT>
 352:./lib/ros_lib/ros/node_handle.h ****       bool subscribe(Subscriber< MsgT> & s){
 353:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 354:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 355:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 356:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 357:./lib/ros_lib/ros/node_handle.h ****             return true;
 358:./lib/ros_lib/ros/node_handle.h ****           }
 359:./lib/ros_lib/ros/node_handle.h ****         }
 360:./lib/ros_lib/ros/node_handle.h ****         return false;
 361:./lib/ros_lib/ros/node_handle.h ****       }
 362:./lib/ros_lib/ros/node_handle.h **** 
 363:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Server */
 364:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 365:./lib/ros_lib/ros/node_handle.h ****       bool advertiseService(ServiceServer<MReq,MRes>& srv){
 366:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 367:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 368:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 369:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 370:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 371:./lib/ros_lib/ros/node_handle.h ****             return v;
 372:./lib/ros_lib/ros/node_handle.h ****           }
 373:./lib/ros_lib/ros/node_handle.h ****         }
 374:./lib/ros_lib/ros/node_handle.h ****         return false;
 375:./lib/ros_lib/ros/node_handle.h ****       }
 376:./lib/ros_lib/ros/node_handle.h **** 
 377:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Client */
 378:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 379:./lib/ros_lib/ros/node_handle.h ****       bool serviceClient(ServiceClient<MReq, MRes>& srv){
 380:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 381:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 382:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 383:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 384:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 385:./lib/ros_lib/ros/node_handle.h ****             return v;
 386:./lib/ros_lib/ros/node_handle.h ****           }
 387:./lib/ros_lib/ros/node_handle.h ****         }
 388:./lib/ros_lib/ros/node_handle.h ****         return false;
 389:./lib/ros_lib/ros/node_handle.h ****       }
 390:./lib/ros_lib/ros/node_handle.h **** 
 391:./lib/ros_lib/ros/node_handle.h ****       void negotiateTopics()
 392:./lib/ros_lib/ros/node_handle.h ****       {
 393:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::TopicInfo ti;
 394:./lib/ros_lib/ros/node_handle.h ****         int i;
 395:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_PUBLISHERS; i++)
 396:./lib/ros_lib/ros/node_handle.h ****         {
 397:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] != 0) // non-empty slot
 398:./lib/ros_lib/ros/node_handle.h ****           {
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = publishers[i]->id_;
 400:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 401:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 402:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 403:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 404:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 405:./lib/ros_lib/ros/node_handle.h ****           }
 406:./lib/ros_lib/ros/node_handle.h ****         }
 407:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_SUBSCRIBERS; i++)
 408:./lib/ros_lib/ros/node_handle.h ****         {
 409:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] != 0) // non-empty slot
 410:./lib/ros_lib/ros/node_handle.h ****           {
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = subscribers[i]->id_;
 412:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 413:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 414:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 415:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 416:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 417:./lib/ros_lib/ros/node_handle.h ****           }
 418:./lib/ros_lib/ros/node_handle.h ****         }
 419:./lib/ros_lib/ros/node_handle.h ****         configured_ = true;
 420:./lib/ros_lib/ros/node_handle.h ****       }
 421:./lib/ros_lib/ros/node_handle.h **** 
 422:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg * msg)
 423:./lib/ros_lib/ros/node_handle.h ****       {
 424:./lib/ros_lib/ros/node_handle.h ****         if(id >= 100 && !configured_)
 425:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 426:./lib/ros_lib/ros/node_handle.h **** 
 427:./lib/ros_lib/ros/node_handle.h ****         /* serialize message */
 428:./lib/ros_lib/ros/node_handle.h ****         uint16_t l = msg->serialize(message_out+7);
 429:./lib/ros_lib/ros/node_handle.h **** 
 430:./lib/ros_lib/ros/node_handle.h ****         /* setup the header */
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[0] = 0xff;
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 435:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 437:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 438:./lib/ros_lib/ros/node_handle.h **** 
 439:./lib/ros_lib/ros/node_handle.h ****         /* calculate checksum */
 440:./lib/ros_lib/ros/node_handle.h ****         int chk = 0;
 441:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 442:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 443:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 444:./lib/ros_lib/ros/node_handle.h ****         message_out[l++] = 255 - (chk%256);
 445:./lib/ros_lib/ros/node_handle.h **** 
 446:./lib/ros_lib/ros/node_handle.h ****         if( l <= OUTPUT_SIZE ){
 447:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 448:./lib/ros_lib/ros/node_handle.h ****           return l;
 449:./lib/ros_lib/ros/node_handle.h ****         }else{
 450:./lib/ros_lib/ros/node_handle.h ****           logerror("Message from device dropped: message larger than buffer.");
 451:./lib/ros_lib/ros/node_handle.h ****           return -1;
 452:./lib/ros_lib/ros/node_handle.h ****         }
 453:./lib/ros_lib/ros/node_handle.h ****       }
 454:./lib/ros_lib/ros/node_handle.h **** 
 455:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 456:./lib/ros_lib/ros/node_handle.h ****        * Logging
 457:./lib/ros_lib/ros/node_handle.h ****        */
 458:./lib/ros_lib/ros/node_handle.h **** 
 459:./lib/ros_lib/ros/node_handle.h ****     private:
 460:./lib/ros_lib/ros/node_handle.h ****       void log(char byte, const char * msg){
 461:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::Log l;
 462:./lib/ros_lib/ros/node_handle.h ****         l.level= byte;
 463:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 464:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 465:./lib/ros_lib/ros/node_handle.h ****       }
 466:./lib/ros_lib/ros/node_handle.h **** 
 467:./lib/ros_lib/ros/node_handle.h ****     public:
 468:./lib/ros_lib/ros/node_handle.h ****       void logdebug(const char* msg){
 469:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ROSDEBUG, msg);
 470:./lib/ros_lib/ros/node_handle.h ****       }
 471:./lib/ros_lib/ros/node_handle.h ****       void loginfo(const char * msg){
 472:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::INFO, msg);
 473:./lib/ros_lib/ros/node_handle.h ****       }
 474:./lib/ros_lib/ros/node_handle.h ****       void logwarn(const char *msg){
 475:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::WARN, msg);
 476:./lib/ros_lib/ros/node_handle.h ****       }
 477:./lib/ros_lib/ros/node_handle.h ****       void logerror(const char*msg){
 478:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ERROR, msg);
 479:./lib/ros_lib/ros/node_handle.h ****       }
 480:./lib/ros_lib/ros/node_handle.h ****       void logfatal(const char*msg){
 481:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::FATAL, msg);
 482:./lib/ros_lib/ros/node_handle.h ****       }
 483:./lib/ros_lib/ros/node_handle.h **** 
 484:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 485:./lib/ros_lib/ros/node_handle.h ****        * Parameters
 486:./lib/ros_lib/ros/node_handle.h ****        */
 487:./lib/ros_lib/ros/node_handle.h **** 
 488:./lib/ros_lib/ros/node_handle.h ****     private:
 489:./lib/ros_lib/ros/node_handle.h ****       bool param_recieved;
 490:./lib/ros_lib/ros/node_handle.h ****       rosserial_msgs::RequestParamResponse req_param_resp;
 491:./lib/ros_lib/ros/node_handle.h **** 
 492:./lib/ros_lib/ros/node_handle.h ****       bool requestParam(const char * name, int time_out =  1000){
 493:./lib/ros_lib/ros/node_handle.h ****         param_recieved = false;
 494:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::RequestParamRequest req;
 495:./lib/ros_lib/ros/node_handle.h ****         req.name  = (char*)name;
 496:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_PARAMETER_REQUEST, &req);
 497:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 498:./lib/ros_lib/ros/node_handle.h ****         while(!param_recieved ){
 499:./lib/ros_lib/ros/node_handle.h ****           spinOnce();
 500:./lib/ros_lib/ros/node_handle.h ****           if (hardware_.time() > end_time) return false;
 501:./lib/ros_lib/ros/node_handle.h ****         }
 502:./lib/ros_lib/ros/node_handle.h ****         return true;
 503:./lib/ros_lib/ros/node_handle.h ****       }
 504:./lib/ros_lib/ros/node_handle.h **** 
 505:./lib/ros_lib/ros/node_handle.h ****     public:
 506:./lib/ros_lib/ros/node_handle.h ****       bool getParam(const char* name, int* param, int length =1){
 507:./lib/ros_lib/ros/node_handle.h ****         if (requestParam(name) ){
 508:./lib/ros_lib/ros/node_handle.h ****           if (length == req_param_resp.ints_length){
 509:./lib/ros_lib/ros/node_handle.h ****             //copy it over
 510:./lib/ros_lib/ros/node_handle.h ****             for(int i=0; i<length; i++)
 511:./lib/ros_lib/ros/node_handle.h ****               param[i] = req_param_resp.ints[i];
 512:./lib/ros_lib/ros/node_handle.h ****             return true;
 513:./lib/ros_lib/ros/node_handle.h ****           }
 514:./lib/ros_lib/ros/node_handle.h ****         }
 515:./lib/ros_lib/ros/node_handle.h ****         return false;
 516:./lib/ros_lib/ros/node_handle.h ****       }
 517:./lib/ros_lib/ros/node_handle.h ****       bool getParam(const char* name, float* param, int length=1){
 5375              		.loc 19 517 0
 5376              		.cfi_startproc
 5377              		@ args = 0, pretend = 0, frame = 8
 5378              		@ frame_needed = 0, uses_anonymous_args = 0
 5379              	.LVL656:
 5380 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 5381              		.save {r4, r5, r6, r7, r8, lr}
 5382              		.pad #8
 5383              	.LCFI65:
 5384              		.cfi_def_cfa_offset 32
 5385              		.cfi_offset 4, -24
 5386              		.cfi_offset 5, -20
 5387              		.cfi_offset 6, -16
 5388              		.cfi_offset 7, -12
 5389              		.cfi_offset 8, -8
 5390              		.cfi_offset 14, -4
 5391              		.loc 19 517 0
 5392 0004 9846     		mov	r8, r3
 5393              	.LBB451:
 5394              	.LBB452:
 5395              	.LBB453:
 493:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::RequestParamRequest req;
 5396              		.loc 19 493 0
 5397 0006 0023     		movs	r3, #0
 5398              	.LVL657:
 5399 0008 80F80435 		strb	r3, [r0, #1284]
 5400              	.LVL658:
 5401              	.LBB454:
 5402              	.LBB455:
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 5403              		.loc 4 19 0
 5404 000c 174B     		ldr	r3, .L291
 5405              	.LBE455:
 5406              	.LBE454:
 495:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_PARAMETER_REQUEST, &req);
 5407              		.loc 19 495 0
 5408 000e 0191     		str	r1, [sp, #4]
 5409              	.LBB457:
 5410              	.LBB456:
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 5411              		.loc 4 19 0
 5412 0010 0093     		str	r3, [sp]
 5413              	.LVL659:
 5414              	.LBE456:
 5415              	.LBE457:
 496:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 5416              		.loc 19 496 0
 5417 0012 0368     		ldr	r3, [r0]
 5418 0014 0621     		movs	r1, #6
 5419              	.LVL660:
 5420 0016 1B68     		ldr	r3, [r3]
 5421              	.LBE453:
 5422              	.LBE452:
 5423              	.LBE451:
 5424              		.loc 19 517 0
 5425 0018 1746     		mov	r7, r2
 5426              	.LBB467:
 5427              	.LBB464:
 5428              	.LBB462:
 496:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 5429              		.loc 19 496 0
 5430 001a 6A46     		mov	r2, sp
 5431              	.LVL661:
 5432              	.LBE462:
 5433              	.LBE464:
 5434              	.LBE467:
 5435              		.loc 19 517 0
 5436 001c 0446     		mov	r4, r0
 5437              	.LBB468:
 5438              	.LBB465:
 5439              	.LBB463:
 496:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 5440              		.loc 19 496 0
 5441 001e 9847     		blx	r3
 5442              	.LVL662:
 5443              	.LBB458:
 5444              	.LBB459:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 5445              		.loc 24 134 0
 5446 0020 FFF7FEFF 		bl	millis
 5447              	.LVL663:
 5448              	.LBE459:
 5449              	.LBE458:
 497:./lib/ros_lib/ros/node_handle.h ****         while(!param_recieved ){
 5450              		.loc 19 497 0
 5451 0024 00F57A70 		add	r0, r0, #1000
 5452 0028 86B2     		uxth	r6, r0
 5453              	.LVL664:
 5454              	.L284:
 498:./lib/ros_lib/ros/node_handle.h ****           spinOnce();
 5455              		.loc 19 498 0
 5456 002a 94F80455 		ldrb	r5, [r4, #1284]	@ zero_extendqisi2
 5457 002e 45B9     		cbnz	r5, .L288
 499:./lib/ros_lib/ros/node_handle.h ****           if (hardware_.time() > end_time) return false;
 5458              		.loc 19 499 0
 5459 0030 2368     		ldr	r3, [r4]
 5460 0032 2046     		mov	r0, r4
 5461 0034 5B68     		ldr	r3, [r3, #4]
 5462 0036 9847     		blx	r3
 5463              	.LVL665:
 5464              	.LBB460:
 5465              	.LBB461:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 5466              		.loc 24 134 0
 5467 0038 FFF7FEFF 		bl	millis
 5468              	.LVL666:
 5469              	.LBE461:
 5470              	.LBE460:
 500:./lib/ros_lib/ros/node_handle.h ****         }
 5471              		.loc 19 500 0
 5472 003c B042     		cmp	r0, r6
 5473 003e F4D9     		bls	.L284
 5474 0040 0FE0     		b	.L285
 5475              	.LVL667:
 5476              	.L288:
 5477              	.LBE463:
 5478              	.LBE465:
 5479              	.LBB466:
 518:./lib/ros_lib/ros/node_handle.h ****         if (requestParam(name) ){
 519:./lib/ros_lib/ros/node_handle.h ****           if (length == req_param_resp.floats_length){
 5480              		.loc 19 519 0
 5481 0042 94F81825 		ldrb	r2, [r4, #1304]	@ zero_extendqisi2
 5482 0046 4245     		cmp	r2, r8
 5483 0048 0AD1     		bne	.L287
 5484 004a 0023     		movs	r3, #0
 5485              	.L286:
 5486              	.LVL668:
 5487              	.LBE466:
 5488              	.LBE468:
 5489              	.LBB469:
 5490              	.LBB470:
 520:./lib/ros_lib/ros/node_handle.h ****             //copy it over
 521:./lib/ros_lib/ros/node_handle.h ****             for(int i=0; i<length; i++)
 5491              		.loc 19 521 0
 5492 004c 9342     		cmp	r3, r2
 5493 004e 08DA     		bge	.L285
 522:./lib/ros_lib/ros/node_handle.h ****               param[i] = req_param_resp.floats[i];
 5494              		.loc 19 522 0
 5495 0050 D4F82015 		ldr	r1, [r4, #1312]
 5496 0054 51F82310 		ldr	r1, [r1, r3, lsl #2]	@ float
 5497 0058 47F82310 		str	r1, [r7, r3, lsl #2]	@ float
 521:./lib/ros_lib/ros/node_handle.h ****               param[i] = req_param_resp.floats[i];
 5498              		.loc 19 521 0
 5499 005c 0133     		adds	r3, r3, #1
 5500              	.LVL669:
 5501 005e F5E7     		b	.L286
 5502              	.LVL670:
 5503              	.L287:
 5504              	.LBE470:
 5505              	.LBE469:
 523:./lib/ros_lib/ros/node_handle.h ****             return true;
 524:./lib/ros_lib/ros/node_handle.h ****           }
 525:./lib/ros_lib/ros/node_handle.h ****         }
 526:./lib/ros_lib/ros/node_handle.h ****         return false;
 5506              		.loc 19 526 0
 5507 0060 0025     		movs	r5, #0
 5508              	.L285:
 527:./lib/ros_lib/ros/node_handle.h ****       }
 5509              		.loc 19 527 0
 5510 0062 2846     		mov	r0, r5
 5511 0064 02B0     		add	sp, sp, #8
 5512              	.LCFI66:
 5513              		.cfi_def_cfa_offset 24
 5514              		@ sp needed
 5515 0066 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5516              	.LVL671:
 5517              	.L292:
 5518 006a 00BF     		.align	2
 5519              	.L291:
 5520 006c 08000000 		.word	_ZTVN14rosserial_msgs19RequestParamRequestE+8
 5521              		.cfi_endproc
 5522              	.LFE1366:
 5523              		.fnend
 5525              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc,"axG",%p
 5526              		.align	1
 5527              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5528              		.thumb
 5529              		.thumb_func
 5531              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:
 5532              		.fnstart
 5533              	.LFB1367:
 477:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ERROR, msg);
 5534              		.loc 19 477 0
 5535              		.cfi_startproc
 5536              		@ args = 0, pretend = 0, frame = 16
 5537              		@ frame_needed = 0, uses_anonymous_args = 0
 5538              	.LVL672:
 5539 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 5540              		.save {lr}
 5541              		.pad #20
 5542              	.LCFI67:
 5543              		.cfi_def_cfa_offset 24
 5544              		.cfi_offset 14, -4
 5545              	.LVL673:
 5546              	.LBB477:
 5547              	.LBB478:
 5548              	.LBB479:
 5549              	.LBB480:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 5550              		.loc 3 25 0
 5551 0002 074B     		ldr	r3, .L294
 5552              	.LBE480:
 5553              	.LBE479:
 463:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 5554              		.loc 19 463 0
 5555 0004 0391     		str	r1, [sp, #12]
 5556              	.LBB482:
 5557              	.LBB481:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 5558              		.loc 3 25 0
 5559 0006 0193     		str	r3, [sp, #4]
 5560              	.LVL674:
 5561              	.LBE481:
 5562              	.LBE482:
 462:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 5563              		.loc 19 462 0
 5564 0008 0323     		movs	r3, #3
 5565 000a 8DF80830 		strb	r3, [sp, #8]
 464:./lib/ros_lib/ros/node_handle.h ****       }
 5566              		.loc 19 464 0
 5567 000e 0368     		ldr	r3, [r0]
 5568 0010 01AA     		add	r2, sp, #4
 5569 0012 1B68     		ldr	r3, [r3]
 5570 0014 0721     		movs	r1, #7
 5571              	.LVL675:
 5572 0016 9847     		blx	r3
 5573              	.LVL676:
 5574              	.LBE478:
 5575              	.LBE477:
 479:./lib/ros_lib/ros/node_handle.h ****       void logfatal(const char*msg){
 5576              		.loc 19 479 0
 5577 0018 05B0     		add	sp, sp, #20
 5578              	.LCFI68:
 5579              		.cfi_def_cfa_offset 4
 5580              		@ sp needed
 5581 001a 5DF804FB 		ldr	pc, [sp], #4
 5582              	.L295:
 5583 001e 00BF     		.align	2
 5584              	.L294:
 5585 0020 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 5586              		.cfi_endproc
 5587              	.LFE1367:
 5588              		.fnend
 5590              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE,"
 5591              		.align	1
 5592              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 5593              		.thumb
 5594              		.thumb_func
 5596              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:
 5597              		.fnstart
 5598              	.LFB1377:
 422:./lib/ros_lib/ros/node_handle.h ****       {
 5599              		.loc 19 422 0
 5600              		.cfi_startproc
 5601              		@ args = 0, pretend = 0, frame = 0
 5602              		@ frame_needed = 0, uses_anonymous_args = 0
 5603              	.LVL677:
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 5604              		.loc 19 424 0
 5605 0000 6329     		cmp	r1, #99
 422:./lib/ros_lib/ros/node_handle.h ****       {
 5606              		.loc 19 422 0
 5607 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 5608              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 5609              	.LCFI69:
 5610              		.cfi_def_cfa_offset 32
 5611              		.cfi_offset 3, -32
 5612              		.cfi_offset 4, -28
 5613              		.cfi_offset 5, -24
 5614              		.cfi_offset 6, -20
 5615              		.cfi_offset 7, -16
 5616              		.cfi_offset 8, -12
 5617              		.cfi_offset 9, -8
 5618              		.cfi_offset 14, -4
 422:./lib/ros_lib/ros/node_handle.h ****       {
 5619              		.loc 19 422 0
 5620 0006 0446     		mov	r4, r0
 5621 0008 0E46     		mov	r6, r1
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 5622              		.loc 19 424 0
 5623 000a 03DD     		ble	.L297
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 5624              		.loc 19 424 0 is_stmt 0 discriminator 1
 5625 000c 90F8F454 		ldrb	r5, [r0, #1268]	@ zero_extendqisi2
 5626 0010 002D     		cmp	r5, #0
 5627 0012 4FD0     		beq	.L298
 5628              	.L297:
 428:./lib/ros_lib/ros/node_handle.h **** 
 5629              		.loc 19 428 0 is_stmt 1
 5630 0014 1368     		ldr	r3, [r2]
 5631 0016 04F21F21 		addw	r1, r4, #543
 5632              	.LVL678:
 5633 001a 1B68     		ldr	r3, [r3]
 5634 001c 1046     		mov	r0, r2
 5635              	.LVL679:
 5636 001e 9847     		blx	r3
 5637              	.LVL680:
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 5638              		.loc 19 431 0
 5639 0020 FF22     		movs	r2, #255
 5640 0022 84F81822 		strb	r2, [r4, #536]
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 5641              		.loc 19 432 0
 5642 0026 FE22     		movs	r2, #254
 428:./lib/ros_lib/ros/node_handle.h **** 
 5643              		.loc 19 428 0
 5644 0028 83B2     		uxth	r3, r0
 5645              	.LVL681:
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 5646              		.loc 19 432 0
 5647 002a 84F81922 		strb	r2, [r4, #537]
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 5648              		.loc 19 433 0
 5649 002e C2B2     		uxtb	r2, r0
 434:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 5650              		.loc 19 434 0
 5651 0030 C0F30720 		ubfx	r0, r0, #8, #8
 5652 0034 84F81B02 		strb	r0, [r4, #539]
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 5653              		.loc 19 435 0
 5654 0038 1044     		add	r0, r0, r2
 5655 003a C043     		mvns	r0, r0
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 5656              		.loc 19 436 0
 5657 003c 84F81D62 		strb	r6, [r4, #541]
 437:./lib/ros_lib/ros/node_handle.h **** 
 5658              		.loc 19 437 0
 5659 0040 46F30726 		sbfx	r6, r6, #8, #8
 5660              	.LVL682:
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 5661              		.loc 19 433 0
 5662 0044 84F81A22 		strb	r2, [r4, #538]
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 5663              		.loc 19 435 0
 5664 0048 84F81C02 		strb	r0, [r4, #540]
 437:./lib/ros_lib/ros/node_handle.h **** 
 5665              		.loc 19 437 0
 5666 004c 84F81E62 		strb	r6, [r4, #542]
 5667              	.LVL683:
 5668 0050 04F50770 		add	r0, r4, #540
 5669              	.LBB487:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 5670              		.loc 19 441 0
 5671 0054 0521     		movs	r1, #5
 5672              	.LBE487:
 440:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 5673              		.loc 19 440 0
 5674 0056 0022     		movs	r2, #0
 5675              	.LBB488:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 5676              		.loc 19 441 0
 5677 0058 9E1D     		adds	r6, r3, #6
 5678              	.LVL684:
 5679              	.L300:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 5680              		.loc 19 441 0 is_stmt 0 discriminator 3
 5681 005a B142     		cmp	r1, r6
 5682 005c 04DC     		bgt	.L299
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 5683              		.loc 19 442 0 is_stmt 1 discriminator 2
 5684 005e 10F8015F 		ldrb	r5, [r0, #1]!	@ zero_extendqisi2
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 5685              		.loc 19 441 0 discriminator 2
 5686 0062 0131     		adds	r1, r1, #1
 5687              	.LVL685:
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 5688              		.loc 19 442 0 discriminator 2
 5689 0064 2A44     		add	r2, r2, r5
 5690              	.LVL686:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 5691              		.loc 19 441 0 discriminator 2
 5692 0066 F8E7     		b	.L300
 5693              	.L299:
 5694              	.LVL687:
 5695              	.LBE488:
 444:./lib/ros_lib/ros/node_handle.h **** 
 5696              		.loc 19 444 0
 5697 0068 D243     		mvns	r2, r2
 5698              	.LVL688:
 5699 006a 03F10806 		add	r6, r3, #8
 5700 006e 0733     		adds	r3, r3, #7
 5701              	.LVL689:
 5702 0070 B6B2     		uxth	r6, r6
 5703              	.LVL690:
 5704 0072 9BB2     		uxth	r3, r3
 5705 0074 2344     		add	r3, r3, r4
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 5706              		.loc 19 446 0
 5707 0076 B6F5007F 		cmp	r6, #512
 444:./lib/ros_lib/ros/node_handle.h **** 
 5708              		.loc 19 444 0
 5709 007a 83F81822 		strb	r2, [r3, #536]
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 5710              		.loc 19 446 0
 5711 007e 13D8     		bhi	.L301
 447:./lib/ros_lib/ros/node_handle.h ****           return l;
 5712              		.loc 19 447 0
 5713 0080 04F50678 		add	r8, r4, #536
 5714 0084 3546     		mov	r5, r6
 5715              	.LVL691:
 5716 0086 4746     		mov	r7, r8
 5717              	.LBB489:
 5718              	.LBB490:
 128:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 5719              		.loc 24 128 0
 5720 0088 DFF83490 		ldr	r9, .L308+4
 5721              	.LVL692:
 5722              	.L303:
 127:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 5723              		.loc 24 127 0
 5724 008c C8EB0703 		rsb	r3, r8, r7
 5725 0090 9E42     		cmp	r6, r3
 5726 0092 0FDD     		ble	.L298
 5727              	.L306:
 128:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 5728              		.loc 24 128 0
 5729 0094 B9F80030 		ldrh	r3, [r9]
 5730 0098 5B06     		lsls	r3, r3, #25
 5731 009a FBD5     		bpl	.L306
 129:./lib/ros_lib/ArduinoHardware.h ****       }
 5732              		.loc 24 129 0
 5733 009c 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 5734              	.LVL693:
 5735 00a0 6068     		ldr	r0, [r4, #4]
 5736 00a2 FFF7FEFF 		bl	USART_SendData
 5737              	.LVL694:
 5738 00a6 F1E7     		b	.L303
 5739              	.LVL695:
 5740              	.L301:
 5741              	.LBE490:
 5742              	.LBE489:
 450:./lib/ros_lib/ros/node_handle.h ****           return -1;
 5743              		.loc 19 450 0
 5744 00a8 0449     		ldr	r1, .L308
 5745              	.LVL696:
 5746 00aa 2046     		mov	r0, r4
 5747 00ac FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5748              	.LVL697:
 451:./lib/ros_lib/ros/node_handle.h ****         }
 5749              		.loc 19 451 0
 5750 00b0 4FF0FF35 		mov	r5, #-1
 5751              	.LVL698:
 5752              	.L298:
 453:./lib/ros_lib/ros/node_handle.h **** 
 5753              		.loc 19 453 0
 5754 00b4 2846     		mov	r0, r5
 5755 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5756              	.LVL699:
 5757              	.L309:
 5758 00ba 00BF     		.align	2
 5759              	.L308:
 5760 00bc C7030000 		.word	.LC36
 5761 00c0 00380140 		.word	1073821696
 5762              		.cfi_endproc
 5763              	.LFE1377:
 5764              		.fnend
 5766              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv,"a
 5767              		.align	1
 5768              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 5769              		.thumb
 5770              		.thumb_func
 5772              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:
 5773              		.fnstart
 5774              	.LFB1372:
 294:./lib/ros_lib/ros/node_handle.h ****       {
 5775              		.loc 19 294 0
 5776              		.cfi_startproc
 5777              		@ args = 0, pretend = 0, frame = 16
 5778              		@ frame_needed = 0, uses_anonymous_args = 0
 5779              	.LVL700:
 5780 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 5781              		.save {r4, lr}
 5782              		.pad #16
 5783              	.LCFI70:
 5784              		.cfi_def_cfa_offset 24
 5785              		.cfi_offset 4, -8
 5786              		.cfi_offset 14, -4
 5787              	.LVL701:
 5788              	.LBB491:
 5789              	.LBB492:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 5790              		.loc 1 19 0
 5791 0002 084B     		ldr	r3, .L311
 5792              	.LBE492:
 5793              	.LBE491:
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 5794              		.loc 19 297 0
 5795 0004 01AA     		add	r2, sp, #4
 5796              	.LVL702:
 5797              	.LBB496:
 5798              	.LBB495:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 5799              		.loc 1 19 0
 5800 0006 0193     		str	r3, [sp, #4]
 5801              	.LVL703:
 5802              	.LBB493:
 5803              	.LBB494:
 5804              		.loc 26 52 0
 5805 0008 0023     		movs	r3, #0
 5806 000a 0293     		str	r3, [sp, #8]
 5807 000c 0393     		str	r3, [sp, #12]
 5808              	.LVL704:
 5809              	.LBE494:
 5810              	.LBE493:
 5811              	.LBE495:
 5812              	.LBE496:
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 5813              		.loc 19 297 0
 5814 000e 0368     		ldr	r3, [r0]
 5815 0010 0A21     		movs	r1, #10
 5816 0012 1B68     		ldr	r3, [r3]
 294:./lib/ros_lib/ros/node_handle.h ****       {
 5817              		.loc 19 294 0
 5818 0014 0446     		mov	r4, r0
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 5819              		.loc 19 297 0
 5820 0016 9847     		blx	r3
 5821              	.LVL705:
 5822              	.LBB497:
 5823              	.LBB498:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 5824              		.loc 24 134 0
 5825 0018 FFF7FEFF 		bl	millis
 5826              	.LVL706:
 5827              	.LBE498:
 5828              	.LBE497:
 298:./lib/ros_lib/ros/node_handle.h ****       }
 5829              		.loc 19 298 0
 5830 001c E060     		str	r0, [r4, #12]
 299:./lib/ros_lib/ros/node_handle.h **** 
 5831              		.loc 19 299 0
 5832 001e 04B0     		add	sp, sp, #16
 5833              	.LCFI71:
 5834              		.cfi_def_cfa_offset 8
 5835              		@ sp needed
 5836 0020 10BD     		pop	{r4, pc}
 5837              	.LVL707:
 5838              	.L312:
 5839 0022 00BF     		.align	2
 5840              	.L311:
 5841 0024 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 5842              		.cfi_endproc
 5843              	.LFE1372:
 5844              		.fnend
 5846              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv,"a
 5847              		.align	1
 5848              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 5849              		.thumb
 5850              		.thumb_func
 5852              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:
 5853              		.fnstart
 5854              	.LFB1373:
 391:./lib/ros_lib/ros/node_handle.h ****       {
 5855              		.loc 19 391 0
 5856              		.cfi_startproc
 5857              		@ args = 0, pretend = 0, frame = 24
 5858              		@ frame_needed = 0, uses_anonymous_args = 0
 5859              	.LVL708:
 5860 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5861              		.save {r4, r5, r6, r7, r8, lr}
 5862              	.LCFI72:
 5863              		.cfi_def_cfa_offset 24
 5864              		.cfi_offset 4, -24
 5865              		.cfi_offset 5, -20
 5866              		.cfi_offset 6, -16
 5867              		.cfi_offset 7, -12
 5868              		.cfi_offset 8, -8
 5869              		.cfi_offset 14, -4
 5870 0004 0446     		mov	r4, r0
 5871              	.LBB504:
 5872              	.LBB505:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 5873              		.loc 2 34 0
 5874 0006 2B4B     		ldr	r3, .L326
 5875              	.LBE505:
 5876              	.LBE504:
 391:./lib/ros_lib/ros/node_handle.h ****       {
 5877              		.loc 19 391 0
 5878              		.pad #24
 5879 0008 86B0     		sub	sp, sp, #24
 5880              	.LCFI73:
 5881              		.cfi_def_cfa_offset 48
 5882              	.LVL709:
 5883              	.LBB507:
 5884              	.LBB506:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 5885              		.loc 2 34 0
 5886 000a 0093     		str	r3, [sp]
 5887 000c 2A4B     		ldr	r3, .L326+4
 5888 000e 0022     		movs	r2, #0
 5889 0010 ADF80420 		strh	r2, [sp, #4]	@ movhi
 5890 0014 0293     		str	r3, [sp, #8]
 5891 0016 0393     		str	r3, [sp, #12]
 5892 0018 0493     		str	r3, [sp, #16]
 5893 001a 0592     		str	r2, [sp, #20]
 5894              	.LVL710:
 5895 001c 00F21446 		addw	r6, r0, #1044
 5896 0020 00F58F65 		add	r5, r0, #1144
 5897              	.LBE506:
 5898              	.LBE507:
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 5899              		.loc 19 403 0
 5900 0024 4FF40077 		mov	r7, #512
 5901              	.LVL711:
 5902              	.L315:
 397:./lib/ros_lib/ros/node_handle.h ****           {
 5903              		.loc 19 397 0
 5904 0028 56F8043F 		ldr	r3, [r6, #4]!
 5905 002c BBB1     		cbz	r3, .L314
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 5906              		.loc 19 399 0
 5907 002e 9A68     		ldr	r2, [r3, #8]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 5908              		.loc 19 401 0
 5909 0030 5868     		ldr	r0, [r3, #4]
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 5910              		.loc 19 399 0
 5911 0032 ADF80420 		strh	r2, [sp, #4]	@ movhi
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 5912              		.loc 19 400 0
 5913 0036 1A68     		ldr	r2, [r3]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 5914              		.loc 19 401 0
 5915 0038 0368     		ldr	r3, [r0]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 5916              		.loc 19 400 0
 5917 003a 0292     		str	r2, [sp, #8]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 5918              		.loc 19 401 0
 5919 003c 9B68     		ldr	r3, [r3, #8]
 5920 003e 9847     		blx	r3
 5921              	.LVL712:
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 5922              		.loc 19 402 0
 5923 0040 3368     		ldr	r3, [r6]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 5924              		.loc 19 401 0
 5925 0042 0390     		str	r0, [sp, #12]
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 5926              		.loc 19 402 0
 5927 0044 5868     		ldr	r0, [r3, #4]
 5928 0046 0368     		ldr	r3, [r0]
 5929 0048 DB68     		ldr	r3, [r3, #12]
 5930 004a 9847     		blx	r3
 5931              	.LVL713:
 5932 004c 3168     		ldr	r1, [r6]
 404:./lib/ros_lib/ros/node_handle.h ****           }
 5933              		.loc 19 404 0
 5934 004e 2368     		ldr	r3, [r4]
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 5935              		.loc 19 402 0
 5936 0050 0490     		str	r0, [sp, #16]
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 5937              		.loc 19 403 0
 5938 0052 0597     		str	r7, [sp, #20]
 5939              	.LVL714:
 404:./lib/ros_lib/ros/node_handle.h ****           }
 5940              		.loc 19 404 0
 5941 0054 1B68     		ldr	r3, [r3]
 5942 0056 6A46     		mov	r2, sp
 5943 0058 0969     		ldr	r1, [r1, #16]
 5944              	.LVL715:
 5945 005a 2046     		mov	r0, r4
 5946 005c 9847     		blx	r3
 5947              	.LVL716:
 5948              	.L314:
 395:./lib/ros_lib/ros/node_handle.h ****         {
 5949              		.loc 19 395 0 discriminator 2
 5950 005e AE42     		cmp	r6, r5
 5951 0060 E2D1     		bne	.L315
 5952 0062 04F2DC46 		addw	r6, r4, #1244
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 5953              		.loc 19 415 0
 5954 0066 4FF40077 		mov	r7, #512
 5955              	.L317:
 409:./lib/ros_lib/ros/node_handle.h ****           {
 5956              		.loc 19 409 0
 5957 006a 55F8040F 		ldr	r0, [r5, #4]!
 5958 006e C8B1     		cbz	r0, .L316
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 5959              		.loc 19 411 0
 5960 0070 4368     		ldr	r3, [r0, #4]
 5961 0072 ADF80430 		strh	r3, [sp, #4]	@ movhi
 412:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 5962              		.loc 19 412 0
 5963 0076 8368     		ldr	r3, [r0, #8]
 5964 0078 0293     		str	r3, [sp, #8]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 5965              		.loc 19 413 0
 5966 007a 0368     		ldr	r3, [r0]
 5967 007c 9B68     		ldr	r3, [r3, #8]
 5968 007e 9847     		blx	r3
 5969              	.LVL717:
 5970 0080 0390     		str	r0, [sp, #12]
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 5971              		.loc 19 414 0
 5972 0082 2868     		ldr	r0, [r5]
 5973 0084 0368     		ldr	r3, [r0]
 5974 0086 DB68     		ldr	r3, [r3, #12]
 5975 0088 9847     		blx	r3
 5976              	.LVL718:
 416:./lib/ros_lib/ros/node_handle.h ****           }
 5977              		.loc 19 416 0
 5978 008a 2368     		ldr	r3, [r4]
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 5979              		.loc 19 414 0
 5980 008c 0490     		str	r0, [sp, #16]
 416:./lib/ros_lib/ros/node_handle.h ****           }
 5981              		.loc 19 416 0
 5982 008e 2868     		ldr	r0, [r5]
 5983 0090 D3F80080 		ldr	r8, [r3]
 5984 0094 0368     		ldr	r3, [r0]
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 5985              		.loc 19 415 0
 5986 0096 0597     		str	r7, [sp, #20]
 416:./lib/ros_lib/ros/node_handle.h ****           }
 5987              		.loc 19 416 0
 5988 0098 5B68     		ldr	r3, [r3, #4]
 5989 009a 9847     		blx	r3
 5990              	.LVL719:
 5991 009c 6A46     		mov	r2, sp
 5992 009e 0146     		mov	r1, r0
 5993 00a0 2046     		mov	r0, r4
 5994 00a2 C047     		blx	r8
 5995              	.LVL720:
 5996              	.L316:
 407:./lib/ros_lib/ros/node_handle.h ****         {
 5997              		.loc 19 407 0 discriminator 2
 5998 00a4 AE42     		cmp	r6, r5
 5999 00a6 E0D1     		bne	.L317
 419:./lib/ros_lib/ros/node_handle.h ****       }
 6000              		.loc 19 419 0
 6001 00a8 0123     		movs	r3, #1
 6002 00aa 84F8F434 		strb	r3, [r4, #1268]
 420:./lib/ros_lib/ros/node_handle.h **** 
 6003              		.loc 19 420 0
 6004 00ae 06B0     		add	sp, sp, #24
 6005              	.LCFI74:
 6006              		.cfi_def_cfa_offset 24
 6007              	.LVL721:
 6008              		@ sp needed
 6009 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6010              	.LVL722:
 6011              	.L327:
 6012              		.align	2
 6013              	.L326:
 6014 00b4 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 6015 00b8 C6030000 		.word	.LC35
 6016              		.cfi_endproc
 6017              	.LFE1373:
 6018              		.fnend
 6020              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh,"axG",%pr
 6021              		.align	1
 6022              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 6023              		.thumb
 6024              		.thumb_func
 6026              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:
 6027              		.fnstart
 6028              	.LFB1374:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 6029              		.loc 19 301 0
 6030              		.cfi_startproc
 6031              		@ args = 0, pretend = 0, frame = 16
 6032              		@ frame_needed = 0, uses_anonymous_args = 0
 6033              	.LVL723:
 6034 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 6035              		.save {r4, r5, r6, lr}
 6036              		.pad #16
 6037              	.LCFI75:
 6038              		.cfi_def_cfa_offset 32
 6039              		.cfi_offset 4, -16
 6040              		.cfi_offset 5, -12
 6041              		.cfi_offset 6, -8
 6042              		.cfi_offset 14, -4
 6043              	.LVL724:
 6044              	.LBB522:
 6045              	.LBB523:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 6046              		.loc 1 19 0
 6047 0002 1C4B     		ldr	r3, .L329
 6048              	.LBE523:
 6049              	.LBE522:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 6050              		.loc 19 301 0
 6051 0004 0446     		mov	r4, r0
 6052              	.LBB527:
 6053              	.LBB526:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 6054              		.loc 1 19 0
 6055 0006 0193     		str	r3, [sp, #4]
 6056              	.LVL725:
 6057              	.LBB524:
 6058              	.LBB525:
 6059              		.loc 26 52 0
 6060 0008 0023     		movs	r3, #0
 6061 000a 0293     		str	r3, [sp, #8]
 6062 000c 0393     		str	r3, [sp, #12]
 6063              	.LVL726:
 6064              	.LBE525:
 6065              	.LBE524:
 6066              	.LBE526:
 6067              	.LBE527:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 6068              		.loc 19 301 0
 6069 000e 0D46     		mov	r5, r1
 6070              	.LBB528:
 6071              	.LBB529:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 6072              		.loc 24 134 0
 6073 0010 FFF7FEFF 		bl	millis
 6074              	.LVL727:
 6075              	.LBE529:
 6076              	.LBE528:
 304:./lib/ros_lib/ros/node_handle.h **** 
 6077              		.loc 19 304 0
 6078 0014 E268     		ldr	r2, [r4, #12]
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 6079              		.loc 19 306 0
 6080 0016 2946     		mov	r1, r5
 304:./lib/ros_lib/ros/node_handle.h **** 
 6081              		.loc 19 304 0
 6082 0018 861A     		subs	r6, r0, r2
 6083              	.LVL728:
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 6084              		.loc 19 307 0
 6085 001a 4FF47A75 		mov	r5, #1000
 6086              	.LVL729:
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 6087              		.loc 19 306 0
 6088 001e 01A8     		add	r0, sp, #4
 6089 0020 FFF7FEFF 		bl	_ZN8std_msgs4Time11deserializeEPh
 6090              	.LVL730:
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 6091              		.loc 19 307 0
 6092 0024 B6FBF5F2 		udiv	r2, r6, r5
 6093 0028 029B     		ldr	r3, [sp, #8]
 6094 002a 1344     		add	r3, r3, r2
 308:./lib/ros_lib/ros/node_handle.h **** 
 6095              		.loc 19 308 0
 6096 002c 05FB1262 		mls	r2, r5, r2, r6
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 6097              		.loc 19 307 0
 6098 0030 0293     		str	r3, [sp, #8]
 308:./lib/ros_lib/ros/node_handle.h **** 
 6099              		.loc 19 308 0
 6100 0032 114E     		ldr	r6, .L329+4
 6101              	.LVL731:
 6102 0034 039B     		ldr	r3, [sp, #12]
 6103 0036 06FB0232 		mla	r2, r6, r2, r3
 6104 003a 0392     		str	r2, [sp, #12]
 6105              	.LVL732:
 6106              	.LBB530:
 6107              	.LBB531:
 6108              	.LBB532:
 6109              	.LBB533:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 6110              		.loc 24 134 0
 6111 003c FFF7FEFF 		bl	millis
 6112              	.LVL733:
 6113              	.LBE533:
 6114              	.LBE532:
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 6115              		.loc 19 327 0
 6116 0040 B0FBF5F3 		udiv	r3, r0, r5
 6117 0044 029A     		ldr	r2, [sp, #8]
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 6118              		.loc 19 328 0
 6119 0046 0399     		ldr	r1, [sp, #12]
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 6120              		.loc 19 327 0
 6121 0048 013A     		subs	r2, r2, #1
 6122 004a D21A     		subs	r2, r2, r3
 6123 004c 2261     		str	r2, [r4, #16]
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 6124              		.loc 19 328 0
 6125 004e 0B4A     		ldr	r2, .L329+8
 6126 0050 05FB1300 		mls	r0, r5, r3, r0
 6127              	.LVL734:
 6128 0054 0A44     		add	r2, r2, r1
 6129 0056 2146     		mov	r1, r4
 6130 0058 06FB1023 		mls	r3, r6, r0, r2
 329:./lib/ros_lib/ros/node_handle.h ****       }
 6131              		.loc 19 329 0
 6132 005c 04F11000 		add	r0, r4, #16
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 6133              		.loc 19 328 0
 6134 0060 41F8143F 		str	r3, [r1, #20]!
 329:./lib/ros_lib/ros/node_handle.h ****       }
 6135              		.loc 19 329 0
 6136 0064 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 6137              	.LVL735:
 6138              	.LBE531:
 6139              	.LBE530:
 6140              	.LBB534:
 6141              	.LBB535:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 6142              		.loc 24 134 0
 6143 0068 FFF7FEFF 		bl	millis
 6144              	.LVL736:
 6145              	.LBE535:
 6146              	.LBE534:
 311:./lib/ros_lib/ros/node_handle.h ****       }
 6147              		.loc 19 311 0
 6148 006c C4F8FC04 		str	r0, [r4, #1276]
 312:./lib/ros_lib/ros/node_handle.h **** 
 6149              		.loc 19 312 0
 6150 0070 04B0     		add	sp, sp, #16
 6151              	.LCFI76:
 6152              		.cfi_def_cfa_offset 16
 6153              		@ sp needed
 6154 0072 70BD     		pop	{r4, r5, r6, pc}
 6155              	.LVL737:
 6156              	.L330:
 6157              		.align	2
 6158              	.L329:
 6159 0074 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 6160 0078 40420F00 		.word	1000000
 6161 007c 00CA9A3B 		.word	1000000000
 6162              		.cfi_endproc
 6163              	.LFE1374:
 6164              		.fnend
 6166              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv,"axG",%pro
 6167              		.align	1
 6168              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 6169              		.thumb
 6170              		.thumb_func
 6172              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:
 6173              		.fnstart
 6174              	.LFB1365:
 184:./lib/ros_lib/ros/node_handle.h **** 
 6175              		.loc 19 184 0
 6176              		.cfi_startproc
 6177              		@ args = 0, pretend = 0, frame = 0
 6178              		@ frame_needed = 0, uses_anonymous_args = 0
 6179              	.LVL738:
 6180 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 6181              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 6182              	.LCFI77:
 6183              		.cfi_def_cfa_offset 32
 6184              		.cfi_offset 3, -32
 6185              		.cfi_offset 4, -28
 6186              		.cfi_offset 5, -24
 6187              		.cfi_offset 6, -20
 6188              		.cfi_offset 7, -16
 6189              		.cfi_offset 8, -12
 6190              		.cfi_offset 9, -8
 6191              		.cfi_offset 14, -4
 184:./lib/ros_lib/ros/node_handle.h **** 
 6192              		.loc 19 184 0
 6193 0004 0446     		mov	r4, r0
 6194              	.LVL739:
 6195              	.LBB543:
 6196              	.LBB544:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 6197              		.loc 24 134 0
 6198 0006 FFF7FEFF 		bl	millis
 6199              	.LVL740:
 6200              	.LBE544:
 6201              	.LBE543:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 6202              		.loc 19 188 0
 6203 000a 42F6F822 		movw	r2, #11000
 6204 000e D4F8FC34 		ldr	r3, [r4, #1276]
 6205              	.LBB546:
 6206              	.LBB545:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 6207              		.loc 24 134 0
 6208 0012 0646     		mov	r6, r0
 6209              	.LVL741:
 6210              	.LBE545:
 6211              	.LBE546:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 6212              		.loc 19 188 0
 6213 0014 C31A     		subs	r3, r0, r3
 6214 0016 9342     		cmp	r3, r2
 189:./lib/ros_lib/ros/node_handle.h ****          }
 6215              		.loc 19 189 0
 6216 0018 84BF     		itt	hi
 6217 001a 0023     		movhi	r3, #0
 6218 001c 84F8F434 		strbhi	r3, [r4, #1268]
 193:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 6219              		.loc 19 193 0
 6220 0020 D4F8E034 		ldr	r3, [r4, #1248]
 6221 0024 33B1     		cbz	r3, .L333
 194:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 6222              		.loc 19 194 0
 6223 0026 D4F80035 		ldr	r3, [r4, #1280]
 6224 002a 8342     		cmp	r3, r0
 195:./lib/ros_lib/ros/node_handle.h ****           }
 6225              		.loc 19 195 0
 6226 002c 3CBF     		itt	cc
 6227 002e 0023     		movcc	r3, #0
 6228 0030 C4F8E034 		strcc	r3, [r4, #1248]
 6229              	.L333:
 6230              	.LBB547:
 6231              	.LBB548:
 6232              	.LBB549:
 118:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 6233              		.loc 24 118 0
 6234 0034 744F     		ldr	r7, .L373
 6235              	.LBE549:
 6236              	.LBE548:
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 6237              		.loc 19 252 0
 6238 0036 4FF00008 		mov	r8, #0
 269:./lib/ros_lib/ros/node_handle.h ****               }
 6239              		.loc 19 269 0
 6240 003a 04F11809 		add	r9, r4, #24
 6241              	.LVL742:
 6242              	.L334:
 6243              	.LBB552:
 6244              	.LBB550:
 118:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 6245              		.loc 24 118 0
 6246 003e 7A6A     		ldr	r2, [r7, #36]
 6247 0040 3B6A     		ldr	r3, [r7, #32]
 6248 0042 9A42     		cmp	r2, r3
 6249 0044 00F0CC80 		beq	.L335
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 6250              		.loc 24 121 0
 6251 0048 3B6A     		ldr	r3, [r7, #32]
 6252              	.LBE550:
 6253              	.LBE552:
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 6254              		.loc 19 206 0
 6255 004a D4F8E054 		ldr	r5, [r4, #1248]
 6256              	.LBB553:
 6257              	.LBB551:
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 6258              		.loc 24 121 0
 6259 004e 07EB4303 		add	r3, r7, r3, lsl #1
 6260 0052 1B8D     		ldrh	r3, [r3, #40]
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 6261              		.loc 24 122 0
 6262 0054 3A6A     		ldr	r2, [r7, #32]
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 6263              		.loc 24 121 0
 6264 0056 9BB2     		uxth	r3, r3
 6265              	.LVL743:
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 6266              		.loc 24 122 0
 6267 0058 0132     		adds	r2, r2, #1
 6268 005a C2F30802 		ubfx	r2, r2, #0, #9
 6269 005e 3A62     		str	r2, [r7, #32]
 6270              	.LVL744:
 6271              	.LBE551:
 6272              	.LBE553:
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 6273              		.loc 19 205 0
 6274 0060 D4F8F024 		ldr	r2, [r4, #1264]
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 6275              		.loc 19 206 0
 6276 0064 072D     		cmp	r5, #7
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 6277              		.loc 19 205 0
 6278 0066 1A44     		add	r2, r2, r3
 6279 0068 C4F8F024 		str	r2, [r4, #1264]
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 6280              		.loc 19 206 0
 6281 006c 0FD1     		bne	.L336
 207:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 6282              		.loc 19 207 0
 6283 006e D4F8EC24 		ldr	r2, [r4, #1260]
 6284 0072 511C     		adds	r1, r2, #1
 6285 0074 2244     		add	r2, r2, r4
 6286 0076 C4F8EC14 		str	r1, [r4, #1260]
 6287 007a 1376     		strb	r3, [r2, #24]
 208:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 6288              		.loc 19 208 0
 6289 007c D4F8E434 		ldr	r3, [r4, #1252]
 6290 0080 013B     		subs	r3, r3, #1
 6291 0082 C4F8E434 		str	r3, [r4, #1252]
 6292              	.L371:
 209:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 6293              		.loc 19 209 0
 6294 0086 002B     		cmp	r3, #0
 6295 0088 D9D1     		bne	.L334
 210:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 6296              		.loc 19 210 0
 6297 008a 0823     		movs	r3, #8
 6298 008c 1AE0     		b	.L369
 6299              	.L336:
 211:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 6300              		.loc 19 211 0
 6301 008e A5B9     		cbnz	r5, .L339
 212:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 6302              		.loc 19 212 0
 6303 0090 FF2B     		cmp	r3, #255
 6304 0092 07D1     		bne	.L340
 213:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 6305              		.loc 19 213 0
 6306 0094 0123     		movs	r3, #1
 6307 0096 C4F8E034 		str	r3, [r4, #1248]
 214:./lib/ros_lib/ros/node_handle.h ****             }
 6308              		.loc 19 214 0
 6309 009a 06F11403 		add	r3, r6, #20
 6310 009e C4F80035 		str	r3, [r4, #1280]
 6311 00a2 CCE7     		b	.L334
 6312              	.L340:
 6313              	.LVL745:
 6314              	.LBB554:
 6315              	.LBB555:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 6316              		.loc 24 134 0
 6317 00a4 FFF7FEFF 		bl	millis
 6318              	.LVL746:
 6319              	.LBE555:
 6320              	.LBE554:
 216:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 6321              		.loc 19 216 0
 6322 00a8 801B     		subs	r0, r0, r6
 6323 00aa 0528     		cmp	r0, #5
 6324 00ac C7D9     		bls	.L334
 218:./lib/ros_lib/ros/node_handle.h ****               return -2;
 6325              		.loc 19 218 0
 6326 00ae 84F8F454 		strb	r5, [r4, #1268]
 219:./lib/ros_lib/ros/node_handle.h ****             }
 6327              		.loc 19 219 0
 6328 00b2 6FF00100 		mvn	r0, #1
 6329 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 6330              	.LVL747:
 6331              	.L339:
 221:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 6332              		.loc 19 221 0
 6333 00ba 012D     		cmp	r5, #1
 6334 00bc 0FD1     		bne	.L342
 222:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 6335              		.loc 19 222 0
 6336 00be FE2B     		cmp	r3, #254
 6337 00c0 03D1     		bne	.L343
 223:./lib/ros_lib/ros/node_handle.h ****             }else{
 6338              		.loc 19 223 0
 6339 00c2 0223     		movs	r3, #2
 6340              	.L369:
 6341 00c4 C4F8E034 		str	r3, [r4, #1248]
 6342 00c8 B9E7     		b	.L334
 6343              	.L343:
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 6344              		.loc 19 226 0
 6345 00ca 94F8F434 		ldrb	r3, [r4, #1268]	@ zero_extendqisi2
 225:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 6346              		.loc 19 225 0
 6347 00ce C4F8E084 		str	r8, [r4, #1248]
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 6348              		.loc 19 226 0
 6349 00d2 002B     		cmp	r3, #0
 6350 00d4 B3D1     		bne	.L334
 227:./lib/ros_lib/ros/node_handle.h ****             }
 6351              		.loc 19 227 0
 6352 00d6 2046     		mov	r0, r4
 6353 00d8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 6354              	.LVL748:
 6355 00dc AFE7     		b	.L334
 6356              	.L342:
 229:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 6357              		.loc 19 229 0
 6358 00de 022D     		cmp	r5, #2
 6359 00e0 05D1     		bne	.L344
 230:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 6360              		.loc 19 230 0
 6361 00e2 C4F8E434 		str	r3, [r4, #1252]
 231:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 6362              		.loc 19 231 0
 6363 00e6 C4F8EC84 		str	r8, [r4, #1260]
 232:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 6364              		.loc 19 232 0
 6365 00ea 0322     		movs	r2, #3
 6366 00ec 20E0     		b	.L370
 6367              	.L344:
 234:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 6368              		.loc 19 234 0
 6369 00ee 032D     		cmp	r5, #3
 6370 00f0 07D1     		bne	.L345
 235:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 6371              		.loc 19 235 0
 6372 00f2 D4F8E424 		ldr	r2, [r4, #1252]
 6373 00f6 02EB0323 		add	r3, r2, r3, lsl #8
 6374 00fa C4F8E434 		str	r3, [r4, #1252]
 236:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 6375              		.loc 19 236 0
 6376 00fe 0423     		movs	r3, #4
 6377 0100 E0E7     		b	.L369
 6378              	.L345:
 237:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 6379              		.loc 19 237 0
 6380 0102 042D     		cmp	r5, #4
 6381 0104 0FD1     		bne	.L346
 238:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 6382              		.loc 19 238 0
 6383 0106 414B     		ldr	r3, .L373+4
 6384 0108 1340     		ands	r3, r3, r2
 6385 010a 002B     		cmp	r3, #0
 6386 010c BEBF     		ittt	lt
 6387 010e 03F1FF33 		addlt	r3, r3, #-1
 6388 0112 63F0FF03 		ornlt	r3, r3, #255
 6389 0116 0133     		addlt	r3, r3, #1
 6390 0118 FF2B     		cmp	r3, #255
 6391 011a 01D1     		bne	.L347
 239:./lib/ros_lib/ros/node_handle.h **** 	    else
 6392              		.loc 19 239 0
 6393 011c 0523     		movs	r3, #5
 6394 011e D1E7     		b	.L369
 6395              	.L347:
 241:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 6396              		.loc 19 241 0
 6397 0120 C4F8E084 		str	r8, [r4, #1248]
 6398 0124 8BE7     		b	.L334
 6399              	.L346:
 242:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 6400              		.loc 19 242 0
 6401 0126 052D     		cmp	r5, #5
 6402 0128 07D1     		bne	.L349
 243:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 6403              		.loc 19 243 0
 6404 012a C4F8E834 		str	r3, [r4, #1256]
 244:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 6405              		.loc 19 244 0
 6406 012e 0622     		movs	r2, #6
 6407              	.L370:
 6408 0130 C4F8E024 		str	r2, [r4, #1248]
 245:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 6409              		.loc 19 245 0
 6410 0134 C4F8F034 		str	r3, [r4, #1264]
 6411 0138 81E7     		b	.L334
 6412              	.L349:
 246:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 6413              		.loc 19 246 0
 6414 013a 062D     		cmp	r5, #6
 6415 013c 0BD1     		bne	.L350
 247:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 6416              		.loc 19 247 0
 6417 013e D4F8E824 		ldr	r2, [r4, #1256]
 6418 0142 02EB0323 		add	r3, r2, r3, lsl #8
 6419 0146 C4F8E834 		str	r3, [r4, #1256]
 248:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 6420              		.loc 19 248 0
 6421 014a 0723     		movs	r3, #7
 6422 014c C4F8E034 		str	r3, [r4, #1248]
 249:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 6423              		.loc 19 249 0
 6424 0150 D4F8E434 		ldr	r3, [r4, #1252]
 6425 0154 97E7     		b	.L371
 6426              	.L350:
 251:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 6427              		.loc 19 251 0
 6428 0156 082D     		cmp	r5, #8
 6429 0158 7FF471AF 		bne	.L334
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 6430              		.loc 19 253 0
 6431 015c 2B4B     		ldr	r3, .L373+4
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 6432              		.loc 19 252 0
 6433 015e C4F8E084 		str	r8, [r4, #1248]
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 6434              		.loc 19 253 0
 6435 0162 1340     		ands	r3, r3, r2
 6436 0164 002B     		cmp	r3, #0
 6437 0166 BEBF     		ittt	lt
 6438 0168 03F1FF33 		addlt	r3, r3, #-1
 6439 016c 63F0FF03 		ornlt	r3, r3, #255
 6440 0170 0133     		addlt	r3, r3, #1
 6441 0172 FF2B     		cmp	r3, #255
 6442 0174 7FF463AF 		bne	.L334
 254:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 6443              		.loc 19 254 0
 6444 0178 D4F8E834 		ldr	r3, [r4, #1256]
 6445 017c 6BB9     		cbnz	r3, .L353
 255:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 6446              		.loc 19 255 0
 6447 017e 2046     		mov	r0, r4
 6448 0180 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 6449              	.LVL749:
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 6450              		.loc 19 256 0
 6451 0184 2046     		mov	r0, r4
 6452 0186 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 6453              	.LVL750:
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 6454              		.loc 19 257 0
 6455 018a C4F8F864 		str	r6, [r4, #1272]
 258:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 6456              		.loc 19 258 0
 6457 018e C4F8FC64 		str	r6, [r4, #1276]
 259:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 6458              		.loc 19 259 0
 6459 0192 4FF0FF30 		mov	r0, #-1
 6460 0196 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 6461              	.LVL751:
 6462              	.L353:
 260:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 6463              		.loc 19 260 0
 6464 019a 0A2B     		cmp	r3, #10
 6465 019c 04D1     		bne	.L354
 261:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 6466              		.loc 19 261 0
 6467 019e 4946     		mov	r1, r9
 6468 01a0 2046     		mov	r0, r4
 6469 01a2 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 6470              	.LVL752:
 6471 01a6 4AE7     		b	.L334
 6472              	.L354:
 262:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 6473              		.loc 19 262 0
 6474 01a8 062B     		cmp	r3, #6
 6475 01aa 08D1     		bne	.L355
 263:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 6476              		.loc 19 263 0
 6477 01ac 4946     		mov	r1, r9
 6478 01ae 04F5A160 		add	r0, r4, #1288
 6479 01b2 FFF7FEFF 		bl	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 6480              	.LVL753:
 264:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 6481              		.loc 19 264 0
 6482 01b6 0123     		movs	r3, #1
 6483 01b8 84F80435 		strb	r3, [r4, #1284]
 6484 01bc 3FE7     		b	.L334
 6485              	.L355:
 265:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 6486              		.loc 19 265 0
 6487 01be 0B2B     		cmp	r3, #11
 6488 01c0 02D1     		bne	.L356
 266:./lib/ros_lib/ros/node_handle.h ****               }else{
 6489              		.loc 19 266 0
 6490 01c2 84F8F484 		strb	r8, [r4, #1268]
 6491 01c6 3AE7     		b	.L334
 6492              	.L356:
 268:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 6493              		.loc 19 268 0
 6494 01c8 04EB8303 		add	r3, r4, r3, lsl #2
 6495 01cc D3F8EC02 		ldr	r0, [r3, #748]
 6496 01d0 0028     		cmp	r0, #0
 6497 01d2 3FF434AF 		beq	.L334
 269:./lib/ros_lib/ros/node_handle.h ****               }
 6498              		.loc 19 269 0
 6499 01d6 0368     		ldr	r3, [r0]
 6500 01d8 4946     		mov	r1, r9
 6501 01da 1B68     		ldr	r3, [r3]
 6502 01dc 9847     		blx	r3
 6503              	.LVL754:
 6504 01de 2EE7     		b	.L334
 6505              	.L335:
 6506              	.LBE547:
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 6507              		.loc 19 276 0
 6508 01e0 94F8F404 		ldrb	r0, [r4, #1268]	@ zero_extendqisi2
 6509 01e4 70B1     		cbz	r0, .L372
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 6510              		.loc 19 276 0 is_stmt 0 discriminator 1
 6511 01e6 40F6C412 		movw	r2, #2500
 6512 01ea D4F8F834 		ldr	r3, [r4, #1272]
 6513 01ee F31A     		subs	r3, r6, r3
 6514 01f0 9342     		cmp	r3, r2
 6515 01f2 04D9     		bls	.L358
 277:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 6516              		.loc 19 277 0 is_stmt 1
 6517 01f4 2046     		mov	r0, r4
 6518 01f6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 6519              	.LVL755:
 278:./lib/ros_lib/ros/node_handle.h ****         }
 6520              		.loc 19 278 0
 6521 01fa C4F8F864 		str	r6, [r4, #1272]
 6522              	.L358:
 281:./lib/ros_lib/ros/node_handle.h ****       }
 6523              		.loc 19 281 0
 6524 01fe 0020     		movs	r0, #0
 6525 0200 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 6526              	.LVL756:
 6527              	.L372:
 282:./lib/ros_lib/ros/node_handle.h **** 
 6528              		.loc 19 282 0
 6529 0204 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 6530              	.LVL757:
 6531              	.L374:
 6532              		.align	2
 6533              	.L373:
 6534 0208 00000000 		.word	.LANCHOR1
 6535 020c FF000080 		.word	-2147483393
 6536              		.cfi_endproc
 6537              	.LFE1365:
 6538              		.fnend
 6540              		.global	__aeabi_dmul
 6541              		.global	__aeabi_dadd
 6542              		.global	__aeabi_i2d
 6543              		.global	__aeabi_ddiv
 6544              		.global	__aeabi_f2iz
 6545              		.global	__aeabi_dsub
 6546              		.global	__aeabi_f2uiz
 6547              		.global	__aeabi_dcmpge
 6548              		.global	__aeabi_dcmple
 6549              		.section	.text.startup,"ax",%progbits
 6550              		.align	1
 6551              		.global	main
 6552              		.thumb
 6553              		.thumb_func
 6555              	main:
 6556              		.fnstart
 6557              	.LFB1281:
 130:src/main.cpp  ****   /* System Clocks Configuration */
 6558              		.loc 21 130 0
 6559              		.cfi_startproc
 6560              		@ args = 0, pretend = 0, frame = 1032
 6561              		@ frame_needed = 0, uses_anonymous_args = 0
 6562 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6563              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6564              	.LCFI78:
 6565              		.cfi_def_cfa_offset 36
 6566              		.cfi_offset 4, -36
 6567              		.cfi_offset 5, -32
 6568              		.cfi_offset 6, -28
 6569              		.cfi_offset 7, -24
 6570              		.cfi_offset 8, -20
 6571              		.cfi_offset 9, -16
 6572              		.cfi_offset 10, -12
 6573              		.cfi_offset 11, -8
 6574              		.cfi_offset 14, -4
 6575              	.LBB596:
 6576              	.LBB597:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 6577              		.loc 19 147 0
 6578 0004 3A4C     		ldr	r4, .L431
 6579              	.LBE597:
 6580              	.LBE596:
 130:src/main.cpp  ****   /* System Clocks Configuration */
 6581              		.loc 21 130 0
 6582              		.pad #1068
 6583 0006 ADF22C4D 		subw	sp, sp, #1068
 6584              	.LCFI79:
 6585              		.cfi_def_cfa_offset 1104
 132:src/main.cpp  **** 
 6586              		.loc 21 132 0
 6587 000a FFF7FEFF 		bl	RCC_Configuration
 6588              	.LVL758:
 134:src/main.cpp  ****   I2C1_Init();
 6589              		.loc 21 134 0
 6590 000e 0121     		movs	r1, #1
 6591 0010 3848     		ldr	r0, .L431+4
 6592 0012 FFF7FEFF 		bl	GPIO_PinRemapConfig
 6593              	.LVL759:
 135:src/main.cpp  ****   SysTick_Init();
 6594              		.loc 21 135 0
 6595 0016 FFF7FEFF 		bl	I2C1_Init
 6596              	.LVL760:
 136:src/main.cpp  ****   DEBUG_Init();
 6597              		.loc 21 136 0
 6598 001a FFF7FEFF 		bl	SysTick_Init
 6599              	.LVL761:
 137:src/main.cpp  ****   SHUTDOWN_Init();
 6600              		.loc 21 137 0
 6601 001e FFF7FEFF 		bl	DEBUG_Init
 6602              	.LVL762:
 138:src/main.cpp  ****   LED_Init();
 6603              		.loc 21 138 0
 6604 0022 FFF7FEFF 		bl	SHUTDOWN_Init
 6605              	.LVL763:
 139:src/main.cpp  **** 
 6606              		.loc 21 139 0
 6607 0026 FFF7FEFF 		bl	LED_Init
 6608              	.LVL764:
 6609              	.LBB599:
 6610              	.LBB598:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 6611              		.loc 19 147 0
 6612 002a 04F58660 		add	r0, r4, #1072
 6613 002e FFF7FEFF 		bl	_ZN15ArduinoHardware4initEv
 6614              	.LVL765:
 6615 0032 04F6A402 		addw	r2, r4, #2212
 151:./lib/ros_lib/ros/node_handle.h ****       };
 6616              		.loc 19 151 0
 6617 0036 1146     		mov	r1, r2
 148:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 6618              		.loc 19 148 0
 6619 0038 0023     		movs	r3, #0
 6620 003a C4F80C39 		str	r3, [r4, #2316]
 149:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 6621              		.loc 19 149 0
 6622 003e C4F81039 		str	r3, [r4, #2320]
 150:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 6623              		.loc 19 150 0
 6624 0042 C4F81839 		str	r3, [r4, #2328]
 151:./lib/ros_lib/ros/node_handle.h ****       };
 6625              		.loc 19 151 0
 6626 0046 C4F81439 		str	r3, [r4, #2324]
 6627              	.LVL766:
 6628              	.L378:
 6629              	.LBE598:
 6630              	.LBE599:
 6631              	.LBB600:
 6632              	.LBB601:
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 6633              		.loc 19 354 0
 6634 004a 51F8040F 		ldr	r0, [r1, #4]!
 6635 004e 40B9     		cbnz	r0, .L376
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 6636              		.loc 19 355 0
 6637 0050 2948     		ldr	r0, .L431+8
 6638 0052 04EB8301 		add	r1, r4, r3, lsl #2
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 6639              		.loc 19 356 0
 6640 0056 6433     		adds	r3, r3, #100
 6641              	.LVL767:
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 6642              		.loc 19 355 0
 6643 0058 C1F8A808 		str	r0, [r1, #2216]
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 6644              		.loc 19 356 0
 6645 005c C4F86039 		str	r3, [r4, #2400]
 6646 0060 02E0     		b	.L377
 6647              	.LVL768:
 6648              	.L376:
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 6649              		.loc 19 353 0
 6650 0062 0133     		adds	r3, r3, #1
 6651              	.LVL769:
 6652 0064 192B     		cmp	r3, #25
 6653 0066 F0D1     		bne	.L378
 6654              	.LVL770:
 6655              	.L377:
 6656              	.LBE601:
 6657              	.LBE600:
 6658              	.LBB602:
 6659              	.LBB603:
 6660 0068 0023     		movs	r3, #0
 6661              	.LVL771:
 6662              	.L381:
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 6663              		.loc 19 354 0
 6664 006a 52F8041F 		ldr	r1, [r2, #4]!
 6665 006e 41B9     		cbnz	r1, .L379
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 6666              		.loc 19 355 0
 6667 0070 2249     		ldr	r1, .L431+12
 6668 0072 04EB8302 		add	r2, r4, r3, lsl #2
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 6669              		.loc 19 356 0
 6670 0076 6433     		adds	r3, r3, #100
 6671              	.LVL772:
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 6672              		.loc 19 355 0
 6673 0078 C2F8A818 		str	r1, [r2, #2216]
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 6674              		.loc 19 356 0
 6675 007c C4F8A039 		str	r3, [r4, #2464]
 6676 0080 02E0     		b	.L380
 6677              	.LVL773:
 6678              	.L379:
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 6679              		.loc 19 353 0
 6680 0082 0133     		adds	r3, r3, #1
 6681              	.LVL774:
 6682 0084 192B     		cmp	r3, #25
 6683 0086 F0D1     		bne	.L381
 6684              	.LVL775:
 6685              	.L380:
 6686 0088 1D49     		ldr	r1, .L431+16
 6687              	.LBE603:
 6688              	.LBE602:
 6689              	.LBB605:
 6690              	.LBB606:
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 6691              		.loc 19 339 0
 6692 008a 0023     		movs	r3, #0
 6693              	.LBE606:
 6694              	.LBE605:
 6695              	.LBB608:
 6696              	.LBB604:
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 6697              		.loc 19 353 0
 6698 008c 0A46     		mov	r2, r1
 6699              	.LVL776:
 6700              	.L384:
 6701              	.LBE604:
 6702              	.LBE608:
 6703              	.LBB609:
 6704              	.LBB607:
 340:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 6705              		.loc 19 340 0
 6706 008e 52F8040F 		ldr	r0, [r2, #4]!
 6707 0092 60B9     		cbnz	r0, .L382
 341:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 6708              		.loc 19 341 0
 6709 0094 1B4A     		ldr	r2, .L431+20
 6710 0096 04EB8300 		add	r0, r4, r3, lsl #2
 6711 009a C0F84428 		str	r2, [r0, #2116]
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 6712              		.loc 19 342 0
 6713 009e 7D33     		adds	r3, r3, #125
 6714              	.LVL777:
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 6715              		.loc 19 343 0
 6716 00a0 A2F28C52 		subw	r2, r2, #1420
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 6717              		.loc 19 342 0
 6718 00a4 C4F8C039 		str	r3, [r4, #2496]
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 6719              		.loc 19 343 0
 6720 00a8 C4F8C429 		str	r2, [r4, #2500]
 6721 00ac 02E0     		b	.L383
 6722              	.LVL778:
 6723              	.L382:
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 6724              		.loc 19 339 0
 6725 00ae 0133     		adds	r3, r3, #1
 6726              	.LVL779:
 6727 00b0 192B     		cmp	r3, #25
 6728 00b2 ECD1     		bne	.L384
 6729              	.LVL780:
 6730              	.L383:
 6731              	.LBE607:
 6732              	.LBE609:
 6733              	.LBB610:
 6734              	.LBB611:
 6735              	.LBB612:
 6736 00b4 0023     		movs	r3, #0
 6737              	.LVL781:
 6738              	.L388:
 340:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 6739              		.loc 19 340 0
 6740 00b6 51F8042F 		ldr	r2, [r1, #4]!
 6741 00ba 62B9     		cbnz	r2, .L385
 341:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 6742              		.loc 19 341 0
 6743 00bc 124A     		ldr	r2, .L431+24
 6744 00be 04EB8301 		add	r1, r4, r3, lsl #2
 6745 00c2 C1F84428 		str	r2, [r1, #2116]
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 6746              		.loc 19 342 0
 6747 00c6 7D33     		adds	r3, r3, #125
 6748              	.LVL782:
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 6749              		.loc 19 343 0
 6750 00c8 A2F5BE62 		sub	r2, r2, #1520
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 6751              		.loc 19 342 0
 6752 00cc C4F8243A 		str	r3, [r4, #2596]
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 6753              		.loc 19 343 0
 6754 00d0 C4F8282A 		str	r2, [r4, #2600]
 6755 00d4 02E0     		b	.L386
 6756              	.LVL783:
 6757              	.L385:
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 6758              		.loc 19 339 0
 6759 00d6 0133     		adds	r3, r3, #1
 6760              	.LVL784:
 6761 00d8 192B     		cmp	r3, #25
 6762 00da ECD1     		bne	.L388
 6763              	.LVL785:
 6764              	.L386:
 6765              	.LBE612:
 6766              	.LBE611:
 6767              	.LBE610:
 151:src/main.cpp  ****     nh.spinOnce();
 6768              		.loc 21 151 0
 6769 00dc 94F82039 		ldrb	r3, [r4, #2336]	@ zero_extendqisi2
 6770              	.LBB613:
 6771              	.LBB614:
 287:./lib/ros_lib/ros/node_handle.h ****       };
 6772              		.loc 19 287 0
 6773 00e0 0348     		ldr	r0, .L431
 6774              	.LBE614:
 6775              	.LBE613:
 151:src/main.cpp  ****     nh.spinOnce();
 6776              		.loc 21 151 0
 6777 00e2 9BB9     		cbnz	r3, .L389
 152:src/main.cpp  ****   }
 6778              		.loc 21 152 0
 6779 00e4 00F22C40 		addw	r0, r0, #1068
 6780 00e8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 6781              	.LVL786:
 6782 00ec F6E7     		b	.L386
 6783              	.L432:
 6784 00ee 00BF     		.align	2
 6785              	.L431:
 6786 00f0 00000000 		.word	.LANCHOR1
 6787 00f4 00023000 		.word	3146240
 6788 00f8 5C090000 		.word	.LANCHOR1+2396
 6789 00fc 9C090000 		.word	.LANCHOR1+2460
 6790 0100 40080000 		.word	.LANCHOR1+2112
 6791 0104 B8090000 		.word	.LANCHOR1+2488
 6792 0108 1C0A0000 		.word	.LANCHOR1+2588
 6793              	.L389:
 155:src/main.cpp  **** 
 6794              		.loc 21 155 0
 6795 010c 0023     		movs	r3, #0
 6796 010e 80F82834 		strb	r3, [r0, #1064]
 160:src/main.cpp  ****     KP = 5000;
 6797              		.loc 21 160 0
 6798 0112 23AA     		add	r2, sp, #140
 6799 0114 0123     		movs	r3, #1
 6800 0116 A449     		ldr	r1, .L433
 6801 0118 00F22C40 		addw	r0, r0, #1068
 6802 011c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 6803              	.LVL787:
 6804 0120 08B9     		cbnz	r0, .L390
 161:src/main.cpp  ****   }
 6805              		.loc 21 161 0
 6806 0122 A24B     		ldr	r3, .L433+4
 6807 0124 2393     		str	r3, [sp, #140]	@ float
 6808              	.L390:
 164:src/main.cpp  ****     KI = 5000;
 6809              		.loc 21 164 0
 6810 0126 0123     		movs	r3, #1
 6811 0128 24AA     		add	r2, sp, #144
 6812 012a A149     		ldr	r1, .L433+8
 6813 012c A148     		ldr	r0, .L433+12
 6814 012e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 6815              	.LVL788:
 6816 0132 08B9     		cbnz	r0, .L391
 165:src/main.cpp  ****   }
 6817              		.loc 21 165 0
 6818 0134 9D4B     		ldr	r3, .L433+4
 6819 0136 2493     		str	r3, [sp, #144]	@ float
 6820              	.L391:
 168:src/main.cpp  ****     KD = 4;
 6821              		.loc 21 168 0
 6822 0138 0123     		movs	r3, #1
 6823 013a 25AA     		add	r2, sp, #148
 6824 013c 9E49     		ldr	r1, .L433+16
 6825 013e 9D48     		ldr	r0, .L433+12
 6826 0140 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 6827              	.LVL789:
 6828 0144 10B9     		cbnz	r0, .L392
 169:src/main.cpp  ****   }
 6829              		.loc 21 169 0
 6830 0146 4FF08143 		mov	r3, #1082130432
 6831 014a 2593     		str	r3, [sp, #148]	@ float
 6832              	.L392:
 172:src/main.cpp  ****     integralSaturation = 10000;
 6833              		.loc 21 172 0
 6834 014c 0123     		movs	r3, #1
 6835 014e 26AA     		add	r2, sp, #152
 6836 0150 9A49     		ldr	r1, .L433+20
 6837 0152 9848     		ldr	r0, .L433+12
 6838 0154 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 6839              	.LVL790:
 6840 0158 08B9     		cbnz	r0, .L393
 173:src/main.cpp  ****   }
 6841              		.loc 21 173 0
 6842 015a 994B     		ldr	r3, .L433+24
 6843 015c 2693     		str	r3, [sp, #152]	@ float
 6844              	.L393:
 176:src/main.cpp  ****     wheelRadius = 0.04;
 6845              		.loc 21 176 0
 6846 015e 0123     		movs	r3, #1
 6847 0160 27AA     		add	r2, sp, #156
 6848 0162 9849     		ldr	r1, .L433+28
 6849 0164 9348     		ldr	r0, .L433+12
 6850 0166 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 6851              	.LVL791:
 6852 016a 08B9     		cbnz	r0, .L394
 177:src/main.cpp  ****   }
 6853              		.loc 21 177 0
 6854 016c 964B     		ldr	r3, .L433+32
 6855 016e 2793     		str	r3, [sp, #156]	@ float
 6856              	.L394:
 180:src/main.cpp  ****     L = 0.17;
 6857              		.loc 21 180 0
 6858 0170 964C     		ldr	r4, .L433+36
 6859 0172 0123     		movs	r3, #1
 6860 0174 221D     		adds	r2, r4, #4
 6861 0176 9649     		ldr	r1, .L433+40
 6862 0178 04F22C40 		addw	r0, r4, #1068
 6863 017c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 6864              	.LVL792:
 6865 0180 08B9     		cbnz	r0, .L395
 181:src/main.cpp  ****   }
 6866              		.loc 21 181 0
 6867 0182 944B     		ldr	r3, .L433+44
 6868 0184 6360     		str	r3, [r4, #4]	@ float
 6869              	.L395:
 184:src/main.cpp  ****     d = 0.06;
 6870              		.loc 21 184 0
 6871 0186 914C     		ldr	r4, .L433+36
 6872 0188 0123     		movs	r3, #1
 6873 018a 04F52362 		add	r2, r4, #2608
 6874 018e 9249     		ldr	r1, .L433+48
 6875 0190 04F22C40 		addw	r0, r4, #1068
 6876 0194 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 6877              	.LVL793:
 6878 0198 10B9     		cbnz	r0, .L396
 185:src/main.cpp  ****   }
 6879              		.loc 21 185 0
 6880 019a 904B     		ldr	r3, .L433+52
 6881 019c C4F8303A 		str	r3, [r4, #2608]	@ float
 6882              	.L396:
 190:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 6883              		.loc 21 190 0
 6884 01a0 0426     		movs	r6, #4
 188:src/main.cpp  **** 
 6885              		.loc 21 188 0
 6886 01a2 4FF47A70 		mov	r0, #1000
 6887 01a6 FFF7FEFF 		bl	delay
 6888              	.LVL794:
 190:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 6889              		.loc 21 190 0
 6890 01aa 8D4B     		ldr	r3, .L433+56
 6891 01ac 8D4A     		ldr	r2, .L433+60
 6892 01ae 0121     		movs	r1, #1
 6893 01b0 0096     		str	r6, [sp]
 6894 01b2 4EA8     		add	r0, sp, #312
 6895 01b4 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 6896              	.LVL795:
 191:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 6897              		.loc 21 191 0
 6898 01b8 4FF40073 		mov	r3, #512
 192:src/main.cpp  **** 
 6899              		.loc 21 192 0
 6900 01bc 8A4C     		ldr	r4, .L433+64
 191:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 6901              		.loc 21 191 0
 6902 01be 5493     		str	r3, [sp, #336]
 194:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 6903              		.loc 21 194 0
 6904 01c0 0323     		movs	r3, #3
 198:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 6905              		.loc 21 198 0
 6906 01c2 0127     		movs	r7, #1
 194:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 6907              		.loc 21 194 0
 6908 01c4 0093     		str	r3, [sp]
 6909 01c6 894A     		ldr	r2, .L433+68
 6910 01c8 854B     		ldr	r3, .L433+56
 6911 01ca 0121     		movs	r1, #1
 6912 01cc 67A8     		add	r0, sp, #412
 195:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 6913              		.loc 21 195 0
 6914 01ce 4FF48078 		mov	r8, #256
 192:src/main.cpp  **** 
 6915              		.loc 21 192 0
 6916 01d2 5594     		str	r4, [sp, #340]
 194:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 6917              		.loc 21 194 0
 6918 01d4 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 6919              	.LVL796:
 198:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 6920              		.loc 21 198 0
 6921 01d8 0097     		str	r7, [sp]
 6922 01da 854B     		ldr	r3, .L433+72
 6923 01dc 854A     		ldr	r2, .L433+76
 6924 01de 0221     		movs	r1, #2
 6925 01e0 80A8     		add	r0, sp, #512
 201:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 6926              		.loc 21 201 0
 6927 01e2 854D     		ldr	r5, .L433+80
 195:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 6928              		.loc 21 195 0
 6929 01e4 CDF8B481 		str	r8, [sp, #436]
 196:src/main.cpp  **** 
 6930              		.loc 21 196 0
 6931 01e8 6E94     		str	r4, [sp, #440]
 198:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 6932              		.loc 21 198 0
 6933 01ea FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 6934              	.LVL797:
 201:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 6935              		.loc 21 201 0
 6936 01ee 834A     		ldr	r2, .L433+84
 6937 01f0 0397     		str	r7, [sp, #12]
 6938 01f2 4FF40047 		mov	r7, #32768
 6939 01f6 CDF81480 		str	r8, [sp, #20]
 6940 01fa 0292     		str	r2, [sp, #8]
 6941 01fc 8DE88400 		stmia	sp, {r2, r7}
 6942 0200 4FF48043 		mov	r3, #16384
 6943 0204 4FF40051 		mov	r1, #8192
 6944 0208 80A8     		add	r0, sp, #512
 6945 020a 0695     		str	r5, [sp, #24]
 6946 020c 0495     		str	r5, [sp, #16]
 6947 020e FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 6948              	.LVL798:
 202:src/main.cpp  ****   FR.setRegulator(KP,KI,KD,integralSaturation);
 6949              		.loc 21 202 0
 6950 0212 1823     		movs	r3, #24
 6951 0214 ADF84832 		strh	r3, [sp, #584]	@ movhi
 203:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 6952              		.loc 21 203 0
 6953 0218 269B     		ldr	r3, [sp, #152]	@ float
 6954 021a 249A     		ldr	r2, [sp, #144]	@ float
 6955 021c 0093     		str	r3, [sp]	@ float
 6956 021e 2399     		ldr	r1, [sp, #140]	@ float
 6957 0220 259B     		ldr	r3, [sp, #148]	@ float
 6958 0222 80A8     		add	r0, sp, #512
 6959 0224 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 6960              	.LVL799:
 204:src/main.cpp  **** 
 6961              		.loc 21 204 0
 6962 0228 279B     		ldr	r3, [sp, #156]	@ float
 206:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 6963              		.loc 21 206 0
 6964 022a 754A     		ldr	r2, .L433+88
 204:src/main.cpp  **** 
 6965              		.loc 21 204 0
 6966 022c 9893     		str	r3, [sp, #608]	@ float
 206:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 6967              		.loc 21 206 0
 6968 022e 0221     		movs	r1, #2
 6969 0230 744B     		ldr	r3, .L433+92
 6970 0232 0096     		str	r6, [sp]
 6971 0234 99A8     		add	r0, sp, #612
 6972 0236 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 6973              	.LVL800:
 209:src/main.cpp  ****   FL.encoderAddr = (0x10);
 6974              		.loc 21 209 0
 6975 023a 4FF00208 		mov	r8, #2
 6976 023e 4FF01009 		mov	r9, #16
 6977 0242 4FF48063 		mov	r3, #1024
 6978 0246 2246     		mov	r2, r4
 6979 0248 0694     		str	r4, [sp, #24]
 6980 024a 0494     		str	r4, [sp, #16]
 6981 024c 0393     		str	r3, [sp, #12]
 6982 024e 8DE82002 		stmia	sp, {r5, r9}
 6983 0252 2023     		movs	r3, #32
 6984 0254 3146     		mov	r1, r6
 6985 0256 99A8     		add	r0, sp, #612
 6986 0258 CDF81480 		str	r8, [sp, #20]
 6987 025c 0295     		str	r5, [sp, #8]
 6988 025e FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 6989              	.LVL801:
 211:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 6990              		.loc 21 211 0
 6991 0262 269B     		ldr	r3, [sp, #152]	@ float
 6992 0264 249A     		ldr	r2, [sp, #144]	@ float
 6993 0266 0093     		str	r3, [sp]	@ float
 6994 0268 2399     		ldr	r1, [sp, #140]	@ float
 6995 026a 259B     		ldr	r3, [sp, #148]	@ float
 6996 026c 99A8     		add	r0, sp, #612
 210:src/main.cpp  ****   FL.setRegulator(KP,KI,KD,integralSaturation);
 6997              		.loc 21 210 0
 6998 026e ADF8AC92 		strh	r9, [sp, #684]	@ movhi
 211:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 6999              		.loc 21 211 0
 7000 0272 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 7001              	.LVL802:
 212:src/main.cpp  **** 
 7002              		.loc 21 212 0
 7003 0276 279B     		ldr	r3, [sp, #156]	@ float
 214:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 7004              		.loc 21 214 0
 7005 0278 634A     		ldr	r2, .L433+96
 212:src/main.cpp  **** 
 7006              		.loc 21 212 0
 7007 027a B193     		str	r3, [sp, #708]	@ float
 214:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 7008              		.loc 21 214 0
 7009 027c 4146     		mov	r1, r8
 7010 027e 4FF08043 		mov	r3, #1073741824
 7011 0282 0096     		str	r6, [sp]
 7012 0284 B2A8     		add	r0, sp, #712
 7013 0286 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 7014              	.LVL803:
 217:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 7015              		.loc 21 217 0
 7016 028a 4FF48043 		mov	r3, #16384
 7017 028e 4FF00809 		mov	r9, #8
 7018 0292 0393     		str	r3, [sp, #12]
 7019 0294 4FF40053 		mov	r3, #8192
 7020 0298 2246     		mov	r2, r4
 7021 029a 0494     		str	r4, [sp, #16]
 7022 029c 0294     		str	r4, [sp, #8]
 7023 029e 0193     		str	r3, [sp, #4]
 7024 02a0 0094     		str	r4, [sp]
 7025 02a2 4FF48053 		mov	r3, #4096
 7026 02a6 4FF40061 		mov	r1, #2048
 7027 02aa B2A8     		add	r0, sp, #712
 7028 02ac 0695     		str	r5, [sp, #24]
 7029 02ae CDF81490 		str	r9, [sp, #20]
 7030 02b2 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 7031              	.LVL804:
 218:src/main.cpp  ****   RL.setRegulator(KP,KI,KD,integralSaturation);
 7032              		.loc 21 218 0
 7033 02b6 1423     		movs	r3, #20
 7034 02b8 ADF81033 		strh	r3, [sp, #784]	@ movhi
 219:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 7035              		.loc 21 219 0
 7036 02bc 269B     		ldr	r3, [sp, #152]	@ float
 7037 02be 249A     		ldr	r2, [sp, #144]	@ float
 7038 02c0 0093     		str	r3, [sp]	@ float
 7039 02c2 2399     		ldr	r1, [sp, #140]	@ float
 7040 02c4 259B     		ldr	r3, [sp, #148]	@ float
 7041 02c6 B2A8     		add	r0, sp, #712
 7042 02c8 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 7043              	.LVL805:
 220:src/main.cpp  **** 
 7044              		.loc 21 220 0
 7045 02cc 279B     		ldr	r3, [sp, #156]	@ float
 222:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 7046              		.loc 21 222 0
 7047 02ce 4F4A     		ldr	r2, .L433+100
 220:src/main.cpp  **** 
 7048              		.loc 21 220 0
 7049 02d0 CA93     		str	r3, [sp, #808]	@ float
 222:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 7050              		.loc 21 222 0
 7051 02d2 4146     		mov	r1, r8
 7052 02d4 464B     		ldr	r3, .L433+72
 7053 02d6 0096     		str	r6, [sp]
 7054 02d8 CBA8     		add	r0, sp, #812
 7055 02da FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 7056              	.LVL806:
 225:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 7057              		.loc 21 225 0
 7058 02de 4FF40063 		mov	r3, #2048
 7059 02e2 2246     		mov	r2, r4
 7060 02e4 0593     		str	r3, [sp, #20]
 7061 02e6 0494     		str	r4, [sp, #16]
 7062 02e8 4FF48053 		mov	r3, #4096
 7063 02ec 3946     		mov	r1, r7
 7064 02ee CBA8     		add	r0, sp, #812
 7065 02f0 0695     		str	r5, [sp, #24]
 7066 02f2 CDF80C90 		str	r9, [sp, #12]
 7067 02f6 0295     		str	r5, [sp, #8]
 7068 02f8 8DE8A000 		stmia	sp, {r5, r7}
 7069 02fc FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 7070              	.LVL807:
 226:src/main.cpp  ****   RR.setRegulator(KP,KI,KD,integralSaturation);
 7071              		.loc 21 226 0
 7072 0300 1C23     		movs	r3, #28
 7073 0302 ADF87433 		strh	r3, [sp, #884]	@ movhi
 227:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 7074              		.loc 21 227 0
 7075 0306 269B     		ldr	r3, [sp, #152]	@ float
 7076 0308 249A     		ldr	r2, [sp, #144]	@ float
 7077 030a 0093     		str	r3, [sp]	@ float
 7078 030c 2399     		ldr	r1, [sp, #140]	@ float
 7079 030e 259B     		ldr	r3, [sp, #148]	@ float
 7080 0310 CBA8     		add	r0, sp, #812
 7081 0312 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 7082              	.LVL808:
 228:src/main.cpp  **** 
 7083              		.loc 21 228 0
 7084 0316 279B     		ldr	r3, [sp, #156]	@ float
 231:src/main.cpp  ****   if(!servo_left->motorInit()){
 7085              		.loc 21 231 0
 7086 0318 4EA8     		add	r0, sp, #312
 228:src/main.cpp  **** 
 7087              		.loc 21 228 0
 7088 031a E393     		str	r3, [sp, #908]	@ float
 231:src/main.cpp  ****   if(!servo_left->motorInit()){
 7089              		.loc 21 231 0
 7090 031c FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 7091              	.LVL809:
 7092 0320 2A4C     		ldr	r4, .L433+36
 232:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 7093              		.loc 21 232 0
 7094 0322 0368     		ldr	r3, [r0]
 231:src/main.cpp  ****   if(!servo_left->motorInit()){
 7095              		.loc 21 231 0
 7096 0324 A061     		str	r0, [r4, #24]
 232:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 7097              		.loc 21 232 0
 7098 0326 DB68     		ldr	r3, [r3, #12]
 7099 0328 9847     		blx	r3
 7100              	.LVL810:
 7101 032a 68B9     		cbnz	r0, .L397
 233:src/main.cpp  ****     nh.logerror(error);
 7102              		.loc 21 233 0
 7103 032c A069     		ldr	r0, [r4, #24]
 7104 032e 0368     		ldr	r3, [r0]
 7105 0330 1B69     		ldr	r3, [r3, #16]
 7106 0332 9847     		blx	r3
 7107              	.LVL811:
 7108 0334 3649     		ldr	r1, .L433+104
 7109 0336 0246     		mov	r2, r0
 7110 0338 E4A8     		add	r0, sp, #912
 7111 033a FFF7FEFF 		bl	sprintf
 7112              	.LVL812:
 234:src/main.cpp  ****   }
 7113              		.loc 21 234 0
 7114 033e E4A9     		add	r1, sp, #912
 7115 0340 04F22C40 		addw	r0, r4, #1068
 7116 0344 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7117              	.LVL813:
 7118              	.L397:
 237:src/main.cpp  ****   if(!servo_right->motorInit()){
 7119              		.loc 21 237 0
 7120 0348 67A8     		add	r0, sp, #412
 7121 034a FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 7122              	.LVL814:
 238:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 7123              		.loc 21 238 0
 7124 034e 0368     		ldr	r3, [r0]
 237:src/main.cpp  ****   if(!servo_right->motorInit()){
 7125              		.loc 21 237 0
 7126 0350 E061     		str	r0, [r4, #28]
 238:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 7127              		.loc 21 238 0
 7128 0352 DB68     		ldr	r3, [r3, #12]
 237:src/main.cpp  ****   if(!servo_right->motorInit()){
 7129              		.loc 21 237 0
 7130 0354 1D4D     		ldr	r5, .L433+36
 238:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 7131              		.loc 21 238 0
 7132 0356 9847     		blx	r3
 7133              	.LVL815:
 7134 0358 68B9     		cbnz	r0, .L398
 239:src/main.cpp  ****     nh.logerror(error);
 7135              		.loc 21 239 0
 7136 035a E869     		ldr	r0, [r5, #28]
 7137 035c 0368     		ldr	r3, [r0]
 7138 035e 1B69     		ldr	r3, [r3, #16]
 7139 0360 9847     		blx	r3
 7140              	.LVL816:
 7141 0362 2B49     		ldr	r1, .L433+104
 7142 0364 0246     		mov	r2, r0
 7143 0366 E4A8     		add	r0, sp, #912
 7144 0368 FFF7FEFF 		bl	sprintf
 7145              	.LVL817:
 240:src/main.cpp  ****   }
 7146              		.loc 21 240 0
 7147 036c E4A9     		add	r1, sp, #912
 7148 036e 05F22C40 		addw	r0, r5, #1068
 7149 0372 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7150              	.LVL818:
 7151              	.L398:
 243:src/main.cpp  ****   if(!front_left->motorInit()){
 7152              		.loc 21 243 0
 7153 0376 99A8     		add	r0, sp, #612
 7154 0378 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 7155              	.LVL819:
 244:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 7156              		.loc 21 244 0
 7157 037c 0368     		ldr	r3, [r0]
 243:src/main.cpp  ****   if(!front_left->motorInit()){
 7158              		.loc 21 243 0
 7159 037e C4F8340A 		str	r0, [r4, #2612]
 244:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 7160              		.loc 21 244 0
 7161 0382 DB68     		ldr	r3, [r3, #12]
 243:src/main.cpp  ****   if(!front_left->motorInit()){
 7162              		.loc 21 243 0
 7163 0384 114D     		ldr	r5, .L433+36
 244:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 7164              		.loc 21 244 0
 7165 0386 9847     		blx	r3
 7166              	.LVL820:
 7167 0388 0028     		cmp	r0, #0
 7168 038a 45D1     		bne	.L399
 245:src/main.cpp  ****     nh.logerror(error);
 7169              		.loc 21 245 0
 7170 038c D5F8340A 		ldr	r0, [r5, #2612]
 7171 0390 0368     		ldr	r3, [r0]
 7172 0392 1B69     		ldr	r3, [r3, #16]
 7173 0394 9847     		blx	r3
 7174              	.LVL821:
 7175 0396 1E49     		ldr	r1, .L433+104
 7176 0398 0246     		mov	r2, r0
 7177 039a E4A8     		add	r0, sp, #912
 7178 039c FFF7FEFF 		bl	sprintf
 7179              	.LVL822:
 246:src/main.cpp  ****   }
 7180              		.loc 21 246 0
 7181 03a0 E4A9     		add	r1, sp, #912
 7182 03a2 05F22C40 		addw	r0, r5, #1068
 7183 03a6 35E0     		b	.L434
 7184              	.L435:
 7185              		.align	2
 7186              	.L433:
 7187 03a8 00040000 		.word	.LC37
 7188 03ac 00409C45 		.word	1167867904
 7189 03b0 0F040000 		.word	.LC38
 7190 03b4 2C040000 		.word	.LANCHOR1+1068
 7191 03b8 1E040000 		.word	.LC39
 7192 03bc 2D040000 		.word	.LC40
 7193 03c0 00401C46 		.word	1176256512
 7194 03c4 4C040000 		.word	.LC41
 7195 03c8 0AD7233D 		.word	1025758986
 7196 03cc 00000000 		.word	.LANCHOR1
 7197 03d0 64040000 		.word	.LC42
 7198 03d4 7B142E3E 		.word	1043207291
 7199 03d8 8D040000 		.word	.LC43
 7200 03dc 8FC2753D 		.word	1031127695
 7201 03e0 00080040 		.word	1073743872
 7202 03e4 B0040000 		.word	.LC44
 7203 03e8 000C0140 		.word	1073810432
 7204 03ec BB040000 		.word	.LC45
 7205 03f0 002C0140 		.word	1073818624
 7206 03f4 C7040000 		.word	.LC46
 7207 03f8 00080140 		.word	1073809408
 7208 03fc 00100140 		.word	1073811456
 7209 0400 D3040000 		.word	.LC47
 7210 0404 00040040 		.word	1073742848
 7211 0408 DE040000 		.word	.LC48
 7212 040c E8040000 		.word	.LC49
 7213 0410 F3040000 		.word	.LC50
 7214              	.L434:
 7215 0414 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7216              	.LVL823:
 7217              	.L399:
 249:src/main.cpp  ****   if(!front_right->motorInit()){
 7218              		.loc 21 249 0
 7219 0418 80A8     		add	r0, sp, #512
 7220 041a FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 7221              	.LVL824:
 250:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 7222              		.loc 21 250 0
 7223 041e 0368     		ldr	r3, [r0]
 249:src/main.cpp  ****   if(!front_right->motorInit()){
 7224              		.loc 21 249 0
 7225 0420 C4F8380A 		str	r0, [r4, #2616]
 250:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 7226              		.loc 21 250 0
 7227 0424 DB68     		ldr	r3, [r3, #12]
 249:src/main.cpp  ****   if(!front_right->motorInit()){
 7228              		.loc 21 249 0
 7229 0426 764D     		ldr	r5, .L436
 250:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 7230              		.loc 21 250 0
 7231 0428 9847     		blx	r3
 7232              	.LVL825:
 7233 042a 70B9     		cbnz	r0, .L400
 251:src/main.cpp  ****     nh.logerror(error);
 7234              		.loc 21 251 0
 7235 042c D5F8380A 		ldr	r0, [r5, #2616]
 7236 0430 0368     		ldr	r3, [r0]
 7237 0432 1B69     		ldr	r3, [r3, #16]
 7238 0434 9847     		blx	r3
 7239              	.LVL826:
 7240 0436 7349     		ldr	r1, .L436+4
 7241 0438 0246     		mov	r2, r0
 7242 043a E4A8     		add	r0, sp, #912
 7243 043c FFF7FEFF 		bl	sprintf
 7244              	.LVL827:
 252:src/main.cpp  ****   }
 7245              		.loc 21 252 0
 7246 0440 E4A9     		add	r1, sp, #912
 7247 0442 05F22C40 		addw	r0, r5, #1068
 7248 0446 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7249              	.LVL828:
 7250              	.L400:
 255:src/main.cpp  ****   if(!rear_left->motorInit()){
 7251              		.loc 21 255 0
 7252 044a B2A8     		add	r0, sp, #712
 7253 044c FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 7254              	.LVL829:
 256:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 7255              		.loc 21 256 0
 7256 0450 0368     		ldr	r3, [r0]
 255:src/main.cpp  ****   if(!rear_left->motorInit()){
 7257              		.loc 21 255 0
 7258 0452 C4F83C0A 		str	r0, [r4, #2620]
 256:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 7259              		.loc 21 256 0
 7260 0456 DB68     		ldr	r3, [r3, #12]
 255:src/main.cpp  ****   if(!rear_left->motorInit()){
 7261              		.loc 21 255 0
 7262 0458 694D     		ldr	r5, .L436
 256:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 7263              		.loc 21 256 0
 7264 045a 9847     		blx	r3
 7265              	.LVL830:
 7266 045c 70B9     		cbnz	r0, .L401
 257:src/main.cpp  ****     nh.logerror(error);
 7267              		.loc 21 257 0
 7268 045e D5F83C0A 		ldr	r0, [r5, #2620]
 7269 0462 0368     		ldr	r3, [r0]
 7270 0464 1B69     		ldr	r3, [r3, #16]
 7271 0466 9847     		blx	r3
 7272              	.LVL831:
 7273 0468 6649     		ldr	r1, .L436+4
 7274 046a 0246     		mov	r2, r0
 7275 046c E4A8     		add	r0, sp, #912
 7276 046e FFF7FEFF 		bl	sprintf
 7277              	.LVL832:
 258:src/main.cpp  ****   }
 7278              		.loc 21 258 0
 7279 0472 E4A9     		add	r1, sp, #912
 7280 0474 05F22C40 		addw	r0, r5, #1068
 7281 0478 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7282              	.LVL833:
 7283              	.L401:
 261:src/main.cpp  ****   if(!rear_right->motorInit()){
 7284              		.loc 21 261 0
 7285 047c CBA8     		add	r0, sp, #812
 7286 047e FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 7287              	.LVL834:
 262:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 7288              		.loc 21 262 0
 7289 0482 0368     		ldr	r3, [r0]
 261:src/main.cpp  ****   if(!rear_right->motorInit()){
 7290              		.loc 21 261 0
 7291 0484 C4F8400A 		str	r0, [r4, #2624]
 262:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 7292              		.loc 21 262 0
 7293 0488 DB68     		ldr	r3, [r3, #12]
 261:src/main.cpp  ****   if(!rear_right->motorInit()){
 7294              		.loc 21 261 0
 7295 048a 5D4D     		ldr	r5, .L436
 262:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 7296              		.loc 21 262 0
 7297 048c 9847     		blx	r3
 7298              	.LVL835:
 7299 048e 70B9     		cbnz	r0, .L402
 263:src/main.cpp  ****     nh.logerror(error);
 7300              		.loc 21 263 0
 7301 0490 D5F8400A 		ldr	r0, [r5, #2624]
 7302 0494 0368     		ldr	r3, [r0]
 7303 0496 1B69     		ldr	r3, [r3, #16]
 7304 0498 9847     		blx	r3
 7305              	.LVL836:
 7306 049a 5A49     		ldr	r1, .L436+4
 7307 049c 0246     		mov	r2, r0
 7308 049e E4A8     		add	r0, sp, #912
 7309 04a0 FFF7FEFF 		bl	sprintf
 7310              	.LVL837:
 264:src/main.cpp  ****   }
 7311              		.loc 21 264 0
 7312 04a4 E4A9     		add	r1, sp, #912
 7313 04a6 05F22C40 		addw	r0, r5, #1068
 7314 04aa FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7315              	.LVL838:
 7316              	.L402:
 268:src/main.cpp  **** 
 7317              		.loc 21 268 0
 7318 04ae 0020     		movs	r0, #0
 7319 04b0 FFF7FEFF 		bl	led_set
 7320              	.LVL839:
 270:src/main.cpp  ****   servo_right->setReference(0);
 7321              		.loc 21 270 0
 7322 04b4 A069     		ldr	r0, [r4, #24]
 7323 04b6 0021     		movs	r1, #0
 7324 04b8 0368     		ldr	r3, [r0]
 279:src/main.cpp  ****   float start_time;
 7325              		.loc 21 279 0
 7326 04ba 0026     		movs	r6, #0
 270:src/main.cpp  ****   servo_right->setReference(0);
 7327              		.loc 21 270 0
 7328 04bc 5B69     		ldr	r3, [r3, #20]
 7329 04be 9847     		blx	r3
 7330              	.LVL840:
 271:src/main.cpp  ****   front_right->setReference(0);
 7331              		.loc 21 271 0
 7332 04c0 E069     		ldr	r0, [r4, #28]
 7333 04c2 0021     		movs	r1, #0
 7334 04c4 0368     		ldr	r3, [r0]
 7335 04c6 5B69     		ldr	r3, [r3, #20]
 7336 04c8 9847     		blx	r3
 7337              	.LVL841:
 272:src/main.cpp  ****   front_left->setReference(0);
 7338              		.loc 21 272 0
 7339 04ca D4F8380A 		ldr	r0, [r4, #2616]
 7340 04ce 0021     		movs	r1, #0
 7341 04d0 0368     		ldr	r3, [r0]
 7342 04d2 5B69     		ldr	r3, [r3, #20]
 7343 04d4 9847     		blx	r3
 7344              	.LVL842:
 273:src/main.cpp  ****   rear_right->setReference(0);
 7345              		.loc 21 273 0
 7346 04d6 D4F8340A 		ldr	r0, [r4, #2612]
 7347 04da 0021     		movs	r1, #0
 7348 04dc 0368     		ldr	r3, [r0]
 7349 04de 5B69     		ldr	r3, [r3, #20]
 7350 04e0 9847     		blx	r3
 7351              	.LVL843:
 274:src/main.cpp  ****   rear_left->setReference(0);
 7352              		.loc 21 274 0
 7353 04e2 D4F8400A 		ldr	r0, [r4, #2624]
 7354 04e6 0021     		movs	r1, #0
 7355 04e8 0368     		ldr	r3, [r0]
 7356 04ea 5B69     		ldr	r3, [r3, #20]
 7357 04ec 9847     		blx	r3
 7358              	.LVL844:
 275:src/main.cpp  **** 
 7359              		.loc 21 275 0
 7360 04ee D4F83C0A 		ldr	r0, [r4, #2620]
 7361 04f2 0021     		movs	r1, #0
 7362 04f4 0368     		ldr	r3, [r0]
 7363 04f6 5B69     		ldr	r3, [r3, #20]
 7364 04f8 9847     		blx	r3
 7365              	.LVL845:
 286:src/main.cpp  **** 
 7366              		.loc 21 286 0
 7367 04fa 6068     		ldr	r0, [r4, #4]	@ float
 7368 04fc 4FF07C51 		mov	r1, #1056964608
 7369 0500 FFF7FEFF 		bl	__aeabi_fmul
 7370              	.LVL846:
 7371 0504 FFF7FEFF 		bl	__aeabi_f2d
 7372              	.LVL847:
 7373 0508 0246     		mov	r2, r0
 7374 050a 0B46     		mov	r3, r1
 7375 050c FFF7FEFF 		bl	__aeabi_dmul
 7376              	.LVL848:
 7377 0510 0B46     		mov	r3, r1
 7378 0512 0246     		mov	r2, r0
 7379 0514 FFF7FEFF 		bl	__aeabi_dadd
 7380              	.LVL849:
 7381 0518 FFF7FEFF 		bl	sqrt
 7382              	.LVL850:
 7383 051c FFF7FEFF 		bl	__aeabi_d2f
 7384              	.LVL851:
 288:src/main.cpp  **** 
 7385              		.loc 21 288 0
 7386 0520 1022     		movs	r2, #16
 286:src/main.cpp  **** 
 7387              		.loc 21 286 0
 7388 0522 1F90     		str	r0, [sp, #124]	@ float
 7389              	.LVL852:
 288:src/main.cpp  **** 
 7390              		.loc 21 288 0
 7391 0524 0021     		movs	r1, #0
 7392 0526 2AA8     		add	r0, sp, #168
 7393              	.LVL853:
 7394 0528 FFF7FEFF 		bl	memset
 7395              	.LVL854:
 285:src/main.cpp  ****   float l = sqrt(pow((L/2),2)*2);
 7396              		.loc 21 285 0
 7397 052c 0024     		movs	r4, #0
 7398 052e 0023     		movs	r3, #0
 7399 0530 CDE90834 		strd	r3, [sp, #32]
 284:src/main.cpp  ****   double th = 0.0;
 7400              		.loc 21 284 0
 7401 0534 CDE90C34 		strd	r3, [sp, #48]
 283:src/main.cpp  ****   double y = 0.0;
 7402              		.loc 21 283 0
 7403 0538 CDE90A34 		strd	r3, [sp, #40]
 7404              	.LBB615:
 292:src/main.cpp  ****     start_time = ((int)millis()) / 1000.0;
 7405              		.loc 21 292 0
 7406 053c 304C     		ldr	r4, .L436
 7407 053e A346     		mov	fp, r4
 7408              	.LVL855:
 7409              	.L415:
 7410 0540 3148     		ldr	r0, .L436+8
 7411 0542 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 7412              	.LVL856:
 293:src/main.cpp  **** 
 7413              		.loc 21 293 0
 7414 0546 FFF7FEFF 		bl	millis
 7415              	.LVL857:
 7416 054a FFF7FEFF 		bl	__aeabi_i2d
 7417              	.LVL858:
 7418 054e 2F4B     		ldr	r3, .L436+12
 7419 0550 0022     		movs	r2, #0
 7420 0552 FFF7FEFF 		bl	__aeabi_ddiv
 7421              	.LVL859:
 7422 0556 FFF7FEFF 		bl	__aeabi_d2f
 7423              	.LVL860:
 295:src/main.cpp  ****       connected = false;
 7424              		.loc 21 295 0
 7425 055a 94F82834 		ldrb	r3, [r4, #1064]	@ zero_extendqisi2
 293:src/main.cpp  **** 
 7426              		.loc 21 293 0
 7427 055e 1590     		str	r0, [sp, #84]	@ float
 7428              	.LVL861:
 295:src/main.cpp  ****       connected = false;
 7429              		.loc 21 295 0
 7430 0560 63B9     		cbnz	r3, .L416
 7431              	.LVL862:
 300:src/main.cpp  ****         debug_toggle();
 7432              		.loc 21 300 0
 7433 0562 731C     		adds	r3, r6, #1
 7434 0564 0A22     		movs	r2, #10
 7435 0566 1493     		str	r3, [sp, #80]
 7436 0568 96FBF2F3 		sdiv	r3, r6, r2
 7437 056c 02FB1366 		mls	r6, r2, r3, r6
 7438              	.LVL863:
 7439              	.LBB616:
 7440              	.LBB617:
 287:./lib/ros_lib/ros/node_handle.h ****       };
 7441              		.loc 19 287 0
 7442 0570 94F82059 		ldrb	r5, [r4, #2336]	@ zero_extendqisi2
 7443              	.LVL864:
 7444              	.LBE617:
 7445              	.LBE616:
 300:src/main.cpp  ****         debug_toggle();
 7446              		.loc 21 300 0
 7447 0574 26B9     		cbnz	r6, .L403
 301:src/main.cpp  ****     }
 7448              		.loc 21 301 0
 7449 0576 FFF7FEFF 		bl	debug_toggle
 7450              	.LVL865:
 7451 057a 01E0     		b	.L403
 7452              	.LVL866:
 7453              	.L416:
 7454 057c 1496     		str	r6, [sp, #80]
 296:src/main.cpp  ****       // TODO: Advertise shutdown??
 7455              		.loc 21 296 0
 7456 057e 0025     		movs	r5, #0
 7457              	.LVL867:
 7458              	.L403:
 304:src/main.cpp  ****     auto sr = servo_right->update(0.1, connected);
 7459              		.loc 21 304 0
 7460 0580 DBF81810 		ldr	r1, [fp, #24]
 7461 0584 224A     		ldr	r2, .L436+16
 7462 0586 0B68     		ldr	r3, [r1]
 7463 0588 2EA8     		add	r0, sp, #184
 7464 058a DE69     		ldr	r6, [r3, #28]
 7465 058c 2B46     		mov	r3, r5
 7466 058e B047     		blx	r6
 7467              	.LVL868:
 305:src/main.cpp  **** 
 7468              		.loc 21 305 0
 7469 0590 DBF81C10 		ldr	r1, [fp, #28]
 7470 0594 1E4A     		ldr	r2, .L436+16
 7471 0596 0B68     		ldr	r3, [r1]
 7472 0598 32A8     		add	r0, sp, #200
 7473 059a DE69     		ldr	r6, [r3, #28]
 7474 059c 2B46     		mov	r3, r5
 7475 059e B047     		blx	r6
 7476              	.LVL869:
 307:src/main.cpp  ****       if(std::get<2>(sr) == (int)servo_right->getReference() && std::get<2>(sl) == (int)servo_left-
 7477              		.loc 21 307 0
 7478 05a0 9BF80130 		ldrb	r3, [fp, #1]	@ zero_extendqisi2
 7479 05a4 002B     		cmp	r3, #0
 7480 05a6 4DD0     		beq	.L404
 308:src/main.cpp  ****         waitForServos = false;
 7481              		.loc 21 308 0
 7482 05a8 E069     		ldr	r0, [r4, #28]
 7483 05aa 339E     		ldr	r6, [sp, #204]
 7484 05ac 0368     		ldr	r3, [r0]
 7485 05ae 9B69     		ldr	r3, [r3, #24]
 7486 05b0 9847     		blx	r3
 7487              	.LVL870:
 7488 05b2 FFF7FEFF 		bl	__aeabi_f2iz
 7489              	.LVL871:
 7490 05b6 8642     		cmp	r6, r0
 7491 05b8 2CD1     		bne	.L405
 7492 05ba A069     		ldr	r0, [r4, #24]
 7493 05bc 2F9E     		ldr	r6, [sp, #188]
 7494 05be 0368     		ldr	r3, [r0]
 7495 05c0 9B69     		ldr	r3, [r3, #24]
 7496 05c2 9847     		blx	r3
 7497              	.LVL872:
 7498 05c4 FFF7FEFF 		bl	__aeabi_f2iz
 7499              	.LVL873:
 7500 05c8 8642     		cmp	r6, r0
 7501 05ca 23D1     		bne	.L405
 310:src/main.cpp  ****         front_left->setReference(motorCmd[1]);
 7502              		.loc 21 310 0
 7503 05cc D4F8380A 		ldr	r0, [r4, #2616]
 309:src/main.cpp  ****         front_right->setReference(motorCmd[0]);
 7504              		.loc 21 309 0
 7505 05d0 0023     		movs	r3, #0
 7506 05d2 6370     		strb	r3, [r4, #1]
 310:src/main.cpp  ****         front_left->setReference(motorCmd[1]);
 7507              		.loc 21 310 0
 7508 05d4 0368     		ldr	r3, [r0]
 7509 05d6 A168     		ldr	r1, [r4, #8]	@ float
 7510 05d8 5B69     		ldr	r3, [r3, #20]
 7511 05da 9847     		blx	r3
 7512              	.LVL874:
 311:src/main.cpp  ****         rear_left->setReference(motorCmd[2]);
 7513              		.loc 21 311 0
 7514 05dc D4F8340A 		ldr	r0, [r4, #2612]
 7515 05e0 E168     		ldr	r1, [r4, #12]	@ float
 7516 05e2 0368     		ldr	r3, [r0]
 7517 05e4 5B69     		ldr	r3, [r3, #20]
 7518 05e6 9847     		blx	r3
 7519              	.LVL875:
 312:src/main.cpp  ****         rear_right->setReference(motorCmd[3]);
 7520              		.loc 21 312 0
 7521 05e8 D4F83C0A 		ldr	r0, [r4, #2620]
 7522 05ec 2169     		ldr	r1, [r4, #16]	@ float
 7523 05ee 0368     		ldr	r3, [r0]
 7524 05f0 5B69     		ldr	r3, [r3, #20]
 7525 05f2 9847     		blx	r3
 7526              	.LVL876:
 313:src/main.cpp  ****       }else{
 7527              		.loc 21 313 0
 7528 05f4 D4F8400A 		ldr	r0, [r4, #2624]
 7529 05f8 6169     		ldr	r1, [r4, #20]	@ float
 7530 05fa 0368     		ldr	r3, [r0]
 7531 05fc 5B69     		ldr	r3, [r3, #20]
 7532 05fe 20E0     		b	.L430
 7533              	.L437:
 7534              		.align	2
 7535              	.L436:
 7536 0600 00000000 		.word	.LANCHOR1
 7537 0604 F3040000 		.word	.LC50
 7538 0608 2C040000 		.word	.LANCHOR1+1068
 7539 060c 00408F40 		.word	1083129856
 7540 0610 CDCCCC3D 		.word	1036831949
 7541              	.L405:
 315:src/main.cpp  ****         front_left->setReference(0);
 7542              		.loc 21 315 0
 7543 0614 D4F8380A 		ldr	r0, [r4, #2616]
 7544 0618 0021     		movs	r1, #0
 7545 061a 0368     		ldr	r3, [r0]
 7546 061c 5B69     		ldr	r3, [r3, #20]
 7547 061e 9847     		blx	r3
 7548              	.LVL877:
 316:src/main.cpp  ****         rear_left->setReference(0);
 7549              		.loc 21 316 0
 7550 0620 D4F8340A 		ldr	r0, [r4, #2612]
 7551 0624 0021     		movs	r1, #0
 7552 0626 0368     		ldr	r3, [r0]
 7553 0628 5B69     		ldr	r3, [r3, #20]
 7554 062a 9847     		blx	r3
 7555              	.LVL878:
 317:src/main.cpp  ****         rear_right->setReference(0);
 7556              		.loc 21 317 0
 7557 062c D4F83C0A 		ldr	r0, [r4, #2620]
 7558 0630 0021     		movs	r1, #0
 7559 0632 0368     		ldr	r3, [r0]
 7560 0634 5B69     		ldr	r3, [r3, #20]
 7561 0636 9847     		blx	r3
 7562              	.LVL879:
 318:src/main.cpp  ****       }
 7563              		.loc 21 318 0
 7564 0638 D4F8400A 		ldr	r0, [r4, #2624]
 7565 063c 0021     		movs	r1, #0
 7566 063e 0368     		ldr	r3, [r0]
 7567 0640 5B69     		ldr	r3, [r3, #20]
 7568              	.L430:
 7569 0642 9847     		blx	r3
 7570              	.LVL880:
 7571              	.L404:
 322:src/main.cpp  ****     auto fl = front_left->update(0.1, connected);
 7572              		.loc 21 322 0
 7573 0644 D4F8381A 		ldr	r1, [r4, #2616]
 7574 0648 444A     		ldr	r2, .L438
 7575 064a 0B68     		ldr	r3, [r1]
 7576 064c 36A8     		add	r0, sp, #216
 7577 064e DE69     		ldr	r6, [r3, #28]
 7578 0650 2B46     		mov	r3, r5
 7579 0652 B047     		blx	r6
 7580              	.LVL881:
 323:src/main.cpp  ****     auto rl = rear_left->update(0.1, connected);
 7581              		.loc 21 323 0
 7582 0654 D4F8341A 		ldr	r1, [r4, #2612]
 7583 0658 404A     		ldr	r2, .L438
 7584 065a 0B68     		ldr	r3, [r1]
 7585 065c 3AA8     		add	r0, sp, #232
 7586 065e DE69     		ldr	r6, [r3, #28]
 7587 0660 2B46     		mov	r3, r5
 7588 0662 B047     		blx	r6
 7589              	.LVL882:
 324:src/main.cpp  ****     auto rr = rear_right->update(0.1, connected);
 7590              		.loc 21 324 0
 7591 0664 D4F83C1A 		ldr	r1, [r4, #2620]
 7592 0668 3C4A     		ldr	r2, .L438
 7593 066a 0B68     		ldr	r3, [r1]
 7594 066c 3EA8     		add	r0, sp, #248
 7595 066e DE69     		ldr	r6, [r3, #28]
 7596 0670 2B46     		mov	r3, r5
 7597 0672 B047     		blx	r6
 7598              	.LVL883:
 325:src/main.cpp  **** 
 7599              		.loc 21 325 0
 7600 0674 D4F8401A 		ldr	r1, [r4, #2624]
 7601 0678 384A     		ldr	r2, .L438
 7602 067a 0B68     		ldr	r3, [r1]
 7603 067c 42A8     		add	r0, sp, #264
 7604 067e DE69     		ldr	r6, [r3, #28]
 7605 0680 2B46     		mov	r3, r5
 7606 0682 B047     		blx	r6
 7607              	.LVL884:
 327:src/main.cpp  ****       sprintf(error, "Encoder timeout: %s - [FAIL]", front_right->motorName());
 7608              		.loc 21 327 0
 7609 0684 4FF6FF72 		movw	r2, #65535
 7610 0688 369B     		ldr	r3, [sp, #216]
 7611 068a 9342     		cmp	r3, r2
 7612 068c 0DD1     		bne	.L407
 328:src/main.cpp  ****       nh.logerror(error);
 7613              		.loc 21 328 0
 7614 068e D4F8380A 		ldr	r0, [r4, #2616]
 7615 0692 0368     		ldr	r3, [r0]
 7616 0694 1B69     		ldr	r3, [r3, #16]
 7617 0696 9847     		blx	r3
 7618              	.LVL885:
 7619 0698 3149     		ldr	r1, .L438+4
 7620 069a 0246     		mov	r2, r0
 7621 069c E4A8     		add	r0, sp, #912
 7622 069e FFF7FEFF 		bl	sprintf
 7623              	.LVL886:
 329:src/main.cpp  ****     }
 7624              		.loc 21 329 0
 7625 06a2 E4A9     		add	r1, sp, #912
 7626 06a4 2F48     		ldr	r0, .L438+8
 7627 06a6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7628              	.LVL887:
 7629              	.L407:
 331:src/main.cpp  ****       sprintf(error, "Encoder timeout: %s - [FAIL]", front_left->motorName());
 7630              		.loc 21 331 0
 7631 06aa 4FF6FF72 		movw	r2, #65535
 7632 06ae 3A9B     		ldr	r3, [sp, #232]
 7633 06b0 9342     		cmp	r3, r2
 7634 06b2 0DD1     		bne	.L408
 332:src/main.cpp  ****       nh.logerror(error);
 7635              		.loc 21 332 0
 7636 06b4 DBF8340A 		ldr	r0, [fp, #2612]
 7637 06b8 0368     		ldr	r3, [r0]
 7638 06ba 1B69     		ldr	r3, [r3, #16]
 7639 06bc 9847     		blx	r3
 7640              	.LVL888:
 7641 06be 2849     		ldr	r1, .L438+4
 7642 06c0 0246     		mov	r2, r0
 7643 06c2 E4A8     		add	r0, sp, #912
 7644 06c4 FFF7FEFF 		bl	sprintf
 7645              	.LVL889:
 333:src/main.cpp  ****     }
 7646              		.loc 21 333 0
 7647 06c8 E4A9     		add	r1, sp, #912
 7648 06ca 2648     		ldr	r0, .L438+8
 7649 06cc FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7650              	.LVL890:
 7651              	.L408:
 335:src/main.cpp  ****       sprintf(error, "Encoder timeout: %s - [FAIL]", rear_left->motorName());
 7652              		.loc 21 335 0
 7653 06d0 4FF6FF72 		movw	r2, #65535
 7654 06d4 3E9B     		ldr	r3, [sp, #248]
 7655 06d6 9342     		cmp	r3, r2
 7656 06d8 0DD1     		bne	.L409
 336:src/main.cpp  ****       nh.logerror(error);
 7657              		.loc 21 336 0
 7658 06da DBF83C0A 		ldr	r0, [fp, #2620]
 7659 06de 0368     		ldr	r3, [r0]
 7660 06e0 1B69     		ldr	r3, [r3, #16]
 7661 06e2 9847     		blx	r3
 7662              	.LVL891:
 7663 06e4 1E49     		ldr	r1, .L438+4
 7664 06e6 0246     		mov	r2, r0
 7665 06e8 E4A8     		add	r0, sp, #912
 7666 06ea FFF7FEFF 		bl	sprintf
 7667              	.LVL892:
 337:src/main.cpp  ****     }
 7668              		.loc 21 337 0
 7669 06ee E4A9     		add	r1, sp, #912
 7670 06f0 1C48     		ldr	r0, .L438+8
 7671 06f2 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7672              	.LVL893:
 7673              	.L409:
 339:src/main.cpp  ****       sprintf(error, "Encoder timeout: %s - [FAIL]", rear_right->motorName());
 7674              		.loc 21 339 0
 7675 06f6 4FF6FF72 		movw	r2, #65535
 7676 06fa 429B     		ldr	r3, [sp, #264]
 7677 06fc 9342     		cmp	r3, r2
 7678 06fe 0DD1     		bne	.L410
 340:src/main.cpp  ****       nh.logerror(error);
 7679              		.loc 21 340 0
 7680 0700 DBF8400A 		ldr	r0, [fp, #2624]
 7681 0704 0368     		ldr	r3, [r0]
 7682 0706 1B69     		ldr	r3, [r3, #16]
 7683 0708 9847     		blx	r3
 7684              	.LVL894:
 7685 070a 1549     		ldr	r1, .L438+4
 7686 070c 0246     		mov	r2, r0
 7687 070e E4A8     		add	r0, sp, #912
 7688 0710 FFF7FEFF 		bl	sprintf
 7689              	.LVL895:
 341:src/main.cpp  ****     }
 7690              		.loc 21 341 0
 7691 0714 E4A9     		add	r1, sp, #912
 7692 0716 1348     		ldr	r0, .L438+8
 7693 0718 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 7694              	.LVL896:
 7695              	.L410:
 344:src/main.cpp  **** 
 7696              		.loc 21 344 0
 7697 071c 399B     		ldr	r3, [sp, #228]	@ float
 347:src/main.cpp  **** 
 7698              		.loc 21 347 0
 7699 071e 319A     		ldr	r2, [sp, #196]	@ float
 344:src/main.cpp  **** 
 7700              		.loc 21 344 0
 7701 0720 4693     		str	r3, [sp, #280]	@ float
 7702 0722 3D9B     		ldr	r3, [sp, #244]	@ float
 7703              	.LBB618:
 7704              	.LBB619:
 358:src/main.cpp  ****     }
 7705              		.loc 21 358 0
 7706 0724 D4F8300A 		ldr	r0, [r4, #2608]	@ float
 7707              	.LBE619:
 7708              	.LBE618:
 344:src/main.cpp  **** 
 7709              		.loc 21 344 0
 7710 0728 4793     		str	r3, [sp, #284]	@ float
 7711 072a 419B     		ldr	r3, [sp, #260]	@ float
 347:src/main.cpp  **** 
 7712              		.loc 21 347 0
 7713 072c 4A92     		str	r2, [sp, #296]	@ float
 344:src/main.cpp  **** 
 7714              		.loc 21 344 0
 7715 072e 4893     		str	r3, [sp, #288]	@ float
 7716 0730 459B     		ldr	r3, [sp, #276]	@ float
 347:src/main.cpp  **** 
 7717              		.loc 21 347 0
 7718 0732 4C92     		str	r2, [sp, #304]	@ float
 344:src/main.cpp  **** 
 7719              		.loc 21 344 0
 7720 0734 4993     		str	r3, [sp, #292]	@ float
 347:src/main.cpp  **** 
 7721              		.loc 21 347 0
 7722 0736 359B     		ldr	r3, [sp, #212]	@ float
 352:src/main.cpp  ****     for(i = 0; i < 4; i++){
 7723              		.loc 21 352 0
 7724 0738 4FF0000A 		mov	r10, #0
 347:src/main.cpp  **** 
 7725              		.loc 21 347 0
 7726 073c 4B93     		str	r3, [sp, #300]	@ float
 7727 073e 4D93     		str	r3, [sp, #308]	@ float
 7728              	.LVL897:
 7729              	.LBB623:
 7730              	.LBB620:
 358:src/main.cpp  ****     }
 7731              		.loc 21 358 0
 7732 0740 FFF7FEFF 		bl	__aeabi_f2d
 7733              	.LVL898:
 7734 0744 CDE91C01 		strd	r0, [sp, #112]
 7735              	.LBE620:
 7736              	.LBE623:
 344:src/main.cpp  **** 
 7737              		.loc 21 344 0
 7738 0748 46AE     		add	r6, sp, #280
 347:src/main.cpp  **** 
 7739              		.loc 21 347 0
 7740 074a 4AAF     		add	r7, sp, #296
 351:src/main.cpp  ****     float theta_dot = 0;
 7741              		.loc 21 351 0
 7742 074c CDF84CA0 		str	r10, [sp, #76]	@ float
 350:src/main.cpp  ****     float y_dot = 0;
 7743              		.loc 21 350 0
 7744 0750 CDF840A0 		str	r10, [sp, #64]	@ float
 7745              	.LBB624:
 353:src/main.cpp  ****       // TODO: Calculate beta correctly
 7746              		.loc 21 353 0
 7747 0754 0025     		movs	r5, #0
 7748              	.LVL899:
 7749              	.LBB621:
 355:src/main.cpp  ****       x_dot += sin(alpha[i]+beta)*speeds[i];
 7750              		.loc 21 355 0
 7751 0756 2097     		str	r7, [sp, #128]
 356:src/main.cpp  ****       y_dot += cos(alpha[i]+beta)*speeds[i];
 7752              		.loc 21 356 0
 7753 0758 2196     		str	r6, [sp, #132]
 7754 075a 05E0     		b	.L439
 7755              	.L440:
 7756              		.align	2
 7757              	.L438:
 7758 075c CDCCCC3D 		.word	1036831949
 7759 0760 1D050000 		.word	.LC51
 7760 0764 2C040000 		.word	.LANCHOR1+1068
 7761              	.L439:
 7762              	.LVL900:
 7763              	.L411:
 355:src/main.cpp  ****       x_dot += sin(alpha[i]+beta)*speeds[i];
 7764              		.loc 21 355 0 discriminator 2
 7765 0768 209B     		ldr	r3, [sp, #128]
 7766 076a 53F82530 		ldr	r3, [r3, r5, lsl #2]	@ float
 7767 076e 1E93     		str	r3, [sp, #120]	@ float
 7768              	.LVL901:
 356:src/main.cpp  ****       y_dot += cos(alpha[i]+beta)*speeds[i];
 7769              		.loc 21 356 0 discriminator 2
 7770 0770 2AAB     		add	r3, sp, #168
 7771              	.LVL902:
 7772 0772 53F82580 		ldr	r8, [r3, r5, lsl #2]	@ float
 7773 0776 1E98     		ldr	r0, [sp, #120]	@ float
 7774 0778 4146     		mov	r1, r8
 7775 077a FFF7FEFF 		bl	__aeabi_fadd
 7776              	.LVL903:
 7777 077e FFF7FEFF 		bl	__aeabi_f2d
 7778              	.LVL904:
 7779 0782 CDE91801 		strd	r0, [sp, #96]
 7780 0786 FFF7FEFF 		bl	sin
 7781              	.LVL905:
 7782 078a 219B     		ldr	r3, [sp, #132]
 7783 078c CDE91601 		strd	r0, [sp, #88]
 7784 0790 53F82500 		ldr	r0, [r3, r5, lsl #2]	@ float
 7785 0794 FFF7FEFF 		bl	__aeabi_f2d
 7786              	.LVL906:
 7787 0798 0246     		mov	r2, r0
 7788 079a 0B46     		mov	r3, r1
 7789 079c CDE90E01 		strd	r0, [sp, #56]
 7790 07a0 DDE91601 		ldrd	r0, [sp, #88]
 7791 07a4 FFF7FEFF 		bl	__aeabi_dmul
 7792              	.LVL907:
 7793 07a8 0646     		mov	r6, r0
 7794 07aa 1098     		ldr	r0, [sp, #64]	@ float
 7795 07ac 0F46     		mov	r7, r1
 7796 07ae FFF7FEFF 		bl	__aeabi_f2d
 7797              	.LVL908:
 7798 07b2 0246     		mov	r2, r0
 7799 07b4 0B46     		mov	r3, r1
 7800 07b6 3046     		mov	r0, r6
 7801 07b8 3946     		mov	r1, r7
 7802 07ba FFF7FEFF 		bl	__aeabi_dadd
 7803              	.LVL909:
 7804 07be FFF7FEFF 		bl	__aeabi_d2f
 7805              	.LVL910:
 7806 07c2 1090     		str	r0, [sp, #64]	@ float
 7807              	.LVL911:
 357:src/main.cpp  ****       theta_dot += cos(beta - atan((l*cos(alpha[i]+d*cos(alpha[i] + beta)))/(l*sin(alpha[i] + d*sin
 7808              		.loc 21 357 0 discriminator 2
 7809 07c4 DDE91801 		ldrd	r0, [sp, #96]
 7810              	.LVL912:
 7811 07c8 FFF7FEFF 		bl	cos
 7812              	.LVL913:
 7813 07cc 0246     		mov	r2, r0
 7814 07ce 0B46     		mov	r3, r1
 7815 07d0 CDE91801 		strd	r0, [sp, #96]
 7816 07d4 DDE90E01 		ldrd	r0, [sp, #56]
 7817 07d8 FFF7FEFF 		bl	__aeabi_dmul
 7818              	.LVL914:
 7819 07dc 0646     		mov	r6, r0
 7820 07de 1398     		ldr	r0, [sp, #76]	@ float
 7821 07e0 0F46     		mov	r7, r1
 7822 07e2 FFF7FEFF 		bl	__aeabi_f2d
 7823              	.LVL915:
 7824 07e6 0246     		mov	r2, r0
 7825 07e8 0B46     		mov	r3, r1
 7826 07ea 3046     		mov	r0, r6
 7827 07ec 3946     		mov	r1, r7
 7828 07ee FFF7FEFF 		bl	__aeabi_dadd
 7829              	.LVL916:
 7830 07f2 FFF7FEFF 		bl	__aeabi_d2f
 7831              	.LVL917:
 7832 07f6 1390     		str	r0, [sp, #76]	@ float
 7833              	.LVL918:
 358:src/main.cpp  ****     }
 7834              		.loc 21 358 0 discriminator 2
 7835 07f8 1F98     		ldr	r0, [sp, #124]	@ float
 7836              	.LVL919:
 7837 07fa FFF7FEFF 		bl	__aeabi_f2d
 7838              	.LVL920:
 7839 07fe CDE91A01 		strd	r0, [sp, #104]
 7840 0802 4046     		mov	r0, r8
 7841 0804 FFF7FEFF 		bl	__aeabi_f2d
 7842              	.LVL921:
 7843 0808 DDE91C23 		ldrd	r2, [sp, #112]
 7844 080c 0646     		mov	r6, r0
 7845 080e 0F46     		mov	r7, r1
 7846 0810 DDE91801 		ldrd	r0, [sp, #96]
 7847 0814 FFF7FEFF 		bl	__aeabi_dmul
 7848              	.LVL922:
 7849 0818 3246     		mov	r2, r6
 7850 081a 3B46     		mov	r3, r7
 7851 081c FFF7FEFF 		bl	__aeabi_dadd
 7852              	.LVL923:
 7853 0820 FFF7FEFF 		bl	cos
 7854              	.LVL924:
 7855 0824 DDE91C23 		ldrd	r2, [sp, #112]
 7856 0828 8046     		mov	r8, r0
 7857 082a 8946     		mov	r9, r1
 7858 082c DDE91601 		ldrd	r0, [sp, #88]
 7859 0830 FFF7FEFF 		bl	__aeabi_dmul
 7860              	.LVL925:
 7861 0834 3246     		mov	r2, r6
 7862 0836 3B46     		mov	r3, r7
 7863 0838 FFF7FEFF 		bl	__aeabi_dadd
 7864              	.LVL926:
 7865 083c FFF7FEFF 		bl	sin
 7866              	.LVL927:
 7867 0840 4246     		mov	r2, r8
 7868 0842 0646     		mov	r6, r0
 7869 0844 0F46     		mov	r7, r1
 7870 0846 DDE91A01 		ldrd	r0, [sp, #104]
 7871 084a 4B46     		mov	r3, r9
 7872 084c FFF7FEFF 		bl	__aeabi_dmul
 7873              	.LVL928:
 7874 0850 3246     		mov	r2, r6
 7875 0852 3B46     		mov	r3, r7
 7876 0854 8046     		mov	r8, r0
 7877 0856 8946     		mov	r9, r1
 7878 0858 DDE91A01 		ldrd	r0, [sp, #104]
 7879 085c FFF7FEFF 		bl	__aeabi_dmul
 7880              	.LVL929:
 7881 0860 0246     		mov	r2, r0
 7882 0862 0B46     		mov	r3, r1
 7883 0864 4046     		mov	r0, r8
 7884 0866 4946     		mov	r1, r9
 7885 0868 FFF7FEFF 		bl	__aeabi_ddiv
 7886              	.LVL930:
 7887 086c FFF7FEFF 		bl	atan
 7888              	.LVL931:
 7889 0870 0646     		mov	r6, r0
 7890 0872 0F46     		mov	r7, r1
 7891 0874 1E98     		ldr	r0, [sp, #120]	@ float
 7892 0876 FFF7FEFF 		bl	__aeabi_f2d
 7893              	.LVL932:
 7894 087a 3246     		mov	r2, r6
 7895 087c 3B46     		mov	r3, r7
 7896 087e FFF7FEFF 		bl	__aeabi_dsub
 7897              	.LVL933:
 7898 0882 FFF7FEFF 		bl	cos
 7899              	.LVL934:
 7900 0886 0246     		mov	r2, r0
 7901 0888 0B46     		mov	r3, r1
 7902 088a DDE90E01 		ldrd	r0, [sp, #56]
 7903 088e FFF7FEFF 		bl	__aeabi_dmul
 7904              	.LVL935:
 7905 0892 0646     		mov	r6, r0
 7906 0894 5046     		mov	r0, r10
 7907 0896 0F46     		mov	r7, r1
 7908 0898 FFF7FEFF 		bl	__aeabi_f2d
 7909              	.LVL936:
 7910 089c 0246     		mov	r2, r0
 7911 089e 0B46     		mov	r3, r1
 7912 08a0 3046     		mov	r0, r6
 7913 08a2 3946     		mov	r1, r7
 7914 08a4 FFF7FEFF 		bl	__aeabi_dadd
 7915              	.LVL937:
 7916 08a8 FFF7FEFF 		bl	__aeabi_d2f
 7917              	.LVL938:
 7918              	.LBE621:
 353:src/main.cpp  ****       // TODO: Calculate beta correctly
 7919              		.loc 21 353 0 discriminator 2
 7920 08ac 0135     		adds	r5, r5, #1
 7921              	.LVL939:
 7922 08ae 042D     		cmp	r5, #4
 7923              	.LBB622:
 358:src/main.cpp  ****     }
 7924              		.loc 21 358 0 discriminator 2
 7925 08b0 8246     		mov	r10, r0
 7926              	.LVL940:
 7927              	.LBE622:
 353:src/main.cpp  ****       // TODO: Calculate beta correctly
 7928              		.loc 21 353 0 discriminator 2
 7929 08b2 7FF459AF 		bne	.L411
 7930              	.LBE624:
 360:src/main.cpp  ****     y_dot /= 4;
 7931              		.loc 21 360 0
 7932 08b6 1098     		ldr	r0, [sp, #64]	@ float
 7933              	.LVL941:
 7934 08b8 4FF07A51 		mov	r1, #1048576000
 7935 08bc FFF7FEFF 		bl	__aeabi_fmul
 7936              	.LVL942:
 361:src/main.cpp  ****     theta_dot /= 4;
 7937              		.loc 21 361 0
 7938 08c0 4FF07A51 		mov	r1, #1048576000
 360:src/main.cpp  ****     y_dot /= 4;
 7939              		.loc 21 360 0
 7940 08c4 1E90     		str	r0, [sp, #120]	@ float
 7941              	.LVL943:
 361:src/main.cpp  ****     theta_dot /= 4;
 7942              		.loc 21 361 0
 7943 08c6 1398     		ldr	r0, [sp, #76]	@ float
 7944              	.LVL944:
 7945 08c8 FFF7FEFF 		bl	__aeabi_fmul
 7946              	.LVL945:
 362:src/main.cpp  **** 
 7947              		.loc 21 362 0
 7948 08cc 4FF07A51 		mov	r1, #1048576000
 361:src/main.cpp  ****     theta_dot /= 4;
 7949              		.loc 21 361 0
 7950 08d0 1390     		str	r0, [sp, #76]	@ float
 7951              	.LVL946:
 362:src/main.cpp  **** 
 7952              		.loc 21 362 0
 7953 08d2 5046     		mov	r0, r10
 7954              	.LVL947:
 7955 08d4 FFF7FEFF 		bl	__aeabi_fmul
 7956              	.LVL948:
 7957 08d8 1690     		str	r0, [sp, #88]	@ float
 7958              	.LVL949:
 366:src/main.cpp  ****     double delta_y = (x_dot * sin(th) + y_dot * cos(th)) * dt;
 7959              		.loc 21 366 0
 7960 08da 1E98     		ldr	r0, [sp, #120]	@ float
 7961              	.LVL950:
 7962 08dc FFF7FEFF 		bl	__aeabi_f2d
 7963              	.LVL951:
 7964 08e0 CDE90E01 		strd	r0, [sp, #56]
 7965 08e4 DDE90801 		ldrd	r0, [sp, #32]
 7966 08e8 FFF7FEFF 		bl	cos
 7967              	.LVL952:
 7968 08ec 8046     		mov	r8, r0
 7969 08ee 1398     		ldr	r0, [sp, #76]	@ float
 7970 08f0 8946     		mov	r9, r1
 7971 08f2 FFF7FEFF 		bl	__aeabi_f2d
 7972              	.LVL953:
 7973 08f6 CDE91001 		strd	r0, [sp, #64]
 7974 08fa DDE90801 		ldrd	r0, [sp, #32]
 7975 08fe FFF7FEFF 		bl	sin
 7976              	.LVL954:
 370:src/main.cpp  ****     y += delta_y;
 7977              		.loc 21 370 0
 7978 0902 4246     		mov	r2, r8
 366:src/main.cpp  ****     double delta_y = (x_dot * sin(th) + y_dot * cos(th)) * dt;
 7979              		.loc 21 366 0
 7980 0904 0646     		mov	r6, r0
 7981 0906 0F46     		mov	r7, r1
 7982              	.LVL955:
 370:src/main.cpp  ****     y += delta_y;
 7983              		.loc 21 370 0
 7984 0908 DDE90E01 		ldrd	r0, [sp, #56]
 7985 090c 4B46     		mov	r3, r9
 7986 090e FFF7FEFF 		bl	__aeabi_dmul
 7987              	.LVL956:
 7988 0912 3246     		mov	r2, r6
 7989 0914 3B46     		mov	r3, r7
 7990 0916 CDE91801 		strd	r0, [sp, #96]
 7991 091a DDE91001 		ldrd	r0, [sp, #64]
 7992 091e FFF7FEFF 		bl	__aeabi_dmul
 7993              	.LVL957:
 7994 0922 0246     		mov	r2, r0
 7995 0924 0B46     		mov	r3, r1
 7996 0926 DDE91801 		ldrd	r0, [sp, #96]
 7997 092a FFF7FEFF 		bl	__aeabi_dsub
 7998              	.LVL958:
 7999 092e 7AA3     		adr	r3, .L441
 8000 0930 D3E90023 		ldrd	r2, [r3]
 8001 0934 FFF7FEFF 		bl	__aeabi_dmul
 8002              	.LVL959:
 8003 0938 0246     		mov	r2, r0
 8004 093a 0B46     		mov	r3, r1
 8005 093c DDE90A01 		ldrd	r0, [sp, #40]
 8006 0940 FFF7FEFF 		bl	__aeabi_dadd
 8007              	.LVL960:
 371:src/main.cpp  ****     th += delta_th;
 8008              		.loc 21 371 0
 8009 0944 3246     		mov	r2, r6
 8010 0946 3B46     		mov	r3, r7
 370:src/main.cpp  ****     y += delta_y;
 8011              		.loc 21 370 0
 8012 0948 CDE90A01 		strd	r0, [sp, #40]
 8013              	.LVL961:
 371:src/main.cpp  ****     th += delta_th;
 8014              		.loc 21 371 0
 8015 094c DDE90E01 		ldrd	r0, [sp, #56]
 8016              	.LVL962:
 8017 0950 FFF7FEFF 		bl	__aeabi_dmul
 8018              	.LVL963:
 8019 0954 DDE91023 		ldrd	r2, [sp, #64]
 8020 0958 0646     		mov	r6, r0
 8021              	.LVL964:
 8022 095a 0F46     		mov	r7, r1
 8023 095c 4046     		mov	r0, r8
 8024 095e 4946     		mov	r1, r9
 8025 0960 FFF7FEFF 		bl	__aeabi_dmul
 8026              	.LVL965:
 8027 0964 0246     		mov	r2, r0
 8028 0966 0B46     		mov	r3, r1
 8029 0968 3046     		mov	r0, r6
 8030 096a 3946     		mov	r1, r7
 8031 096c FFF7FEFF 		bl	__aeabi_dadd
 8032              	.LVL966:
 8033 0970 69A3     		adr	r3, .L441
 8034 0972 D3E90023 		ldrd	r2, [r3]
 8035 0976 FFF7FEFF 		bl	__aeabi_dmul
 8036              	.LVL967:
 8037 097a 0246     		mov	r2, r0
 8038 097c 0B46     		mov	r3, r1
 8039 097e DDE90C01 		ldrd	r0, [sp, #48]
 8040 0982 FFF7FEFF 		bl	__aeabi_dadd
 8041              	.LVL968:
 8042 0986 CDE90C01 		strd	r0, [sp, #48]
 8043              	.LVL969:
 372:src/main.cpp  **** 
 8044              		.loc 21 372 0
 8045 098a 6549     		ldr	r1, .L441+8
 8046 098c 1698     		ldr	r0, [sp, #88]	@ float
 8047              	.LVL970:
 8048 098e FFF7FEFF 		bl	__aeabi_fmul
 8049              	.LVL971:
 8050 0992 FFF7FEFF 		bl	__aeabi_f2d
 8051              	.LVL972:
 8052 0996 0246     		mov	r2, r0
 8053 0998 0B46     		mov	r3, r1
 8054 099a DDE90801 		ldrd	r0, [sp, #32]
 8055 099e FFF7FEFF 		bl	__aeabi_dadd
 8056              	.LVL973:
 8057              	.LBB625:
 8058              	.LBB626:
 8059              		.file 27 "./lib/ros_lib/tf/tf.h"
   1:./lib/ros_lib/tf/tf.h **** /* 
   2:./lib/ros_lib/tf/tf.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/tf/tf.h ****  *
   4:./lib/ros_lib/tf/tf.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/tf/tf.h ****  * All rights reserved.
   6:./lib/ros_lib/tf/tf.h ****  *
   7:./lib/ros_lib/tf/tf.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/tf/tf.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/tf/tf.h ****  * are met:
  10:./lib/ros_lib/tf/tf.h ****  *
  11:./lib/ros_lib/tf/tf.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/tf/tf.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/tf/tf.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/tf/tf.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/tf/tf.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/tf/tf.h ****  *    with the distribution.
  17:./lib/ros_lib/tf/tf.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/tf/tf.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/tf/tf.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/tf/tf.h ****  *
  21:./lib/ros_lib/tf/tf.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/tf/tf.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/tf/tf.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/tf/tf.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/tf/tf.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/tf/tf.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/tf/tf.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/tf/tf.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/tf/tf.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/tf/tf.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/tf/tf.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/tf/tf.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/tf/tf.h ****  */
  34:./lib/ros_lib/tf/tf.h **** 
  35:./lib/ros_lib/tf/tf.h **** #ifndef ROS_TF_H_
  36:./lib/ros_lib/tf/tf.h **** #define ROS_TF_H_
  37:./lib/ros_lib/tf/tf.h **** 
  38:./lib/ros_lib/tf/tf.h **** #include "geometry_msgs/TransformStamped.h"
  39:./lib/ros_lib/tf/tf.h **** 
  40:./lib/ros_lib/tf/tf.h **** namespace tf
  41:./lib/ros_lib/tf/tf.h **** {
  42:./lib/ros_lib/tf/tf.h ****   
  43:./lib/ros_lib/tf/tf.h ****   static inline geometry_msgs::Quaternion createQuaternionFromYaw(double yaw)
  44:./lib/ros_lib/tf/tf.h ****   {
  45:./lib/ros_lib/tf/tf.h ****     geometry_msgs::Quaternion q;
  46:./lib/ros_lib/tf/tf.h ****     q.x = 0;
  47:./lib/ros_lib/tf/tf.h ****     q.y = 0;
  48:./lib/ros_lib/tf/tf.h ****     q.z = sin(yaw * 0.5);
 8060              		.loc 27 48 0
 8061 09a2 0022     		movs	r2, #0
 8062 09a4 5F4B     		ldr	r3, .L441+12
 8063              	.LBE626:
 8064              	.LBE625:
 372:src/main.cpp  **** 
 8065              		.loc 21 372 0
 8066 09a6 CDE90801 		strd	r0, [sp, #32]
 8067              	.LVL974:
 8068              	.LBB628:
 8069              	.LBB627:
 8070              		.loc 27 48 0
 8071 09aa FFF7FEFF 		bl	__aeabi_dmul
 8072              	.LVL975:
 8073 09ae 0646     		mov	r6, r0
 8074 09b0 0F46     		mov	r7, r1
 8075 09b2 FFF7FEFF 		bl	sin
 8076              	.LVL976:
 8077 09b6 FFF7FEFF 		bl	__aeabi_d2f
 8078              	.LVL977:
  49:./lib/ros_lib/tf/tf.h ****     q.w = cos(yaw * 0.5);
 8079              		.loc 27 49 0
 8080 09ba 3946     		mov	r1, r7
  48:./lib/ros_lib/tf/tf.h ****     q.w = cos(yaw * 0.5);
 8081              		.loc 27 48 0
 8082 09bc 0E90     		str	r0, [sp, #56]	@ float
 8083              		.loc 27 49 0
 8084 09be 3046     		mov	r0, r6
 8085 09c0 FFF7FEFF 		bl	cos
 8086              	.LVL978:
 8087 09c4 FFF7FEFF 		bl	__aeabi_d2f
 8088              	.LVL979:
 8089 09c8 8046     		mov	r8, r0
 8090              	.LVL980:
 8091              	.LBE627:
 8092              	.LBE628:
 378:src/main.cpp  ****     odom_trans.header.frame_id = "odom";
 8093              		.loc 21 378 0
 8094 09ca 1598     		ldr	r0, [sp, #84]	@ float
 8095 09cc FFF7FEFF 		bl	__aeabi_f2uiz
 8096              	.LVL981:
 8097              	.LBB629:
 8098              	.LBB630:
  53:./lib/ros_lib/ros/time.h ****       Time(uint32_t _sec, uint32_t _nsec) : sec(_sec), nsec(_nsec)
 8099              		.loc 26 53 0
 8100 09d0 28AD     		add	r5, sp, #160
 8101              	.LVL982:
 8102 09d2 0023     		movs	r3, #0
 8103 09d4 2890     		str	r0, [sp, #160]
 8104 09d6 1890     		str	r0, [sp, #96]
  54:./lib/ros_lib/ros/time.h ****       {
  55:./lib/ros_lib/ros/time.h ****         normalizeSecNSec(sec, nsec);
 8105              		.loc 26 55 0
 8106 09d8 29A9     		add	r1, sp, #164
 8107 09da 2846     		mov	r0, r5
 8108              	.LVL983:
 8109              	.LBE630:
 8110              	.LBE629:
 378:src/main.cpp  ****     odom_trans.header.frame_id = "odom";
 8111              		.loc 21 378 0
 8112 09dc 524E     		ldr	r6, .L441+16
 8113              	.LBB633:
 8114              	.LBB631:
  53:./lib/ros_lib/ros/time.h ****       Time(uint32_t _sec, uint32_t _nsec) : sec(_sec), nsec(_nsec)
 8115              		.loc 26 53 0
 8116 09de 2993     		str	r3, [sp, #164]
 8117 09e0 1093     		str	r3, [sp, #64]
 8118              	.LBE631:
 8119              	.LBE633:
 380:src/main.cpp  **** 
 8120              		.loc 21 380 0
 8121 09e2 524F     		ldr	r7, .L441+20
 8122              	.LBB634:
 8123              	.LBB632:
 8124              		.loc 26 55 0
 8125 09e4 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 8126              	.LVL984:
 8127              	.LBE632:
 8128              	.LBE634:
 378:src/main.cpp  ****     odom_trans.header.frame_id = "odom";
 8129              		.loc 21 378 0
 8130 09e8 95E80300 		ldmia	r5, {r0, r1}
 379:src/main.cpp  ****     odom_trans.child_frame_id = "base_link";
 8131              		.loc 21 379 0
 8132 09ec 504B     		ldr	r3, .L441+24
 378:src/main.cpp  ****     odom_trans.header.frame_id = "odom";
 8133              		.loc 21 378 0
 8134 09ee 86E80300 		stmia	r6, {r0, r1}
 382:src/main.cpp  ****     odom_trans.transform.translation.y = y;
 8135              		.loc 21 382 0
 8136 09f2 DDE90A01 		ldrd	r0, [sp, #40]
 379:src/main.cpp  ****     odom_trans.child_frame_id = "base_link";
 8137              		.loc 21 379 0
 8138 09f6 C4F8583A 		str	r3, [r4, #2648]
 380:src/main.cpp  **** 
 8139              		.loc 21 380 0
 8140 09fa C4F85C7A 		str	r7, [r4, #2652]
 382:src/main.cpp  ****     odom_trans.transform.translation.y = y;
 8141              		.loc 21 382 0
 8142 09fe FFF7FEFF 		bl	__aeabi_d2f
 8143              	.LVL985:
 8144 0a02 8246     		mov	r10, r0
 8145 0a04 C4F8680A 		str	r0, [r4, #2664]	@ float
 383:src/main.cpp  ****     odom_trans.transform.translation.z = 0.0;
 8146              		.loc 21 383 0
 8147 0a08 DDE90C01 		ldrd	r0, [sp, #48]
 8148 0a0c FFF7FEFF 		bl	__aeabi_d2f
 8149              	.LVL986:
 8150 0a10 8146     		mov	r9, r0
 384:src/main.cpp  ****     odom_trans.transform.rotation = odom_quat;
 8151              		.loc 21 384 0
 8152 0a12 0023     		movs	r3, #0
 8153 0a14 C4F8703A 		str	r3, [r4, #2672]	@ float
 8154              	.LVL987:
 8155              	.LBB635:
 8156              	.LBB636:
  12:./lib/ros_lib/geometry_msgs/Quaternion.h ****   {
 8157              		.loc 8 12 0
 8158 0a18 C4F8783A 		str	r3, [r4, #2680]	@ float
 8159 0a1c C4F87C3A 		str	r3, [r4, #2684]	@ float
 8160              	.LBE636:
 8161              	.LBE635:
 8162              	.LBB639:
 8163              	.LBB640:
 8164              		.file 28 "./lib/ros_lib/tf/transform_broadcaster.h"
   1:./lib/ros_lib/tf/transform_broadcaster.h **** /* 
   2:./lib/ros_lib/tf/transform_broadcaster.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/tf/transform_broadcaster.h ****  *
   4:./lib/ros_lib/tf/transform_broadcaster.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/tf/transform_broadcaster.h ****  * All rights reserved.
   6:./lib/ros_lib/tf/transform_broadcaster.h ****  *
   7:./lib/ros_lib/tf/transform_broadcaster.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/tf/transform_broadcaster.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/tf/transform_broadcaster.h ****  * are met:
  10:./lib/ros_lib/tf/transform_broadcaster.h ****  *
  11:./lib/ros_lib/tf/transform_broadcaster.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/tf/transform_broadcaster.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/tf/transform_broadcaster.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/tf/transform_broadcaster.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/tf/transform_broadcaster.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/tf/transform_broadcaster.h ****  *    with the distribution.
  17:./lib/ros_lib/tf/transform_broadcaster.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/tf/transform_broadcaster.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/tf/transform_broadcaster.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/tf/transform_broadcaster.h ****  *
  21:./lib/ros_lib/tf/transform_broadcaster.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/tf/transform_broadcaster.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/tf/transform_broadcaster.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/tf/transform_broadcaster.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/tf/transform_broadcaster.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/tf/transform_broadcaster.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/tf/transform_broadcaster.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/tf/transform_broadcaster.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/tf/transform_broadcaster.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/tf/transform_broadcaster.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/tf/transform_broadcaster.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/tf/transform_broadcaster.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/tf/transform_broadcaster.h ****  */
  34:./lib/ros_lib/tf/transform_broadcaster.h **** 
  35:./lib/ros_lib/tf/transform_broadcaster.h **** #ifndef ROS_TRANSFORM_BROADCASTER_H_
  36:./lib/ros_lib/tf/transform_broadcaster.h **** #define ROS_TRANSFORM_BROADCASTER_H_
  37:./lib/ros_lib/tf/transform_broadcaster.h **** 
  38:./lib/ros_lib/tf/transform_broadcaster.h **** #include "tfMessage.h"
  39:./lib/ros_lib/tf/transform_broadcaster.h **** 
  40:./lib/ros_lib/tf/transform_broadcaster.h **** namespace tf
  41:./lib/ros_lib/tf/transform_broadcaster.h **** {
  42:./lib/ros_lib/tf/transform_broadcaster.h **** 
  43:./lib/ros_lib/tf/transform_broadcaster.h ****   class TransformBroadcaster
  44:./lib/ros_lib/tf/transform_broadcaster.h ****   {
  45:./lib/ros_lib/tf/transform_broadcaster.h ****     public:
  46:./lib/ros_lib/tf/transform_broadcaster.h ****       TransformBroadcaster() : publisher_("/tf", &internal_msg) {}
  47:./lib/ros_lib/tf/transform_broadcaster.h **** 
  48:./lib/ros_lib/tf/transform_broadcaster.h ****       void init(ros::NodeHandle &nh)
  49:./lib/ros_lib/tf/transform_broadcaster.h ****       {
  50:./lib/ros_lib/tf/transform_broadcaster.h ****         nh.advertise(publisher_);
  51:./lib/ros_lib/tf/transform_broadcaster.h ****       }
  52:./lib/ros_lib/tf/transform_broadcaster.h **** 
  53:./lib/ros_lib/tf/transform_broadcaster.h ****       void sendTransform(geometry_msgs::TransformStamped &transform)
  54:./lib/ros_lib/tf/transform_broadcaster.h ****       {
  55:./lib/ros_lib/tf/transform_broadcaster.h ****         internal_msg.transforms_length = 1;
 8165              		.loc 28 55 0
 8166 0a20 0121     		movs	r1, #1
 8167              	.LBE640:
 8168              	.LBE639:
 8169              	.LBB643:
 8170              	.LBB637:
  12:./lib/ros_lib/geometry_msgs/Quaternion.h ****   {
 8171              		.loc 8 12 0
 8172 0a22 0E9B     		ldr	r3, [sp, #56]	@ float
 8173              	.LBE637:
 8174              	.LBE643:
 8175              	.LBB644:
 8176              	.LBB641:
 8177              		.loc 28 55 0
 8178 0a24 84F8D019 		strb	r1, [r4, #2512]
  56:./lib/ros_lib/tf/transform_broadcaster.h ****         internal_msg.transforms = &transform;
 8179              		.loc 28 56 0
 8180 0a28 A6F10C01 		sub	r1, r6, #12
 8181              	.LBE641:
 8182              	.LBE644:
 383:src/main.cpp  ****     odom_trans.transform.translation.z = 0.0;
 8183              		.loc 21 383 0
 8184 0a2c C4F86C0A 		str	r0, [r4, #2668]	@ float
 8185              	.LBB645:
 8186              	.LBB638:
  12:./lib/ros_lib/geometry_msgs/Quaternion.h ****   {
 8187              		.loc 8 12 0
 8188 0a30 C4F8803A 		str	r3, [r4, #2688]	@ float
 8189 0a34 C4F8848A 		str	r8, [r4, #2692]	@ float
 8190              	.LVL988:
 8191              	.LBE638:
 8192              	.LBE645:
 8193              	.LBB646:
 8194              	.LBB642:
 8195              		.loc 28 56 0
 8196 0a38 C4F8181A 		str	r1, [r4, #2584]
  57:./lib/ros_lib/tf/transform_broadcaster.h ****         publisher_.publish(&internal_msg);
 8197              		.loc 28 57 0
 8198 0a3c A6F13400 		sub	r0, r6, #52
 8199 0a40 A6F18401 		sub	r1, r6, #132
 8200 0a44 FFF7FEFF 		bl	_ZN3ros9Publisher7publishEPKNS_3MsgE
 8201              	.LVL989:
 8202              	.LBE642:
 8203              	.LBE646:
 8204              	.LBB647:
 8205              	.LBB648:
  53:./lib/ros_lib/ros/time.h ****       {
 8206              		.loc 26 53 0
 8207 0a48 189A     		ldr	r2, [sp, #96]
 8208 0a4a 109B     		ldr	r3, [sp, #64]
 8209              		.loc 26 55 0
 8210 0a4c 2846     		mov	r0, r5
 8211 0a4e 29A9     		add	r1, sp, #164
  53:./lib/ros_lib/ros/time.h ****       {
 8212              		.loc 26 53 0
 8213 0a50 2A60     		str	r2, [r5]
 8214 0a52 6B60     		str	r3, [r5, #4]
 8215              		.loc 26 55 0
 8216 0a54 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 8217              	.LVL990:
 8218              	.LBE648:
 8219              	.LBE647:
 391:src/main.cpp  ****     odom.header.frame_id = "odom";
 8220              		.loc 21 391 0
 8221 0a58 95E80300 		ldmia	r5, {r0, r1}
 8222 0a5c 06F14403 		add	r3, r6, #68
 8223 0a60 83E80300 		stmia	r3, {r0, r1}
 392:src/main.cpp  **** 
 8224              		.loc 21 392 0
 8225 0a64 324B     		ldr	r3, .L441+24
 407:src/main.cpp  **** 
 8226              		.loc 21 407 0
 8227 0a66 06F13801 		add	r1, r6, #56
 392:src/main.cpp  **** 
 8228              		.loc 21 392 0
 8229 0a6a C4F89C3A 		str	r3, [r4, #2716]
 397:src/main.cpp  ****     odom.pose.pose.orientation = odom_quat;
 8230              		.loc 21 397 0
 8231 0a6e 0023     		movs	r3, #0
 8232 0a70 C4F8B83A 		str	r3, [r4, #2744]	@ float
 8233              	.LVL991:
 8234              	.LBB649:
 8235              	.LBB650:
  12:./lib/ros_lib/geometry_msgs/Quaternion.h ****   {
 8236              		.loc 8 12 0
 8237 0a74 C4F8C03A 		str	r3, [r4, #2752]	@ float
 8238 0a78 C4F8C43A 		str	r3, [r4, #2756]	@ float
 8239 0a7c 0E9B     		ldr	r3, [sp, #56]	@ float
 8240 0a7e C4F8CC8A 		str	r8, [r4, #2764]	@ float
 8241              	.LVL992:
 8242 0a82 C4F8C83A 		str	r3, [r4, #2760]	@ float
 8243              	.LBE650:
 8244              	.LBE649:
 402:src/main.cpp  ****     odom.twist.twist.linear.y = y_dot;
 8245              		.loc 21 402 0
 8246 0a86 1E9B     		ldr	r3, [sp, #120]	@ float
 407:src/main.cpp  **** 
 8247              		.loc 21 407 0
 8248 0a88 A6F19800 		sub	r0, r6, #152
 402:src/main.cpp  ****     odom.twist.twist.linear.y = y_dot;
 8249              		.loc 21 402 0
 8250 0a8c C4F86C3B 		str	r3, [r4, #2924]	@ float
 403:src/main.cpp  ****     odom.twist.twist.angular.z = theta_dot;
 8251              		.loc 21 403 0
 8252 0a90 139B     		ldr	r3, [sp, #76]	@ float
 396:src/main.cpp  ****     odom.pose.pose.position.z = 0.0;
 8253              		.loc 21 396 0
 8254 0a92 C4F8B49A 		str	r9, [r4, #2740]	@ float
 403:src/main.cpp  ****     odom.twist.twist.angular.z = theta_dot;
 8255              		.loc 21 403 0
 8256 0a96 C4F8703B 		str	r3, [r4, #2928]	@ float
 404:src/main.cpp  **** 
 8257              		.loc 21 404 0
 8258 0a9a 169B     		ldr	r3, [sp, #88]	@ float
 395:src/main.cpp  ****     odom.pose.pose.position.y = y;
 8259              		.loc 21 395 0
 8260 0a9c C4F8B0AA 		str	r10, [r4, #2736]	@ float
 404:src/main.cpp  **** 
 8261              		.loc 21 404 0
 8262 0aa0 C4F8843B 		str	r3, [r4, #2948]	@ float
 401:src/main.cpp  ****     odom.twist.twist.linear.x = x_dot;
 8263              		.loc 21 401 0
 8264 0aa4 C4F8A07A 		str	r7, [r4, #2720]
 407:src/main.cpp  **** 
 8265              		.loc 21 407 0
 8266 0aa8 FFF7FEFF 		bl	_ZN3ros9Publisher7publishEPKNS_3MsgE
 8267              	.LVL993:
 410:src/main.cpp  ****       nh.logerror("Main loop running slower than expected!");
 8268              		.loc 21 410 0
 8269 0aac FFF7FEFF 		bl	millis
 8270              	.LVL994:
 8271 0ab0 0546     		mov	r5, r0
 8272 0ab2 1598     		ldr	r0, [sp, #84]	@ float
 8273 0ab4 FFF7FEFF 		bl	__aeabi_f2d
 8274              	.LVL995:
 8275 0ab8 8046     		mov	r8, r0
 8276 0aba 8946     		mov	r9, r1
 8277 0abc 2846     		mov	r0, r5
 8278 0abe FFF7FEFF 		bl	__aeabi_i2d
 8279              	.LVL996:
 8280 0ac2 0022     		movs	r2, #0
 8281 0ac4 1B4B     		ldr	r3, .L441+28
 8282 0ac6 FFF7FEFF 		bl	__aeabi_ddiv
 8283              	.LVL997:
 8284 0aca 4246     		mov	r2, r8
 8285 0acc 4B46     		mov	r3, r9
 8286 0ace FFF7FEFF 		bl	__aeabi_dsub
 8287              	.LVL998:
 8288 0ad2 11A3     		adr	r3, .L441
 8289 0ad4 D3E90023 		ldrd	r2, [r3]
 8290 0ad8 FFF7FEFF 		bl	__aeabi_dcmpge
 8291              	.LVL999:
 8292 0adc 28B1     		cbz	r0, .L412
 411:src/main.cpp  ****     }else{
 8293              		.loc 21 411 0
 8294 0ade 1649     		ldr	r1, .L441+32
 8295 0ae0 A6F22460 		subw	r0, r6, #1572
 8296 0ae4 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 8297              	.LVL1000:
 8298 0ae8 12E0     		b	.L414
 8299              	.L412:
 413:src/main.cpp  ****     }
 8300              		.loc 21 413 0
 8301 0aea FFF7FEFF 		bl	millis
 8302              	.LVL1001:
 8303 0aee FFF7FEFF 		bl	__aeabi_i2d
 8304              	.LVL1002:
 8305 0af2 0022     		movs	r2, #0
 8306 0af4 0F4B     		ldr	r3, .L441+28
 8307 0af6 FFF7FEFF 		bl	__aeabi_ddiv
 8308              	.LVL1003:
 8309 0afa 4246     		mov	r2, r8
 8310 0afc 4B46     		mov	r3, r9
 8311 0afe FFF7FEFF 		bl	__aeabi_dsub
 8312              	.LVL1004:
 8313 0b02 05A3     		adr	r3, .L441
 8314 0b04 D3E90023 		ldrd	r2, [r3]
 8315 0b08 FFF7FEFF 		bl	__aeabi_dcmple
 8316              	.LVL1005:
 8317 0b0c 0028     		cmp	r0, #0
 8318 0b0e ECD1     		bne	.L412
 8319              	.L414:
 8320              	.LBE615:
 291:src/main.cpp  ****     nh.spinOnce();
 8321              		.loc 21 291 0
 8322 0b10 149E     		ldr	r6, [sp, #80]
 8323 0b12 15E5     		b	.L415
 8324              	.L442:
 8325 0b14 AFF30080 		.align	3
 8326              	.L441:
 8327 0b18 00000040 		.word	1073741824
 8328 0b1c E17A943F 		.word	1066695393
 8329 0b20 0AD7A33C 		.word	1017370378
 8330 0b24 0000E03F 		.word	1071644672
 8331 0b28 500A0000 		.word	.LANCHOR1+2640
 8332 0b2c 3F050000 		.word	.LC53
 8333 0b30 3A050000 		.word	.LC52
 8334 0b34 00408F40 		.word	1083129856
 8335 0b38 49050000 		.word	.LC54
 8336              		.cfi_endproc
 8337              	.LFE1281:
 8338              		.fnend
 8340              		.text
 8341              		.align	1
 8342              		.global	_Z13assert_failedPhm
 8343              		.thumb
 8344              		.thumb_func
 8346              	_Z13assert_failedPhm:
 8347              		.fnstart
 8348              	.LFB1334:
 427:src/main.cpp  **** 
 428:src/main.cpp  **** 
 429:src/main.cpp  **** 
 430:src/main.cpp  **** void assert_failed(uint8_t* file, uint32_t line){
 8349              		.loc 21 430 0
 8350              		.cfi_startproc
 8351              		@ args = 0, pretend = 0, frame = 152
 8352              		@ frame_needed = 0, uses_anonymous_args = 0
 8353              	.LVL1006:
 8354 01ec 00B5     		push	{lr}
 8355              		.save {lr}
 8356              	.LCFI80:
 8357              		.cfi_def_cfa_offset 4
 8358              		.cfi_offset 14, -4
 8359              		.pad #156
 8360 01ee A7B0     		sub	sp, sp, #156
 8361              	.LCFI81:
 8362              		.cfi_def_cfa_offset 160
 431:src/main.cpp  ****   /* User can add his own implementation to report the file name and line number,
 432:src/main.cpp  ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 433:src/main.cpp  ****   char str[150];
 434:src/main.cpp  **** 
 435:src/main.cpp  ****   sprintf(str, "Wrong parameters value: file %s on line %u\r\n", file, (unsigned int)line);
 8363              		.loc 21 435 0
 8364 01f0 0B46     		mov	r3, r1
 8365 01f2 0246     		mov	r2, r0
 8366 01f4 0849     		ldr	r1, .L445
 8367              	.LVL1007:
 8368 01f6 6846     		mov	r0, sp
 8369              	.LVL1008:
 8370 01f8 FFF7FEFF 		bl	sprintf
 8371              	.LVL1009:
 436:src/main.cpp  ****   nh.logerror(str);
 8372              		.loc 21 436 0
 8373 01fc 6946     		mov	r1, sp
 8374 01fe 0748     		ldr	r0, .L445+4
 8375 0200 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 8376              	.LVL1010:
 8377              	.L444:
 437:src/main.cpp  ****   while (1){
 438:src/main.cpp  ****     debug_toggle();
 8378              		.loc 21 438 0
 8379 0204 FFF7FEFF 		bl	debug_toggle
 8380              	.LVL1011:
 439:src/main.cpp  ****     delay(100);
 8381              		.loc 21 439 0
 8382 0208 6420     		movs	r0, #100
 8383 020a FFF7FEFF 		bl	delay
 8384              	.LVL1012:
 440:src/main.cpp  ****     nh.spinOnce();
 8385              		.loc 21 440 0
 8386 020e 0348     		ldr	r0, .L445+4
 8387 0210 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 8388              	.LVL1013:
 8389 0214 F6E7     		b	.L444
 8390              	.L446:
 8391 0216 00BF     		.align	2
 8392              	.L445:
 8393 0218 71050000 		.word	.LC55
 8394 021c 2C040000 		.word	.LANCHOR1+1068
 8395              		.cfi_endproc
 8396              	.LFE1334:
 8397              		.fnend
 8399              		.section	.text.startup
 8400              		.align	1
 8401              		.thumb
 8402              		.thumb_func
 8404              	_GLOBAL__sub_I_USART_FIFO:
 8405              		.fnstart
 8406              	.LFB1388:
 441:src/main.cpp  ****   }
 442:src/main.cpp  **** }
 8407              		.loc 21 442 0
 8408              		.cfi_startproc
 8409              		@ args = 0, pretend = 0, frame = 0
 8410              		@ frame_needed = 0, uses_anonymous_args = 0
 8411              	.LVL1014:
 8412 0b3c 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 8413              	.LCFI82:
 8414              		.cfi_def_cfa_offset 32
 8415              		.cfi_offset 3, -32
 8416              		.cfi_offset 4, -28
 8417              		.cfi_offset 5, -24
 8418              		.cfi_offset 6, -20
 8419              		.cfi_offset 7, -16
 8420              		.cfi_offset 8, -12
 8421              		.cfi_offset 9, -8
 8422              		.cfi_offset 14, -4
 8423              	.LBB759:
 8424              	.LBB760:
 8425              	.LBB761:
 8426              	.LBB762:
 119:./lib/ros_lib/ros/node_handle.h **** 
 8427              		.loc 19 119 0
 8428 0b40 784A     		ldr	r2, .L460
 8429 0b42 794B     		ldr	r3, .L460+4
 8430              	.LBB763:
 8431              	.LBB764:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 8432              		.loc 4 70 0
 8433 0b44 7949     		ldr	r1, .L460+8
 8434              	.LBE764:
 8435              	.LBE763:
 119:./lib/ros_lib/ros/node_handle.h **** 
 8436              		.loc 19 119 0
 8437 0b46 C3F82C24 		str	r2, [r3, #1068]
 8438              	.LVL1015:
 8439              	.LBB767:
 8440              	.LBB768:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
 8441              		.loc 24 60 0
 8442 0b4a 794A     		ldr	r2, .L460+12
 8443              	.LBE768:
 8444              	.LBE767:
 8445              	.LBB771:
 8446              	.LBB765:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 8447              		.loc 4 70 0
 8448 0b4c C3F83419 		str	r1, [r3, #2356]
 8449              	.LBE765:
 8450              	.LBE771:
 8451              	.LBB772:
 8452              	.LBB769:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
 8453              		.loc 24 60 0
 8454 0b50 C3F83024 		str	r2, [r3, #1072]
  61:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
 8455              		.loc 24 61 0
 8456 0b54 4FF4E132 		mov	r2, #115200
 8457 0b58 C3F83424 		str	r2, [r3, #1076]
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
 8458              		.loc 24 62 0
 8459 0b5c 0022     		movs	r2, #0
 8460 0b5e 5A62     		str	r2, [r3, #36]
 8461              	.LBE769:
 8462              	.LBE772:
 119:./lib/ros_lib/ros/node_handle.h **** 
 8463              		.loc 19 119 0
 8464 0b60 83F82029 		strb	r2, [r3, #2336]
 8465              	.LBB773:
 8466              	.LBB770:
  63:./lib/ros_lib/ArduinoHardware.h ****     }
 8467              		.loc 24 63 0
 8468 0b64 1A62     		str	r2, [r3, #32]
 8469              	.LVL1016:
 8470              	.LBE770:
 8471              	.LBE773:
 8472              	.LBB774:
 8473              	.LBB766:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 8474              		.loc 4 70 0
 8475 0b66 83F83829 		strb	r2, [r3, #2360]
 8476 0b6a C3F84029 		str	r2, [r3, #2368]
 8477 0b6e 83F84429 		strb	r2, [r3, #2372]
 8478 0b72 C3F84C29 		str	r2, [r3, #2380]
 8479 0b76 83F85029 		strb	r2, [r3, #2384]
 8480 0b7a C3F85829 		str	r2, [r3, #2392]
 8481              	.LVL1017:
 8482 0b7e 03F50461 		add	r1, r3, #2112
 8483 0b82 03F6A403 		addw	r3, r3, #2212
 8484              	.LVL1018:
 8485              	.L448:
 8486              	.LBE766:
 8487              	.LBE774:
 8488              	.LBB775:
 122:./lib/ros_lib/ros/node_handle.h **** 
 8489              		.loc 19 122 0
 8490 0b86 41F8042F 		str	r2, [r1, #4]!
 121:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 8491              		.loc 19 121 0
 8492 0b8a 9942     		cmp	r1, r3
 8493 0b8c FBD1     		bne	.L448
 8494 0b8e 694A     		ldr	r2, .L460+16
 8495              	.LBE775:
 8496              	.LBB776:
 125:./lib/ros_lib/ros/node_handle.h **** 
 8497              		.loc 19 125 0
 8498 0b90 0021     		movs	r1, #0
 8499              	.L449:
 8500 0b92 43F8041F 		str	r1, [r3, #4]!
 8501              	.LVL1019:
 124:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 8502              		.loc 19 124 0
 8503 0b96 9A42     		cmp	r2, r3
 8504 0b98 FBD1     		bne	.L449
 8505 0b9a 0023     		movs	r3, #0
 8506              	.LBE776:
 8507              	.LBB777:
 128:./lib/ros_lib/ros/node_handle.h **** 
 8508              		.loc 19 128 0
 8509 0b9c 1946     		mov	r1, r3
 8510 0b9e 664C     		ldr	r4, .L460+20
 8511              	.L450:
 8512              	.LVL1020:
 8513 0ba0 E218     		adds	r2, r4, r3
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 8514              		.loc 19 127 0
 8515 0ba2 0133     		adds	r3, r3, #1
 8516              	.LVL1021:
 8517 0ba4 B3F5007F 		cmp	r3, #512
 128:./lib/ros_lib/ros/node_handle.h **** 
 8518              		.loc 19 128 0
 8519 0ba8 1176     		strb	r1, [r2, #24]
 8520 0baa 6348     		ldr	r0, .L460+20
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 8521              		.loc 19 127 0
 8522 0bac F8D1     		bne	.L450
 8523 0bae 0023     		movs	r3, #0
 8524              	.LVL1022:
 8525              	.LBE777:
 8526              	.LBB778:
 131:./lib/ros_lib/ros/node_handle.h **** 
 8527              		.loc 19 131 0
 8528 0bb0 1946     		mov	r1, r3
 8529              	.L451:
 8530              	.LVL1023:
 8531 0bb2 C218     		adds	r2, r0, r3
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 8532              		.loc 19 130 0
 8533 0bb4 0133     		adds	r3, r3, #1
 8534              	.LVL1024:
 8535 0bb6 B3F5007F 		cmp	r3, #512
 131:./lib/ros_lib/ros/node_handle.h **** 
 8536              		.loc 19 131 0
 8537 0bba 5B4C     		ldr	r4, .L460+4
 8538 0bbc 4FF00006 		mov	r6, #0
 8539 0bc0 82F81812 		strb	r1, [r2, #536]
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 8540              		.loc 19 130 0
 8541 0bc4 F5D1     		bne	.L451
 8542              	.LVL1025:
 8543              	.LBE778:
 8544              	.LBE762:
 8545              	.LBE761:
 8546              	.LBB779:
 8547              	.LBB780:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8548              		.loc 20 67 0
 8549 0bc6 5D4B     		ldr	r3, .L460+24
  69:./lib/ros_lib/ros/subscriber.h ****       };
 8550              		.loc 20 69 0
 8551 0bc8 5D4A     		ldr	r2, .L460+28
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8552              		.loc 20 67 0
 8553 0bca C4F85C39 		str	r3, [r4, #2396]
 8554              	.LVL1026:
 8555              	.LBB781:
 8556              	.LBB782:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 8557              		.loc 15 33 0
 8558 0bce 5D4B     		ldr	r3, .L460+32
 8559              	.LBE782:
 8560              	.LBE781:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 8561              		.loc 20 69 0
 8562 0bd0 C4F86429 		str	r2, [r4, #2404]
 8563              	.LBE780:
 8564              	.LBE779:
 8565              	.LBB804:
 8566              	.LBB805:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8567              		.loc 20 67 0
 8568 0bd4 5C4A     		ldr	r2, .L460+36
 8569              	.LBE805:
 8570              	.LBE804:
 8571              	.LBB816:
 8572              	.LBB801:
 8573              	.LBB796:
 8574              	.LBB791:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 8575              		.loc 15 33 0
 8576 0bd6 C4F86839 		str	r3, [r4, #2408]
 8577              	.LVL1027:
 8578              	.LBE791:
 8579              	.LBE796:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8580              		.loc 20 67 0
 8581 0bda 5C4B     		ldr	r3, .L460+40
 8582              	.LBE801:
 8583              	.LBE816:
 8584              	.LBB817:
 8585              	.LBB812:
 8586 0bdc C4F89C29 		str	r2, [r4, #2460]
 8587              	.LBB806:
 8588              	.LBB807:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 8589              		.loc 5 18 0
 8590 0be0 5B4A     		ldr	r2, .L460+44
 8591              	.LBE807:
 8592              	.LBE806:
 8593              	.LBE812:
 8594              	.LBE817:
 8595              	.LBB818:
 8596              	.LBB802:
 8597              	.LBB797:
 8598              	.LBB792:
 8599              	.LBB783:
 8600              	.LBB784:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 8601              		.loc 6 23 0
 8602 0be2 5C4F     		ldr	r7, .L460+48
 8603              	.LBE784:
 8604              	.LBE783:
 8605              	.LBE792:
 8606              	.LBE797:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8607              		.loc 20 67 0
 8608 0be4 C4F89439 		str	r3, [r4, #2452]
 8609              	.LBB798:
 8610              	.LBB793:
 8611              	.LBB789:
 8612              	.LBB787:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 8613              		.loc 6 23 0
 8614 0be8 DFF8A081 		ldr	r8, .L460+104
 8615              	.LBE787:
 8616              	.LBE789:
 8617              	.LBE793:
 8618              	.LBE798:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8619              		.loc 20 67 0
 8620 0bec 0123     		movs	r3, #1
 8621              	.LBB799:
 8622              	.LBB794:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 8623              		.loc 15 33 0
 8624 0bee 0025     		movs	r5, #0
 8625              	.LBE794:
 8626              	.LBE799:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8627              		.loc 20 67 0
 8628 0bf0 C4F89839 		str	r3, [r4, #2456]
 8629              	.LBE802:
 8630              	.LBE818:
 8631              	.LBB819:
 8632              	.LBB813:
 8633              	.LBB810:
 8634              	.LBB808:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 8635              		.loc 5 18 0
 8636 0bf4 C4F8A829 		str	r2, [r4, #2472]
 8637              	.LBE808:
 8638              	.LBE810:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8639              		.loc 20 67 0
 8640 0bf8 C4F8B439 		str	r3, [r4, #2484]
 8641 0bfc 564A     		ldr	r2, .L460+52
  69:./lib/ros_lib/ros/subscriber.h ****       };
 8642              		.loc 20 69 0
 8643 0bfe 574B     		ldr	r3, .L460+56
 8644              	.LBE813:
 8645              	.LBE819:
 8646              	.LBB820:
 8647              	.LBB803:
 8648              	.LBB800:
 8649              	.LBB795:
 8650              	.LBB790:
 8651              	.LBB788:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 8652              		.loc 6 23 0
 8653 0c00 C4F86C89 		str	r8, [r4, #2412]
 8654 0c04 C4F87069 		str	r6, [r4, #2416]
 8655              	.LVL1028:
 8656              	.LBB785:
 8657              	.LBB786:
  52:./lib/ros_lib/ros/time.h ****       Time(uint32_t _sec, uint32_t _nsec) : sec(_sec), nsec(_nsec)
 8658              		.loc 26 52 0
 8659 0c08 C4F87469 		str	r6, [r4, #2420]
 8660 0c0c C4F87869 		str	r6, [r4, #2424]
 8661              	.LVL1029:
 8662              	.LBE786:
 8663              	.LBE785:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 8664              		.loc 6 23 0
 8665 0c10 C4F87C79 		str	r7, [r4, #2428]
 8666              	.LVL1030:
 8667              	.LBE788:
 8668              	.LBE790:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 8669              		.loc 15 33 0
 8670 0c14 C4F88059 		str	r5, [r4, #2432]	@ float
 8671 0c18 C4F88459 		str	r5, [r4, #2436]	@ float
 8672 0c1c C4F88859 		str	r5, [r4, #2440]	@ float
 8673 0c20 C4F88C59 		str	r5, [r4, #2444]	@ float
 8674 0c24 84F89069 		strb	r6, [r4, #2448]
 8675              	.LVL1031:
 8676              	.LBE795:
 8677              	.LBE800:
 8678              	.LBE803:
 8679              	.LBE820:
 8680              	.LBB821:
 8681              	.LBB814:
 8682              	.LBB811:
 8683              	.LBB809:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 8684              		.loc 5 18 0
 8685 0c28 84F8AC69 		strb	r6, [r4, #2476]
 8686              	.LVL1032:
 8687              	.LBE809:
 8688              	.LBE811:
 8689              	.LBE814:
 8690              	.LBE821:
 123:src/main.cpp  **** tf::TransformBroadcaster odom_broadcaster;
 8691              		.loc 21 123 0
 8692 0c2c 04F64420 		addw	r0, r4, #2628
 8693              	.LBB822:
 8694              	.LBB815:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 8695              		.loc 20 67 0
 8696 0c30 C4F8B029 		str	r2, [r4, #2480]
  69:./lib/ros_lib/ros/subscriber.h ****       };
 8697              		.loc 20 69 0
 8698 0c34 C4F8A439 		str	r3, [r4, #2468]
 8699              	.LVL1033:
 8700              	.LBE815:
 8701              	.LBE822:
 123:src/main.cpp  **** tf::TransformBroadcaster odom_broadcaster;
 8702              		.loc 21 123 0
 8703 0c38 FFF7FEFF 		bl	_ZN13geometry_msgs16TransformStampedC1Ev
 8704              	.LVL1034:
 8705              	.LBB823:
 8706              	.LBB824:
 8707              	.LBB825:
 8708              	.LBB826:
  21:./lib/ros_lib/tf/tfMessage.h ****     {
 8709              		.loc 18 21 0
 8710 0c3c 484B     		ldr	r3, .L460+60
 8711 0c3e 84F8D069 		strb	r6, [r4, #2512]
 8712 0c42 C4F8CC39 		str	r3, [r4, #2508]
 8713 0c46 04F6D410 		addw	r0, r4, #2516
 8714 0c4a FFF7FEFF 		bl	_ZN13geometry_msgs16TransformStampedC1Ev
 8715              	.LVL1035:
 8716              	.LBE826:
 8717              	.LBE825:
 8718              	.LBB829:
 8719              	.LBB830:
  50:./lib/ros_lib/ros/publisher.h **** 
 8720              		.loc 23 50 0
 8721 0c4e 454B     		ldr	r3, .L460+64
 8722              	.LBE830:
 8723              	.LBE829:
 8724              	.LBB834:
 8725              	.LBB827:
  21:./lib/ros_lib/tf/tfMessage.h ****     {
 8726              		.loc 18 21 0
 8727 0c50 04F6CC19 		addw	r9, r4, #2508
 8728              	.LBE827:
 8729              	.LBE834:
 8730              	.LBB835:
 8731              	.LBB831:
  50:./lib/ros_lib/ros/publisher.h **** 
 8732              		.loc 23 50 0
 8733 0c54 C4F81C3A 		str	r3, [r4, #2588]
 8734              	.LBE831:
 8735              	.LBE835:
 8736              	.LBE824:
 8737              	.LBE823:
 8738              	.LBB842:
 8739              	.LBB843:
  27:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 8740              		.loc 14 27 0
 8741 0c58 434B     		ldr	r3, .L460+68
 8742              	.LBE843:
 8743              	.LBE842:
 8744              	.LBB895:
 8745              	.LBB839:
 8746              	.LBB836:
 8747              	.LBB828:
  21:./lib/ros_lib/tf/tfMessage.h ****     {
 8748              		.loc 18 21 0
 8749 0c5a C4F8186A 		str	r6, [r4, #2584]
 8750              	.LVL1036:
 8751              	.LBE828:
 8752              	.LBE836:
 8753              	.LBE839:
 8754              	.LBE895:
 8755              	.LBB896:
 8756              	.LBB892:
  27:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 8757              		.loc 14 27 0
 8758 0c5e C4F8883A 		str	r3, [r4, #2696]
 8759              	.LBB844:
 8760              	.LBB845:
  21:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 8761              		.loc 10 21 0
 8762 0c62 424B     		ldr	r3, .L460+72
 8763              	.LBE845:
 8764              	.LBE844:
 8765              	.LBE892:
 8766              	.LBE896:
 8767              	.LBB897:
 8768              	.LBB840:
 8769              	.LBB837:
 8770              	.LBB832:
  50:./lib/ros_lib/ros/publisher.h **** 
 8771              		.loc 23 50 0
 8772 0c64 C4F8209A 		str	r9, [r4, #2592]
 8773              	.LBE832:
 8774              	.LBE837:
 8775              	.LBE840:
 8776              	.LBE897:
 8777              	.LBB898:
 8778              	.LBB893:
 8779              	.LBB868:
 8780              	.LBB864:
  21:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 8781              		.loc 10 21 0
 8782 0c68 C4F8A43A 		str	r3, [r4, #2724]
 8783              	.LBB846:
 8784              	.LBB847:
  22:./lib/ros_lib/geometry_msgs/Pose.h ****     {
 8785              		.loc 9 22 0
 8786 0c6c 404B     		ldr	r3, .L460+76
 8787              	.LBE847:
 8788              	.LBE846:
 8789              	.LBE864:
 8790              	.LBE868:
 8791              	.LBE893:
 8792              	.LBE898:
 8793              	.LBB899:
 8794              	.LBB841:
 8795              	.LBB838:
 8796              	.LBB833:
  50:./lib/ros_lib/ros/publisher.h **** 
 8797              		.loc 23 50 0
 8798 0c6e C4F82C6A 		str	r6, [r4, #2604]
 8799              	.LVL1037:
 8800              	.LBE833:
 8801              	.LBE838:
 8802              	.LBE841:
 8803              	.LBE899:
 8804              	.LBB900:
 8805              	.LBB894:
 8806              	.LBB869:
 8807              	.LBB865:
 8808              	.LBB861:
 8809              	.LBB858:
  22:./lib/ros_lib/geometry_msgs/Pose.h ****     {
 8810              		.loc 9 22 0
 8811 0c72 C4F8A83A 		str	r3, [r4, #2728]
 8812              	.LBB848:
 8813              	.LBB849:
  22:./lib/ros_lib/geometry_msgs/Point.h ****     {
 8814              		.loc 7 22 0
 8815 0c76 3F4B     		ldr	r3, .L460+80
 8816              	.LBE849:
 8817              	.LBE848:
 8818              	.LBE858:
 8819              	.LBE861:
 8820              	.LBE865:
 8821              	.LBE869:
 8822              	.LBB870:
 8823              	.LBB871:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 8824              		.loc 6 23 0
 8825 0c78 C4F88C8A 		str	r8, [r4, #2700]
 8826              	.LBE871:
 8827              	.LBE870:
 8828              	.LBB875:
 8829              	.LBB866:
 8830              	.LBB862:
 8831              	.LBB859:
 8832              	.LBB852:
 8833              	.LBB850:
  22:./lib/ros_lib/geometry_msgs/Point.h ****     {
 8834              		.loc 7 22 0
 8835 0c7c C4F8AC3A 		str	r3, [r4, #2732]
 8836              	.LBE850:
 8837              	.LBE852:
 8838              	.LBB853:
 8839              	.LBB854:
  24:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 8840              		.loc 8 24 0
 8841 0c80 3D4B     		ldr	r3, .L460+84
 8842              	.LBE854:
 8843              	.LBE853:
 8844              	.LBE859:
 8845              	.LBE862:
 8846              	.LBE866:
 8847              	.LBE875:
 8848              	.LBB876:
 8849              	.LBB874:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 8850              		.loc 6 23 0
 8851 0c82 C4F8906A 		str	r6, [r4, #2704]
 8852              	.LVL1038:
 8853              	.LBB872:
 8854              	.LBB873:
  52:./lib/ros_lib/ros/time.h ****       Time(uint32_t _sec, uint32_t _nsec) : sec(_sec), nsec(_nsec)
 8855              		.loc 26 52 0
 8856 0c86 C4F8946A 		str	r6, [r4, #2708]
 8857 0c8a C4F8986A 		str	r6, [r4, #2712]
 8858              	.LVL1039:
 8859              	.LBE873:
 8860              	.LBE872:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 8861              		.loc 6 23 0
 8862 0c8e C4F89C7A 		str	r7, [r4, #2716]
 8863              	.LVL1040:
 8864              	.LBE874:
 8865              	.LBE876:
  27:./lib/ros_lib/nav_msgs/Odometry.h ****     {
 8866              		.loc 14 27 0
 8867 0c92 C4F8A07A 		str	r7, [r4, #2720]
 8868              	.LVL1041:
 8869              	.LBB877:
 8870              	.LBB867:
 8871              	.LBB863:
 8872              	.LBB860:
 8873              	.LBB856:
 8874              	.LBB851:
  22:./lib/ros_lib/geometry_msgs/Point.h ****     {
 8875              		.loc 7 22 0
 8876 0c96 C4F8B05A 		str	r5, [r4, #2736]	@ float
 8877 0c9a C4F8B45A 		str	r5, [r4, #2740]	@ float
 8878 0c9e C4F8B85A 		str	r5, [r4, #2744]	@ float
 8879              	.LVL1042:
 8880              	.LBE851:
 8881              	.LBE856:
 8882              	.LBB857:
 8883              	.LBB855:
  24:./lib/ros_lib/geometry_msgs/Quaternion.h ****     {
 8884              		.loc 8 24 0
 8885 0ca2 C4F8BC3A 		str	r3, [r4, #2748]
 8886 0ca6 C4F8C05A 		str	r5, [r4, #2752]	@ float
 8887 0caa C4F8C45A 		str	r5, [r4, #2756]	@ float
 8888 0cae C4F8C85A 		str	r5, [r4, #2760]	@ float
 8889 0cb2 C4F8CC5A 		str	r5, [r4, #2764]	@ float
 8890              	.LVL1043:
 8891              	.LBE855:
 8892              	.LBE857:
 8893              	.LBE860:
 8894              	.LBE863:
  21:./lib/ros_lib/geometry_msgs/PoseWithCovariance.h ****     {
 8895              		.loc 10 21 0
 8896 0cb6 04F52D61 		add	r1, r4, #2768
 8897 0cba 04F53664 		add	r4, r4, #2912
 8898              	.L452:
 8899 0cbe 41F8045B 		str	r5, [r1], #4	@ float
 8900 0cc2 A142     		cmp	r1, r4
 8901 0cc4 4FF00002 		mov	r2, #0
 8902 0cc8 174B     		ldr	r3, .L460+4
 8903 0cca F8D1     		bne	.L452
 8904              	.LVL1044:
 8905              	.LBE867:
 8906              	.LBE877:
 8907              	.LBB878:
 8908              	.LBB879:
  21:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 8909              		.loc 13 21 0
 8910 0ccc 2B49     		ldr	r1, .L460+88
 8911              	.LBB880:
 8912              	.LBB881:
 8913              	.LBB882:
 8914              	.LBB883:
  22:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
 8915              		.loc 11 22 0
 8916 0cce C3F86C2B 		str	r2, [r3, #2924]	@ float
 8917              	.LBE883:
 8918              	.LBE882:
 8919              	.LBE881:
 8920              	.LBE880:
  21:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 8921              		.loc 13 21 0
 8922 0cd2 C3F8601B 		str	r1, [r3, #2912]
 8923              	.LVL1045:
 8924              	.LBB891:
 8925              	.LBB890:
  21:./lib/ros_lib/geometry_msgs/Twist.h ****     {
 8926              		.loc 12 21 0
 8927 0cd6 2A49     		ldr	r1, .L460+92
 8928              	.LBB886:
 8929              	.LBB884:
  22:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
 8930              		.loc 11 22 0
 8931 0cd8 C3F8702B 		str	r2, [r3, #2928]	@ float
 8932              	.LBE884:
 8933              	.LBE886:
  21:./lib/ros_lib/geometry_msgs/Twist.h ****     {
 8934              		.loc 12 21 0
 8935 0cdc C3F8641B 		str	r1, [r3, #2916]
 8936              	.LVL1046:
 8937              	.LBB887:
 8938              	.LBB885:
  22:./lib/ros_lib/geometry_msgs/Vector3.h ****     {
 8939              		.loc 11 22 0
 8940 0ce0 2849     		ldr	r1, .L460+96
 8941 0ce2 C3F8742B 		str	r2, [r3, #2932]	@ float
 8942              	.LVL1047:
 8943 0ce6 C3F8681B 		str	r1, [r3, #2920]
 8944              	.LBE885:
 8945              	.LBE887:
 8946              	.LBB888:
 8947              	.LBB889:
 8948 0cea C3F8781B 		str	r1, [r3, #2936]
 8949 0cee C3F87C2B 		str	r2, [r3, #2940]	@ float
 8950 0cf2 C3F8802B 		str	r2, [r3, #2944]	@ float
 8951 0cf6 C3F8842B 		str	r2, [r3, #2948]	@ float
 8952              	.LVL1048:
 8953              	.LBE889:
 8954              	.LBE888:
 8955              	.LBE890:
 8956              	.LBE891:
  21:./lib/ros_lib/geometry_msgs/TwistWithCovariance.h ****     {
 8957              		.loc 13 21 0
 8958 0cfa 03F68831 		addw	r1, r3, #2952
 8959 0cfe 03F61843 		addw	r3, r3, #3096
 8960              	.L453:
 8961 0d02 41F8045B 		str	r5, [r1], #4	@ float
 8962 0d06 084A     		ldr	r2, .L460+4
 8963 0d08 9942     		cmp	r1, r3
 8964 0d0a 02F68820 		addw	r0, r2, #2696
 8965 0d0e F8D1     		bne	.L453
 8966              	.LVL1049:
 8967              	.LBE879:
 8968              	.LBE878:
 8969              	.LBE894:
 8970              	.LBE900:
 8971              	.LBB901:
 8972              	.LBB902:
  50:./lib/ros_lib/ros/publisher.h **** 
 8973              		.loc 23 50 0
 8974 0d10 1D4B     		ldr	r3, .L460+100
 8975 0d12 C2F8BC09 		str	r0, [r2, #2492]
 8976 0d16 C2F8B839 		str	r3, [r2, #2488]
 8977 0d1a 0023     		movs	r3, #0
 8978 0d1c C2F8C839 		str	r3, [r2, #2504]
 8979              	.LVL1050:
 8980 0d20 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 8981              	.L461:
 8982              		.align	2
 8983              	.L460:
 8984 0d24 08000000 		.word	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE+8
 8985 0d28 00000000 		.word	.LANCHOR1
 8986 0d2c 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 8987 0d30 00380140 		.word	1073821696
 8988 0d34 08090000 		.word	.LANCHOR1+2312
 8989 0d38 2C040000 		.word	.LANCHOR1+1068
 8990 0d3c 08000000 		.word	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE+8
 8991 0d40 9E050000 		.word	.LC56
 8992 0d44 08000000 		.word	_ZTVN12roberto_msgs10MotorStateE+8
 8993 0d48 08000000 		.word	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE+8
 8994 0d4c 00000000 		.word	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 8995 0d50 08000000 		.word	_ZTVN8std_msgs5UInt8E+8
 8996 0d54 C6030000 		.word	.LC35
 8997 0d58 00000000 		.word	_Z6led_cbRKN8std_msgs5UInt8E
 8998 0d5c B0050000 		.word	.LC57
 8999 0d60 08000000 		.word	_ZTVN2tf9tfMessageE+8
 9000 0d64 B4050000 		.word	.LC58
 9001 0d68 08000000 		.word	_ZTVN8nav_msgs8OdometryE+8
 9002 0d6c 08000000 		.word	_ZTVN13geometry_msgs18PoseWithCovarianceE+8
 9003 0d70 08000000 		.word	_ZTVN13geometry_msgs4PoseE+8
 9004 0d74 08000000 		.word	_ZTVN13geometry_msgs5PointE+8
 9005 0d78 08000000 		.word	_ZTVN13geometry_msgs10QuaternionE+8
 9006 0d7c 08000000 		.word	_ZTVN13geometry_msgs19TwistWithCovarianceE+8
 9007 0d80 08000000 		.word	_ZTVN13geometry_msgs5TwistE+8
 9008 0d84 08000000 		.word	_ZTVN13geometry_msgs7Vector3E+8
 9009 0d88 3A050000 		.word	.LC52
 9010 0d8c 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 9011              	.LBE902:
 9012              	.LBE901:
 9013              	.LBE760:
 9014              	.LBE759:
 9015              		.cfi_endproc
 9016              	.LFE1388:
 9017              		.cantunwind
 9018              		.fnend
 9020              		.section	.init_array,"aw",%init_array
 9021              		.align	2
 9022 0000 00000000 		.word	_GLOBAL__sub_I_USART_FIFO(target1)
 9023              		.weak	_ZTSN3ros3MsgE
 9024              		.section	.rodata._ZTSN3ros3MsgE,"aG",%progbits,_ZTSN3ros3MsgE,comdat
 9027              	_ZTSN3ros3MsgE:
 9028 0000 4E33726F 		.ascii	"N3ros3MsgE\000"
 9028      73334D73 
 9028      674500
 9029              		.weak	_ZTIN3ros3MsgE
 9030              		.section	.rodata._ZTIN3ros3MsgE,"aG",%progbits,_ZTIN3ros3MsgE,comdat
 9031              		.align	2
 9034              	_ZTIN3ros3MsgE:
 9035 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 9036 0004 00000000 		.word	_ZTSN3ros3MsgE
 9037              		.weak	_ZTSN8std_msgs4TimeE
 9038              		.section	.rodata._ZTSN8std_msgs4TimeE,"aG",%progbits,_ZTSN8std_msgs4TimeE,comdat
 9041              	_ZTSN8std_msgs4TimeE:
 9042 0000 4E387374 		.ascii	"N8std_msgs4TimeE\000"
 9042      645F6D73 
 9042      67733454 
 9042      696D6545 
 9042      00
 9043              		.weak	_ZTIN8std_msgs4TimeE
 9044              		.section	.rodata._ZTIN8std_msgs4TimeE,"aG",%progbits,_ZTIN8std_msgs4TimeE,comdat
 9045              		.align	2
 9048              	_ZTIN8std_msgs4TimeE:
 9049 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9050 0004 00000000 		.word	_ZTSN8std_msgs4TimeE
 9051 0008 00000000 		.word	_ZTIN3ros3MsgE
 9052              		.weak	_ZTSN14rosserial_msgs9TopicInfoE
 9053              		.section	.rodata._ZTSN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTSN14rosserial_msgs9TopicInfoE,
 9056              	_ZTSN14rosserial_msgs9TopicInfoE:
 9057 0000 4E313472 		.ascii	"N14rosserial_msgs9TopicInfoE\000"
 9057      6F737365 
 9057      7269616C 
 9057      5F6D7367 
 9057      7339546F 
 9058              		.weak	_ZTIN14rosserial_msgs9TopicInfoE
 9059              		.section	.rodata._ZTIN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTIN14rosserial_msgs9TopicInfoE,
 9060              		.align	2
 9063              	_ZTIN14rosserial_msgs9TopicInfoE:
 9064 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9065 0004 00000000 		.word	_ZTSN14rosserial_msgs9TopicInfoE
 9066 0008 00000000 		.word	_ZTIN3ros3MsgE
 9067              		.weak	_ZTSN14rosserial_msgs3LogE
 9068              		.section	.rodata._ZTSN14rosserial_msgs3LogE,"aG",%progbits,_ZTSN14rosserial_msgs3LogE,comdat
 9071              	_ZTSN14rosserial_msgs3LogE:
 9072 0000 4E313472 		.ascii	"N14rosserial_msgs3LogE\000"
 9072      6F737365 
 9072      7269616C 
 9072      5F6D7367 
 9072      73334C6F 
 9073              		.weak	_ZTIN14rosserial_msgs3LogE
 9074              		.section	.rodata._ZTIN14rosserial_msgs3LogE,"aG",%progbits,_ZTIN14rosserial_msgs3LogE,comdat
 9075              		.align	2
 9078              	_ZTIN14rosserial_msgs3LogE:
 9079 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9080 0004 00000000 		.word	_ZTSN14rosserial_msgs3LogE
 9081 0008 00000000 		.word	_ZTIN3ros3MsgE
 9082              		.weak	_ZTSN14rosserial_msgs19RequestParamRequestE
 9083              		.section	.rodata._ZTSN14rosserial_msgs19RequestParamRequestE,"aG",%progbits,_ZTSN14rosserial_msgs1
 9086              	_ZTSN14rosserial_msgs19RequestParamRequestE:
 9087 0000 4E313472 		.ascii	"N14rosserial_msgs19RequestParamRequestE\000"
 9087      6F737365 
 9087      7269616C 
 9087      5F6D7367 
 9087      73313952 
 9088              		.weak	_ZTIN14rosserial_msgs19RequestParamRequestE
 9089              		.section	.rodata._ZTIN14rosserial_msgs19RequestParamRequestE,"aG",%progbits,_ZTIN14rosserial_msgs1
 9090              		.align	2
 9093              	_ZTIN14rosserial_msgs19RequestParamRequestE:
 9094 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9095 0004 00000000 		.word	_ZTSN14rosserial_msgs19RequestParamRequestE
 9096 0008 00000000 		.word	_ZTIN3ros3MsgE
 9097              		.weak	_ZTSN14rosserial_msgs20RequestParamResponseE
 9098              		.section	.rodata._ZTSN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTSN14rosserial_msgs
 9101              	_ZTSN14rosserial_msgs20RequestParamResponseE:
 9102 0000 4E313472 		.ascii	"N14rosserial_msgs20RequestParamResponseE\000"
 9102      6F737365 
 9102      7269616C 
 9102      5F6D7367 
 9102      73323052 
 9103              		.weak	_ZTIN14rosserial_msgs20RequestParamResponseE
 9104              		.section	.rodata._ZTIN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTIN14rosserial_msgs
 9105              		.align	2
 9108              	_ZTIN14rosserial_msgs20RequestParamResponseE:
 9109 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9110 0004 00000000 		.word	_ZTSN14rosserial_msgs20RequestParamResponseE
 9111 0008 00000000 		.word	_ZTIN3ros3MsgE
 9112              		.weak	_ZTSN3ros15NodeHandleBase_E
 9113              		.section	.rodata._ZTSN3ros15NodeHandleBase_E,"aG",%progbits,_ZTSN3ros15NodeHandleBase_E,comdat
 9116              	_ZTSN3ros15NodeHandleBase_E:
 9117 0000 4E33726F 		.ascii	"N3ros15NodeHandleBase_E\000"
 9117      7331354E 
 9117      6F646548 
 9117      616E646C 
 9117      65426173 
 9118              		.weak	_ZTIN3ros15NodeHandleBase_E
 9119              		.section	.rodata._ZTIN3ros15NodeHandleBase_E,"aG",%progbits,_ZTIN3ros15NodeHandleBase_E,comdat
 9120              		.align	2
 9123              	_ZTIN3ros15NodeHandleBase_E:
 9124 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 9125 0004 00000000 		.word	_ZTSN3ros15NodeHandleBase_E
 9126              		.weak	_ZTSN3ros11Subscriber_E
 9127              		.section	.rodata._ZTSN3ros11Subscriber_E,"aG",%progbits,_ZTSN3ros11Subscriber_E,comdat
 9130              	_ZTSN3ros11Subscriber_E:
 9131 0000 4E33726F 		.ascii	"N3ros11Subscriber_E\000"
 9131      73313153 
 9131      75627363 
 9131      72696265 
 9131      725F4500 
 9132              		.weak	_ZTIN3ros11Subscriber_E
 9133              		.section	.rodata._ZTIN3ros11Subscriber_E,"aG",%progbits,_ZTIN3ros11Subscriber_E,comdat
 9134              		.align	2
 9137              	_ZTIN3ros11Subscriber_E:
 9138 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 9139 0004 00000000 		.word	_ZTSN3ros11Subscriber_E
 9140              		.weak	_ZTSN8std_msgs5UInt8E
 9141              		.section	.rodata._ZTSN8std_msgs5UInt8E,"aG",%progbits,_ZTSN8std_msgs5UInt8E,comdat
 9144              	_ZTSN8std_msgs5UInt8E:
 9145 0000 4E387374 		.ascii	"N8std_msgs5UInt8E\000"
 9145      645F6D73 
 9145      67733555 
 9145      496E7438 
 9145      4500
 9146              		.weak	_ZTIN8std_msgs5UInt8E
 9147              		.section	.rodata._ZTIN8std_msgs5UInt8E,"aG",%progbits,_ZTIN8std_msgs5UInt8E,comdat
 9148              		.align	2
 9151              	_ZTIN8std_msgs5UInt8E:
 9152 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9153 0004 00000000 		.word	_ZTSN8std_msgs5UInt8E
 9154 0008 00000000 		.word	_ZTIN3ros3MsgE
 9155              		.weak	_ZTSN8std_msgs6HeaderE
 9156              		.section	.rodata._ZTSN8std_msgs6HeaderE,"aG",%progbits,_ZTSN8std_msgs6HeaderE,comdat
 9159              	_ZTSN8std_msgs6HeaderE:
 9160 0000 4E387374 		.ascii	"N8std_msgs6HeaderE\000"
 9160      645F6D73 
 9160      67733648 
 9160      65616465 
 9160      724500
 9161              		.weak	_ZTIN8std_msgs6HeaderE
 9162              		.section	.rodata._ZTIN8std_msgs6HeaderE,"aG",%progbits,_ZTIN8std_msgs6HeaderE,comdat
 9163              		.align	2
 9166              	_ZTIN8std_msgs6HeaderE:
 9167 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9168 0004 00000000 		.word	_ZTSN8std_msgs6HeaderE
 9169 0008 00000000 		.word	_ZTIN3ros3MsgE
 9170              		.weak	_ZTSN13geometry_msgs5PointE
 9171              		.section	.rodata._ZTSN13geometry_msgs5PointE,"aG",%progbits,_ZTSN13geometry_msgs5PointE,comdat
 9174              	_ZTSN13geometry_msgs5PointE:
 9175 0000 4E313367 		.ascii	"N13geometry_msgs5PointE\000"
 9175      656F6D65 
 9175      7472795F 
 9175      6D736773 
 9175      35506F69 
 9176              		.weak	_ZTIN13geometry_msgs5PointE
 9177              		.section	.rodata._ZTIN13geometry_msgs5PointE,"aG",%progbits,_ZTIN13geometry_msgs5PointE,comdat
 9178              		.align	2
 9181              	_ZTIN13geometry_msgs5PointE:
 9182 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9183 0004 00000000 		.word	_ZTSN13geometry_msgs5PointE
 9184 0008 00000000 		.word	_ZTIN3ros3MsgE
 9185              		.weak	_ZTSN13geometry_msgs10QuaternionE
 9186              		.section	.rodata._ZTSN13geometry_msgs10QuaternionE,"aG",%progbits,_ZTSN13geometry_msgs10Quaternion
 9189              	_ZTSN13geometry_msgs10QuaternionE:
 9190 0000 4E313367 		.ascii	"N13geometry_msgs10QuaternionE\000"
 9190      656F6D65 
 9190      7472795F 
 9190      6D736773 
 9190      31305175 
 9191              		.weak	_ZTIN13geometry_msgs10QuaternionE
 9192              		.section	.rodata._ZTIN13geometry_msgs10QuaternionE,"aG",%progbits,_ZTIN13geometry_msgs10Quaternion
 9193              		.align	2
 9196              	_ZTIN13geometry_msgs10QuaternionE:
 9197 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9198 0004 00000000 		.word	_ZTSN13geometry_msgs10QuaternionE
 9199 0008 00000000 		.word	_ZTIN3ros3MsgE
 9200              		.weak	_ZTSN13geometry_msgs4PoseE
 9201              		.section	.rodata._ZTSN13geometry_msgs4PoseE,"aG",%progbits,_ZTSN13geometry_msgs4PoseE,comdat
 9204              	_ZTSN13geometry_msgs4PoseE:
 9205 0000 4E313367 		.ascii	"N13geometry_msgs4PoseE\000"
 9205      656F6D65 
 9205      7472795F 
 9205      6D736773 
 9205      34506F73 
 9206              		.weak	_ZTIN13geometry_msgs4PoseE
 9207              		.section	.rodata._ZTIN13geometry_msgs4PoseE,"aG",%progbits,_ZTIN13geometry_msgs4PoseE,comdat
 9208              		.align	2
 9211              	_ZTIN13geometry_msgs4PoseE:
 9212 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9213 0004 00000000 		.word	_ZTSN13geometry_msgs4PoseE
 9214 0008 00000000 		.word	_ZTIN3ros3MsgE
 9215              		.weak	_ZTSN13geometry_msgs18PoseWithCovarianceE
 9216              		.section	.rodata._ZTSN13geometry_msgs18PoseWithCovarianceE,"aG",%progbits,_ZTSN13geometry_msgs18Po
 9219              	_ZTSN13geometry_msgs18PoseWithCovarianceE:
 9220 0000 4E313367 		.ascii	"N13geometry_msgs18PoseWithCovarianceE\000"
 9220      656F6D65 
 9220      7472795F 
 9220      6D736773 
 9220      3138506F 
 9221              		.weak	_ZTIN13geometry_msgs18PoseWithCovarianceE
 9222              		.section	.rodata._ZTIN13geometry_msgs18PoseWithCovarianceE,"aG",%progbits,_ZTIN13geometry_msgs18Po
 9223              		.align	2
 9226              	_ZTIN13geometry_msgs18PoseWithCovarianceE:
 9227 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9228 0004 00000000 		.word	_ZTSN13geometry_msgs18PoseWithCovarianceE
 9229 0008 00000000 		.word	_ZTIN3ros3MsgE
 9230              		.weak	_ZTSN13geometry_msgs7Vector3E
 9231              		.section	.rodata._ZTSN13geometry_msgs7Vector3E,"aG",%progbits,_ZTSN13geometry_msgs7Vector3E,comdat
 9234              	_ZTSN13geometry_msgs7Vector3E:
 9235 0000 4E313367 		.ascii	"N13geometry_msgs7Vector3E\000"
 9235      656F6D65 
 9235      7472795F 
 9235      6D736773 
 9235      37566563 
 9236              		.weak	_ZTIN13geometry_msgs7Vector3E
 9237              		.section	.rodata._ZTIN13geometry_msgs7Vector3E,"aG",%progbits,_ZTIN13geometry_msgs7Vector3E,comdat
 9238              		.align	2
 9241              	_ZTIN13geometry_msgs7Vector3E:
 9242 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9243 0004 00000000 		.word	_ZTSN13geometry_msgs7Vector3E
 9244 0008 00000000 		.word	_ZTIN3ros3MsgE
 9245              		.weak	_ZTSN13geometry_msgs5TwistE
 9246              		.section	.rodata._ZTSN13geometry_msgs5TwistE,"aG",%progbits,_ZTSN13geometry_msgs5TwistE,comdat
 9249              	_ZTSN13geometry_msgs5TwistE:
 9250 0000 4E313367 		.ascii	"N13geometry_msgs5TwistE\000"
 9250      656F6D65 
 9250      7472795F 
 9250      6D736773 
 9250      35547769 
 9251              		.weak	_ZTIN13geometry_msgs5TwistE
 9252              		.section	.rodata._ZTIN13geometry_msgs5TwistE,"aG",%progbits,_ZTIN13geometry_msgs5TwistE,comdat
 9253              		.align	2
 9256              	_ZTIN13geometry_msgs5TwistE:
 9257 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9258 0004 00000000 		.word	_ZTSN13geometry_msgs5TwistE
 9259 0008 00000000 		.word	_ZTIN3ros3MsgE
 9260              		.weak	_ZTSN13geometry_msgs19TwistWithCovarianceE
 9261              		.section	.rodata._ZTSN13geometry_msgs19TwistWithCovarianceE,"aG",%progbits,_ZTSN13geometry_msgs19T
 9264              	_ZTSN13geometry_msgs19TwistWithCovarianceE:
 9265 0000 4E313367 		.ascii	"N13geometry_msgs19TwistWithCovarianceE\000"
 9265      656F6D65 
 9265      7472795F 
 9265      6D736773 
 9265      31395477 
 9266              		.weak	_ZTIN13geometry_msgs19TwistWithCovarianceE
 9267              		.section	.rodata._ZTIN13geometry_msgs19TwistWithCovarianceE,"aG",%progbits,_ZTIN13geometry_msgs19T
 9268              		.align	2
 9271              	_ZTIN13geometry_msgs19TwistWithCovarianceE:
 9272 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9273 0004 00000000 		.word	_ZTSN13geometry_msgs19TwistWithCovarianceE
 9274 0008 00000000 		.word	_ZTIN3ros3MsgE
 9275              		.weak	_ZTSN8nav_msgs8OdometryE
 9276              		.section	.rodata._ZTSN8nav_msgs8OdometryE,"aG",%progbits,_ZTSN8nav_msgs8OdometryE,comdat
 9279              	_ZTSN8nav_msgs8OdometryE:
 9280 0000 4E386E61 		.ascii	"N8nav_msgs8OdometryE\000"
 9280      765F6D73 
 9280      6773384F 
 9280      646F6D65 
 9280      74727945 
 9281              		.weak	_ZTIN8nav_msgs8OdometryE
 9282              		.section	.rodata._ZTIN8nav_msgs8OdometryE,"aG",%progbits,_ZTIN8nav_msgs8OdometryE,comdat
 9283              		.align	2
 9286              	_ZTIN8nav_msgs8OdometryE:
 9287 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9288 0004 00000000 		.word	_ZTSN8nav_msgs8OdometryE
 9289 0008 00000000 		.word	_ZTIN3ros3MsgE
 9290              		.weak	_ZTSN12roberto_msgs10MotorStateE
 9291              		.section	.rodata._ZTSN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTSN12roberto_msgs10MotorStateE,
 9294              	_ZTSN12roberto_msgs10MotorStateE:
 9295 0000 4E313272 		.ascii	"N12roberto_msgs10MotorStateE\000"
 9295      6F626572 
 9295      746F5F6D 
 9295      73677331 
 9295      304D6F74 
 9296              		.weak	_ZTIN12roberto_msgs10MotorStateE
 9297              		.section	.rodata._ZTIN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTIN12roberto_msgs10MotorStateE,
 9298              		.align	2
 9301              	_ZTIN12roberto_msgs10MotorStateE:
 9302 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9303 0004 00000000 		.word	_ZTSN12roberto_msgs10MotorStateE
 9304 0008 00000000 		.word	_ZTIN3ros3MsgE
 9305              		.weak	_ZTSN13geometry_msgs9TransformE
 9306              		.section	.rodata._ZTSN13geometry_msgs9TransformE,"aG",%progbits,_ZTSN13geometry_msgs9TransformE,co
 9309              	_ZTSN13geometry_msgs9TransformE:
 9310 0000 4E313367 		.ascii	"N13geometry_msgs9TransformE\000"
 9310      656F6D65 
 9310      7472795F 
 9310      6D736773 
 9310      39547261 
 9311              		.weak	_ZTIN13geometry_msgs9TransformE
 9312              		.section	.rodata._ZTIN13geometry_msgs9TransformE,"aG",%progbits,_ZTIN13geometry_msgs9TransformE,co
 9313              		.align	2
 9316              	_ZTIN13geometry_msgs9TransformE:
 9317 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9318 0004 00000000 		.word	_ZTSN13geometry_msgs9TransformE
 9319 0008 00000000 		.word	_ZTIN3ros3MsgE
 9320              		.weak	_ZTSN13geometry_msgs16TransformStampedE
 9321              		.section	.rodata._ZTSN13geometry_msgs16TransformStampedE,"aG",%progbits,_ZTSN13geometry_msgs16Tran
 9324              	_ZTSN13geometry_msgs16TransformStampedE:
 9325 0000 4E313367 		.ascii	"N13geometry_msgs16TransformStampedE\000"
 9325      656F6D65 
 9325      7472795F 
 9325      6D736773 
 9325      31365472 
 9326              		.weak	_ZTIN13geometry_msgs16TransformStampedE
 9327              		.section	.rodata._ZTIN13geometry_msgs16TransformStampedE,"aG",%progbits,_ZTIN13geometry_msgs16Tran
 9328              		.align	2
 9331              	_ZTIN13geometry_msgs16TransformStampedE:
 9332 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9333 0004 00000000 		.word	_ZTSN13geometry_msgs16TransformStampedE
 9334 0008 00000000 		.word	_ZTIN3ros3MsgE
 9335              		.weak	_ZTSN2tf9tfMessageE
 9336              		.section	.rodata._ZTSN2tf9tfMessageE,"aG",%progbits,_ZTSN2tf9tfMessageE,comdat
 9339              	_ZTSN2tf9tfMessageE:
 9340 0000 4E327466 		.ascii	"N2tf9tfMessageE\000"
 9340      3974664D 
 9340      65737361 
 9340      67654500 
 9341              		.weak	_ZTIN2tf9tfMessageE
 9342              		.section	.rodata._ZTIN2tf9tfMessageE,"aG",%progbits,_ZTIN2tf9tfMessageE,comdat
 9343              		.align	2
 9346              	_ZTIN2tf9tfMessageE:
 9347 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9348 0004 00000000 		.word	_ZTSN2tf9tfMessageE
 9349 0008 00000000 		.word	_ZTIN3ros3MsgE
 9350              		.weak	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 9351              		.section	.rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 9354              	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 9355 0000 4E33726F 		.ascii	"N3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512"
 9355      7331314E 
 9355      6F646548 
 9355      616E646C 
 9355      655F4931 
 9356 0033 454C6935 		.ascii	"ELi512EEE\000"
 9356      31324545 
 9356      4500
 9357              		.weak	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 9358              		.section	.rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 9359              		.align	2
 9362              	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 9363 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9364 0004 00000000 		.word	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 9365 0008 00000000 		.word	_ZTIN3ros15NodeHandleBase_E
 9366              		.weak	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 9367              		.section	.rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTSN3ros10Su
 9370              	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 9371 0000 4E33726F 		.ascii	"N3ros10SubscriberIN12roberto_msgs10MotorStateEEE\000"
 9371      73313053 
 9371      75627363 
 9371      72696265 
 9371      72494E31 
 9372              		.weak	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 9373              		.section	.rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTIN3ros10Su
 9374              		.align	2
 9377              	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 9378 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9379 0004 00000000 		.word	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 9380 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 9381              		.weak	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 9382              		.section	.rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTSN3ros10SubscriberIN8
 9385              	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:
 9386 0000 4E33726F 		.ascii	"N3ros10SubscriberIN8std_msgs5UInt8EEE\000"
 9386      73313053 
 9386      75627363 
 9386      72696265 
 9386      72494E38 
 9387              		.weak	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 9388              		.section	.rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTIN3ros10SubscriberIN8
 9389              		.align	2
 9392              	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:
 9393 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 9394 0004 00000000 		.word	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 9395 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 9396              		.weak	_ZTVN8std_msgs4TimeE
 9397              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 9398              		.align	2
 9401              	_ZTVN8std_msgs4TimeE:
 9402 0000 00000000 		.word	0
 9403 0004 00000000 		.word	_ZTIN8std_msgs4TimeE
 9404 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 9405 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 9406 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 9407 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 9408              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 9409              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 9410              		.align	2
 9413              	_ZTVN14rosserial_msgs9TopicInfoE:
 9414 0000 00000000 		.word	0
 9415 0004 00000000 		.word	_ZTIN14rosserial_msgs9TopicInfoE
 9416 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 9417 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 9418 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 9419 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 9420              		.weak	_ZTVN14rosserial_msgs3LogE
 9421              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 9422              		.align	2
 9425              	_ZTVN14rosserial_msgs3LogE:
 9426 0000 00000000 		.word	0
 9427 0004 00000000 		.word	_ZTIN14rosserial_msgs3LogE
 9428 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 9429 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 9430 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 9431 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 9432              		.weak	_ZTVN14rosserial_msgs19RequestParamRequestE
 9433              		.section	.rodata._ZTVN14rosserial_msgs19RequestParamRequestE,"aG",%progbits,_ZTVN14rosserial_msgs1
 9434              		.align	2
 9437              	_ZTVN14rosserial_msgs19RequestParamRequestE:
 9438 0000 00000000 		.word	0
 9439 0004 00000000 		.word	_ZTIN14rosserial_msgs19RequestParamRequestE
 9440 0008 00000000 		.word	_ZNK14rosserial_msgs19RequestParamRequest9serializeEPh
 9441 000c 00000000 		.word	_ZN14rosserial_msgs19RequestParamRequest11deserializeEPh
 9442 0010 00000000 		.word	_ZN14rosserial_msgs19RequestParamRequest7getTypeEv
 9443 0014 00000000 		.word	_ZN14rosserial_msgs19RequestParamRequest6getMD5Ev
 9444              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 9445              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 9446              		.align	2
 9449              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 9450 0000 00000000 		.word	0
 9451 0004 00000000 		.word	_ZTIN14rosserial_msgs20RequestParamResponseE
 9452 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 9453 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 9454 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 9455 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 9456              		.weak	_ZTVN8std_msgs5UInt8E
 9457              		.section	.rodata._ZTVN8std_msgs5UInt8E,"aG",%progbits,_ZTVN8std_msgs5UInt8E,comdat
 9458              		.align	2
 9461              	_ZTVN8std_msgs5UInt8E:
 9462 0000 00000000 		.word	0
 9463 0004 00000000 		.word	_ZTIN8std_msgs5UInt8E
 9464 0008 00000000 		.word	_ZNK8std_msgs5UInt89serializeEPh
 9465 000c 00000000 		.word	_ZN8std_msgs5UInt811deserializeEPh
 9466 0010 00000000 		.word	_ZN8std_msgs5UInt87getTypeEv
 9467 0014 00000000 		.word	_ZN8std_msgs5UInt86getMD5Ev
 9468              		.weak	_ZTVN8std_msgs6HeaderE
 9469              		.section	.rodata._ZTVN8std_msgs6HeaderE,"aG",%progbits,_ZTVN8std_msgs6HeaderE,comdat
 9470              		.align	2
 9473              	_ZTVN8std_msgs6HeaderE:
 9474 0000 00000000 		.word	0
 9475 0004 00000000 		.word	_ZTIN8std_msgs6HeaderE
 9476 0008 00000000 		.word	_ZNK8std_msgs6Header9serializeEPh
 9477 000c 00000000 		.word	_ZN8std_msgs6Header11deserializeEPh
 9478 0010 00000000 		.word	_ZN8std_msgs6Header7getTypeEv
 9479 0014 00000000 		.word	_ZN8std_msgs6Header6getMD5Ev
 9480              		.weak	_ZTVN13geometry_msgs5PointE
 9481              		.section	.rodata._ZTVN13geometry_msgs5PointE,"aG",%progbits,_ZTVN13geometry_msgs5PointE,comdat
 9482              		.align	2
 9485              	_ZTVN13geometry_msgs5PointE:
 9486 0000 00000000 		.word	0
 9487 0004 00000000 		.word	_ZTIN13geometry_msgs5PointE
 9488 0008 00000000 		.word	_ZNK13geometry_msgs5Point9serializeEPh
 9489 000c 00000000 		.word	_ZN13geometry_msgs5Point11deserializeEPh
 9490 0010 00000000 		.word	_ZN13geometry_msgs5Point7getTypeEv
 9491 0014 00000000 		.word	_ZN13geometry_msgs5Point6getMD5Ev
 9492              		.weak	_ZTVN13geometry_msgs10QuaternionE
 9493              		.section	.rodata._ZTVN13geometry_msgs10QuaternionE,"aG",%progbits,_ZTVN13geometry_msgs10Quaternion
 9494              		.align	2
 9497              	_ZTVN13geometry_msgs10QuaternionE:
 9498 0000 00000000 		.word	0
 9499 0004 00000000 		.word	_ZTIN13geometry_msgs10QuaternionE
 9500 0008 00000000 		.word	_ZNK13geometry_msgs10Quaternion9serializeEPh
 9501 000c 00000000 		.word	_ZN13geometry_msgs10Quaternion11deserializeEPh
 9502 0010 00000000 		.word	_ZN13geometry_msgs10Quaternion7getTypeEv
 9503 0014 00000000 		.word	_ZN13geometry_msgs10Quaternion6getMD5Ev
 9504              		.weak	_ZTVN13geometry_msgs4PoseE
 9505              		.section	.rodata._ZTVN13geometry_msgs4PoseE,"aG",%progbits,_ZTVN13geometry_msgs4PoseE,comdat
 9506              		.align	2
 9509              	_ZTVN13geometry_msgs4PoseE:
 9510 0000 00000000 		.word	0
 9511 0004 00000000 		.word	_ZTIN13geometry_msgs4PoseE
 9512 0008 00000000 		.word	_ZNK13geometry_msgs4Pose9serializeEPh
 9513 000c 00000000 		.word	_ZN13geometry_msgs4Pose11deserializeEPh
 9514 0010 00000000 		.word	_ZN13geometry_msgs4Pose7getTypeEv
 9515 0014 00000000 		.word	_ZN13geometry_msgs4Pose6getMD5Ev
 9516              		.weak	_ZTVN13geometry_msgs18PoseWithCovarianceE
 9517              		.section	.rodata._ZTVN13geometry_msgs18PoseWithCovarianceE,"aG",%progbits,_ZTVN13geometry_msgs18Po
 9518              		.align	2
 9521              	_ZTVN13geometry_msgs18PoseWithCovarianceE:
 9522 0000 00000000 		.word	0
 9523 0004 00000000 		.word	_ZTIN13geometry_msgs18PoseWithCovarianceE
 9524 0008 00000000 		.word	_ZNK13geometry_msgs18PoseWithCovariance9serializeEPh
 9525 000c 00000000 		.word	_ZN13geometry_msgs18PoseWithCovariance11deserializeEPh
 9526 0010 00000000 		.word	_ZN13geometry_msgs18PoseWithCovariance7getTypeEv
 9527 0014 00000000 		.word	_ZN13geometry_msgs18PoseWithCovariance6getMD5Ev
 9528              		.weak	_ZTVN13geometry_msgs7Vector3E
 9529              		.section	.rodata._ZTVN13geometry_msgs7Vector3E,"aG",%progbits,_ZTVN13geometry_msgs7Vector3E,comdat
 9530              		.align	2
 9533              	_ZTVN13geometry_msgs7Vector3E:
 9534 0000 00000000 		.word	0
 9535 0004 00000000 		.word	_ZTIN13geometry_msgs7Vector3E
 9536 0008 00000000 		.word	_ZNK13geometry_msgs7Vector39serializeEPh
 9537 000c 00000000 		.word	_ZN13geometry_msgs7Vector311deserializeEPh
 9538 0010 00000000 		.word	_ZN13geometry_msgs7Vector37getTypeEv
 9539 0014 00000000 		.word	_ZN13geometry_msgs7Vector36getMD5Ev
 9540              		.weak	_ZTVN13geometry_msgs5TwistE
 9541              		.section	.rodata._ZTVN13geometry_msgs5TwistE,"aG",%progbits,_ZTVN13geometry_msgs5TwistE,comdat
 9542              		.align	2
 9545              	_ZTVN13geometry_msgs5TwistE:
 9546 0000 00000000 		.word	0
 9547 0004 00000000 		.word	_ZTIN13geometry_msgs5TwistE
 9548 0008 00000000 		.word	_ZNK13geometry_msgs5Twist9serializeEPh
 9549 000c 00000000 		.word	_ZN13geometry_msgs5Twist11deserializeEPh
 9550 0010 00000000 		.word	_ZN13geometry_msgs5Twist7getTypeEv
 9551 0014 00000000 		.word	_ZN13geometry_msgs5Twist6getMD5Ev
 9552              		.weak	_ZTVN13geometry_msgs19TwistWithCovarianceE
 9553              		.section	.rodata._ZTVN13geometry_msgs19TwistWithCovarianceE,"aG",%progbits,_ZTVN13geometry_msgs19T
 9554              		.align	2
 9557              	_ZTVN13geometry_msgs19TwistWithCovarianceE:
 9558 0000 00000000 		.word	0
 9559 0004 00000000 		.word	_ZTIN13geometry_msgs19TwistWithCovarianceE
 9560 0008 00000000 		.word	_ZNK13geometry_msgs19TwistWithCovariance9serializeEPh
 9561 000c 00000000 		.word	_ZN13geometry_msgs19TwistWithCovariance11deserializeEPh
 9562 0010 00000000 		.word	_ZN13geometry_msgs19TwistWithCovariance7getTypeEv
 9563 0014 00000000 		.word	_ZN13geometry_msgs19TwistWithCovariance6getMD5Ev
 9564              		.weak	_ZTVN8nav_msgs8OdometryE
 9565              		.section	.rodata._ZTVN8nav_msgs8OdometryE,"aG",%progbits,_ZTVN8nav_msgs8OdometryE,comdat
 9566              		.align	2
 9569              	_ZTVN8nav_msgs8OdometryE:
 9570 0000 00000000 		.word	0
 9571 0004 00000000 		.word	_ZTIN8nav_msgs8OdometryE
 9572 0008 00000000 		.word	_ZNK8nav_msgs8Odometry9serializeEPh
 9573 000c 00000000 		.word	_ZN8nav_msgs8Odometry11deserializeEPh
 9574 0010 00000000 		.word	_ZN8nav_msgs8Odometry7getTypeEv
 9575 0014 00000000 		.word	_ZN8nav_msgs8Odometry6getMD5Ev
 9576              		.weak	_ZTVN12roberto_msgs10MotorStateE
 9577              		.section	.rodata._ZTVN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTVN12roberto_msgs10MotorStateE,
 9578              		.align	2
 9581              	_ZTVN12roberto_msgs10MotorStateE:
 9582 0000 00000000 		.word	0
 9583 0004 00000000 		.word	_ZTIN12roberto_msgs10MotorStateE
 9584 0008 00000000 		.word	_ZNK12roberto_msgs10MotorState9serializeEPh
 9585 000c 00000000 		.word	_ZN12roberto_msgs10MotorState11deserializeEPh
 9586 0010 00000000 		.word	_ZN12roberto_msgs10MotorState7getTypeEv
 9587 0014 00000000 		.word	_ZN12roberto_msgs10MotorState6getMD5Ev
 9588              		.weak	_ZTVN13geometry_msgs9TransformE
 9589              		.section	.rodata._ZTVN13geometry_msgs9TransformE,"aG",%progbits,_ZTVN13geometry_msgs9TransformE,co
 9590              		.align	2
 9593              	_ZTVN13geometry_msgs9TransformE:
 9594 0000 00000000 		.word	0
 9595 0004 00000000 		.word	_ZTIN13geometry_msgs9TransformE
 9596 0008 00000000 		.word	_ZNK13geometry_msgs9Transform9serializeEPh
 9597 000c 00000000 		.word	_ZN13geometry_msgs9Transform11deserializeEPh
 9598 0010 00000000 		.word	_ZN13geometry_msgs9Transform7getTypeEv
 9599 0014 00000000 		.word	_ZN13geometry_msgs9Transform6getMD5Ev
 9600              		.weak	_ZTVN13geometry_msgs16TransformStampedE
 9601              		.section	.rodata._ZTVN13geometry_msgs16TransformStampedE,"aG",%progbits,_ZTVN13geometry_msgs16Tran
 9602              		.align	2
 9605              	_ZTVN13geometry_msgs16TransformStampedE:
 9606 0000 00000000 		.word	0
 9607 0004 00000000 		.word	_ZTIN13geometry_msgs16TransformStampedE
 9608 0008 00000000 		.word	_ZNK13geometry_msgs16TransformStamped9serializeEPh
 9609 000c 00000000 		.word	_ZN13geometry_msgs16TransformStamped11deserializeEPh
 9610 0010 00000000 		.word	_ZN13geometry_msgs16TransformStamped7getTypeEv
 9611 0014 00000000 		.word	_ZN13geometry_msgs16TransformStamped6getMD5Ev
 9612              		.weak	_ZTVN2tf9tfMessageE
 9613              		.section	.rodata._ZTVN2tf9tfMessageE,"aG",%progbits,_ZTVN2tf9tfMessageE,comdat
 9614              		.align	2
 9617              	_ZTVN2tf9tfMessageE:
 9618 0000 00000000 		.word	0
 9619 0004 00000000 		.word	_ZTIN2tf9tfMessageE
 9620 0008 00000000 		.word	_ZNK2tf9tfMessage9serializeEPh
 9621 000c 00000000 		.word	_ZN2tf9tfMessage11deserializeEPh
 9622 0010 00000000 		.word	_ZN2tf9tfMessage7getTypeEv
 9623 0014 00000000 		.word	_ZN2tf9tfMessage6getMD5Ev
 9624              		.weak	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 9625              		.section	.rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 9626              		.align	2
 9629              	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 9630 0000 00000000 		.word	0
 9631 0004 00000000 		.word	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 9632 0008 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 9633 000c 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 9634 0010 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
 9635              		.weak	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 9636              		.section	.rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTVN3ros10Su
 9637              		.align	2
 9640              	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 9641 0000 00000000 		.word	0
 9642 0004 00000000 		.word	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 9643 0008 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 9644 000c 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 9645 0010 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 9646 0014 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 9647              		.weak	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
 9648              		.section	.rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTVN3ros10SubscriberIN8
 9649              		.align	2
 9652              	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:
 9653 0000 00000000 		.word	0
 9654 0004 00000000 		.word	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 9655 0008 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 9656 000c 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 9657 0010 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 9658 0014 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 9659              		.global	odom_pub
 9660              		.global	odom
 9661              		.global	odom_broadcaster
 9662              		.global	odom_trans
 9663              		.global	led_sub
 9664              		.global	motor_sub
 9665              		.global	waitForServos
 9666              		.global	shuttingDown
 9667              		.global	nh
 9668              		.global	currentMode
 9669              		.global	motorCmd
 9670              		.global	L
 9671              		.global	d
 9672              		.global	rear_left
 9673              		.global	rear_right
 9674              		.global	front_left
 9675              		.global	front_right
 9676              		.global	servo_right
 9677              		.global	servo_left
 9678              		.global	GenerateStartStatus
 9679              		.global	NumberOfByteToReceive
 9680              		.global	RxBuffer
 9681              		.global	slaveAddress
 9682              		.global	Rx_Idx
 9683              		.global	USART_CNTOUT
 9684              		.global	USART_CNTIN
 9685              		.global	USART_FIFO
 9686              		.section	.rodata
 9687              		.set	.LANCHOR0,. + 0
 9690              	_ZN14rosserial_msgsL12REQUESTPARAME:
 9691 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 9691      65726961 
 9691      6C5F6D73 
 9691      67732F52 
 9691      65717565 
 9692              		.section	.rodata.str1.1,"aMS",%progbits,1
 9693              	.LC0:
 9694 0000 7374645F 		.ascii	"std_msgs/Time\000"
 9694      6D736773 
 9694      2F54696D 
 9694      6500
 9695              	.LC1:
 9696 000e 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 9696      36366337 
 9696      34633535 
 9696      32633331 
 9696      31666263 
 9697              	.LC2:
 9698 002f 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 9698      65726961 
 9698      6C5F6D73 
 9698      67732F54 
 9698      6F706963 
 9699              	.LC3:
 9700 0048 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 9700      31663838 
 9700      66633434 
 9700      38393266 
 9700      38633130 
 9701              	.LC4:
 9702 0069 726F7373 		.ascii	"rosserial_msgs/Log\000"
 9702      65726961 
 9702      6C5F6D73 
 9702      67732F4C 
 9702      6F6700
 9703              	.LC5:
 9704 007c 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 9704      64373331 
 9704      63323539 
 9704      33333236 
 9704      31636436 
 9705              	.LC6:
 9706 009d 63316633 		.ascii	"c1f3d28f1b044c871e6eff2e9fc3c667\000"
 9706      64323866 
 9706      31623034 
 9706      34633837 
 9706      31653665 
 9707              	.LC7:
 9708 00be 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 9708      39386264 
 9708      61363539 
 9708      38313938 
 9708      36646466 
 9709              	.LC8:
 9710 00df 7374645F 		.ascii	"std_msgs/UInt8\000"
 9710      6D736773 
 9710      2F55496E 
 9710      743800
 9711              	.LC9:
 9712 00ee 37633831 		.ascii	"7c8164229e7d2c17eb95e9231617fdee\000"
 9712      36343232 
 9712      39653764 
 9712      32633137 
 9712      65623935 
 9713              	.LC10:
 9714 010f 7374645F 		.ascii	"std_msgs/Header\000"
 9714      6D736773 
 9714      2F486561 
 9714      64657200 
 9715              	.LC11:
 9716 011f 32313736 		.ascii	"2176decaecbce78abc3b96ef049fabed\000"
 9716      64656361 
 9716      65636263 
 9716      65373861 
 9716      62633362 
 9717              	.LC12:
 9718 0140 67656F6D 		.ascii	"geometry_msgs/Point\000"
 9718      65747279 
 9718      5F6D7367 
 9718      732F506F 
 9718      696E7400 
 9719              	.LC13:
 9720 0154 34613834 		.ascii	"4a842b65f413084dc2b10fb484ea7f17\000"
 9720      32623635 
 9720      66343133 
 9720      30383464 
 9720      63326231 
 9721              	.LC14:
 9722 0175 67656F6D 		.ascii	"geometry_msgs/Quaternion\000"
 9722      65747279 
 9722      5F6D7367 
 9722      732F5175 
 9722      61746572 
 9723              	.LC15:
 9724 018e 61373739 		.ascii	"a779879fadf0160734f906b8c19c7004\000"
 9724      38373966 
 9724      61646630 
 9724      31363037 
 9724      33346639 
 9725              	.LC16:
 9726 01af 67656F6D 		.ascii	"geometry_msgs/Pose\000"
 9726      65747279 
 9726      5F6D7367 
 9726      732F506F 
 9726      736500
 9727              	.LC17:
 9728 01c2 65343564 		.ascii	"e45d45a5a1ce597b249e23fb30fc871f\000"
 9728      34356135 
 9728      61316365 
 9728      35393762 
 9728      32343965 
 9729              	.LC18:
 9730 01e3 67656F6D 		.ascii	"geometry_msgs/PoseWithCovariance\000"
 9730      65747279 
 9730      5F6D7367 
 9730      732F506F 
 9730      73655769 
 9731              	.LC19:
 9732 0204 63323365 		.ascii	"c23e848cf1b7533a8d7c259073a97e6f\000"
 9732      38343863 
 9732      66316237 
 9732      35333361 
 9732      38643763 
 9733              	.LC20:
 9734 0225 67656F6D 		.ascii	"geometry_msgs/Vector3\000"
 9734      65747279 
 9734      5F6D7367 
 9734      732F5665 
 9734      63746F72 
 9735              	.LC21:
 9736 023b 67656F6D 		.ascii	"geometry_msgs/Twist\000"
 9736      65747279 
 9736      5F6D7367 
 9736      732F5477 
 9736      69737400 
 9737              	.LC22:
 9738 024f 39663139 		.ascii	"9f195f881246fdfa2798d1d3eebca84a\000"
 9738      35663838 
 9738      31323436 
 9738      66646661 
 9738      32373938 
 9739              	.LC23:
 9740 0270 67656F6D 		.ascii	"geometry_msgs/TwistWithCovariance\000"
 9740      65747279 
 9740      5F6D7367 
 9740      732F5477 
 9740      69737457 
 9741              	.LC24:
 9742 0292 31666538 		.ascii	"1fe8a28e6890a4cc3ae4c3ca5c7d82e6\000"
 9742      61323865 
 9742      36383930 
 9742      61346363 
 9742      33616534 
 9743              	.LC25:
 9744 02b3 6E61765F 		.ascii	"nav_msgs/Odometry\000"
 9744      6D736773 
 9744      2F4F646F 
 9744      6D657472 
 9744      7900
 9745              	.LC26:
 9746 02c5 63643565 		.ascii	"cd5e73d190d741a2f92e81eda573aca7\000"
 9746      37336431 
 9746      39306437 
 9746      34316132 
 9746      66393265 
 9747              	.LC27:
 9748 02e6 726F6265 		.ascii	"roberto_msgs/MotorState\000"
 9748      72746F5F 
 9748      6D736773 
 9748      2F4D6F74 
 9748      6F725374 
 9749              	.LC28:
 9750 02fe 65386235 		.ascii	"e8b5d1162b85151c49e02b8224796c0e\000"
 9750      64313136 
 9750      32623835 
 9750      31353163 
 9750      34396530 
 9751              	.LC29:
 9752 031f 67656F6D 		.ascii	"geometry_msgs/Transform\000"
 9752      65747279 
 9752      5F6D7367 
 9752      732F5472 
 9752      616E7366 
 9753              	.LC30:
 9754 0337 61633965 		.ascii	"ac9eff44abf714214112b05d54a3cf9b\000"
 9754      66663434 
 9754      61626637 
 9754      31343231 
 9754      34313132 
 9755              	.LC31:
 9756 0358 67656F6D 		.ascii	"geometry_msgs/TransformStamped\000"
 9756      65747279 
 9756      5F6D7367 
 9756      732F5472 
 9756      616E7366 
 9757              	.LC32:
 9758 0377 62353736 		.ascii	"b5764a33bfeb3588febc2682852579b0\000"
 9758      34613333 
 9758      62666562 
 9758      33353838 
 9758      66656263 
 9759              	.LC33:
 9760 0398 74662F74 		.ascii	"tf/tfMessage\000"
 9760      664D6573 
 9760      73616765 
 9760      00
 9761              	.LC34:
 9762 03a5 39343831 		.ascii	"94810edda583a504dfda3829e70d7eec\000"
 9762      30656464 
 9762      61353833 
 9762      61353034 
 9762      64666461 
 9763              	.LC35:
 9764 03c6 00       		.ascii	"\000"
 9765              	.LC36:
 9766 03c7 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 9766      61676520 
 9766      66726F6D 
 9766      20646576 
 9766      69636520 
 9767 03fa 66666572 		.ascii	"ffer.\000"
 9767      2E00
 9768              	.LC37:
 9769 0400 73657269 		.ascii	"serial_node/KP\000"
 9769      616C5F6E 
 9769      6F64652F 
 9769      4B5000
 9770              	.LC38:
 9771 040f 73657269 		.ascii	"serial_node/KI\000"
 9771      616C5F6E 
 9771      6F64652F 
 9771      4B4900
 9772              	.LC39:
 9773 041e 73657269 		.ascii	"serial_node/KD\000"
 9773      616C5F6E 
 9773      6F64652F 
 9773      4B4400
 9774              	.LC40:
 9775 042d 73657269 		.ascii	"serial_node/integralSaturation\000"
 9775      616C5F6E 
 9775      6F64652F 
 9775      696E7465 
 9775      6772616C 
 9776              	.LC41:
 9777 044c 73657269 		.ascii	"serial_node/wheelRadius\000"
 9777      616C5F6E 
 9777      6F64652F 
 9777      77686565 
 9777      6C526164 
 9778              	.LC42:
 9779 0464 73657269 		.ascii	"serial_node/widthBetweenMotorPivotPoints\000"
 9779      616C5F6E 
 9779      6F64652F 
 9779      77696474 
 9779      68426574 
 9780              	.LC43:
 9781 048d 73657269 		.ascii	"serial_node/motorPivotPointToWheel\000"
 9781      616C5F6E 
 9781      6F64652F 
 9781      6D6F746F 
 9781      72506976 
 9782              	.LC44:
 9783 04b0 73657276 		.ascii	"servo_left\000"
 9783      6F5F6C65 
 9783      667400
 9784              	.LC45:
 9785 04bb 73657276 		.ascii	"servo_right\000"
 9785      6F5F7269 
 9785      67687400 
 9786              	.LC46:
 9787 04c7 66726F6E 		.ascii	"front_right\000"
 9787      745F7269 
 9787      67687400 
 9788              	.LC47:
 9789 04d3 66726F6E 		.ascii	"front_left\000"
 9789      745F6C65 
 9789      667400
 9790              	.LC48:
 9791 04de 72656172 		.ascii	"rear_left\000"
 9791      5F6C6566 
 9791      7400
 9792              	.LC49:
 9793 04e8 72656172 		.ascii	"rear_right\000"
 9793      5F726967 
 9793      687400
 9794              	.LC50:
 9795 04f3 556E6162 		.ascii	"Unable to initialize motor: %s - [FAIL]\015\012\000"
 9795      6C652074 
 9795      6F20696E 
 9795      69746961 
 9795      6C697A65 
 9796              	.LC51:
 9797 051d 456E636F 		.ascii	"Encoder timeout: %s - [FAIL]\000"
 9797      64657220 
 9797      74696D65 
 9797      6F75743A 
 9797      20257320 
 9798              	.LC52:
 9799 053a 6F646F6D 		.ascii	"odom\000"
 9799      00
 9800              	.LC53:
 9801 053f 62617365 		.ascii	"base_link\000"
 9801      5F6C696E 
 9801      6B00
 9802              	.LC54:
 9803 0549 4D61696E 		.ascii	"Main loop running slower than expected!\000"
 9803      206C6F6F 
 9803      70207275 
 9803      6E6E696E 
 9803      6720736C 
 9804              	.LC55:
 9805 0571 57726F6E 		.ascii	"Wrong parameters value: file %s on line %u\015\012\000"
 9805      67207061 
 9805      72616D65 
 9805      74657273 
 9805      2076616C 
 9806              	.LC56:
 9807 059e 7468726F 		.ascii	"throttled_joy_vel\000"
 9807      74746C65 
 9807      645F6A6F 
 9807      795F7665 
 9807      6C00
 9808              	.LC57:
 9809 05b0 6C656400 		.ascii	"led\000"
 9810              	.LC58:
 9811 05b4 2F746600 		.ascii	"/tf\000"
 9812              		.bss
 9813              		.align	2
 9814              		.set	.LANCHOR1,. + 0
 9817              	currentMode:
 9818 0000 00       		.space	1
 9821              	waitForServos:
 9822 0001 00       		.space	1
 9823 0002 0000     		.space	2
 9826              	L:
 9827 0004 00000000 		.space	4
 9830              	motorCmd:
 9831 0008 00000000 		.space	16
 9831      00000000 
 9831      00000000 
 9831      00000000 
 9834              	servo_left:
 9835 0018 00000000 		.space	4
 9838              	servo_right:
 9839 001c 00000000 		.space	4
 9842              	USART_CNTOUT:
 9843 0020 00000000 		.space	4
 9846              	USART_CNTIN:
 9847 0024 00000000 		.space	4
 9850              	USART_FIFO:
 9851 0028 00000000 		.space	1024
 9851      00000000 
 9851      00000000 
 9851      00000000 
 9851      00000000 
 9854              	shuttingDown:
 9855 0428 00       		.space	1
 9856 0429 000000   		.space	3
 9859              	nh:
 9860 042c 00000000 		.space	1328
 9860      00000000 
 9860      00000000 
 9860      00000000 
 9860      00000000 
 9863              	motor_sub:
 9864 095c 00000000 		.space	64
 9864      00000000 
 9864      00000000 
 9864      00000000 
 9864      00000000 
 9867              	led_sub:
 9868 099c 00000000 		.space	28
 9868      00000000 
 9868      00000000 
 9868      00000000 
 9868      00000000 
 9871              	odom_pub:
 9872 09b8 00000000 		.space	20
 9872      00000000 
 9872      00000000 
 9872      00000000 
 9872      00000000 
 9875              	odom_broadcaster:
 9876 09cc 00000000 		.space	100
 9876      00000000 
 9876      00000000 
 9876      00000000 
 9876      00000000 
 9879              	d:
 9880 0a30 00000000 		.space	4
 9883              	front_left:
 9884 0a34 00000000 		.space	4
 9887              	front_right:
 9888 0a38 00000000 		.space	4
 9891              	rear_left:
 9892 0a3c 00000000 		.space	4
 9895              	rear_right:
 9896 0a40 00000000 		.space	4
 9899              	odom_trans:
 9900 0a44 00000000 		.space	68
 9900      00000000 
 9900      00000000 
 9900      00000000 
 9900      00000000 
 9903              	odom:
 9904 0a88 00000000 		.space	400
 9904      00000000 
 9904      00000000 
 9904      00000000 
 9904      00000000 
 9907              	GenerateStartStatus:
 9908 0c18 00       		.space	1
 9911              	NumberOfByteToReceive:
 9912 0c19 00       		.space	1
 9915              	RxBuffer:
 9916 0c1a 00000000 		.space	7
 9916      000000
 9919              	slaveAddress:
 9920 0c21 00       		.space	1
 9923              	Rx_Idx:
 9924 0c22 00       		.space	1
 9925              		.text
 9926              	.Letext0:
 9927              		.file 29 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 9928              		.file 30 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types.h"
 9929              		.file 31 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 9930              		.file 32 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdint.h"
 9931              		.file 33 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 9932              		.file 34 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_usart.h"
 9933              		.file 35 "/opt/gcc-arm-none-eabi-5_2-2015q4/lib/gcc/arm-none-eabi/5.2.1/include/stddef.h"
 9934              		.file 36 "/opt/gcc-arm-none-eabi-5_2-2015q4/lib/gcc/arm-none-eabi/5.2.1/include/stdarg.h"
 9935              		.file 37 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/lock.h"
 9936              		.file 38 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_types.h"
 9937              		.file 39 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/reent.h"
 9938              		.file 40 "<built-in>"
 9939              		.file 41 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/type_traits"
 9940              		.file 42 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/exception_ptr.h"
 9941              		.file 43 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/arm-none-eabi/armv7-m/
 9942              		.file 44 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/debug/debug.h"
 9943              		.file 45 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/cwchar"
 9944              		.file 46 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/cstdint"
 9945              		.file 47 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/clocale"
 9946              		.file 48 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/stl_pair.h"
 9947              		.file 49 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/uses_allocator.h"
 9948              		.file 50 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/tuple"
 9949              		.file 51 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/predefined_ops.h"
 9950              		.file 52 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/ext/new_allocator.h"
 9951              		.file 53 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/ext/numeric_traits.h"
 9952              		.file 54 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/wchar.h"
 9953              		.file 55 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/locale.h"
 9954              		.file 56 "./inc/motorSettings.h"
 9955              		.file 57 "./lib/ros_lib/ros/duration.h"
 9956              		.file 58 "./lib/ros_lib/ros.h"
 9957              		.file 59 "./lib/ros_lib/std_msgs/MultiArrayDimension.h"
 9958              		.file 60 "./lib/ros_lib/sensor_msgs/Joy.h"
 9959              		.file 61 "./inc/motor.h"
 9960              		.file 62 "./inc/led.h"
 9961              		.file 63 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/math.h"
 9962              		.file 64 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/string.h"
 9963              		.file 65 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdlib.h"
 9964              		.file 66 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 9965              		.file 67 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_exti.h"
 9966              		.file 68 "./inc/stm32_time.h"
 9967              		.file 69 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdio.h"
 9968              		.file 70 "./inc/encoder.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/cc20gKPT.s:20     .text._ZNK8std_msgs4Time9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:25     .text._ZNK8std_msgs4Time9serializeEPh:00000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:75     .text._ZN8std_msgs4Time11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:80     .text._ZN8std_msgs4Time11deserializeEPh:00000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:131    .text._ZN8std_msgs4Time7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:136    .text._ZN8std_msgs4Time7getTypeEv:00000000 _ZN8std_msgs4Time7getTypeEv
     /tmp/cc20gKPT.s:152    .text._ZN8std_msgs4Time7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:159    .text._ZN8std_msgs4Time6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:164    .text._ZN8std_msgs4Time6getMD5Ev:00000000 _ZN8std_msgs4Time6getMD5Ev
     /tmp/cc20gKPT.s:180    .text._ZN8std_msgs4Time6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:187    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:192    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
     /tmp/cc20gKPT.s:209    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:216    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:221    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
     /tmp/cc20gKPT.s:237    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:244    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:249    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 _ZN14rosserial_msgs3Log7getTypeEv
     /tmp/cc20gKPT.s:266    .text._ZN14rosserial_msgs3Log7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:273    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:278    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 _ZN14rosserial_msgs3Log6getMD5Ev
     /tmp/cc20gKPT.s:294    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:301    .text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:306    .text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000000 _ZN14rosserial_msgs19RequestParamRequest7getTypeEv
     /tmp/cc20gKPT.s:323    .text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:330    .text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:335    .text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000000 _ZN14rosserial_msgs19RequestParamRequest6getMD5Ev
     /tmp/cc20gKPT.s:351    .text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:358    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:363    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
     /tmp/cc20gKPT.s:379    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:386    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:391    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
     /tmp/cc20gKPT.s:407    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:414    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:419    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 _ZNK8std_msgs5UInt89serializeEPh
.ARM.exidx.text._ZNK8std_msgs5UInt89serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:445    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:450    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 _ZN8std_msgs5UInt811deserializeEPh
.ARM.exidx.text._ZN8std_msgs5UInt811deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:473    .text._ZN8std_msgs5UInt87getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:478    .text._ZN8std_msgs5UInt87getTypeEv:00000000 _ZN8std_msgs5UInt87getTypeEv
     /tmp/cc20gKPT.s:494    .text._ZN8std_msgs5UInt87getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt87getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:501    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:506    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 _ZN8std_msgs5UInt86getMD5Ev
     /tmp/cc20gKPT.s:522    .text._ZN8std_msgs5UInt86getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt86getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:529    .text._ZN8std_msgs6Header7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:534    .text._ZN8std_msgs6Header7getTypeEv:00000000 _ZN8std_msgs6Header7getTypeEv
     /tmp/cc20gKPT.s:551    .text._ZN8std_msgs6Header7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:558    .text._ZN8std_msgs6Header6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:563    .text._ZN8std_msgs6Header6getMD5Ev:00000000 _ZN8std_msgs6Header6getMD5Ev
     /tmp/cc20gKPT.s:579    .text._ZN8std_msgs6Header6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:586    .text._ZN13geometry_msgs5Point7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:591    .text._ZN13geometry_msgs5Point7getTypeEv:00000000 _ZN13geometry_msgs5Point7getTypeEv
     /tmp/cc20gKPT.s:608    .text._ZN13geometry_msgs5Point7getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs5Point7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:615    .text._ZN13geometry_msgs5Point6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:620    .text._ZN13geometry_msgs5Point6getMD5Ev:00000000 _ZN13geometry_msgs5Point6getMD5Ev
     /tmp/cc20gKPT.s:636    .text._ZN13geometry_msgs5Point6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs5Point6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:643    .text._ZN13geometry_msgs10Quaternion7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:648    .text._ZN13geometry_msgs10Quaternion7getTypeEv:00000000 _ZN13geometry_msgs10Quaternion7getTypeEv
     /tmp/cc20gKPT.s:665    .text._ZN13geometry_msgs10Quaternion7getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs10Quaternion7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:672    .text._ZN13geometry_msgs10Quaternion6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:677    .text._ZN13geometry_msgs10Quaternion6getMD5Ev:00000000 _ZN13geometry_msgs10Quaternion6getMD5Ev
     /tmp/cc20gKPT.s:693    .text._ZN13geometry_msgs10Quaternion6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs10Quaternion6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:700    .text._ZN13geometry_msgs4Pose7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:705    .text._ZN13geometry_msgs4Pose7getTypeEv:00000000 _ZN13geometry_msgs4Pose7getTypeEv
     /tmp/cc20gKPT.s:722    .text._ZN13geometry_msgs4Pose7getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs4Pose7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:729    .text._ZN13geometry_msgs4Pose6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:734    .text._ZN13geometry_msgs4Pose6getMD5Ev:00000000 _ZN13geometry_msgs4Pose6getMD5Ev
     /tmp/cc20gKPT.s:750    .text._ZN13geometry_msgs4Pose6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs4Pose6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:757    .text._ZN13geometry_msgs18PoseWithCovariance7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:762    .text._ZN13geometry_msgs18PoseWithCovariance7getTypeEv:00000000 _ZN13geometry_msgs18PoseWithCovariance7getTypeEv
     /tmp/cc20gKPT.s:779    .text._ZN13geometry_msgs18PoseWithCovariance7getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs18PoseWithCovariance7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:786    .text._ZN13geometry_msgs18PoseWithCovariance6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:791    .text._ZN13geometry_msgs18PoseWithCovariance6getMD5Ev:00000000 _ZN13geometry_msgs18PoseWithCovariance6getMD5Ev
     /tmp/cc20gKPT.s:807    .text._ZN13geometry_msgs18PoseWithCovariance6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs18PoseWithCovariance6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:814    .text._ZN13geometry_msgs7Vector37getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:819    .text._ZN13geometry_msgs7Vector37getTypeEv:00000000 _ZN13geometry_msgs7Vector37getTypeEv
     /tmp/cc20gKPT.s:836    .text._ZN13geometry_msgs7Vector37getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs7Vector37getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:843    .text._ZN13geometry_msgs7Vector36getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:848    .text._ZN13geometry_msgs7Vector36getMD5Ev:00000000 _ZN13geometry_msgs7Vector36getMD5Ev
     /tmp/cc20gKPT.s:864    .text._ZN13geometry_msgs7Vector36getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs7Vector36getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:871    .text._ZN13geometry_msgs5Twist7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:876    .text._ZN13geometry_msgs5Twist7getTypeEv:00000000 _ZN13geometry_msgs5Twist7getTypeEv
     /tmp/cc20gKPT.s:893    .text._ZN13geometry_msgs5Twist7getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs5Twist7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:900    .text._ZN13geometry_msgs5Twist6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:905    .text._ZN13geometry_msgs5Twist6getMD5Ev:00000000 _ZN13geometry_msgs5Twist6getMD5Ev
     /tmp/cc20gKPT.s:921    .text._ZN13geometry_msgs5Twist6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs5Twist6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:928    .text._ZN13geometry_msgs19TwistWithCovariance7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:933    .text._ZN13geometry_msgs19TwistWithCovariance7getTypeEv:00000000 _ZN13geometry_msgs19TwistWithCovariance7getTypeEv
     /tmp/cc20gKPT.s:950    .text._ZN13geometry_msgs19TwistWithCovariance7getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs19TwistWithCovariance7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:957    .text._ZN13geometry_msgs19TwistWithCovariance6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:962    .text._ZN13geometry_msgs19TwistWithCovariance6getMD5Ev:00000000 _ZN13geometry_msgs19TwistWithCovariance6getMD5Ev
     /tmp/cc20gKPT.s:978    .text._ZN13geometry_msgs19TwistWithCovariance6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs19TwistWithCovariance6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:985    .text._ZN8nav_msgs8Odometry7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:990    .text._ZN8nav_msgs8Odometry7getTypeEv:00000000 _ZN8nav_msgs8Odometry7getTypeEv
     /tmp/cc20gKPT.s:1007   .text._ZN8nav_msgs8Odometry7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8nav_msgs8Odometry7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:1014   .text._ZN8nav_msgs8Odometry6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:1019   .text._ZN8nav_msgs8Odometry6getMD5Ev:00000000 _ZN8nav_msgs8Odometry6getMD5Ev
     /tmp/cc20gKPT.s:1035   .text._ZN8nav_msgs8Odometry6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8nav_msgs8Odometry6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:1042   .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:1047   .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 _ZN12roberto_msgs10MotorState7getTypeEv
     /tmp/cc20gKPT.s:1064   .text._ZN12roberto_msgs10MotorState7getTypeEv:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:1071   .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:1076   .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 _ZN12roberto_msgs10MotorState6getMD5Ev
     /tmp/cc20gKPT.s:1092   .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:1099   .text._ZN13geometry_msgs9Transform7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:1104   .text._ZN13geometry_msgs9Transform7getTypeEv:00000000 _ZN13geometry_msgs9Transform7getTypeEv
     /tmp/cc20gKPT.s:1121   .text._ZN13geometry_msgs9Transform7getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs9Transform7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:1128   .text._ZN13geometry_msgs9Transform6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:1133   .text._ZN13geometry_msgs9Transform6getMD5Ev:00000000 _ZN13geometry_msgs9Transform6getMD5Ev
     /tmp/cc20gKPT.s:1149   .text._ZN13geometry_msgs9Transform6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs9Transform6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:1156   .text._ZN13geometry_msgs16TransformStamped7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:1161   .text._ZN13geometry_msgs16TransformStamped7getTypeEv:00000000 _ZN13geometry_msgs16TransformStamped7getTypeEv
     /tmp/cc20gKPT.s:1178   .text._ZN13geometry_msgs16TransformStamped7getTypeEv:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs16TransformStamped7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:1185   .text._ZN13geometry_msgs16TransformStamped6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:1190   .text._ZN13geometry_msgs16TransformStamped6getMD5Ev:00000000 _ZN13geometry_msgs16TransformStamped6getMD5Ev
     /tmp/cc20gKPT.s:1206   .text._ZN13geometry_msgs16TransformStamped6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN13geometry_msgs16TransformStamped6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:1213   .text._ZNK2tf9tfMessage9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:1218   .text._ZNK2tf9tfMessage9serializeEPh:00000000 _ZNK2tf9tfMessage9serializeEPh
.ARM.exidx.text._ZNK2tf9tfMessage9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:1297   .text._ZN2tf9tfMessage7getTypeEv:00000000 $t
     /tmp/cc20gKPT.s:1302   .text._ZN2tf9tfMessage7getTypeEv:00000000 _ZN2tf9tfMessage7getTypeEv
     /tmp/cc20gKPT.s:1318   .text._ZN2tf9tfMessage7getTypeEv:00000004 $d
.ARM.exidx.text._ZN2tf9tfMessage7getTypeEv:00000000 $d
     /tmp/cc20gKPT.s:1325   .text._ZN2tf9tfMessage6getMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:1330   .text._ZN2tf9tfMessage6getMD5Ev:00000000 _ZN2tf9tfMessage6getMD5Ev
     /tmp/cc20gKPT.s:1346   .text._ZN2tf9tfMessage6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN2tf9tfMessage6getMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:1353   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 $t
     /tmp/cc20gKPT.s:1358   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 $d
     /tmp/cc20gKPT.s:1378   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $t
     /tmp/cc20gKPT.s:1383   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $d
     /tmp/cc20gKPT.s:1419   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $t
     /tmp/cc20gKPT.s:1424   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $d
     /tmp/cc20gKPT.s:1443   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $t
     /tmp/cc20gKPT.s:1448   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
     /tmp/cc20gKPT.s:1464   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $d
     /tmp/cc20gKPT.s:1471   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:1476   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
     /tmp/cc20gKPT.s:1492   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:1499   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $t
     /tmp/cc20gKPT.s:1504   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $d
     /tmp/cc20gKPT.s:1523   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $t
     /tmp/cc20gKPT.s:1528   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
     /tmp/cc20gKPT.s:1544   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $d
     /tmp/cc20gKPT.s:1551   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $t
     /tmp/cc20gKPT.s:1556   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
     /tmp/cc20gKPT.s:1572   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $d
     /tmp/cc20gKPT.s:1579   .text:00000000 $t
     /tmp/cc20gKPT.s:1584   .text:00000000 _Z6led_cbRKN8std_msgs5UInt8E
                       .ARM.exidx:00000000 $d
     /tmp/cc20gKPT.s:1618   .text:00000006 _Z8motor_cbRKN12roberto_msgs10MotorStateE
     /tmp/cc20gKPT.s:1913   .text:00000168 $d
     /tmp/cc20gKPT.s:1923   .text._ZNK8std_msgs6Header9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:1928   .text._ZNK8std_msgs6Header9serializeEPh:00000000 _ZNK8std_msgs6Header9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6Header9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:2027   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:2032   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:2245   .text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:2250   .text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:00000000 _ZNK14rosserial_msgs19RequestParamRequest9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:2303   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:2308   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:2367   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:2372   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:2507   .text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:2512   .text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:00000000 _ZN14rosserial_msgs19RequestParamRequest11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:2580   .text._ZN8std_msgs6Header11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:2585   .text._ZN8std_msgs6Header11deserializeEPh:00000000 _ZN8std_msgs6Header11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6Header11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:2698   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:2703   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:2891   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:2896   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:2970   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:2975   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:3230   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $t
     /tmp/cc20gKPT.s:3235   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 _ZN3ros3Msg19serializeAvrFloat64EPhf
.ARM.exidx.text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $d
     /tmp/cc20gKPT.s:3322   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:3327   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 _ZNK12roberto_msgs10MotorState9serializeEPh
.ARM.exidx.text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:3399   .text._ZNK13geometry_msgs7Vector39serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:3404   .text._ZNK13geometry_msgs7Vector39serializeEPh:00000000 _ZNK13geometry_msgs7Vector39serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs7Vector39serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:3456   .text._ZNK13geometry_msgs5Twist9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:3461   .text._ZNK13geometry_msgs5Twist9serializeEPh:00000000 _ZNK13geometry_msgs5Twist9serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs5Twist9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:3504   .text._ZNK13geometry_msgs19TwistWithCovariance9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:3509   .text._ZNK13geometry_msgs19TwistWithCovariance9serializeEPh:00000000 _ZNK13geometry_msgs19TwistWithCovariance9serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs19TwistWithCovariance9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:3565   .text._ZNK13geometry_msgs10Quaternion9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:3570   .text._ZNK13geometry_msgs10Quaternion9serializeEPh:00000000 _ZNK13geometry_msgs10Quaternion9serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs10Quaternion9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:3629   .text._ZNK13geometry_msgs9Transform9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:3634   .text._ZNK13geometry_msgs9Transform9serializeEPh:00000000 _ZNK13geometry_msgs9Transform9serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs9Transform9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:3677   .text._ZNK13geometry_msgs16TransformStamped9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:3682   .text._ZNK13geometry_msgs16TransformStamped9serializeEPh:00000000 _ZNK13geometry_msgs16TransformStamped9serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs16TransformStamped9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:3755   .text._ZNK13geometry_msgs5Point9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:3760   .text._ZNK13geometry_msgs5Point9serializeEPh:00000000 _ZNK13geometry_msgs5Point9serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs5Point9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:3812   .text._ZNK13geometry_msgs4Pose9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:3817   .text._ZNK13geometry_msgs4Pose9serializeEPh:00000000 _ZNK13geometry_msgs4Pose9serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs4Pose9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:3860   .text._ZNK13geometry_msgs18PoseWithCovariance9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:3865   .text._ZNK13geometry_msgs18PoseWithCovariance9serializeEPh:00000000 _ZNK13geometry_msgs18PoseWithCovariance9serializeEPh
.ARM.exidx.text._ZNK13geometry_msgs18PoseWithCovariance9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:3921   .text._ZNK8nav_msgs8Odometry9serializeEPh:00000000 $t
     /tmp/cc20gKPT.s:3926   .text._ZNK8nav_msgs8Odometry9serializeEPh:00000000 _ZNK8nav_msgs8Odometry9serializeEPh
.ARM.exidx.text._ZNK8nav_msgs8Odometry9serializeEPh:00000000 $d
     /tmp/cc20gKPT.s:4006   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $t
     /tmp/cc20gKPT.s:4011   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 _ZN3ros3Msg21deserializeAvrFloat64EPKhPf
.ARM.exidx.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $d
     /tmp/cc20gKPT.s:4083   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:4088   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 _ZN12roberto_msgs10MotorState11deserializeEPh
.ARM.exidx.text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:4162   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $t
     /tmp/cc20gKPT.s:4167   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $d
     /tmp/cc20gKPT.s:4211   .text._ZN13geometry_msgs10Quaternion11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:4216   .text._ZN13geometry_msgs10Quaternion11deserializeEPh:00000000 _ZN13geometry_msgs10Quaternion11deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs10Quaternion11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:4275   .text._ZN13geometry_msgs7Vector311deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:4280   .text._ZN13geometry_msgs7Vector311deserializeEPh:00000000 _ZN13geometry_msgs7Vector311deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs7Vector311deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:4332   .text._ZN13geometry_msgs9Transform11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:4337   .text._ZN13geometry_msgs9Transform11deserializeEPh:00000000 _ZN13geometry_msgs9Transform11deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs9Transform11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:4380   .text._ZN13geometry_msgs16TransformStamped11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:4385   .text._ZN13geometry_msgs16TransformStamped11deserializeEPh:00000000 _ZN13geometry_msgs16TransformStamped11deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs16TransformStamped11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:4473   .text._ZN2tf9tfMessage11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:4478   .text._ZN2tf9tfMessage11deserializeEPh:00000000 _ZN2tf9tfMessage11deserializeEPh
.ARM.exidx.text._ZN2tf9tfMessage11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:4571   .text._ZN13geometry_msgs5Twist11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:4576   .text._ZN13geometry_msgs5Twist11deserializeEPh:00000000 _ZN13geometry_msgs5Twist11deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs5Twist11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:4619   .text._ZN13geometry_msgs5Point11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:4624   .text._ZN13geometry_msgs5Point11deserializeEPh:00000000 _ZN13geometry_msgs5Point11deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs5Point11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:4676   .text._ZN13geometry_msgs4Pose11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:4681   .text._ZN13geometry_msgs4Pose11deserializeEPh:00000000 _ZN13geometry_msgs4Pose11deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs4Pose11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:4724   .text._ZN13geometry_msgs18PoseWithCovariance11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:4729   .text._ZN13geometry_msgs18PoseWithCovariance11deserializeEPh:00000000 _ZN13geometry_msgs18PoseWithCovariance11deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs18PoseWithCovariance11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:4786   .text._ZN13geometry_msgs19TwistWithCovariance11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:4791   .text._ZN13geometry_msgs19TwistWithCovariance11deserializeEPh:00000000 _ZN13geometry_msgs19TwistWithCovariance11deserializeEPh
.ARM.exidx.text._ZN13geometry_msgs19TwistWithCovariance11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:4848   .text._ZN8nav_msgs8Odometry11deserializeEPh:00000000 $t
     /tmp/cc20gKPT.s:4853   .text._ZN8nav_msgs8Odometry11deserializeEPh:00000000 _ZN8nav_msgs8Odometry11deserializeEPh
.ARM.exidx.text._ZN8nav_msgs8Odometry11deserializeEPh:00000000 $d
     /tmp/cc20gKPT.s:4948   .text._ZN3ros9Publisher7publishEPKNS_3MsgE:00000000 $t
     /tmp/cc20gKPT.s:4953   .text._ZN3ros9Publisher7publishEPKNS_3MsgE:00000000 _ZN3ros9Publisher7publishEPKNS_3MsgE
.ARM.exidx.text._ZN3ros9Publisher7publishEPKNS_3MsgE:00000000 $d
     /tmp/cc20gKPT.s:4989   .text._ZN15ArduinoHardware4initEv:00000000 $t
     /tmp/cc20gKPT.s:4994   .text._ZN15ArduinoHardware4initEv:00000000 _ZN15ArduinoHardware4initEv
     /tmp/cc20gKPT.s:5112   .text._ZN15ArduinoHardware4initEv:0000008c $d
.ARM.exidx.text._ZN15ArduinoHardware4initEv:00000000 $d
     /tmp/cc20gKPT.s:5119   .text:0000017c $t
     /tmp/cc20gKPT.s:5124   .text:0000017c USART1_IRQHandler
     /tmp/cc20gKPT.s:5187   .text:000001c0 $d
     /tmp/cc20gKPT.s:5194   .text._ZN13geometry_msgs16TransformStampedC2Ev:00000000 $t
     /tmp/cc20gKPT.s:5199   .text._ZN13geometry_msgs16TransformStampedC2Ev:00000000 _ZN13geometry_msgs16TransformStampedC2Ev
     /tmp/cc20gKPT.s:5301   .text._ZN13geometry_msgs16TransformStampedC2Ev:00000034 $d
     /tmp/cc20gKPT.s:9605   .rodata._ZTVN13geometry_msgs16TransformStampedE:00000000 _ZTVN13geometry_msgs16TransformStampedE
     /tmp/cc20gKPT.s:9497   .rodata._ZTVN13geometry_msgs10QuaternionE:00000000 _ZTVN13geometry_msgs10QuaternionE
     /tmp/cc20gKPT.s:9473   .rodata._ZTVN8std_msgs6HeaderE:00000000 _ZTVN8std_msgs6HeaderE
     /tmp/cc20gKPT.s:9593   .rodata._ZTVN13geometry_msgs9TransformE:00000000 _ZTVN13geometry_msgs9TransformE
     /tmp/cc20gKPT.s:9533   .rodata._ZTVN13geometry_msgs7Vector3E:00000000 _ZTVN13geometry_msgs7Vector3E
.ARM.exidx.text._ZN13geometry_msgs16TransformStampedC2Ev:00000000 $d
     /tmp/cc20gKPT.s:5199   .text._ZN13geometry_msgs16TransformStampedC2Ev:00000000 _ZN13geometry_msgs16TransformStampedC1Ev
     /tmp/cc20gKPT.s:5315   .text:000001c8 $t
     /tmp/cc20gKPT.s:5320   .text:000001c8 EXTI2_IRQHandler
     /tmp/cc20gKPT.s:5361   .text:000001e8 $d
                       .ARM.extab:00000000 $d
     /tmp/cc20gKPT.s:5367   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:00000000 $t
     /tmp/cc20gKPT.s:5372   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
     /tmp/cc20gKPT.s:5520   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:0000006c $d
     /tmp/cc20gKPT.s:9437   .rodata._ZTVN14rosserial_msgs19RequestParamRequestE:00000000 _ZTVN14rosserial_msgs19RequestParamRequestE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:00000000 $d
     /tmp/cc20gKPT.s:5526   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 $t
     /tmp/cc20gKPT.s:5531   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
     /tmp/cc20gKPT.s:5585   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000020 $d
     /tmp/cc20gKPT.s:9425   .rodata._ZTVN14rosserial_msgs3LogE:00000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 $d
     /tmp/cc20gKPT.s:5591   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 $t
     /tmp/cc20gKPT.s:5596   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
     /tmp/cc20gKPT.s:5760   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:000000bc $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 $d
     /tmp/cc20gKPT.s:5767   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 $t
     /tmp/cc20gKPT.s:5772   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
     /tmp/cc20gKPT.s:5841   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000024 $d
     /tmp/cc20gKPT.s:9401   .rodata._ZTVN8std_msgs4TimeE:00000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 $d
     /tmp/cc20gKPT.s:5847   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 $t
     /tmp/cc20gKPT.s:5852   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
     /tmp/cc20gKPT.s:6014   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:000000b4 $d
     /tmp/cc20gKPT.s:9413   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 _ZTVN14rosserial_msgs9TopicInfoE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 $d
     /tmp/cc20gKPT.s:6021   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 $t
     /tmp/cc20gKPT.s:6026   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
     /tmp/cc20gKPT.s:6159   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000074 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 $d
     /tmp/cc20gKPT.s:6167   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 $t
     /tmp/cc20gKPT.s:6172   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
     /tmp/cc20gKPT.s:6534   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000208 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 $d
     /tmp/cc20gKPT.s:6550   .text.startup:00000000 $t
     /tmp/cc20gKPT.s:6555   .text.startup:00000000 main
     /tmp/cc20gKPT.s:6786   .text.startup:000000f0 $d
     /tmp/cc20gKPT.s:6795   .text.startup:0000010c $t
     /tmp/cc20gKPT.s:7187   .text.startup:000003a8 $d
     /tmp/cc20gKPT.s:7215   .text.startup:00000414 $t
     /tmp/cc20gKPT.s:7536   .text.startup:00000600 $d
     /tmp/cc20gKPT.s:7543   .text.startup:00000614 $t
     /tmp/cc20gKPT.s:7758   .text.startup:0000075c $d
     /tmp/cc20gKPT.s:7765   .text.startup:00000768 $t
     /tmp/cc20gKPT.s:8327   .text.startup:00000b18 $d
          .ARM.extab.text.startup:00000000 $d
          .ARM.exidx.text.startup:00000000 $d
     /tmp/cc20gKPT.s:8341   .text:000001ec $t
     /tmp/cc20gKPT.s:8346   .text:000001ec _Z13assert_failedPhm
     /tmp/cc20gKPT.s:8393   .text:00000218 $d
     /tmp/cc20gKPT.s:8400   .text.startup:00000b3c $t
     /tmp/cc20gKPT.s:8404   .text.startup:00000b3c _GLOBAL__sub_I_USART_FIFO
     /tmp/cc20gKPT.s:8984   .text.startup:00000d24 $d
     /tmp/cc20gKPT.s:9629   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/cc20gKPT.s:9449   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 _ZTVN14rosserial_msgs20RequestParamResponseE
     /tmp/cc20gKPT.s:9640   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/cc20gKPT.s:9581   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 _ZTVN12roberto_msgs10MotorStateE
     /tmp/cc20gKPT.s:9652   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/cc20gKPT.s:9461   .rodata._ZTVN8std_msgs5UInt8E:00000000 _ZTVN8std_msgs5UInt8E
     /tmp/cc20gKPT.s:9617   .rodata._ZTVN2tf9tfMessageE:00000000 _ZTVN2tf9tfMessageE
     /tmp/cc20gKPT.s:9569   .rodata._ZTVN8nav_msgs8OdometryE:00000000 _ZTVN8nav_msgs8OdometryE
     /tmp/cc20gKPT.s:9521   .rodata._ZTVN13geometry_msgs18PoseWithCovarianceE:00000000 _ZTVN13geometry_msgs18PoseWithCovarianceE
     /tmp/cc20gKPT.s:9509   .rodata._ZTVN13geometry_msgs4PoseE:00000000 _ZTVN13geometry_msgs4PoseE
     /tmp/cc20gKPT.s:9485   .rodata._ZTVN13geometry_msgs5PointE:00000000 _ZTVN13geometry_msgs5PointE
     /tmp/cc20gKPT.s:9557   .rodata._ZTVN13geometry_msgs19TwistWithCovarianceE:00000000 _ZTVN13geometry_msgs19TwistWithCovarianceE
     /tmp/cc20gKPT.s:9545   .rodata._ZTVN13geometry_msgs5TwistE:00000000 _ZTVN13geometry_msgs5TwistE
     /tmp/cc20gKPT.s:9021   .init_array:00000000 $d
     /tmp/cc20gKPT.s:9027   .rodata._ZTSN3ros3MsgE:00000000 _ZTSN3ros3MsgE
     /tmp/cc20gKPT.s:9034   .rodata._ZTIN3ros3MsgE:00000000 _ZTIN3ros3MsgE
     /tmp/cc20gKPT.s:9031   .rodata._ZTIN3ros3MsgE:00000000 $d
     /tmp/cc20gKPT.s:9041   .rodata._ZTSN8std_msgs4TimeE:00000000 _ZTSN8std_msgs4TimeE
     /tmp/cc20gKPT.s:9048   .rodata._ZTIN8std_msgs4TimeE:00000000 _ZTIN8std_msgs4TimeE
     /tmp/cc20gKPT.s:9045   .rodata._ZTIN8std_msgs4TimeE:00000000 $d
     /tmp/cc20gKPT.s:9056   .rodata._ZTSN14rosserial_msgs9TopicInfoE:00000000 _ZTSN14rosserial_msgs9TopicInfoE
     /tmp/cc20gKPT.s:9063   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 _ZTIN14rosserial_msgs9TopicInfoE
     /tmp/cc20gKPT.s:9060   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/cc20gKPT.s:9071   .rodata._ZTSN14rosserial_msgs3LogE:00000000 _ZTSN14rosserial_msgs3LogE
     /tmp/cc20gKPT.s:9078   .rodata._ZTIN14rosserial_msgs3LogE:00000000 _ZTIN14rosserial_msgs3LogE
     /tmp/cc20gKPT.s:9075   .rodata._ZTIN14rosserial_msgs3LogE:00000000 $d
     /tmp/cc20gKPT.s:9086   .rodata._ZTSN14rosserial_msgs19RequestParamRequestE:00000000 _ZTSN14rosserial_msgs19RequestParamRequestE
     /tmp/cc20gKPT.s:9093   .rodata._ZTIN14rosserial_msgs19RequestParamRequestE:00000000 _ZTIN14rosserial_msgs19RequestParamRequestE
     /tmp/cc20gKPT.s:9090   .rodata._ZTIN14rosserial_msgs19RequestParamRequestE:00000000 $d
     /tmp/cc20gKPT.s:9101   .rodata._ZTSN14rosserial_msgs20RequestParamResponseE:00000000 _ZTSN14rosserial_msgs20RequestParamResponseE
     /tmp/cc20gKPT.s:9108   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 _ZTIN14rosserial_msgs20RequestParamResponseE
     /tmp/cc20gKPT.s:9105   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/cc20gKPT.s:9116   .rodata._ZTSN3ros15NodeHandleBase_E:00000000 _ZTSN3ros15NodeHandleBase_E
     /tmp/cc20gKPT.s:9123   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 _ZTIN3ros15NodeHandleBase_E
     /tmp/cc20gKPT.s:9120   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 $d
     /tmp/cc20gKPT.s:9130   .rodata._ZTSN3ros11Subscriber_E:00000000 _ZTSN3ros11Subscriber_E
     /tmp/cc20gKPT.s:9137   .rodata._ZTIN3ros11Subscriber_E:00000000 _ZTIN3ros11Subscriber_E
     /tmp/cc20gKPT.s:9134   .rodata._ZTIN3ros11Subscriber_E:00000000 $d
     /tmp/cc20gKPT.s:9144   .rodata._ZTSN8std_msgs5UInt8E:00000000 _ZTSN8std_msgs5UInt8E
     /tmp/cc20gKPT.s:9151   .rodata._ZTIN8std_msgs5UInt8E:00000000 _ZTIN8std_msgs5UInt8E
     /tmp/cc20gKPT.s:9148   .rodata._ZTIN8std_msgs5UInt8E:00000000 $d
     /tmp/cc20gKPT.s:9159   .rodata._ZTSN8std_msgs6HeaderE:00000000 _ZTSN8std_msgs6HeaderE
     /tmp/cc20gKPT.s:9166   .rodata._ZTIN8std_msgs6HeaderE:00000000 _ZTIN8std_msgs6HeaderE
     /tmp/cc20gKPT.s:9163   .rodata._ZTIN8std_msgs6HeaderE:00000000 $d
     /tmp/cc20gKPT.s:9174   .rodata._ZTSN13geometry_msgs5PointE:00000000 _ZTSN13geometry_msgs5PointE
     /tmp/cc20gKPT.s:9181   .rodata._ZTIN13geometry_msgs5PointE:00000000 _ZTIN13geometry_msgs5PointE
     /tmp/cc20gKPT.s:9178   .rodata._ZTIN13geometry_msgs5PointE:00000000 $d
     /tmp/cc20gKPT.s:9189   .rodata._ZTSN13geometry_msgs10QuaternionE:00000000 _ZTSN13geometry_msgs10QuaternionE
     /tmp/cc20gKPT.s:9196   .rodata._ZTIN13geometry_msgs10QuaternionE:00000000 _ZTIN13geometry_msgs10QuaternionE
     /tmp/cc20gKPT.s:9193   .rodata._ZTIN13geometry_msgs10QuaternionE:00000000 $d
     /tmp/cc20gKPT.s:9204   .rodata._ZTSN13geometry_msgs4PoseE:00000000 _ZTSN13geometry_msgs4PoseE
     /tmp/cc20gKPT.s:9211   .rodata._ZTIN13geometry_msgs4PoseE:00000000 _ZTIN13geometry_msgs4PoseE
     /tmp/cc20gKPT.s:9208   .rodata._ZTIN13geometry_msgs4PoseE:00000000 $d
     /tmp/cc20gKPT.s:9219   .rodata._ZTSN13geometry_msgs18PoseWithCovarianceE:00000000 _ZTSN13geometry_msgs18PoseWithCovarianceE
     /tmp/cc20gKPT.s:9226   .rodata._ZTIN13geometry_msgs18PoseWithCovarianceE:00000000 _ZTIN13geometry_msgs18PoseWithCovarianceE
     /tmp/cc20gKPT.s:9223   .rodata._ZTIN13geometry_msgs18PoseWithCovarianceE:00000000 $d
     /tmp/cc20gKPT.s:9234   .rodata._ZTSN13geometry_msgs7Vector3E:00000000 _ZTSN13geometry_msgs7Vector3E
     /tmp/cc20gKPT.s:9241   .rodata._ZTIN13geometry_msgs7Vector3E:00000000 _ZTIN13geometry_msgs7Vector3E
     /tmp/cc20gKPT.s:9238   .rodata._ZTIN13geometry_msgs7Vector3E:00000000 $d
     /tmp/cc20gKPT.s:9249   .rodata._ZTSN13geometry_msgs5TwistE:00000000 _ZTSN13geometry_msgs5TwistE
     /tmp/cc20gKPT.s:9256   .rodata._ZTIN13geometry_msgs5TwistE:00000000 _ZTIN13geometry_msgs5TwistE
     /tmp/cc20gKPT.s:9253   .rodata._ZTIN13geometry_msgs5TwistE:00000000 $d
     /tmp/cc20gKPT.s:9264   .rodata._ZTSN13geometry_msgs19TwistWithCovarianceE:00000000 _ZTSN13geometry_msgs19TwistWithCovarianceE
     /tmp/cc20gKPT.s:9271   .rodata._ZTIN13geometry_msgs19TwistWithCovarianceE:00000000 _ZTIN13geometry_msgs19TwistWithCovarianceE
     /tmp/cc20gKPT.s:9268   .rodata._ZTIN13geometry_msgs19TwistWithCovarianceE:00000000 $d
     /tmp/cc20gKPT.s:9279   .rodata._ZTSN8nav_msgs8OdometryE:00000000 _ZTSN8nav_msgs8OdometryE
     /tmp/cc20gKPT.s:9286   .rodata._ZTIN8nav_msgs8OdometryE:00000000 _ZTIN8nav_msgs8OdometryE
     /tmp/cc20gKPT.s:9283   .rodata._ZTIN8nav_msgs8OdometryE:00000000 $d
     /tmp/cc20gKPT.s:9294   .rodata._ZTSN12roberto_msgs10MotorStateE:00000000 _ZTSN12roberto_msgs10MotorStateE
     /tmp/cc20gKPT.s:9301   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 _ZTIN12roberto_msgs10MotorStateE
     /tmp/cc20gKPT.s:9298   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/cc20gKPT.s:9309   .rodata._ZTSN13geometry_msgs9TransformE:00000000 _ZTSN13geometry_msgs9TransformE
     /tmp/cc20gKPT.s:9316   .rodata._ZTIN13geometry_msgs9TransformE:00000000 _ZTIN13geometry_msgs9TransformE
     /tmp/cc20gKPT.s:9313   .rodata._ZTIN13geometry_msgs9TransformE:00000000 $d
     /tmp/cc20gKPT.s:9324   .rodata._ZTSN13geometry_msgs16TransformStampedE:00000000 _ZTSN13geometry_msgs16TransformStampedE
     /tmp/cc20gKPT.s:9331   .rodata._ZTIN13geometry_msgs16TransformStampedE:00000000 _ZTIN13geometry_msgs16TransformStampedE
     /tmp/cc20gKPT.s:9328   .rodata._ZTIN13geometry_msgs16TransformStampedE:00000000 $d
     /tmp/cc20gKPT.s:9339   .rodata._ZTSN2tf9tfMessageE:00000000 _ZTSN2tf9tfMessageE
     /tmp/cc20gKPT.s:9346   .rodata._ZTIN2tf9tfMessageE:00000000 _ZTIN2tf9tfMessageE
     /tmp/cc20gKPT.s:9343   .rodata._ZTIN2tf9tfMessageE:00000000 $d
     /tmp/cc20gKPT.s:9354   .rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/cc20gKPT.s:9362   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/cc20gKPT.s:9359   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 $d
     /tmp/cc20gKPT.s:9370   .rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/cc20gKPT.s:9377   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/cc20gKPT.s:9374   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/cc20gKPT.s:9385   .rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/cc20gKPT.s:9392   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/cc20gKPT.s:9389   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/cc20gKPT.s:9398   .rodata._ZTVN8std_msgs4TimeE:00000000 $d
     /tmp/cc20gKPT.s:9410   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/cc20gKPT.s:9422   .rodata._ZTVN14rosserial_msgs3LogE:00000000 $d
     /tmp/cc20gKPT.s:9434   .rodata._ZTVN14rosserial_msgs19RequestParamRequestE:00000000 $d
     /tmp/cc20gKPT.s:9446   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/cc20gKPT.s:9458   .rodata._ZTVN8std_msgs5UInt8E:00000000 $d
     /tmp/cc20gKPT.s:9470   .rodata._ZTVN8std_msgs6HeaderE:00000000 $d
     /tmp/cc20gKPT.s:9482   .rodata._ZTVN13geometry_msgs5PointE:00000000 $d
     /tmp/cc20gKPT.s:9494   .rodata._ZTVN13geometry_msgs10QuaternionE:00000000 $d
     /tmp/cc20gKPT.s:9506   .rodata._ZTVN13geometry_msgs4PoseE:00000000 $d
     /tmp/cc20gKPT.s:9518   .rodata._ZTVN13geometry_msgs18PoseWithCovarianceE:00000000 $d
     /tmp/cc20gKPT.s:9530   .rodata._ZTVN13geometry_msgs7Vector3E:00000000 $d
     /tmp/cc20gKPT.s:9542   .rodata._ZTVN13geometry_msgs5TwistE:00000000 $d
     /tmp/cc20gKPT.s:9554   .rodata._ZTVN13geometry_msgs19TwistWithCovarianceE:00000000 $d
     /tmp/cc20gKPT.s:9566   .rodata._ZTVN8nav_msgs8OdometryE:00000000 $d
     /tmp/cc20gKPT.s:9578   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/cc20gKPT.s:9590   .rodata._ZTVN13geometry_msgs9TransformE:00000000 $d
     /tmp/cc20gKPT.s:9602   .rodata._ZTVN13geometry_msgs16TransformStampedE:00000000 $d
     /tmp/cc20gKPT.s:9614   .rodata._ZTVN2tf9tfMessageE:00000000 $d
     /tmp/cc20gKPT.s:9626   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 $d
     /tmp/cc20gKPT.s:9637   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/cc20gKPT.s:9649   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/cc20gKPT.s:9871   .bss:000009b8 odom_pub
     /tmp/cc20gKPT.s:9903   .bss:00000a88 odom
     /tmp/cc20gKPT.s:9875   .bss:000009cc odom_broadcaster
     /tmp/cc20gKPT.s:9899   .bss:00000a44 odom_trans
     /tmp/cc20gKPT.s:9867   .bss:0000099c led_sub
     /tmp/cc20gKPT.s:9863   .bss:0000095c motor_sub
     /tmp/cc20gKPT.s:9821   .bss:00000001 waitForServos
     /tmp/cc20gKPT.s:9854   .bss:00000428 shuttingDown
     /tmp/cc20gKPT.s:9859   .bss:0000042c nh
     /tmp/cc20gKPT.s:9817   .bss:00000000 currentMode
     /tmp/cc20gKPT.s:9830   .bss:00000008 motorCmd
     /tmp/cc20gKPT.s:9826   .bss:00000004 L
     /tmp/cc20gKPT.s:9879   .bss:00000a30 d
     /tmp/cc20gKPT.s:9891   .bss:00000a3c rear_left
     /tmp/cc20gKPT.s:9895   .bss:00000a40 rear_right
     /tmp/cc20gKPT.s:9883   .bss:00000a34 front_left
     /tmp/cc20gKPT.s:9887   .bss:00000a38 front_right
     /tmp/cc20gKPT.s:9838   .bss:0000001c servo_right
     /tmp/cc20gKPT.s:9834   .bss:00000018 servo_left
     /tmp/cc20gKPT.s:9907   .bss:00000c18 GenerateStartStatus
     /tmp/cc20gKPT.s:9911   .bss:00000c19 NumberOfByteToReceive
     /tmp/cc20gKPT.s:9915   .bss:00000c1a RxBuffer
     /tmp/cc20gKPT.s:9919   .bss:00000c21 slaveAddress
     /tmp/cc20gKPT.s:9923   .bss:00000c22 Rx_Idx
     /tmp/cc20gKPT.s:9842   .bss:00000020 USART_CNTOUT
     /tmp/cc20gKPT.s:9846   .bss:00000024 USART_CNTIN
     /tmp/cc20gKPT.s:9850   .bss:00000028 USART_FIFO
     /tmp/cc20gKPT.s:9690   .rodata:00000000 _ZN14rosserial_msgsL12REQUESTPARAME
     /tmp/cc20gKPT.s:9813   .bss:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 _ZN13geometry_msgs16TransformStampedC5Ev

UNDEFINED SYMBOLS
__aeabi_unwind_cpp_pr0
led_set
__aeabi_fcmpeq
__aeabi_fmul
__aeabi_fadd
__aeabi_fdiv
__aeabi_f2d
__aeabi_d2f
__aeabi_fsub
__aeabi_fcmpgt
__aeabi_fcmplt
atan
strlen
memcpy
realloc
RCC_APB2PeriphClockCmd
GPIO_Init
USART_Cmd
USART_Init
USART_ITConfig
USART_GetITStatus
USART_ReceiveData
EXTI_GetITStatus
EXTI_ClearITPendingBit
__aeabi_unwind_cpp_pr1
millis
USART_SendData
_ZN3ros16normalizeSecNSecERmS0_
__aeabi_dmul
__aeabi_dadd
__aeabi_i2d
__aeabi_ddiv
__aeabi_f2iz
__aeabi_dsub
__aeabi_f2uiz
__aeabi_dcmpge
__aeabi_dcmple
RCC_Configuration
GPIO_PinRemapConfig
I2C1_Init
SysTick_Init
DEBUG_Init
SHUTDOWN_Init
LED_Init
delay
_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
_ZN13motorSettings12setRegulatorEffff
_ZN5motor11createMotorEP13motorSettings
sprintf
sqrt
memset
debug_toggle
sin
cos
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
