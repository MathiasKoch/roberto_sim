   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  20              		.align	1
  21              		.weak	_ZNK8std_msgs4Time9serializeEPh
  22              		.thumb
  23              		.thumb_func
  25              	_ZNK8std_msgs4Time9serializeEPh:
  26              		.fnstart
  27              	.LFB1046:
  28              		.file 1 "./lib/ros_lib/std_msgs/Time.h"
   1:./lib/ros_lib/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:./lib/ros_lib/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:./lib/ros_lib/std_msgs/Time.h **** 
   4:./lib/ros_lib/std_msgs/Time.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Time.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Time.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Time.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Time.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Time.h **** 
  10:./lib/ros_lib/std_msgs/Time.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Time.h **** {
  12:./lib/ros_lib/std_msgs/Time.h **** 
  13:./lib/ros_lib/std_msgs/Time.h ****   class Time : public ros::Msg
  14:./lib/ros_lib/std_msgs/Time.h ****   {
  15:./lib/ros_lib/std_msgs/Time.h ****     public:
  16:./lib/ros_lib/std_msgs/Time.h ****       ros::Time data;
  17:./lib/ros_lib/std_msgs/Time.h **** 
  18:./lib/ros_lib/std_msgs/Time.h ****     Time():
  19:./lib/ros_lib/std_msgs/Time.h ****       data()
  20:./lib/ros_lib/std_msgs/Time.h ****     {
  21:./lib/ros_lib/std_msgs/Time.h ****     }
  22:./lib/ros_lib/std_msgs/Time.h **** 
  23:./lib/ros_lib/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  29              		.loc 1 23 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  24:./lib/ros_lib/std_msgs/Time.h ****     {
  25:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  26:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  35              		.loc 1 26 0
  36 0000 4368     		ldr	r3, [r0, #4]
  37 0002 0B70     		strb	r3, [r1]
  27:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  38              		.loc 1 27 0
  39 0004 4368     		ldr	r3, [r0, #4]
  40 0006 1B0A     		lsrs	r3, r3, #8
  41 0008 4B70     		strb	r3, [r1, #1]
  28:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  42              		.loc 1 28 0
  43 000a C388     		ldrh	r3, [r0, #6]
  44 000c 8B70     		strb	r3, [r1, #2]
  29:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  45              		.loc 1 29 0
  46 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  47 0010 CB70     		strb	r3, [r1, #3]
  48              	.LVL1:
  30:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  31:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  49              		.loc 1 31 0
  50 0012 8368     		ldr	r3, [r0, #8]
  51 0014 0B71     		strb	r3, [r1, #4]
  32:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  52              		.loc 1 32 0
  53 0016 8368     		ldr	r3, [r0, #8]
  54 0018 1B0A     		lsrs	r3, r3, #8
  55 001a 4B71     		strb	r3, [r1, #5]
  33:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  56              		.loc 1 33 0
  57 001c 4389     		ldrh	r3, [r0, #10]
  58 001e 8B71     		strb	r3, [r1, #6]
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  59              		.loc 1 34 0
  60 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  35:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  36:./lib/ros_lib/std_msgs/Time.h ****       return offset;
  37:./lib/ros_lib/std_msgs/Time.h ****     }
  61              		.loc 1 37 0
  62 0022 0820     		movs	r0, #8
  63              	.LVL2:
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  64              		.loc 1 34 0
  65 0024 CB71     		strb	r3, [r1, #7]
  66              	.LVL3:
  67              		.loc 1 37 0
  68 0026 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE1046:
  71              		.cantunwind
  72              		.fnend
  74              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  75              		.align	1
  76              		.weak	_ZN8std_msgs4Time11deserializeEPh
  77              		.thumb
  78              		.thumb_func
  80              	_ZN8std_msgs4Time11deserializeEPh:
  81              		.fnstart
  82              	.LFB1047:
  38:./lib/ros_lib/std_msgs/Time.h **** 
  39:./lib/ros_lib/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  83              		.loc 1 39 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL4:
  40:./lib/ros_lib/std_msgs/Time.h ****     {
  41:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  42:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  89              		.loc 1 42 0
  90 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  91 0002 4360     		str	r3, [r0, #4]
  43:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  92              		.loc 1 43 0
  93 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  94 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  95 000a 4360     		str	r3, [r0, #4]
  44:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  96              		.loc 1 44 0
  97 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  98 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  99 0012 4360     		str	r3, [r0, #4]
  45:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 100              		.loc 1 45 0
 101 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 102 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 103 001a 4360     		str	r3, [r0, #4]
 104              	.LVL5:
  46:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  47:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 105              		.loc 1 47 0
 106 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 107 001e 8360     		str	r3, [r0, #8]
  48:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 108              		.loc 1 48 0
 109 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 110 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 111 0026 8360     		str	r3, [r0, #8]
  49:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 112              		.loc 1 49 0
 113 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 114 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 115 002e 8360     		str	r3, [r0, #8]
  50:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 116              		.loc 1 50 0
 117 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 118 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 119 0036 8360     		str	r3, [r0, #8]
 120              	.LVL6:
  51:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  52:./lib/ros_lib/std_msgs/Time.h ****      return offset;
  53:./lib/ros_lib/std_msgs/Time.h ****     }
 121              		.loc 1 53 0
 122 0038 0820     		movs	r0, #8
 123              	.LVL7:
 124 003a 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE1047:
 127              		.cantunwind
 128              		.fnend
 130              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 131              		.align	1
 132              		.weak	_ZN8std_msgs4Time7getTypeEv
 133              		.thumb
 134              		.thumb_func
 136              	_ZN8std_msgs4Time7getTypeEv:
 137              		.fnstart
 138              	.LFB1048:
  54:./lib/ros_lib/std_msgs/Time.h **** 
  55:./lib/ros_lib/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 139              		.loc 1 55 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144              	.LVL8:
 145              		.loc 1 55 0
 146 0000 0048     		ldr	r0, .L4
 147              	.LVL9:
 148 0002 7047     		bx	lr
 149              	.L5:
 150              		.align	2
 151              	.L4:
 152 0004 00000000 		.word	.LC2
 153              		.cfi_endproc
 154              	.LFE1048:
 155              		.cantunwind
 156              		.fnend
 158              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 159              		.align	1
 160              		.weak	_ZN8std_msgs4Time6getMD5Ev
 161              		.thumb
 162              		.thumb_func
 164              	_ZN8std_msgs4Time6getMD5Ev:
 165              		.fnstart
 166              	.LFB1049:
  56:./lib/ros_lib/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 167              		.loc 1 56 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL10:
 173              		.loc 1 56 0
 174 0000 0048     		ldr	r0, .L7
 175              	.LVL11:
 176 0002 7047     		bx	lr
 177              	.L8:
 178              		.align	2
 179              	.L7:
 180 0004 0E000000 		.word	.LC3
 181              		.cfi_endproc
 182              	.LFE1049:
 183              		.cantunwind
 184              		.fnend
 186              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 187              		.align	1
 188              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 189              		.thumb
 190              		.thumb_func
 192              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 193              		.fnstart
 194              	.LFB1055:
 195              		.file 2 "./lib/ros_lib/rosserial_msgs/TopicInfo.h"
   1:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   4:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   9:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** {
  11:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  12:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   {
  14:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  29:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     TopicInfo():
  30:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_id(0),
  31:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_name(""),
  32:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       message_type(""),
  33:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       md5sum(""),
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       buffer_size(0)
  35:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  36:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  37:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  39:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  40:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  43:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  46:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  51:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  56:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  59:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
  60:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
  61:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  62:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  68:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  69:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       return offset;
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  71:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
  73:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  74:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
  77:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  78:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
  80:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  83:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
  86:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  87:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
  89:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  92:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
  95:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  96:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
  98:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 101:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 104:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 105:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 106:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
 107:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
 108:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 109:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 110:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 111:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 112:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 113:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 115:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 116:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****      return offset;
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
 118:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 119:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 196              		.loc 2 119 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL12:
 202              		.loc 2 119 0
 203 0000 0048     		ldr	r0, .L10
 204              	.LVL13:
 205 0002 7047     		bx	lr
 206              	.L11:
 207              		.align	2
 208              	.L10:
 209 0004 2F000000 		.word	.LC4
 210              		.cfi_endproc
 211              	.LFE1055:
 212              		.cantunwind
 213              		.fnend
 215              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 216              		.align	1
 217              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 218              		.thumb
 219              		.thumb_func
 221              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 222              		.fnstart
 223              	.LFB1056:
 120:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 224              		.loc 2 120 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL14:
 230              		.loc 2 120 0
 231 0000 0048     		ldr	r0, .L13
 232              	.LVL15:
 233 0002 7047     		bx	lr
 234              	.L14:
 235              		.align	2
 236              	.L13:
 237 0004 48000000 		.word	.LC5
 238              		.cfi_endproc
 239              	.LFE1056:
 240              		.cantunwind
 241              		.fnend
 243              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 244              		.align	1
 245              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 246              		.thumb
 247              		.thumb_func
 249              	_ZN14rosserial_msgs3Log7getTypeEv:
 250              		.fnstart
 251              	.LFB1062:
 252              		.file 3 "./lib/ros_lib/rosserial_msgs/Log.h"
   1:./lib/ros_lib/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:./lib/ros_lib/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:./lib/ros_lib/rosserial_msgs/Log.h **** 
   4:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/Log.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/Log.h **** 
   9:./lib/ros_lib/rosserial_msgs/Log.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/Log.h **** {
  11:./lib/ros_lib/rosserial_msgs/Log.h **** 
  12:./lib/ros_lib/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/Log.h ****   {
  14:./lib/ros_lib/rosserial_msgs/Log.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/Log.h ****       uint8_t level;
  16:./lib/ros_lib/rosserial_msgs/Log.h ****       const char* msg;
  17:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  18:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  19:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  20:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  21:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  22:./lib/ros_lib/rosserial_msgs/Log.h **** 
  23:./lib/ros_lib/rosserial_msgs/Log.h ****     Log():
  24:./lib/ros_lib/rosserial_msgs/Log.h ****       level(0),
  25:./lib/ros_lib/rosserial_msgs/Log.h ****       msg("")
  26:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  27:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  28:./lib/ros_lib/rosserial_msgs/Log.h **** 
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  31:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  33:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  36:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  38:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  39:./lib/ros_lib/rosserial_msgs/Log.h ****       return offset;
  40:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  41:./lib/ros_lib/rosserial_msgs/Log.h **** 
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
  43:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  44:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
  46:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  47:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg;
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
  49:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  50:./lib/ros_lib/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
  51:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
  52:./lib/ros_lib/rosserial_msgs/Log.h ****       }
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
  55:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  56:./lib/ros_lib/rosserial_msgs/Log.h ****      return offset;
  57:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  58:./lib/ros_lib/rosserial_msgs/Log.h **** 
  59:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 253              		.loc 3 59 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL16:
 259              		.loc 3 59 0
 260 0000 0048     		ldr	r0, .L16
 261              	.LVL17:
 262 0002 7047     		bx	lr
 263              	.L17:
 264              		.align	2
 265              	.L16:
 266 0004 69000000 		.word	.LC6
 267              		.cfi_endproc
 268              	.LFE1062:
 269              		.cantunwind
 270              		.fnend
 272              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 273              		.align	1
 274              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 275              		.thumb
 276              		.thumb_func
 278              	_ZN14rosserial_msgs3Log6getMD5Ev:
 279              		.fnstart
 280              	.LFB1063:
  60:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 281              		.loc 3 60 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL18:
 287              		.loc 3 60 0
 288 0000 0048     		ldr	r0, .L19
 289              	.LVL19:
 290 0002 7047     		bx	lr
 291              	.L20:
 292              		.align	2
 293              	.L19:
 294 0004 7C000000 		.word	.LC7
 295              		.cfi_endproc
 296              	.LFE1063:
 297              		.cantunwind
 298              		.fnend
 300              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 301              		.align	1
 302              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 303              		.thumb
 304              		.thumb_func
 306              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 307              		.fnstart
 308              	.LFB1076:
 309              		.file 4 "./lib/ros_lib/rosserial_msgs/RequestParam.h"
   1:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   4:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <string.h>
   5:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   6:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   7:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
   8:./lib/ros_lib/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
   9:./lib/ros_lib/rosserial_msgs/RequestParam.h **** {
  10:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  11:./lib/ros_lib/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  12:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  13:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  14:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  15:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  16:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       const char* name;
  17:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  18:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamRequest():
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       name("")
  20:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  21:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  22:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  24:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  25:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  28:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  30:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  31:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  33:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  35:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  36:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  37:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  39:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  42:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  45:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  46:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  48:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  49:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
  50:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  51:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  52:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   };
  53:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  54:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  55:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  56:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  57:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  58:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  59:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  60:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  61:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float st_floats;
  62:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float * floats;
  63:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  64:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* st_strings;
  65:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* * strings;
  66:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  67:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamResponse():
  68:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length(0), ints(NULL),
  69:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length(0), floats(NULL),
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length(0), strings(NULL)
  71:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  72:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  73:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  75:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  76:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  82:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  83:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
  84:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
  85:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_intsi;
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  91:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  92:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  98:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  99:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 100:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 101:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_floatsi;
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 107:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 108:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 116:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 119:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 120:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 122:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 124:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 125:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 129:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 132:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 133:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
 134:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 135:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 136:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 137:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 138:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 139:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 140:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 142:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 144:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 148:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 151:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 152:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 153:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 154:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 155:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 156:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 157:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 158:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 161:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 163:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 170:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 172:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 175:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 178:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 180:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 181:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 183:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 184:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 310              		.loc 4 184 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL20:
 316              		.loc 4 184 0
 317 0000 0048     		ldr	r0, .L22
 318              	.LVL21:
 319 0002 7047     		bx	lr
 320              	.L23:
 321              		.align	2
 322              	.L22:
 323 0004 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE1076:
 326              		.cantunwind
 327              		.fnend
 329              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 330              		.align	1
 331              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 332              		.thumb
 333              		.thumb_func
 335              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 336              		.fnstart
 337              	.LFB1077:
 185:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 338              		.loc 4 185 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343              	.LVL22:
 344              		.loc 4 185 0
 345 0000 0048     		ldr	r0, .L25
 346              	.LVL23:
 347 0002 7047     		bx	lr
 348              	.L26:
 349              		.align	2
 350              	.L25:
 351 0004 9D000000 		.word	.LC8
 352              		.cfi_endproc
 353              	.LFE1077:
 354              		.cantunwind
 355              		.fnend
 357              		.section	.text._ZN8std_msgs19MultiArrayDimension7getTypeEv,"axG",%progbits,_ZN8std_msgs19MultiArra
 358              		.align	1
 359              		.weak	_ZN8std_msgs19MultiArrayDimension7getTypeEv
 360              		.thumb
 361              		.thumb_func
 363              	_ZN8std_msgs19MultiArrayDimension7getTypeEv:
 364              		.fnstart
 365              	.LFB1146:
 366              		.file 5 "./lib/ros_lib/std_msgs/MultiArrayDimension.h"
   1:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #ifndef _ROS_std_msgs_MultiArrayDimension_h
   2:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #define _ROS_std_msgs_MultiArrayDimension_h
   3:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
   4:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
   9:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** {
  11:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  12:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****   class MultiArrayDimension : public ros::Msg
  13:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****   {
  14:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     public:
  15:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       const char* label;
  16:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t size;
  17:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t stride;
  18:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  19:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     MultiArrayDimension():
  20:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       label(""),
  21:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       size(0),
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       stride(0)
  23:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  24:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  25:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     virtual int serialize(unsigned char *outbuffer) const
  27:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  28:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       int offset = 0;
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t length_label = strlen(this->label);
  30:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
  31:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
  32:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, this->label, length_label);
  33:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
  34:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 0) = (this->size >> (8 * 0)) & 0xFF;
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->size >> (8 * 1)) & 0xFF;
  36:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
  37:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->size >> (8 * 3)) & 0xFF;
  38:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
  39:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 0) = (this->stride >> (8 * 0)) & 0xFF;
  40:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->stride >> (8 * 1)) & 0xFF;
  41:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->stride >> (8 * 2)) & 0xFF;
  42:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->stride >> (8 * 3)) & 0xFF;
  43:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
  44:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       return offset;
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  46:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     virtual int deserialize(unsigned char *inbuffer)
  48:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  49:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       int offset = 0;
  50:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t length_label;
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(&length_label, (inbuffer + offset), sizeof(uint32_t));
  52:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       for(unsigned int k= offset; k< offset+length_label; ++k){
  54:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
  55:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       }
  56:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       inbuffer[offset+length_label-1]=0;
  57:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->label = (char *)(inbuffer + offset-1);
  58:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size =  ((uint32_t) (*(inbuffer + offset)));
  60:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  61:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  62:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  63:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
  64:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride =  ((uint32_t) (*(inbuffer + offset)));
  65:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  66:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  67:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  68:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
  69:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****      return offset;
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  71:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  72:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     const char * getType(){ return "std_msgs/MultiArrayDimension"; };
 367              		.loc 5 72 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372              	.LVL24:
 373              		.loc 5 72 0
 374 0000 0048     		ldr	r0, .L28
 375              	.LVL25:
 376 0002 7047     		bx	lr
 377              	.L29:
 378              		.align	2
 379              	.L28:
 380 0004 BE000000 		.word	.LC9
 381              		.cfi_endproc
 382              	.LFE1146:
 383              		.cantunwind
 384              		.fnend
 386              		.section	.text._ZN8std_msgs19MultiArrayDimension6getMD5Ev,"axG",%progbits,_ZN8std_msgs19MultiArray
 387              		.align	1
 388              		.weak	_ZN8std_msgs19MultiArrayDimension6getMD5Ev
 389              		.thumb
 390              		.thumb_func
 392              	_ZN8std_msgs19MultiArrayDimension6getMD5Ev:
 393              		.fnstart
 394              	.LFB1147:
  73:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     const char * getMD5(){ return "4cd0c83a8683deae40ecdac60e53bfa8"; };
 395              		.loc 5 73 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400              	.LVL26:
 401              		.loc 5 73 0
 402 0000 0048     		ldr	r0, .L31
 403              	.LVL27:
 404 0002 7047     		bx	lr
 405              	.L32:
 406              		.align	2
 407              	.L31:
 408 0004 DB000000 		.word	.LC10
 409              		.cfi_endproc
 410              	.LFE1147:
 411              		.cantunwind
 412              		.fnend
 414              		.section	.text._ZNK8std_msgs16MultiArrayLayout9serializeEPh,"axG",%progbits,_ZNK8std_msgs16MultiAr
 415              		.align	1
 416              		.weak	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 417              		.thumb
 418              		.thumb_func
 420              	_ZNK8std_msgs16MultiArrayLayout9serializeEPh:
 421              		.fnstart
 422              	.LFB1151:
 423              		.file 6 "./lib/ros_lib/std_msgs/MultiArrayLayout.h"
   1:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #ifndef _ROS_std_msgs_MultiArrayLayout_h
   2:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #define _ROS_std_msgs_MultiArrayLayout_h
   3:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
   4:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include "std_msgs/MultiArrayDimension.h"
   9:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  10:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** {
  12:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  13:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****   class MultiArrayLayout : public ros::Msg
  14:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****   {
  15:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     public:
  16:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint8_t dim_length;
  17:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       std_msgs::MultiArrayDimension st_dim;
  18:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       std_msgs::MultiArrayDimension * dim;
  19:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint32_t data_offset;
  20:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  21:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     MultiArrayLayout():
  22:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length(0), dim(NULL),
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       data_offset(0)
  24:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  25:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
  26:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  27:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     virtual int serialize(unsigned char *outbuffer) const
 424              		.loc 6 27 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              	.LVL28:
 429 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 430              		.save {r3, r4, r5, r6, r7, lr}
 431              	.LCFI0:
 432              		.cfi_def_cfa_offset 24
 433              		.cfi_offset 3, -24
 434              		.cfi_offset 4, -20
 435              		.cfi_offset 5, -16
 436              		.cfi_offset 6, -12
 437              		.cfi_offset 7, -8
 438              		.cfi_offset 14, -4
 439              		.loc 6 27 0
 440 0002 0D46     		mov	r5, r1
  28:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  29:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = dim_length;
 441              		.loc 6 30 0
 442 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  27:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 443              		.loc 6 27 0
 444 0006 0446     		mov	r4, r0
  31:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 445              		.loc 6 31 0
 446 0008 0020     		movs	r0, #0
 447              	.LVL29:
  30:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 448              		.loc 6 30 0
 449 000a 0B70     		strb	r3, [r1]
 450              	.LVL30:
 451              		.loc 6 31 0
 452 000c 4870     		strb	r0, [r1, #1]
 453              	.LVL31:
  32:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 454              		.loc 6 32 0
 455 000e 8870     		strb	r0, [r1, #2]
 456              	.LVL32:
  33:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 457              		.loc 6 33 0
 458 0010 C870     		strb	r0, [r1, #3]
 459              	.LVL33:
 460 0012 0426     		movs	r6, #4
 461              	.LVL34:
 462              	.L35:
 463              	.LBB133:
  34:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 464              		.loc 6 34 0 discriminator 3
 465 0014 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 466 0016 471C     		adds	r7, r0, #1
 467 0018 C0B2     		uxtb	r0, r0
 468 001a 8342     		cmp	r3, r0
 469 001c 05EB0601 		add	r1, r5, r6
 470 0020 08D9     		bls	.L34
  35:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->dim[i].serialize(outbuffer + offset);
 471              		.loc 6 35 0 discriminator 2
 472 0022 A369     		ldr	r3, [r4, #24]
 473 0024 0001     		lsls	r0, r0, #4
 474              	.LVL35:
 475 0026 1A58     		ldr	r2, [r3, r0]
 476 0028 1844     		add	r0, r0, r3
 477 002a 1268     		ldr	r2, [r2]
 478 002c 9047     		blx	r2
 479              	.LVL36:
 480 002e 0644     		add	r6, r6, r0
 481              	.LVL37:
  34:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 482              		.loc 6 34 0 discriminator 2
 483 0030 3846     		mov	r0, r7
 484 0032 EFE7     		b	.L35
 485              	.LVL38:
 486              	.L34:
 487              	.LBE133:
  36:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
  37:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 0) = (this->data_offset >> (8 * 0)) & 0xFF;
 488              		.loc 6 37 0
 489 0034 E369     		ldr	r3, [r4, #28]
  38:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
  39:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 2) = (this->data_offset >> (8 * 2)) & 0xFF;
  40:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 3) = (this->data_offset >> (8 * 3)) & 0xFF;
  41:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
  42:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       return offset;
  43:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
 490              		.loc 6 43 0
 491 0036 301D     		adds	r0, r6, #4
 492              	.LVL39:
  37:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
 493              		.loc 6 37 0
 494 0038 AB55     		strb	r3, [r5, r6]
  38:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
 495              		.loc 6 38 0
 496 003a E369     		ldr	r3, [r4, #28]
 497 003c 1B0A     		lsrs	r3, r3, #8
 498 003e 4B70     		strb	r3, [r1, #1]
  39:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 3) = (this->data_offset >> (8 * 3)) & 0xFF;
 499              		.loc 6 39 0
 500 0040 E38B     		ldrh	r3, [r4, #30]
 501 0042 8B70     		strb	r3, [r1, #2]
  40:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
 502              		.loc 6 40 0
 503 0044 E37F     		ldrb	r3, [r4, #31]	@ zero_extendqisi2
 504 0046 CB70     		strb	r3, [r1, #3]
 505              	.LVL40:
 506              		.loc 6 43 0
 507 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 508              		.cfi_endproc
 509              	.LFE1151:
 510              		.fnend
 512              		.section	.text._ZN8std_msgs16MultiArrayLayout7getTypeEv,"axG",%progbits,_ZN8std_msgs16MultiArrayLa
 513              		.align	1
 514              		.weak	_ZN8std_msgs16MultiArrayLayout7getTypeEv
 515              		.thumb
 516              		.thumb_func
 518              	_ZN8std_msgs16MultiArrayLayout7getTypeEv:
 519              		.fnstart
 520              	.LFB1153:
  44:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     virtual int deserialize(unsigned char *inbuffer)
  46:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  47:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       int offset = 0;
  48:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint8_t dim_lengthT = *(inbuffer + offset++);
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       if(dim_lengthT > dim_length)
  50:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
  51:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += 3;
  52:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length = dim_lengthT;
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
  56:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset =  ((uint32_t) (*(inbuffer + offset)));
  58:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  59:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  60:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  61:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
  62:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****      return offset;
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
  64:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  65:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     const char * getType(){ return "std_msgs/MultiArrayLayout"; };
 521              		.loc 6 65 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526              	.LVL41:
 527              		.loc 6 65 0
 528 0000 0048     		ldr	r0, .L38
 529              	.LVL42:
 530 0002 7047     		bx	lr
 531              	.L39:
 532              		.align	2
 533              	.L38:
 534 0004 FC000000 		.word	.LC11
 535              		.cfi_endproc
 536              	.LFE1153:
 537              		.cantunwind
 538              		.fnend
 540              		.section	.text._ZN8std_msgs16MultiArrayLayout6getMD5Ev,"axG",%progbits,_ZN8std_msgs16MultiArrayLay
 541              		.align	1
 542              		.weak	_ZN8std_msgs16MultiArrayLayout6getMD5Ev
 543              		.thumb
 544              		.thumb_func
 546              	_ZN8std_msgs16MultiArrayLayout6getMD5Ev:
 547              		.fnstart
 548              	.LFB1154:
  66:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     const char * getMD5(){ return "0fed2a11c13e11c5571b4e2a995a91a3"; };
 549              		.loc 6 66 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 554              	.LVL43:
 555              		.loc 6 66 0
 556 0000 0048     		ldr	r0, .L41
 557              	.LVL44:
 558 0002 7047     		bx	lr
 559              	.L42:
 560              		.align	2
 561              	.L41:
 562 0004 16010000 		.word	.LC12
 563              		.cfi_endproc
 564              	.LFE1154:
 565              		.cantunwind
 566              		.fnend
 568              		.section	.text._ZNK8std_msgs17Float32MultiArray9serializeEPh,"axG",%progbits,_ZNK8std_msgs17Float3
 569              		.align	1
 570              		.weak	_ZNK8std_msgs17Float32MultiArray9serializeEPh
 571              		.thumb
 572              		.thumb_func
 574              	_ZNK8std_msgs17Float32MultiArray9serializeEPh:
 575              		.fnstart
 576              	.LFB1158:
 577              		.file 7 "./lib/ros_lib/std_msgs/Float32MultiArray.h"
   1:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #ifndef _ROS_std_msgs_Float32MultiArray_h
   2:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #define _ROS_std_msgs_Float32MultiArray_h
   3:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
   4:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include "std_msgs/MultiArrayLayout.h"
   9:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  10:./lib/ros_lib/std_msgs/Float32MultiArray.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Float32MultiArray.h **** {
  12:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  13:./lib/ros_lib/std_msgs/Float32MultiArray.h ****   class Float32MultiArray : public ros::Msg
  14:./lib/ros_lib/std_msgs/Float32MultiArray.h ****   {
  15:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     public:
  16:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       std_msgs::MultiArrayLayout layout;
  17:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_length;
  18:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       float st_data;
  19:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       float * data;
  20:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  21:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     Float32MultiArray():
  22:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       layout(),
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       data_length(0), data(NULL)
  24:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  25:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
  26:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  27:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     virtual int serialize(unsigned char *outbuffer) const
 578              		.loc 7 27 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              	.LVL45:
 583 0000 70B5     		push	{r4, r5, r6, lr}
 584              		.save {r4, r5, r6, lr}
 585              	.LCFI1:
 586              		.cfi_def_cfa_offset 16
 587              		.cfi_offset 4, -16
 588              		.cfi_offset 5, -12
 589              		.cfi_offset 6, -8
 590              		.cfi_offset 14, -4
 591              		.loc 7 27 0
 592 0002 0446     		mov	r4, r0
  28:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  29:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += this->layout.serialize(outbuffer + offset);
 593              		.loc 7 30 0
 594 0004 0430     		adds	r0, r0, #4
 595              	.LVL46:
  27:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 596              		.loc 7 27 0
 597 0006 0D46     		mov	r5, r1
 598              		.loc 7 30 0
 599 0008 FFF7FEFF 		bl	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 600              	.LVL47:
  31:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = data_length;
 601              		.loc 7 31 0
 602 000c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
  32:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 603              		.loc 7 32 0
 604 0010 0022     		movs	r2, #0
  31:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = data_length;
 605              		.loc 7 31 0
 606 0012 2B54     		strb	r3, [r5, r0]
 607              	.LVL48:
 608              		.loc 7 32 0
 609 0014 2B18     		adds	r3, r5, r0
 610 0016 0430     		adds	r0, r0, #4
 611              	.LVL49:
 612 0018 5A70     		strb	r2, [r3, #1]
 613              	.LVL50:
  33:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 614              		.loc 7 33 0
 615 001a 9A70     		strb	r2, [r3, #2]
  34:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 616              		.loc 7 34 0
 617 001c DA70     		strb	r2, [r3, #3]
 618              	.LVL51:
 619 001e 2B18     		adds	r3, r5, r0
 620              	.LVL52:
 621              	.L45:
 622              	.LBB134:
  35:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
 623              		.loc 7 35 0 discriminator 3
 624 0020 94F82460 		ldrb	r6, [r4, #36]	@ zero_extendqisi2
 625 0024 511C     		adds	r1, r2, #1
 626 0026 D2B2     		uxtb	r2, r2
 627 0028 9642     		cmp	r6, r2
 628 002a A3EB0500 		sub	r0, r3, r5
 629              	.LVL53:
 630 002e 03F10403 		add	r3, r3, #4
 631 0032 0FD9     		bls	.L44
 632              	.LBB135:
  36:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
  37:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         float real;
  38:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         uint32_t base;
  39:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       } u_datai;
  40:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_datai.real = this->data[i];
 633              		.loc 7 40 0 discriminator 2
 634 0034 E06A     		ldr	r0, [r4, #44]
 635              	.LVL54:
  41:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 0) = (u_datai.base >> (8 * 0)) & 0xFF;
 636              		.loc 7 41 0 discriminator 2
 637 0036 50F82220 		ldr	r2, [r0, r2, lsl #2]
  42:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 1) = (u_datai.base >> (8 * 1)) & 0xFF;
 638              		.loc 7 42 0 discriminator 2
 639 003a 100A     		lsrs	r0, r2, #8
  41:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 0) = (u_datai.base >> (8 * 0)) & 0xFF;
 640              		.loc 7 41 0 discriminator 2
 641 003c 03F8042C 		strb	r2, [r3, #-4]
 642              		.loc 7 42 0 discriminator 2
 643 0040 03F8030C 		strb	r0, [r3, #-3]
  43:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 2) = (u_datai.base >> (8 * 2)) & 0xFF;
 644              		.loc 7 43 0 discriminator 2
 645 0044 100C     		lsrs	r0, r2, #16
  44:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 3) = (u_datai.base >> (8 * 3)) & 0xFF;
 646              		.loc 7 44 0 discriminator 2
 647 0046 120E     		lsrs	r2, r2, #24
 648 0048 03F8012C 		strb	r2, [r3, #-1]
 649              	.LVL55:
  43:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 2) = (u_datai.base >> (8 * 2)) & 0xFF;
 650              		.loc 7 43 0 discriminator 2
 651 004c 03F8020C 		strb	r0, [r3, #-2]
 652              	.LBE135:
  35:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 653              		.loc 7 35 0 discriminator 2
 654 0050 0A46     		mov	r2, r1
 655 0052 E5E7     		b	.L45
 656              	.LVL56:
 657              	.L44:
 658              	.LBE134:
  45:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->data[i]);
  46:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
  47:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       return offset;
  48:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
 659              		.loc 7 48 0
 660 0054 70BD     		pop	{r4, r5, r6, pc}
 661              		.cfi_endproc
 662              	.LFE1158:
 663              		.fnend
 665              		.section	.text._ZN8std_msgs17Float32MultiArray7getTypeEv,"axG",%progbits,_ZN8std_msgs17Float32Mult
 666              		.align	1
 667              		.weak	_ZN8std_msgs17Float32MultiArray7getTypeEv
 668              		.thumb
 669              		.thumb_func
 671              	_ZN8std_msgs17Float32MultiArray7getTypeEv:
 672              		.fnstart
 673              	.LFB1160:
  49:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  52:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       int offset = 0;
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += this->layout.deserialize(inbuffer + offset);
  54:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       if(data_lengthT > data_length)
  56:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
  57:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += 3;
  58:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       data_length = data_lengthT;
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
  60:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
  61:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         float real;
  62:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         uint32_t base;
  63:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       } u_st_data;
  64:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base = 0;
  65:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
  66:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  67:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  68:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  69:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       this->st_data = u_st_data.real;
  70:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->st_data);
  71:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         memcpy( &(this->data[i]), &(this->st_data), sizeof(float));
  72:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
  73:./lib/ros_lib/std_msgs/Float32MultiArray.h ****      return offset;
  74:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
  75:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  76:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     const char * getType(){ return "std_msgs/Float32MultiArray"; };
 674              		.loc 7 76 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		@ link register save eliminated.
 679              	.LVL57:
 680              		.loc 7 76 0
 681 0000 0048     		ldr	r0, .L47
 682              	.LVL58:
 683 0002 7047     		bx	lr
 684              	.L48:
 685              		.align	2
 686              	.L47:
 687 0004 37010000 		.word	.LC13
 688              		.cfi_endproc
 689              	.LFE1160:
 690              		.cantunwind
 691              		.fnend
 693              		.section	.text._ZN8std_msgs17Float32MultiArray6getMD5Ev,"axG",%progbits,_ZN8std_msgs17Float32Multi
 694              		.align	1
 695              		.weak	_ZN8std_msgs17Float32MultiArray6getMD5Ev
 696              		.thumb
 697              		.thumb_func
 699              	_ZN8std_msgs17Float32MultiArray6getMD5Ev:
 700              		.fnstart
 701              	.LFB1161:
  77:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     const char * getMD5(){ return "6a40e0ffa6a17a503ac3f8616991b1f6"; };
 702              		.loc 7 77 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707              	.LVL59:
 708              		.loc 7 77 0
 709 0000 0048     		ldr	r0, .L50
 710              	.LVL60:
 711 0002 7047     		bx	lr
 712              	.L51:
 713              		.align	2
 714              	.L50:
 715 0004 52010000 		.word	.LC14
 716              		.cfi_endproc
 717              	.LFE1161:
 718              		.cantunwind
 719              		.fnend
 721              		.section	.text._ZN8std_msgs6Header7getTypeEv,"axG",%progbits,_ZN8std_msgs6Header7getTypeEv,comdat
 722              		.align	1
 723              		.weak	_ZN8std_msgs6Header7getTypeEv
 724              		.thumb
 725              		.thumb_func
 727              	_ZN8std_msgs6Header7getTypeEv:
 728              		.fnstart
 729              	.LFB1181:
 730              		.file 8 "./lib/ros_lib/std_msgs/Header.h"
   1:./lib/ros_lib/std_msgs/Header.h **** #ifndef _ROS_std_msgs_Header_h
   2:./lib/ros_lib/std_msgs/Header.h **** #define _ROS_std_msgs_Header_h
   3:./lib/ros_lib/std_msgs/Header.h **** 
   4:./lib/ros_lib/std_msgs/Header.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Header.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Header.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Header.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Header.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Header.h **** 
  10:./lib/ros_lib/std_msgs/Header.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Header.h **** {
  12:./lib/ros_lib/std_msgs/Header.h **** 
  13:./lib/ros_lib/std_msgs/Header.h ****   class Header : public ros::Msg
  14:./lib/ros_lib/std_msgs/Header.h ****   {
  15:./lib/ros_lib/std_msgs/Header.h ****     public:
  16:./lib/ros_lib/std_msgs/Header.h ****       uint32_t seq;
  17:./lib/ros_lib/std_msgs/Header.h ****       ros::Time stamp;
  18:./lib/ros_lib/std_msgs/Header.h ****       const char* frame_id;
  19:./lib/ros_lib/std_msgs/Header.h **** 
  20:./lib/ros_lib/std_msgs/Header.h ****     Header():
  21:./lib/ros_lib/std_msgs/Header.h ****       seq(0),
  22:./lib/ros_lib/std_msgs/Header.h ****       stamp(),
  23:./lib/ros_lib/std_msgs/Header.h ****       frame_id("")
  24:./lib/ros_lib/std_msgs/Header.h ****     {
  25:./lib/ros_lib/std_msgs/Header.h ****     }
  26:./lib/ros_lib/std_msgs/Header.h **** 
  27:./lib/ros_lib/std_msgs/Header.h ****     virtual int serialize(unsigned char *outbuffer) const
  28:./lib/ros_lib/std_msgs/Header.h ****     {
  29:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->seq >> (8 * 0)) & 0xFF;
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
  33:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
  34:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
  38:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
  39:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
  43:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
  44:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  45:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id = strlen(this->frame_id);
  46:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
  47:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  48:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, this->frame_id, length_frame_id);
  49:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  50:./lib/ros_lib/std_msgs/Header.h ****       return offset;
  51:./lib/ros_lib/std_msgs/Header.h ****     }
  52:./lib/ros_lib/std_msgs/Header.h **** 
  53:./lib/ros_lib/std_msgs/Header.h ****     virtual int deserialize(unsigned char *inbuffer)
  54:./lib/ros_lib/std_msgs/Header.h ****     {
  55:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq =  ((uint32_t) (*(inbuffer + offset)));
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  59:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  60:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  64:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  65:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  69:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  70:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  71:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id;
  72:./lib/ros_lib/std_msgs/Header.h ****       memcpy(&length_frame_id, (inbuffer + offset), sizeof(uint32_t));
  73:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  74:./lib/ros_lib/std_msgs/Header.h ****       for(unsigned int k= offset; k< offset+length_frame_id; ++k){
  75:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
  76:./lib/ros_lib/std_msgs/Header.h ****       }
  77:./lib/ros_lib/std_msgs/Header.h ****       inbuffer[offset+length_frame_id-1]=0;
  78:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
  79:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  80:./lib/ros_lib/std_msgs/Header.h ****      return offset;
  81:./lib/ros_lib/std_msgs/Header.h ****     }
  82:./lib/ros_lib/std_msgs/Header.h **** 
  83:./lib/ros_lib/std_msgs/Header.h ****     const char * getType(){ return "std_msgs/Header"; };
 731              		.loc 8 83 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              		@ link register save eliminated.
 736              	.LVL61:
 737              		.loc 8 83 0
 738 0000 0048     		ldr	r0, .L53
 739              	.LVL62:
 740 0002 7047     		bx	lr
 741              	.L54:
 742              		.align	2
 743              	.L53:
 744 0004 73010000 		.word	.LC15
 745              		.cfi_endproc
 746              	.LFE1181:
 747              		.cantunwind
 748              		.fnend
 750              		.section	.text._ZN8std_msgs6Header6getMD5Ev,"axG",%progbits,_ZN8std_msgs6Header6getMD5Ev,comdat
 751              		.align	1
 752              		.weak	_ZN8std_msgs6Header6getMD5Ev
 753              		.thumb
 754              		.thumb_func
 756              	_ZN8std_msgs6Header6getMD5Ev:
 757              		.fnstart
 758              	.LFB1182:
  84:./lib/ros_lib/std_msgs/Header.h ****     const char * getMD5(){ return "2176decaecbce78abc3b96ef049fabed"; };
 759              		.loc 8 84 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 0
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763              		@ link register save eliminated.
 764              	.LVL63:
 765              		.loc 8 84 0
 766 0000 0048     		ldr	r0, .L56
 767              	.LVL64:
 768 0002 7047     		bx	lr
 769              	.L57:
 770              		.align	2
 771              	.L56:
 772 0004 83010000 		.word	.LC16
 773              		.cfi_endproc
 774              	.LFE1182:
 775              		.cantunwind
 776              		.fnend
 778              		.section	.text._ZN12roberto_msgs10MotorState7getTypeEv,"axG",%progbits,_ZN12roberto_msgs10MotorSta
 779              		.align	1
 780              		.weak	_ZN12roberto_msgs10MotorState7getTypeEv
 781              		.thumb
 782              		.thumb_func
 784              	_ZN12roberto_msgs10MotorState7getTypeEv:
 785              		.fnstart
 786              	.LFB1251:
 787              		.file 9 "./lib/ros_lib/roberto_msgs/MotorState.h"
   1:./lib/ros_lib/roberto_msgs/MotorState.h **** #ifndef _ROS_roberto_msgs_MotorState_h
   2:./lib/ros_lib/roberto_msgs/MotorState.h **** #define _ROS_roberto_msgs_MotorState_h
   3:./lib/ros_lib/roberto_msgs/MotorState.h **** 
   4:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdint.h>
   5:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <string.h>
   6:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdlib.h>
   7:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "ros/msg.h"
   8:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "std_msgs/Header.h"
   9:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  10:./lib/ros_lib/roberto_msgs/MotorState.h **** namespace roberto_msgs
  11:./lib/ros_lib/roberto_msgs/MotorState.h **** {
  12:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  13:./lib/ros_lib/roberto_msgs/MotorState.h ****   class MotorState : public ros::Msg
  14:./lib/ros_lib/roberto_msgs/MotorState.h ****   {
  15:./lib/ros_lib/roberto_msgs/MotorState.h ****     public:
  16:./lib/ros_lib/roberto_msgs/MotorState.h ****       std_msgs::Header header;
  17:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_angle;
  18:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_velocity;
  19:./lib/ros_lib/roberto_msgs/MotorState.h ****       float speed;
  20:./lib/ros_lib/roberto_msgs/MotorState.h ****       float acceleration;
  21:./lib/ros_lib/roberto_msgs/MotorState.h ****       uint8_t mode;
  22:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_AUTO = 0 };
  23:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_PIVOT = 1 };
  24:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SPIN = 2 };
  25:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SIDEWAYS = 3 };
  26:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  27:./lib/ros_lib/roberto_msgs/MotorState.h ****     MotorState():
  28:./lib/ros_lib/roberto_msgs/MotorState.h ****       header(),
  29:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_angle(0),
  30:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_velocity(0),
  31:./lib/ros_lib/roberto_msgs/MotorState.h ****       speed(0),
  32:./lib/ros_lib/roberto_msgs/MotorState.h ****       acceleration(0),
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****       mode(0)
  34:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  35:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  36:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int serialize(unsigned char *outbuffer) const
  38:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  39:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.serialize(outbuffer + offset);
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
  46:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  47:./lib/ros_lib/roberto_msgs/MotorState.h ****       return offset;
  48:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  49:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  52:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.deserialize(inbuffer + offset);
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
  59:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  60:./lib/ros_lib/roberto_msgs/MotorState.h ****      return offset;
  61:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  62:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  63:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getType(){ return "roberto_msgs/MotorState"; };
 788              		.loc 9 63 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792              		@ link register save eliminated.
 793              	.LVL65:
 794              		.loc 9 63 0
 795 0000 0048     		ldr	r0, .L59
 796              	.LVL66:
 797 0002 7047     		bx	lr
 798              	.L60:
 799              		.align	2
 800              	.L59:
 801 0004 A4010000 		.word	.LC17
 802              		.cfi_endproc
 803              	.LFE1251:
 804              		.cantunwind
 805              		.fnend
 807              		.section	.text._ZN12roberto_msgs10MotorState6getMD5Ev,"axG",%progbits,_ZN12roberto_msgs10MotorStat
 808              		.align	1
 809              		.weak	_ZN12roberto_msgs10MotorState6getMD5Ev
 810              		.thumb
 811              		.thumb_func
 813              	_ZN12roberto_msgs10MotorState6getMD5Ev:
 814              		.fnstart
 815              	.LFB1252:
  64:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getMD5(){ return "e8b5d1162b85151c49e02b8224796c0e"; };
 816              		.loc 9 64 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820              		@ link register save eliminated.
 821              	.LVL67:
 822              		.loc 9 64 0
 823 0000 0048     		ldr	r0, .L62
 824              	.LVL68:
 825 0002 7047     		bx	lr
 826              	.L63:
 827              		.align	2
 828              	.L62:
 829 0004 BC010000 		.word	.LC18
 830              		.cfi_endproc
 831              	.LFE1252:
 832              		.cantunwind
 833              		.fnend
 835              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv,"axG",%
 836              		.align	1
 837              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv
 838              		.thumb
 839              		.thumb_func
 841              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv:
 842              		.fnstart
 843              	.LFB1317:
 844              		.file 10 "./lib/ros_lib/ros/node_handle.h"
   1:./lib/ros_lib/ros/node_handle.h **** /*
   2:./lib/ros_lib/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/node_handle.h ****  *
   4:./lib/ros_lib/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/node_handle.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/node_handle.h ****  *
   7:./lib/ros_lib/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/node_handle.h ****  * are met:
  10:./lib/ros_lib/ros/node_handle.h ****  *
  11:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/node_handle.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/node_handle.h ****  *
  21:./lib/ros_lib/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/node_handle.h ****  */
  34:./lib/ros_lib/ros/node_handle.h **** 
  35:./lib/ros_lib/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:./lib/ros_lib/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:./lib/ros_lib/ros/node_handle.h **** 
  38:./lib/ros_lib/ros/node_handle.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/node_handle.h **** 
  40:./lib/ros_lib/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:./lib/ros_lib/ros/node_handle.h **** 
  45:./lib/ros_lib/ros/node_handle.h **** #define SYNC_SECONDS        5
  46:./lib/ros_lib/ros/node_handle.h **** 
  47:./lib/ros_lib/ros/node_handle.h **** #define MODE_FIRST_FF       0
  48:./lib/ros_lib/ros/node_handle.h **** /*
  49:./lib/ros_lib/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  50:./lib/ros_lib/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  51:./lib/ros_lib/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  52:./lib/ros_lib/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  53:./lib/ros_lib/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  54:./lib/ros_lib/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  55:./lib/ros_lib/ros/node_handle.h ****  */
  56:./lib/ros_lib/ros/node_handle.h **** #define MODE_PROTOCOL_VER   1
  57:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER1		0xff // through groovy
  58:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER2		0xfe // in hydro
  59:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER 		PROTOCOL_VER2
  60:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_L         2
  61:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_H         3
  62:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_CHECKSUM  4   // checksum for msg size received from size L and H
  63:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_L        5   // waiting for topic id
  64:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_H        6
  65:./lib/ros_lib/ros/node_handle.h **** #define MODE_MESSAGE        7
  66:./lib/ros_lib/ros/node_handle.h **** #define MODE_MSG_CHECKSUM   8   // checksum for msg and topic id
  67:./lib/ros_lib/ros/node_handle.h **** 
  68:./lib/ros_lib/ros/node_handle.h **** 
  69:./lib/ros_lib/ros/node_handle.h **** #define MSG_TIMEOUT 20  //20 milliseconds to recieve all of message data
  70:./lib/ros_lib/ros/node_handle.h **** 
  71:./lib/ros_lib/ros/node_handle.h **** #include "msg.h"
  72:./lib/ros_lib/ros/node_handle.h **** 
  73:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  74:./lib/ros_lib/ros/node_handle.h **** 
  75:./lib/ros_lib/ros/node_handle.h ****   class NodeHandleBase_{
  76:./lib/ros_lib/ros/node_handle.h ****     public:
  77:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg* msg)=0;
  78:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce()=0;
  79:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected()=0;
  80:./lib/ros_lib/ros/node_handle.h ****     };
  81:./lib/ros_lib/ros/node_handle.h **** }
  82:./lib/ros_lib/ros/node_handle.h **** 
  83:./lib/ros_lib/ros/node_handle.h **** #include "publisher.h"
  84:./lib/ros_lib/ros/node_handle.h **** #include "subscriber.h"
  85:./lib/ros_lib/ros/node_handle.h **** #include "service_server.h"
  86:./lib/ros_lib/ros/node_handle.h **** #include "service_client.h"
  87:./lib/ros_lib/ros/node_handle.h **** 
  88:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  89:./lib/ros_lib/ros/node_handle.h **** 
  90:./lib/ros_lib/ros/node_handle.h ****   using rosserial_msgs::TopicInfo;
  91:./lib/ros_lib/ros/node_handle.h **** 
  92:./lib/ros_lib/ros/node_handle.h ****   /* Node Handle */
  93:./lib/ros_lib/ros/node_handle.h ****   template<class Hardware,
  94:./lib/ros_lib/ros/node_handle.h ****            int MAX_SUBSCRIBERS=25,
  95:./lib/ros_lib/ros/node_handle.h ****            int MAX_PUBLISHERS=25,
  96:./lib/ros_lib/ros/node_handle.h ****            int INPUT_SIZE=1024,
  97:./lib/ros_lib/ros/node_handle.h ****            int OUTPUT_SIZE=1024>
  98:./lib/ros_lib/ros/node_handle.h ****   class NodeHandle_ : public NodeHandleBase_
  99:./lib/ros_lib/ros/node_handle.h ****   {
 100:./lib/ros_lib/ros/node_handle.h ****     protected:
 101:./lib/ros_lib/ros/node_handle.h ****       Hardware hardware_;
 102:./lib/ros_lib/ros/node_handle.h **** 
 103:./lib/ros_lib/ros/node_handle.h ****       /* time used for syncing */
 104:./lib/ros_lib/ros/node_handle.h ****       uint32_t rt_time;
 105:./lib/ros_lib/ros/node_handle.h **** 
 106:./lib/ros_lib/ros/node_handle.h ****       /* used for computing current time */
 107:./lib/ros_lib/ros/node_handle.h ****       uint32_t sec_offset, nsec_offset;
 108:./lib/ros_lib/ros/node_handle.h **** 
 109:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_in[INPUT_SIZE];
 110:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_out[OUTPUT_SIZE];
 111:./lib/ros_lib/ros/node_handle.h **** 
 112:./lib/ros_lib/ros/node_handle.h ****       Publisher * publishers[MAX_PUBLISHERS];
 113:./lib/ros_lib/ros/node_handle.h ****       Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 114:./lib/ros_lib/ros/node_handle.h **** 
 115:./lib/ros_lib/ros/node_handle.h ****       /*
 116:./lib/ros_lib/ros/node_handle.h ****        * Setup Functions
 117:./lib/ros_lib/ros/node_handle.h ****        */
 118:./lib/ros_lib/ros/node_handle.h ****     public:
 119:./lib/ros_lib/ros/node_handle.h ****       NodeHandle_() : configured_(false) {
 120:./lib/ros_lib/ros/node_handle.h **** 
 121:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_PUBLISHERS; i++)
 122:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 123:./lib/ros_lib/ros/node_handle.h **** 
 124:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_SUBSCRIBERS; i++)
 125:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 126:./lib/ros_lib/ros/node_handle.h **** 
 127:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< INPUT_SIZE; i++)
 128:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 129:./lib/ros_lib/ros/node_handle.h **** 
 130:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< OUTPUT_SIZE; i++)
 131:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 132:./lib/ros_lib/ros/node_handle.h **** 
 133:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 134:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 135:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats_length = 0;
 136:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats = NULL;
 137:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 138:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 139:./lib/ros_lib/ros/node_handle.h ****       }
 140:./lib/ros_lib/ros/node_handle.h **** 
 141:./lib/ros_lib/ros/node_handle.h ****       Hardware* getHardware(){
 142:./lib/ros_lib/ros/node_handle.h ****         return &hardware_;
 143:./lib/ros_lib/ros/node_handle.h ****       }
 144:./lib/ros_lib/ros/node_handle.h **** 
 145:./lib/ros_lib/ros/node_handle.h ****       /* Start serial, initialize buffers */
 146:./lib/ros_lib/ros/node_handle.h ****       void initNode(){
 147:./lib/ros_lib/ros/node_handle.h ****         hardware_.init();
 148:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 149:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 150:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 151:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 152:./lib/ros_lib/ros/node_handle.h ****       };
 153:./lib/ros_lib/ros/node_handle.h **** 
 154:./lib/ros_lib/ros/node_handle.h ****       /* Start a named port, which may be network server IP, initialize buffers */
 155:./lib/ros_lib/ros/node_handle.h ****       void initNode(char *portName){
 156:./lib/ros_lib/ros/node_handle.h ****         hardware_.init(portName);
 157:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 158:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 159:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 160:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 161:./lib/ros_lib/ros/node_handle.h ****       };
 162:./lib/ros_lib/ros/node_handle.h **** 
 163:./lib/ros_lib/ros/node_handle.h ****     protected:
 164:./lib/ros_lib/ros/node_handle.h ****       //State machine variables for spinOnce
 165:./lib/ros_lib/ros/node_handle.h ****       int mode_;
 166:./lib/ros_lib/ros/node_handle.h ****       int bytes_;
 167:./lib/ros_lib/ros/node_handle.h ****       int topic_;
 168:./lib/ros_lib/ros/node_handle.h ****       int index_;
 169:./lib/ros_lib/ros/node_handle.h ****       int checksum_;
 170:./lib/ros_lib/ros/node_handle.h **** 
 171:./lib/ros_lib/ros/node_handle.h ****       bool configured_;
 172:./lib/ros_lib/ros/node_handle.h **** 
 173:./lib/ros_lib/ros/node_handle.h ****       /* used for syncing the time */
 174:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_time;
 175:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_receive_time;
 176:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_msg_timeout_time;
 177:./lib/ros_lib/ros/node_handle.h **** 
 178:./lib/ros_lib/ros/node_handle.h ****     public:
 179:./lib/ros_lib/ros/node_handle.h ****       /* This function goes in your loop() function, it handles
 180:./lib/ros_lib/ros/node_handle.h ****        *  serial input and callbacks for subscribers.
 181:./lib/ros_lib/ros/node_handle.h ****        */
 182:./lib/ros_lib/ros/node_handle.h **** 
 183:./lib/ros_lib/ros/node_handle.h **** 
 184:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce(){
 185:./lib/ros_lib/ros/node_handle.h **** 
 186:./lib/ros_lib/ros/node_handle.h ****         /* restart if timed out */
 187:./lib/ros_lib/ros/node_handle.h ****         uint32_t c_time = hardware_.time();
 188:./lib/ros_lib/ros/node_handle.h ****         if( (c_time - last_sync_receive_time) > (SYNC_SECONDS*2200) ){
 189:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 190:./lib/ros_lib/ros/node_handle.h ****          }
 191:./lib/ros_lib/ros/node_handle.h **** 
 192:./lib/ros_lib/ros/node_handle.h ****         /* reset if message has timed out */
 193:./lib/ros_lib/ros/node_handle.h ****         if ( mode_ != MODE_FIRST_FF){
 194:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 195:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 196:./lib/ros_lib/ros/node_handle.h ****           }
 197:./lib/ros_lib/ros/node_handle.h ****         }
 198:./lib/ros_lib/ros/node_handle.h ****         /* while available buffer, read data */
 199:./lib/ros_lib/ros/node_handle.h ****         while( true )
 200:./lib/ros_lib/ros/node_handle.h ****         {
 201:./lib/ros_lib/ros/node_handle.h ****           int data = hardware_.read();
 202:./lib/ros_lib/ros/node_handle.h ****           if( data < 0 )
 203:./lib/ros_lib/ros/node_handle.h ****             break;
 204:./lib/ros_lib/ros/node_handle.h ****           checksum_ += data;
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 207:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 208:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 209:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 210:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 211:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 212:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 213:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 214:./lib/ros_lib/ros/node_handle.h ****             }
 215:./lib/ros_lib/ros/node_handle.h ****             else if( hardware_.time() - c_time > (SYNC_SECONDS)){
 216:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 217:./lib/ros_lib/ros/node_handle.h ****               configured_=false;
 218:./lib/ros_lib/ros/node_handle.h ****               return -2;
 219:./lib/ros_lib/ros/node_handle.h ****             }
 220:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_PROTOCOL_VER ){
 221:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 222:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 223:./lib/ros_lib/ros/node_handle.h ****             }else{
 224:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_FIRST_FF;
 225:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 227:./lib/ros_lib/ros/node_handle.h ****             }
 228:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_SIZE_L ){   /* bottom half of message size */
 229:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 230:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 231:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 232:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 233:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_H ){   /* top half of message size */
 234:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 235:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 236:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 237:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 238:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 239:./lib/ros_lib/ros/node_handle.h **** 	    else
 240:./lib/ros_lib/ros/node_handle.h **** 	      mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 241:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 242:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 243:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 244:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 245:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 246:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 247:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 248:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 249:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 250:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_MSG_CHECKSUM ){ /* do checksum */
 251:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 254:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 255:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 258:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 259:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 260:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 261:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 262:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 263:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 264:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 265:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 266:./lib/ros_lib/ros/node_handle.h ****               }else{
 267:./lib/ros_lib/ros/node_handle.h ****                 if(subscribers[topic_-100])
 268:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 269:./lib/ros_lib/ros/node_handle.h ****               }
 270:./lib/ros_lib/ros/node_handle.h ****             }
 271:./lib/ros_lib/ros/node_handle.h ****           }
 272:./lib/ros_lib/ros/node_handle.h ****         }
 273:./lib/ros_lib/ros/node_handle.h **** 
 274:./lib/ros_lib/ros/node_handle.h ****         /* occasionally sync time */
 275:./lib/ros_lib/ros/node_handle.h ****         if( configured_ && ((c_time-last_sync_time) > (SYNC_SECONDS*500) )){
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 277:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 278:./lib/ros_lib/ros/node_handle.h ****         }
 279:./lib/ros_lib/ros/node_handle.h **** 
 280:./lib/ros_lib/ros/node_handle.h ****         return 0;
 281:./lib/ros_lib/ros/node_handle.h ****       }
 282:./lib/ros_lib/ros/node_handle.h **** 
 283:./lib/ros_lib/ros/node_handle.h **** 
 284:./lib/ros_lib/ros/node_handle.h ****       /* Are we connected to the PC? */
 285:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected() {
 845              		.loc 10 285 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              		@ link register save eliminated.
 850              	.LVL69:
 286:./lib/ros_lib/ros/node_handle.h ****         return configured_;
 287:./lib/ros_lib/ros/node_handle.h ****       };
 851              		.loc 10 287 0
 852 0000 90F8F408 		ldrb	r0, [r0, #2292]	@ zero_extendqisi2
 853              	.LVL70:
 854 0004 7047     		bx	lr
 855              		.cfi_endproc
 856              	.LFE1317:
 857              		.cantunwind
 858              		.fnend
 860              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv,"axG",%progbit
 861              		.align	1
 862              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 863              		.thumb
 864              		.thumb_func
 866              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:
 867              		.fnstart
 868              	.LFB1332:
 869              		.file 11 "./lib/ros_lib/ros/subscriber.h"
   1:./lib/ros_lib/ros/subscriber.h **** /* 
   2:./lib/ros_lib/ros/subscriber.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/subscriber.h ****  *
   4:./lib/ros_lib/ros/subscriber.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/subscriber.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/subscriber.h ****  *
   7:./lib/ros_lib/ros/subscriber.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/subscriber.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/subscriber.h ****  * are met:
  10:./lib/ros_lib/ros/subscriber.h ****  *
  11:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/subscriber.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/subscriber.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/subscriber.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/subscriber.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/subscriber.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/subscriber.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/subscriber.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/subscriber.h ****  *
  21:./lib/ros_lib/ros/subscriber.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/subscriber.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/subscriber.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/subscriber.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/subscriber.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/subscriber.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/subscriber.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/subscriber.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/subscriber.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/subscriber.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/subscriber.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/subscriber.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/subscriber.h ****  */
  34:./lib/ros_lib/ros/subscriber.h **** 
  35:./lib/ros_lib/ros/subscriber.h **** #ifndef ROS_SUBSCRIBER_H_
  36:./lib/ros_lib/ros/subscriber.h **** #define ROS_SUBSCRIBER_H_
  37:./lib/ros_lib/ros/subscriber.h **** 
  38:./lib/ros_lib/ros/subscriber.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/subscriber.h **** 
  40:./lib/ros_lib/ros/subscriber.h **** namespace ros {
  41:./lib/ros_lib/ros/subscriber.h **** 
  42:./lib/ros_lib/ros/subscriber.h ****   /* Base class for objects subscribers. */
  43:./lib/ros_lib/ros/subscriber.h ****   class Subscriber_
  44:./lib/ros_lib/ros/subscriber.h ****   {
  45:./lib/ros_lib/ros/subscriber.h ****     public:
  46:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char *data)=0;
  47:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType()=0;
  48:./lib/ros_lib/ros/subscriber.h **** 
  49:./lib/ros_lib/ros/subscriber.h ****       // id_ is set by NodeHandle when we advertise 
  50:./lib/ros_lib/ros/subscriber.h ****       int id_;
  51:./lib/ros_lib/ros/subscriber.h **** 
  52:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType()=0;
  53:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5()=0;
  54:./lib/ros_lib/ros/subscriber.h ****       const char * topic_;
  55:./lib/ros_lib/ros/subscriber.h ****   };
  56:./lib/ros_lib/ros/subscriber.h **** 
  57:./lib/ros_lib/ros/subscriber.h **** 
  58:./lib/ros_lib/ros/subscriber.h ****   /* Actual subscriber, templated on message type. */
  59:./lib/ros_lib/ros/subscriber.h ****   template<typename MsgT>
  60:./lib/ros_lib/ros/subscriber.h ****   class Subscriber: public Subscriber_{
  61:./lib/ros_lib/ros/subscriber.h ****     public:
  62:./lib/ros_lib/ros/subscriber.h ****       typedef void(*CallbackT)(const MsgT&);
  63:./lib/ros_lib/ros/subscriber.h ****       MsgT msg;
  64:./lib/ros_lib/ros/subscriber.h **** 
  65:./lib/ros_lib/ros/subscriber.h ****       Subscriber(const char * topic_name, CallbackT cb, int endpoint=rosserial_msgs::TopicInfo::ID_
  66:./lib/ros_lib/ros/subscriber.h ****         cb_(cb),
  67:./lib/ros_lib/ros/subscriber.h ****         endpoint_(endpoint)
  68:./lib/ros_lib/ros/subscriber.h ****       {
  69:./lib/ros_lib/ros/subscriber.h ****         topic_ = topic_name;
  70:./lib/ros_lib/ros/subscriber.h ****       };
  71:./lib/ros_lib/ros/subscriber.h **** 
  72:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char* data){
  73:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
  74:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
  75:./lib/ros_lib/ros/subscriber.h ****       }
  76:./lib/ros_lib/ros/subscriber.h **** 
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType(){ return this->msg.getType(); }
  78:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
  79:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 870              		.loc 11 79 0
 871              		.cfi_startproc
 872              		@ args = 0, pretend = 0, frame = 0
 873              		@ frame_needed = 0, uses_anonymous_args = 0
 874              		@ link register save eliminated.
 875              	.LVL71:
 876              		.loc 11 79 0
 877 0000 C06B     		ldr	r0, [r0, #60]
 878              	.LVL72:
 879 0002 7047     		bx	lr
 880              		.cfi_endproc
 881              	.LFE1332:
 882              		.cantunwind
 883              		.fnend
 885              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv,"axG",%progbits,_ZN
 886              		.align	1
 887              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 888              		.thumb
 889              		.thumb_func
 891              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:
 892              		.fnstart
 893              	.LFB1333:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 894              		.loc 11 77 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 898              		@ link register save eliminated.
 899              	.LVL73:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 900              		.loc 11 77 0
 901 0000 0048     		ldr	r0, .L67
 902              	.LVL74:
 903 0002 7047     		bx	lr
 904              	.L68:
 905              		.align	2
 906              	.L67:
 907 0004 A4010000 		.word	.LC17
 908              		.cfi_endproc
 909              	.LFE1333:
 910              		.cantunwind
 911              		.fnend
 913              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev,"axG",%progbits,_ZN3r
 914              		.align	1
 915              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 916              		.thumb
 917              		.thumb_func
 919              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:
 920              		.fnstart
 921              	.LFB1334:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 922              		.loc 11 78 0
 923              		.cfi_startproc
 924              		@ args = 0, pretend = 0, frame = 0
 925              		@ frame_needed = 0, uses_anonymous_args = 0
 926              		@ link register save eliminated.
 927              	.LVL75:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 928              		.loc 11 78 0
 929 0000 0048     		ldr	r0, .L70
 930              	.LVL76:
 931 0002 7047     		bx	lr
 932              	.L71:
 933              		.align	2
 934              	.L70:
 935 0004 BC010000 		.word	.LC18
 936              		.cfi_endproc
 937              	.LFE1334:
 938              		.cantunwind
 939              		.fnend
 941              		.section	.text._ZNK8std_msgs6Header9serializeEPh,"axG",%progbits,_ZNK8std_msgs6Header9serializeEPh
 942              		.align	1
 943              		.weak	_ZNK8std_msgs6Header9serializeEPh
 944              		.thumb
 945              		.thumb_func
 947              	_ZNK8std_msgs6Header9serializeEPh:
 948              		.fnstart
 949              	.LFB1179:
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 950              		.loc 8 27 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 8
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              	.LVL77:
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 955              		.loc 8 30 0
 956 0000 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 957              		.loc 8 27 0
 958 0002 73B5     		push	{r0, r1, r4, r5, r6, lr}
 959              	.LCFI2:
 960              		.cfi_def_cfa_offset 24
 961              		.cfi_offset 4, -16
 962              		.cfi_offset 5, -12
 963              		.cfi_offset 6, -8
 964              		.cfi_offset 14, -4
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 965              		.loc 8 30 0
 966 0004 0B70     		strb	r3, [r1]
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 967              		.loc 8 31 0
 968 0006 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 969              		.loc 8 27 0
 970 0008 0546     		mov	r5, r0
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 971              		.loc 8 31 0
 972 000a 1B0A     		lsrs	r3, r3, #8
 973 000c 4B70     		strb	r3, [r1, #1]
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 974              		.loc 8 32 0
 975 000e C388     		ldrh	r3, [r0, #6]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 976              		.loc 8 27 0
 977 0010 0C46     		mov	r4, r1
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 978              		.loc 8 32 0
 979 0012 8B70     		strb	r3, [r1, #2]
  33:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 980              		.loc 8 33 0
 981 0014 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 982 0016 CB70     		strb	r3, [r1, #3]
 983              	.LVL78:
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 984              		.loc 8 35 0
 985 0018 8368     		ldr	r3, [r0, #8]
 986 001a 0B71     		strb	r3, [r1, #4]
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 987              		.loc 8 36 0
 988 001c 8368     		ldr	r3, [r0, #8]
 989 001e 1B0A     		lsrs	r3, r3, #8
 990 0020 4B71     		strb	r3, [r1, #5]
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 991              		.loc 8 37 0
 992 0022 4389     		ldrh	r3, [r0, #10]
 993 0024 8B71     		strb	r3, [r1, #6]
  38:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 994              		.loc 8 38 0
 995 0026 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 996 0028 CB71     		strb	r3, [r1, #7]
 997              	.LVL79:
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 998              		.loc 8 40 0
 999 002a C368     		ldr	r3, [r0, #12]
 1000 002c 0B72     		strb	r3, [r1, #8]
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 1001              		.loc 8 41 0
 1002 002e C368     		ldr	r3, [r0, #12]
 1003 0030 1B0A     		lsrs	r3, r3, #8
 1004 0032 4B72     		strb	r3, [r1, #9]
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 1005              		.loc 8 42 0
 1006 0034 C389     		ldrh	r3, [r0, #14]
 1007 0036 8B72     		strb	r3, [r1, #10]
  43:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1008              		.loc 8 43 0
 1009 0038 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 1010 003a CB72     		strb	r3, [r1, #11]
 1011              	.LVL80:
  45:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 1012              		.loc 8 45 0
 1013 003c 0069     		ldr	r0, [r0, #16]
 1014              	.LVL81:
 1015 003e FFF7FEFF 		bl	strlen
 1016              	.LVL82:
 1017 0042 0646     		mov	r6, r0
 1018 0044 02AB     		add	r3, sp, #8
 1019 0046 43F8040D 		str	r0, [r3, #-4]!
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1020              		.loc 8 46 0
 1021 004a 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1022              		.loc 8 48 0
 1023 004c 3246     		mov	r2, r6
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1024              		.loc 8 46 0
 1025 004e E060     		str	r0, [r4, #12]	@ unaligned
 1026              	.LVL83:
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1027              		.loc 8 48 0
 1028 0050 2969     		ldr	r1, [r5, #16]
 1029 0052 04F11000 		add	r0, r4, #16
 1030 0056 FFF7FEFF 		bl	memcpy
 1031              	.LVL84:
  51:./lib/ros_lib/std_msgs/Header.h **** 
 1032              		.loc 8 51 0
 1033 005a 06F11000 		add	r0, r6, #16
 1034              	.LVL85:
 1035 005e 02B0     		add	sp, sp, #8
 1036              	.LCFI3:
 1037              		.cfi_def_cfa_offset 16
 1038              		@ sp needed
 1039 0060 70BD     		pop	{r4, r5, r6, pc}
 1040              		.cfi_endproc
 1041              	.LFE1179:
 1042              		.cantunwind
 1043              		.fnend
 1045              		.section	.text._ZNK8std_msgs19MultiArrayDimension9serializeEPh,"axG",%progbits,_ZNK8std_msgs19Mult
 1046              		.align	1
 1047              		.weak	_ZNK8std_msgs19MultiArrayDimension9serializeEPh
 1048              		.thumb
 1049              		.thumb_func
 1051              	_ZNK8std_msgs19MultiArrayDimension9serializeEPh:
 1052              		.fnstart
 1053              	.LFB1144:
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1054              		.loc 5 26 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 8
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
 1058              	.LVL86:
 1059 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1060              	.LCFI4:
 1061              		.cfi_def_cfa_offset 24
 1062              		.cfi_offset 4, -16
 1063              		.cfi_offset 5, -12
 1064              		.cfi_offset 6, -8
 1065              		.cfi_offset 14, -4
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1066              		.loc 5 26 0
 1067 0002 0546     		mov	r5, r0
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
 1068              		.loc 5 29 0
 1069 0004 4068     		ldr	r0, [r0, #4]
 1070              	.LVL87:
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1071              		.loc 5 26 0
 1072 0006 0C46     		mov	r4, r1
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
 1073              		.loc 5 29 0
 1074 0008 FFF7FEFF 		bl	strlen
 1075              	.LVL88:
 1076 000c 02AB     		add	r3, sp, #8
 1077 000e 43F8040D 		str	r0, [r3, #-4]!
 1078 0012 0646     		mov	r6, r0
  30:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 1079              		.loc 5 30 0
 1080 0014 1868     		ldr	r0, [r3]	@ unaligned
 1081 0016 2346     		mov	r3, r4
 1082 0018 43F8040B 		str	r0, [r3], #4	@ unaligned
 1083              	.LVL89:
  32:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
 1084              		.loc 5 32 0
 1085 001c 6968     		ldr	r1, [r5, #4]
 1086 001e 3246     		mov	r2, r6
 1087 0020 1846     		mov	r0, r3
 1088 0022 FFF7FEFF 		bl	memcpy
 1089              	.LVL90:
  34:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->size >> (8 * 1)) & 0xFF;
 1090              		.loc 5 34 0
 1091 0026 AB68     		ldr	r3, [r5, #8]
 1092 0028 A119     		adds	r1, r4, r6
 1093 002a 0B71     		strb	r3, [r1, #4]
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
 1094              		.loc 5 35 0
 1095 002c AB68     		ldr	r3, [r5, #8]
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 1096              		.loc 5 45 0
 1097 002e 06F10C00 		add	r0, r6, #12
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
 1098              		.loc 5 35 0
 1099 0032 1B0A     		lsrs	r3, r3, #8
 1100 0034 4B71     		strb	r3, [r1, #5]
  36:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->size >> (8 * 3)) & 0xFF;
 1101              		.loc 5 36 0
 1102 0036 6B89     		ldrh	r3, [r5, #10]
 1103 0038 8B71     		strb	r3, [r1, #6]
  37:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
 1104              		.loc 5 37 0
 1105 003a EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 1106 003c CB71     		strb	r3, [r1, #7]
 1107              	.LVL91:
  39:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->stride >> (8 * 1)) & 0xFF;
 1108              		.loc 5 39 0
 1109 003e EB68     		ldr	r3, [r5, #12]
 1110 0040 0B72     		strb	r3, [r1, #8]
  40:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->stride >> (8 * 2)) & 0xFF;
 1111              		.loc 5 40 0
 1112 0042 EB68     		ldr	r3, [r5, #12]
 1113 0044 1B0A     		lsrs	r3, r3, #8
 1114 0046 4B72     		strb	r3, [r1, #9]
  41:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->stride >> (8 * 3)) & 0xFF;
 1115              		.loc 5 41 0
 1116 0048 EB89     		ldrh	r3, [r5, #14]
 1117 004a 8B72     		strb	r3, [r1, #10]
  42:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
 1118              		.loc 5 42 0
 1119 004c EB7B     		ldrb	r3, [r5, #15]	@ zero_extendqisi2
 1120 004e CB72     		strb	r3, [r1, #11]
 1121              	.LVL92:
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 1122              		.loc 5 45 0
 1123 0050 02B0     		add	sp, sp, #8
 1124              	.LCFI5:
 1125              		.cfi_def_cfa_offset 16
 1126              		@ sp needed
 1127 0052 70BD     		pop	{r4, r5, r6, pc}
 1128              		.cfi_endproc
 1129              	.LFE1144:
 1130              		.cantunwind
 1131              		.fnend
 1133              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 1134              		.align	1
 1135              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1136              		.thumb
 1137              		.thumb_func
 1139              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1140              		.fnstart
 1141              	.LFB1074:
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1142              		.loc 4 74 0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 8
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 1146              	.LVL93:
 1147 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 1148              	.LCFI6:
 1149              		.cfi_def_cfa_offset 40
 1150              		.cfi_offset 4, -28
 1151              		.cfi_offset 5, -24
 1152              		.cfi_offset 6, -20
 1153              		.cfi_offset 7, -16
 1154              		.cfi_offset 8, -12
 1155              		.cfi_offset 9, -8
 1156              		.cfi_offset 14, -4
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1157              		.loc 4 77 0
 1158 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1159              		.loc 4 74 0
 1160 0006 0746     		mov	r7, r0
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1161              		.loc 4 77 0
 1162 0008 0B70     		strb	r3, [r1]
 1163              	.LVL94:
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1164              		.loc 4 78 0
 1165 000a 0023     		movs	r3, #0
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1166              		.loc 4 80 0
 1167 000c 1A46     		mov	r2, r3
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1168              		.loc 4 74 0
 1169 000e 0C46     		mov	r4, r1
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1170              		.loc 4 78 0
 1171 0010 4B70     		strb	r3, [r1, #1]
 1172              	.LVL95:
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1173              		.loc 4 79 0
 1174 0012 8B70     		strb	r3, [r1, #2]
 1175              	.LVL96:
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1176              		.loc 4 80 0
 1177 0014 CB70     		strb	r3, [r1, #3]
 1178              	.LVL97:
 1179 0016 0431     		adds	r1, r1, #4
 1180              	.LVL98:
 1181              	.L76:
 1182              	.LBB136:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1183              		.loc 4 81 0 discriminator 3
 1184 0018 3D79     		ldrb	r5, [r7, #4]	@ zero_extendqisi2
 1185 001a 501C     		adds	r0, r2, #1
 1186 001c D2B2     		uxtb	r2, r2
 1187 001e 9542     		cmp	r5, r2
 1188 0020 A1EB0403 		sub	r3, r1, r4
 1189              	.LVL99:
 1190 0024 01F10401 		add	r1, r1, #4
 1191 0028 0FD9     		bls	.L75
 1192              	.LBB137:
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1193              		.loc 4 86 0 discriminator 2
 1194 002a FB68     		ldr	r3, [r7, #12]
 1195              	.LVL100:
 1196 002c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1197              	.LVL101:
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1198              		.loc 4 88 0 discriminator 2
 1199 0030 1A0A     		lsrs	r2, r3, #8
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1200              		.loc 4 87 0 discriminator 2
 1201 0032 01F8043C 		strb	r3, [r1, #-4]
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1202              		.loc 4 88 0 discriminator 2
 1203 0036 01F8032C 		strb	r2, [r1, #-3]
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1204              		.loc 4 89 0 discriminator 2
 1205 003a 1A0C     		lsrs	r2, r3, #16
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1206              		.loc 4 90 0 discriminator 2
 1207 003c 1B0E     		lsrs	r3, r3, #24
 1208              	.LVL102:
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1209              		.loc 4 89 0 discriminator 2
 1210 003e 01F8022C 		strb	r2, [r1, #-2]
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1211              		.loc 4 90 0 discriminator 2
 1212 0042 01F8013C 		strb	r3, [r1, #-1]
 1213              	.LVL103:
 1214              	.LBE137:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1215              		.loc 4 81 0 discriminator 2
 1216 0046 0246     		mov	r2, r0
 1217 0048 E6E7     		b	.L76
 1218              	.LVL104:
 1219              	.L75:
 1220              	.LBE136:
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1221              		.loc 4 93 0
 1222 004a 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1223              		.loc 4 94 0
 1224 004c E118     		adds	r1, r4, r3
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1225              		.loc 4 93 0
 1226 004e E254     		strb	r2, [r4, r3]
 1227              	.LVL105:
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1228              		.loc 4 94 0
 1229 0050 0022     		movs	r2, #0
 1230 0052 0433     		adds	r3, r3, #4
 1231              	.LVL106:
 1232 0054 4A70     		strb	r2, [r1, #1]
 1233              	.LVL107:
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1234              		.loc 4 95 0
 1235 0056 8A70     		strb	r2, [r1, #2]
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1236              		.loc 4 96 0
 1237 0058 CA70     		strb	r2, [r1, #3]
 1238              	.LVL108:
 1239 005a 2344     		add	r3, r3, r4
 1240              	.LVL109:
 1241              	.L78:
 1242              	.LBB138:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1243              		.loc 4 97 0 discriminator 3
 1244 005c 387C     		ldrb	r0, [r7, #16]	@ zero_extendqisi2
 1245 005e 511C     		adds	r1, r2, #1
 1246 0060 D2B2     		uxtb	r2, r2
 1247 0062 9042     		cmp	r0, r2
 1248 0064 A3EB0406 		sub	r6, r3, r4
 1249              	.LVL110:
 1250 0068 03F10403 		add	r3, r3, #4
 1251 006c 0FD9     		bls	.L77
 1252              	.LBB139:
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1253              		.loc 4 102 0 discriminator 2
 1254 006e B869     		ldr	r0, [r7, #24]
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1255              		.loc 4 103 0 discriminator 2
 1256 0070 50F82220 		ldr	r2, [r0, r2, lsl #2]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1257              		.loc 4 104 0 discriminator 2
 1258 0074 100A     		lsrs	r0, r2, #8
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1259              		.loc 4 103 0 discriminator 2
 1260 0076 03F8042C 		strb	r2, [r3, #-4]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1261              		.loc 4 104 0 discriminator 2
 1262 007a 03F8030C 		strb	r0, [r3, #-3]
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1263              		.loc 4 105 0 discriminator 2
 1264 007e 100C     		lsrs	r0, r2, #16
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1265              		.loc 4 106 0 discriminator 2
 1266 0080 120E     		lsrs	r2, r2, #24
 1267 0082 03F8012C 		strb	r2, [r3, #-1]
 1268              	.LVL111:
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1269              		.loc 4 105 0 discriminator 2
 1270 0086 03F8020C 		strb	r0, [r3, #-2]
 1271              	.LBE139:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1272              		.loc 4 97 0 discriminator 2
 1273 008a 0A46     		mov	r2, r1
 1274 008c E6E7     		b	.L78
 1275              	.LVL112:
 1276              	.L77:
 1277              	.LBE138:
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1278              		.loc 4 109 0
 1279 008e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1280              		.loc 4 110 0
 1281 0090 A219     		adds	r2, r4, r6
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1282              		.loc 4 109 0
 1283 0092 A355     		strb	r3, [r4, r6]
 1284              	.LVL113:
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1285              		.loc 4 110 0
 1286 0094 0023     		movs	r3, #0
 1287 0096 5370     		strb	r3, [r2, #1]
 1288              	.LVL114:
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1289              		.loc 4 111 0
 1290 0098 9370     		strb	r3, [r2, #2]
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1291              		.loc 4 112 0
 1292 009a 0436     		adds	r6, r6, #4
 1293              	.LVL115:
 1294 009c D370     		strb	r3, [r2, #3]
 1295              	.LVL116:
 1296              	.L80:
 1297              	.LBB140:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1298              		.loc 4 113 0 discriminator 3
 1299 009e 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 1300 00a0 DDB2     		uxtb	r5, r3
 1301 00a2 AA42     		cmp	r2, r5
 1302 00a4 03F10109 		add	r9, r3, #1
 1303 00a8 15D9     		bls	.L79
 1304              	.LBB141:
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1305              		.loc 4 114 0 discriminator 2
 1306 00aa 7B6A     		ldr	r3, [r7, #36]
 1307              	.LVL117:
 1308 00ac 53F82500 		ldr	r0, [r3, r5, lsl #2]
 1309 00b0 FFF7FEFF 		bl	strlen
 1310              	.LVL118:
 1311 00b4 8046     		mov	r8, r0
 1312 00b6 02AB     		add	r3, sp, #8
 1313 00b8 43F8040D 		str	r0, [r3, #-4]!
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1314              		.loc 4 115 0 discriminator 2
 1315 00bc 1868     		ldr	r0, [r3]	@ unaligned
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1316              		.loc 4 117 0 discriminator 2
 1317 00be 4246     		mov	r2, r8
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1318              		.loc 4 115 0 discriminator 2
 1319 00c0 A051     		str	r0, [r4, r6]	@ unaligned
 1320              	.LVL119:
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1321              		.loc 4 117 0 discriminator 2
 1322 00c2 7B6A     		ldr	r3, [r7, #36]
 1323 00c4 0436     		adds	r6, r6, #4
 1324              	.LVL120:
 1325 00c6 53F82510 		ldr	r1, [r3, r5, lsl #2]
 1326 00ca A019     		adds	r0, r4, r6
 1327 00cc FFF7FEFF 		bl	memcpy
 1328              	.LVL121:
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 1329              		.loc 4 118 0 discriminator 2
 1330 00d0 4644     		add	r6, r6, r8
 1331              	.LVL122:
 1332              	.LBE141:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1333              		.loc 4 113 0 discriminator 2
 1334 00d2 4B46     		mov	r3, r9
 1335 00d4 E3E7     		b	.L80
 1336              	.LVL123:
 1337              	.L79:
 1338              	.LBE140:
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 1339              		.loc 4 121 0
 1340 00d6 3046     		mov	r0, r6
 1341 00d8 03B0     		add	sp, sp, #12
 1342              	.LCFI7:
 1343              		.cfi_def_cfa_offset 28
 1344              		@ sp needed
 1345 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1346              		.cfi_endproc
 1347              	.LFE1074:
 1348              		.cantunwind
 1349              		.fnend
 1351              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 1352              		.align	1
 1353              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1354              		.thumb
 1355              		.thumb_func
 1357              	_ZNK14rosserial_msgs3Log9serializeEPh:
 1358              		.fnstart
 1359              	.LFB1060:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1360              		.loc 3 29 0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 8
 1363              		@ frame_needed = 0, uses_anonymous_args = 0
 1364              	.LVL124:
 1365 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1366              	.LCFI8:
 1367              		.cfi_def_cfa_offset 24
 1368              		.cfi_offset 4, -16
 1369              		.cfi_offset 5, -12
 1370              		.cfi_offset 6, -8
 1371              		.cfi_offset 14, -4
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1372              		.loc 3 32 0
 1373 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1374              		.loc 3 29 0
 1375 0004 0646     		mov	r6, r0
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1376              		.loc 3 32 0
 1377 0006 0B70     		strb	r3, [r1]
 1378              	.LVL125:
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1379              		.loc 3 34 0
 1380 0008 8068     		ldr	r0, [r0, #8]
 1381              	.LVL126:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1382              		.loc 3 29 0
 1383 000a 0D46     		mov	r5, r1
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1384              		.loc 3 34 0
 1385 000c FFF7FEFF 		bl	strlen
 1386              	.LVL127:
 1387 0010 0446     		mov	r4, r0
 1388 0012 02AB     		add	r3, sp, #8
 1389 0014 43F8040D 		str	r0, [r3, #-4]!
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1390              		.loc 3 35 0
 1391 0018 1868     		ldr	r0, [r3]	@ unaligned
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1392              		.loc 3 37 0
 1393 001a 2246     		mov	r2, r4
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1394              		.loc 3 35 0
 1395 001c C5F80100 		str	r0, [r5, #1]	@ unaligned
 1396              	.LVL128:
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1397              		.loc 3 37 0
 1398 0020 B168     		ldr	r1, [r6, #8]
 1399 0022 681D     		adds	r0, r5, #5
 1400 0024 FFF7FEFF 		bl	memcpy
 1401              	.LVL129:
  40:./lib/ros_lib/rosserial_msgs/Log.h **** 
 1402              		.loc 3 40 0
 1403 0028 601D     		adds	r0, r4, #5
 1404              	.LVL130:
 1405 002a 02B0     		add	sp, sp, #8
 1406              	.LCFI9:
 1407              		.cfi_def_cfa_offset 16
 1408              		@ sp needed
 1409 002c 70BD     		pop	{r4, r5, r6, pc}
 1410              		.cfi_endproc
 1411              	.LFE1060:
 1412              		.cantunwind
 1413              		.fnend
 1415              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 1416              		.align	1
 1417              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 1418              		.thumb
 1419              		.thumb_func
 1421              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 1422              		.fnstart
 1423              	.LFB1053:
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1424              		.loc 2 38 0
 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 16
 1427              		@ frame_needed = 0, uses_anonymous_args = 0
 1428              	.LVL131:
 1429 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 1430              	.LCFI10:
 1431              		.cfi_def_cfa_offset 40
 1432              		.cfi_offset 4, -24
 1433              		.cfi_offset 5, -20
 1434              		.cfi_offset 6, -16
 1435              		.cfi_offset 7, -12
 1436              		.cfi_offset 8, -8
 1437              		.cfi_offset 14, -4
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1438              		.loc 2 41 0
 1439 0004 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1440              		.loc 2 38 0
 1441 0006 0646     		mov	r6, r0
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1442              		.loc 2 41 0
 1443 0008 0B70     		strb	r3, [r1]
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1444              		.loc 2 42 0
 1445 000a 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1446              		.loc 2 38 0
 1447 000c 0D46     		mov	r5, r1
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1448              		.loc 2 42 0
 1449 000e 1B0A     		lsrs	r3, r3, #8
 1450 0010 4B70     		strb	r3, [r1, #1]
 1451              	.LVL132:
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1452              		.loc 2 44 0
 1453 0012 8068     		ldr	r0, [r0, #8]
 1454              	.LVL133:
 1455 0014 FFF7FEFF 		bl	strlen
 1456              	.LVL134:
 1457 0018 0446     		mov	r4, r0
 1458 001a 04AB     		add	r3, sp, #16
 1459 001c 43F80C0D 		str	r0, [r3, #-12]!
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1460              		.loc 2 45 0
 1461 0020 1868     		ldr	r0, [r3]	@ unaligned
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1462              		.loc 2 47 0
 1463 0022 2246     		mov	r2, r4
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1464              		.loc 2 45 0
 1465 0024 C5F80200 		str	r0, [r5, #2]	@ unaligned
 1466              	.LVL135:
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1467              		.loc 2 47 0
 1468 0028 B168     		ldr	r1, [r6, #8]
 1469 002a A81D     		adds	r0, r5, #6
 1470 002c FFF7FEFF 		bl	memcpy
 1471              	.LVL136:
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 1472              		.loc 2 49 0
 1473 0030 F068     		ldr	r0, [r6, #12]
 1474 0032 FFF7FEFF 		bl	strlen
 1475              	.LVL137:
 1476 0036 0746     		mov	r7, r0
 1477 0038 04AB     		add	r3, sp, #16
 1478 003a 43F8080D 		str	r0, [r3, #-8]!
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1479              		.loc 2 50 0
 1480 003e 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 1481              		.loc 2 48 0
 1482 0040 04F10608 		add	r8, r4, #6
 1483              	.LVL138:
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1484              		.loc 2 50 0
 1485 0044 45F80800 		str	r0, [r5, r8]	@ unaligned
 1486              	.LVL139:
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1487              		.loc 2 52 0
 1488 0048 0A34     		adds	r4, r4, #10
 1489 004a 3A46     		mov	r2, r7
 1490 004c F168     		ldr	r1, [r6, #12]
 1491 004e 2819     		adds	r0, r5, r4
 1492 0050 FFF7FEFF 		bl	memcpy
 1493              	.LVL140:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1494              		.loc 2 54 0
 1495 0054 3069     		ldr	r0, [r6, #16]
 1496 0056 FFF7FEFF 		bl	strlen
 1497              	.LVL141:
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 1498              		.loc 2 53 0
 1499 005a 3C44     		add	r4, r4, r7
 1500              	.LVL142:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1501              		.loc 2 54 0
 1502 005c 0746     		mov	r7, r0
 1503 005e 04AB     		add	r3, sp, #16
 1504 0060 43F8040D 		str	r0, [r3, #-4]!
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1505              		.loc 2 55 0
 1506 0064 1868     		ldr	r0, [r3]	@ unaligned
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1507              		.loc 2 57 0
 1508 0066 3A46     		mov	r2, r7
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1509              		.loc 2 55 0
 1510 0068 2851     		str	r0, [r5, r4]	@ unaligned
 1511              	.LVL143:
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1512              		.loc 2 57 0
 1513 006a 0434     		adds	r4, r4, #4
 1514              	.LVL144:
 1515 006c 2819     		adds	r0, r5, r4
 1516 006e 3169     		ldr	r1, [r6, #16]
 1517 0070 FFF7FEFF 		bl	memcpy
 1518              	.LVL145:
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 1519              		.loc 2 63 0
 1520 0074 7369     		ldr	r3, [r6, #20]
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 1521              		.loc 2 58 0
 1522 0076 3819     		adds	r0, r7, r4
 1523              	.LVL146:
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 1524              		.loc 2 64 0
 1525 0078 2B54     		strb	r3, [r5, r0]
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 1526              		.loc 2 65 0
 1527 007a 1A0A     		lsrs	r2, r3, #8
 1528 007c 0544     		add	r5, r5, r0
 1529              	.LVL147:
 1530 007e 6A70     		strb	r2, [r5, #1]
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1531              		.loc 2 70 0
 1532 0080 0430     		adds	r0, r0, #4
 1533              	.LVL148:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1534              		.loc 2 66 0
 1535 0082 1A0C     		lsrs	r2, r3, #16
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1536              		.loc 2 67 0
 1537 0084 1B0E     		lsrs	r3, r3, #24
 1538              	.LVL149:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1539              		.loc 2 66 0
 1540 0086 AA70     		strb	r2, [r5, #2]
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1541              		.loc 2 67 0
 1542 0088 EB70     		strb	r3, [r5, #3]
 1543              	.LVL150:
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1544              		.loc 2 70 0
 1545 008a 04B0     		add	sp, sp, #16
 1546              	.LCFI11:
 1547              		.cfi_def_cfa_offset 24
 1548              		@ sp needed
 1549 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1550              		.cfi_endproc
 1551              	.LFE1053:
 1552              		.cantunwind
 1553              		.fnend
 1555              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
 1556              		.align	1
 1557              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 1558              		.thumb
 1559              		.thumb_func
 1561              	_ZN14rosserial_msgs3Log11deserializeEPh:
 1562              		.fnstart
 1563              	.LFB1061:
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1564              		.loc 3 42 0
 1565              		.cfi_startproc
 1566              		@ args = 0, pretend = 0, frame = 8
 1567              		@ frame_needed = 0, uses_anonymous_args = 0
 1568              	.LVL151:
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1569              		.loc 3 45 0
 1570 0000 0B46     		mov	r3, r1
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1571              		.loc 3 42 0
 1572 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1573              	.LCFI12:
 1574              		.cfi_def_cfa_offset 24
 1575              		.cfi_offset 4, -12
 1576              		.cfi_offset 5, -8
 1577              		.cfi_offset 14, -4
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1578              		.loc 3 45 0
 1579 0004 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1580              		.loc 3 42 0
 1581 0008 0446     		mov	r4, r0
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1582              		.loc 3 45 0
 1583 000a 0271     		strb	r2, [r0, #4]
 1584              	.LVL152:
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1585              		.loc 3 48 0
 1586 000c 1868     		ldr	r0, [r3]	@ unaligned
 1587              	.LVL153:
 1588 000e 4A1D     		adds	r2, r1, #5
 1589 0010 0190     		str	r0, [sp, #4]	@ unaligned
 1590              	.LVL154:
 1591              	.LBB142:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1592              		.loc 3 50 0
 1593 0012 019B     		ldr	r3, [sp, #4]
 1594 0014 581D     		adds	r0, r3, #5
 1595              	.LVL155:
 1596              	.L85:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1597              		.loc 3 50 0 is_stmt 0 discriminator 3
 1598 0016 551A     		subs	r5, r2, r1
 1599              	.LVL156:
 1600 0018 A842     		cmp	r0, r5
 1601 001a 04D9     		bls	.L84
  51:./lib/ros_lib/rosserial_msgs/Log.h ****       }
 1602              		.loc 3 51 0 is_stmt 1 discriminator 2
 1603 001c 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 1604              	.LVL157:
 1605 0020 02F8025C 		strb	r5, [r2, #-2]
 1606              	.LVL158:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1607              		.loc 3 50 0 discriminator 2
 1608 0024 F7E7     		b	.L85
 1609              	.LVL159:
 1610              	.L84:
 1611              	.LBE142:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 1612              		.loc 3 53 0
 1613 0026 0B44     		add	r3, r3, r1
 1614 0028 0022     		movs	r2, #0
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1615              		.loc 3 54 0
 1616 002a 0431     		adds	r1, r1, #4
 1617              	.LVL160:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 1618              		.loc 3 53 0
 1619 002c 1A71     		strb	r2, [r3, #4]
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1620              		.loc 3 54 0
 1621 002e A160     		str	r1, [r4, #8]
 1622              	.LVL161:
  57:./lib/ros_lib/rosserial_msgs/Log.h **** 
 1623              		.loc 3 57 0
 1624 0030 03B0     		add	sp, sp, #12
 1625              	.LCFI13:
 1626              		.cfi_def_cfa_offset 12
 1627              		@ sp needed
 1628 0032 30BD     		pop	{r4, r5, pc}
 1629              		.cfi_endproc
 1630              	.LFE1061:
 1631              		.cantunwind
 1632              		.fnend
 1634              		.section	.text._ZN8std_msgs6Header11deserializeEPh,"axG",%progbits,_ZN8std_msgs6Header11deserializ
 1635              		.align	1
 1636              		.weak	_ZN8std_msgs6Header11deserializeEPh
 1637              		.thumb
 1638              		.thumb_func
 1640              	_ZN8std_msgs6Header11deserializeEPh:
 1641              		.fnstart
 1642              	.LFB1180:
  53:./lib/ros_lib/std_msgs/Header.h ****     {
 1643              		.loc 8 53 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 8
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647              	.LVL162:
 1648 0000 0346     		mov	r3, r0
 1649 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1650              	.LCFI14:
 1651              		.cfi_def_cfa_offset 24
 1652              		.cfi_offset 4, -12
 1653              		.cfi_offset 5, -8
 1654              		.cfi_offset 14, -4
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1655              		.loc 8 56 0
 1656 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1657 0006 01F11004 		add	r4, r1, #16
 1658 000a 4260     		str	r2, [r0, #4]
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1659              		.loc 8 57 0
 1660 000c 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 1661              	.LVL163:
 1662 000e 42EA0022 		orr	r2, r2, r0, lsl #8
 1663 0012 5A60     		str	r2, [r3, #4]
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1664              		.loc 8 58 0
 1665 0014 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 1666 0016 42EA0042 		orr	r2, r2, r0, lsl #16
 1667 001a 5A60     		str	r2, [r3, #4]
  59:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1668              		.loc 8 59 0
 1669 001c C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 1670 001e 42EA0062 		orr	r2, r2, r0, lsl #24
 1671 0022 5A60     		str	r2, [r3, #4]
 1672              	.LVL164:
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1673              		.loc 8 61 0
 1674 0024 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 1675 0026 9A60     		str	r2, [r3, #8]
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1676              		.loc 8 62 0
 1677 0028 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 1678 002a 42EA0022 		orr	r2, r2, r0, lsl #8
 1679 002e 9A60     		str	r2, [r3, #8]
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1680              		.loc 8 63 0
 1681 0030 8879     		ldrb	r0, [r1, #6]	@ zero_extendqisi2
 1682 0032 42EA0042 		orr	r2, r2, r0, lsl #16
 1683 0036 9A60     		str	r2, [r3, #8]
  64:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1684              		.loc 8 64 0
 1685 0038 C879     		ldrb	r0, [r1, #7]	@ zero_extendqisi2
 1686 003a 42EA0062 		orr	r2, r2, r0, lsl #24
 1687 003e 9A60     		str	r2, [r3, #8]
 1688              	.LVL165:
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1689              		.loc 8 66 0
 1690 0040 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 1691 0042 DA60     		str	r2, [r3, #12]
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1692              		.loc 8 67 0
 1693 0044 487A     		ldrb	r0, [r1, #9]	@ zero_extendqisi2
 1694 0046 42EA0022 		orr	r2, r2, r0, lsl #8
 1695 004a DA60     		str	r2, [r3, #12]
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1696              		.loc 8 68 0
 1697 004c 887A     		ldrb	r0, [r1, #10]	@ zero_extendqisi2
 1698 004e 42EA0042 		orr	r2, r2, r0, lsl #16
 1699 0052 DA60     		str	r2, [r3, #12]
  69:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1700              		.loc 8 69 0
 1701 0054 C87A     		ldrb	r0, [r1, #11]	@ zero_extendqisi2
 1702 0056 42EA0062 		orr	r2, r2, r0, lsl #24
 1703 005a DA60     		str	r2, [r3, #12]
 1704              	.LVL166:
  72:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1705              		.loc 8 72 0
 1706 005c C868     		ldr	r0, [r1, #12]	@ unaligned
 1707 005e 0190     		str	r0, [sp, #4]	@ unaligned
 1708              	.LVL167:
 1709              	.LBB143:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1710              		.loc 8 74 0
 1711 0060 019A     		ldr	r2, [sp, #4]
 1712 0062 02F11000 		add	r0, r2, #16
 1713              	.LVL168:
 1714              	.L89:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1715              		.loc 8 74 0 is_stmt 0 discriminator 3
 1716 0066 651A     		subs	r5, r4, r1
 1717              	.LVL169:
 1718 0068 A842     		cmp	r0, r5
 1719 006a 04D9     		bls	.L88
  75:./lib/ros_lib/std_msgs/Header.h ****       }
 1720              		.loc 8 75 0 is_stmt 1 discriminator 2
 1721 006c 14F8015B 		ldrb	r5, [r4], #1	@ zero_extendqisi2
 1722              	.LVL170:
 1723 0070 04F8025C 		strb	r5, [r4, #-2]
 1724              	.LVL171:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1725              		.loc 8 74 0 discriminator 2
 1726 0074 F7E7     		b	.L89
 1727              	.LVL172:
 1728              	.L88:
 1729              	.LBE143:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 1730              		.loc 8 77 0
 1731 0076 0A44     		add	r2, r2, r1
 1732 0078 0024     		movs	r4, #0
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1733              		.loc 8 78 0
 1734 007a 0F31     		adds	r1, r1, #15
 1735              	.LVL173:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 1736              		.loc 8 77 0
 1737 007c D473     		strb	r4, [r2, #15]
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1738              		.loc 8 78 0
 1739 007e 1961     		str	r1, [r3, #16]
 1740              	.LVL174:
  81:./lib/ros_lib/std_msgs/Header.h **** 
 1741              		.loc 8 81 0
 1742 0080 03B0     		add	sp, sp, #12
 1743              	.LCFI15:
 1744              		.cfi_def_cfa_offset 12
 1745              		@ sp needed
 1746 0082 30BD     		pop	{r4, r5, pc}
 1747              		.cfi_endproc
 1748              	.LFE1180:
 1749              		.cantunwind
 1750              		.fnend
 1752              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 1753              		.align	1
 1754              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 1755              		.thumb
 1756              		.thumb_func
 1758              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 1759              		.fnstart
 1760              	.LFB1054:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1761              		.loc 2 72 0
 1762              		.cfi_startproc
 1763              		@ args = 0, pretend = 0, frame = 16
 1764              		@ frame_needed = 0, uses_anonymous_args = 0
 1765              	.LVL175:
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1766              		.loc 2 75 0
 1767 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1768              		.loc 2 72 0
 1769 0002 30B5     		push	{r4, r5, lr}
 1770              	.LCFI16:
 1771              		.cfi_def_cfa_offset 12
 1772              		.cfi_offset 4, -12
 1773              		.cfi_offset 5, -8
 1774              		.cfi_offset 14, -4
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1775              		.loc 2 75 0
 1776 0004 8380     		strh	r3, [r0, #4]	@ movhi
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1777              		.loc 2 76 0
 1778 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1779              		.loc 2 72 0
 1780 0008 0446     		mov	r4, r0
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1781              		.loc 2 76 0
 1782 000a 43EA0223 		orr	r3, r3, r2, lsl #8
 1783 000e 8380     		strh	r3, [r0, #4]	@ movhi
 1784              	.LVL176:
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1785              		.loc 2 79 0
 1786 0010 D1F80200 		ldr	r0, [r1, #2]	@ unaligned
 1787              	.LVL177:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1788              		.loc 2 72 0
 1789 0014 85B0     		sub	sp, sp, #20
 1790              	.LCFI17:
 1791              		.cfi_def_cfa_offset 32
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1792              		.loc 2 79 0
 1793 0016 0190     		str	r0, [sp, #4]	@ unaligned
 1794              	.LVL178:
 1795              	.LBB144:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1796              		.loc 2 81 0
 1797 0018 019D     		ldr	r5, [sp, #4]
 1798 001a 8A1D     		adds	r2, r1, #6
 1799 001c AB1D     		adds	r3, r5, #6
 1800              	.LVL179:
 1801              	.L93:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1802              		.loc 2 81 0 is_stmt 0 discriminator 3
 1803 001e 501A     		subs	r0, r2, r1
 1804              	.LVL180:
 1805 0020 8342     		cmp	r3, r0
 1806 0022 04D9     		bls	.L92
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 1807              		.loc 2 82 0 is_stmt 1 discriminator 2
 1808 0024 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 1809              	.LVL181:
 1810 0028 02F8020C 		strb	r0, [r2, #-2]
 1811              	.LVL182:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1812              		.loc 2 81 0 discriminator 2
 1813 002c F7E7     		b	.L93
 1814              	.LVL183:
 1815              	.L92:
 1816              	.LBE144:
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 1817              		.loc 2 84 0
 1818 002e 4A19     		adds	r2, r1, r5
 1819 0030 0020     		movs	r0, #0
 1820              	.LVL184:
 1821 0032 5071     		strb	r0, [r2, #5]
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1822              		.loc 2 85 0
 1823 0034 4A1D     		adds	r2, r1, #5
 1824 0036 A260     		str	r2, [r4, #8]
 1825              	.LVL185:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1826              		.loc 2 88 0
 1827 0038 C858     		ldr	r0, [r1, r3]	@ unaligned
 1828              	.LBB145:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1829              		.loc 2 90 0
 1830 003a 1A1D     		adds	r2, r3, #4
 1831              	.LBE145:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1832              		.loc 2 88 0
 1833 003c 0290     		str	r0, [sp, #8]	@ unaligned
 1834              	.LVL186:
 1835              	.LBB146:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1836              		.loc 2 90 0
 1837 003e 029B     		ldr	r3, [sp, #8]
 1838 0040 05F10A00 		add	r0, r5, #10
 1839 0044 1344     		add	r3, r3, r2
 1840 0046 0844     		add	r0, r0, r1
 1841              	.LVL187:
 1842              	.L95:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1843              		.loc 2 90 0 is_stmt 0 discriminator 3
 1844 0048 451A     		subs	r5, r0, r1
 1845              	.LVL188:
 1846 004a AB42     		cmp	r3, r5
 1847 004c 04D9     		bls	.L94
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 1848              		.loc 2 91 0 is_stmt 1 discriminator 2
 1849 004e 10F8015B 		ldrb	r5, [r0], #1	@ zero_extendqisi2
 1850              	.LVL189:
 1851 0052 00F8025C 		strb	r5, [r0, #-2]
 1852              	.LVL190:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1853              		.loc 2 90 0 discriminator 2
 1854 0056 F7E7     		b	.L95
 1855              	.LVL191:
 1856              	.L94:
 1857              	.LBE146:
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1858              		.loc 2 94 0
 1859 0058 013A     		subs	r2, r2, #1
 1860              	.LVL192:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 1861              		.loc 2 93 0
 1862 005a C818     		adds	r0, r1, r3
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1863              		.loc 2 94 0
 1864 005c 0A44     		add	r2, r2, r1
 1865              	.LVL193:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 1866              		.loc 2 93 0
 1867 005e 0025     		movs	r5, #0
 1868              	.LVL194:
 1869 0060 00F8015C 		strb	r5, [r0, #-1]
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1870              		.loc 2 94 0
 1871 0064 E260     		str	r2, [r4, #12]
 1872              	.LVL195:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1873              		.loc 2 97 0
 1874 0066 0068     		ldr	r0, [r0]	@ unaligned
 1875              	.LBB147:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1876              		.loc 2 99 0
 1877 0068 0433     		adds	r3, r3, #4
 1878              	.LVL196:
 1879              	.LBE147:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1880              		.loc 2 97 0
 1881 006a 0390     		str	r0, [sp, #12]	@ unaligned
 1882              	.LVL197:
 1883              	.LBB148:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1884              		.loc 2 99 0
 1885 006c 0398     		ldr	r0, [sp, #12]
 1886 006e CA18     		adds	r2, r1, r3
 1887 0070 1844     		add	r0, r0, r3
 1888              	.LVL198:
 1889              	.L97:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1890              		.loc 2 99 0 is_stmt 0 discriminator 3
 1891 0072 551A     		subs	r5, r2, r1
 1892              	.LVL199:
 1893 0074 A842     		cmp	r0, r5
 1894 0076 04D9     		bls	.L96
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 1895              		.loc 2 100 0 is_stmt 1 discriminator 2
 1896 0078 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 1897              	.LVL200:
 1898 007c 02F8025C 		strb	r5, [r2, #-2]
 1899              	.LVL201:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1900              		.loc 2 99 0 discriminator 2
 1901 0080 F7E7     		b	.L97
 1902              	.LVL202:
 1903              	.L96:
 1904              	.LBE148:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1905              		.loc 2 103 0
 1906 0082 013B     		subs	r3, r3, #1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 1907              		.loc 2 102 0
 1908 0084 0D18     		adds	r5, r1, r0
 1909              	.LVL203:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1910              		.loc 2 103 0
 1911 0086 0B44     		add	r3, r3, r1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 1912              		.loc 2 102 0
 1913 0088 0022     		movs	r2, #0
 1914              	.LVL204:
 1915 008a 05F8012C 		strb	r2, [r5, #-1]
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1916              		.loc 2 103 0
 1917 008e 2361     		str	r3, [r4, #16]
 1918              	.LVL205:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1919              		.loc 2 114 0
 1920 0090 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 1921 0092 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 1922 0094 1B04     		lsls	r3, r3, #16
 1923 0096 43EA0223 		orr	r3, r3, r2, lsl #8
 1924 009a 0A5C     		ldrb	r2, [r1, r0]	@ zero_extendqisi2
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1925              		.loc 2 117 0
 1926 009c 0430     		adds	r0, r0, #4
 1927              	.LVL206:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1928              		.loc 2 114 0
 1929 009e 1343     		orrs	r3, r3, r2
 1930 00a0 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 1931 00a2 43EA0263 		orr	r3, r3, r2, lsl #24
 1932 00a6 6361     		str	r3, [r4, #20]
 1933              	.LVL207:
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1934              		.loc 2 117 0
 1935 00a8 05B0     		add	sp, sp, #20
 1936              	.LCFI18:
 1937              		.cfi_def_cfa_offset 12
 1938              		@ sp needed
 1939 00aa 30BD     		pop	{r4, r5, pc}
 1940              		.cfi_endproc
 1941              	.LFE1054:
 1942              		.cantunwind
 1943              		.fnend
 1945              		.section	.text._ZN8std_msgs19MultiArrayDimension11deserializeEPh,"axG",%progbits,_ZN8std_msgs19Mul
 1946              		.align	1
 1947              		.weak	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 1948              		.thumb
 1949              		.thumb_func
 1951              	_ZN8std_msgs19MultiArrayDimension11deserializeEPh:
 1952              		.fnstart
 1953              	.LFB1145:
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1954              		.loc 5 47 0
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 8
 1957              		@ frame_needed = 0, uses_anonymous_args = 0
 1958              	.LVL208:
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 1959              		.loc 5 51 0
 1960 0000 0B46     		mov	r3, r1
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1961              		.loc 5 47 0
 1962 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1963              	.LCFI19:
 1964              		.cfi_def_cfa_offset 24
 1965              		.cfi_offset 4, -12
 1966              		.cfi_offset 5, -8
 1967              		.cfi_offset 14, -4
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1968              		.loc 5 47 0
 1969 0004 0246     		mov	r2, r0
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 1970              		.loc 5 51 0
 1971 0006 53F8040B 		ldr	r0, [r3], #4	@ unaligned
 1972              	.LVL209:
 1973 000a 0190     		str	r0, [sp, #4]	@ unaligned
 1974              	.LVL210:
 1975              	.LBB149:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 1976              		.loc 5 53 0
 1977 000c 0198     		ldr	r0, [sp, #4]
 1978 000e 051D     		adds	r5, r0, #4
 1979              	.LVL211:
 1980              	.L103:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 1981              		.loc 5 53 0 is_stmt 0 discriminator 3
 1982 0010 5C1A     		subs	r4, r3, r1
 1983              	.LVL212:
 1984 0012 A542     		cmp	r5, r4
 1985 0014 04D9     		bls	.L102
  54:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       }
 1986              		.loc 5 54 0 is_stmt 1 discriminator 2
 1987 0016 13F8014B 		ldrb	r4, [r3], #1	@ zero_extendqisi2
 1988              	.LVL213:
 1989 001a 03F8024C 		strb	r4, [r3, #-2]
 1990              	.LVL214:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 1991              		.loc 5 53 0 discriminator 2
 1992 001e F7E7     		b	.L103
 1993              	.LVL215:
 1994              	.L102:
 1995              	.LBE149:
  56:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->label = (char *)(inbuffer + offset-1);
 1996              		.loc 5 56 0
 1997 0020 0C18     		adds	r4, r1, r0
 1998              	.LVL216:
 1999 0022 0023     		movs	r3, #0
 2000              	.LVL217:
 2001 0024 E370     		strb	r3, [r4, #3]
  57:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
 2002              		.loc 5 57 0
 2003 0026 CB1C     		adds	r3, r1, #3
 2004 0028 5360     		str	r3, [r2, #4]
 2005              	.LVL218:
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2006              		.loc 5 59 0
 2007 002a 4B5D     		ldrb	r3, [r1, r5]	@ zero_extendqisi2
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 2008              		.loc 5 70 0
 2009 002c 0C30     		adds	r0, r0, #12
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2010              		.loc 5 59 0
 2011 002e 9360     		str	r3, [r2, #8]
  60:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2012              		.loc 5 60 0
 2013 0030 6179     		ldrb	r1, [r4, #5]	@ zero_extendqisi2
 2014              	.LVL219:
 2015 0032 43EA0123 		orr	r3, r3, r1, lsl #8
 2016 0036 9360     		str	r3, [r2, #8]
  61:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2017              		.loc 5 61 0
 2018 0038 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 2019 003a 43EA0143 		orr	r3, r3, r1, lsl #16
 2020 003e 9360     		str	r3, [r2, #8]
  62:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
 2021              		.loc 5 62 0
 2022 0040 E179     		ldrb	r1, [r4, #7]	@ zero_extendqisi2
 2023 0042 43EA0163 		orr	r3, r3, r1, lsl #24
 2024 0046 9360     		str	r3, [r2, #8]
 2025              	.LVL220:
  64:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2026              		.loc 5 64 0
 2027 0048 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 2028 004a D360     		str	r3, [r2, #12]
  65:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2029              		.loc 5 65 0
 2030 004c 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 2031 004e 43EA0123 		orr	r3, r3, r1, lsl #8
 2032 0052 D360     		str	r3, [r2, #12]
  66:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2033              		.loc 5 66 0
 2034 0054 A17A     		ldrb	r1, [r4, #10]	@ zero_extendqisi2
 2035 0056 43EA0143 		orr	r3, r3, r1, lsl #16
 2036 005a D360     		str	r3, [r2, #12]
  67:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
 2037              		.loc 5 67 0
 2038 005c E17A     		ldrb	r1, [r4, #11]	@ zero_extendqisi2
 2039 005e 43EA0163 		orr	r3, r3, r1, lsl #24
 2040 0062 D360     		str	r3, [r2, #12]
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 2041              		.loc 5 70 0
 2042 0064 03B0     		add	sp, sp, #12
 2043              	.LCFI20:
 2044              		.cfi_def_cfa_offset 12
 2045              		@ sp needed
 2046 0066 30BD     		pop	{r4, r5, pc}
 2047              		.cfi_endproc
 2048              	.LFE1145:
 2049              		.cantunwind
 2050              		.fnend
 2052              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 2053              		.align	1
 2054              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 2055              		.thumb
 2056              		.thumb_func
 2058              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 2059              		.fnstart
 2060              	.LFB1075:
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2061              		.loc 4 123 0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 8
 2064              		@ frame_needed = 0, uses_anonymous_args = 0
 2065              	.LVL221:
 2066 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2067              	.LCFI21:
 2068              		.cfi_def_cfa_offset 32
 2069              		.cfi_offset 4, -20
 2070              		.cfi_offset 5, -16
 2071              		.cfi_offset 6, -12
 2072              		.cfi_offset 7, -8
 2073              		.cfi_offset 14, -4
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 2074              		.loc 4 126 0
 2075 0002 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 2076              	.LVL222:
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2077              		.loc 4 127 0
 2078 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2079              		.loc 4 123 0
 2080 0006 0446     		mov	r4, r0
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2081              		.loc 4 127 0
 2082 0008 AB42     		cmp	r3, r5
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2083              		.loc 4 123 0
 2084 000a 0E46     		mov	r6, r1
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2085              		.loc 4 127 0
 2086 000c 04D2     		bcs	.L106
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2087              		.loc 4 128 0
 2088 000e A900     		lsls	r1, r5, #2
 2089              	.LVL223:
 2090 0010 C068     		ldr	r0, [r0, #12]
 2091              	.LVL224:
 2092 0012 FFF7FEFF 		bl	realloc
 2093              	.LVL225:
 2094 0016 E060     		str	r0, [r4, #12]
 2095              	.L106:
 2096              	.LVL226:
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 2097              		.loc 4 130 0
 2098 0018 2571     		strb	r5, [r4, #4]
 2099              	.LVL227:
 2100 001a 321D     		adds	r2, r6, #4
 2101 001c 0021     		movs	r1, #0
 2102              	.LVL228:
 2103              	.L108:
 2104              	.LBB150:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2105              		.loc 4 131 0 discriminator 3
 2106 001e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2107 0020 4F1C     		adds	r7, r1, #1
 2108 0022 C9B2     		uxtb	r1, r1
 2109 0024 8B42     		cmp	r3, r1
 2110 0026 A2EB0605 		sub	r5, r2, r6
 2111              	.LVL229:
 2112 002a 02F10402 		add	r2, r2, #4
 2113 002e 14D9     		bls	.L107
 2114              	.LVL230:
 2115              	.LBB151:
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 2116              		.loc 4 141 0 discriminator 2
 2117 0030 12F8023C 		ldrb	r3, [r2, #-2]	@ zero_extendqisi2
 2118              	.LVL231:
 2119 0034 12F8030C 		ldrb	r0, [r2, #-3]	@ zero_extendqisi2
 2120              	.LVL232:
 2121 0038 1B04     		lsls	r3, r3, #16
 2122              	.LVL233:
 2123 003a 43EA0023 		orr	r3, r3, r0, lsl #8
 2124 003e 12F8040C 		ldrb	r0, [r2, #-4]	@ zero_extendqisi2
 2125              	.LVL234:
 2126 0042 0343     		orrs	r3, r3, r0
 2127 0044 12F8010C 		ldrb	r0, [r2, #-1]	@ zero_extendqisi2
 2128 0048 43EA0063 		orr	r3, r3, r0, lsl #24
 2129 004c A360     		str	r3, [r4, #8]
 2130              	.LVL235:
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2131              		.loc 4 143 0 discriminator 2
 2132 004e A068     		ldr	r0, [r4, #8]	@ unaligned
 2133 0050 E368     		ldr	r3, [r4, #12]
 2134 0052 43F82100 		str	r0, [r3, r1, lsl #2]	@ unaligned
 2135              	.LVL236:
 2136              	.LBE151:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2137              		.loc 4 131 0 discriminator 2
 2138 0056 3946     		mov	r1, r7
 2139 0058 E1E7     		b	.L108
 2140              	.LVL237:
 2141              	.L107:
 2142              	.LBE150:
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 2143              		.loc 4 145 0
 2144 005a 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2145              	.LVL238:
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 2146              		.loc 4 146 0
 2147 005c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 2148 005e BB42     		cmp	r3, r7
 2149 0060 04D2     		bcs	.L109
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2150              		.loc 4 147 0
 2151 0062 B900     		lsls	r1, r7, #2
 2152 0064 A069     		ldr	r0, [r4, #24]
 2153 0066 FFF7FEFF 		bl	realloc
 2154              	.LVL239:
 2155 006a A061     		str	r0, [r4, #24]
 2156              	.L109:
 2157              	.LVL240:
 2158 006c 2B1D     		adds	r3, r5, #4
 2159              	.LVL241:
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 2160              		.loc 4 149 0
 2161 006e 2774     		strb	r7, [r4, #16]
 2162              	.LVL242:
 2163 0070 3344     		add	r3, r3, r6
 2164              	.LVL243:
 2165 0072 0022     		movs	r2, #0
 2166              	.LVL244:
 2167              	.L111:
 2168              	.LBB152:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2169              		.loc 4 150 0 discriminator 3
 2170 0074 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 2171 0076 571C     		adds	r7, r2, #1
 2172 0078 D2B2     		uxtb	r2, r2
 2173 007a 9142     		cmp	r1, r2
 2174 007c A3EB0605 		sub	r5, r3, r6
 2175              	.LVL245:
 2176 0080 03F10403 		add	r3, r3, #4
 2177 0084 14D9     		bls	.L110
 2178              	.LVL246:
 2179              	.LBB153:
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 2180              		.loc 4 159 0 discriminator 2
 2181 0086 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 2182 008a 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2183 008e 0904     		lsls	r1, r1, #16
 2184              	.LVL247:
 2185 0090 41EA0021 		orr	r1, r1, r0, lsl #8
 2186              	.LVL248:
 2187 0094 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2188 0098 0143     		orrs	r1, r1, r0
 2189 009a 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2190              	.LVL249:
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 2191              		.loc 4 160 0 discriminator 2
 2192 009e 41EA0061 		orr	r1, r1, r0, lsl #24
 2193 00a2 6161     		str	r1, [r4, #20]	@ float
 2194              	.LVL250:
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2195              		.loc 4 162 0 discriminator 2
 2196 00a4 6069     		ldr	r0, [r4, #20]	@ unaligned
 2197 00a6 A169     		ldr	r1, [r4, #24]
 2198 00a8 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 2199              	.LVL251:
 2200              	.LBE153:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2201              		.loc 4 150 0 discriminator 2
 2202 00ac 3A46     		mov	r2, r7
 2203 00ae E1E7     		b	.L111
 2204              	.LVL252:
 2205              	.L110:
 2206              	.LBE152:
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 2207              		.loc 4 164 0
 2208 00b0 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2209              	.LVL253:
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 2210              		.loc 4 165 0
 2211 00b2 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 2212 00b4 BB42     		cmp	r3, r7
 2213 00b6 04D2     		bcs	.L112
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2214              		.loc 4 166 0
 2215 00b8 B900     		lsls	r1, r7, #2
 2216 00ba 606A     		ldr	r0, [r4, #36]
 2217 00bc FFF7FEFF 		bl	realloc
 2218              	.LVL254:
 2219 00c0 6062     		str	r0, [r4, #36]
 2220              	.L112:
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 2221              		.loc 4 167 0
 2222 00c2 2B1D     		adds	r3, r5, #4
 2223              	.LVL255:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2224              		.loc 4 168 0
 2225 00c4 0025     		movs	r5, #0
 2226              	.LBB154:
 2227              	.LBB155:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2228              		.loc 4 176 0
 2229 00c6 AE46     		mov	lr, r5
 2230              	.LBE155:
 2231              	.LBE154:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2232              		.loc 4 168 0
 2233 00c8 2777     		strb	r7, [r4, #28]
 2234              	.LVL256:
 2235              	.L116:
 2236              	.LBB159:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2237              		.loc 4 169 0 discriminator 1
 2238 00ca 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 2239 00cc EFB2     		uxtb	r7, r5
 2240 00ce BA42     		cmp	r2, r7
 2241 00d0 19D9     		bls	.L113
 2242              	.LBB158:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2243              		.loc 4 171 0
 2244 00d2 F058     		ldr	r0, [r6, r3]	@ unaligned
 2245              	.LBB156:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2246              		.loc 4 173 0
 2247 00d4 1A1D     		adds	r2, r3, #4
 2248              	.LBE156:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2249              		.loc 4 171 0
 2250 00d6 0190     		str	r0, [sp, #4]	@ unaligned
 2251              	.LVL257:
 2252              	.LBB157:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2253              		.loc 4 173 0
 2254 00d8 019B     		ldr	r3, [sp, #4]
 2255 00da B118     		adds	r1, r6, r2
 2256 00dc 1344     		add	r3, r3, r2
 2257              	.LVL258:
 2258              	.L115:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2259              		.loc 4 173 0 is_stmt 0 discriminator 3
 2260 00de 881B     		subs	r0, r1, r6
 2261              	.LVL259:
 2262 00e0 8342     		cmp	r3, r0
 2263 00e2 04D9     		bls	.L114
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2264              		.loc 4 174 0 is_stmt 1 discriminator 2
 2265 00e4 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 2266              	.LVL260:
 2267 00e8 01F8020C 		strb	r0, [r1, #-2]
 2268              	.LVL261:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2269              		.loc 4 173 0 discriminator 2
 2270 00ec F7E7     		b	.L115
 2271              	.LVL262:
 2272              	.L114:
 2273              	.LBE157:
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2274              		.loc 4 177 0 discriminator 2
 2275 00ee 013A     		subs	r2, r2, #1
 2276              	.LVL263:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2277              		.loc 4 176 0 discriminator 2
 2278 00f0 F118     		adds	r1, r6, r3
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2279              		.loc 4 177 0 discriminator 2
 2280 00f2 3244     		add	r2, r2, r6
 2281              	.LVL264:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2282              		.loc 4 176 0 discriminator 2
 2283 00f4 01F801EC 		strb	lr, [r1, #-1]
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2284              		.loc 4 177 0 discriminator 2
 2285 00f8 2262     		str	r2, [r4, #32]
 2286              	.LVL265:
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2287              		.loc 4 179 0 discriminator 2
 2288 00fa 216A     		ldr	r1, [r4, #32]	@ unaligned
 2289 00fc 626A     		ldr	r2, [r4, #36]
 2290 00fe 0135     		adds	r5, r5, #1
 2291              	.LVL266:
 2292 0100 42F82710 		str	r1, [r2, r7, lsl #2]	@ unaligned
 2293              	.LVL267:
 2294              	.LBE158:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2295              		.loc 4 169 0 discriminator 2
 2296 0104 E1E7     		b	.L116
 2297              	.LVL268:
 2298              	.L113:
 2299              	.LBE159:
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2300              		.loc 4 182 0
 2301 0106 1846     		mov	r0, r3
 2302 0108 03B0     		add	sp, sp, #12
 2303              	.LCFI22:
 2304              		.cfi_def_cfa_offset 20
 2305              		@ sp needed
 2306 010a F0BD     		pop	{r4, r5, r6, r7, pc}
 2307              		.cfi_endproc
 2308              	.LFE1075:
 2309              		.cantunwind
 2310              		.fnend
 2312              		.section	.text._ZN8std_msgs16MultiArrayLayout11deserializeEPh,"axG",%progbits,_ZN8std_msgs16MultiA
 2313              		.align	1
 2314              		.weak	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 2315              		.thumb
 2316              		.thumb_func
 2318              	_ZN8std_msgs16MultiArrayLayout11deserializeEPh:
 2319              		.fnstart
 2320              	.LFB1152:
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2321              		.loc 6 45 0
 2322              		.cfi_startproc
 2323              		@ args = 0, pretend = 0, frame = 0
 2324              		@ frame_needed = 0, uses_anonymous_args = 0
 2325              	.LVL269:
 2326 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2327              	.LCFI23:
 2328              		.cfi_def_cfa_offset 32
 2329              		.cfi_offset 4, -32
 2330              		.cfi_offset 5, -28
 2331              		.cfi_offset 6, -24
 2332              		.cfi_offset 7, -20
 2333              		.cfi_offset 8, -16
 2334              		.cfi_offset 9, -12
 2335              		.cfi_offset 10, -8
 2336              		.cfi_offset 14, -4
  48:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       if(dim_lengthT > dim_length)
 2337              		.loc 6 48 0
 2338 0004 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 2339              	.LVL270:
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2340              		.loc 6 49 0
 2341 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2342              		.loc 6 45 0
 2343 0008 0446     		mov	r4, r0
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2344              		.loc 6 49 0
 2345 000a AB42     		cmp	r3, r5
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2346              		.loc 6 45 0
 2347 000c 0F46     		mov	r7, r1
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2348              		.loc 6 49 0
 2349 000e 04D2     		bcs	.L119
  50:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += 3;
 2350              		.loc 6 50 0
 2351 0010 2901     		lsls	r1, r5, #4
 2352              	.LVL271:
 2353 0012 8069     		ldr	r0, [r0, #24]
 2354              	.LVL272:
 2355 0014 FFF7FEFF 		bl	realloc
 2356              	.LVL273:
 2357 0018 A061     		str	r0, [r4, #24]
 2358              	.L119:
 2359              	.LVL274:
  52:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 2360              		.loc 6 52 0
 2361 001a 2571     		strb	r5, [r4, #4]
 2362              	.LVL275:
 2363 001c 0023     		movs	r3, #0
  51:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length = dim_lengthT;
 2364              		.loc 6 51 0
 2365 001e 0426     		movs	r6, #4
 2366              	.LBB160:
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2367              		.loc 6 54 0
 2368 0020 04F10808 		add	r8, r4, #8
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2369              		.loc 6 55 0
 2370 0024 04F1180A 		add	r10, r4, #24
 2371              	.LVL276:
 2372              	.L122:
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
 2373              		.loc 6 53 0 discriminator 3
 2374 0028 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 2375 002a DDB2     		uxtb	r5, r3
 2376 002c AA42     		cmp	r2, r5
 2377 002e 03F10109 		add	r9, r3, #1
 2378 0032 07EB0601 		add	r1, r7, r6
 2379 0036 0FD9     		bls	.L120
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2380              		.loc 6 54 0 discriminator 2
 2381 0038 4046     		mov	r0, r8
 2382 003a FFF7FEFF 		bl	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 2383              	.LVL277:
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2384              		.loc 6 55 0 discriminator 2
 2385 003e 4246     		mov	r2, r8
 2386 0040 A369     		ldr	r3, [r4, #24]
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2387              		.loc 6 54 0 discriminator 2
 2388 0042 0644     		add	r6, r6, r0
 2389              	.LVL278:
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2390              		.loc 6 55 0 discriminator 2
 2391 0044 03EB0513 		add	r3, r3, r5, lsl #4
 2392              	.L121:
 2393 0048 52F8041B 		ldr	r1, [r2], #4	@ unaligned
 2394 004c 5245     		cmp	r2, r10
 2395 004e 43F8041B 		str	r1, [r3], #4	@ unaligned
 2396 0052 F9D1     		bne	.L121
 2397              	.LVL279:
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
 2398              		.loc 6 53 0 discriminator 2
 2399 0054 4B46     		mov	r3, r9
 2400 0056 E7E7     		b	.L122
 2401              	.LVL280:
 2402              	.L120:
 2403              	.LBE160:
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2404              		.loc 6 57 0
 2405 0058 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 2406              	.LVL281:
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
 2407              		.loc 6 63 0
 2408 005a 301D     		adds	r0, r6, #4
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2409              		.loc 6 57 0
 2410 005c E361     		str	r3, [r4, #28]
  58:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2411              		.loc 6 58 0
 2412 005e 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 2413 0060 43EA0223 		orr	r3, r3, r2, lsl #8
 2414 0064 E361     		str	r3, [r4, #28]
  59:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2415              		.loc 6 59 0
 2416 0066 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 2417 0068 43EA0243 		orr	r3, r3, r2, lsl #16
 2418 006c E361     		str	r3, [r4, #28]
  60:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
 2419              		.loc 6 60 0
 2420 006e CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 2421 0070 43EA0263 		orr	r3, r3, r2, lsl #24
 2422 0074 E361     		str	r3, [r4, #28]
 2423              	.LVL282:
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
 2424              		.loc 6 63 0
 2425 0076 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2426              		.cfi_endproc
 2427              	.LFE1152:
 2428              		.cantunwind
 2429              		.fnend
 2431              		.section	.text._ZN8std_msgs17Float32MultiArray11deserializeEPh,"axG",%progbits,_ZN8std_msgs17Float
 2432              		.align	1
 2433              		.weak	_ZN8std_msgs17Float32MultiArray11deserializeEPh
 2434              		.thumb
 2435              		.thumb_func
 2437              	_ZN8std_msgs17Float32MultiArray11deserializeEPh:
 2438              		.fnstart
 2439              	.LFB1159:
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2440              		.loc 7 50 0
 2441              		.cfi_startproc
 2442              		@ args = 0, pretend = 0, frame = 0
 2443              		@ frame_needed = 0, uses_anonymous_args = 0
 2444              	.LVL283:
 2445 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2446              	.LCFI24:
 2447              		.cfi_def_cfa_offset 24
 2448              		.cfi_offset 3, -24
 2449              		.cfi_offset 4, -20
 2450              		.cfi_offset 5, -16
 2451              		.cfi_offset 6, -12
 2452              		.cfi_offset 7, -8
 2453              		.cfi_offset 14, -4
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2454              		.loc 7 50 0
 2455 0002 0446     		mov	r4, r0
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2456              		.loc 7 53 0
 2457 0004 0430     		adds	r0, r0, #4
 2458              	.LVL284:
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2459              		.loc 7 50 0
 2460 0006 0D46     		mov	r5, r1
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2461              		.loc 7 53 0
 2462 0008 FFF7FEFF 		bl	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 2463              	.LVL285:
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
 2464              		.loc 7 55 0
 2465 000c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
  54:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       if(data_lengthT > data_length)
 2466              		.loc 7 54 0
 2467 0010 2F5C     		ldrb	r7, [r5, r0]	@ zero_extendqisi2
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2468              		.loc 7 53 0
 2469 0012 0646     		mov	r6, r0
 2470              	.LVL286:
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
 2471              		.loc 7 55 0
 2472 0014 BB42     		cmp	r3, r7
 2473 0016 04D2     		bcs	.L125
  56:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += 3;
 2474              		.loc 7 56 0
 2475 0018 B900     		lsls	r1, r7, #2
 2476 001a E06A     		ldr	r0, [r4, #44]
 2477              	.LVL287:
 2478 001c FFF7FEFF 		bl	realloc
 2479              	.LVL288:
 2480 0020 E062     		str	r0, [r4, #44]
 2481              	.L125:
 2482              	.LVL289:
 2483 0022 331D     		adds	r3, r6, #4
 2484              	.LVL290:
  58:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
 2485              		.loc 7 58 0
 2486 0024 84F82470 		strb	r7, [r4, #36]
 2487              	.LVL291:
 2488 0028 2B44     		add	r3, r3, r5
 2489              	.LVL292:
 2490 002a 0022     		movs	r2, #0
 2491              	.LVL293:
 2492              	.L127:
 2493              	.LBB161:
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 2494              		.loc 7 59 0 discriminator 3
 2495 002c 94F82410 		ldrb	r1, [r4, #36]	@ zero_extendqisi2
 2496 0030 561C     		adds	r6, r2, #1
 2497 0032 D2B2     		uxtb	r2, r2
 2498 0034 9142     		cmp	r1, r2
 2499 0036 A3EB0500 		sub	r0, r3, r5
 2500              	.LVL294:
 2501 003a 03F10403 		add	r3, r3, #4
 2502 003e 14D9     		bls	.L126
 2503              	.LVL295:
 2504              	.LBB162:
  68:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       this->st_data = u_st_data.real;
 2505              		.loc 7 68 0 discriminator 2
 2506 0040 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 2507 0044 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2508              	.LVL296:
 2509 0048 0904     		lsls	r1, r1, #16
 2510              	.LVL297:
 2511 004a 41EA0021 		orr	r1, r1, r0, lsl #8
 2512              	.LVL298:
 2513 004e 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2514 0052 0143     		orrs	r1, r1, r0
 2515 0054 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2516              	.LVL299:
  69:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->st_data);
 2517              		.loc 7 69 0 discriminator 2
 2518 0058 41EA0061 		orr	r1, r1, r0, lsl #24
 2519 005c A162     		str	r1, [r4, #40]	@ float
 2520              	.LVL300:
  71:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
 2521              		.loc 7 71 0 discriminator 2
 2522 005e A06A     		ldr	r0, [r4, #40]	@ unaligned
 2523 0060 E16A     		ldr	r1, [r4, #44]
 2524 0062 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 2525              	.LVL301:
 2526              	.LBE162:
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 2527              		.loc 7 59 0 discriminator 2
 2528 0066 3246     		mov	r2, r6
 2529 0068 E0E7     		b	.L127
 2530              	.LVL302:
 2531              	.L126:
 2532              	.LBE161:
  74:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
 2533              		.loc 7 74 0
 2534 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2535              		.cfi_endproc
 2536              	.LFE1159:
 2537              		.cantunwind
 2538              		.fnend
 2540              		.global	__aeabi_fcmpeq
 2541              		.global	__aeabi_f2d
 2542              		.global	__aeabi_dmul
 2543              		.global	__aeabi_ddiv
 2544              		.global	__aeabi_d2f
 2545              		.global	__aeabi_fadd
 2546              		.global	__aeabi_fmul
 2547              		.global	__aeabi_fsub
 2548              		.global	__aeabi_fdiv
 2549              		.global	__aeabi_dadd
 2550              		.global	__aeabi_fcmpgt
 2551              		.global	__aeabi_fcmplt
 2552              		.text
 2553              		.align	1
 2554              		.global	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 2555              		.thumb
 2556              		.thumb_func
 2558              	_Z8motor_cbRKN12roberto_msgs10MotorStateE:
 2559              		.fnstart
 2560              	.LFB1286:
 2561              		.file 12 "src/main.cpp"
   1:src/main.cpp  **** #include <stm32f10x.h>
   2:src/main.cpp  **** 
   3:src/main.cpp  **** #include <stdio.h>
   4:src/main.cpp  **** #include <math.h>
   5:src/main.cpp  **** 
   6:src/main.cpp  **** #include "motor.h"
   7:src/main.cpp  **** #include "motorSettings.h"
   8:src/main.cpp  **** #include "led.h"
   9:src/main.cpp  **** #include "encoder.h"
  10:src/main.cpp  **** #include "stm32_time.h"
  11:src/main.cpp  **** 
  12:src/main.cpp  **** 
  13:src/main.cpp  **** #include <ros.h>
  14:src/main.cpp  **** #include <std_msgs/MultiArrayDimension.h>
  15:src/main.cpp  **** #include <std_msgs/Float32MultiArray.h>
  16:src/main.cpp  **** #include <std_msgs/Float32.h>
  17:src/main.cpp  **** #include <std_msgs/UInt8.h>
  18:src/main.cpp  **** #include <nav_msgs/Odometry.h>
  19:src/main.cpp  **** #include <sensor_msgs/Joy.h>
  20:src/main.cpp  **** #include <roberto_msgs/MotorState.h>
  21:src/main.cpp  **** #include <tf/tf.h>
  22:src/main.cpp  **** #include <tf/transform_broadcaster.h>
  23:src/main.cpp  **** #include <ros/time.h>
  24:src/main.cpp  **** 
  25:src/main.cpp  **** #define CMDMSGTIMEOUT 500 // ms
  26:src/main.cpp  **** //#define DEBUG
  27:src/main.cpp  **** 
  28:src/main.cpp  **** /* Private function prototypes -----------------------------------------------*/
  29:src/main.cpp  **** #ifdef DEBUG
  30:src/main.cpp  **** extern "C"{
  31:src/main.cpp  ****   extern void initialise_monitor_handles(void);
  32:src/main.cpp  **** }
  33:src/main.cpp  **** #else
  34:src/main.cpp  **** #define printf(...) 
  35:src/main.cpp  **** #endif
  36:src/main.cpp  **** 
  37:src/main.cpp  **** 
  38:src/main.cpp  **** 
  39:src/main.cpp  **** motor *servo_left;
  40:src/main.cpp  **** motor *servo_right;
  41:src/main.cpp  **** motor *front_right;
  42:src/main.cpp  **** motor *front_left;
  43:src/main.cpp  **** motor *rear_right;
  44:src/main.cpp  **** motor *rear_left;
  45:src/main.cpp  **** 
  46:src/main.cpp  **** float d, L;
  47:src/main.cpp  **** 
  48:src/main.cpp  **** float motorCmd[4];
  49:src/main.cpp  **** float spinAngle = 0.0;
  50:src/main.cpp  **** uint8_t currentMode = roberto_msgs::MotorState::DRIVE_MODE_PIVOT;
  51:src/main.cpp  **** uint32_t lastMsg;
  52:src/main.cpp  **** bool initialized = false;
  53:src/main.cpp  **** 
  54:src/main.cpp  **** ros::NodeHandle nh;
  55:src/main.cpp  **** 
  56:src/main.cpp  **** std_msgs::MultiArrayDimension odomDim;
  57:src/main.cpp  **** std_msgs::MultiArrayDimension debugDim;
  58:src/main.cpp  **** 
  59:src/main.cpp  **** __IO bool shuttingDown = false;
  60:src/main.cpp  **** __IO bool waitForServos = false;
  61:src/main.cpp  **** 
  62:src/main.cpp  **** bool spinningAutonomously = false;
  63:src/main.cpp  **** 
  64:src/main.cpp  **** void motor_cb( const roberto_msgs::MotorState& cmd_msg){
 2562              		.loc 12 64 0
 2563              		.cfi_startproc
 2564              		@ args = 0, pretend = 0, frame = 16
 2565              		@ frame_needed = 0, uses_anonymous_args = 0
 2566              	.LVL303:
 2567 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2568              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2569              	.LCFI25:
 2570              		.cfi_def_cfa_offset 36
 2571              		.cfi_offset 4, -36
 2572              		.cfi_offset 5, -32
 2573              		.cfi_offset 6, -28
 2574              		.cfi_offset 7, -24
 2575              		.cfi_offset 8, -20
 2576              		.cfi_offset 9, -16
 2577              		.cfi_offset 10, -12
 2578              		.cfi_offset 11, -8
 2579              		.cfi_offset 14, -4
  65:src/main.cpp  ****   if(!initialized)
 2580              		.loc 12 65 0
 2581 0004 984C     		ldr	r4, .L160+16
  64:src/main.cpp  ****   if(!initialized)
 2582              		.loc 12 64 0
 2583              		.pad #20
 2584 0006 85B0     		sub	sp, sp, #20
 2585              	.LCFI26:
 2586              		.cfi_def_cfa_offset 56
 2587              		.loc 12 65 0
 2588 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  64:src/main.cpp  ****   if(!initialized)
 2589              		.loc 12 64 0
 2590 000a 0646     		mov	r6, r0
 2591              		.loc 12 65 0
 2592 000c 002B     		cmp	r3, #0
 2593 000e 00F01E81 		beq	.L128
 2594              	.LVL304:
 2595              	.LBB169:
 2596              	.LBB170:
  66:src/main.cpp  ****     return;
  67:src/main.cpp  ****   lastMsg = millis();
 2597              		.loc 12 67 0
 2598 0012 FFF7FEFF 		bl	millis
 2599              	.LVL305:
  68:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
  69:src/main.cpp  ****   if(intMode == cmd_msg.DRIVE_MODE_AUTO){
  70:src/main.cpp  **** 
  71:src/main.cpp  ****   }
  72:src/main.cpp  **** 
  73:src/main.cpp  ****   if(currentMode != intMode){
 2600              		.loc 12 73 0
 2601 0016 954B     		ldr	r3, .L160+20
  68:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
 2602              		.loc 12 68 0
 2603 0018 96F82870 		ldrb	r7, [r6, #40]	@ zero_extendqisi2
 2604              	.LVL306:
 2605              		.loc 12 73 0
 2606 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  67:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
 2607              		.loc 12 67 0
 2608 001e 6060     		str	r0, [r4, #4]
 2609              		.loc 12 73 0
 2610 0020 BB42     		cmp	r3, r7
  74:src/main.cpp  ****     waitForServos = true;
 2611              		.loc 12 74 0
 2612 0022 1CBF     		itt	ne
 2613 0024 0123     		movne	r3, #1
 2614 0026 2372     		strbne	r3, [r4, #8]
 2615              	.LBB171:
  75:src/main.cpp  ****   }
  76:src/main.cpp  **** 
  77:src/main.cpp  ****   if(intMode == cmd_msg.DRIVE_MODE_PIVOT){
 2616              		.loc 12 77 0
 2617 0028 012F     		cmp	r7, #1
 2618 002a 40F0D080 		bne	.L131
 2619              	.LVL307:
 2620              	.LBB172:
 2621              	.LBB173:
  78:src/main.cpp  ****     float speedMult[2] = {1,1};
  79:src/main.cpp  ****     float angle[2] = {0, 0};
  80:src/main.cpp  ****     if (cmd_msg.heading_angle != 0){
 2622              		.loc 12 80 0
 2623 002e D6F818A0 		ldr	r10, [r6, #24]	@ float
 2624 0032 0021     		movs	r1, #0
 2625 0034 5046     		mov	r0, r10
 2626 0036 FFF7FEFF 		bl	__aeabi_fcmpeq
 2627              	.LVL308:
 2628 003a 0028     		cmp	r0, #0
 2629 003c 7FD1     		bne	.L156
 2630              	.LBB174:
  81:src/main.cpp  ****       float R = 0.05/sin(cmd_msg.heading_angle*M_PI/360);
 2631              		.loc 12 81 0
 2632 003e 5046     		mov	r0, r10
 2633 0040 FFF7FEFF 		bl	__aeabi_f2d
 2634              	.LVL309:
 2635 0044 84A3     		adr	r3, .L160
 2636 0046 D3E90023 		ldrd	r2, [r3]
 2637 004a CDE90001 		strd	r0, [sp]
 2638 004e FFF7FEFF 		bl	__aeabi_dmul
 2639              	.LVL310:
 2640 0052 0022     		movs	r2, #0
 2641 0054 864B     		ldr	r3, .L160+24
 2642 0056 FFF7FEFF 		bl	__aeabi_ddiv
 2643              	.LVL311:
 2644 005a FFF7FEFF 		bl	sin
 2645              	.LVL312:
 2646 005e 0246     		mov	r2, r0
 2647 0060 0B46     		mov	r3, r1
 2648 0062 7FA1     		adr	r1, .L160+8
 2649 0064 D1E90001 		ldrd	r0, [r1]
 2650 0068 FFF7FEFF 		bl	__aeabi_ddiv
 2651              	.LVL313:
 2652 006c FFF7FEFF 		bl	__aeabi_d2f
 2653              	.LVL314:
  82:src/main.cpp  ****       speedMult[0] = (2*R)/(2*R - (L/2 + d));
 2654              		.loc 12 82 0
 2655 0070 0146     		mov	r1, r0
  81:src/main.cpp  ****       float R = 0.05/sin(cmd_msg.heading_angle*M_PI/360);
 2656              		.loc 12 81 0
 2657 0072 8346     		mov	fp, r0
 2658              	.LVL315:
 2659              		.loc 12 82 0
 2660 0074 FFF7FEFF 		bl	__aeabi_fadd
 2661              	.LVL316:
 2662 0078 D4F80C80 		ldr	r8, [r4, #12]	@ float
 2663 007c 0546     		mov	r5, r0
 2664 007e 4FF07C51 		mov	r1, #1056964608
 2665 0082 4046     		mov	r0, r8
 2666 0084 FFF7FEFF 		bl	__aeabi_fmul
 2667              	.LVL317:
 2668 0088 2169     		ldr	r1, [r4, #16]	@ float
 2669 008a FFF7FEFF 		bl	__aeabi_fadd
 2670              	.LVL318:
 2671 008e 0146     		mov	r1, r0
 2672 0090 0390     		str	r0, [sp, #12]
 2673 0092 2846     		mov	r0, r5
 2674 0094 FFF7FEFF 		bl	__aeabi_fsub
 2675              	.LVL319:
 2676 0098 0146     		mov	r1, r0
 2677 009a 2846     		mov	r0, r5
 2678 009c FFF7FEFF 		bl	__aeabi_fdiv
 2679              	.LVL320:
  83:src/main.cpp  ****       speedMult[1] = (2*R)/(2*R + (L/2 + d));
 2680              		.loc 12 83 0
 2681 00a0 039B     		ldr	r3, [sp, #12]
  82:src/main.cpp  ****       speedMult[0] = (2*R)/(2*R - (L/2 + d));
 2682              		.loc 12 82 0
 2683 00a2 8146     		mov	r9, r0
 2684              	.LVL321:
 2685              		.loc 12 83 0
 2686 00a4 1946     		mov	r1, r3
 2687 00a6 2846     		mov	r0, r5
 2688              	.LVL322:
 2689 00a8 FFF7FEFF 		bl	__aeabi_fadd
 2690              	.LVL323:
 2691 00ac 0146     		mov	r1, r0
 2692 00ae 2846     		mov	r0, r5
 2693 00b0 FFF7FEFF 		bl	__aeabi_fdiv
 2694              	.LVL324:
  84:src/main.cpp  ****       //angle[0] = atan(L/(B+R));   // B=L as robot is quadratic
  85:src/main.cpp  ****       angle[0] = cmd_msg.heading_angle + atan(L/(L+R));
 2695              		.loc 12 85 0
 2696 00b4 4146     		mov	r1, r8
  83:src/main.cpp  ****       speedMult[1] = (2*R)/(2*R + (L/2 + d));
 2697              		.loc 12 83 0
 2698 00b6 0390     		str	r0, [sp, #12]	@ float
 2699              	.LVL325:
 2700              		.loc 12 85 0
 2701 00b8 5846     		mov	r0, fp
 2702              	.LVL326:
 2703 00ba FFF7FEFF 		bl	__aeabi_fadd
 2704              	.LVL327:
 2705 00be 0146     		mov	r1, r0
 2706 00c0 4046     		mov	r0, r8
 2707 00c2 FFF7FEFF 		bl	__aeabi_fdiv
 2708              	.LVL328:
 2709 00c6 FFF7FEFF 		bl	__aeabi_f2d
 2710              	.LVL329:
 2711 00ca FFF7FEFF 		bl	atan
 2712              	.LVL330:
 2713 00ce 0246     		mov	r2, r0
 2714 00d0 0B46     		mov	r3, r1
 2715 00d2 DDE90001 		ldrd	r0, [sp]
 2716 00d6 FFF7FEFF 		bl	__aeabi_dadd
 2717              	.LVL331:
 2718 00da FFF7FEFF 		bl	__aeabi_d2f
 2719              	.LVL332:
  86:src/main.cpp  ****       angle[1] = cmd_msg.heading_angle + atan(L/(L-R));
 2720              		.loc 12 86 0
 2721 00de 5946     		mov	r1, fp
  85:src/main.cpp  ****       angle[1] = cmd_msg.heading_angle + atan(L/(L-R));
 2722              		.loc 12 85 0
 2723 00e0 0546     		mov	r5, r0
 2724              	.LVL333:
 2725              		.loc 12 86 0
 2726 00e2 4046     		mov	r0, r8
 2727              	.LVL334:
 2728 00e4 FFF7FEFF 		bl	__aeabi_fsub
 2729              	.LVL335:
 2730 00e8 0146     		mov	r1, r0
 2731 00ea 4046     		mov	r0, r8
 2732 00ec FFF7FEFF 		bl	__aeabi_fdiv
 2733              	.LVL336:
 2734 00f0 FFF7FEFF 		bl	__aeabi_f2d
 2735              	.LVL337:
 2736 00f4 FFF7FEFF 		bl	atan
 2737              	.LVL338:
 2738 00f8 0246     		mov	r2, r0
 2739 00fa 0B46     		mov	r3, r1
 2740 00fc DDE90001 		ldrd	r0, [sp]
 2741 0100 FFF7FEFF 		bl	__aeabi_dadd
 2742              	.LVL339:
 2743 0104 FFF7FEFF 		bl	__aeabi_d2f
 2744              	.LVL340:
 2745              	.LBE174:
 2746              	.LBE173:
  87:src/main.cpp  ****     }else{
  88:src/main.cpp  ****       angle[0] = 0;
  89:src/main.cpp  ****       angle[1] = 0;
  90:src/main.cpp  ****     }
  91:src/main.cpp  **** 
  92:src/main.cpp  ****     angle[0] = angle[0] > MAX_ANGLE_PIVOT? MAX_ANGLE_PIVOT : ( angle[0] < -MAX_ANGLE_PIVOT? -MAX_AN
 2747              		.loc 12 92 0
 2748 0108 5A49     		ldr	r1, .L160+28
 2749              	.LBB176:
 2750              	.LBB175:
  86:src/main.cpp  ****     }else{
 2751              		.loc 12 86 0
 2752 010a 8046     		mov	r8, r0
 2753              	.LVL341:
 2754              	.LBE175:
 2755              	.LBE176:
 2756              		.loc 12 92 0
 2757 010c 2846     		mov	r0, r5
 2758              	.LVL342:
 2759 010e FFF7FEFF 		bl	__aeabi_fcmpgt
 2760              	.LVL343:
 2761 0112 30B9     		cbnz	r0, .L145
 2762 0114 5849     		ldr	r1, .L160+32
 2763 0116 2846     		mov	r0, r5
 2764 0118 FFF7FEFF 		bl	__aeabi_fcmplt
 2765              	.LVL344:
 2766 011c 10B1     		cbz	r0, .L134
 2767 011e 564D     		ldr	r5, .L160+32
 2768              	.LVL345:
 2769 0120 00E0     		b	.L134
 2770              	.LVL346:
 2771              	.L145:
 2772 0122 544D     		ldr	r5, .L160+28
 2773              	.LVL347:
 2774              	.L134:
  93:src/main.cpp  ****     angle[1] = angle[1] > MAX_ANGLE_PIVOT? MAX_ANGLE_PIVOT : ( angle[1] < -MAX_ANGLE_PIVOT? -MAX_AN
 2775              		.loc 12 93 0
 2776 0124 5349     		ldr	r1, .L160+28
 2777 0126 4046     		mov	r0, r8
 2778 0128 FFF7FEFF 		bl	__aeabi_fcmpgt
 2779              	.LVL348:
 2780 012c 70B9     		cbnz	r0, .L147
 2781 012e 5249     		ldr	r1, .L160+32
 2782 0130 4046     		mov	r0, r8
 2783 0132 FFF7FEFF 		bl	__aeabi_fcmplt
 2784              	.LVL349:
 2785 0136 58B1     		cbz	r0, .L132
 2786 0138 DFF83C81 		ldr	r8, .L160+32
 2787              	.LVL350:
 2788 013c 08E0     		b	.L132
 2789              	.LVL351:
 2790              	.L156:
  78:src/main.cpp  ****     float angle[2] = {0, 0};
 2791              		.loc 12 78 0
 2792 013e 4FF07E59 		mov	r9, #1065353216
 2793              	.LBB177:
  88:src/main.cpp  ****       angle[1] = 0;
 2794              		.loc 12 88 0
 2795 0142 0025     		movs	r5, #0
 2796              	.LBE177:
  78:src/main.cpp  ****     float angle[2] = {0, 0};
 2797              		.loc 12 78 0
 2798 0144 CDF80C90 		str	r9, [sp, #12]	@ float
 2799              	.LBB178:
  89:src/main.cpp  ****     }
 2800              		.loc 12 89 0
 2801 0148 A846     		mov	r8, r5
 2802 014a 01E0     		b	.L132
 2803              	.LVL352:
 2804              	.L147:
 2805              	.LBE178:
 2806              		.loc 12 93 0
 2807 014c DFF82481 		ldr	r8, .L160+28
 2808              	.LVL353:
 2809              	.L132:
  94:src/main.cpp  **** 
  95:src/main.cpp  ****     if(cmd_msg.heading_angle > 0){
 2810              		.loc 12 95 0
 2811 0150 0021     		movs	r1, #0
 2812 0152 5046     		mov	r0, r10
 2813 0154 FFF7FEFF 		bl	__aeabi_fcmpgt
 2814              	.LVL354:
  96:src/main.cpp  ****       servo_left->setReference(angle[0]+135);
 2815              		.loc 12 96 0
 2816 0158 D4F814A0 		ldr	r10, [r4, #20]
 2817 015c 4749     		ldr	r1, .L160+36
  95:src/main.cpp  ****       servo_left->setReference(angle[0]+135);
 2818              		.loc 12 95 0
 2819 015e 90B1     		cbz	r0, .L157
 2820              		.loc 12 96 0
 2821 0160 2846     		mov	r0, r5
 2822 0162 FFF7FEFF 		bl	__aeabi_fadd
 2823              	.LVL355:
 2824 0166 DAF80030 		ldr	r3, [r10]
 2825 016a 0146     		mov	r1, r0
 2826 016c 5B69     		ldr	r3, [r3, #20]
 2827 016e 5046     		mov	r0, r10
 2828 0170 9847     		blx	r3
 2829              	.LVL356:
  97:src/main.cpp  ****       servo_right->setReference(-angle[1]+135);
 2830              		.loc 12 97 0
 2831 0172 4146     		mov	r1, r8
 2832 0174 4148     		ldr	r0, .L160+36
 2833 0176 FFF7FEFF 		bl	__aeabi_fsub
 2834              	.LVL357:
 2835 017a A569     		ldr	r5, [r4, #24]
 2836 017c 0146     		mov	r1, r0
 2837 017e 2B68     		ldr	r3, [r5]
 2838 0180 2846     		mov	r0, r5
 2839 0182 5B69     		ldr	r3, [r3, #20]
 2840 0184 13E0     		b	.L159
 2841              	.L157:
  98:src/main.cpp  ****     }else{
  99:src/main.cpp  ****       servo_left->setReference(angle[1]+135);
 2842              		.loc 12 99 0
 2843 0186 4046     		mov	r0, r8
 2844 0188 FFF7FEFF 		bl	__aeabi_fadd
 2845              	.LVL358:
 2846 018c DAF80030 		ldr	r3, [r10]
 2847 0190 0146     		mov	r1, r0
 2848 0192 5B69     		ldr	r3, [r3, #20]
 2849 0194 5046     		mov	r0, r10
 2850 0196 9847     		blx	r3
 2851              	.LVL359:
 100:src/main.cpp  ****       servo_right->setReference(-angle[0]+135);
 2852              		.loc 12 100 0
 2853 0198 2946     		mov	r1, r5
 2854 019a 3848     		ldr	r0, .L160+36
 2855 019c FFF7FEFF 		bl	__aeabi_fsub
 2856              	.LVL360:
 2857 01a0 D4F81880 		ldr	r8, [r4, #24]
 2858              	.LVL361:
 2859 01a4 0146     		mov	r1, r0
 2860 01a6 4046     		mov	r0, r8
 2861 01a8 D8F80030 		ldr	r3, [r8]
 2862 01ac 5B69     		ldr	r3, [r3, #20]
 2863              	.L159:
 2864 01ae 9847     		blx	r3
 2865              	.LVL362:
 101:src/main.cpp  ****     }
 102:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed*speedMult[0];
 2866              		.loc 12 102 0
 2867 01b0 366A     		ldr	r6, [r6, #32]	@ float
 2868              	.LVL363:
 2869 01b2 4946     		mov	r1, r9
 2870 01b4 3046     		mov	r0, r6
 2871 01b6 FFF7FEFF 		bl	__aeabi_fmul
 2872              	.LVL364:
 103:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult[1];
 2873              		.loc 12 103 0
 2874 01ba 0399     		ldr	r1, [sp, #12]	@ float
 102:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult[1];
 2875              		.loc 12 102 0
 2876 01bc 0546     		mov	r5, r0
 2877 01be E061     		str	r0, [r4, #28]	@ float
 2878              		.loc 12 103 0
 2879 01c0 3046     		mov	r0, r6
 2880 01c2 FFF7FEFF 		bl	__aeabi_fmul
 2881              	.LVL365:
 104:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed*speedMult[1];
 105:src/main.cpp  ****     motorCmd[3] = cmd_msg.speed*speedMult[0];
 2882              		.loc 12 105 0
 2883 01c6 A562     		str	r5, [r4, #40]	@ float
 103:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed*speedMult[1];
 2884              		.loc 12 103 0
 2885 01c8 2062     		str	r0, [r4, #32]	@ float
 104:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed*speedMult[1];
 2886              		.loc 12 104 0
 2887 01ca 6062     		str	r0, [r4, #36]	@ float
 2888 01cc 3DE0     		b	.L138
 2889              	.LVL366:
 2890              	.L131:
 2891              	.LBE172:
 106:src/main.cpp  **** 
 107:src/main.cpp  ****   }else if(intMode == cmd_msg.DRIVE_MODE_SPIN){
 2892              		.loc 12 107 0
 2893 01ce 022F     		cmp	r7, #2
 2894 01d0 28D1     		bne	.L139
 108:src/main.cpp  ****     if(spinAngle == 0){
 2895              		.loc 12 108 0
 2896 01d2 0021     		movs	r1, #0
 2897 01d4 E06A     		ldr	r0, [r4, #44]	@ float
 2898 01d6 244D     		ldr	r5, .L160+16
 2899 01d8 FFF7FEFF 		bl	__aeabi_fcmpeq
 2900              	.LVL367:
 2901 01dc 0028     		cmp	r0, #0
 2902 01de 34D0     		beq	.L138
 109:src/main.cpp  ****       if(cmd_msg.heading_angle != 0){
 2903              		.loc 12 109 0
 2904 01e0 D6F81880 		ldr	r8, [r6, #24]	@ float
 2905 01e4 0021     		movs	r1, #0
 2906 01e6 4046     		mov	r0, r8
 2907 01e8 FFF7FEFF 		bl	__aeabi_fcmpeq
 2908              	.LVL368:
 2909 01ec 28B9     		cbnz	r0, .L158
 110:src/main.cpp  ****         spinningAutonomously = true;
 2910              		.loc 12 110 0
 2911 01ee 0123     		movs	r3, #1
 2912 01f0 85F83030 		strb	r3, [r5, #48]
 111:src/main.cpp  ****         spinAngle = cmd_msg.heading_angle;
 2913              		.loc 12 111 0
 2914 01f4 C5F82C80 		str	r8, [r5, #44]	@ float
 2915 01f8 02E0     		b	.L143
 2916              	.L158:
 112:src/main.cpp  ****       }else{
 113:src/main.cpp  ****         spinningAutonomously = false;
 2917              		.loc 12 113 0
 2918 01fa 0023     		movs	r3, #0
 2919 01fc 85F83030 		strb	r3, [r5, #48]
 2920              	.L143:
 114:src/main.cpp  ****       }
 115:src/main.cpp  ****       servo_left->setReference(90);
 2921              		.loc 12 115 0
 2922 0200 6069     		ldr	r0, [r4, #20]
 2923 0202 1F49     		ldr	r1, .L160+40
 2924 0204 0368     		ldr	r3, [r0]
 2925 0206 5B69     		ldr	r3, [r3, #20]
 2926 0208 9847     		blx	r3
 2927              	.LVL369:
 116:src/main.cpp  ****       servo_right->setReference(90);
 2928              		.loc 12 116 0
 2929 020a A069     		ldr	r0, [r4, #24]
 2930 020c 1C49     		ldr	r1, .L160+40
 2931 020e 0368     		ldr	r3, [r0]
 2932 0210 5B69     		ldr	r3, [r3, #20]
 2933 0212 9847     		blx	r3
 2934              	.LVL370:
 117:src/main.cpp  **** 
 118:src/main.cpp  ****       motorCmd[0] = cmd_msg.speed;
 2935              		.loc 12 118 0
 2936 0214 336A     		ldr	r3, [r6, #32]	@ float
 119:src/main.cpp  ****       motorCmd[1] = -cmd_msg.speed;
 2937              		.loc 12 119 0
 2938 0216 03F10042 		add	r2, r3, #-2147483648
 118:src/main.cpp  ****       motorCmd[1] = -cmd_msg.speed;
 2939              		.loc 12 118 0
 2940 021a E361     		str	r3, [r4, #28]	@ float
 2941              		.loc 12 119 0
 2942 021c 2262     		str	r2, [r4, #32]	@ float
 120:src/main.cpp  ****       motorCmd[2] = -cmd_msg.speed;
 2943              		.loc 12 120 0
 2944 021e 6262     		str	r2, [r4, #36]	@ float
 121:src/main.cpp  ****       motorCmd[3] = cmd_msg.speed;
 2945              		.loc 12 121 0
 2946 0220 A362     		str	r3, [r4, #40]	@ float
 2947 0222 12E0     		b	.L138
 2948              	.L139:
 122:src/main.cpp  ****     }
 123:src/main.cpp  **** 
 124:src/main.cpp  ****   }else if(intMode == cmd_msg.DRIVE_MODE_SIDEWAYS){
 2949              		.loc 12 124 0
 2950 0224 032F     		cmp	r7, #3
 2951 0226 10D1     		bne	.L138
 125:src/main.cpp  ****     servo_left->setReference(45);
 2952              		.loc 12 125 0
 2953 0228 6069     		ldr	r0, [r4, #20]
 2954 022a 1649     		ldr	r1, .L160+44
 2955 022c 0368     		ldr	r3, [r0]
 2956 022e 5B69     		ldr	r3, [r3, #20]
 2957 0230 9847     		blx	r3
 2958              	.LVL371:
 126:src/main.cpp  ****     servo_right->setReference(45);
 2959              		.loc 12 126 0
 2960 0232 A069     		ldr	r0, [r4, #24]
 2961 0234 1349     		ldr	r1, .L160+44
 2962 0236 0368     		ldr	r3, [r0]
 2963 0238 5B69     		ldr	r3, [r3, #20]
 2964 023a 9847     		blx	r3
 2965              	.LVL372:
 127:src/main.cpp  **** 
 128:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed;  //FR
 2966              		.loc 12 128 0
 2967 023c 336A     		ldr	r3, [r6, #32]	@ float
 129:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed; //FL
 2968              		.loc 12 129 0
 2969 023e 03F10042 		add	r2, r3, #-2147483648
 128:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed; //FL
 2970              		.loc 12 128 0
 2971 0242 E361     		str	r3, [r4, #28]	@ float
 2972              		.loc 12 129 0
 2973 0244 2262     		str	r2, [r4, #32]	@ float
 130:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed; //RL
 2974              		.loc 12 130 0
 2975 0246 6362     		str	r3, [r4, #36]	@ float
 131:src/main.cpp  ****     motorCmd[3] = -cmd_msg.speed;  //RR
 2976              		.loc 12 131 0
 2977 0248 A262     		str	r2, [r4, #40]	@ float
 2978              	.LVL373:
 2979              	.L138:
 2980              	.LBE171:
 132:src/main.cpp  ****   }
 133:src/main.cpp  ****   currentMode = intMode;
 2981              		.loc 12 133 0
 2982 024a 084B     		ldr	r3, .L160+20
 2983 024c 1F70     		strb	r7, [r3]
 2984              	.LVL374:
 2985              	.L128:
 2986              	.LBE170:
 2987              	.LBE169:
 134:src/main.cpp  **** }
 2988              		.loc 12 134 0
 2989 024e 05B0     		add	sp, sp, #20
 2990              	.LCFI27:
 2991              		.cfi_def_cfa_offset 36
 2992              		@ sp needed
 2993 0250 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2994              	.L161:
 2995 0254 AFF30080 		.align	3
 2996              	.L160:
 2997 0258 182D4454 		.word	1413754136
 2998 025c FB210940 		.word	1074340347
 2999 0260 9A999999 		.word	-1717986918
 3000 0264 9999A93F 		.word	1068079513
 3001 0268 00000000 		.word	.LANCHOR1
 3002 026c 00000000 		.word	.LANCHOR2
 3003 0270 00807640 		.word	1081507840
 3004 0274 00005041 		.word	1095761920
 3005 0278 000050C1 		.word	-1051721728
 3006 027c 00000743 		.word	1124532224
 3007 0280 0000B442 		.word	1119092736
 3008 0284 00003442 		.word	1110704128
 3009              		.cfi_endproc
 3010              	.LFE1286:
 3011              		.fnend
 3013              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE
 3014              		.align	1
 3015              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE
 3016              		.thumb
 3017              		.thumb_func
 3019              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:
 3020              		.fnstart
 3021              	.LFB1326:
 288:./lib/ros_lib/ros/node_handle.h **** 
 289:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 290:./lib/ros_lib/ros/node_handle.h ****        * Time functions
 291:./lib/ros_lib/ros/node_handle.h ****        */
 292:./lib/ros_lib/ros/node_handle.h **** 
 293:./lib/ros_lib/ros/node_handle.h ****       void requestSyncTime()
 294:./lib/ros_lib/ros/node_handle.h ****       {
 295:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 296:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_TIME, &t);
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 298:./lib/ros_lib/ros/node_handle.h ****       }
 299:./lib/ros_lib/ros/node_handle.h **** 
 300:./lib/ros_lib/ros/node_handle.h ****       void syncTime(uint8_t * data)
 301:./lib/ros_lib/ros/node_handle.h ****       {
 302:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 303:./lib/ros_lib/ros/node_handle.h ****         uint32_t offset = hardware_.time() - rt_time;
 304:./lib/ros_lib/ros/node_handle.h **** 
 305:./lib/ros_lib/ros/node_handle.h ****         t.deserialize(data);
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 308:./lib/ros_lib/ros/node_handle.h **** 
 309:./lib/ros_lib/ros/node_handle.h ****         this->setNow(t.data);
 310:./lib/ros_lib/ros/node_handle.h ****         last_sync_receive_time = hardware_.time();
 311:./lib/ros_lib/ros/node_handle.h ****       }
 312:./lib/ros_lib/ros/node_handle.h **** 
 313:./lib/ros_lib/ros/node_handle.h ****       Time now()
 314:./lib/ros_lib/ros/node_handle.h ****       {
 315:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 316:./lib/ros_lib/ros/node_handle.h ****         Time current_time;
 317:./lib/ros_lib/ros/node_handle.h ****         current_time.sec = ms/1000 + sec_offset;
 318:./lib/ros_lib/ros/node_handle.h ****         current_time.nsec = (ms%1000)*1000000UL + nsec_offset;
 319:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(current_time.sec, current_time.nsec);
 320:./lib/ros_lib/ros/node_handle.h ****         return current_time;
 321:./lib/ros_lib/ros/node_handle.h ****       }
 322:./lib/ros_lib/ros/node_handle.h **** 
 323:./lib/ros_lib/ros/node_handle.h ****       void setNow( Time & new_now )
 324:./lib/ros_lib/ros/node_handle.h ****       {
 325:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 326:./lib/ros_lib/ros/node_handle.h ****         sec_offset = new_now.sec - ms/1000 - 1;
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 329:./lib/ros_lib/ros/node_handle.h ****       }
 330:./lib/ros_lib/ros/node_handle.h **** 
 331:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 332:./lib/ros_lib/ros/node_handle.h ****        * Topic Management
 333:./lib/ros_lib/ros/node_handle.h ****        */
 334:./lib/ros_lib/ros/node_handle.h **** 
 335:./lib/ros_lib/ros/node_handle.h ****       /* Register a new publisher */
 336:./lib/ros_lib/ros/node_handle.h ****       bool advertise(Publisher & p)
 337:./lib/ros_lib/ros/node_handle.h ****       {
 338:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_PUBLISHERS; i++){
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 340:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 341:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 344:./lib/ros_lib/ros/node_handle.h ****           }
 345:./lib/ros_lib/ros/node_handle.h ****         }
 346:./lib/ros_lib/ros/node_handle.h ****         return false;
 347:./lib/ros_lib/ros/node_handle.h ****       }
 348:./lib/ros_lib/ros/node_handle.h **** 
 349:./lib/ros_lib/ros/node_handle.h ****       /* Register a new subscriber */
 350:./lib/ros_lib/ros/node_handle.h ****       template<typename MsgT>
 351:./lib/ros_lib/ros/node_handle.h ****       bool subscribe(Subscriber< MsgT> & s){
 352:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 357:./lib/ros_lib/ros/node_handle.h ****           }
 358:./lib/ros_lib/ros/node_handle.h ****         }
 359:./lib/ros_lib/ros/node_handle.h ****         return false;
 360:./lib/ros_lib/ros/node_handle.h ****       }
 361:./lib/ros_lib/ros/node_handle.h **** 
 362:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Server */
 363:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 364:./lib/ros_lib/ros/node_handle.h ****       bool advertiseService(ServiceServer<MReq,MRes>& srv){
 365:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 366:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 367:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 368:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 369:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 370:./lib/ros_lib/ros/node_handle.h ****             return v;
 371:./lib/ros_lib/ros/node_handle.h ****           }
 372:./lib/ros_lib/ros/node_handle.h ****         }
 373:./lib/ros_lib/ros/node_handle.h ****         return false;
 374:./lib/ros_lib/ros/node_handle.h ****       }
 375:./lib/ros_lib/ros/node_handle.h **** 
 376:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Client */
 377:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 378:./lib/ros_lib/ros/node_handle.h ****       bool serviceClient(ServiceClient<MReq, MRes>& srv){
 379:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 380:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 381:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 382:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 383:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 384:./lib/ros_lib/ros/node_handle.h ****             return v;
 385:./lib/ros_lib/ros/node_handle.h ****           }
 386:./lib/ros_lib/ros/node_handle.h ****         }
 387:./lib/ros_lib/ros/node_handle.h ****         return false;
 388:./lib/ros_lib/ros/node_handle.h ****       }
 389:./lib/ros_lib/ros/node_handle.h **** 
 390:./lib/ros_lib/ros/node_handle.h ****       void negotiateTopics()
 391:./lib/ros_lib/ros/node_handle.h ****       {
 392:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::TopicInfo ti;
 393:./lib/ros_lib/ros/node_handle.h ****         int i;
 394:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_PUBLISHERS; i++)
 395:./lib/ros_lib/ros/node_handle.h ****         {
 396:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] != 0) // non-empty slot
 397:./lib/ros_lib/ros/node_handle.h ****           {
 398:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = publishers[i]->id_;
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 404:./lib/ros_lib/ros/node_handle.h ****           }
 405:./lib/ros_lib/ros/node_handle.h ****         }
 406:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_SUBSCRIBERS; i++)
 407:./lib/ros_lib/ros/node_handle.h ****         {
 408:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] != 0) // non-empty slot
 409:./lib/ros_lib/ros/node_handle.h ****           {
 410:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = subscribers[i]->id_;
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 412:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 413:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 416:./lib/ros_lib/ros/node_handle.h ****           }
 417:./lib/ros_lib/ros/node_handle.h ****         }
 418:./lib/ros_lib/ros/node_handle.h ****         configured_ = true;
 419:./lib/ros_lib/ros/node_handle.h ****       }
 420:./lib/ros_lib/ros/node_handle.h **** 
 421:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg * msg)
 3022              		.loc 10 421 0
 3023              		.cfi_startproc
 3024              		@ args = 0, pretend = 0, frame = 16
 3025              		@ frame_needed = 0, uses_anonymous_args = 0
 3026              	.LVL375:
 3027 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3028              		.save {r4, r5, r6, r7, r8, r9, lr}
 3029              	.LCFI28:
 3030              		.cfi_def_cfa_offset 28
 3031              		.cfi_offset 4, -28
 3032              		.cfi_offset 5, -24
 3033              		.cfi_offset 6, -20
 3034              		.cfi_offset 7, -16
 3035              		.cfi_offset 8, -12
 3036              		.cfi_offset 9, -8
 3037              		.cfi_offset 14, -4
 422:./lib/ros_lib/ros/node_handle.h ****       {
 423:./lib/ros_lib/ros/node_handle.h ****         if(id >= 100 && !configured_)
 3038              		.loc 10 423 0
 3039 0004 6329     		cmp	r1, #99
 421:./lib/ros_lib/ros/node_handle.h ****       {
 3040              		.loc 10 421 0
 3041              		.pad #20
 3042 0006 85B0     		sub	sp, sp, #20
 3043              	.LCFI29:
 3044              		.cfi_def_cfa_offset 48
 421:./lib/ros_lib/ros/node_handle.h ****       {
 3045              		.loc 10 421 0
 3046 0008 0446     		mov	r4, r0
 3047 000a 0E46     		mov	r6, r1
 3048              		.loc 10 423 0
 3049 000c 03DD     		ble	.L163
 3050              		.loc 10 423 0 is_stmt 0 discriminator 1
 3051 000e 90F8F458 		ldrb	r5, [r0, #2292]	@ zero_extendqisi2
 3052 0012 002D     		cmp	r5, #0
 3053 0014 58D0     		beq	.L164
 3054              	.L163:
 424:./lib/ros_lib/ros/node_handle.h ****           return 0;
 425:./lib/ros_lib/ros/node_handle.h **** 
 426:./lib/ros_lib/ros/node_handle.h ****         /* serialize message */
 427:./lib/ros_lib/ros/node_handle.h ****         uint16_t l = msg->serialize(message_out+7);
 3055              		.loc 10 427 0 is_stmt 1
 3056 0016 1368     		ldr	r3, [r2]
 3057 0018 04F21F41 		addw	r1, r4, #1055
 3058              	.LVL376:
 3059 001c 1B68     		ldr	r3, [r3]
 3060 001e 1046     		mov	r0, r2
 3061              	.LVL377:
 3062 0020 9847     		blx	r3
 3063              	.LVL378:
 428:./lib/ros_lib/ros/node_handle.h **** 
 429:./lib/ros_lib/ros/node_handle.h ****         /* setup the header */
 430:./lib/ros_lib/ros/node_handle.h ****         message_out[0] = 0xff;
 3064              		.loc 10 430 0
 3065 0022 FF22     		movs	r2, #255
 3066 0024 84F81824 		strb	r2, [r4, #1048]
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 3067              		.loc 10 431 0
 3068 0028 FE22     		movs	r2, #254
 427:./lib/ros_lib/ros/node_handle.h **** 
 3069              		.loc 10 427 0
 3070 002a 83B2     		uxth	r3, r0
 3071              	.LVL379:
 3072              		.loc 10 431 0
 3073 002c 84F81924 		strb	r2, [r4, #1049]
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 3074              		.loc 10 432 0
 3075 0030 C2B2     		uxtb	r2, r0
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 3076              		.loc 10 433 0
 3077 0032 C0F30720 		ubfx	r0, r0, #8, #8
 3078 0036 84F81B04 		strb	r0, [r4, #1051]
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 3079              		.loc 10 434 0
 3080 003a 1044     		add	r0, r0, r2
 3081 003c C043     		mvns	r0, r0
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 3082              		.loc 10 435 0
 3083 003e 84F81D64 		strb	r6, [r4, #1053]
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 3084              		.loc 10 436 0
 3085 0042 46F30726 		sbfx	r6, r6, #8, #8
 3086              	.LVL380:
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 3087              		.loc 10 432 0
 3088 0046 84F81A24 		strb	r2, [r4, #1050]
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 3089              		.loc 10 434 0
 3090 004a 84F81C04 		strb	r0, [r4, #1052]
 3091              		.loc 10 436 0
 3092 004e 84F81E64 		strb	r6, [r4, #1054]
 3093              	.LVL381:
 3094 0052 04F21C40 		addw	r0, r4, #1052
 3095              	.LBB191:
 437:./lib/ros_lib/ros/node_handle.h **** 
 438:./lib/ros_lib/ros/node_handle.h ****         /* calculate checksum */
 439:./lib/ros_lib/ros/node_handle.h ****         int chk = 0;
 440:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 3096              		.loc 10 440 0
 3097 0056 0521     		movs	r1, #5
 3098              	.LBE191:
 439:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 3099              		.loc 10 439 0
 3100 0058 0022     		movs	r2, #0
 3101              	.LBB192:
 3102              		.loc 10 440 0
 3103 005a 9E1D     		adds	r6, r3, #6
 3104              	.LVL382:
 3105              	.L166:
 3106              		.loc 10 440 0 is_stmt 0 discriminator 3
 3107 005c B142     		cmp	r1, r6
 3108 005e 04DC     		bgt	.L165
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3109              		.loc 10 441 0 is_stmt 1 discriminator 2
 3110 0060 10F8015F 		ldrb	r5, [r0, #1]!	@ zero_extendqisi2
 440:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3111              		.loc 10 440 0 discriminator 2
 3112 0064 0131     		adds	r1, r1, #1
 3113              	.LVL383:
 3114              		.loc 10 441 0 discriminator 2
 3115 0066 2A44     		add	r2, r2, r5
 3116              	.LVL384:
 440:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3117              		.loc 10 440 0 discriminator 2
 3118 0068 F8E7     		b	.L166
 3119              	.L165:
 3120              	.LVL385:
 3121              	.LBE192:
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 443:./lib/ros_lib/ros/node_handle.h ****         message_out[l++] = 255 - (chk%256);
 3122              		.loc 10 443 0
 3123 006a D243     		mvns	r2, r2
 3124              	.LVL386:
 3125 006c 03F10806 		add	r6, r3, #8
 3126 0070 0733     		adds	r3, r3, #7
 3127              	.LVL387:
 3128 0072 B6B2     		uxth	r6, r6
 3129              	.LVL388:
 3130 0074 9BB2     		uxth	r3, r3
 3131 0076 2344     		add	r3, r3, r4
 444:./lib/ros_lib/ros/node_handle.h **** 
 445:./lib/ros_lib/ros/node_handle.h ****         if( l <= OUTPUT_SIZE ){
 3132              		.loc 10 445 0
 3133 0078 B6F5806F 		cmp	r6, #1024
 443:./lib/ros_lib/ros/node_handle.h **** 
 3134              		.loc 10 443 0
 3135 007c 83F81824 		strb	r2, [r3, #1048]
 3136              		.loc 10 445 0
 3137 0080 13D8     		bhi	.L167
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 3138              		.loc 10 446 0
 3139 0082 04F58368 		add	r8, r4, #1048
 3140 0086 3546     		mov	r5, r6
 3141              	.LVL389:
 3142 0088 4746     		mov	r7, r8
 3143              	.LBB193:
 3144              	.LBB194:
 3145              		.file 13 "./lib/ros_lib/ArduinoHardware.h"
   1:./lib/ros_lib/ArduinoHardware.h **** /* 
   2:./lib/ros_lib/ArduinoHardware.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ArduinoHardware.h ****  *
   4:./lib/ros_lib/ArduinoHardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ArduinoHardware.h ****  * All rights reserved.
   6:./lib/ros_lib/ArduinoHardware.h ****  *
   7:./lib/ros_lib/ArduinoHardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ArduinoHardware.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ArduinoHardware.h ****  * are met:
  10:./lib/ros_lib/ArduinoHardware.h ****  *
  11:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ArduinoHardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ArduinoHardware.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ArduinoHardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ArduinoHardware.h ****  *    with the distribution.
  17:./lib/ros_lib/ArduinoHardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ArduinoHardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ArduinoHardware.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ArduinoHardware.h ****  *
  21:./lib/ros_lib/ArduinoHardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ArduinoHardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ArduinoHardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ArduinoHardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ArduinoHardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ArduinoHardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ArduinoHardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ArduinoHardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ArduinoHardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ArduinoHardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ArduinoHardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ArduinoHardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ArduinoHardware.h ****  */
  34:./lib/ros_lib/ArduinoHardware.h **** 
  35:./lib/ros_lib/ArduinoHardware.h **** #ifndef ROS_ARDUINO_HARDWARE_H_
  36:./lib/ros_lib/ArduinoHardware.h **** #define ROS_ARDUINO_HARDWARE_H_
  37:./lib/ros_lib/ArduinoHardware.h **** 
  38:./lib/ros_lib/ArduinoHardware.h **** #include "stm32f10x.h"
  39:./lib/ros_lib/ArduinoHardware.h **** #include "stm32_time.h"
  40:./lib/ros_lib/ArduinoHardware.h **** #include "led.h"
  41:./lib/ros_lib/ArduinoHardware.h **** 
  42:./lib/ros_lib/ArduinoHardware.h **** #define BUFFER_SIZE 1024
  43:./lib/ros_lib/ArduinoHardware.h **** 
  44:./lib/ros_lib/ArduinoHardware.h **** 
  45:./lib/ros_lib/ArduinoHardware.h **** volatile uint8_t USART_FIFO[BUFFER_SIZE];
  46:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTIN;
  47:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTOUT;
  48:./lib/ros_lib/ArduinoHardware.h **** 
  49:./lib/ros_lib/ArduinoHardware.h **** class ArduinoHardware {
  50:./lib/ros_lib/ArduinoHardware.h ****   public:
  51:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(USART_TypeDef* io , long baud=230400){
  52:./lib/ros_lib/ArduinoHardware.h ****       iostream = io;
  53:./lib/ros_lib/ArduinoHardware.h ****       baud_ = baud;
  54:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  55:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  56:./lib/ros_lib/ArduinoHardware.h ****     }
  57:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware()
  58:./lib/ros_lib/ArduinoHardware.h ****     {
  59:./lib/ros_lib/ArduinoHardware.h ****       /* Leonardo support */
  60:./lib/ros_lib/ArduinoHardware.h ****       iostream = USART1;
  61:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 230400;
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  63:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  64:./lib/ros_lib/ArduinoHardware.h ****     }
  65:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(ArduinoHardware& h){
  66:./lib/ros_lib/ArduinoHardware.h ****       this->iostream = iostream;
  67:./lib/ros_lib/ArduinoHardware.h ****       this->baud_ = h.baud_;
  68:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  69:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  70:./lib/ros_lib/ArduinoHardware.h ****     }
  71:./lib/ros_lib/ArduinoHardware.h ****   
  72:./lib/ros_lib/ArduinoHardware.h ****     void setBaud(long baud){
  73:./lib/ros_lib/ArduinoHardware.h ****       this->baud_= baud;
  74:./lib/ros_lib/ArduinoHardware.h ****     }
  75:./lib/ros_lib/ArduinoHardware.h ****   
  76:./lib/ros_lib/ArduinoHardware.h ****     int getBaud(){return baud_;}
  77:./lib/ros_lib/ArduinoHardware.h **** 
  78:./lib/ros_lib/ArduinoHardware.h ****     void init(){
  79:./lib/ros_lib/ArduinoHardware.h ****       USART_InitTypeDef usart1_init_struct;
  80:./lib/ros_lib/ArduinoHardware.h ****       /* Bit configuration structure for GPIOA PIN9 and PIN10 */
  81:./lib/ros_lib/ArduinoHardware.h ****       GPIO_InitTypeDef gpioa_init_struct;
  82:./lib/ros_lib/ArduinoHardware.h **** 
  83:./lib/ros_lib/ArduinoHardware.h ****       /* Enalbe clock for USART1, AFIO and GPIOA */
  84:./lib/ros_lib/ArduinoHardware.h ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
  85:./lib/ros_lib/ArduinoHardware.h ****                             
  86:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Tx */
  87:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_9;
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
  91:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
  92:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_10;
  93:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  95:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
  96:./lib/ros_lib/ArduinoHardware.h **** 
  97:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 */
  98:./lib/ros_lib/ArduinoHardware.h ****       USART_Cmd(iostream, ENABLE);  
  99:./lib/ros_lib/ArduinoHardware.h ****       /* Baud rate 230400, 8-bit data, One stop bit
 100:./lib/ros_lib/ArduinoHardware.h ****       * No parity, Do both Rx and Tx, No HW flow control
 101:./lib/ros_lib/ArduinoHardware.h ****       */
 102:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_BaudRate = baud_;   
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 108:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 109:./lib/ros_lib/ArduinoHardware.h ****       USART_Init(iostream, &usart1_init_struct);
 110:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 111:./lib/ros_lib/ArduinoHardware.h ****       USART_ITConfig(iostream, USART_IT_RXNE, ENABLE);
 112:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 global interrupt */
 113:./lib/ros_lib/ArduinoHardware.h ****       NVIC_EnableIRQ(USART1_IRQn);
 114:./lib/ros_lib/ArduinoHardware.h ****     }
 115:./lib/ros_lib/ArduinoHardware.h **** 
 116:./lib/ros_lib/ArduinoHardware.h ****     int read(){
 117:./lib/ros_lib/ArduinoHardware.h ****       if(USART_CNTIN == USART_CNTOUT){
 118:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 119:./lib/ros_lib/ArduinoHardware.h ****       }
 120:./lib/ros_lib/ArduinoHardware.h ****       
 121:./lib/ros_lib/ArduinoHardware.h ****       int returnVal = USART_FIFO[USART_CNTOUT];
 122:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 123:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 124:./lib/ros_lib/ArduinoHardware.h ****     }
 125:./lib/ros_lib/ArduinoHardware.h **** 
 126:./lib/ros_lib/ArduinoHardware.h ****     void write(uint8_t* data, int length){
 127:./lib/ros_lib/ArduinoHardware.h ****       for(int i=0; i<length; i++){
 128:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 3146              		.loc 13 128 0
 3147 008a DFF84C90 		ldr	r9, .L174+8
 3148              	.LVL390:
 3149              	.L169:
 127:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 3150              		.loc 13 127 0
 3151 008e C8EB0703 		rsb	r3, r8, r7
 3152 0092 9E42     		cmp	r6, r3
 3153 0094 18DD     		ble	.L164
 3154              	.L172:
 3155              		.loc 13 128 0
 3156 0096 B9F80030 		ldrh	r3, [r9]
 3157 009a 5B06     		lsls	r3, r3, #25
 3158 009c FBD5     		bpl	.L172
 129:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 3159              		.loc 13 129 0
 3160 009e 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 3161              	.LVL391:
 3162 00a2 6068     		ldr	r0, [r4, #4]
 3163 00a4 FFF7FEFF 		bl	USART_SendData
 3164              	.LVL392:
 3165 00a8 F1E7     		b	.L169
 3166              	.LVL393:
 3167              	.L167:
 3168              	.LBE194:
 3169              	.LBE193:
 3170              	.LBB195:
 3171              	.LBB196:
 3172              	.LBB197:
 3173              	.LBB198:
 3174              	.LBB199:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 3175              		.loc 3 25 0
 3176 00aa 094B     		ldr	r3, .L174
 3177              	.LBE199:
 3178              	.LBE198:
 447:./lib/ros_lib/ros/node_handle.h ****           return l;
 448:./lib/ros_lib/ros/node_handle.h ****         }else{
 449:./lib/ros_lib/ros/node_handle.h ****           logerror("Message from device dropped: message larger than buffer.");
 450:./lib/ros_lib/ros/node_handle.h ****           return -1;
 451:./lib/ros_lib/ros/node_handle.h ****         }
 452:./lib/ros_lib/ros/node_handle.h ****       }
 453:./lib/ros_lib/ros/node_handle.h **** 
 454:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 455:./lib/ros_lib/ros/node_handle.h ****        * Logging
 456:./lib/ros_lib/ros/node_handle.h ****        */
 457:./lib/ros_lib/ros/node_handle.h **** 
 458:./lib/ros_lib/ros/node_handle.h ****     private:
 459:./lib/ros_lib/ros/node_handle.h ****       void log(char byte, const char * msg){
 460:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::Log l;
 461:./lib/ros_lib/ros/node_handle.h ****         l.level= byte;
 462:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 463:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3179              		.loc 10 463 0
 3180 00ac 01AA     		add	r2, sp, #4
 3181              	.LVL394:
 3182              	.LBB201:
 3183              	.LBB200:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 3184              		.loc 3 25 0
 3185 00ae 0193     		str	r3, [sp, #4]
 3186              	.LVL395:
 3187              	.LBE200:
 3188              	.LBE201:
 461:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 3189              		.loc 10 461 0
 3190 00b0 0323     		movs	r3, #3
 3191 00b2 8DF80830 		strb	r3, [sp, #8]
 462:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3192              		.loc 10 462 0
 3193 00b6 074B     		ldr	r3, .L174+4
 3194              		.loc 10 463 0
 3195 00b8 0721     		movs	r1, #7
 3196              	.LVL396:
 462:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3197              		.loc 10 462 0
 3198 00ba 0393     		str	r3, [sp, #12]
 3199              		.loc 10 463 0
 3200 00bc 2368     		ldr	r3, [r4]
 3201 00be 2046     		mov	r0, r4
 3202 00c0 1B68     		ldr	r3, [r3]
 3203 00c2 9847     		blx	r3
 3204              	.LVL397:
 3205              	.LBE197:
 3206              	.LBE196:
 3207              	.LBE195:
 450:./lib/ros_lib/ros/node_handle.h ****         }
 3208              		.loc 10 450 0
 3209 00c4 4FF0FF35 		mov	r5, #-1
 3210              	.LVL398:
 3211              	.L164:
 452:./lib/ros_lib/ros/node_handle.h **** 
 3212              		.loc 10 452 0
 3213 00c8 2846     		mov	r0, r5
 3214 00ca 05B0     		add	sp, sp, #20
 3215              	.LCFI30:
 3216              		.cfi_def_cfa_offset 28
 3217              		@ sp needed
 3218 00cc BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3219              	.LVL399:
 3220              	.L175:
 3221              		.align	2
 3222              	.L174:
 3223 00d0 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3224 00d4 DD010000 		.word	.LC19
 3225 00d8 00380140 		.word	1073821696
 3226              		.cfi_endproc
 3227              	.LFE1326:
 3228              		.fnend
 3230              		.section	.text._ZN3ros3Msg19serializeAvrFloat64EPhf,"axG",%progbits,_ZN3ros3Msg19serializeAvrFloat
 3231              		.align	1
 3232              		.weak	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3233              		.thumb
 3234              		.thumb_func
 3236              	_ZN3ros3Msg19serializeAvrFloat64EPhf:
 3237              		.fnstart
 3238              	.LFB1021:
 3239              		.file 14 "./lib/ros_lib/ros/msg.h"
   1:./lib/ros_lib/ros/msg.h **** /* 
   2:./lib/ros_lib/ros/msg.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/msg.h ****  *
   4:./lib/ros_lib/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/msg.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/msg.h ****  *
   7:./lib/ros_lib/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/msg.h ****  * are met:
  10:./lib/ros_lib/ros/msg.h ****  *
  11:./lib/ros_lib/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/msg.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/msg.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/msg.h ****  *
  21:./lib/ros_lib/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/msg.h ****  */
  34:./lib/ros_lib/ros/msg.h **** 
  35:./lib/ros_lib/ros/msg.h **** #ifndef _ROS_MSG_H_
  36:./lib/ros_lib/ros/msg.h **** #define _ROS_MSG_H_
  37:./lib/ros_lib/ros/msg.h **** 
  38:./lib/ros_lib/ros/msg.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/msg.h **** 
  40:./lib/ros_lib/ros/msg.h **** namespace ros {
  41:./lib/ros_lib/ros/msg.h **** 
  42:./lib/ros_lib/ros/msg.h **** /* Base Message Type */
  43:./lib/ros_lib/ros/msg.h **** class Msg
  44:./lib/ros_lib/ros/msg.h **** {
  45:./lib/ros_lib/ros/msg.h **** public:
  46:./lib/ros_lib/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  47:./lib/ros_lib/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  48:./lib/ros_lib/ros/msg.h ****   virtual const char * getType() = 0;
  49:./lib/ros_lib/ros/msg.h ****   virtual const char * getMD5() = 0;
  50:./lib/ros_lib/ros/msg.h **** 
  51:./lib/ros_lib/ros/msg.h ****   /**
  52:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  53:./lib/ros_lib/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  54:./lib/ros_lib/ros/msg.h ****    *        fields, despite AVV having no native support for double.
  55:./lib/ros_lib/ros/msg.h ****    *
  56:./lib/ros_lib/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  57:./lib/ros_lib/ros/msg.h ****    * @param[in] f value to serialize.
  58:./lib/ros_lib/ros/msg.h ****    *
  59:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  60:./lib/ros_lib/ros/msg.h ****    *
  61:./lib/ros_lib/ros/msg.h ****    */
  62:./lib/ros_lib/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
 3240              		.loc 14 62 0
 3241              		.cfi_startproc
 3242              		@ args = 0, pretend = 0, frame = 0
 3243              		@ frame_needed = 0, uses_anonymous_args = 0
 3244              	.LVL400:
 3245 0000 38B5     		push	{r3, r4, r5, lr}
 3246              	.LCFI31:
 3247              		.cfi_def_cfa_offset 16
 3248              		.cfi_offset 3, -16
 3249              		.cfi_offset 4, -12
 3250              		.cfi_offset 5, -8
 3251              		.cfi_offset 14, -4
  63:./lib/ros_lib/ros/msg.h ****   {
  64:./lib/ros_lib/ros/msg.h ****     const int32_t* val = (int32_t*) &f;
  65:./lib/ros_lib/ros/msg.h ****     int32_t exp = ((*val >> 23) & 255);
 3252              		.loc 14 65 0
 3253 0002 C1F3C753 		ubfx	r3, r1, #23, #8
 3254              	.LVL401:
  62:./lib/ros_lib/ros/msg.h ****   {
 3255              		.loc 14 62 0
 3256 0006 0546     		mov	r5, r0
 3257              		.loc 14 65 0
 3258 0008 0A46     		mov	r2, r1
  62:./lib/ros_lib/ros/msg.h ****   {
 3259              		.loc 14 62 0
 3260 000a 0846     		mov	r0, r1
 3261              	.LVL402:
  66:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 3262              		.loc 14 66 0
 3263 000c 0BB1     		cbz	r3, .L177
  67:./lib/ros_lib/ros/msg.h ****     {
  68:./lib/ros_lib/ros/msg.h ****       exp += 1023 - 127;
 3264              		.loc 14 68 0
 3265 000e 03F56073 		add	r3, r3, #896
 3266              	.LVL403:
 3267              	.L177:
  69:./lib/ros_lib/ros/msg.h ****     }
  70:./lib/ros_lib/ros/msg.h **** 
  71:./lib/ros_lib/ros/msg.h ****     int32_t sig = *val;
  72:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3268              		.loc 14 72 0
 3269 0012 0021     		movs	r1, #0
 3270              	.LVL404:
 3271 0014 2970     		strb	r1, [r5]
 3272              	.LVL405:
  73:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3273              		.loc 14 73 0
 3274 0016 6970     		strb	r1, [r5, #1]
 3275              	.LVL406:
  74:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3276              		.loc 14 74 0
 3277 0018 A970     		strb	r1, [r5, #2]
 3278              	.LVL407:
  75:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 3279              		.loc 14 75 0
 3280 001a 5101     		lsls	r1, r2, #5
 3281 001c E970     		strb	r1, [r5, #3]
 3282              	.LVL408:
  76:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 3283              		.loc 14 76 0
 3284 001e D110     		asrs	r1, r2, #3
 3285 0020 2971     		strb	r1, [r5, #4]
 3286              	.LVL409:
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 3287              		.loc 14 77 0
 3288 0022 D112     		asrs	r1, r2, #11
  78:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 3289              		.loc 14 78 0
 3290 0024 C2F3C342 		ubfx	r2, r2, #19, #4
 3291 0028 42EA0312 		orr	r2, r2, r3, lsl #4
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 3292              		.loc 14 77 0
 3293 002c 6971     		strb	r1, [r5, #5]
 3294              	.LVL410:
 3295              		.loc 14 78 0
 3296 002e AA71     		strb	r2, [r5, #6]
 3297              	.LVL411:
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
  80:./lib/ros_lib/ros/msg.h **** 
  81:./lib/ros_lib/ros/msg.h ****     // Mark negative bit as necessary.
  82:./lib/ros_lib/ros/msg.h ****     if (f < 0)
 3298              		.loc 14 82 0
 3299 0030 0021     		movs	r1, #0
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 3300              		.loc 14 79 0
 3301 0032 C3F30714 		ubfx	r4, r3, #4, #8
 3302              		.loc 14 82 0
 3303 0036 FFF7FEFF 		bl	__aeabi_fcmplt
 3304              	.LVL412:
 3305 003a 08B9     		cbnz	r0, .L178
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 3306              		.loc 14 79 0
 3307 003c EC71     		strb	r4, [r5, #7]
 3308 003e 02E0     		b	.L179
 3309              	.L178:
  83:./lib/ros_lib/ros/msg.h ****     {
  84:./lib/ros_lib/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
 3310              		.loc 14 84 0
 3311 0040 64F07F03 		orn	r3, r4, #127
 3312 0044 EB71     		strb	r3, [r5, #7]
 3313              	.L179:
  85:./lib/ros_lib/ros/msg.h ****     }
  86:./lib/ros_lib/ros/msg.h **** 
  87:./lib/ros_lib/ros/msg.h ****     return 8;
  88:./lib/ros_lib/ros/msg.h ****   }
 3314              		.loc 14 88 0
 3315 0046 0820     		movs	r0, #8
 3316 0048 38BD     		pop	{r3, r4, r5, pc}
 3317              		.cfi_endproc
 3318              	.LFE1021:
 3319              		.cantunwind
 3320              		.fnend
 3322              		.section	.text._ZNK12roberto_msgs10MotorState9serializeEPh,"axG",%progbits,_ZNK12roberto_msgs10Mot
 3323              		.align	1
 3324              		.weak	_ZNK12roberto_msgs10MotorState9serializeEPh
 3325              		.thumb
 3326              		.thumb_func
 3328              	_ZNK12roberto_msgs10MotorState9serializeEPh:
 3329              		.fnstart
 3330              	.LFB1249:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3331              		.loc 9 37 0
 3332              		.cfi_startproc
 3333              		@ args = 0, pretend = 0, frame = 0
 3334              		@ frame_needed = 0, uses_anonymous_args = 0
 3335              	.LVL413:
 3336 0000 70B5     		push	{r4, r5, r6, lr}
 3337              	.LCFI32:
 3338              		.cfi_def_cfa_offset 16
 3339              		.cfi_offset 4, -16
 3340              		.cfi_offset 5, -12
 3341              		.cfi_offset 6, -8
 3342              		.cfi_offset 14, -4
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3343              		.loc 9 37 0
 3344 0002 0546     		mov	r5, r0
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3345              		.loc 9 40 0
 3346 0004 0430     		adds	r0, r0, #4
 3347              	.LVL414:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3348              		.loc 9 37 0
 3349 0006 0E46     		mov	r6, r1
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3350              		.loc 9 40 0
 3351 0008 FFF7FEFF 		bl	_ZNK8std_msgs6Header9serializeEPh
 3352              	.LVL415:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 3353              		.loc 9 41 0
 3354 000c A969     		ldr	r1, [r5, #24]	@ float
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3355              		.loc 9 40 0
 3356 000e 0446     		mov	r4, r0
 3357              	.LVL416:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 3358              		.loc 9 41 0
 3359 0010 3018     		adds	r0, r6, r0
 3360              	.LVL417:
 3361 0012 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3362              	.LVL418:
 3363 0016 0444     		add	r4, r4, r0
 3364              	.LVL419:
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
 3365              		.loc 9 42 0
 3366 0018 E969     		ldr	r1, [r5, #28]	@ float
 3367 001a 3019     		adds	r0, r6, r4
 3368 001c FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3369              	.LVL420:
 3370 0020 0444     		add	r4, r4, r0
 3371              	.LVL421:
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
 3372              		.loc 9 43 0
 3373 0022 296A     		ldr	r1, [r5, #32]	@ float
 3374 0024 3019     		adds	r0, r6, r4
 3375 0026 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3376              	.LVL422:
 3377 002a 0444     		add	r4, r4, r0
 3378              	.LVL423:
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
 3379              		.loc 9 44 0
 3380 002c 696A     		ldr	r1, [r5, #36]	@ float
 3381 002e 3019     		adds	r0, r6, r4
 3382 0030 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3383              	.LVL424:
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3384              		.loc 9 45 0
 3385 0034 95F82830 		ldrb	r3, [r5, #40]	@ zero_extendqisi2
 3386 0038 2044     		add	r0, r0, r4
 3387              	.LVL425:
 3388 003a 3354     		strb	r3, [r6, r0]
 3389              	.LVL426:
  48:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3390              		.loc 9 48 0
 3391 003c 0130     		adds	r0, r0, #1
 3392              	.LVL427:
 3393 003e 70BD     		pop	{r4, r5, r6, pc}
 3394              		.cfi_endproc
 3395              	.LFE1249:
 3396              		.cantunwind
 3397              		.fnend
 3399              		.section	.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf,"axG",%progbits,_ZN3ros3Msg21deserializeAv
 3400              		.align	1
 3401              		.weak	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3402              		.thumb
 3403              		.thumb_func
 3405              	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf:
 3406              		.fnstart
 3407              	.LFB1022:
  89:./lib/ros_lib/ros/msg.h **** 
  90:./lib/ros_lib/ros/msg.h ****   /**
  91:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
  92:./lib/ros_lib/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
  93:./lib/ros_lib/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
  94:./lib/ros_lib/ros/msg.h ****    *
  95:./lib/ros_lib/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
  96:./lib/ros_lib/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
  97:./lib/ros_lib/ros/msg.h ****    *
  98:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  99:./lib/ros_lib/ros/msg.h ****    */
 100:./lib/ros_lib/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 3408              		.loc 14 100 0
 3409              		.cfi_startproc
 3410              		@ args = 0, pretend = 0, frame = 0
 3411              		@ frame_needed = 0, uses_anonymous_args = 0
 3412              	.LVL428:
 3413 0000 30B5     		push	{r4, r5, lr}
 3414              	.LCFI33:
 3415              		.cfi_def_cfa_offset 12
 3416              		.cfi_offset 4, -12
 3417              		.cfi_offset 5, -8
 3418              		.cfi_offset 14, -4
 101:./lib/ros_lib/ros/msg.h ****   {
 102:./lib/ros_lib/ros/msg.h ****     uint32_t* val = (uint32_t*)f;
 103:./lib/ros_lib/ros/msg.h ****     inbuffer += 3;
 104:./lib/ros_lib/ros/msg.h **** 
 105:./lib/ros_lib/ros/msg.h ****     // Copy truncated mantissa.
 106:./lib/ros_lib/ros/msg.h ****     *val = ((uint32_t)(*(inbuffer++)) >> 5 & 0x07);
 3419              		.loc 14 106 0
 3420 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 3421 0004 5B09     		lsrs	r3, r3, #5
 3422 0006 0B60     		str	r3, [r1]
 3423              	.LVL429:
 107:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 3424              		.loc 14 107 0
 3425 0008 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 3426 000a 43EAC203 		orr	r3, r3, r2, lsl #3
 3427 000e 0B60     		str	r3, [r1]
 3428              	.LVL430:
 108:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 3429              		.loc 14 108 0
 3430 0010 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 3431 0012 43EAC222 		orr	r2, r3, r2, lsl #11
 3432 0016 0A60     		str	r2, [r1]
 109:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 3433              		.loc 14 109 0
 3434 0018 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 3435 001a DB04     		lsls	r3, r3, #19
 3436 001c 03F4F003 		and	r3, r3, #7864320
 3437 0020 1343     		orrs	r3, r3, r2
 3438 0022 0B60     		str	r3, [r1]
 3439              	.LVL431:
 110:./lib/ros_lib/ros/msg.h **** 
 111:./lib/ros_lib/ros/msg.h ****     // Copy truncated exponent.
 112:./lib/ros_lib/ros/msg.h ****     uint32_t exp = ((uint32_t)(*(inbuffer++)) & 0xf0)>>4;
 113:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 3440              		.loc 14 113 0
 3441 0024 C479     		ldrb	r4, [r0, #7]	@ zero_extendqisi2
 112:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 3442              		.loc 14 112 0
 3443 0026 8579     		ldrb	r5, [r0, #6]	@ zero_extendqisi2
 3444              	.LVL432:
 3445              		.loc 14 113 0
 3446 0028 2401     		lsls	r4, r4, #4
 3447 002a 04F4FE62 		and	r2, r4, #2032
 3448              	.LVL433:
 114:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 3449              		.loc 14 114 0
 3450 002e 52EA1512 		orrs	r2, r2, r5, lsr #4
 3451              	.LVL434:
 115:./lib/ros_lib/ros/msg.h ****     {
 116:./lib/ros_lib/ros/msg.h ****       *val |= ((exp) - 1023 + 127) << 23;
 3452              		.loc 14 116 0
 3453 0032 1EBF     		ittt	ne
 3454 0034 A2F56072 		subne	r2, r2, #896
 3455              	.LVL435:
 3456 0038 43EAC253 		orrne	r3, r3, r2, lsl #23
 3457 003c 0B60     		strne	r3, [r1]
 3458              	.LVL436:
 117:./lib/ros_lib/ros/msg.h ****     }  
 118:./lib/ros_lib/ros/msg.h **** 
 119:./lib/ros_lib/ros/msg.h ****     // Copy negative sign.
 120:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0x80) << 24;
 3459              		.loc 14 120 0
 3460 003e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 121:./lib/ros_lib/ros/msg.h **** 
 122:./lib/ros_lib/ros/msg.h ****     return 8;
 123:./lib/ros_lib/ros/msg.h ****   }
 3461              		.loc 14 123 0
 3462 0040 0820     		movs	r0, #8
 3463              	.LVL437:
 120:./lib/ros_lib/ros/msg.h **** 
 3464              		.loc 14 120 0
 3465 0042 23F07F02 		bic	r2, r3, #127
 3466 0046 0B68     		ldr	r3, [r1]
 3467 0048 43EA0263 		orr	r3, r3, r2, lsl #24
 3468 004c 0B60     		str	r3, [r1]
 3469              		.loc 14 123 0
 3470 004e 30BD     		pop	{r4, r5, pc}
 3471              		.cfi_endproc
 3472              	.LFE1022:
 3473              		.cantunwind
 3474              		.fnend
 3476              		.section	.text._ZN12roberto_msgs10MotorState11deserializeEPh,"axG",%progbits,_ZN12roberto_msgs10Mo
 3477              		.align	1
 3478              		.weak	_ZN12roberto_msgs10MotorState11deserializeEPh
 3479              		.thumb
 3480              		.thumb_func
 3482              	_ZN12roberto_msgs10MotorState11deserializeEPh:
 3483              		.fnstart
 3484              	.LFB1250:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3485              		.loc 9 50 0
 3486              		.cfi_startproc
 3487              		@ args = 0, pretend = 0, frame = 0
 3488              		@ frame_needed = 0, uses_anonymous_args = 0
 3489              	.LVL438:
 3490 0000 70B5     		push	{r4, r5, r6, lr}
 3491              	.LCFI34:
 3492              		.cfi_def_cfa_offset 16
 3493              		.cfi_offset 4, -16
 3494              		.cfi_offset 5, -12
 3495              		.cfi_offset 6, -8
 3496              		.cfi_offset 14, -4
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3497              		.loc 9 50 0
 3498 0002 0546     		mov	r5, r0
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3499              		.loc 9 53 0
 3500 0004 0430     		adds	r0, r0, #4
 3501              	.LVL439:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3502              		.loc 9 50 0
 3503 0006 0E46     		mov	r6, r1
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3504              		.loc 9 53 0
 3505 0008 FFF7FEFF 		bl	_ZN8std_msgs6Header11deserializeEPh
 3506              	.LVL440:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 3507              		.loc 9 54 0
 3508 000c 05F11801 		add	r1, r5, #24
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3509              		.loc 9 53 0
 3510 0010 0446     		mov	r4, r0
 3511              	.LVL441:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 3512              		.loc 9 54 0
 3513 0012 3018     		adds	r0, r6, r0
 3514              	.LVL442:
 3515 0014 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3516              	.LVL443:
 3517 0018 0444     		add	r4, r4, r0
 3518              	.LVL444:
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
 3519              		.loc 9 55 0
 3520 001a 05F11C01 		add	r1, r5, #28
 3521 001e 3019     		adds	r0, r6, r4
 3522 0020 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3523              	.LVL445:
 3524 0024 0444     		add	r4, r4, r0
 3525              	.LVL446:
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
 3526              		.loc 9 56 0
 3527 0026 05F12001 		add	r1, r5, #32
 3528 002a 3019     		adds	r0, r6, r4
 3529 002c FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3530              	.LVL447:
 3531 0030 0444     		add	r4, r4, r0
 3532              	.LVL448:
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
 3533              		.loc 9 57 0
 3534 0032 05F12401 		add	r1, r5, #36
 3535 0036 3019     		adds	r0, r6, r4
 3536 0038 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3537              	.LVL449:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3538              		.loc 9 58 0
 3539 003c 2044     		add	r0, r0, r4
 3540              	.LVL450:
 3541 003e 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3542              		.loc 9 61 0
 3543 0040 0130     		adds	r0, r0, #1
 3544              	.LVL451:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3545              		.loc 9 58 0
 3546 0042 85F82830 		strb	r3, [r5, #40]
 3547              	.LVL452:
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3548              		.loc 9 61 0
 3549 0046 70BD     		pop	{r4, r5, r6, pc}
 3550              		.cfi_endproc
 3551              	.LFE1250:
 3552              		.cantunwind
 3553              		.fnend
 3555              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh,"axG",%progbits,_ZN3r
 3556              		.align	1
 3557              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 3558              		.thumb
 3559              		.thumb_func
 3561              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:
 3562              		.fnstart
 3563              	.LFB1331:
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 3564              		.loc 11 72 0
 3565              		.cfi_startproc
 3566              		@ args = 0, pretend = 0, frame = 0
 3567              		@ frame_needed = 0, uses_anonymous_args = 0
 3568              	.LVL453:
 3569 0000 70B5     		push	{r4, r5, r6, lr}
 3570              	.LCFI35:
 3571              		.cfi_def_cfa_offset 16
 3572              		.cfi_offset 4, -16
 3573              		.cfi_offset 5, -12
 3574              		.cfi_offset 6, -8
 3575              		.cfi_offset 14, -4
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 3576              		.loc 11 72 0
 3577 0002 0546     		mov	r5, r0
  73:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 3578              		.loc 11 73 0
 3579 0004 00F10C04 		add	r4, r0, #12
 3580 0008 2046     		mov	r0, r4
 3581              	.LVL454:
 3582 000a FFF7FEFF 		bl	_ZN12roberto_msgs10MotorState11deserializeEPh
 3583              	.LVL455:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 3584              		.loc 11 74 0
 3585 000e AB6B     		ldr	r3, [r5, #56]
 3586 0010 2046     		mov	r0, r4
  75:./lib/ros_lib/ros/subscriber.h **** 
 3587              		.loc 11 75 0
 3588 0012 BDE87040 		pop	{r4, r5, r6, lr}
 3589              	.LCFI36:
 3590              		.cfi_restore 14
 3591              		.cfi_restore 6
 3592              		.cfi_restore 5
 3593              		.cfi_restore 4
 3594              		.cfi_def_cfa_offset 0
 3595              	.LVL456:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 3596              		.loc 11 74 0
 3597 0016 1847     		bx	r3	@ indirect register sibling call
 3598              	.LVL457:
 3599              		.cfi_endproc
 3600              	.LFE1331:
 3601              		.cantunwind
 3602              		.fnend
 3604              		.section	.text._ZN3ros9Publisher7publishEPKNS_3MsgE,"axG",%progbits,_ZN3ros9Publisher7publishEPKNS
 3605              		.align	1
 3606              		.weak	_ZN3ros9Publisher7publishEPKNS_3MsgE
 3607              		.thumb
 3608              		.thumb_func
 3610              	_ZN3ros9Publisher7publishEPKNS_3MsgE:
 3611              		.fnstart
 3612              	.LFB1081:
 3613              		.file 15 "./lib/ros_lib/ros/publisher.h"
   1:./lib/ros_lib/ros/publisher.h **** /* 
   2:./lib/ros_lib/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/publisher.h ****  *
   4:./lib/ros_lib/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/publisher.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/publisher.h ****  *
   7:./lib/ros_lib/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/publisher.h ****  * are met:
  10:./lib/ros_lib/ros/publisher.h ****  *
  11:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/publisher.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/publisher.h ****  *
  21:./lib/ros_lib/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/publisher.h ****  */
  34:./lib/ros_lib/ros/publisher.h **** 
  35:./lib/ros_lib/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:./lib/ros_lib/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:./lib/ros_lib/ros/publisher.h **** 
  38:./lib/ros_lib/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/publisher.h **** #include "node_handle.h"
  40:./lib/ros_lib/ros/publisher.h **** 
  41:./lib/ros_lib/ros/publisher.h **** namespace ros {
  42:./lib/ros_lib/ros/publisher.h **** 
  43:./lib/ros_lib/ros/publisher.h ****   /* Generic Publisher */
  44:./lib/ros_lib/ros/publisher.h ****   class Publisher
  45:./lib/ros_lib/ros/publisher.h ****   {
  46:./lib/ros_lib/ros/publisher.h ****     public:
  47:./lib/ros_lib/ros/publisher.h ****       Publisher( const char * topic_name, Msg * msg, int endpoint=rosserial_msgs::TopicInfo::ID_PUB
  48:./lib/ros_lib/ros/publisher.h ****         topic_(topic_name), 
  49:./lib/ros_lib/ros/publisher.h ****         msg_(msg),
  50:./lib/ros_lib/ros/publisher.h ****         endpoint_(endpoint) {};
  51:./lib/ros_lib/ros/publisher.h **** 
  52:./lib/ros_lib/ros/publisher.h ****       int publish( const Msg * msg ) { return nh_->publish(id_, msg); };
 3614              		.loc 15 52 0
 3615              		.cfi_startproc
 3616              		@ args = 0, pretend = 0, frame = 0
 3617              		@ frame_needed = 0, uses_anonymous_args = 0
 3618              		@ link register save eliminated.
 3619              	.LVL458:
 3620 0000 C368     		ldr	r3, [r0, #12]
 3621 0002 10B4     		push	{r4}
 3622              	.LCFI37:
 3623              		.cfi_def_cfa_offset 4
 3624              		.cfi_offset 4, -4
 3625              		.loc 15 52 0
 3626 0004 1A68     		ldr	r2, [r3]
 3627 0006 1468     		ldr	r4, [r2]
 3628 0008 0A46     		mov	r2, r1
 3629 000a 8168     		ldr	r1, [r0, #8]
 3630              	.LVL459:
 3631 000c 1846     		mov	r0, r3
 3632              	.LVL460:
 3633 000e 2346     		mov	r3, r4
 3634 0010 10BC     		pop	{r4}
 3635              	.LCFI38:
 3636              		.cfi_restore 4
 3637              		.cfi_def_cfa_offset 0
 3638 0012 1847     		bx	r3
 3639              	.LVL461:
 3640              		.cfi_endproc
 3641              	.LFE1081:
 3642              		.cantunwind
 3643              		.fnend
 3645              		.section	.text._ZN15ArduinoHardware4initEv,"axG",%progbits,_ZN15ArduinoHardware4initEv,comdat
 3646              		.align	1
 3647              		.weak	_ZN15ArduinoHardware4initEv
 3648              		.thumb
 3649              		.thumb_func
 3651              	_ZN15ArduinoHardware4initEv:
 3652              		.fnstart
 3653              	.LFB1136:
  78:./lib/ros_lib/ArduinoHardware.h ****       USART_InitTypeDef usart1_init_struct;
 3654              		.loc 13 78 0
 3655              		.cfi_startproc
 3656              		@ args = 0, pretend = 0, frame = 24
 3657              		@ frame_needed = 0, uses_anonymous_args = 0
 3658              	.LVL462:
 3659 0000 70B5     		push	{r4, r5, r6, lr}
 3660              		.save {r4, r5, r6, lr}
 3661              	.LCFI39:
 3662              		.cfi_def_cfa_offset 16
 3663              		.cfi_offset 4, -16
 3664              		.cfi_offset 5, -12
 3665              		.cfi_offset 6, -8
 3666              		.cfi_offset 14, -4
 3667 0002 0446     		mov	r4, r0
 3668              		.pad #24
 3669 0004 86B0     		sub	sp, sp, #24
 3670              	.LCFI40:
 3671              		.cfi_def_cfa_offset 40
  90:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
 3672              		.loc 13 90 0
 3673 0006 214D     		ldr	r5, .L193
  84:./lib/ros_lib/ArduinoHardware.h ****                             
 3674              		.loc 13 84 0
 3675 0008 0121     		movs	r1, #1
 3676 000a 4FF48040 		mov	r0, #16384
 3677              	.LVL463:
 3678 000e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 3679              	.LVL464:
  87:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 3680              		.loc 13 87 0
 3681 0012 4FF40073 		mov	r3, #512
 3682 0016 ADF80430 		strh	r3, [sp, #4]	@ movhi
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 3683              		.loc 13 88 0
 3684 001a 0326     		movs	r6, #3
  89:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3685              		.loc 13 89 0
 3686 001c 1823     		movs	r3, #24
  90:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
 3687              		.loc 13 90 0
 3688 001e 01A9     		add	r1, sp, #4
 3689 0020 2846     		mov	r0, r5
  89:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3690              		.loc 13 89 0
 3691 0022 8DF80730 		strb	r3, [sp, #7]
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 3692              		.loc 13 88 0
 3693 0026 8DF80660 		strb	r6, [sp, #6]
  90:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
 3694              		.loc 13 90 0
 3695 002a FFF7FEFF 		bl	GPIO_Init
 3696              	.LVL465:
  92:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 3697              		.loc 13 92 0
 3698 002e 4FF48063 		mov	r3, #1024
 3699 0032 ADF80430 		strh	r3, [sp, #4]	@ movhi
  94:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3700              		.loc 13 94 0
 3701 0036 0423     		movs	r3, #4
  95:./lib/ros_lib/ArduinoHardware.h **** 
 3702              		.loc 13 95 0
 3703 0038 0DEB0301 		add	r1, sp, r3
 3704 003c 2846     		mov	r0, r5
  94:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3705              		.loc 13 94 0
 3706 003e 8DF80730 		strb	r3, [sp, #7]
  93:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 3707              		.loc 13 93 0
 3708 0042 8DF80660 		strb	r6, [sp, #6]
  95:./lib/ros_lib/ArduinoHardware.h **** 
 3709              		.loc 13 95 0
 3710 0046 FFF7FEFF 		bl	GPIO_Init
 3711              	.LVL466:
  98:./lib/ros_lib/ArduinoHardware.h ****       /* Baud rate 230400, 8-bit data, One stop bit
 3712              		.loc 13 98 0
 3713 004a 2068     		ldr	r0, [r4]
 3714 004c 0121     		movs	r1, #1
 3715 004e FFF7FEFF 		bl	USART_Cmd
 3716              	.LVL467:
 102:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 3717              		.loc 13 102 0
 3718 0052 6368     		ldr	r3, [r4, #4]
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 3719              		.loc 13 106 0
 3720 0054 0C22     		movs	r2, #12
 102:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 3721              		.loc 13 102 0
 3722 0056 0293     		str	r3, [sp, #8]
 109:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 3723              		.loc 13 109 0
 3724 0058 02A9     		add	r1, sp, #8
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 3725              		.loc 13 103 0
 3726 005a 0023     		movs	r3, #0
 109:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 3727              		.loc 13 109 0
 3728 005c 2068     		ldr	r0, [r4]
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 3729              		.loc 13 103 0
 3730 005e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 3731              		.loc 13 104 0
 3732 0062 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 3733              		.loc 13 105 0
 3734 0066 ADF81030 		strh	r3, [sp, #16]	@ movhi
 107:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 3735              		.loc 13 107 0
 3736 006a ADF81430 		strh	r3, [sp, #20]	@ movhi
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 3737              		.loc 13 106 0
 3738 006e ADF81220 		strh	r2, [sp, #18]	@ movhi
 109:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 3739              		.loc 13 109 0
 3740 0072 FFF7FEFF 		bl	USART_Init
 3741              	.LVL468:
 111:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 global interrupt */
 3742              		.loc 13 111 0
 3743 0076 0122     		movs	r2, #1
 3744 0078 40F22551 		movw	r1, #1317
 3745 007c 2068     		ldr	r0, [r4]
 3746 007e FFF7FEFF 		bl	USART_ITConfig
 3747              	.LVL469:
 3748              	.LBB202:
 3749              	.LBB203:
 3750              		.file 16 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
   1:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**************************************************************************//**
   2:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @file     core_cm3.h
   3:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @version  V1.30
   5:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @date     30. October 2009
   6:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
   7:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @note
   8:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  10:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  11:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  15:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  16:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  22:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
  23:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  24:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CORE_H__
  26:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  27:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  29:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 10: \n
  31:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  34:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 530: \n
  35:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     return(__regBasePri); \n
  36:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * . 
  38:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 550: \n
  39:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  42:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 754: \n
  43:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  46:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 750: \n
  47:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  50:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 528: \n
  51:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  54:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 751: \n
  55:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  58:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  60:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  61:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  62:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -save */
  63:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e10  */
  64:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e530 */
  65:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e550 */
  66:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e754 */
  67:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e750 */
  68:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e528 */
  69:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e751 */
  70:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  71:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  72:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - CMSIS version number
  75:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
  78:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  79:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  80:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
  81:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  extern "C" {
  82:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif 
  83:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  84:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  88:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  90:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  92:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__ICCARM__)
  93:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
  95:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  96:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  97:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * IO definitions
 106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
 111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                 Register Abstraction
 122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  @{
 125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
 126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }  NVIC_Type;                                               
 148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SCB_Type;                                                
 177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                                      
 314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for SysTick
 363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SysTick_Type;
 372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  union  
 413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   {
 414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } ITM_Type;                                                
 445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 505:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0;
 506:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 510:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1;
 511:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 512:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } InterruptType_Type;
 513:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 514:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 518:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 522:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 525:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 529:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 530:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 534:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 535:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 536:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 537:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } MPU_Type;                                                
 549:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 550:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Type Register */
 551:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 554:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 557:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 560:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Control Register */
 561:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 564:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 567:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 570:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Number Register */
 571:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 574:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Base Address Register */
 575:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 578:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 581:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 584:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 588:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 591:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 594:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 597:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 600:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 603:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 606:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 609:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 612:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 614:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 615:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 616:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 619:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 620:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 621:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 622:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } CoreDebug_Type;
 627:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 628:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 632:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 635:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 638:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 641:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 644:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 647:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 650:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 653:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 656:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 659:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 662:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 665:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 669:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 672:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 676:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 679:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 682:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 685:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 688:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 691:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 694:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 697:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 700:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 703:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 706:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 709:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 713:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 714:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 722:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 729:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 733:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 734:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 736:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 737:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 738:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 740:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 741:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 745:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 749:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 753:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 757:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 758:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 759:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 760:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 762:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ARM armcc specific functions */
 764:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 765:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 768:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                             __nop
 769:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFI                             __wfi
 770:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFE                             __wfe
 771:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __SEV                             __sev
 772:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __REV                             __rev
 776:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __RBIT                            __rbit
 777:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 784:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 785:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 790:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 791:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 792:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 794:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
 795:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 796:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
 797:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 798:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 800:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 801:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 803:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 805:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 808:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 810:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 811:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 813:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
 814:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 815:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
 817:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 818:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 820:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 821:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 823:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 825:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 828:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 830:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 831:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 833:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 834:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 835:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 836:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 838:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 840:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 841:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 843:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 844:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 845:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 846:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 848:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 850:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 851:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 853:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 854:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 856:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 858:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __CLREX(void);
 859:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 860:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 861:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 863:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 864:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 865:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 866:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 867:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 869:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 870:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 872:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 873:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 874:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 875:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 876:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 878:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 879:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 881:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 882:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 883:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 885:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 887:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 888:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 890:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   priMask  PriMask
 891:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 892:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 894:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 896:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 897:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 899:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 900:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 901:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 902:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 903:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 905:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 906:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 908:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask faultMask value
 909:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 910:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
 911:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 912:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 914:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 915:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
 916:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
 917:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
 918:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 919:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
 920:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 921:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 923:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 924:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
 925:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 926:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
 927:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 928:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
 929:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 930:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 932:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 934:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 935:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 937:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 939:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CLREX                           __clrex
 940:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 941:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 942:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 944:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 945:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 946:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 947:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 948:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 950:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regBasePri);
 952:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 953:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 954:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 955:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 957:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 958:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 959:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 960:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 961:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 963:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 966:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 967:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 968:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 970:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 971:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 972:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 974:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 976:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regPriMask);
 978:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 979:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 980:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 981:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 983:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
 984:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 985:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 987:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 989:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regPriMask = (priMask);
 991:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 992:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 993:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 994:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 996:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 997:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 998:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 999:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1000:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1002:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regFaultMask);
1004:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1005:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1006:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1007:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1009:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1011:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1012:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1013:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1015:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1018:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1019:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1020:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1021:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1022:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
1023:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1024:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1025:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1026:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1028:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regControl);
1030:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1031:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1032:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1033:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1034:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1035:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1036:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1037:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1038:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1039:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1041:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regControl = control;
1043:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1044:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1045:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1047:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1048:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1049:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* IAR iccarm specific functions */
1051:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1052:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1055:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1058:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1064:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1076:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1077:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1078:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1080:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1081:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1082:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1083:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1084:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1086:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1087:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1089:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1091:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1094:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1096:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1097:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1099:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* GNU gcc specific functions */
1203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
1261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
1263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
1265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
1270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
1272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
1274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
1281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
1290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
1299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
1301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** * 
1316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** *  @return Control value
1317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in integer value
1338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* TASKING carm specific functions */
1437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*
1439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Including the CMSIS ones.
1442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
1445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   Core  Function Interface containing:
1449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core NVIC Functions
1450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core SysTick Functions
1451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core Reset Functions
1452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
1453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@{*/
1454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t reg_value;
1471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   
1473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return priority grouping field 
1485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 3751              		.loc 16 1504 0
 3752 0082 034B     		ldr	r3, .L193+4
 3753 0084 2022     		movs	r2, #32
 3754 0086 5A60     		str	r2, [r3, #4]
 3755              	.LVL470:
 3756              	.LBE203:
 3757              	.LBE202:
 114:./lib/ros_lib/ArduinoHardware.h **** 
 3758              		.loc 13 114 0
 3759 0088 06B0     		add	sp, sp, #24
 3760              	.LCFI41:
 3761              		.cfi_def_cfa_offset 16
 3762              		@ sp needed
 3763 008a 70BD     		pop	{r4, r5, r6, pc}
 3764              	.LVL471:
 3765              	.L194:
 3766              		.align	2
 3767              	.L193:
 3768 008c 00080140 		.word	1073809408
 3769 0090 00E100E0 		.word	-536813312
 3770              		.cfi_endproc
 3771              	.LFE1136:
 3772              		.fnend
 3774              		.text
 3775              		.align	1
 3776              		.global	USART1_IRQHandler
 3777              		.thumb
 3778              		.thumb_func
 3780              	USART1_IRQHandler:
 3781              		.fnstart
 3782              	.LFB1140:
 130:./lib/ros_lib/ArduinoHardware.h ****       }
 131:./lib/ros_lib/ArduinoHardware.h ****     }
 132:./lib/ros_lib/ArduinoHardware.h **** 
 133:./lib/ros_lib/ArduinoHardware.h ****     uint32_t time(){
 134:./lib/ros_lib/ArduinoHardware.h ****       return millis();
 135:./lib/ros_lib/ArduinoHardware.h ****     }
 136:./lib/ros_lib/ArduinoHardware.h **** 
 137:./lib/ros_lib/ArduinoHardware.h ****   protected:
 138:./lib/ros_lib/ArduinoHardware.h ****     USART_TypeDef* iostream;
 139:./lib/ros_lib/ArduinoHardware.h ****     long baud_;
 140:./lib/ros_lib/ArduinoHardware.h **** 
 141:./lib/ros_lib/ArduinoHardware.h **** };
 142:./lib/ros_lib/ArduinoHardware.h **** 
 143:./lib/ros_lib/ArduinoHardware.h **** 
 144:./lib/ros_lib/ArduinoHardware.h **** 
 145:./lib/ros_lib/ArduinoHardware.h **** extern "C"{
 146:./lib/ros_lib/ArduinoHardware.h ****   void USART1_IRQHandler(void){
 3783              		.loc 13 146 0
 3784              		.cfi_startproc
 3785              		@ args = 0, pretend = 0, frame = 0
 3786              		@ frame_needed = 0, uses_anonymous_args = 0
 3787 0288 38B5     		push	{r3, r4, r5, lr}
 3788              		.save {r3, r4, r5, lr}
 3789              	.LCFI42:
 3790              		.cfi_def_cfa_offset 16
 3791              		.cfi_offset 3, -16
 3792              		.cfi_offset 4, -12
 3793              		.cfi_offset 5, -8
 3794              		.cfi_offset 14, -4
 147:./lib/ros_lib/ArduinoHardware.h **** 
 148:./lib/ros_lib/ArduinoHardware.h ****     if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET && USART_CNTIN != (( USART_CNTOUT - 1 + BU
 3795              		.loc 13 148 0
 3796 028a 40F22551 		movw	r1, #1317
 3797 028e 1048     		ldr	r0, .L202
 3798 0290 FFF7FEFF 		bl	USART_GetITStatus
 3799              	.LVL472:
 3800 0294 40B1     		cbz	r0, .L196
 3801              		.loc 13 148 0 is_stmt 0 discriminator 1
 3802 0296 0F4C     		ldr	r4, .L202+4
 3803 0298 636B     		ldr	r3, [r4, #52]
 3804 029a A26B     		ldr	r2, [r4, #56]
 3805 029c 03F2FF33 		addw	r3, r3, #1023
 3806 02a0 C3F30903 		ubfx	r3, r3, #0, #10
 3807 02a4 9342     		cmp	r3, r2
 3808 02a6 04D1     		bne	.L197
 3809              	.L196:
 149:./lib/ros_lib/ArduinoHardware.h **** 
 150:./lib/ros_lib/ArduinoHardware.h ****       USART_FIFO[USART_CNTIN] = (uint8_t)USART_ReceiveData(USART1);
 151:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 152:./lib/ros_lib/ArduinoHardware.h ****     }else{
 153:./lib/ros_lib/ArduinoHardware.h ****       // Should NEVER reach this point!
 154:./lib/ros_lib/ArduinoHardware.h ****       (void)USART_ReceiveData(USART1);  // Clear interupt flag by reading byte
 155:./lib/ros_lib/ArduinoHardware.h ****     }
 156:./lib/ros_lib/ArduinoHardware.h ****   }   
 3810              		.loc 13 156 0 is_stmt 1
 3811 02a8 BDE83840 		pop	{r3, r4, r5, lr}
 3812              	.LCFI43:
 3813              		.cfi_remember_state
 3814              		.cfi_restore 14
 3815              		.cfi_restore 5
 3816              		.cfi_restore 4
 3817              		.cfi_restore 3
 3818              		.cfi_def_cfa_offset 0
 154:./lib/ros_lib/ArduinoHardware.h ****     }
 3819              		.loc 13 154 0
 3820 02ac 0848     		ldr	r0, .L202
 3821 02ae FFF7FEBF 		b	USART_ReceiveData
 3822              	.LVL473:
 3823              	.L197:
 3824              	.LCFI44:
 3825              		.cfi_restore_state
 150:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 3826              		.loc 13 150 0
 3827 02b2 0748     		ldr	r0, .L202
 3828 02b4 A56B     		ldr	r5, [r4, #56]
 3829 02b6 FFF7FEFF 		bl	USART_ReceiveData
 3830              	.LVL474:
 3831 02ba 2544     		add	r5, r5, r4
 3832 02bc C0B2     		uxtb	r0, r0
 3833 02be 85F83C00 		strb	r0, [r5, #60]
 151:./lib/ros_lib/ArduinoHardware.h ****     }else{
 3834              		.loc 13 151 0
 3835 02c2 A36B     		ldr	r3, [r4, #56]
 3836 02c4 0133     		adds	r3, r3, #1
 3837 02c6 C3F30903 		ubfx	r3, r3, #0, #10
 3838 02ca A363     		str	r3, [r4, #56]
 3839 02cc 38BD     		pop	{r3, r4, r5, pc}
 3840              	.L203:
 3841 02ce 00BF     		.align	2
 3842              	.L202:
 3843 02d0 00380140 		.word	1073821696
 3844 02d4 00000000 		.word	.LANCHOR1
 3845              		.cfi_endproc
 3846              	.LFE1140:
 3847              		.fnend
 3849              		.align	1
 3850              		.global	EXTI2_IRQHandler
 3851              		.thumb
 3852              		.thumb_func
 3854              	EXTI2_IRQHandler:
 3855              		.fnstart
 3856              	.LFB1288:
 135:src/main.cpp  **** 
 136:src/main.cpp  **** 
 137:src/main.cpp  **** ros::Subscriber<roberto_msgs::MotorState> motor_sub("cmd_vel", &motor_cb);
 138:src/main.cpp  **** 
 139:src/main.cpp  **** std_msgs::Float32MultiArray debug_msg;
 140:src/main.cpp  **** ros::Publisher debug_pub("debug", &debug_msg);
 141:src/main.cpp  **** 
 142:src/main.cpp  **** std_msgs::Float32MultiArray odom_msg;
 143:src/main.cpp  **** ros::Publisher odom_pub("odom_vel", &odom_msg);
 144:src/main.cpp  **** 
 145:src/main.cpp  **** int main(){
 146:src/main.cpp  ****   #ifdef DEBUG
 147:src/main.cpp  ****   initialise_monitor_handles(); /* initialize handles */
 148:src/main.cpp  ****   #endif
 149:src/main.cpp  ****   /* System Clocks Configuration */
 150:src/main.cpp  ****   RCC_Configuration();
 151:src/main.cpp  ****   SysTick_Init();
 152:src/main.cpp  **** 
 153:src/main.cpp  ****   GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
 154:src/main.cpp  ****   I2C1_Init();
 155:src/main.cpp  ****   DEBUG_Init();
 156:src/main.cpp  ****   SHUTDOWN_Init();
 157:src/main.cpp  ****   LED_Init();
 158:src/main.cpp  **** 
 159:src/main.cpp  ****   
 160:src/main.cpp  **** 
 161:src/main.cpp  **** 
 162:src/main.cpp  ****   nh.initNode();
 163:src/main.cpp  **** 
 164:src/main.cpp  **** 
 165:src/main.cpp  ****   nh.subscribe(motor_sub);
 166:src/main.cpp  ****   nh.advertise(odom_pub);
 167:src/main.cpp  ****   nh.advertise(debug_pub);
 168:src/main.cpp  **** 
 169:src/main.cpp  ****   /*while(!nh.connected()){
 170:src/main.cpp  ****     nh.spinOnce();
 171:src/main.cpp  ****   }*/
 172:src/main.cpp  **** 
 173:src/main.cpp  ****   shuttingDown = false;
 174:src/main.cpp  **** 
 175:src/main.cpp  ****   
 176:src/main.cpp  ****   float FF;
 177:src/main.cpp  ****   //if(!nh.getParam("serial_node/FF", &FF, 1)){
 178:src/main.cpp  ****     FF = 1600;
 179:src/main.cpp  ****   //}
 180:src/main.cpp  ****   float KP;
 181:src/main.cpp  ****   //if(!nh.getParam("serial_node/KP", &KP, 1)){
 182:src/main.cpp  ****     KP = 6000;
 183:src/main.cpp  ****   //}
 184:src/main.cpp  ****   float KI;
 185:src/main.cpp  ****   //if(!nh.getParam("serial_node/KI", &KI, 1)){
 186:src/main.cpp  ****     KI = 4000;
 187:src/main.cpp  ****   //}
 188:src/main.cpp  ****   float KD;
 189:src/main.cpp  ****   //if(!nh.getParam("serial_node/KD", &KD, 1)){
 190:src/main.cpp  ****     KD = 40;
 191:src/main.cpp  ****   //}
 192:src/main.cpp  **** 
 193:src/main.cpp  **** 
 194:src/main.cpp  ****   float integralSaturation;
 195:src/main.cpp  ****   //if(!nh.getParam("serial_node/integralSaturation", &integralSaturation, 1)){
 196:src/main.cpp  ****     integralSaturation = 10;
 197:src/main.cpp  ****   //}
 198:src/main.cpp  ****   float wheelRadius;
 199:src/main.cpp  ****   //if(!nh.getParam("serial_node/wheelRadius", &wheelRadius, 1)){
 200:src/main.cpp  ****     wheelRadius = 0.04;
 201:src/main.cpp  ****   //}
 202:src/main.cpp  **** 
 203:src/main.cpp  ****   //if(!nh.getParam("serial_node/widthBetweenMotorPivotPoints", &L, 1)){
 204:src/main.cpp  ****     L = 0.17;
 205:src/main.cpp  ****   //}
 206:src/main.cpp  **** 
 207:src/main.cpp  ****   //if(!nh.getParam("serial_node/motorPivotPointToWheel", &d, 1)){
 208:src/main.cpp  ****     d = 0.045;
 209:src/main.cpp  ****   //}
 210:src/main.cpp  **** 
 211:src/main.cpp  ****   delay(1000);
 212:src/main.cpp  **** 
 213:src/main.cpp  **** 
 214:src/main.cpp  ****   motorSettings SL(MOTOR_TYPE_SERVO, "servo_left", TIM4, 4);
 215:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 216:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 217:src/main.cpp  ****   SL.m_ServoLimitMax = 1425;
 218:src/main.cpp  ****   SL.m_ServoLimitMin = 7925;
 219:src/main.cpp  **** 
 220:src/main.cpp  ****   motorSettings SR(MOTOR_TYPE_SERVO, "servo_right", TIM4, 3);
 221:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 222:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 223:src/main.cpp  ****   SR.m_ServoLimitMax = 7925;
 224:src/main.cpp  ****   SR.m_ServoLimitMin = 1825;
 225:src/main.cpp  **** 
 226:src/main.cpp  ****   motorSettings FR(MOTOR_TYPE_DC_MOTOR, "front_right", TIM1, 1);
 227:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 228:src/main.cpp  ****               GPIO_Pin_15, GPIOC, GPIO_Pin_0, GPIOA,
 229:src/main.cpp  ****               GPIO_Pin_8, GPIOA);
 230:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 231:src/main.cpp  ****   FR.setRegulator(FF,KP,KI,KD,integralSaturation);
 232:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 233:src/main.cpp  **** 
 234:src/main.cpp  ****   motorSettings FL(MOTOR_TYPE_DC_MOTOR, "front_left", TIM3, 4);
 235:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 236:src/main.cpp  ****               GPIO_Pin_4, GPIOA,GPIO_Pin_10,GPIOB,
 237:src/main.cpp  ****               GPIO_Pin_1, GPIOB);
 238:src/main.cpp  ****   FL.encoderAddr = (0x10);
 239:src/main.cpp  ****   FL.setRegulator(FF,KP,KI,KD,integralSaturation);
 240:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 241:src/main.cpp  **** 
 242:src/main.cpp  ****   motorSettings RL(MOTOR_TYPE_DC_MOTOR, "rear_left", TIM2, 4);
 243:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 244:src/main.cpp  ****     GPIO_Pin_13, GPIOB, GPIO_Pin_14, GPIOB,
 245:src/main.cpp  ****     GPIO_Pin_3, GPIOA);
 246:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 247:src/main.cpp  ****   RL.setRegulator(FF,KP,KI,KD,integralSaturation);
 248:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 249:src/main.cpp  **** 
 250:src/main.cpp  ****   motorSettings RR(MOTOR_TYPE_DC_MOTOR, "rear_right", TIM1, 4);
 251:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 252:src/main.cpp  ****               GPIO_Pin_15, GPIOA, GPIO_Pin_3, GPIOB,
 253:src/main.cpp  ****               GPIO_Pin_11, GPIOA);
 254:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 255:src/main.cpp  ****   RR.setRegulator(FF,KP,KI,KD,integralSaturation);
 256:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 257:src/main.cpp  **** 
 258:src/main.cpp  ****   //char error[60];
 259:src/main.cpp  ****   servo_left = motor::createMotor(&SL);
 260:src/main.cpp  ****   if(!servo_left->motorInit()){
 261:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 262:src/main.cpp  ****     //nh.logerror(error);
 263:src/main.cpp  ****   }
 264:src/main.cpp  **** 
 265:src/main.cpp  ****   servo_right = motor::createMotor(&SR);
 266:src/main.cpp  ****   if(!servo_right->motorInit()){
 267:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 268:src/main.cpp  ****     //nh.logerror(error);
 269:src/main.cpp  ****   }
 270:src/main.cpp  **** 
 271:src/main.cpp  ****   front_left = motor::createMotor(&FL);
 272:src/main.cpp  ****   if(!front_left->motorInit()){
 273:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 274:src/main.cpp  ****     //nh.logerror(error);
 275:src/main.cpp  ****   }
 276:src/main.cpp  **** 
 277:src/main.cpp  ****   front_right = motor::createMotor(&FR);
 278:src/main.cpp  ****   if(!front_right->motorInit()){
 279:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 280:src/main.cpp  ****     //nh.logerror(error);
 281:src/main.cpp  ****   }
 282:src/main.cpp  **** 
 283:src/main.cpp  ****   rear_left = motor::createMotor(&RL);
 284:src/main.cpp  ****   if(!rear_left->motorInit()){
 285:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 286:src/main.cpp  ****     //nh.logerror(error);
 287:src/main.cpp  ****   }
 288:src/main.cpp  **** 
 289:src/main.cpp  ****   rear_right = motor::createMotor(&RR);
 290:src/main.cpp  ****   if(!rear_right->motorInit()){
 291:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 292:src/main.cpp  ****     //nh.logerror(error);
 293:src/main.cpp  ****   }
 294:src/main.cpp  **** 
 295:src/main.cpp  ****   odom_msg.data = new float[3];
 296:src/main.cpp  ****   odom_msg.layout.dim_length = 1;
 297:src/main.cpp  ****   odom_msg.layout.dim = &odomDim;
 298:src/main.cpp  ****   odom_msg.layout.dim[0].size = 3;
 299:src/main.cpp  ****   odom_msg.layout.dim[0].stride = 3;
 300:src/main.cpp  ****   odom_msg.data_length = 3;
 301:src/main.cpp  **** 
 302:src/main.cpp  ****   debug_msg.data = new float[6];
 303:src/main.cpp  ****   debug_msg.layout.dim_length = 1;
 304:src/main.cpp  ****   debug_msg.layout.dim = &debugDim;
 305:src/main.cpp  ****   debug_msg.layout.dim[0].size = 6;
 306:src/main.cpp  ****   debug_msg.layout.dim[0].stride = 6;
 307:src/main.cpp  ****   debug_msg.data_length = 6;
 308:src/main.cpp  ****   
 309:src/main.cpp  ****   
 310:src/main.cpp  **** 
 311:src/main.cpp  ****   servo_left->setReference(135);
 312:src/main.cpp  ****   servo_right->setReference(135);
 313:src/main.cpp  ****   front_right->setReference(0);
 314:src/main.cpp  ****   front_left->setReference(0);
 315:src/main.cpp  ****   rear_right->setReference(0);
 316:src/main.cpp  ****   rear_left->setReference(0);
 317:src/main.cpp  **** 
 318:src/main.cpp  ****   int cnt = 0;
 319:src/main.cpp  ****   bool connected = false;
 320:src/main.cpp  **** 
 321:src/main.cpp  ****   uint32_t start_time;
 322:src/main.cpp  ****   uint32_t dt = 20;
 323:src/main.cpp  ****   float dt_s = ((int)dt*0.001f);
 324:src/main.cpp  **** 
 325:src/main.cpp  ****   //debug_toggle();
 326:src/main.cpp  **** 
 327:src/main.cpp  **** 
 328:src/main.cpp  ****   // Initialize the servos one by one in order not to kill the ODroid
 329:src/main.cpp  ****   while(cnt < 100){
 330:src/main.cpp  ****     start_time = millis();
 331:src/main.cpp  ****     if(cnt < 50)
 332:src/main.cpp  ****       servo_left->update(dt_s, connected, true);
 333:src/main.cpp  ****     else
 334:src/main.cpp  ****       servo_right->update(dt_s, connected, true);
 335:src/main.cpp  ****     while( millis() - start_time < dt);
 336:src/main.cpp  ****     cnt++;
 337:src/main.cpp  ****   }
 338:src/main.cpp  **** 
 339:src/main.cpp  ****   led_set(255);
 340:src/main.cpp  **** 
 341:src/main.cpp  ****   cnt = 0;
 342:src/main.cpp  **** 
 343:src/main.cpp  **** 
 344:src/main.cpp  ****   float l = sqrt(pow((L/2),2)*2);
 345:src/main.cpp  **** 
 346:src/main.cpp  ****   //{fr, fl, rl, rr};
 347:src/main.cpp  ****   float alpha[4] = {-M_PI/4, M_PI/4, 3*M_PI/4, -3*M_PI/4};
 348:src/main.cpp  ****   uint32_t elapsed;
 349:src/main.cpp  ****   initialized = true;
 350:src/main.cpp  **** 
 351:src/main.cpp  **** 
 352:src/main.cpp  ****   while (1){
 353:src/main.cpp  ****     start_time = millis();
 354:src/main.cpp  **** 
 355:src/main.cpp  ****     /*if(shuttingDown){
 356:src/main.cpp  ****       connected = false;
 357:src/main.cpp  ****       // TODO: Advertise shutdown??
 358:src/main.cpp  ****     }else{*/
 359:src/main.cpp  ****     if(cnt++%50 == 0)
 360:src/main.cpp  ****       debug_toggle();
 361:src/main.cpp  ****     connected = nh.connected();
 362:src/main.cpp  ****     //}
 363:src/main.cpp  **** 
 364:src/main.cpp  ****     float sl = servo_left->update(dt_s, connected, true);
 365:src/main.cpp  ****     float sr = servo_right->update(dt_s, connected, true);
 366:src/main.cpp  **** 
 367:src/main.cpp  ****     debug_msg.data[0] = (float)sl;
 368:src/main.cpp  ****     debug_msg.data[1] = (float)sr;
 369:src/main.cpp  **** 
 370:src/main.cpp  ****     bool enable = true;
 371:src/main.cpp  **** 
 372:src/main.cpp  ****     if((waitForServos && ((int)sr == (int)servo_right->getReference() && (int)sl == (int)servo_left
 373:src/main.cpp  ****       waitForServos = false;
 374:src/main.cpp  ****       front_right->setReference(motorCmd[0]);
 375:src/main.cpp  ****       front_left->setReference(motorCmd[1]);
 376:src/main.cpp  ****       rear_left->setReference(motorCmd[2]);
 377:src/main.cpp  ****       rear_right->setReference(motorCmd[3]);
 378:src/main.cpp  ****       delay(2);
 379:src/main.cpp  ****     }else{
 380:src/main.cpp  ****       enable = false;
 381:src/main.cpp  ****       front_right->setReference(0);
 382:src/main.cpp  ****       front_left->setReference(0);
 383:src/main.cpp  ****       rear_left->setReference(0);
 384:src/main.cpp  ****       rear_right->setReference(0);
 385:src/main.cpp  ****     }
 386:src/main.cpp  ****     
 387:src/main.cpp  ****     float fr = front_right->update(dt_s, connected, enable);
 388:src/main.cpp  ****     //udelay(500);
 389:src/main.cpp  ****     float fl = front_left->update(dt_s, connected, enable);
 390:src/main.cpp  ****     //udelay(500);
 391:src/main.cpp  ****     float rl = rear_left->update(dt_s, connected, enable);
 392:src/main.cpp  ****     //udelay(500);
 393:src/main.cpp  ****     float rr = rear_right->update(dt_s, connected, enable);
 394:src/main.cpp  ****     //udelay(1000);
 395:src/main.cpp  **** 
 396:src/main.cpp  **** 
 397:src/main.cpp  **** 
 398:src/main.cpp  ****     debug_msg.data[2] = fr;
 399:src/main.cpp  ****     debug_msg.data[3] = fl;
 400:src/main.cpp  ****     debug_msg.data[4] = rl;
 401:src/main.cpp  ****     debug_msg.data[5] = rr;
 402:src/main.cpp  **** 
 403:src/main.cpp  ****     float speeds[4] = {fr, fl, rl, rr};
 404:src/main.cpp  ****     float angles[4] = {sr-90, -sl+90, sl+90, -sr-90};
 405:src/main.cpp  **** 
 406:src/main.cpp  ****     int i;
 407:src/main.cpp  ****     float x_dot = 0;
 408:src/main.cpp  ****     float y_dot = 0;
 409:src/main.cpp  ****     float theta_dot = 0;
 410:src/main.cpp  ****     for(i = 0; i < 4; i++){
 411:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 412:src/main.cpp  ****       
 413:src/main.cpp  ****       float wheelAngle = alpha[i]+angles[i];
 414:src/main.cpp  ****       x_dot += cos(wheelAngle)*speeds[i];
 415:src/main.cpp  ****       y_dot -= sin(wheelAngle)*speeds[i];
 416:src/main.cpp  ****       
 417:src/main.cpp  ****       float motorAngle = wheelAngle;
 418:src/main.cpp  ****       if(i==2 || i==3){
 419:src/main.cpp  ****         motorAngle += M_PI;
 420:src/main.cpp  ****       }
 421:src/main.cpp  ****       float deltaX = -(l*sin(alpha[i]) + d*sin(motorAngle));
 422:src/main.cpp  ****       float deltaY = l*cos(alpha[i]) + d*cos(motorAngle);
 423:src/main.cpp  **** 
 424:src/main.cpp  ****       float deltaNorm = sqrt(deltaX*deltaX + deltaY*deltaY);
 425:src/main.cpp  ****       float deltaXNorm = deltaX/deltaNorm;
 426:src/main.cpp  ****       float deltaYNorm = deltaY/deltaNorm;
 427:src/main.cpp  **** 
 428:src/main.cpp  ****       float wAngle = wheelAngle+M_PI/2;
 429:src/main.cpp  ****       float wX = cos(wAngle);
 430:src/main.cpp  ****       float wY = sin(wAngle);
 431:src/main.cpp  **** 
 432:src/main.cpp  ****       theta_dot += (((deltaXNorm*wX + deltaYNorm*wY)*wX)/deltaNorm)*speeds[i];
 433:src/main.cpp  ****     }
 434:src/main.cpp  ****     x_dot /= 4;
 435:src/main.cpp  ****     y_dot /= 4;
 436:src/main.cpp  ****     theta_dot /= 4;
 437:src/main.cpp  **** 
 438:src/main.cpp  ****     // Magic constant
 439:src/main.cpp  ****     /*theta_dot = theta_dot*1.7;
 440:src/main.cpp  **** 
 441:src/main.cpp  ****     if(currentMode == roberto_msgs::MotorState::DRIVE_MODE_SPIN && spinningAutonomously && !waitFor
 442:src/main.cpp  ****       if(spinAngle > 0){
 443:src/main.cpp  ****         lastMsg = start_time;
 444:src/main.cpp  ****         spinAngle -= (abs(theta_dot)*180/M_PI) * dt_s;
 445:src/main.cpp  ****       }else{
 446:src/main.cpp  ****         spinAngle = 0;
 447:src/main.cpp  ****         motorCmd[0] = 0.0;
 448:src/main.cpp  ****         motorCmd[1] = 0.0;
 449:src/main.cpp  ****         motorCmd[2] = 0.0;
 450:src/main.cpp  ****         motorCmd[3] = 0.0;
 451:src/main.cpp  ****       }
 452:src/main.cpp  ****     }*/
 453:src/main.cpp  **** 
 454:src/main.cpp  **** 
 455:src/main.cpp  **** 
 456:src/main.cpp  ****     odom_msg.data[0] = x_dot;
 457:src/main.cpp  ****     odom_msg.data[1] = y_dot;
 458:src/main.cpp  ****     odom_msg.data[2] = theta_dot;
 459:src/main.cpp  ****     //odom_msg.data[3] = spinAngle;
 460:src/main.cpp  **** 
 461:src/main.cpp  ****     //reader(odom_msg);
 462:src/main.cpp  ****     //if(odom_msg.data[0] != NULL && odom_msg.data[1] != NULL && odom_msg.data[2] != NULL)
 463:src/main.cpp  ****     odom_pub.publish(&odom_msg);
 464:src/main.cpp  ****     debug_pub.publish(&debug_msg);
 465:src/main.cpp  **** 
 466:src/main.cpp  ****     nh.spinOnce();
 467:src/main.cpp  **** 
 468:src/main.cpp  ****     elapsed = millis() - start_time;
 469:src/main.cpp  ****     if(elapsed > dt){
 470:src/main.cpp  ****       //char elapsed_msg[18];
 471:src/main.cpp  ****       //sprintf(elapsed_msg, "SLOW! %u", elapsed);
 472:src/main.cpp  ****       //nh.logerror(elapsed_msg);
 473:src/main.cpp  ****     }else{
 474:src/main.cpp  ****       /*char elapsed_msg2[8];
 475:src/main.cpp  ****       sprintf(elapsed_msg2, "%u", elapsed);
 476:src/main.cpp  ****       nh.logerror(elapsed_msg2);*/
 477:src/main.cpp  ****       while( (millis() - start_time) < dt){}
 478:src/main.cpp  ****     }
 479:src/main.cpp  ****   }
 480:src/main.cpp  ****   //delete odom_msg.data;
 481:src/main.cpp  ****   return 0;
 482:src/main.cpp  **** }
 483:src/main.cpp  **** 
 484:src/main.cpp  **** extern "C" void EXTI2_IRQHandler(void){
 3857              		.loc 12 484 0
 3858              		.cfi_startproc
 3859              		@ args = 0, pretend = 0, frame = 0
 3860              		@ frame_needed = 0, uses_anonymous_args = 0
 3861 02d8 08B5     		push	{r3, lr}
 3862              		.save {r3, lr}
 3863              	.LCFI45:
 3864              		.cfi_def_cfa_offset 8
 3865              		.cfi_offset 3, -8
 3866              		.cfi_offset 14, -4
 485:src/main.cpp  ****   if(EXTI_GetITStatus(EXTI_Line2) != RESET){
 3867              		.loc 12 485 0
 3868 02da 0420     		movs	r0, #4
 3869 02dc FFF7FEFF 		bl	EXTI_GetITStatus
 3870              	.LVL475:
 3871 02e0 40B1     		cbz	r0, .L204
 486:src/main.cpp  ****     shuttingDown = true;
 3872              		.loc 12 486 0
 3873 02e2 054B     		ldr	r3, .L206
 3874 02e4 0122     		movs	r2, #1
 3875 02e6 83F83C24 		strb	r2, [r3, #1084]
 487:src/main.cpp  ****     EXTI_ClearITPendingBit(EXTI_Line2);
 3876              		.loc 12 487 0
 3877 02ea 0420     		movs	r0, #4
 488:src/main.cpp  ****   }
 489:src/main.cpp  **** }
 3878              		.loc 12 489 0
 3879 02ec BDE80840 		pop	{r3, lr}
 3880              	.LCFI46:
 3881              		.cfi_remember_state
 3882              		.cfi_restore 14
 3883              		.cfi_restore 3
 3884              		.cfi_def_cfa_offset 0
 487:src/main.cpp  ****     EXTI_ClearITPendingBit(EXTI_Line2);
 3885              		.loc 12 487 0
 3886 02f0 FFF7FEBF 		b	EXTI_ClearITPendingBit
 3887              	.LVL476:
 3888              	.L204:
 3889              	.LCFI47:
 3890              		.cfi_restore_state
 3891 02f4 08BD     		pop	{r3, pc}
 3892              	.L207:
 3893 02f6 00BF     		.align	2
 3894              	.L206:
 3895 02f8 00000000 		.word	.LANCHOR1
 3896              		.cfi_endproc
 3897              	.LFE1288:
 3898              		.fnend
 3900              		.align	1
 3901              		.global	HardFault_Handler
 3902              		.thumb
 3903              		.thumb_func
 3905              	HardFault_Handler:
 3906              		.fnstart
 3907              	.LFB1289:
 490:src/main.cpp  **** 
 491:src/main.cpp  **** 
 492:src/main.cpp  **** extern "C" __attribute__((naked)) void HardFault_Handler(void){
 3908              		.loc 12 492 0
 3909              		.cfi_startproc
 3910              		@ Naked Function: prologue and epilogue provided by programmer.
 3911              		@ args = 0, pretend = 0, frame = 0
 3912              		@ frame_needed = 0, uses_anonymous_args = 0
 493:src/main.cpp  ****         /*
 494:src/main.cpp  ****          * Get the appropriate stack pointer, depending on our mode,
 495:src/main.cpp  ****          * and use it as the parameter to the C handler. This function
 496:src/main.cpp  ****          * will never return
 497:src/main.cpp  ****          */
 498:src/main.cpp  **** 
 499:src/main.cpp  **** 
 500:src/main.cpp  ****         __asm(  ".syntax unified\n"
 501:src/main.cpp  ****                         "MOVS   R0, #4  \n"
 502:src/main.cpp  ****                         "MOV    R1, LR  \n"
 503:src/main.cpp  ****                         "TST    R0, R1  \n"
 504:src/main.cpp  ****                         "BEQ    _MSP    \n"
 505:src/main.cpp  ****                         "MRS    R0, PSP \n"
 506:src/main.cpp  ****                         "B      hard_fault_handler_c      \n"
 507:src/main.cpp  ****                 "_MSP:  \n"
 508:src/main.cpp  ****                         "MRS    R0, MSP \n"
 509:src/main.cpp  ****                         "B      hard_fault_handler_c      \n"
 510:src/main.cpp  ****                 ".syntax divided\n") ;
 3913              		.loc 12 510 0
 3914              		.syntax unified
 3915              	@ 510 "src/main.cpp" 1
 3916              		.syntax unified
 3917 02fc 0420     	MOVS   R0, #4  
 3918 02fe 7146     	MOV    R1, LR  
 3919 0300 0842     	TST    R0, R1  
 3920 0302 03D0     	BEQ    _MSP    
 3921 0304 EFF30980 	MRS    R0, PSP 
 3922 0308 FFF7FEBF 	B      hard_fault_handler_c      
 3923              	_MSP:  
 3924 030c EFF30880 	MRS    R0, MSP 
 3925 0310 FFF7FEBF 	B      hard_fault_handler_c      
 3926              	.syntax divided
 3927              	
 3928              	@ 0 "" 2
 511:src/main.cpp  **** }
 3929              		.loc 12 511 0
 3930              		.thumb
 3931              		.syntax unified
 3932              		.cfi_endproc
 3933              	.LFE1289:
 3934              		.cantunwind
 3935              		.fnend
 3937              		.align	1
 3938              		.global	hard_fault_handler_c
 3939              		.thumb
 3940              		.thumb_func
 3942              	hard_fault_handler_c:
 3943              		.fnstart
 3944              	.LFB1290:
 512:src/main.cpp  **** 
 513:src/main.cpp  **** 
 514:src/main.cpp  **** extern "C" void hard_fault_handler_c (unsigned int * hardfault_args)
 515:src/main.cpp  **** {
 3945              		.loc 12 515 0
 3946              		.cfi_startproc
 3947              		@ args = 0, pretend = 0, frame = 0
 3948              		@ frame_needed = 0, uses_anonymous_args = 0
 3949              	.LVL477:
 3950 0314 08B5     		push	{r3, lr}
 3951              		.save {r3, lr}
 3952              	.LCFI48:
 3953              		.cfi_def_cfa_offset 8
 3954              		.cfi_offset 3, -8
 3955              		.cfi_offset 14, -4
 516:src/main.cpp  ****   RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2 | RCC_APB1Periph_TIM3 | RCC_APB1Periph_TIM4, DISABLE);
 3956              		.loc 12 516 0
 3957 0316 0021     		movs	r1, #0
 3958 0318 0720     		movs	r0, #7
 3959              	.LVL478:
 3960 031a FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 3961              	.LVL479:
 517:src/main.cpp  ****   RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1, DISABLE);
 3962              		.loc 12 517 0
 3963 031e 0021     		movs	r1, #0
 3964 0320 4FF40060 		mov	r0, #2048
 3965 0324 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 3966              	.LVL480:
 3967              	.LBB208:
 3968              	.LBB209:
1505:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1506:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1507:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1508:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Disable the interrupt line for external interrupt specified
1509:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1510:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to disable
1511:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1512:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Disable a device specific interupt in the NVIC interrupt controller.
1513:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1514:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1515:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1516:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1517:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1518:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1519:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1520:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1521:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Read the interrupt pending bit for a device specific interrupt source
1522:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1523:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn    The number of the device specifc interrupt
1524:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         1 = interrupt pending, 0 = interrupt not pending
1525:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1526:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Read the pending register in NVIC and return 1 if its status is pending, 
1527:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * otherwise it returns 0
1528:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1529:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1530:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1531:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1532:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1533:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1534:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1535:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the pending bit for an external interrupt
1536:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1537:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn    The number of the interrupt for set pending
1538:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1539:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the pending bit for the specified interrupt.
1540:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1541:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1542:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1543:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1544:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1545:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1546:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1547:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1548:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Clear the pending bit for an external interrupt
1549:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1550:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn    The number of the interrupt for clear pending
1551:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1552:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Clear the pending bit for the specified interrupt. 
1553:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1554:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1555:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1556:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1557:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1558:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1559:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1560:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1561:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Read the active bit for an external interrupt
1562:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1563:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn    The number of the interrupt for read active bit
1564:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         1 = interrupt active, 0 = interrupt not active
1565:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1566:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Read the active register in NVIC and returns 1 if its status is active, 
1567:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * otherwise it returns 0.
1568:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1569:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1570:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1571:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1572:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1573:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1574:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1575:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the priority for an interrupt
1576:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1577:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn      The number of the interrupt for set priority
1578:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priority  The priority to set
1579:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1580:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority for the specified interrupt. The interrupt 
1581:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * number can be positive to specify an external (device specific) 
1582:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1583:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1584:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1585:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1586:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1587:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1588:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   if(IRQn < 0) {
1589:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
1590:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   else {
1591:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
1592:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1593:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1594:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1595:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Read the priority for an interrupt
1596:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1597:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn      The number of the interrupt for get priority
1598:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return           The priority for the interrupt
1599:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1600:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Read the priority for the specified interrupt. The interrupt 
1601:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * number can be positive to specify an external (device specific) 
1602:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1603:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1604:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The returned priority value is automatically aligned to the implemented
1605:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits of the microcontroller.
1606:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1607:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1608:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1609:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1610:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1611:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1612:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   if(IRQn < 0) {
1613:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1614:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   else {
1615:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1616:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1617:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1618:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1619:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1620:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Encode the priority for an interrupt
1621:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1622:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup    The used priority group
1623:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PreemptPriority  The preemptive priority value (starting from 0)
1624:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  SubPriority      The sub priority value (starting from 0)
1625:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return                  The encoded priority for the interrupt
1626:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1627:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Encode the priority for an interrupt with the given priority group,
1628:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * preemptive priority value and sub priority value.
1629:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1630:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1631:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1632:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The returned priority value can be used for NVIC_SetPriority(...) function
1633:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1634:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1635:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1636:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1637:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PreemptPriorityBits;
1638:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t SubPriorityBits;
1639:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1640:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1641:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1642:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  
1643:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return (
1644:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
1645:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
1646:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****          );
1647:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1648:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1649:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1650:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1651:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Decode the priority of an interrupt
1652:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1653:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  Priority           The priority for the interrupt
1654:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup      The used priority group
1655:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  pPreemptPriority   The preemptive priority value (starting from 0)
1656:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  pSubPriority       The sub priority value (starting from 0)
1657:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1658:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Decode an interrupt priority value with the given priority group to 
1659:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * preemptive priority value and sub priority value.
1660:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1661:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1662:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1663:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The priority value can be retrieved with NVIC_GetPriority(...) function
1664:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1665:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1666:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1667:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1668:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PreemptPriorityBits;
1669:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t SubPriorityBits;
1670:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1671:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1672:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1673:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   
1674:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
1675:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
1676:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1677:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1678:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1679:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1680:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##################################    SysTick function  ########################################
1681:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1682:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if (!defined (__Vendor_SysTickConfig)) || (__Vendor_SysTickConfig == 0)
1683:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1684:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1685:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Initialize and start the SysTick counter and its interrupt.
1686:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1687:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   ticks   number of ticks between two interrupts
1688:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return  1 = failed, 0 = successful
1689:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1690:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Initialise the system tick timer and its interrupt and start the
1691:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * system tick timer / counter in free running mode to generate 
1692:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * periodical interrupts.
1693:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1694:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t SysTick_Config(uint32_t ticks)
1695:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** { 
1696:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */
1697:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                                                                
1698:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
1699:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Cortex-M0 System
1700:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
1701:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk | 
1702:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                    SysTick_CTRL_TICKINT_Msk   | 
1703:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                    SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Ti
1704:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return (0);                                                  /* Function successful */
1705:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1706:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1707:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
1708:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1709:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1710:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1711:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1712:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##################################    Reset function  ##########################################
1713:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1714:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1715:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Initiate a system reset request.
1716:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1717:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Initiate a system reset request to reset the MCU
1718:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1719:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SystemReset(void)
1720:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      | 
1722:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) | 
 3969              		.loc 16 1722 0
 3970 0328 0449     		ldr	r1, .L211
 3971 032a 054B     		ldr	r3, .L211+4
 3972 032c CA68     		ldr	r2, [r1, #12]
 3973 032e 02F4E062 		and	r2, r2, #1792
 3974 0332 1343     		orrs	r3, r3, r2
1723:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);                   /* Keep priority group unchanged */
 3975              		.loc 16 1723 0
 3976 0334 CB60     		str	r3, [r1, #12]
 3977              	.LVL481:
 3978              	.LBB210:
 3979              	.LBB211:
1215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
 3980              		.loc 16 1215 0
 3981              		.syntax unified
 3982              	@ 1215 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h" 1
 3983 0336 BFF34F8F 		dsb
 3984              	@ 0 "" 2
 3985              		.thumb
 3986              		.syntax unified
 3987              	.L210:
 3988 033a FEE7     		b	.L210
 3989              	.L212:
 3990              		.align	2
 3991              	.L211:
 3992 033c 00ED00E0 		.word	-536810240
 3993 0340 0400FA05 		.word	100270084
 3994              	.LBE211:
 3995              	.LBE210:
 3996              	.LBE209:
 3997              	.LBE208:
 3998              		.cfi_endproc
 3999              	.LFE1290:
 4000              		.fnend
 4002              		.align	1
 4003              		.global	_Z13assert_failedPhm
 4004              		.thumb
 4005              		.thumb_func
 4007              	_Z13assert_failedPhm:
 4008              		.fnstart
 4009              	.LFB1291:
 518:src/main.cpp  **** 
 519:src/main.cpp  ****   unsigned int stacked_r0;
 520:src/main.cpp  ****   unsigned int stacked_r1;
 521:src/main.cpp  ****   unsigned int stacked_r2;
 522:src/main.cpp  ****   unsigned int stacked_r3;
 523:src/main.cpp  ****   unsigned int stacked_r12;
 524:src/main.cpp  ****   unsigned int stacked_lr;
 525:src/main.cpp  ****   unsigned int stacked_pc;
 526:src/main.cpp  ****   unsigned int stacked_psr;
 527:src/main.cpp  ****  
 528:src/main.cpp  ****   stacked_r0 = ((unsigned long) hardfault_args[0]);
 529:src/main.cpp  ****   stacked_r1 = ((unsigned long) hardfault_args[1]);
 530:src/main.cpp  ****   stacked_r2 = ((unsigned long) hardfault_args[2]);
 531:src/main.cpp  ****   stacked_r3 = ((unsigned long) hardfault_args[3]);
 532:src/main.cpp  ****  
 533:src/main.cpp  ****   stacked_r12 = ((unsigned long) hardfault_args[4]);
 534:src/main.cpp  ****   stacked_lr = ((unsigned long) hardfault_args[5]);
 535:src/main.cpp  ****   stacked_pc = ((unsigned long) hardfault_args[6]);
 536:src/main.cpp  ****   stacked_psr = ((unsigned long) hardfault_args[7]);
 537:src/main.cpp  ****  
 538:src/main.cpp  ****   printf ("\n\n[Hard fault handler - all numbers in hex]\n");
 539:src/main.cpp  ****   printf ("R0 = %x\n", stacked_r0);
 540:src/main.cpp  ****   printf ("R1 = %x\n", stacked_r1);
 541:src/main.cpp  ****   printf ("R2 = %x\n", stacked_r2);
 542:src/main.cpp  ****   printf ("R3 = %x\n", stacked_r3);
 543:src/main.cpp  ****   printf ("R12 = %x\n", stacked_r12);
 544:src/main.cpp  ****   printf ("LR [R14] = %x  subroutine call return address\n", stacked_lr);
 545:src/main.cpp  ****   printf ("PC [R15] = %x  program counter\n", stacked_pc);
 546:src/main.cpp  ****   printf ("PSR = %x\n", stacked_psr);
 547:src/main.cpp  ****   printf ("BFAR = %x\n", (*((volatile unsigned long *)(0xE000ED38))));
 548:src/main.cpp  ****   printf ("CFSR = %x\n", (*((volatile unsigned long *)(0xE000ED28))));
 549:src/main.cpp  ****   printf ("HFSR = %x\n", (*((volatile unsigned long *)(0xE000ED2C))));
 550:src/main.cpp  ****   printf ("DFSR = %x\n", (*((volatile unsigned long *)(0xE000ED30))));
 551:src/main.cpp  ****   printf ("AFSR = %x\n", (*((volatile unsigned long *)(0xE000ED3C))));
 552:src/main.cpp  ****   printf ("SCB_SHCSR = %x\n", SCB->SHCSR);
 553:src/main.cpp  ****   
 554:src/main.cpp  ****   NVIC_SystemReset();
 555:src/main.cpp  **** }
 556:src/main.cpp  **** 
 557:src/main.cpp  **** 
 558:src/main.cpp  **** void assert_failed(uint8_t* file, uint32_t line){
 4010              		.loc 12 558 0
 4011              		.cfi_startproc
 4012              		@ Volatile: function does not return.
 4013              		@ args = 0, pretend = 0, frame = 0
 4014              		@ frame_needed = 0, uses_anonymous_args = 0
 4015              		@ link register save eliminated.
 4016              	.LVL482:
 4017              	.L214:
 4018 0344 FEE7     		b	.L214
 4019              		.cfi_endproc
 4020              	.LFE1291:
 4021              		.cantunwind
 4022              		.fnend
 4024              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv,
 4025              		.align	1
 4026              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
 4027              		.thumb
 4028              		.thumb_func
 4030              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:
 4031              		.fnstart
 4032              	.LFB1323:
 293:./lib/ros_lib/ros/node_handle.h ****       {
 4033              		.loc 10 293 0
 4034              		.cfi_startproc
 4035              		@ args = 0, pretend = 0, frame = 16
 4036              		@ frame_needed = 0, uses_anonymous_args = 0
 4037              	.LVL483:
 293:./lib/ros_lib/ros/node_handle.h ****       {
 4038              		.loc 10 293 0
 4039 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 4040              		.save {r4, lr}
 4041              		.pad #16
 4042              	.LCFI49:
 4043              		.cfi_def_cfa_offset 24
 4044              		.cfi_offset 4, -8
 4045              		.cfi_offset 14, -4
 4046              	.LVL484:
 4047              	.LBB212:
 4048              	.LBB213:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4049              		.loc 1 19 0
 4050 0002 084B     		ldr	r3, .L216
 4051              	.LBE213:
 4052              	.LBE212:
 296:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4053              		.loc 10 296 0
 4054 0004 01AA     		add	r2, sp, #4
 4055              	.LVL485:
 4056              	.LBB217:
 4057              	.LBB216:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4058              		.loc 1 19 0
 4059 0006 0193     		str	r3, [sp, #4]
 4060              	.LVL486:
 4061              	.LBB214:
 4062              	.LBB215:
 4063              		.file 17 "./lib/ros_lib/ros/time.h"
   1:./lib/ros_lib/ros/time.h **** /*
   2:./lib/ros_lib/ros/time.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/time.h ****  *
   4:./lib/ros_lib/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/time.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/time.h ****  *
   7:./lib/ros_lib/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/time.h ****  * are met:
  10:./lib/ros_lib/ros/time.h ****  *
  11:./lib/ros_lib/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/time.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/time.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/time.h ****  *
  21:./lib/ros_lib/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/time.h ****  */
  34:./lib/ros_lib/ros/time.h **** 
  35:./lib/ros_lib/ros/time.h **** #ifndef ROS_TIME_H_
  36:./lib/ros_lib/ros/time.h **** #define ROS_TIME_H_
  37:./lib/ros_lib/ros/time.h **** 
  38:./lib/ros_lib/ros/time.h **** #include <math.h>
  39:./lib/ros_lib/ros/time.h **** #include <stdint.h>
  40:./lib/ros_lib/ros/time.h **** 
  41:./lib/ros_lib/ros/time.h **** #include "ros/duration.h"
  42:./lib/ros_lib/ros/time.h **** 
  43:./lib/ros_lib/ros/time.h **** namespace ros
  44:./lib/ros_lib/ros/time.h **** {
  45:./lib/ros_lib/ros/time.h ****   void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  46:./lib/ros_lib/ros/time.h **** 
  47:./lib/ros_lib/ros/time.h ****   class Time
  48:./lib/ros_lib/ros/time.h ****   {
  49:./lib/ros_lib/ros/time.h ****     public:
  50:./lib/ros_lib/ros/time.h ****       uint32_t sec, nsec;
  51:./lib/ros_lib/ros/time.h **** 
  52:./lib/ros_lib/ros/time.h ****       Time() : sec(0), nsec(0) {}
 4064              		.loc 17 52 0
 4065 0008 0023     		movs	r3, #0
 4066 000a 0293     		str	r3, [sp, #8]
 4067 000c 0393     		str	r3, [sp, #12]
 4068              	.LVL487:
 4069              	.LBE215:
 4070              	.LBE214:
 4071              	.LBE216:
 4072              	.LBE217:
 296:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4073              		.loc 10 296 0
 4074 000e 0368     		ldr	r3, [r0]
 4075 0010 0A21     		movs	r1, #10
 4076 0012 1B68     		ldr	r3, [r3]
 293:./lib/ros_lib/ros/node_handle.h ****       {
 4077              		.loc 10 293 0
 4078 0014 0446     		mov	r4, r0
 296:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4079              		.loc 10 296 0
 4080 0016 9847     		blx	r3
 4081              	.LVL488:
 4082              	.LBB218:
 4083              	.LBB219:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4084              		.loc 13 134 0
 4085 0018 FFF7FEFF 		bl	millis
 4086              	.LVL489:
 4087              	.LBE219:
 4088              	.LBE218:
 297:./lib/ros_lib/ros/node_handle.h ****       }
 4089              		.loc 10 297 0
 4090 001c E060     		str	r0, [r4, #12]
 298:./lib/ros_lib/ros/node_handle.h **** 
 4091              		.loc 10 298 0
 4092 001e 04B0     		add	sp, sp, #16
 4093              	.LCFI50:
 4094              		.cfi_def_cfa_offset 8
 4095              		@ sp needed
 4096 0020 10BD     		pop	{r4, pc}
 4097              	.LVL490:
 4098              	.L217:
 4099 0022 00BF     		.align	2
 4100              	.L216:
 4101 0024 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4102              		.cfi_endproc
 4103              	.LFE1323:
 4104              		.fnend
 4106              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv,
 4107              		.align	1
 4108              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv
 4109              		.thumb
 4110              		.thumb_func
 4112              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:
 4113              		.fnstart
 4114              	.LFB1324:
 390:./lib/ros_lib/ros/node_handle.h ****       {
 4115              		.loc 10 390 0
 4116              		.cfi_startproc
 4117              		@ args = 0, pretend = 0, frame = 24
 4118              		@ frame_needed = 0, uses_anonymous_args = 0
 4119              	.LVL491:
 4120 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4121              		.save {r4, r5, r6, r7, r8, lr}
 4122              	.LCFI51:
 4123              		.cfi_def_cfa_offset 24
 4124              		.cfi_offset 4, -24
 4125              		.cfi_offset 5, -20
 4126              		.cfi_offset 6, -16
 4127              		.cfi_offset 7, -12
 4128              		.cfi_offset 8, -8
 4129              		.cfi_offset 14, -4
 4130 0004 0446     		mov	r4, r0
 4131              	.LBB225:
 4132              	.LBB226:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 4133              		.loc 2 34 0
 4134 0006 2B4B     		ldr	r3, .L231
 4135              	.LBE226:
 4136              	.LBE225:
 390:./lib/ros_lib/ros/node_handle.h ****       {
 4137              		.loc 10 390 0
 4138              		.pad #24
 4139 0008 86B0     		sub	sp, sp, #24
 4140              	.LCFI52:
 4141              		.cfi_def_cfa_offset 48
 4142              	.LVL492:
 4143              	.LBB228:
 4144              	.LBB227:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 4145              		.loc 2 34 0
 4146 000a 0093     		str	r3, [sp]
 4147 000c 2A4B     		ldr	r3, .L231+4
 4148 000e 0022     		movs	r2, #0
 4149 0010 ADF80420 		strh	r2, [sp, #4]	@ movhi
 4150 0014 0293     		str	r3, [sp, #8]
 4151 0016 0393     		str	r3, [sp, #12]
 4152 0018 0493     		str	r3, [sp, #16]
 4153 001a 0592     		str	r2, [sp, #20]
 4154              	.LVL493:
 4155 001c 00F61406 		addw	r6, r0, #2068
 4156 0020 00F67805 		addw	r5, r0, #2168
 4157              	.LBE227:
 4158              	.LBE228:
 402:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 4159              		.loc 10 402 0
 4160 0024 4FF48067 		mov	r7, #1024
 4161              	.LVL494:
 4162              	.L220:
 396:./lib/ros_lib/ros/node_handle.h ****           {
 4163              		.loc 10 396 0
 4164 0028 56F8043F 		ldr	r3, [r6, #4]!
 4165 002c BBB1     		cbz	r3, .L219
 398:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 4166              		.loc 10 398 0
 4167 002e 9A68     		ldr	r2, [r3, #8]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4168              		.loc 10 400 0
 4169 0030 5868     		ldr	r0, [r3, #4]
 398:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 4170              		.loc 10 398 0
 4171 0032 ADF80420 		strh	r2, [sp, #4]	@ movhi
 399:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 4172              		.loc 10 399 0
 4173 0036 1A68     		ldr	r2, [r3]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4174              		.loc 10 400 0
 4175 0038 0368     		ldr	r3, [r0]
 399:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 4176              		.loc 10 399 0
 4177 003a 0292     		str	r2, [sp, #8]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4178              		.loc 10 400 0
 4179 003c 9B68     		ldr	r3, [r3, #8]
 4180 003e 9847     		blx	r3
 4181              	.LVL495:
 401:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4182              		.loc 10 401 0
 4183 0040 3368     		ldr	r3, [r6]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4184              		.loc 10 400 0
 4185 0042 0390     		str	r0, [sp, #12]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4186              		.loc 10 401 0
 4187 0044 5868     		ldr	r0, [r3, #4]
 4188 0046 0368     		ldr	r3, [r0]
 4189 0048 DB68     		ldr	r3, [r3, #12]
 4190 004a 9847     		blx	r3
 4191              	.LVL496:
 4192 004c 3168     		ldr	r1, [r6]
 403:./lib/ros_lib/ros/node_handle.h ****           }
 4193              		.loc 10 403 0
 4194 004e 2368     		ldr	r3, [r4]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4195              		.loc 10 401 0
 4196 0050 0490     		str	r0, [sp, #16]
 402:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 4197              		.loc 10 402 0
 4198 0052 0597     		str	r7, [sp, #20]
 4199              	.LVL497:
 403:./lib/ros_lib/ros/node_handle.h ****           }
 4200              		.loc 10 403 0
 4201 0054 1B68     		ldr	r3, [r3]
 4202 0056 6A46     		mov	r2, sp
 4203 0058 0969     		ldr	r1, [r1, #16]
 4204              	.LVL498:
 4205 005a 2046     		mov	r0, r4
 4206 005c 9847     		blx	r3
 4207              	.LVL499:
 4208              	.L219:
 394:./lib/ros_lib/ros/node_handle.h ****         {
 4209              		.loc 10 394 0 discriminator 2
 4210 005e AE42     		cmp	r6, r5
 4211 0060 E2D1     		bne	.L220
 4212 0062 04F6DC06 		addw	r6, r4, #2268
 414:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 4213              		.loc 10 414 0
 4214 0066 4FF48067 		mov	r7, #1024
 4215              	.L222:
 408:./lib/ros_lib/ros/node_handle.h ****           {
 4216              		.loc 10 408 0
 4217 006a 55F8040F 		ldr	r0, [r5, #4]!
 4218 006e C8B1     		cbz	r0, .L221
 410:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 4219              		.loc 10 410 0
 4220 0070 4368     		ldr	r3, [r0, #4]
 4221 0072 ADF80430 		strh	r3, [sp, #4]	@ movhi
 411:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 4222              		.loc 10 411 0
 4223 0076 8368     		ldr	r3, [r0, #8]
 4224 0078 0293     		str	r3, [sp, #8]
 412:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 4225              		.loc 10 412 0
 4226 007a 0368     		ldr	r3, [r0]
 4227 007c 9B68     		ldr	r3, [r3, #8]
 4228 007e 9847     		blx	r3
 4229              	.LVL500:
 4230 0080 0390     		str	r0, [sp, #12]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 4231              		.loc 10 413 0
 4232 0082 2868     		ldr	r0, [r5]
 4233 0084 0368     		ldr	r3, [r0]
 4234 0086 DB68     		ldr	r3, [r3, #12]
 4235 0088 9847     		blx	r3
 4236              	.LVL501:
 415:./lib/ros_lib/ros/node_handle.h ****           }
 4237              		.loc 10 415 0
 4238 008a 2368     		ldr	r3, [r4]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 4239              		.loc 10 413 0
 4240 008c 0490     		str	r0, [sp, #16]
 415:./lib/ros_lib/ros/node_handle.h ****           }
 4241              		.loc 10 415 0
 4242 008e 2868     		ldr	r0, [r5]
 4243 0090 D3F80080 		ldr	r8, [r3]
 4244 0094 0368     		ldr	r3, [r0]
 414:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 4245              		.loc 10 414 0
 4246 0096 0597     		str	r7, [sp, #20]
 415:./lib/ros_lib/ros/node_handle.h ****           }
 4247              		.loc 10 415 0
 4248 0098 5B68     		ldr	r3, [r3, #4]
 4249 009a 9847     		blx	r3
 4250              	.LVL502:
 4251 009c 6A46     		mov	r2, sp
 4252 009e 0146     		mov	r1, r0
 4253 00a0 2046     		mov	r0, r4
 4254 00a2 C047     		blx	r8
 4255              	.LVL503:
 4256              	.L221:
 406:./lib/ros_lib/ros/node_handle.h ****         {
 4257              		.loc 10 406 0 discriminator 2
 4258 00a4 AE42     		cmp	r6, r5
 4259 00a6 E0D1     		bne	.L222
 418:./lib/ros_lib/ros/node_handle.h ****       }
 4260              		.loc 10 418 0
 4261 00a8 0123     		movs	r3, #1
 4262 00aa 84F8F438 		strb	r3, [r4, #2292]
 419:./lib/ros_lib/ros/node_handle.h **** 
 4263              		.loc 10 419 0
 4264 00ae 06B0     		add	sp, sp, #24
 4265              	.LCFI53:
 4266              		.cfi_def_cfa_offset 24
 4267              	.LVL504:
 4268              		@ sp needed
 4269 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4270              	.LVL505:
 4271              	.L232:
 4272              		.align	2
 4273              	.L231:
 4274 00b4 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 4275 00b8 16020000 		.word	.LC20
 4276              		.cfi_endproc
 4277              	.LFE1324:
 4278              		.fnend
 4280              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh,"axG",%
 4281              		.align	1
 4282              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh
 4283              		.thumb
 4284              		.thumb_func
 4286              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:
 4287              		.fnstart
 4288              	.LFB1325:
 300:./lib/ros_lib/ros/node_handle.h ****       {
 4289              		.loc 10 300 0
 4290              		.cfi_startproc
 4291              		@ args = 0, pretend = 0, frame = 16
 4292              		@ frame_needed = 0, uses_anonymous_args = 0
 4293              	.LVL506:
 4294 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 4295              		.save {r4, r5, r6, lr}
 4296              		.pad #16
 4297              	.LCFI54:
 4298              		.cfi_def_cfa_offset 32
 4299              		.cfi_offset 4, -16
 4300              		.cfi_offset 5, -12
 4301              		.cfi_offset 6, -8
 4302              		.cfi_offset 14, -4
 4303              	.LVL507:
 4304              	.LBB243:
 4305              	.LBB244:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4306              		.loc 1 19 0
 4307 0002 1C4B     		ldr	r3, .L234
 4308              	.LBE244:
 4309              	.LBE243:
 300:./lib/ros_lib/ros/node_handle.h ****       {
 4310              		.loc 10 300 0
 4311 0004 0446     		mov	r4, r0
 4312              	.LBB248:
 4313              	.LBB247:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4314              		.loc 1 19 0
 4315 0006 0193     		str	r3, [sp, #4]
 4316              	.LVL508:
 4317              	.LBB245:
 4318              	.LBB246:
 4319              		.loc 17 52 0
 4320 0008 0023     		movs	r3, #0
 4321 000a 0293     		str	r3, [sp, #8]
 4322 000c 0393     		str	r3, [sp, #12]
 4323              	.LVL509:
 4324              	.LBE246:
 4325              	.LBE245:
 4326              	.LBE247:
 4327              	.LBE248:
 300:./lib/ros_lib/ros/node_handle.h ****       {
 4328              		.loc 10 300 0
 4329 000e 0D46     		mov	r5, r1
 4330              	.LBB249:
 4331              	.LBB250:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4332              		.loc 13 134 0
 4333 0010 FFF7FEFF 		bl	millis
 4334              	.LVL510:
 4335              	.LBE250:
 4336              	.LBE249:
 303:./lib/ros_lib/ros/node_handle.h **** 
 4337              		.loc 10 303 0
 4338 0014 E268     		ldr	r2, [r4, #12]
 305:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 4339              		.loc 10 305 0
 4340 0016 2946     		mov	r1, r5
 303:./lib/ros_lib/ros/node_handle.h **** 
 4341              		.loc 10 303 0
 4342 0018 861A     		subs	r6, r0, r2
 4343              	.LVL511:
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4344              		.loc 10 306 0
 4345 001a 4FF47A75 		mov	r5, #1000
 4346              	.LVL512:
 305:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 4347              		.loc 10 305 0
 4348 001e 01A8     		add	r0, sp, #4
 4349 0020 FFF7FEFF 		bl	_ZN8std_msgs4Time11deserializeEPh
 4350              	.LVL513:
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4351              		.loc 10 306 0
 4352 0024 B6FBF5F2 		udiv	r2, r6, r5
 4353 0028 029B     		ldr	r3, [sp, #8]
 4354 002a 1344     		add	r3, r3, r2
 307:./lib/ros_lib/ros/node_handle.h **** 
 4355              		.loc 10 307 0
 4356 002c 05FB1262 		mls	r2, r5, r2, r6
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4357              		.loc 10 306 0
 4358 0030 0293     		str	r3, [sp, #8]
 307:./lib/ros_lib/ros/node_handle.h **** 
 4359              		.loc 10 307 0
 4360 0032 114E     		ldr	r6, .L234+4
 4361              	.LVL514:
 4362 0034 039B     		ldr	r3, [sp, #12]
 4363 0036 06FB0232 		mla	r2, r6, r2, r3
 4364 003a 0392     		str	r2, [sp, #12]
 4365              	.LVL515:
 4366              	.LBB251:
 4367              	.LBB252:
 4368              	.LBB253:
 4369              	.LBB254:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4370              		.loc 13 134 0
 4371 003c FFF7FEFF 		bl	millis
 4372              	.LVL516:
 4373              	.LBE254:
 4374              	.LBE253:
 326:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 4375              		.loc 10 326 0
 4376 0040 B0FBF5F3 		udiv	r3, r0, r5
 4377 0044 029A     		ldr	r2, [sp, #8]
 327:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4378              		.loc 10 327 0
 4379 0046 0399     		ldr	r1, [sp, #12]
 326:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 4380              		.loc 10 326 0
 4381 0048 013A     		subs	r2, r2, #1
 4382 004a D21A     		subs	r2, r2, r3
 4383 004c 2261     		str	r2, [r4, #16]
 327:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4384              		.loc 10 327 0
 4385 004e 0B4A     		ldr	r2, .L234+8
 4386 0050 05FB1300 		mls	r0, r5, r3, r0
 4387              	.LVL517:
 4388 0054 0A44     		add	r2, r2, r1
 4389 0056 2146     		mov	r1, r4
 4390 0058 06FB1023 		mls	r3, r6, r0, r2
 328:./lib/ros_lib/ros/node_handle.h ****       }
 4391              		.loc 10 328 0
 4392 005c 04F11000 		add	r0, r4, #16
 327:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4393              		.loc 10 327 0
 4394 0060 41F8143F 		str	r3, [r1, #20]!
 328:./lib/ros_lib/ros/node_handle.h ****       }
 4395              		.loc 10 328 0
 4396 0064 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 4397              	.LVL518:
 4398              	.LBE252:
 4399              	.LBE251:
 4400              	.LBB255:
 4401              	.LBB256:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4402              		.loc 13 134 0
 4403 0068 FFF7FEFF 		bl	millis
 4404              	.LVL519:
 4405              	.LBE256:
 4406              	.LBE255:
 310:./lib/ros_lib/ros/node_handle.h ****       }
 4407              		.loc 10 310 0
 4408 006c C4F8FC08 		str	r0, [r4, #2300]
 311:./lib/ros_lib/ros/node_handle.h **** 
 4409              		.loc 10 311 0
 4410 0070 04B0     		add	sp, sp, #16
 4411              	.LCFI55:
 4412              		.cfi_def_cfa_offset 16
 4413              		@ sp needed
 4414 0072 70BD     		pop	{r4, r5, r6, pc}
 4415              	.LVL520:
 4416              	.L235:
 4417              		.align	2
 4418              	.L234:
 4419 0074 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4420 0078 40420F00 		.word	1000000
 4421 007c 00CA9A3B 		.word	1000000000
 4422              		.cfi_endproc
 4423              	.LFE1325:
 4424              		.fnend
 4426              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv,"axG",%p
 4427              		.align	1
 4428              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv
 4429              		.thumb
 4430              		.thumb_func
 4432              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:
 4433              		.fnstart
 4434              	.LFB1318:
 184:./lib/ros_lib/ros/node_handle.h **** 
 4435              		.loc 10 184 0
 4436              		.cfi_startproc
 4437              		@ args = 0, pretend = 0, frame = 0
 4438              		@ frame_needed = 0, uses_anonymous_args = 0
 4439              	.LVL521:
 4440 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4441              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 4442              	.LCFI56:
 4443              		.cfi_def_cfa_offset 32
 4444              		.cfi_offset 3, -32
 4445              		.cfi_offset 4, -28
 4446              		.cfi_offset 5, -24
 4447              		.cfi_offset 6, -20
 4448              		.cfi_offset 7, -16
 4449              		.cfi_offset 8, -12
 4450              		.cfi_offset 9, -8
 4451              		.cfi_offset 14, -4
 184:./lib/ros_lib/ros/node_handle.h **** 
 4452              		.loc 10 184 0
 4453 0004 0446     		mov	r4, r0
 4454              	.LVL522:
 4455              	.LBB264:
 4456              	.LBB265:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4457              		.loc 13 134 0
 4458 0006 FFF7FEFF 		bl	millis
 4459              	.LVL523:
 4460              	.LBE265:
 4461              	.LBE264:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 4462              		.loc 10 188 0
 4463 000a 42F6F822 		movw	r2, #11000
 4464 000e D4F8FC38 		ldr	r3, [r4, #2300]
 4465              	.LBB267:
 4466              	.LBB266:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4467              		.loc 13 134 0
 4468 0012 0646     		mov	r6, r0
 4469              	.LVL524:
 4470              	.LBE266:
 4471              	.LBE267:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 4472              		.loc 10 188 0
 4473 0014 C31A     		subs	r3, r0, r3
 4474 0016 9342     		cmp	r3, r2
 189:./lib/ros_lib/ros/node_handle.h ****          }
 4475              		.loc 10 189 0
 4476 0018 84BF     		itt	hi
 4477 001a 0023     		movhi	r3, #0
 4478 001c 84F8F438 		strbhi	r3, [r4, #2292]
 193:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 4479              		.loc 10 193 0
 4480 0020 D4F8E038 		ldr	r3, [r4, #2272]
 4481 0024 33B1     		cbz	r3, .L238
 194:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 4482              		.loc 10 194 0
 4483 0026 D4F80039 		ldr	r3, [r4, #2304]
 4484 002a 8342     		cmp	r3, r0
 195:./lib/ros_lib/ros/node_handle.h ****           }
 4485              		.loc 10 195 0
 4486 002c 3CBF     		itt	cc
 4487 002e 0023     		movcc	r3, #0
 4488 0030 C4F8E038 		strcc	r3, [r4, #2272]
 4489              	.L238:
 4490              	.LBB268:
 4491              	.LBB269:
 4492              	.LBB270:
 117:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 4493              		.loc 13 117 0
 4494 0034 744F     		ldr	r7, .L278
 4495              	.LBE270:
 4496              	.LBE269:
 251:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 4497              		.loc 10 251 0
 4498 0036 4FF00008 		mov	r8, #0
 268:./lib/ros_lib/ros/node_handle.h ****               }
 4499              		.loc 10 268 0
 4500 003a 04F11809 		add	r9, r4, #24
 4501              	.LVL525:
 4502              	.L239:
 4503              	.LBB273:
 4504              	.LBB271:
 117:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 4505              		.loc 13 117 0
 4506 003e BA6B     		ldr	r2, [r7, #56]
 4507 0040 7B6B     		ldr	r3, [r7, #52]
 4508 0042 9A42     		cmp	r2, r3
 4509 0044 00F0CC80 		beq	.L240
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 4510              		.loc 13 121 0
 4511 0048 7B6B     		ldr	r3, [r7, #52]
 4512              	.LBE271:
 4513              	.LBE273:
 205:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4514              		.loc 10 205 0
 4515 004a D4F8E058 		ldr	r5, [r4, #2272]
 4516              	.LBB274:
 4517              	.LBB272:
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 4518              		.loc 13 121 0
 4519 004e 3B44     		add	r3, r3, r7
 4520 0050 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 4521              		.loc 13 122 0
 4522 0054 7A6B     		ldr	r2, [r7, #52]
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 4523              		.loc 13 121 0
 4524 0056 DBB2     		uxtb	r3, r3
 4525              	.LVL526:
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 4526              		.loc 13 122 0
 4527 0058 0132     		adds	r2, r2, #1
 4528 005a C2F30902 		ubfx	r2, r2, #0, #10
 4529 005e 7A63     		str	r2, [r7, #52]
 4530              	.LVL527:
 4531              	.LBE272:
 4532              	.LBE274:
 204:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 4533              		.loc 10 204 0
 4534 0060 D4F8F028 		ldr	r2, [r4, #2288]
 205:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4535              		.loc 10 205 0
 4536 0064 072D     		cmp	r5, #7
 204:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 4537              		.loc 10 204 0
 4538 0066 1A44     		add	r2, r2, r3
 4539 0068 C4F8F028 		str	r2, [r4, #2288]
 205:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4540              		.loc 10 205 0
 4541 006c 0FD1     		bne	.L241
 206:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 4542              		.loc 10 206 0
 4543 006e D4F8EC28 		ldr	r2, [r4, #2284]
 4544 0072 511C     		adds	r1, r2, #1
 4545 0074 2244     		add	r2, r2, r4
 4546 0076 C4F8EC18 		str	r1, [r4, #2284]
 4547 007a 1376     		strb	r3, [r2, #24]
 207:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 4548              		.loc 10 207 0
 4549 007c D4F8E438 		ldr	r3, [r4, #2276]
 4550 0080 013B     		subs	r3, r3, #1
 4551 0082 C4F8E438 		str	r3, [r4, #2276]
 4552              	.L276:
 208:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 4553              		.loc 10 208 0
 4554 0086 002B     		cmp	r3, #0
 4555 0088 D9D1     		bne	.L239
 209:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 4556              		.loc 10 209 0
 4557 008a 0823     		movs	r3, #8
 4558 008c 1AE0     		b	.L274
 4559              	.L241:
 210:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 4560              		.loc 10 210 0
 4561 008e A5B9     		cbnz	r5, .L244
 211:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 4562              		.loc 10 211 0
 4563 0090 FF2B     		cmp	r3, #255
 4564 0092 07D1     		bne	.L245
 212:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 4565              		.loc 10 212 0
 4566 0094 0123     		movs	r3, #1
 4567 0096 C4F8E038 		str	r3, [r4, #2272]
 213:./lib/ros_lib/ros/node_handle.h ****             }
 4568              		.loc 10 213 0
 4569 009a 06F11403 		add	r3, r6, #20
 4570 009e C4F80039 		str	r3, [r4, #2304]
 4571 00a2 CCE7     		b	.L239
 4572              	.L245:
 4573              	.LVL528:
 4574              	.LBB275:
 4575              	.LBB276:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4576              		.loc 13 134 0
 4577 00a4 FFF7FEFF 		bl	millis
 4578              	.LVL529:
 4579              	.LBE276:
 4580              	.LBE275:
 215:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 4581              		.loc 10 215 0
 4582 00a8 801B     		subs	r0, r0, r6
 4583 00aa 0528     		cmp	r0, #5
 4584 00ac C7D9     		bls	.L239
 217:./lib/ros_lib/ros/node_handle.h ****               return -2;
 4585              		.loc 10 217 0
 4586 00ae 84F8F458 		strb	r5, [r4, #2292]
 218:./lib/ros_lib/ros/node_handle.h ****             }
 4587              		.loc 10 218 0
 4588 00b2 6FF00100 		mvn	r0, #1
 4589 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4590              	.LVL530:
 4591              	.L244:
 220:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 4592              		.loc 10 220 0
 4593 00ba 012D     		cmp	r5, #1
 4594 00bc 0FD1     		bne	.L247
 221:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 4595              		.loc 10 221 0
 4596 00be FE2B     		cmp	r3, #254
 4597 00c0 03D1     		bne	.L248
 222:./lib/ros_lib/ros/node_handle.h ****             }else{
 4598              		.loc 10 222 0
 4599 00c2 0223     		movs	r3, #2
 4600              	.L274:
 4601 00c4 C4F8E038 		str	r3, [r4, #2272]
 4602 00c8 B9E7     		b	.L239
 4603              	.L248:
 225:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 4604              		.loc 10 225 0
 4605 00ca 94F8F438 		ldrb	r3, [r4, #2292]	@ zero_extendqisi2
 224:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 4606              		.loc 10 224 0
 4607 00ce C4F8E088 		str	r8, [r4, #2272]
 225:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 4608              		.loc 10 225 0
 4609 00d2 002B     		cmp	r3, #0
 4610 00d4 B3D1     		bne	.L239
 226:./lib/ros_lib/ros/node_handle.h ****             }
 4611              		.loc 10 226 0
 4612 00d6 2046     		mov	r0, r4
 4613 00d8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
 4614              	.LVL531:
 4615 00dc AFE7     		b	.L239
 4616              	.L247:
 228:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 4617              		.loc 10 228 0
 4618 00de 022D     		cmp	r5, #2
 4619 00e0 05D1     		bne	.L249
 229:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 4620              		.loc 10 229 0
 4621 00e2 C4F8E438 		str	r3, [r4, #2276]
 230:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 4622              		.loc 10 230 0
 4623 00e6 C4F8EC88 		str	r8, [r4, #2284]
 231:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 4624              		.loc 10 231 0
 4625 00ea 0322     		movs	r2, #3
 4626 00ec 20E0     		b	.L275
 4627              	.L249:
 233:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 4628              		.loc 10 233 0
 4629 00ee 032D     		cmp	r5, #3
 4630 00f0 07D1     		bne	.L250
 234:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 4631              		.loc 10 234 0
 4632 00f2 D4F8E428 		ldr	r2, [r4, #2276]
 4633 00f6 02EB0323 		add	r3, r2, r3, lsl #8
 4634 00fa C4F8E438 		str	r3, [r4, #2276]
 235:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 4635              		.loc 10 235 0
 4636 00fe 0423     		movs	r3, #4
 4637 0100 E0E7     		b	.L274
 4638              	.L250:
 236:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 4639              		.loc 10 236 0
 4640 0102 042D     		cmp	r5, #4
 4641 0104 0FD1     		bne	.L251
 237:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 4642              		.loc 10 237 0
 4643 0106 414B     		ldr	r3, .L278+4
 4644 0108 1340     		ands	r3, r3, r2
 4645 010a 002B     		cmp	r3, #0
 4646 010c BEBF     		ittt	lt
 4647 010e 03F1FF33 		addlt	r3, r3, #-1
 4648 0112 63F0FF03 		ornlt	r3, r3, #255
 4649 0116 0133     		addlt	r3, r3, #1
 4650 0118 FF2B     		cmp	r3, #255
 4651 011a 01D1     		bne	.L252
 238:./lib/ros_lib/ros/node_handle.h **** 	    else
 4652              		.loc 10 238 0
 4653 011c 0523     		movs	r3, #5
 4654 011e D1E7     		b	.L274
 4655              	.L252:
 240:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 4656              		.loc 10 240 0
 4657 0120 C4F8E088 		str	r8, [r4, #2272]
 4658 0124 8BE7     		b	.L239
 4659              	.L251:
 241:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 4660              		.loc 10 241 0
 4661 0126 052D     		cmp	r5, #5
 4662 0128 07D1     		bne	.L254
 242:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 4663              		.loc 10 242 0
 4664 012a C4F8E838 		str	r3, [r4, #2280]
 243:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 4665              		.loc 10 243 0
 4666 012e 0622     		movs	r2, #6
 4667              	.L275:
 4668 0130 C4F8E028 		str	r2, [r4, #2272]
 244:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 4669              		.loc 10 244 0
 4670 0134 C4F8F038 		str	r3, [r4, #2288]
 4671 0138 81E7     		b	.L239
 4672              	.L254:
 245:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 4673              		.loc 10 245 0
 4674 013a 062D     		cmp	r5, #6
 4675 013c 0BD1     		bne	.L255
 246:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 4676              		.loc 10 246 0
 4677 013e D4F8E828 		ldr	r2, [r4, #2280]
 4678 0142 02EB0323 		add	r3, r2, r3, lsl #8
 4679 0146 C4F8E838 		str	r3, [r4, #2280]
 247:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 4680              		.loc 10 247 0
 4681 014a 0723     		movs	r3, #7
 4682 014c C4F8E038 		str	r3, [r4, #2272]
 248:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 4683              		.loc 10 248 0
 4684 0150 D4F8E438 		ldr	r3, [r4, #2276]
 4685 0154 97E7     		b	.L276
 4686              	.L255:
 250:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 4687              		.loc 10 250 0
 4688 0156 082D     		cmp	r5, #8
 4689 0158 7FF471AF 		bne	.L239
 252:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 4690              		.loc 10 252 0
 4691 015c 2B4B     		ldr	r3, .L278+4
 251:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 4692              		.loc 10 251 0
 4693 015e C4F8E088 		str	r8, [r4, #2272]
 252:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 4694              		.loc 10 252 0
 4695 0162 1340     		ands	r3, r3, r2
 4696 0164 002B     		cmp	r3, #0
 4697 0166 BEBF     		ittt	lt
 4698 0168 03F1FF33 		addlt	r3, r3, #-1
 4699 016c 63F0FF03 		ornlt	r3, r3, #255
 4700 0170 0133     		addlt	r3, r3, #1
 4701 0172 FF2B     		cmp	r3, #255
 4702 0174 7FF463AF 		bne	.L239
 253:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 4703              		.loc 10 253 0
 4704 0178 D4F8E838 		ldr	r3, [r4, #2280]
 4705 017c 6BB9     		cbnz	r3, .L258
 254:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 4706              		.loc 10 254 0
 4707 017e 2046     		mov	r0, r4
 4708 0180 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
 4709              	.LVL532:
 255:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 4710              		.loc 10 255 0
 4711 0184 2046     		mov	r0, r4
 4712 0186 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv
 4713              	.LVL533:
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 4714              		.loc 10 256 0
 4715 018a C4F8F868 		str	r6, [r4, #2296]
 257:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 4716              		.loc 10 257 0
 4717 018e C4F8FC68 		str	r6, [r4, #2300]
 258:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 4718              		.loc 10 258 0
 4719 0192 4FF0FF30 		mov	r0, #-1
 4720 0196 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4721              	.LVL534:
 4722              	.L258:
 259:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 4723              		.loc 10 259 0
 4724 019a 0A2B     		cmp	r3, #10
 4725 019c 04D1     		bne	.L259
 260:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 4726              		.loc 10 260 0
 4727 019e 4946     		mov	r1, r9
 4728 01a0 2046     		mov	r0, r4
 4729 01a2 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh
 4730              	.LVL535:
 4731 01a6 4AE7     		b	.L239
 4732              	.L259:
 261:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 4733              		.loc 10 261 0
 4734 01a8 062B     		cmp	r3, #6
 4735 01aa 08D1     		bne	.L260
 262:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 4736              		.loc 10 262 0
 4737 01ac 4946     		mov	r1, r9
 4738 01ae 04F60810 		addw	r0, r4, #2312
 4739 01b2 FFF7FEFF 		bl	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 4740              	.LVL536:
 263:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 4741              		.loc 10 263 0
 4742 01b6 0123     		movs	r3, #1
 4743 01b8 84F80439 		strb	r3, [r4, #2308]
 4744 01bc 3FE7     		b	.L239
 4745              	.L260:
 264:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 4746              		.loc 10 264 0
 4747 01be 0B2B     		cmp	r3, #11
 4748 01c0 02D1     		bne	.L261
 265:./lib/ros_lib/ros/node_handle.h ****               }else{
 4749              		.loc 10 265 0
 4750 01c2 84F8F488 		strb	r8, [r4, #2292]
 4751 01c6 3AE7     		b	.L239
 4752              	.L261:
 267:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 4753              		.loc 10 267 0
 4754 01c8 04EB8303 		add	r3, r4, r3, lsl #2
 4755 01cc D3F8EC06 		ldr	r0, [r3, #1772]
 4756 01d0 0028     		cmp	r0, #0
 4757 01d2 3FF434AF 		beq	.L239
 268:./lib/ros_lib/ros/node_handle.h ****               }
 4758              		.loc 10 268 0
 4759 01d6 0368     		ldr	r3, [r0]
 4760 01d8 4946     		mov	r1, r9
 4761 01da 1B68     		ldr	r3, [r3]
 4762 01dc 9847     		blx	r3
 4763              	.LVL537:
 4764 01de 2EE7     		b	.L239
 4765              	.L240:
 4766              	.LBE268:
 275:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 4767              		.loc 10 275 0
 4768 01e0 94F8F408 		ldrb	r0, [r4, #2292]	@ zero_extendqisi2
 4769 01e4 70B1     		cbz	r0, .L277
 275:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 4770              		.loc 10 275 0 is_stmt 0 discriminator 1
 4771 01e6 40F6C412 		movw	r2, #2500
 4772 01ea D4F8F838 		ldr	r3, [r4, #2296]
 4773 01ee F31A     		subs	r3, r6, r3
 4774 01f0 9342     		cmp	r3, r2
 4775 01f2 04D9     		bls	.L263
 276:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 4776              		.loc 10 276 0 is_stmt 1
 4777 01f4 2046     		mov	r0, r4
 4778 01f6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
 4779              	.LVL538:
 277:./lib/ros_lib/ros/node_handle.h ****         }
 4780              		.loc 10 277 0
 4781 01fa C4F8F868 		str	r6, [r4, #2296]
 4782              	.L263:
 280:./lib/ros_lib/ros/node_handle.h ****       }
 4783              		.loc 10 280 0
 4784 01fe 0020     		movs	r0, #0
 4785 0200 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4786              	.LVL539:
 4787              	.L277:
 281:./lib/ros_lib/ros/node_handle.h **** 
 4788              		.loc 10 281 0
 4789 0204 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4790              	.LVL540:
 4791              	.L279:
 4792              		.align	2
 4793              	.L278:
 4794 0208 00000000 		.word	.LANCHOR1
 4795 020c FF000080 		.word	-2147483393
 4796              		.cfi_endproc
 4797              	.LFE1318:
 4798              		.fnend
 4800              		.global	__aeabi_f2iz
 4801              		.global	__aeabi_dsub
 4802              		.section	.text.startup,"ax",%progbits
 4803              		.align	1
 4804              		.global	main
 4805              		.thumb
 4806              		.thumb_func
 4808              	main:
 4809              		.fnstart
 4810              	.LFB1287:
 145:src/main.cpp  ****   #ifdef DEBUG
 4811              		.loc 12 145 0
 4812              		.cfi_startproc
 4813              		@ args = 0, pretend = 0, frame = 744
 4814              		@ frame_needed = 0, uses_anonymous_args = 0
 4815 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4816              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4817              	.LCFI57:
 4818              		.cfi_def_cfa_offset 36
 4819              		.cfi_offset 4, -36
 4820              		.cfi_offset 5, -32
 4821              		.cfi_offset 6, -28
 4822              		.cfi_offset 7, -24
 4823              		.cfi_offset 8, -20
 4824              		.cfi_offset 9, -16
 4825              		.cfi_offset 10, -12
 4826              		.cfi_offset 11, -8
 4827              		.cfi_offset 14, -4
 4828              	.LBB293:
 4829              	.LBB294:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 4830              		.loc 10 147 0
 4831 0004 2B4C     		ldr	r4, .L317
 4832              	.LBE294:
 4833              	.LBE293:
 145:src/main.cpp  ****   #ifdef DEBUG
 4834              		.loc 12 145 0
 4835              		.pad #780
 4836 0006 ADF5437D 		sub	sp, sp, #780
 4837              	.LCFI58:
 4838              		.cfi_def_cfa_offset 816
 150:src/main.cpp  ****   SysTick_Init();
 4839              		.loc 12 150 0
 4840 000a FFF7FEFF 		bl	RCC_Configuration
 4841              	.LVL541:
 151:src/main.cpp  **** 
 4842              		.loc 12 151 0
 4843 000e FFF7FEFF 		bl	SysTick_Init
 4844              	.LVL542:
 153:src/main.cpp  ****   I2C1_Init();
 4845              		.loc 12 153 0
 4846 0012 0121     		movs	r1, #1
 4847 0014 2848     		ldr	r0, .L317+4
 4848 0016 FFF7FEFF 		bl	GPIO_PinRemapConfig
 4849              	.LVL543:
 154:src/main.cpp  ****   DEBUG_Init();
 4850              		.loc 12 154 0
 4851 001a FFF7FEFF 		bl	I2C1_Init
 4852              	.LVL544:
 155:src/main.cpp  ****   SHUTDOWN_Init();
 4853              		.loc 12 155 0
 4854 001e FFF7FEFF 		bl	DEBUG_Init
 4855              	.LVL545:
 156:src/main.cpp  ****   LED_Init();
 4856              		.loc 12 156 0
 4857 0022 FFF7FEFF 		bl	SHUTDOWN_Init
 4858              	.LVL546:
 157:src/main.cpp  **** 
 4859              		.loc 12 157 0
 4860 0026 FFF7FEFF 		bl	LED_Init
 4861              	.LVL547:
 4862              	.LBB296:
 4863              	.LBB295:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 4864              		.loc 10 147 0
 4865 002a 04F24440 		addw	r0, r4, #1092
 4866 002e FFF7FEFF 		bl	_ZN15ArduinoHardware4initEv
 4867              	.LVL548:
 148:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 4868              		.loc 10 148 0
 4869 0032 0023     		movs	r3, #0
 4870 0034 C4F8203D 		str	r3, [r4, #3360]
 149:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 4871              		.loc 10 149 0
 4872 0038 C4F8243D 		str	r3, [r4, #3364]
 150:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 4873              		.loc 10 150 0
 4874 003c C4F82C3D 		str	r3, [r4, #3372]
 151:./lib/ros_lib/ros/node_handle.h ****       };
 4875              		.loc 10 151 0
 4876 0040 C4F8283D 		str	r3, [r4, #3368]
 4877              	.LVL549:
 4878 0044 04F6B842 		addw	r2, r4, #3256
 4879              	.LVL550:
 4880              	.L283:
 4881              	.LBE295:
 4882              	.LBE296:
 4883              	.LBB297:
 4884              	.LBB298:
 353:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 4885              		.loc 10 353 0
 4886 0048 52F8041F 		ldr	r1, [r2, #4]!
 4887 004c 41B9     		cbnz	r1, .L281
 354:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 4888              		.loc 10 354 0
 4889 004e 1B49     		ldr	r1, .L317+8
 4890 0050 04EB8302 		add	r2, r4, r3, lsl #2
 355:./lib/ros_lib/ros/node_handle.h ****             return true;
 4891              		.loc 10 355 0
 4892 0054 6433     		adds	r3, r3, #100
 4893              	.LVL551:
 354:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 4894              		.loc 10 354 0
 4895 0056 C2F8BC1C 		str	r1, [r2, #3260]
 355:./lib/ros_lib/ros/node_handle.h ****             return true;
 4896              		.loc 10 355 0
 4897 005a C4F8743D 		str	r3, [r4, #3444]
 4898 005e 02E0     		b	.L282
 4899              	.LVL552:
 4900              	.L281:
 352:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 4901              		.loc 10 352 0
 4902 0060 0133     		adds	r3, r3, #1
 4903              	.LVL553:
 4904 0062 192B     		cmp	r3, #25
 4905 0064 F0D1     		bne	.L283
 4906              	.LVL554:
 4907              	.L282:
 4908 0066 1649     		ldr	r1, .L317+12
 4909              	.LBE298:
 4910              	.LBE297:
 4911              	.LBB300:
 4912              	.LBB301:
 338:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 4913              		.loc 10 338 0
 4914 0068 0023     		movs	r3, #0
 4915              	.LBE301:
 4916              	.LBE300:
 4917              	.LBB303:
 4918              	.LBB299:
 352:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 4919              		.loc 10 352 0
 4920 006a 0A46     		mov	r2, r1
 4921              	.LVL555:
 4922              	.L286:
 4923              	.LBE299:
 4924              	.LBE303:
 4925              	.LBB304:
 4926              	.LBB302:
 339:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 4927              		.loc 10 339 0
 4928 006c 52F8040F 		ldr	r0, [r2, #4]!
 4929 0070 60B9     		cbnz	r0, .L284
 340:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 4930              		.loc 10 340 0
 4931 0072 144A     		ldr	r2, .L317+16
 4932 0074 04EB8300 		add	r0, r4, r3, lsl #2
 4933 0078 C0F8582C 		str	r2, [r0, #3160]
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 4934              		.loc 10 341 0
 4935 007c 7D33     		adds	r3, r3, #125
 4936              	.LVL556:
 342:./lib/ros_lib/ros/node_handle.h ****             return true;
 4937              		.loc 10 342 0
 4938 007e A2F51762 		sub	r2, r2, #2416
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 4939              		.loc 10 341 0
 4940 0082 C4F8B83D 		str	r3, [r4, #3512]
 342:./lib/ros_lib/ros/node_handle.h ****             return true;
 4941              		.loc 10 342 0
 4942 0086 C4F8BC2D 		str	r2, [r4, #3516]
 4943 008a 02E0     		b	.L285
 4944              	.LVL557:
 4945              	.L284:
 338:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 4946              		.loc 10 338 0
 4947 008c 0133     		adds	r3, r3, #1
 4948              	.LVL558:
 4949 008e 192B     		cmp	r3, #25
 4950 0090 ECD1     		bne	.L286
 4951              	.LVL559:
 4952              	.L285:
 4953              	.LBE302:
 4954              	.LBE304:
 4955              	.LBB305:
 4956              	.LBB306:
 4957 0092 0023     		movs	r3, #0
 4958              	.LVL560:
 4959              	.L289:
 339:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 4960              		.loc 10 339 0
 4961 0094 51F8042F 		ldr	r2, [r1, #4]!
 4962 0098 C2B9     		cbnz	r2, .L287
 340:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 4963              		.loc 10 340 0
 4964 009a 0B4A     		ldr	r2, .L317+20
 4965 009c 04EB8301 		add	r1, r4, r3, lsl #2
 4966 00a0 C1F8582C 		str	r2, [r1, #3160]
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 4967              		.loc 10 341 0
 4968 00a4 7D33     		adds	r3, r3, #125
 4969              	.LVL561:
 342:./lib/ros_lib/ros/node_handle.h ****             return true;
 4970              		.loc 10 342 0
 4971 00a6 A2F68412 		subw	r2, r2, #2436
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 4972              		.loc 10 341 0
 4973 00aa C4F8CC3D 		str	r3, [r4, #3532]
 342:./lib/ros_lib/ros/node_handle.h ****             return true;
 4974              		.loc 10 342 0
 4975 00ae C4F8D02D 		str	r2, [r4, #3536]
 4976 00b2 0EE0     		b	.L288
 4977              	.L318:
 4978              		.align	2
 4979              	.L317:
 4980 00b4 00000000 		.word	.LANCHOR1
 4981 00b8 00023000 		.word	3146240
 4982 00bc 700D0000 		.word	.LANCHOR1+3440
 4983 00c0 540C0000 		.word	.LANCHOR1+3156
 4984 00c4 B00D0000 		.word	.LANCHOR1+3504
 4985 00c8 C40D0000 		.word	.LANCHOR1+3524
 4986              	.LVL562:
 4987              	.L287:
 338:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 4988              		.loc 10 338 0
 4989 00cc 0133     		adds	r3, r3, #1
 4990              	.LVL563:
 4991 00ce 192B     		cmp	r3, #25
 4992 00d0 E0D1     		bne	.L289
 4993              	.LVL564:
 4994              	.L288:
 4995              	.LBE306:
 4996              	.LBE305:
 173:src/main.cpp  **** 
 4997              		.loc 12 173 0
 4998 00d2 4FF00003 		mov	r3, #0
 4999 00d6 84F83C34 		strb	r3, [r4, #1084]
 5000              	.LVL565:
 204:src/main.cpp  ****   //}
 5001              		.loc 12 204 0
 5002 00da B34B     		ldr	r3, .L319
 214:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 5003              		.loc 12 214 0
 5004 00dc 0427     		movs	r7, #4
 204:src/main.cpp  ****   //}
 5005              		.loc 12 204 0
 5006 00de E360     		str	r3, [r4, #12]	@ float
 208:src/main.cpp  ****   //}
 5007              		.loc 12 208 0
 5008 00e0 B24B     		ldr	r3, .L319+4
 211:src/main.cpp  **** 
 5009              		.loc 12 211 0
 5010 00e2 4FF47A70 		mov	r0, #1000
 208:src/main.cpp  ****   //}
 5011              		.loc 12 208 0
 5012 00e6 2361     		str	r3, [r4, #16]	@ float
 211:src/main.cpp  **** 
 5013              		.loc 12 211 0
 5014 00e8 FFF7FEFF 		bl	delay
 5015              	.LVL566:
 214:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 5016              		.loc 12 214 0
 5017 00ec B04B     		ldr	r3, .L319+8
 5018 00ee B14A     		ldr	r2, .L319+12
 5019 00f0 0121     		movs	r1, #1
 5020 00f2 0097     		str	r7, [sp]
 5021 00f4 26A8     		add	r0, sp, #152
 5022 00f6 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5023              	.LVL567:
 215:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 5024              		.loc 12 215 0
 5025 00fa 4FF40073 		mov	r3, #512
 5026 00fe 2C93     		str	r3, [sp, #176]
 217:src/main.cpp  ****   SL.m_ServoLimitMin = 7925;
 5027              		.loc 12 217 0
 5028 0100 40F29153 		movw	r3, #1425
 218:src/main.cpp  **** 
 5029              		.loc 12 218 0
 5030 0104 41F6F566 		movw	r6, #7925
 216:src/main.cpp  ****   SL.m_ServoLimitMax = 1425;
 5031              		.loc 12 216 0
 5032 0108 AB4D     		ldr	r5, .L319+16
 217:src/main.cpp  ****   SL.m_ServoLimitMin = 7925;
 5033              		.loc 12 217 0
 5034 010a 2A93     		str	r3, [sp, #168]
 220:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 5035              		.loc 12 220 0
 5036 010c 0323     		movs	r3, #3
 5037 010e 0093     		str	r3, [sp]
 5038 0110 AA4A     		ldr	r2, .L319+20
 5039 0112 A74B     		ldr	r3, .L319+8
 5040 0114 0121     		movs	r1, #1
 5041 0116 40A8     		add	r0, sp, #256
 216:src/main.cpp  ****   SL.m_ServoLimitMax = 1425;
 5042              		.loc 12 216 0
 5043 0118 2D95     		str	r5, [sp, #180]
 218:src/main.cpp  **** 
 5044              		.loc 12 218 0
 5045 011a 2B96     		str	r6, [sp, #172]
 220:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 5046              		.loc 12 220 0
 5047 011c FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5048              	.LVL568:
 224:src/main.cpp  **** 
 5049              		.loc 12 224 0
 5050 0120 40F22173 		movw	r3, #1825
 5051 0124 4593     		str	r3, [sp, #276]
 226:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 5052              		.loc 12 226 0
 5053 0126 0123     		movs	r3, #1
 221:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 5054              		.loc 12 221 0
 5055 0128 4FF48078 		mov	r8, #256
 226:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 5056              		.loc 12 226 0
 5057 012c 0093     		str	r3, [sp]
 5058 012e A44A     		ldr	r2, .L319+24
 5059 0130 A44B     		ldr	r3, .L319+28
 5060 0132 0221     		movs	r1, #2
 5061 0134 5AA8     		add	r0, sp, #360
 221:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 5062              		.loc 12 221 0
 5063 0136 CDF81881 		str	r8, [sp, #280]
 222:src/main.cpp  ****   SR.m_ServoLimitMax = 7925;
 5064              		.loc 12 222 0
 5065 013a 4795     		str	r5, [sp, #284]
 223:src/main.cpp  ****   SR.m_ServoLimitMin = 1825;
 5066              		.loc 12 223 0
 5067 013c 4496     		str	r6, [sp, #272]
 226:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 5068              		.loc 12 226 0
 5069 013e FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5070              	.LVL569:
 229:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 5071              		.loc 12 229 0
 5072 0142 A14E     		ldr	r6, .L319+32
 5073 0144 A14A     		ldr	r2, .L319+36
 5074 0146 0123     		movs	r3, #1
 5075 0148 0393     		str	r3, [sp, #12]
 5076 014a 4FF40043 		mov	r3, #32768
 5077 014e 8DE80C00 		stmia	sp, {r2, r3}
 5078 0152 CDF81480 		str	r8, [sp, #20]
 5079 0156 0292     		str	r2, [sp, #8]
 5080 0158 4FF48043 		mov	r3, #16384
 5081 015c 4FF40051 		mov	r1, #8192
 5082 0160 5AA8     		add	r0, sp, #360
 5083 0162 0696     		str	r6, [sp, #24]
 5084 0164 0496     		str	r6, [sp, #16]
 5085 0166 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5086              	.LVL570:
 230:src/main.cpp  ****   FR.setRegulator(FF,KP,KI,KD,integralSaturation);
 5087              		.loc 12 230 0
 5088 016a 4FF01803 		mov	r3, #24	@ movhi
 231:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 5089              		.loc 12 231 0
 5090 016e DFF88C92 		ldr	r9, .L319+84
 5091 0172 DFF88CA2 		ldr	r10, .L319+88
 232:src/main.cpp  **** 
 5092              		.loc 12 232 0
 5093 0176 DFF88C82 		ldr	r8, .L319+92
 230:src/main.cpp  ****   FR.setRegulator(FF,KP,KI,KD,integralSaturation);
 5094              		.loc 12 230 0
 5095 017a ADF8B031 		strh	r3, [sp, #432]	@ movhi
 231:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 5096              		.loc 12 231 0
 5097 017e 944A     		ldr	r2, .L319+40
 5098 0180 944B     		ldr	r3, .L319+44
 5099 0182 9549     		ldr	r1, .L319+48
 5100 0184 5AA8     		add	r0, sp, #360
 5101 0186 CDF80490 		str	r9, [sp, #4]	@ float
 5102 018a CDF800A0 		str	r10, [sp]	@ float
 5103 018e FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5104              	.LVL571:
 234:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 5105              		.loc 12 234 0
 5106 0192 924B     		ldr	r3, .L319+52
 5107 0194 924A     		ldr	r2, .L319+56
 5108 0196 0221     		movs	r1, #2
 5109 0198 0097     		str	r7, [sp]
 5110 019a 74A8     		add	r0, sp, #464
 232:src/main.cpp  **** 
 5111              		.loc 12 232 0
 5112 019c CDF8CC81 		str	r8, [sp, #460]	@ float
 234:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 5113              		.loc 12 234 0
 5114 01a0 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5115              	.LVL572:
 237:src/main.cpp  ****   FL.encoderAddr = (0x10);
 5116              		.loc 12 237 0
 5117 01a4 0223     		movs	r3, #2
 5118 01a6 4FF0100B 		mov	fp, #16
 5119 01aa 0593     		str	r3, [sp, #20]
 5120 01ac 4FF48063 		mov	r3, #1024
 5121 01b0 2A46     		mov	r2, r5
 5122 01b2 0695     		str	r5, [sp, #24]
 5123 01b4 0495     		str	r5, [sp, #16]
 5124 01b6 0393     		str	r3, [sp, #12]
 5125 01b8 8DE84008 		stmia	sp, {r6, fp}
 5126 01bc 2023     		movs	r3, #32
 5127 01be 3946     		mov	r1, r7
 5128 01c0 74A8     		add	r0, sp, #464
 5129 01c2 0296     		str	r6, [sp, #8]
 5130 01c4 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5131              	.LVL573:
 239:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 5132              		.loc 12 239 0
 5133 01c8 824B     		ldr	r3, .L319+44
 5134 01ca 814A     		ldr	r2, .L319+40
 5135 01cc 8249     		ldr	r1, .L319+48
 5136 01ce 74A8     		add	r0, sp, #464
 5137 01d0 CDF80490 		str	r9, [sp, #4]	@ float
 5138 01d4 CDF800A0 		str	r10, [sp]	@ float
 238:src/main.cpp  ****   FL.setRegulator(FF,KP,KI,KD,integralSaturation);
 5139              		.loc 12 238 0
 5140 01d8 ADF818B2 		strh	fp, [sp, #536]	@ movhi
 239:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 5141              		.loc 12 239 0
 5142 01dc FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5143              	.LVL574:
 242:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 5144              		.loc 12 242 0
 5145 01e0 4FF08043 		mov	r3, #1073741824
 5146 01e4 7F4A     		ldr	r2, .L319+60
 5147 01e6 0221     		movs	r1, #2
 5148 01e8 0097     		str	r7, [sp]
 5149 01ea 8EA8     		add	r0, sp, #568
 240:src/main.cpp  **** 
 5150              		.loc 12 240 0
 5151 01ec CDF83482 		str	r8, [sp, #564]	@ float
 242:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 5152              		.loc 12 242 0
 5153 01f0 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5154              	.LVL575:
 245:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 5155              		.loc 12 245 0
 5156 01f4 4FF48043 		mov	r3, #16384
 5157 01f8 4FF0080B 		mov	fp, #8
 5158 01fc 0393     		str	r3, [sp, #12]
 5159 01fe 4FF40053 		mov	r3, #8192
 5160 0202 2A46     		mov	r2, r5
 5161 0204 0495     		str	r5, [sp, #16]
 5162 0206 0295     		str	r5, [sp, #8]
 5163 0208 0193     		str	r3, [sp, #4]
 5164 020a 0095     		str	r5, [sp]
 5165 020c 4FF48053 		mov	r3, #4096
 5166 0210 4FF40061 		mov	r1, #2048
 5167 0214 8EA8     		add	r0, sp, #568
 5168 0216 0696     		str	r6, [sp, #24]
 5169 0218 CDF814B0 		str	fp, [sp, #20]
 5170 021c FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5171              	.LVL576:
 246:src/main.cpp  ****   RL.setRegulator(FF,KP,KI,KD,integralSaturation);
 5172              		.loc 12 246 0
 5173 0220 1423     		movs	r3, #20
 5174 0222 ADF88032 		strh	r3, [sp, #640]	@ movhi
 247:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 5175              		.loc 12 247 0
 5176 0226 6A4A     		ldr	r2, .L319+40
 5177 0228 6A4B     		ldr	r3, .L319+44
 5178 022a 6B49     		ldr	r1, .L319+48
 5179 022c 8EA8     		add	r0, sp, #568
 5180 022e CDF80490 		str	r9, [sp, #4]	@ float
 5181 0232 CDF800A0 		str	r10, [sp]	@ float
 5182 0236 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5183              	.LVL577:
 250:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 5184              		.loc 12 250 0
 5185 023a 624B     		ldr	r3, .L319+28
 5186 023c 6A4A     		ldr	r2, .L319+64
 5187 023e 0221     		movs	r1, #2
 5188 0240 0097     		str	r7, [sp]
 5189 0242 A8A8     		add	r0, sp, #672
 248:src/main.cpp  **** 
 5190              		.loc 12 248 0
 5191 0244 CDF89C82 		str	r8, [sp, #668]	@ float
 250:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 5192              		.loc 12 250 0
 5193 0248 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5194              	.LVL578:
 253:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 5195              		.loc 12 253 0
 5196 024c 4FF40063 		mov	r3, #2048
 5197 0250 0593     		str	r3, [sp, #20]
 5198 0252 4FF40043 		mov	r3, #32768
 5199 0256 2A46     		mov	r2, r5
 5200 0258 0495     		str	r5, [sp, #16]
 5201 025a 0193     		str	r3, [sp, #4]
 5202 025c 4FF40041 		mov	r1, #32768
 5203 0260 4FF48053 		mov	r3, #4096
 5204 0264 A8A8     		add	r0, sp, #672
 5205 0266 0696     		str	r6, [sp, #24]
 5206 0268 CDF80CB0 		str	fp, [sp, #12]
 5207 026c 0296     		str	r6, [sp, #8]
 5208 026e 0096     		str	r6, [sp]
 5209 0270 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5210              	.LVL579:
 254:src/main.cpp  ****   RR.setRegulator(FF,KP,KI,KD,integralSaturation);
 5211              		.loc 12 254 0
 5212 0274 1C23     		movs	r3, #28
 255:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 5213              		.loc 12 255 0
 5214 0276 564A     		ldr	r2, .L319+40
 5215 0278 5749     		ldr	r1, .L319+48
 254:src/main.cpp  ****   RR.setRegulator(FF,KP,KI,KD,integralSaturation);
 5216              		.loc 12 254 0
 5217 027a ADF8E832 		strh	r3, [sp, #744]	@ movhi
 255:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 5218              		.loc 12 255 0
 5219 027e A8A8     		add	r0, sp, #672
 5220 0280 544B     		ldr	r3, .L319+44
 5221 0282 CDF80490 		str	r9, [sp, #4]	@ float
 5222 0286 CDF800A0 		str	r10, [sp]	@ float
 5223 028a FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5224              	.LVL580:
 259:src/main.cpp  ****   if(!servo_left->motorInit()){
 5225              		.loc 12 259 0
 5226 028e 26A8     		add	r0, sp, #152
 256:src/main.cpp  **** 
 5227              		.loc 12 256 0
 5228 0290 CDF80483 		str	r8, [sp, #772]	@ float
 259:src/main.cpp  ****   if(!servo_left->motorInit()){
 5229              		.loc 12 259 0
 5230 0294 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5231              	.LVL581:
 260:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 5232              		.loc 12 260 0
 5233 0298 0368     		ldr	r3, [r0]
 259:src/main.cpp  ****   if(!servo_left->motorInit()){
 5234              		.loc 12 259 0
 5235 029a 6061     		str	r0, [r4, #20]
 260:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 5236              		.loc 12 260 0
 5237 029c DB68     		ldr	r3, [r3, #12]
 5238 029e 9847     		blx	r3
 5239              	.LVL582:
 265:src/main.cpp  ****   if(!servo_right->motorInit()){
 5240              		.loc 12 265 0
 5241 02a0 40A8     		add	r0, sp, #256
 5242 02a2 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5243              	.LVL583:
 266:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 5244              		.loc 12 266 0
 5245 02a6 0368     		ldr	r3, [r0]
 265:src/main.cpp  ****   if(!servo_right->motorInit()){
 5246              		.loc 12 265 0
 5247 02a8 A061     		str	r0, [r4, #24]
 266:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 5248              		.loc 12 266 0
 5249 02aa DB68     		ldr	r3, [r3, #12]
 5250 02ac 9847     		blx	r3
 5251              	.LVL584:
 271:src/main.cpp  ****   if(!front_left->motorInit()){
 5252              		.loc 12 271 0
 5253 02ae 74A8     		add	r0, sp, #464
 5254 02b0 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5255              	.LVL585:
 272:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 5256              		.loc 12 272 0
 5257 02b4 0368     		ldr	r3, [r0]
 271:src/main.cpp  ****   if(!front_left->motorInit()){
 5258              		.loc 12 271 0
 5259 02b6 C4F8D80D 		str	r0, [r4, #3544]
 272:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 5260              		.loc 12 272 0
 5261 02ba DB68     		ldr	r3, [r3, #12]
 5262 02bc 9847     		blx	r3
 5263              	.LVL586:
 277:src/main.cpp  ****   if(!front_right->motorInit()){
 5264              		.loc 12 277 0
 5265 02be 5AA8     		add	r0, sp, #360
 5266 02c0 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5267              	.LVL587:
 278:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 5268              		.loc 12 278 0
 5269 02c4 0368     		ldr	r3, [r0]
 277:src/main.cpp  ****   if(!front_right->motorInit()){
 5270              		.loc 12 277 0
 5271 02c6 C4F8DC0D 		str	r0, [r4, #3548]
 278:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 5272              		.loc 12 278 0
 5273 02ca DB68     		ldr	r3, [r3, #12]
 5274 02cc 9847     		blx	r3
 5275              	.LVL588:
 283:src/main.cpp  ****   if(!rear_left->motorInit()){
 5276              		.loc 12 283 0
 5277 02ce 8EA8     		add	r0, sp, #568
 5278 02d0 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5279              	.LVL589:
 284:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 5280              		.loc 12 284 0
 5281 02d4 0368     		ldr	r3, [r0]
 283:src/main.cpp  ****   if(!rear_left->motorInit()){
 5282              		.loc 12 283 0
 5283 02d6 C4F8E00D 		str	r0, [r4, #3552]
 284:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 5284              		.loc 12 284 0
 5285 02da DB68     		ldr	r3, [r3, #12]
 5286 02dc 9847     		blx	r3
 5287              	.LVL590:
 289:src/main.cpp  ****   if(!rear_right->motorInit()){
 5288              		.loc 12 289 0
 5289 02de A8A8     		add	r0, sp, #672
 5290 02e0 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5291              	.LVL591:
 290:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 5292              		.loc 12 290 0
 5293 02e4 0368     		ldr	r3, [r0]
 289:src/main.cpp  ****   if(!rear_right->motorInit()){
 5294              		.loc 12 289 0
 5295 02e6 C4F8E40D 		str	r0, [r4, #3556]
 290:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 5296              		.loc 12 290 0
 5297 02ea DB68     		ldr	r3, [r3, #12]
 5298 02ec 9847     		blx	r3
 5299              	.LVL592:
 295:src/main.cpp  ****   odom_msg.layout.dim_length = 1;
 5300              		.loc 12 295 0
 5301 02ee 0C20     		movs	r0, #12
 5302 02f0 FFF7FEFF 		bl	_Znaj
 5303              	.LVL593:
 296:src/main.cpp  ****   odom_msg.layout.dim = &odomDim;
 5304              		.loc 12 296 0
 5305 02f4 4FF00103 		mov	r3, #1
 297:src/main.cpp  ****   odom_msg.layout.dim[0].size = 3;
 5306              		.loc 12 297 0
 5307 02f8 3C4D     		ldr	r5, .L319+68
 295:src/main.cpp  ****   odom_msg.layout.dim_length = 1;
 5308              		.loc 12 295 0
 5309 02fa C4F8140E 		str	r0, [r4, #3604]
 296:src/main.cpp  ****   odom_msg.layout.dim = &odomDim;
 5310              		.loc 12 296 0
 5311 02fe 84F8F03D 		strb	r3, [r4, #3568]
 302:src/main.cpp  ****   debug_msg.layout.dim_length = 1;
 5312              		.loc 12 302 0
 5313 0302 1820     		movs	r0, #24
 298:src/main.cpp  ****   odom_msg.layout.dim[0].stride = 3;
 5314              		.loc 12 298 0
 5315 0304 0323     		movs	r3, #3
 297:src/main.cpp  ****   odom_msg.layout.dim[0].size = 3;
 5316              		.loc 12 297 0
 5317 0306 C4F8045E 		str	r5, [r4, #3588]
 298:src/main.cpp  ****   odom_msg.layout.dim[0].stride = 3;
 5318              		.loc 12 298 0
 5319 030a C4F8203E 		str	r3, [r4, #3616]
 299:src/main.cpp  ****   odom_msg.data_length = 3;
 5320              		.loc 12 299 0
 5321 030e C4F8243E 		str	r3, [r4, #3620]
 300:src/main.cpp  **** 
 5322              		.loc 12 300 0
 5323 0312 84F80C3E 		strb	r3, [r4, #3596]
 302:src/main.cpp  ****   debug_msg.layout.dim_length = 1;
 5324              		.loc 12 302 0
 5325 0316 FFF7FEFF 		bl	_Znaj
 5326              	.LVL594:
 303:src/main.cpp  ****   debug_msg.layout.dim = &debugDim;
 5327              		.loc 12 303 0
 5328 031a 4FF00103 		mov	r3, #1
 5329 031e 84F8303E 		strb	r3, [r4, #3632]
 304:src/main.cpp  ****   debug_msg.layout.dim[0].size = 6;
 5330              		.loc 12 304 0
 5331 0322 05F14003 		add	r3, r5, #64
 302:src/main.cpp  ****   debug_msg.layout.dim_length = 1;
 5332              		.loc 12 302 0
 5333 0326 C4F8540E 		str	r0, [r4, #3668]
 304:src/main.cpp  ****   debug_msg.layout.dim[0].size = 6;
 5334              		.loc 12 304 0
 5335 032a C4F8443E 		str	r3, [r4, #3652]
 311:src/main.cpp  ****   servo_right->setReference(135);
 5336              		.loc 12 311 0
 5337 032e 6069     		ldr	r0, [r4, #20]
 305:src/main.cpp  ****   debug_msg.layout.dim[0].stride = 6;
 5338              		.loc 12 305 0
 5339 0330 0623     		movs	r3, #6
 307:src/main.cpp  ****   
 5340              		.loc 12 307 0
 5341 0332 84F84C3E 		strb	r3, [r4, #3660]
 305:src/main.cpp  ****   debug_msg.layout.dim[0].stride = 6;
 5342              		.loc 12 305 0
 5343 0336 C4F8603E 		str	r3, [r4, #3680]
 306:src/main.cpp  ****   debug_msg.data_length = 6;
 5344              		.loc 12 306 0
 5345 033a C4F8643E 		str	r3, [r4, #3684]
 311:src/main.cpp  ****   servo_right->setReference(135);
 5346              		.loc 12 311 0
 5347 033e 0368     		ldr	r3, [r0]
 5348 0340 2B49     		ldr	r1, .L319+72
 5349 0342 5B69     		ldr	r3, [r3, #20]
 5350 0344 9847     		blx	r3
 5351              	.LVL595:
 312:src/main.cpp  ****   front_right->setReference(0);
 5352              		.loc 12 312 0
 5353 0346 A069     		ldr	r0, [r4, #24]
 5354 0348 2949     		ldr	r1, .L319+72
 5355 034a 0368     		ldr	r3, [r0]
 5356 034c A5F61865 		subw	r5, r5, #3608
 5357 0350 5B69     		ldr	r3, [r3, #20]
 5358 0352 9847     		blx	r3
 5359              	.LVL596:
 313:src/main.cpp  ****   front_left->setReference(0);
 5360              		.loc 12 313 0
 5361 0354 D4F8DC0D 		ldr	r0, [r4, #3548]
 5362 0358 0021     		movs	r1, #0
 5363 035a 0368     		ldr	r3, [r0]
 5364 035c 5B69     		ldr	r3, [r3, #20]
 5365 035e 9847     		blx	r3
 5366              	.LVL597:
 314:src/main.cpp  ****   rear_right->setReference(0);
 5367              		.loc 12 314 0
 5368 0360 D4F8D80D 		ldr	r0, [r4, #3544]
 5369 0364 0021     		movs	r1, #0
 5370 0366 0368     		ldr	r3, [r0]
 5371 0368 5B69     		ldr	r3, [r3, #20]
 5372 036a 9847     		blx	r3
 5373              	.LVL598:
 315:src/main.cpp  ****   rear_left->setReference(0);
 5374              		.loc 12 315 0
 5375 036c D4F8E40D 		ldr	r0, [r4, #3556]
 5376 0370 0021     		movs	r1, #0
 5377 0372 0368     		ldr	r3, [r0]
 5378 0374 5B69     		ldr	r3, [r3, #20]
 5379 0376 9847     		blx	r3
 5380              	.LVL599:
 316:src/main.cpp  **** 
 5381              		.loc 12 316 0
 5382 0378 D4F8E00D 		ldr	r0, [r4, #3552]
 5383 037c 0021     		movs	r1, #0
 5384 037e 0368     		ldr	r3, [r0]
 318:src/main.cpp  ****   bool connected = false;
 5385              		.loc 12 318 0
 5386 0380 0024     		movs	r4, #0
 316:src/main.cpp  **** 
 5387              		.loc 12 316 0
 5388 0382 5B69     		ldr	r3, [r3, #20]
 5389 0384 9847     		blx	r3
 5390              	.LVL600:
 5391              	.L293:
 330:src/main.cpp  ****     if(cnt < 50)
 5392              		.loc 12 330 0
 5393 0386 FFF7FEFF 		bl	millis
 5394              	.LVL601:
 331:src/main.cpp  ****       servo_left->update(dt_s, connected, true);
 5395              		.loc 12 331 0
 5396 038a 312C     		cmp	r4, #49
 330:src/main.cpp  ****     if(cnt < 50)
 5397              		.loc 12 330 0
 5398 038c 0746     		mov	r7, r0
 5399              	.LVL602:
 332:src/main.cpp  ****     else
 5400              		.loc 12 332 0
 5401 038e D4BF     		ite	le
 5402 0390 6869     		ldrle	r0, [r5, #20]
 5403              	.LVL603:
 334:src/main.cpp  ****     while( millis() - start_time < dt);
 5404              		.loc 12 334 0
 5405 0392 A869     		ldrgt	r0, [r5, #24]
 5406 0394 0022     		movs	r2, #0
 5407 0396 0368     		ldr	r3, [r0]
 5408 0398 1649     		ldr	r1, .L319+76
 5409 039a D3F81C80 		ldr	r8, [r3, #28]
 5410 039e 0123     		movs	r3, #1
 5411 03a0 154E     		ldr	r6, .L319+80
 5412 03a2 C047     		blx	r8
 5413              	.LVL604:
 5414 03a4 30E0     		b	.L320
 5415              	.L321:
 5416 03a6 00BF     		.align	2
 5417              	.L319:
 5418 03a8 7B142E3E 		.word	1043207291
 5419 03ac EC51383D 		.word	1027101164
 5420 03b0 00080040 		.word	1073743872
 5421 03b4 17020000 		.word	.LC21
 5422 03b8 000C0140 		.word	1073810432
 5423 03bc 22020000 		.word	.LC22
 5424 03c0 2E020000 		.word	.LC23
 5425 03c4 002C0140 		.word	1073818624
 5426 03c8 00080140 		.word	1073809408
 5427 03cc 00100140 		.word	1073811456
 5428 03d0 0080BB45 		.word	1169915904
 5429 03d4 00007A45 		.word	1165623296
 5430 03d8 0000C844 		.word	1153957888
 5431 03dc 00040040 		.word	1073742848
 5432 03e0 3A020000 		.word	.LC24
 5433 03e4 45020000 		.word	.LC25
 5434 03e8 4F020000 		.word	.LC26
 5435 03ec 180E0000 		.word	.LANCHOR1+3608
 5436 03f0 00000743 		.word	1124532224
 5437 03f4 0BD7A33C 		.word	1017370379
 5438 03f8 00000000 		.word	.LANCHOR1
 5439 03fc 00002041 		.word	1092616192
 5440 0400 00002042 		.word	1109393408
 5441 0404 0AD7233D 		.word	1025758986
 5442              	.L320:
 5443              	.L291:
 335:src/main.cpp  ****     cnt++;
 5444              		.loc 12 335 0
 5445 0408 FFF7FEFF 		bl	millis
 5446              	.LVL605:
 5447 040c C01B     		subs	r0, r0, r7
 5448 040e 1328     		cmp	r0, #19
 5449 0410 FAD9     		bls	.L291
 336:src/main.cpp  ****   }
 5450              		.loc 12 336 0
 5451 0412 0134     		adds	r4, r4, #1
 5452              	.LVL606:
 329:src/main.cpp  ****     start_time = millis();
 5453              		.loc 12 329 0
 5454 0414 642C     		cmp	r4, #100
 5455 0416 B6D1     		bne	.L293
 339:src/main.cpp  **** 
 5456              		.loc 12 339 0
 5457 0418 FF20     		movs	r0, #255
 5458 041a FFF7FEFF 		bl	led_set
 5459              	.LVL607:
 344:src/main.cpp  **** 
 5460              		.loc 12 344 0
 5461 041e 4FF07C51 		mov	r1, #1056964608
 5462 0422 F068     		ldr	r0, [r6, #12]	@ float
 5463 0424 FFF7FEFF 		bl	__aeabi_fmul
 5464              	.LVL608:
 5465 0428 FFF7FEFF 		bl	__aeabi_f2d
 5466              	.LVL609:
 5467 042c 0246     		mov	r2, r0
 5468 042e 0B46     		mov	r3, r1
 5469 0430 FFF7FEFF 		bl	__aeabi_dmul
 5470              	.LVL610:
 5471 0434 0246     		mov	r2, r0
 5472 0436 0B46     		mov	r3, r1
 5473 0438 FFF7FEFF 		bl	__aeabi_dadd
 5474              	.LVL611:
 5475 043c FFF7FEFF 		bl	sqrt
 5476              	.LVL612:
 5477 0440 FFF7FEFF 		bl	__aeabi_d2f
 5478              	.LVL613:
 347:src/main.cpp  ****   uint32_t elapsed;
 5479              		.loc 12 347 0
 5480 0444 2A4B     		ldr	r3, .L322
 5481 0446 1AAC     		add	r4, sp, #104
 344:src/main.cpp  **** 
 5482              		.loc 12 344 0
 5483 0448 1490     		str	r0, [sp, #80]	@ float
 5484              	.LVL614:
 5485              	.LBB307:
 5486              	.LBB308:
 5487              	.LBB309:
 286:./lib/ros_lib/ros/node_handle.h ****       };
 5488              		.loc 10 286 0
 5489 044a DFF8ACB0 		ldr	fp, .L322+8
 5490              	.LBE309:
 5491              	.LBE308:
 5492              	.LBE307:
 347:src/main.cpp  ****   uint32_t elapsed;
 5493              		.loc 12 347 0
 5494 044e 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 5495              	.LVL615:
 5496 0450 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 349:src/main.cpp  **** 
 5497              		.loc 12 349 0
 5498 0454 0123     		movs	r3, #1
 5499 0456 3370     		strb	r3, [r6]
 341:src/main.cpp  **** 
 5500              		.loc 12 341 0
 5501 0458 0024     		movs	r4, #0
 5502              	.LVL616:
 5503              	.L302:
 5504              	.LBB315:
 353:src/main.cpp  **** 
 5505              		.loc 12 353 0
 5506 045a FFF7FEFF 		bl	millis
 5507              	.LVL617:
 359:src/main.cpp  ****       debug_toggle();
 5508              		.loc 12 359 0
 5509 045e 631C     		adds	r3, r4, #1
 5510 0460 3222     		movs	r2, #50
 5511 0462 1593     		str	r3, [sp, #84]
 5512 0464 94FBF2F3 		sdiv	r3, r4, r2
 5513 0468 02FB1344 		mls	r4, r2, r3, r4
 5514              	.LVL618:
 353:src/main.cpp  **** 
 5515              		.loc 12 353 0
 5516 046c 0990     		str	r0, [sp, #36]
 5517              	.LVL619:
 359:src/main.cpp  ****       debug_toggle();
 5518              		.loc 12 359 0
 5519 046e 0CB9     		cbnz	r4, .L294
 360:src/main.cpp  ****     connected = nh.connected();
 5520              		.loc 12 360 0
 5521 0470 FFF7FEFF 		bl	debug_toggle
 5522              	.LVL620:
 5523              	.L294:
 364:src/main.cpp  ****     float sr = servo_right->update(dt_s, connected, true);
 5524              		.loc 12 364 0
 5525 0474 DBF81400 		ldr	r0, [fp, #20]
 5526              	.LBB311:
 5527              	.LBB310:
 286:./lib/ros_lib/ros/node_handle.h ****       };
 5528              		.loc 10 286 0
 5529 0478 9BF8345D 		ldrb	r5, [fp, #3380]	@ zero_extendqisi2
 5530              	.LVL621:
 5531              	.LBE310:
 5532              	.LBE311:
 364:src/main.cpp  ****     float sr = servo_right->update(dt_s, connected, true);
 5533              		.loc 12 364 0
 5534 047c 0368     		ldr	r3, [r0]
 5535 047e 2A46     		mov	r2, r5
 5536 0480 DC69     		ldr	r4, [r3, #28]
 5537 0482 1C49     		ldr	r1, .L322+4
 5538 0484 0123     		movs	r3, #1
 5539 0486 A047     		blx	r4
 5540              	.LVL622:
 5541 0488 8046     		mov	r8, r0
 5542              	.LVL623:
 365:src/main.cpp  **** 
 5543              		.loc 12 365 0
 5544 048a DBF81800 		ldr	r0, [fp, #24]
 5545              	.LVL624:
 5546 048e 2A46     		mov	r2, r5
 5547 0490 0368     		ldr	r3, [r0]
 5548 0492 1849     		ldr	r1, .L322+4
 5549 0494 DC69     		ldr	r4, [r3, #28]
 5550 0496 0123     		movs	r3, #1
 5551 0498 A047     		blx	r4
 5552              	.LVL625:
 367:src/main.cpp  ****     debug_msg.data[1] = (float)sr;
 5553              		.loc 12 367 0
 5554 049a DBF8543E 		ldr	r3, [fp, #3668]
 365:src/main.cpp  **** 
 5555              		.loc 12 365 0
 5556 049e 0646     		mov	r6, r0
 5557              	.LVL626:
 367:src/main.cpp  ****     debug_msg.data[1] = (float)sr;
 5558              		.loc 12 367 0
 5559 04a0 C3F80080 		str	r8, [r3]	@ float
 368:src/main.cpp  **** 
 5560              		.loc 12 368 0
 5561 04a4 5860     		str	r0, [r3, #4]	@ float
 5562              	.LVL627:
 372:src/main.cpp  ****       waitForServos = false;
 5563              		.loc 12 372 0
 5564 04a6 9BF80830 		ldrb	r3, [fp, #8]	@ zero_extendqisi2
 5565 04aa 134C     		ldr	r4, .L322+8
 5566 04ac 33BB     		cbnz	r3, .L295
 5567              	.LVL628:
 5568              	.L298:
 5569 04ae 6368     		ldr	r3, [r4, #4]
 5570 04b0 099A     		ldr	r2, [sp, #36]
 5571 04b2 03F5FA73 		add	r3, r3, #500
 5572 04b6 9A42     		cmp	r2, r3
 5573 04b8 3ED3     		bcc	.L296
 5574              	.LVL629:
 381:src/main.cpp  ****       front_left->setReference(0);
 5575              		.loc 12 381 0
 5576 04ba DBF8DC0D 		ldr	r0, [fp, #3548]
 5577 04be 0021     		movs	r1, #0
 5578 04c0 0368     		ldr	r3, [r0]
 380:src/main.cpp  ****       front_right->setReference(0);
 5579              		.loc 12 380 0
 5580 04c2 0027     		movs	r7, #0
 381:src/main.cpp  ****       front_left->setReference(0);
 5581              		.loc 12 381 0
 5582 04c4 5B69     		ldr	r3, [r3, #20]
 5583 04c6 9847     		blx	r3
 5584              	.LVL630:
 382:src/main.cpp  ****       rear_left->setReference(0);
 5585              		.loc 12 382 0
 5586 04c8 DBF8D80D 		ldr	r0, [fp, #3544]
 5587 04cc 0021     		movs	r1, #0
 5588 04ce 0368     		ldr	r3, [r0]
 5589 04d0 5B69     		ldr	r3, [r3, #20]
 5590 04d2 9847     		blx	r3
 5591              	.LVL631:
 383:src/main.cpp  ****       rear_right->setReference(0);
 5592              		.loc 12 383 0
 5593 04d4 DBF8E00D 		ldr	r0, [fp, #3552]
 5594 04d8 0021     		movs	r1, #0
 5595 04da 0368     		ldr	r3, [r0]
 5596 04dc 5B69     		ldr	r3, [r3, #20]
 5597 04de 9847     		blx	r3
 5598              	.LVL632:
 384:src/main.cpp  ****     }
 5599              		.loc 12 384 0
 5600 04e0 DBF8E40D 		ldr	r0, [fp, #3556]
 5601 04e4 0021     		movs	r1, #0
 5602 04e6 0368     		ldr	r3, [r0]
 5603 04e8 5B69     		ldr	r3, [r3, #20]
 5604 04ea 9847     		blx	r3
 5605              	.LVL633:
 5606 04ec 42E0     		b	.L304
 5607              	.L323:
 5608 04ee 00BF     		.align	2
 5609              	.L322:
 5610 04f0 1C000000 		.word	.LANCHOR0+28
 5611 04f4 0BD7A33C 		.word	1017370379
 5612 04f8 00000000 		.word	.LANCHOR1
 5613              	.LVL634:
 5614              	.L295:
 372:src/main.cpp  ****       waitForServos = false;
 5615              		.loc 12 372 0 discriminator 1
 5616 04fc DBF81800 		ldr	r0, [fp, #24]
 5617              	.LVL635:
 5618 0500 0368     		ldr	r3, [r0]
 5619 0502 9B69     		ldr	r3, [r3, #24]
 5620 0504 9847     		blx	r3
 5621              	.LVL636:
 5622 0506 8146     		mov	r9, r0
 5623 0508 3046     		mov	r0, r6
 5624 050a FFF7FEFF 		bl	__aeabi_f2iz
 5625              	.LVL637:
 5626 050e 0746     		mov	r7, r0
 5627 0510 4846     		mov	r0, r9
 5628 0512 FFF7FEFF 		bl	__aeabi_f2iz
 5629              	.LVL638:
 5630 0516 8742     		cmp	r7, r0
 5631 0518 C9D1     		bne	.L298
 372:src/main.cpp  ****       waitForServos = false;
 5632              		.loc 12 372 0 is_stmt 0 discriminator 4
 5633 051a DBF81400 		ldr	r0, [fp, #20]
 5634 051e 0368     		ldr	r3, [r0]
 5635 0520 9B69     		ldr	r3, [r3, #24]
 5636 0522 9847     		blx	r3
 5637              	.LVL639:
 5638 0524 8146     		mov	r9, r0
 5639 0526 4046     		mov	r0, r8
 5640 0528 FFF7FEFF 		bl	__aeabi_f2iz
 5641              	.LVL640:
 5642 052c 0746     		mov	r7, r0
 5643 052e 4846     		mov	r0, r9
 5644 0530 FFF7FEFF 		bl	__aeabi_f2iz
 5645              	.LVL641:
 5646 0534 8742     		cmp	r7, r0
 5647 0536 BAD1     		bne	.L298
 5648              	.L296:
 374:src/main.cpp  ****       front_left->setReference(motorCmd[1]);
 5649              		.loc 12 374 0 is_stmt 1
 5650 0538 D4F8DC0D 		ldr	r0, [r4, #3548]
 373:src/main.cpp  ****       front_right->setReference(motorCmd[0]);
 5651              		.loc 12 373 0
 5652 053c 0023     		movs	r3, #0
 5653 053e 2372     		strb	r3, [r4, #8]
 374:src/main.cpp  ****       front_left->setReference(motorCmd[1]);
 5654              		.loc 12 374 0
 5655 0540 0368     		ldr	r3, [r0]
 5656 0542 E169     		ldr	r1, [r4, #28]	@ float
 5657 0544 5B69     		ldr	r3, [r3, #20]
 5658 0546 9847     		blx	r3
 5659              	.LVL642:
 375:src/main.cpp  ****       rear_left->setReference(motorCmd[2]);
 5660              		.loc 12 375 0
 5661 0548 D4F8D80D 		ldr	r0, [r4, #3544]
 5662 054c 216A     		ldr	r1, [r4, #32]	@ float
 5663 054e 0368     		ldr	r3, [r0]
 370:src/main.cpp  **** 
 5664              		.loc 12 370 0
 5665 0550 0127     		movs	r7, #1
 375:src/main.cpp  ****       rear_left->setReference(motorCmd[2]);
 5666              		.loc 12 375 0
 5667 0552 5B69     		ldr	r3, [r3, #20]
 5668 0554 9847     		blx	r3
 5669              	.LVL643:
 376:src/main.cpp  ****       rear_right->setReference(motorCmd[3]);
 5670              		.loc 12 376 0
 5671 0556 D4F8E00D 		ldr	r0, [r4, #3552]
 5672 055a 616A     		ldr	r1, [r4, #36]	@ float
 5673 055c 0368     		ldr	r3, [r0]
 5674 055e 5B69     		ldr	r3, [r3, #20]
 5675 0560 9847     		blx	r3
 5676              	.LVL644:
 377:src/main.cpp  ****       delay(2);
 5677              		.loc 12 377 0
 5678 0562 D4F8E40D 		ldr	r0, [r4, #3556]
 5679 0566 A16A     		ldr	r1, [r4, #40]	@ float
 5680 0568 0368     		ldr	r3, [r0]
 5681 056a 5B69     		ldr	r3, [r3, #20]
 5682 056c 9847     		blx	r3
 5683              	.LVL645:
 378:src/main.cpp  ****     }else{
 5684              		.loc 12 378 0
 5685 056e 0220     		movs	r0, #2
 5686 0570 FFF7FEFF 		bl	delay
 5687              	.LVL646:
 5688              	.L304:
 387:src/main.cpp  ****     //udelay(500);
 5689              		.loc 12 387 0
 5690 0574 D4F8DC0D 		ldr	r0, [r4, #3548]
 5691 0578 2A46     		mov	r2, r5
 5692 057a 0368     		ldr	r3, [r0]
 5693 057c B849     		ldr	r1, .L324+16
 5694 057e D3F81C90 		ldr	r9, [r3, #28]
 5695 0582 3B46     		mov	r3, r7
 5696 0584 C847     		blx	r9
 5697              	.LVL647:
 5698 0586 0A90     		str	r0, [sp, #40]	@ float
 5699              	.LVL648:
 389:src/main.cpp  ****     //udelay(500);
 5700              		.loc 12 389 0
 5701 0588 D4F8D80D 		ldr	r0, [r4, #3544]
 5702              	.LVL649:
 5703 058c 2A46     		mov	r2, r5
 5704 058e 0368     		ldr	r3, [r0]
 5705 0590 B349     		ldr	r1, .L324+16
 5706 0592 D3F81C90 		ldr	r9, [r3, #28]
 5707 0596 3B46     		mov	r3, r7
 5708 0598 C847     		blx	r9
 5709              	.LVL650:
 5710 059a 8246     		mov	r10, r0
 5711              	.LVL651:
 391:src/main.cpp  ****     //udelay(500);
 5712              		.loc 12 391 0
 5713 059c D4F8E00D 		ldr	r0, [r4, #3552]
 5714              	.LVL652:
 5715 05a0 2A46     		mov	r2, r5
 5716 05a2 0368     		ldr	r3, [r0]
 5717 05a4 AE49     		ldr	r1, .L324+16
 5718 05a6 D3F81C90 		ldr	r9, [r3, #28]
 5719 05aa 3B46     		mov	r3, r7
 5720 05ac C847     		blx	r9
 5721              	.LVL653:
 5722 05ae 8146     		mov	r9, r0
 5723              	.LVL654:
 393:src/main.cpp  ****     //udelay(1000);
 5724              		.loc 12 393 0
 5725 05b0 D4F8E40D 		ldr	r0, [r4, #3556]
 5726              	.LVL655:
 5727 05b4 2A46     		mov	r2, r5
 5728 05b6 0368     		ldr	r3, [r0]
 5729 05b8 A949     		ldr	r1, .L324+16
 5730 05ba DB69     		ldr	r3, [r3, #28]
 5731 05bc 9E46     		mov	lr, r3
 5732 05be 3B46     		mov	r3, r7
 5733 05c0 7546     		mov	r5, lr
 5734 05c2 A847     		blx	r5
 5735              	.LVL656:
 398:src/main.cpp  ****     debug_msg.data[3] = fl;
 5736              		.loc 12 398 0
 5737 05c4 D4F8543E 		ldr	r3, [r4, #3668]
 5738 05c8 0A9A     		ldr	r2, [sp, #40]	@ float
 399:src/main.cpp  ****     debug_msg.data[4] = rl;
 5739              		.loc 12 399 0
 5740 05ca C3F80CA0 		str	r10, [r3, #12]	@ float
 401:src/main.cpp  **** 
 5741              		.loc 12 401 0
 5742 05ce 5861     		str	r0, [r3, #20]	@ float
 398:src/main.cpp  ****     debug_msg.data[3] = fl;
 5743              		.loc 12 398 0
 5744 05d0 9A60     		str	r2, [r3, #8]	@ float
 400:src/main.cpp  ****     debug_msg.data[5] = rr;
 5745              		.loc 12 400 0
 5746 05d2 C3F81090 		str	r9, [r3, #16]	@ float
 403:src/main.cpp  ****     float angles[4] = {sr-90, -sl+90, sl+90, -sr-90};
 5747              		.loc 12 403 0
 5748 05d6 2190     		str	r0, [sp, #132]	@ float
 404:src/main.cpp  **** 
 5749              		.loc 12 404 0
 5750 05d8 A249     		ldr	r1, .L324+20
 5751 05da 3046     		mov	r0, r6
 5752              	.LVL657:
 403:src/main.cpp  ****     float angles[4] = {sr-90, -sl+90, sl+90, -sr-90};
 5753              		.loc 12 403 0
 5754 05dc 1E92     		str	r2, [sp, #120]	@ float
 5755 05de CDF87CA0 		str	r10, [sp, #124]	@ float
 5756 05e2 CDF88090 		str	r9, [sp, #128]	@ float
 404:src/main.cpp  **** 
 5757              		.loc 12 404 0
 5758 05e6 FFF7FEFF 		bl	__aeabi_fsub
 5759              	.LVL658:
 5760 05ea 4146     		mov	r1, r8
 5761 05ec 2290     		str	r0, [sp, #136]	@ float
 5762 05ee 9D48     		ldr	r0, .L324+20
 5763 05f0 FFF7FEFF 		bl	__aeabi_fsub
 5764              	.LVL659:
 5765 05f4 9B49     		ldr	r1, .L324+20
 5766 05f6 2390     		str	r0, [sp, #140]	@ float
 5767 05f8 4046     		mov	r0, r8
 5768 05fa FFF7FEFF 		bl	__aeabi_fadd
 5769              	.LVL660:
 5770 05fe 9949     		ldr	r1, .L324+20
 5771 0600 2490     		str	r0, [sp, #144]	@ float
 5772 0602 06F10040 		add	r0, r6, #-2147483648
 5773 0606 FFF7FEFF 		bl	__aeabi_fsub
 5774              	.LVL661:
 409:src/main.cpp  ****     for(i = 0; i < 4; i++){
 5775              		.loc 12 409 0
 5776 060a 0023     		movs	r3, #0
 404:src/main.cpp  **** 
 5777              		.loc 12 404 0
 5778 060c 2590     		str	r0, [sp, #148]	@ float
 5779              	.LVL662:
 409:src/main.cpp  ****     for(i = 0; i < 4; i++){
 5780              		.loc 12 409 0
 5781 060e 0E93     		str	r3, [sp, #56]	@ float
 408:src/main.cpp  ****     float theta_dot = 0;
 5782              		.loc 12 408 0
 5783 0610 0D93     		str	r3, [sp, #52]	@ float
 407:src/main.cpp  ****     float y_dot = 0;
 5784              		.loc 12 407 0
 5785 0612 0C93     		str	r3, [sp, #48]	@ float
 5786              	.LBB312:
 410:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 5787              		.loc 12 410 0
 5788 0614 4FF0000A 		mov	r10, #0
 5789              	.LVL663:
 5790              	.L300:
 5791              	.LBB313:
 411:src/main.cpp  ****       
 5792              		.loc 12 411 0
 5793 0618 22AC     		add	r4, sp, #136
 5794 061a 54F82A00 		ldr	r0, [r4, r10, lsl #2]	@ float
 5795 061e FFF7FEFF 		bl	__aeabi_f2d
 5796              	.LVL664:
 5797 0622 8BA3     		adr	r3, .L324
 5798 0624 D3E90023 		ldrd	r2, [r3]
 5799 0628 FFF7FEFF 		bl	__aeabi_dmul
 5800              	.LVL665:
 5801 062c 0022     		movs	r2, #0
 5802 062e 8E4B     		ldr	r3, .L324+24
 5803 0630 FFF7FEFF 		bl	__aeabi_ddiv
 5804              	.LVL666:
 5805 0634 FFF7FEFF 		bl	__aeabi_d2f
 5806              	.LVL667:
 413:src/main.cpp  ****       x_dot += cos(wheelAngle)*speeds[i];
 5807              		.loc 12 413 0
 5808 0638 1AAB     		add	r3, sp, #104
 5809 063a 53F82A50 		ldr	r5, [r3, r10, lsl #2]	@ float
 411:src/main.cpp  ****       
 5810              		.loc 12 411 0
 5811 063e 44F82A00 		str	r0, [r4, r10, lsl #2]	@ float
 413:src/main.cpp  ****       x_dot += cos(wheelAngle)*speeds[i];
 5812              		.loc 12 413 0
 5813 0642 2946     		mov	r1, r5
 5814 0644 FFF7FEFF 		bl	__aeabi_fadd
 5815              	.LVL668:
 5816 0648 0446     		mov	r4, r0
 5817              	.LVL669:
 414:src/main.cpp  ****       y_dot -= sin(wheelAngle)*speeds[i];
 5818              		.loc 12 414 0
 5819 064a FFF7FEFF 		bl	__aeabi_f2d
 5820              	.LVL670:
 5821 064e CDE90A01 		strd	r0, [sp, #40]
 5822 0652 FFF7FEFF 		bl	cos
 5823              	.LVL671:
 5824 0656 1EAB     		add	r3, sp, #120
 5825 0658 53F82A30 		ldr	r3, [r3, r10, lsl #2]	@ float
 5826 065c 0646     		mov	r6, r0
 5827 065e 1846     		mov	r0, r3
 5828 0660 0F46     		mov	r7, r1
 5829 0662 0F93     		str	r3, [sp, #60]	@ float
 5830 0664 FFF7FEFF 		bl	__aeabi_f2d
 5831              	.LVL672:
 5832 0668 0246     		mov	r2, r0
 5833 066a 0B46     		mov	r3, r1
 5834 066c 8046     		mov	r8, r0
 5835 066e 8946     		mov	r9, r1
 5836 0670 3046     		mov	r0, r6
 5837 0672 3946     		mov	r1, r7
 5838 0674 FFF7FEFF 		bl	__aeabi_dmul
 5839              	.LVL673:
 5840 0678 0646     		mov	r6, r0
 5841 067a 0C98     		ldr	r0, [sp, #48]	@ float
 5842 067c 0F46     		mov	r7, r1
 5843 067e FFF7FEFF 		bl	__aeabi_f2d
 5844              	.LVL674:
 5845 0682 0246     		mov	r2, r0
 5846 0684 0B46     		mov	r3, r1
 5847 0686 3046     		mov	r0, r6
 5848 0688 3946     		mov	r1, r7
 5849 068a FFF7FEFF 		bl	__aeabi_dadd
 5850              	.LVL675:
 5851 068e FFF7FEFF 		bl	__aeabi_d2f
 5852              	.LVL676:
 5853 0692 0C90     		str	r0, [sp, #48]	@ float
 5854              	.LVL677:
 415:src/main.cpp  ****       
 5855              		.loc 12 415 0
 5856 0694 DDE90A01 		ldrd	r0, [sp, #40]
 5857              	.LVL678:
 5858 0698 FFF7FEFF 		bl	sin
 5859              	.LVL679:
 5860 069c 0246     		mov	r2, r0
 5861 069e 0B46     		mov	r3, r1
 5862 06a0 0D98     		ldr	r0, [sp, #52]	@ float
 5863 06a2 CDE91023 		strd	r2, [sp, #64]
 5864 06a6 FFF7FEFF 		bl	__aeabi_f2d
 5865              	.LVL680:
 5866 06aa DDE91023 		ldrd	r2, [sp, #64]
 5867 06ae 0646     		mov	r6, r0
 5868 06b0 0F46     		mov	r7, r1
 5869 06b2 4046     		mov	r0, r8
 5870 06b4 4946     		mov	r1, r9
 5871 06b6 FFF7FEFF 		bl	__aeabi_dmul
 5872              	.LVL681:
 5873 06ba 0B46     		mov	r3, r1
 5874 06bc 0246     		mov	r2, r0
 5875 06be 3946     		mov	r1, r7
 5876 06c0 3046     		mov	r0, r6
 5877 06c2 FFF7FEFF 		bl	__aeabi_dsub
 5878              	.LVL682:
 5879 06c6 FFF7FEFF 		bl	__aeabi_d2f
 5880              	.LVL683:
 418:src/main.cpp  ****         motorAngle += M_PI;
 5881              		.loc 12 418 0
 5882 06ca AAF10203 		sub	r3, r10, #2
 5883 06ce 012B     		cmp	r3, #1
 415:src/main.cpp  ****       
 5884              		.loc 12 415 0
 5885 06d0 0D90     		str	r0, [sp, #52]	@ float
 5886              	.LVL684:
 418:src/main.cpp  ****         motorAngle += M_PI;
 5887              		.loc 12 418 0
 5888 06d2 09D8     		bhi	.L299
 419:src/main.cpp  ****       }
 5889              		.loc 12 419 0
 5890 06d4 5EA3     		adr	r3, .L324
 5891 06d6 D3E90023 		ldrd	r2, [r3]
 5892 06da DDE90A01 		ldrd	r0, [sp, #40]
 5893              	.LVL685:
 5894 06de FFF7FEFF 		bl	__aeabi_dadd
 5895              	.LVL686:
 5896 06e2 FFF7FEFF 		bl	__aeabi_d2f
 5897              	.LVL687:
 5898 06e6 0446     		mov	r4, r0
 5899              	.LVL688:
 5900              	.L299:
 421:src/main.cpp  ****       float deltaY = l*cos(alpha[i]) + d*cos(motorAngle);
 5901              		.loc 12 421 0 discriminator 2
 5902 06e8 1498     		ldr	r0, [sp, #80]	@ float
 5903 06ea FFF7FEFF 		bl	__aeabi_f2d
 5904              	.LVL689:
 5905 06ee CDE91001 		strd	r0, [sp, #64]
 5906 06f2 2846     		mov	r0, r5
 5907 06f4 FFF7FEFF 		bl	__aeabi_f2d
 5908              	.LVL690:
 5909 06f8 CDE91601 		strd	r0, [sp, #88]
 5910 06fc FFF7FEFF 		bl	sin
 5911              	.LVL691:
 5912 0700 8046     		mov	r8, r0
 5913 0702 DBF81000 		ldr	r0, [fp, #16]	@ float
 5914 0706 8946     		mov	r9, r1
 5915 0708 FFF7FEFF 		bl	__aeabi_f2d
 5916              	.LVL692:
 5917 070c CDE91201 		strd	r0, [sp, #72]
 5918 0710 2046     		mov	r0, r4
 5919 0712 FFF7FEFF 		bl	__aeabi_f2d
 5920              	.LVL693:
 5921 0716 CDE91801 		strd	r0, [sp, #96]
 5922 071a FFF7FEFF 		bl	sin
 5923              	.LVL694:
 5924 071e 4246     		mov	r2, r8
 5925 0720 0646     		mov	r6, r0
 5926 0722 0F46     		mov	r7, r1
 5927 0724 DDE91001 		ldrd	r0, [sp, #64]
 5928 0728 4B46     		mov	r3, r9
 5929 072a FFF7FEFF 		bl	__aeabi_dmul
 5930              	.LVL695:
 5931 072e 3246     		mov	r2, r6
 5932 0730 0446     		mov	r4, r0
 5933              	.LVL696:
 5934 0732 0D46     		mov	r5, r1
 5935 0734 DDE91201 		ldrd	r0, [sp, #72]
 5936 0738 3B46     		mov	r3, r7
 5937 073a FFF7FEFF 		bl	__aeabi_dmul
 5938              	.LVL697:
 5939 073e 0246     		mov	r2, r0
 5940 0740 0B46     		mov	r3, r1
 5941 0742 2046     		mov	r0, r4
 5942 0744 2946     		mov	r1, r5
 5943 0746 FFF7FEFF 		bl	__aeabi_dadd
 5944              	.LVL698:
 5945 074a FFF7FEFF 		bl	__aeabi_d2f
 5946              	.LVL699:
 5947 074e 00F10048 		add	r8, r0, #-2147483648
 5948              	.LVL700:
 422:src/main.cpp  **** 
 5949              		.loc 12 422 0 discriminator 2
 5950 0752 DDE91601 		ldrd	r0, [sp, #88]
 5951 0756 FFF7FEFF 		bl	cos
 5952              	.LVL701:
 5953 075a 0446     		mov	r4, r0
 5954 075c 0D46     		mov	r5, r1
 5955 075e DDE91801 		ldrd	r0, [sp, #96]
 5956 0762 FFF7FEFF 		bl	cos
 5957              	.LVL702:
 5958 0766 2246     		mov	r2, r4
 5959 0768 0646     		mov	r6, r0
 5960 076a 0F46     		mov	r7, r1
 5961 076c DDE91001 		ldrd	r0, [sp, #64]
 5962 0770 2B46     		mov	r3, r5
 5963 0772 FFF7FEFF 		bl	__aeabi_dmul
 5964              	.LVL703:
 5965 0776 3246     		mov	r2, r6
 5966 0778 0446     		mov	r4, r0
 5967 077a 0D46     		mov	r5, r1
 5968 077c DDE91201 		ldrd	r0, [sp, #72]
 5969 0780 3B46     		mov	r3, r7
 5970 0782 FFF7FEFF 		bl	__aeabi_dmul
 5971              	.LVL704:
 5972 0786 0246     		mov	r2, r0
 5973 0788 0B46     		mov	r3, r1
 5974 078a 2046     		mov	r0, r4
 5975 078c 2946     		mov	r1, r5
 5976 078e FFF7FEFF 		bl	__aeabi_dadd
 5977              	.LVL705:
 5978 0792 FFF7FEFF 		bl	__aeabi_d2f
 5979              	.LVL706:
 424:src/main.cpp  ****       float deltaXNorm = deltaX/deltaNorm;
 5980              		.loc 12 424 0 discriminator 2
 5981 0796 4146     		mov	r1, r8
 422:src/main.cpp  **** 
 5982              		.loc 12 422 0 discriminator 2
 5983 0798 0746     		mov	r7, r0
 5984              	.LVL707:
 424:src/main.cpp  ****       float deltaXNorm = deltaX/deltaNorm;
 5985              		.loc 12 424 0 discriminator 2
 5986 079a 4046     		mov	r0, r8
 5987              	.LVL708:
 5988 079c FFF7FEFF 		bl	__aeabi_fmul
 5989              	.LVL709:
 5990 07a0 3946     		mov	r1, r7
 5991 07a2 0446     		mov	r4, r0
 5992 07a4 3846     		mov	r0, r7
 5993 07a6 FFF7FEFF 		bl	__aeabi_fmul
 5994              	.LVL710:
 5995 07aa 0146     		mov	r1, r0
 5996 07ac 2046     		mov	r0, r4
 5997 07ae FFF7FEFF 		bl	__aeabi_fadd
 5998              	.LVL711:
 5999 07b2 FFF7FEFF 		bl	__aeabi_f2d
 6000              	.LVL712:
 6001 07b6 FFF7FEFF 		bl	sqrt
 6002              	.LVL713:
 6003 07ba FFF7FEFF 		bl	__aeabi_d2f
 6004              	.LVL714:
 429:src/main.cpp  ****       float wY = sin(wAngle);
 6005              		.loc 12 429 0 discriminator 2
 6006 07be 26A3     		adr	r3, .L324+8
 6007 07c0 D3E90023 		ldrd	r2, [r3]
 424:src/main.cpp  ****       float deltaXNorm = deltaX/deltaNorm;
 6008              		.loc 12 424 0 discriminator 2
 6009 07c4 0646     		mov	r6, r0
 6010              	.LVL715:
 429:src/main.cpp  ****       float wY = sin(wAngle);
 6011              		.loc 12 429 0 discriminator 2
 6012 07c6 DDE90A01 		ldrd	r0, [sp, #40]
 6013              	.LVL716:
 6014 07ca FFF7FEFF 		bl	__aeabi_dadd
 6015              	.LVL717:
 6016 07ce FFF7FEFF 		bl	__aeabi_d2f
 6017              	.LVL718:
 6018 07d2 FFF7FEFF 		bl	__aeabi_f2d
 6019              	.LVL719:
 6020 07d6 0446     		mov	r4, r0
 6021 07d8 0D46     		mov	r5, r1
 6022 07da FFF7FEFF 		bl	cos
 6023              	.LVL720:
 6024 07de FFF7FEFF 		bl	__aeabi_d2f
 6025              	.LVL721:
 430:src/main.cpp  **** 
 6026              		.loc 12 430 0 discriminator 2
 6027 07e2 2946     		mov	r1, r5
 429:src/main.cpp  ****       float wY = sin(wAngle);
 6028              		.loc 12 429 0 discriminator 2
 6029 07e4 8146     		mov	r9, r0
 6030              	.LVL722:
 430:src/main.cpp  **** 
 6031              		.loc 12 430 0 discriminator 2
 6032 07e6 2046     		mov	r0, r4
 6033              	.LVL723:
 6034 07e8 FFF7FEFF 		bl	sin
 6035              	.LVL724:
 6036 07ec 0446     		mov	r4, r0
 6037 07ee 0D46     		mov	r5, r1
 6038              	.LVL725:
 432:src/main.cpp  ****     }
 6039              		.loc 12 432 0 discriminator 2
 6040 07f0 4046     		mov	r0, r8
 6041 07f2 3146     		mov	r1, r6
 6042 07f4 FFF7FEFF 		bl	__aeabi_fdiv
 6043              	.LVL726:
 6044 07f8 4946     		mov	r1, r9
 6045 07fa FFF7FEFF 		bl	__aeabi_fmul
 6046              	.LVL727:
 6047 07fe 3146     		mov	r1, r6
 6048 0800 8046     		mov	r8, r0
 6049              	.LVL728:
 6050 0802 3846     		mov	r0, r7
 6051 0804 FFF7FEFF 		bl	__aeabi_fdiv
 6052              	.LVL729:
 6053 0808 2946     		mov	r1, r5
 6054 080a 0746     		mov	r7, r0
 6055              	.LVL730:
 6056 080c 2046     		mov	r0, r4
 6057 080e FFF7FEFF 		bl	__aeabi_d2f
 6058              	.LVL731:
 6059 0812 0146     		mov	r1, r0
 6060 0814 3846     		mov	r0, r7
 6061 0816 FFF7FEFF 		bl	__aeabi_fmul
 6062              	.LVL732:
 6063 081a 0146     		mov	r1, r0
 6064 081c 4046     		mov	r0, r8
 6065 081e FFF7FEFF 		bl	__aeabi_fadd
 6066              	.LVL733:
 6067 0822 4946     		mov	r1, r9
 6068 0824 FFF7FEFF 		bl	__aeabi_fmul
 6069              	.LVL734:
 6070 0828 3146     		mov	r1, r6
 6071 082a FFF7FEFF 		bl	__aeabi_fdiv
 6072              	.LVL735:
 6073 082e 0F99     		ldr	r1, [sp, #60]	@ float
 6074 0830 FFF7FEFF 		bl	__aeabi_fmul
 6075              	.LVL736:
 6076 0834 0146     		mov	r1, r0
 6077 0836 0E98     		ldr	r0, [sp, #56]	@ float
 6078 0838 FFF7FEFF 		bl	__aeabi_fadd
 6079              	.LVL737:
 6080              	.LBE313:
 410:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 6081              		.loc 12 410 0 discriminator 2
 6082 083c 0AF1010A 		add	r10, r10, #1
 6083              	.LVL738:
 6084 0840 BAF1040F 		cmp	r10, #4
 6085              	.LBB314:
 432:src/main.cpp  ****     }
 6086              		.loc 12 432 0 discriminator 2
 6087 0844 0E90     		str	r0, [sp, #56]	@ float
 6088              	.LVL739:
 6089              	.LBE314:
 410:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 6090              		.loc 12 410 0 discriminator 2
 6091 0846 7FF4E7AE 		bne	.L300
 6092 084a 0FE0     		b	.L325
 6093              	.L326:
 6094 084c AFF30080 		.align	3
 6095              	.L324:
 6096 0850 182D4454 		.word	1413754136
 6097 0854 FB210940 		.word	1074340347
 6098 0858 182D4454 		.word	1413754136
 6099 085c FB21F93F 		.word	1073291771
 6100 0860 0BD7A33C 		.word	1017370379
 6101 0864 0000B442 		.word	1119092736
 6102 0868 00806640 		.word	1080459264
 6103              	.L325:
 6104              	.LVL740:
 6105              	.LBE312:
 456:src/main.cpp  ****     odom_msg.data[1] = y_dot;
 6106              		.loc 12 456 0
 6107 086c 4FF07A51 		mov	r1, #1048576000
 6108 0870 0C98     		ldr	r0, [sp, #48]	@ float
 6109              	.LVL741:
 6110 0872 FFF7FEFF 		bl	__aeabi_fmul
 6111              	.LVL742:
 6112 0876 DBF8144E 		ldr	r4, [fp, #3604]
 6113              	.LVL743:
 457:src/main.cpp  ****     odom_msg.data[2] = theta_dot;
 6114              		.loc 12 457 0
 6115 087a 4FF07A51 		mov	r1, #1048576000
 456:src/main.cpp  ****     odom_msg.data[1] = y_dot;
 6116              		.loc 12 456 0
 6117 087e 2060     		str	r0, [r4]	@ float
 457:src/main.cpp  ****     odom_msg.data[2] = theta_dot;
 6118              		.loc 12 457 0
 6119 0880 0D98     		ldr	r0, [sp, #52]	@ float
 6120 0882 FFF7FEFF 		bl	__aeabi_fmul
 6121              	.LVL744:
 458:src/main.cpp  ****     //odom_msg.data[3] = spinAngle;
 6122              		.loc 12 458 0
 6123 0886 4FF07A51 		mov	r1, #1048576000
 457:src/main.cpp  ****     odom_msg.data[2] = theta_dot;
 6124              		.loc 12 457 0
 6125 088a 6060     		str	r0, [r4, #4]	@ float
 458:src/main.cpp  ****     //odom_msg.data[3] = spinAngle;
 6126              		.loc 12 458 0
 6127 088c 0E98     		ldr	r0, [sp, #56]	@ float
 6128 088e FFF7FEFF 		bl	__aeabi_fmul
 6129              	.LVL745:
 463:src/main.cpp  ****     debug_pub.publish(&debug_msg);
 6130              		.loc 12 463 0
 6131 0892 0E49     		ldr	r1, .L327
 458:src/main.cpp  ****     //odom_msg.data[3] = spinAngle;
 6132              		.loc 12 458 0
 6133 0894 A060     		str	r0, [r4, #8]	@ float
 463:src/main.cpp  ****     debug_pub.publish(&debug_msg);
 6134              		.loc 12 463 0
 6135 0896 A1F13800 		sub	r0, r1, #56
 6136 089a FFF7FEFF 		bl	_ZN3ros9Publisher7publishEPKNS_3MsgE
 6137              	.LVL746:
 464:src/main.cpp  **** 
 6138              		.loc 12 464 0
 6139 089e 0C49     		ldr	r1, .L327+4
 6140 08a0 A1F16400 		sub	r0, r1, #100
 6141 08a4 FFF7FEFF 		bl	_ZN3ros9Publisher7publishEPKNS_3MsgE
 6142              	.LVL747:
 466:src/main.cpp  **** 
 6143              		.loc 12 466 0
 6144 08a8 0A48     		ldr	r0, .L327+8
 6145 08aa FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv
 6146              	.LVL748:
 468:src/main.cpp  ****     if(elapsed > dt){
 6147              		.loc 12 468 0
 6148 08ae FFF7FEFF 		bl	millis
 6149              	.LVL749:
 469:src/main.cpp  ****       //char elapsed_msg[18];
 6150              		.loc 12 469 0
 6151 08b2 099B     		ldr	r3, [sp, #36]
 6152 08b4 C01A     		subs	r0, r0, r3
 6153              	.LVL750:
 6154 08b6 1428     		cmp	r0, #20
 6155              	.LVL751:
 6156              	.L316:
 6157 08b8 01D9     		bls	.L305
 359:src/main.cpp  ****       debug_toggle();
 6158              		.loc 12 359 0
 6159 08ba 159C     		ldr	r4, [sp, #84]
 6160              	.LBE315:
 352:src/main.cpp  ****     start_time = millis();
 6161              		.loc 12 352 0
 6162 08bc CDE5     		b	.L302
 6163              	.L305:
 6164              	.LBB316:
 477:src/main.cpp  ****     }
 6165              		.loc 12 477 0
 6166 08be FFF7FEFF 		bl	millis
 6167              	.LVL752:
 6168 08c2 099B     		ldr	r3, [sp, #36]
 6169 08c4 C01A     		subs	r0, r0, r3
 6170 08c6 1328     		cmp	r0, #19
 6171 08c8 F6E7     		b	.L316
 6172              	.L328:
 6173 08ca 00BF     		.align	2
 6174              	.L327:
 6175 08cc E80D0000 		.word	.LANCHOR1+3560
 6176 08d0 280E0000 		.word	.LANCHOR1+3624
 6177 08d4 40040000 		.word	.LANCHOR1+1088
 6178              	.LBE316:
 6179              		.cfi_endproc
 6180              	.LFE1287:
 6181              		.fnend
 6183              		.align	1
 6184              		.thumb
 6185              		.thumb_func
 6187              	_GLOBAL__sub_I_USART_FIFO:
 6188              		.fnstart
 6189              	.LFB1335:
 559:src/main.cpp  ****   /* User can add his own implementation to report the file name and line number,
 560:src/main.cpp  ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 561:src/main.cpp  ****   /*char str[150];
 562:src/main.cpp  **** 
 563:src/main.cpp  ****   sprintf(str, "Wrong parameters value: file %s on line %u\r\n", file, (unsigned int)line);
 564:src/main.cpp  ****   nh.logerror(str);*/
 565:src/main.cpp  ****   while (1){
 566:src/main.cpp  ****     //debug_toggle();
 567:src/main.cpp  ****     //delay(100);
 568:src/main.cpp  ****     //nh.spinOnce();
 569:src/main.cpp  ****   }
 570:src/main.cpp  **** }
 6190              		.loc 12 570 0
 6191              		.cfi_startproc
 6192              		@ args = 0, pretend = 0, frame = 0
 6193              		@ frame_needed = 0, uses_anonymous_args = 0
 6194              	.LVL753:
 6195              	.LBB397:
 6196              	.LBB398:
 6197              	.LBB399:
 6198              	.LBB400:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6199              		.loc 10 119 0
 6200 08d8 5D4B     		ldr	r3, .L338
 6201 08da 5E4A     		ldr	r2, .L338+4
 6202              	.LBE400:
 6203              	.LBE399:
 6204              	.LBE398:
 6205              	.LBE397:
 6206              		.loc 12 570 0
 6207 08dc 70B5     		push	{r4, r5, r6, lr}
 6208              	.LCFI59:
 6209              		.cfi_def_cfa_offset 16
 6210              		.cfi_offset 4, -16
 6211              		.cfi_offset 5, -12
 6212              		.cfi_offset 6, -8
 6213              		.cfi_offset 14, -4
 6214              	.LBB522:
 6215              	.LBB521:
 6216              	.LBB418:
 6217              	.LBB417:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6218              		.loc 10 119 0
 6219 08de C3F84024 		str	r2, [r3, #1088]
 6220              	.LVL754:
 6221              	.LBB401:
 6222              	.LBB402:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 230400;
 6223              		.loc 13 60 0
 6224 08e2 5D4A     		ldr	r2, .L338+8
 6225              	.LBE402:
 6226              	.LBE401:
 6227              	.LBB405:
 6228              	.LBB406:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 6229              		.loc 4 70 0
 6230 08e4 5D49     		ldr	r1, .L338+12
 6231              	.LBE406:
 6232              	.LBE405:
 6233              	.LBB409:
 6234              	.LBB403:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 230400;
 6235              		.loc 13 60 0
 6236 08e6 C3F84424 		str	r2, [r3, #1092]
  61:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
 6237              		.loc 13 61 0
 6238 08ea 4FF46132 		mov	r2, #230400
 6239 08ee C3F84824 		str	r2, [r3, #1096]
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
 6240              		.loc 13 62 0
 6241 08f2 0022     		movs	r2, #0
 6242 08f4 9A63     		str	r2, [r3, #56]
 6243              	.LBE403:
 6244              	.LBE409:
 6245              	.LBB410:
 6246              	.LBB407:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 6247              		.loc 4 70 0
 6248 08f6 C3F8481D 		str	r1, [r3, #3400]
 6249              	.LBE407:
 6250              	.LBE410:
 6251              	.LBB411:
 6252              	.LBB404:
  63:./lib/ros_lib/ArduinoHardware.h ****     }
 6253              		.loc 13 63 0
 6254 08fa 5A63     		str	r2, [r3, #52]
 6255              	.LVL755:
 6256              	.LBE404:
 6257              	.LBE411:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6258              		.loc 10 119 0
 6259 08fc 83F8342D 		strb	r2, [r3, #3380]
 6260              	.LVL756:
 6261              	.LBB412:
 6262              	.LBB408:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 6263              		.loc 4 70 0
 6264 0900 83F84C2D 		strb	r2, [r3, #3404]
 6265 0904 C3F8542D 		str	r2, [r3, #3412]
 6266 0908 83F8582D 		strb	r2, [r3, #3416]
 6267 090c C3F8602D 		str	r2, [r3, #3424]
 6268 0910 83F8642D 		strb	r2, [r3, #3428]
 6269 0914 C3F86C2D 		str	r2, [r3, #3436]
 6270              	.LVL757:
 6271 0918 03F65441 		addw	r1, r3, #3156
 6272 091c 03F6B843 		addw	r3, r3, #3256
 6273              	.LVL758:
 6274              	.L330:
 6275              	.LBE408:
 6276              	.LBE412:
 6277              	.LBB413:
 122:./lib/ros_lib/ros/node_handle.h **** 
 6278              		.loc 10 122 0
 6279 0920 41F8042F 		str	r2, [r1, #4]!
 121:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 6280              		.loc 10 121 0
 6281 0924 8B42     		cmp	r3, r1
 6282 0926 FBD1     		bne	.L330
 6283 0928 4D4A     		ldr	r2, .L338+16
 6284              	.LBE413:
 6285              	.LBB414:
 125:./lib/ros_lib/ros/node_handle.h **** 
 6286              		.loc 10 125 0
 6287 092a 0021     		movs	r1, #0
 6288              	.L331:
 6289 092c 43F8041F 		str	r1, [r3, #4]!
 6290              	.LVL759:
 124:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 6291              		.loc 10 124 0
 6292 0930 9342     		cmp	r3, r2
 6293 0932 FBD1     		bne	.L331
 6294 0934 0023     		movs	r3, #0
 6295              	.LBE414:
 6296              	.LBB415:
 128:./lib/ros_lib/ros/node_handle.h **** 
 6297              		.loc 10 128 0
 6298 0936 1946     		mov	r1, r3
 6299 0938 4A48     		ldr	r0, .L338+20
 6300              	.L332:
 6301              	.LVL760:
 6302 093a C218     		adds	r2, r0, r3
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 6303              		.loc 10 127 0
 6304 093c 0133     		adds	r3, r3, #1
 6305              	.LVL761:
 6306 093e B3F5806F 		cmp	r3, #1024
 128:./lib/ros_lib/ros/node_handle.h **** 
 6307              		.loc 10 128 0
 6308 0942 1176     		strb	r1, [r2, #24]
 6309 0944 474D     		ldr	r5, .L338+20
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 6310              		.loc 10 127 0
 6311 0946 F8D1     		bne	.L332
 6312 0948 0021     		movs	r1, #0
 6313              	.LBE415:
 6314              	.LBB416:
 131:./lib/ros_lib/ros/node_handle.h **** 
 6315              		.loc 10 131 0
 6316 094a 0C46     		mov	r4, r1
 6317              	.LVL762:
 6318              	.L333:
 6319 094c 6818     		adds	r0, r5, r1
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 6320              		.loc 10 130 0
 6321 094e 0131     		adds	r1, r1, #1
 6322              	.LVL763:
 6323 0950 B1F5806F 		cmp	r1, #1024
 131:./lib/ros_lib/ros/node_handle.h **** 
 6324              		.loc 10 131 0
 6325 0954 3E4B     		ldr	r3, .L338
 6326 0956 4FF00002 		mov	r2, #0
 6327 095a 80F81844 		strb	r4, [r0, #1048]
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 6328              		.loc 10 130 0
 6329 095e F5D1     		bne	.L333
 6330              	.LVL764:
 6331              	.LBE416:
 6332              	.LBE417:
 6333              	.LBE418:
 6334              	.LBB419:
 6335              	.LBB420:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6336              		.loc 11 67 0
 6337 0960 4148     		ldr	r0, .L338+24
 6338              	.LBE420:
 6339              	.LBE419:
 6340              	.LBB448:
 6341              	.LBB449:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6342              		.loc 5 22 0
 6343 0962 4249     		ldr	r1, .L338+28
 6344              	.LBE449:
 6345              	.LBE448:
 6346              	.LBB453:
 6347              	.LBB441:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6348              		.loc 11 67 0
 6349 0964 C3F8700D 		str	r0, [r3, #3440]
 6350              	.LBB421:
 6351              	.LBB422:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6352              		.loc 9 33 0
 6353 0968 4148     		ldr	r0, .L338+32
 6354              	.LBE422:
 6355              	.LBE421:
 6356              	.LBE441:
 6357              	.LBE453:
 6358              	.LBB454:
 6359              	.LBB450:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6360              		.loc 5 22 0
 6361 096a 424C     		ldr	r4, .L338+36
 6362              	.LBE450:
 6363              	.LBE454:
 6364              	.LBB455:
 6365              	.LBB442:
 6366              	.LBB437:
 6367              	.LBB433:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6368              		.loc 9 33 0
 6369 096c C3F87C0D 		str	r0, [r3, #3452]
 6370              	.LBB423:
 6371              	.LBB424:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6372              		.loc 8 23 0
 6373 0970 4148     		ldr	r0, .L338+40
 6374              	.LBE424:
 6375              	.LBE423:
 6376              	.LBE433:
 6377              	.LBE437:
 6378              	.LBE442:
 6379              	.LBE455:
 6380              	.LBB456:
 6381              	.LBB457:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6382              		.loc 7 23 0
 6383 0972 424E     		ldr	r6, .L338+44
 6384              	.LBE457:
 6385              	.LBE456:
 6386              	.LBB472:
 6387              	.LBB443:
 6388              	.LBB438:
 6389              	.LBB434:
 6390              	.LBB430:
 6391              	.LBB427:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6392              		.loc 8 23 0
 6393 0974 C3F8800D 		str	r0, [r3, #3456]
 6394              	.LBE427:
 6395              	.LBE430:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6396              		.loc 9 33 0
 6397 0978 0020     		movs	r0, #0
 6398 097a C3F8940D 		str	r0, [r3, #3476]	@ float
 6399 097e C3F8980D 		str	r0, [r3, #3480]	@ float
 6400 0982 C3F89C0D 		str	r0, [r3, #3484]	@ float
 6401 0986 C3F8A00D 		str	r0, [r3, #3488]	@ float
 6402              	.LBE434:
 6403              	.LBE438:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6404              		.loc 11 67 0
 6405 098a 3D48     		ldr	r0, .L338+48
 6406              	.LBE443:
 6407              	.LBE472:
 6408              	.LBB473:
 6409              	.LBB468:
 6410              	.LBB458:
 6411              	.LBB459:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6412              		.loc 6 23 0
 6413 098c 3D4D     		ldr	r5, .L338+52
 6414              	.LBE459:
 6415              	.LBE458:
 6416              	.LBE468:
 6417              	.LBE473:
 6418              	.LBB474:
 6419              	.LBB444:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6420              		.loc 11 67 0
 6421 098e C3F8A80D 		str	r0, [r3, #3496]
 6422 0992 0120     		movs	r0, #1
 6423 0994 C3F8AC0D 		str	r0, [r3, #3500]
  69:./lib/ros_lib/ros/subscriber.h ****       };
 6424              		.loc 11 69 0
 6425 0998 3B48     		ldr	r0, .L338+56
 6426              	.LBE444:
 6427              	.LBE474:
 6428              	.LBB475:
 6429              	.LBB451:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6430              		.loc 5 22 0
 6431 099a C3F81C1E 		str	r1, [r3, #3612]
 6432              	.LBE451:
 6433              	.LBE475:
 6434              	.LBB476:
 6435              	.LBB445:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 6436              		.loc 11 69 0
 6437 099e C3F8780D 		str	r0, [r3, #3448]
 6438              	.LBE445:
 6439              	.LBE476:
 6440              	.LBB477:
 6441              	.LBB478:
  50:./lib/ros_lib/ros/publisher.h **** 
 6442              		.loc 15 50 0
 6443 09a2 3A48     		ldr	r0, .L338+60
 6444              	.LBE478:
 6445              	.LBE477:
 6446              	.LBB483:
 6447              	.LBB484:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6448              		.loc 5 22 0
 6449 09a4 C3F85C1E 		str	r1, [r3, #3676]
 6450              	.LBE484:
 6451              	.LBE483:
 6452              	.LBB486:
 6453              	.LBB446:
 6454              	.LBB439:
 6455              	.LBB435:
 6456              	.LBB431:
 6457              	.LBB428:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6458              		.loc 8 23 0
 6459 09a8 C3F8901D 		str	r1, [r3, #3472]
 6460              	.LBE428:
 6461              	.LBE431:
 6462              	.LBE435:
 6463              	.LBE439:
 6464              	.LBE446:
 6465              	.LBE486:
 6466              	.LBB487:
 6467              	.LBB469:
 6468              	.LBB466:
 6469              	.LBB464:
 6470              	.LBB460:
 6471              	.LBB461:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6472              		.loc 5 22 0
 6473 09ac C3F8381E 		str	r1, [r3, #3640]
 6474              	.LBE461:
 6475              	.LBE460:
 6476              	.LBE464:
 6477              	.LBE466:
 6478              	.LBE469:
 6479              	.LBE487:
 6480              	.LBB488:
 6481              	.LBB452:
 6482 09b0 C3F8184E 		str	r4, [r3, #3608]
 6483 09b4 C3F8202E 		str	r2, [r3, #3616]
 6484 09b8 C3F8242E 		str	r2, [r3, #3620]
 6485              	.LVL765:
 6486              	.LBE452:
 6487              	.LBE488:
 6488              	.LBB489:
 6489              	.LBB485:
 6490 09bc C3F8584E 		str	r4, [r3, #3672]
 6491 09c0 C3F8602E 		str	r2, [r3, #3680]
 6492 09c4 C3F8642E 		str	r2, [r3, #3684]
 6493              	.LVL766:
 6494              	.LBE485:
 6495              	.LBE489:
 6496              	.LBB490:
 6497              	.LBB447:
 6498              	.LBB440:
 6499              	.LBB436:
 6500              	.LBB432:
 6501              	.LBB429:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6502              		.loc 8 23 0
 6503 09c8 C3F8842D 		str	r2, [r3, #3460]
 6504              	.LVL767:
 6505              	.LBB425:
 6506              	.LBB426:
 6507              		.loc 17 52 0
 6508 09cc C3F8882D 		str	r2, [r3, #3464]
 6509 09d0 C3F88C2D 		str	r2, [r3, #3468]
 6510              	.LVL768:
 6511              	.LBE426:
 6512              	.LBE425:
 6513              	.LBE429:
 6514              	.LBE432:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6515              		.loc 9 33 0
 6516 09d4 83F8A42D 		strb	r2, [r3, #3492]
 6517              	.LVL769:
 6518              	.LBE436:
 6519              	.LBE440:
 6520              	.LBE447:
 6521              	.LBE490:
 6522              	.LBB491:
 6523              	.LBB470:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6524              		.loc 7 23 0
 6525 09d8 C3F8286E 		str	r6, [r3, #3624]
 6526              	.LVL770:
 6527              	.LBB467:
 6528              	.LBB465:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6529              		.loc 6 23 0
 6530 09dc C3F82C5E 		str	r5, [r3, #3628]
 6531 09e0 83F8302E 		strb	r2, [r3, #3632]
 6532              	.LVL771:
 6533              	.LBB463:
 6534              	.LBB462:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6535              		.loc 5 22 0
 6536 09e4 C3F8344E 		str	r4, [r3, #3636]
 6537 09e8 C3F83C2E 		str	r2, [r3, #3644]
 6538 09ec C3F8402E 		str	r2, [r3, #3648]
 6539              	.LVL772:
 6540              	.LBE462:
 6541              	.LBE463:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6542              		.loc 6 23 0
 6543 09f0 C3F8442E 		str	r2, [r3, #3652]
 6544 09f4 C3F8482E 		str	r2, [r3, #3656]
 6545              	.LVL773:
 6546              	.LBE465:
 6547              	.LBE467:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6548              		.loc 7 23 0
 6549 09f8 83F84C2E 		strb	r2, [r3, #3660]
 6550              	.LBE470:
 6551              	.LBE491:
 6552              	.LBB492:
 6553              	.LBB479:
  50:./lib/ros_lib/ros/publisher.h **** 
 6554              		.loc 15 50 0
 6555 09fc C3F8C40D 		str	r0, [r3, #3524]
 6556              	.LBE479:
 6557              	.LBE492:
 6558              	.LBB493:
 6559              	.LBB494:
 6560              	.LBB495:
 6561              	.LBB496:
 6562              	.LBB497:
 6563              	.LBB498:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6564              		.loc 5 22 0
 6565 0a00 C3F8F81D 		str	r1, [r3, #3576]
 6566              	.LBE498:
 6567              	.LBE497:
 6568              	.LBE496:
 6569              	.LBE495:
 6570              	.LBE494:
 6571              	.LBE493:
 6572              	.LBB508:
 6573              	.LBB480:
  50:./lib/ros_lib/ros/publisher.h **** 
 6574              		.loc 15 50 0
 6575 0a04 03F62860 		addw	r0, r3, #3624
 6576              	.LBE480:
 6577              	.LBE508:
 6578              	.LBB509:
 6579              	.LBB510:
 6580 0a08 2149     		ldr	r1, .L338+64
 6581              	.LBE510:
 6582              	.LBE509:
 6583              	.LBB513:
 6584              	.LBB481:
 6585 0a0a C3F8C80D 		str	r0, [r3, #3528]
 6586              	.LBE481:
 6587              	.LBE513:
 6588              	.LBB514:
 6589              	.LBB505:
 6590              	.LBB503:
 6591              	.LBB501:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6592              		.loc 6 23 0
 6593 0a0e 83F8F02D 		strb	r2, [r3, #3568]
 6594              	.LBE501:
 6595              	.LBE503:
 6596              	.LBE505:
 6597              	.LBE514:
 6598              	.LBB515:
 6599              	.LBB511:
  50:./lib/ros_lib/ros/publisher.h **** 
 6600              		.loc 15 50 0
 6601 0a12 03F6E850 		addw	r0, r3, #3560
 6602              	.LBE511:
 6603              	.LBE515:
 6604              	.LBB516:
 6605              	.LBB506:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6606              		.loc 7 23 0
 6607 0a16 83F80C2E 		strb	r2, [r3, #3596]
 6608              	.LBE506:
 6609              	.LBE516:
 6610              	.LBB517:
 6611              	.LBB471:
 6612 0a1a C3F8542E 		str	r2, [r3, #3668]
 6613              	.LVL774:
 6614              	.LBE471:
 6615              	.LBE517:
 6616              	.LBB518:
 6617              	.LBB482:
  50:./lib/ros_lib/ros/publisher.h **** 
 6618              		.loc 15 50 0
 6619 0a1e C3F8D42D 		str	r2, [r3, #3540]
 6620              	.LVL775:
 6621              	.LBE482:
 6622              	.LBE518:
 6623              	.LBB519:
 6624              	.LBB507:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6625              		.loc 7 23 0
 6626 0a22 C3F8E86D 		str	r6, [r3, #3560]
 6627              	.LVL776:
 6628              	.LBB504:
 6629              	.LBB502:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6630              		.loc 6 23 0
 6631 0a26 C3F8EC5D 		str	r5, [r3, #3564]
 6632              	.LBB500:
 6633              	.LBB499:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6634              		.loc 5 22 0
 6635 0a2a C3F8F44D 		str	r4, [r3, #3572]
 6636 0a2e C3F8FC2D 		str	r2, [r3, #3580]
 6637 0a32 C3F8002E 		str	r2, [r3, #3584]
 6638              	.LVL777:
 6639              	.LBE499:
 6640              	.LBE500:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6641              		.loc 6 23 0
 6642 0a36 C3F8042E 		str	r2, [r3, #3588]
 6643 0a3a C3F8082E 		str	r2, [r3, #3592]
 6644              	.LVL778:
 6645              	.LBE502:
 6646              	.LBE504:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6647              		.loc 7 23 0
 6648 0a3e C3F8142E 		str	r2, [r3, #3604]
 6649              	.LVL779:
 6650              	.LBE507:
 6651              	.LBE519:
 6652              	.LBB520:
 6653              	.LBB512:
  50:./lib/ros_lib/ros/publisher.h **** 
 6654              		.loc 15 50 0
 6655 0a42 C3F8B01D 		str	r1, [r3, #3504]
 6656 0a46 C3F8B40D 		str	r0, [r3, #3508]
 6657 0a4a C3F8C02D 		str	r2, [r3, #3520]
 6658              	.LVL780:
 6659 0a4e 70BD     		pop	{r4, r5, r6, pc}
 6660              	.L339:
 6661              		.align	2
 6662              	.L338:
 6663 0a50 00000000 		.word	.LANCHOR1
 6664 0a54 08000000 		.word	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE+8
 6665 0a58 00380140 		.word	1073821696
 6666 0a5c 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 6667 0a60 1C0D0000 		.word	.LANCHOR1+3356
 6668 0a64 40040000 		.word	.LANCHOR1+1088
 6669 0a68 08000000 		.word	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE+8
 6670 0a6c 16020000 		.word	.LC20
 6671 0a70 08000000 		.word	_ZTVN12roberto_msgs10MotorStateE+8
 6672 0a74 08000000 		.word	_ZTVN8std_msgs19MultiArrayDimensionE+8
 6673 0a78 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 6674 0a7c 08000000 		.word	_ZTVN8std_msgs17Float32MultiArrayE+8
 6675 0a80 00000000 		.word	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 6676 0a84 08000000 		.word	_ZTVN8std_msgs16MultiArrayLayoutE+8
 6677 0a88 5A020000 		.word	.LC27
 6678 0a8c 62020000 		.word	.LC28
 6679 0a90 68020000 		.word	.LC29
 6680              	.LBE512:
 6681              	.LBE520:
 6682              	.LBE521:
 6683              	.LBE522:
 6684              		.cfi_endproc
 6685              	.LFE1335:
 6686              		.cantunwind
 6687              		.fnend
 6689              		.section	.init_array,"aw",%init_array
 6690              		.align	2
 6691 0000 00000000 		.word	_GLOBAL__sub_I_USART_FIFO(target1)
 6692              		.weak	_ZTSN3ros3MsgE
 6693              		.section	.rodata._ZTSN3ros3MsgE,"aG",%progbits,_ZTSN3ros3MsgE,comdat
 6696              	_ZTSN3ros3MsgE:
 6697 0000 4E33726F 		.ascii	"N3ros3MsgE\000"
 6697      73334D73 
 6697      674500
 6698              		.weak	_ZTIN3ros3MsgE
 6699              		.section	.rodata._ZTIN3ros3MsgE,"aG",%progbits,_ZTIN3ros3MsgE,comdat
 6700              		.align	2
 6703              	_ZTIN3ros3MsgE:
 6704 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 6705 0004 00000000 		.word	_ZTSN3ros3MsgE
 6706              		.weak	_ZTSN8std_msgs4TimeE
 6707              		.section	.rodata._ZTSN8std_msgs4TimeE,"aG",%progbits,_ZTSN8std_msgs4TimeE,comdat
 6710              	_ZTSN8std_msgs4TimeE:
 6711 0000 4E387374 		.ascii	"N8std_msgs4TimeE\000"
 6711      645F6D73 
 6711      67733454 
 6711      696D6545 
 6711      00
 6712              		.weak	_ZTIN8std_msgs4TimeE
 6713              		.section	.rodata._ZTIN8std_msgs4TimeE,"aG",%progbits,_ZTIN8std_msgs4TimeE,comdat
 6714              		.align	2
 6717              	_ZTIN8std_msgs4TimeE:
 6718 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6719 0004 00000000 		.word	_ZTSN8std_msgs4TimeE
 6720 0008 00000000 		.word	_ZTIN3ros3MsgE
 6721              		.weak	_ZTSN14rosserial_msgs9TopicInfoE
 6722              		.section	.rodata._ZTSN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTSN14rosserial_msgs9TopicInfoE,
 6725              	_ZTSN14rosserial_msgs9TopicInfoE:
 6726 0000 4E313472 		.ascii	"N14rosserial_msgs9TopicInfoE\000"
 6726      6F737365 
 6726      7269616C 
 6726      5F6D7367 
 6726      7339546F 
 6727              		.weak	_ZTIN14rosserial_msgs9TopicInfoE
 6728              		.section	.rodata._ZTIN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTIN14rosserial_msgs9TopicInfoE,
 6729              		.align	2
 6732              	_ZTIN14rosserial_msgs9TopicInfoE:
 6733 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6734 0004 00000000 		.word	_ZTSN14rosserial_msgs9TopicInfoE
 6735 0008 00000000 		.word	_ZTIN3ros3MsgE
 6736              		.weak	_ZTSN14rosserial_msgs3LogE
 6737              		.section	.rodata._ZTSN14rosserial_msgs3LogE,"aG",%progbits,_ZTSN14rosserial_msgs3LogE,comdat
 6740              	_ZTSN14rosserial_msgs3LogE:
 6741 0000 4E313472 		.ascii	"N14rosserial_msgs3LogE\000"
 6741      6F737365 
 6741      7269616C 
 6741      5F6D7367 
 6741      73334C6F 
 6742              		.weak	_ZTIN14rosserial_msgs3LogE
 6743              		.section	.rodata._ZTIN14rosserial_msgs3LogE,"aG",%progbits,_ZTIN14rosserial_msgs3LogE,comdat
 6744              		.align	2
 6747              	_ZTIN14rosserial_msgs3LogE:
 6748 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6749 0004 00000000 		.word	_ZTSN14rosserial_msgs3LogE
 6750 0008 00000000 		.word	_ZTIN3ros3MsgE
 6751              		.weak	_ZTSN14rosserial_msgs20RequestParamResponseE
 6752              		.section	.rodata._ZTSN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTSN14rosserial_msgs
 6755              	_ZTSN14rosserial_msgs20RequestParamResponseE:
 6756 0000 4E313472 		.ascii	"N14rosserial_msgs20RequestParamResponseE\000"
 6756      6F737365 
 6756      7269616C 
 6756      5F6D7367 
 6756      73323052 
 6757              		.weak	_ZTIN14rosserial_msgs20RequestParamResponseE
 6758              		.section	.rodata._ZTIN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTIN14rosserial_msgs
 6759              		.align	2
 6762              	_ZTIN14rosserial_msgs20RequestParamResponseE:
 6763 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6764 0004 00000000 		.word	_ZTSN14rosserial_msgs20RequestParamResponseE
 6765 0008 00000000 		.word	_ZTIN3ros3MsgE
 6766              		.weak	_ZTSN3ros15NodeHandleBase_E
 6767              		.section	.rodata._ZTSN3ros15NodeHandleBase_E,"aG",%progbits,_ZTSN3ros15NodeHandleBase_E,comdat
 6770              	_ZTSN3ros15NodeHandleBase_E:
 6771 0000 4E33726F 		.ascii	"N3ros15NodeHandleBase_E\000"
 6771      7331354E 
 6771      6F646548 
 6771      616E646C 
 6771      65426173 
 6772              		.weak	_ZTIN3ros15NodeHandleBase_E
 6773              		.section	.rodata._ZTIN3ros15NodeHandleBase_E,"aG",%progbits,_ZTIN3ros15NodeHandleBase_E,comdat
 6774              		.align	2
 6777              	_ZTIN3ros15NodeHandleBase_E:
 6778 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 6779 0004 00000000 		.word	_ZTSN3ros15NodeHandleBase_E
 6780              		.weak	_ZTSN3ros11Subscriber_E
 6781              		.section	.rodata._ZTSN3ros11Subscriber_E,"aG",%progbits,_ZTSN3ros11Subscriber_E,comdat
 6784              	_ZTSN3ros11Subscriber_E:
 6785 0000 4E33726F 		.ascii	"N3ros11Subscriber_E\000"
 6785      73313153 
 6785      75627363 
 6785      72696265 
 6785      725F4500 
 6786              		.weak	_ZTIN3ros11Subscriber_E
 6787              		.section	.rodata._ZTIN3ros11Subscriber_E,"aG",%progbits,_ZTIN3ros11Subscriber_E,comdat
 6788              		.align	2
 6791              	_ZTIN3ros11Subscriber_E:
 6792 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 6793 0004 00000000 		.word	_ZTSN3ros11Subscriber_E
 6794              		.weak	_ZTSN8std_msgs19MultiArrayDimensionE
 6795              		.section	.rodata._ZTSN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTSN8std_msgs19MultiArrayDim
 6798              	_ZTSN8std_msgs19MultiArrayDimensionE:
 6799 0000 4E387374 		.ascii	"N8std_msgs19MultiArrayDimensionE\000"
 6799      645F6D73 
 6799      67733139 
 6799      4D756C74 
 6799      69417272 
 6800              		.weak	_ZTIN8std_msgs19MultiArrayDimensionE
 6801              		.section	.rodata._ZTIN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTIN8std_msgs19MultiArrayDim
 6802              		.align	2
 6805              	_ZTIN8std_msgs19MultiArrayDimensionE:
 6806 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6807 0004 00000000 		.word	_ZTSN8std_msgs19MultiArrayDimensionE
 6808 0008 00000000 		.word	_ZTIN3ros3MsgE
 6809              		.weak	_ZTSN8std_msgs16MultiArrayLayoutE
 6810              		.section	.rodata._ZTSN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTSN8std_msgs16MultiArrayLayout
 6813              	_ZTSN8std_msgs16MultiArrayLayoutE:
 6814 0000 4E387374 		.ascii	"N8std_msgs16MultiArrayLayoutE\000"
 6814      645F6D73 
 6814      67733136 
 6814      4D756C74 
 6814      69417272 
 6815              		.weak	_ZTIN8std_msgs16MultiArrayLayoutE
 6816              		.section	.rodata._ZTIN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTIN8std_msgs16MultiArrayLayout
 6817              		.align	2
 6820              	_ZTIN8std_msgs16MultiArrayLayoutE:
 6821 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6822 0004 00000000 		.word	_ZTSN8std_msgs16MultiArrayLayoutE
 6823 0008 00000000 		.word	_ZTIN3ros3MsgE
 6824              		.weak	_ZTSN8std_msgs17Float32MultiArrayE
 6825              		.section	.rodata._ZTSN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTSN8std_msgs17Float32MultiArr
 6828              	_ZTSN8std_msgs17Float32MultiArrayE:
 6829 0000 4E387374 		.ascii	"N8std_msgs17Float32MultiArrayE\000"
 6829      645F6D73 
 6829      67733137 
 6829      466C6F61 
 6829      7433324D 
 6830              		.weak	_ZTIN8std_msgs17Float32MultiArrayE
 6831              		.section	.rodata._ZTIN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTIN8std_msgs17Float32MultiArr
 6832              		.align	2
 6835              	_ZTIN8std_msgs17Float32MultiArrayE:
 6836 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6837 0004 00000000 		.word	_ZTSN8std_msgs17Float32MultiArrayE
 6838 0008 00000000 		.word	_ZTIN3ros3MsgE
 6839              		.weak	_ZTSN8std_msgs6HeaderE
 6840              		.section	.rodata._ZTSN8std_msgs6HeaderE,"aG",%progbits,_ZTSN8std_msgs6HeaderE,comdat
 6843              	_ZTSN8std_msgs6HeaderE:
 6844 0000 4E387374 		.ascii	"N8std_msgs6HeaderE\000"
 6844      645F6D73 
 6844      67733648 
 6844      65616465 
 6844      724500
 6845              		.weak	_ZTIN8std_msgs6HeaderE
 6846              		.section	.rodata._ZTIN8std_msgs6HeaderE,"aG",%progbits,_ZTIN8std_msgs6HeaderE,comdat
 6847              		.align	2
 6850              	_ZTIN8std_msgs6HeaderE:
 6851 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6852 0004 00000000 		.word	_ZTSN8std_msgs6HeaderE
 6853 0008 00000000 		.word	_ZTIN3ros3MsgE
 6854              		.weak	_ZTSN12roberto_msgs10MotorStateE
 6855              		.section	.rodata._ZTSN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTSN12roberto_msgs10MotorStateE,
 6858              	_ZTSN12roberto_msgs10MotorStateE:
 6859 0000 4E313272 		.ascii	"N12roberto_msgs10MotorStateE\000"
 6859      6F626572 
 6859      746F5F6D 
 6859      73677331 
 6859      304D6F74 
 6860              		.weak	_ZTIN12roberto_msgs10MotorStateE
 6861              		.section	.rodata._ZTIN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTIN12roberto_msgs10MotorStateE,
 6862              		.align	2
 6865              	_ZTIN12roberto_msgs10MotorStateE:
 6866 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6867 0004 00000000 		.word	_ZTSN12roberto_msgs10MotorStateE
 6868 0008 00000000 		.word	_ZTIN3ros3MsgE
 6869              		.weak	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
 6870              		.section	.rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE,"aG",%progbits
 6873              	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:
 6874 0000 4E33726F 		.ascii	"N3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi102"
 6874      7331314E 
 6874      6F646548 
 6874      616E646C 
 6874      655F4931 
 6875 0033 34454C69 		.ascii	"4ELi1024EEE\000"
 6875      31303234 
 6875      45454500 
 6876              		.weak	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
 6877              		.section	.rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE,"aG",%progbits
 6878              		.align	2
 6881              	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:
 6882 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6883 0004 00000000 		.word	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
 6884 0008 00000000 		.word	_ZTIN3ros15NodeHandleBase_E
 6885              		.weak	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 6886              		.section	.rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTSN3ros10Su
 6889              	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 6890 0000 4E33726F 		.ascii	"N3ros10SubscriberIN12roberto_msgs10MotorStateEEE\000"
 6890      73313053 
 6890      75627363 
 6890      72696265 
 6890      72494E31 
 6891              		.weak	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 6892              		.section	.rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTIN3ros10Su
 6893              		.align	2
 6896              	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 6897 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6898 0004 00000000 		.word	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 6899 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 6900              		.weak	_ZTVN8std_msgs4TimeE
 6901              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 6902              		.align	2
 6905              	_ZTVN8std_msgs4TimeE:
 6906 0000 00000000 		.word	0
 6907 0004 00000000 		.word	_ZTIN8std_msgs4TimeE
 6908 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 6909 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 6910 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 6911 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 6912              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 6913              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 6914              		.align	2
 6917              	_ZTVN14rosserial_msgs9TopicInfoE:
 6918 0000 00000000 		.word	0
 6919 0004 00000000 		.word	_ZTIN14rosserial_msgs9TopicInfoE
 6920 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 6921 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 6922 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 6923 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 6924              		.weak	_ZTVN14rosserial_msgs3LogE
 6925              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 6926              		.align	2
 6929              	_ZTVN14rosserial_msgs3LogE:
 6930 0000 00000000 		.word	0
 6931 0004 00000000 		.word	_ZTIN14rosserial_msgs3LogE
 6932 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 6933 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 6934 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 6935 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 6936              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 6937              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 6938              		.align	2
 6941              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 6942 0000 00000000 		.word	0
 6943 0004 00000000 		.word	_ZTIN14rosserial_msgs20RequestParamResponseE
 6944 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 6945 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 6946 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 6947 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 6948              		.weak	_ZTVN8std_msgs19MultiArrayDimensionE
 6949              		.section	.rodata._ZTVN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTVN8std_msgs19MultiArrayDim
 6950              		.align	2
 6953              	_ZTVN8std_msgs19MultiArrayDimensionE:
 6954 0000 00000000 		.word	0
 6955 0004 00000000 		.word	_ZTIN8std_msgs19MultiArrayDimensionE
 6956 0008 00000000 		.word	_ZNK8std_msgs19MultiArrayDimension9serializeEPh
 6957 000c 00000000 		.word	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 6958 0010 00000000 		.word	_ZN8std_msgs19MultiArrayDimension7getTypeEv
 6959 0014 00000000 		.word	_ZN8std_msgs19MultiArrayDimension6getMD5Ev
 6960              		.weak	_ZTVN8std_msgs16MultiArrayLayoutE
 6961              		.section	.rodata._ZTVN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTVN8std_msgs16MultiArrayLayout
 6962              		.align	2
 6965              	_ZTVN8std_msgs16MultiArrayLayoutE:
 6966 0000 00000000 		.word	0
 6967 0004 00000000 		.word	_ZTIN8std_msgs16MultiArrayLayoutE
 6968 0008 00000000 		.word	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 6969 000c 00000000 		.word	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 6970 0010 00000000 		.word	_ZN8std_msgs16MultiArrayLayout7getTypeEv
 6971 0014 00000000 		.word	_ZN8std_msgs16MultiArrayLayout6getMD5Ev
 6972              		.weak	_ZTVN8std_msgs17Float32MultiArrayE
 6973              		.section	.rodata._ZTVN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTVN8std_msgs17Float32MultiArr
 6974              		.align	2
 6977              	_ZTVN8std_msgs17Float32MultiArrayE:
 6978 0000 00000000 		.word	0
 6979 0004 00000000 		.word	_ZTIN8std_msgs17Float32MultiArrayE
 6980 0008 00000000 		.word	_ZNK8std_msgs17Float32MultiArray9serializeEPh
 6981 000c 00000000 		.word	_ZN8std_msgs17Float32MultiArray11deserializeEPh
 6982 0010 00000000 		.word	_ZN8std_msgs17Float32MultiArray7getTypeEv
 6983 0014 00000000 		.word	_ZN8std_msgs17Float32MultiArray6getMD5Ev
 6984              		.weak	_ZTVN8std_msgs6HeaderE
 6985              		.section	.rodata._ZTVN8std_msgs6HeaderE,"aG",%progbits,_ZTVN8std_msgs6HeaderE,comdat
 6986              		.align	2
 6989              	_ZTVN8std_msgs6HeaderE:
 6990 0000 00000000 		.word	0
 6991 0004 00000000 		.word	_ZTIN8std_msgs6HeaderE
 6992 0008 00000000 		.word	_ZNK8std_msgs6Header9serializeEPh
 6993 000c 00000000 		.word	_ZN8std_msgs6Header11deserializeEPh
 6994 0010 00000000 		.word	_ZN8std_msgs6Header7getTypeEv
 6995 0014 00000000 		.word	_ZN8std_msgs6Header6getMD5Ev
 6996              		.weak	_ZTVN12roberto_msgs10MotorStateE
 6997              		.section	.rodata._ZTVN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTVN12roberto_msgs10MotorStateE,
 6998              		.align	2
 7001              	_ZTVN12roberto_msgs10MotorStateE:
 7002 0000 00000000 		.word	0
 7003 0004 00000000 		.word	_ZTIN12roberto_msgs10MotorStateE
 7004 0008 00000000 		.word	_ZNK12roberto_msgs10MotorState9serializeEPh
 7005 000c 00000000 		.word	_ZN12roberto_msgs10MotorState11deserializeEPh
 7006 0010 00000000 		.word	_ZN12roberto_msgs10MotorState7getTypeEv
 7007 0014 00000000 		.word	_ZN12roberto_msgs10MotorState6getMD5Ev
 7008              		.weak	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
 7009              		.section	.rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE,"aG",%progbits
 7010              		.align	2
 7013              	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:
 7014 0000 00000000 		.word	0
 7015 0004 00000000 		.word	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
 7016 0008 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE
 7017 000c 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv
 7018 0010 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv
 7019              		.weak	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7020              		.section	.rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTVN3ros10Su
 7021              		.align	2
 7024              	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 7025 0000 00000000 		.word	0
 7026 0004 00000000 		.word	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7027 0008 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 7028 000c 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 7029 0010 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 7030 0014 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 7031              		.global	odom_pub
 7032              		.global	odom_msg
 7033              		.global	debug_pub
 7034              		.global	debug_msg
 7035              		.global	motor_sub
 7036              		.global	spinningAutonomously
 7037              		.global	waitForServos
 7038              		.global	shuttingDown
 7039              		.global	debugDim
 7040              		.global	odomDim
 7041              		.global	nh
 7042              		.global	initialized
 7043              		.global	lastMsg
 7044              		.global	currentMode
 7045              		.global	spinAngle
 7046              		.global	motorCmd
 7047              		.global	L
 7048              		.global	d
 7049              		.global	rear_left
 7050              		.global	rear_right
 7051              		.global	front_left
 7052              		.global	front_right
 7053              		.global	servo_right
 7054              		.global	servo_left
 7055              		.global	USART_CNTOUT
 7056              		.global	USART_CNTIN
 7057              		.global	USART_FIFO
 7058              		.section	.rodata
 7059              		.align	2
 7060              		.set	.LANCHOR0,. + 0
 7063              	_ZN14rosserial_msgsL12REQUESTPARAME:
 7064 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 7064      65726961 
 7064      6C5F6D73 
 7064      67732F52 
 7064      65717565 
 7065              	.LC1:
 7066 001c DB0F49BF 		.word	-1085730853
 7067 0020 DB0F493F 		.word	1061752795
 7068 0024 E4CB1640 		.word	1075235812
 7069 0028 E4CB16C0 		.word	-1072247836
 7070              		.section	.rodata.str1.1,"aMS",%progbits,1
 7071              	.LC2:
 7072 0000 7374645F 		.ascii	"std_msgs/Time\000"
 7072      6D736773 
 7072      2F54696D 
 7072      6500
 7073              	.LC3:
 7074 000e 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 7074      36366337 
 7074      34633535 
 7074      32633331 
 7074      31666263 
 7075              	.LC4:
 7076 002f 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 7076      65726961 
 7076      6C5F6D73 
 7076      67732F54 
 7076      6F706963 
 7077              	.LC5:
 7078 0048 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 7078      31663838 
 7078      66633434 
 7078      38393266 
 7078      38633130 
 7079              	.LC6:
 7080 0069 726F7373 		.ascii	"rosserial_msgs/Log\000"
 7080      65726961 
 7080      6C5F6D73 
 7080      67732F4C 
 7080      6F6700
 7081              	.LC7:
 7082 007c 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 7082      64373331 
 7082      63323539 
 7082      33333236 
 7082      31636436 
 7083              	.LC8:
 7084 009d 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 7084      39386264 
 7084      61363539 
 7084      38313938 
 7084      36646466 
 7085              	.LC9:
 7086 00be 7374645F 		.ascii	"std_msgs/MultiArrayDimension\000"
 7086      6D736773 
 7086      2F4D756C 
 7086      74694172 
 7086      72617944 
 7087              	.LC10:
 7088 00db 34636430 		.ascii	"4cd0c83a8683deae40ecdac60e53bfa8\000"
 7088      63383361 
 7088      38363833 
 7088      64656165 
 7088      34306563 
 7089              	.LC11:
 7090 00fc 7374645F 		.ascii	"std_msgs/MultiArrayLayout\000"
 7090      6D736773 
 7090      2F4D756C 
 7090      74694172 
 7090      7261794C 
 7091              	.LC12:
 7092 0116 30666564 		.ascii	"0fed2a11c13e11c5571b4e2a995a91a3\000"
 7092      32613131 
 7092      63313365 
 7092      31316335 
 7092      35373162 
 7093              	.LC13:
 7094 0137 7374645F 		.ascii	"std_msgs/Float32MultiArray\000"
 7094      6D736773 
 7094      2F466C6F 
 7094      61743332 
 7094      4D756C74 
 7095              	.LC14:
 7096 0152 36613430 		.ascii	"6a40e0ffa6a17a503ac3f8616991b1f6\000"
 7096      65306666 
 7096      61366131 
 7096      37613530 
 7096      33616333 
 7097              	.LC15:
 7098 0173 7374645F 		.ascii	"std_msgs/Header\000"
 7098      6D736773 
 7098      2F486561 
 7098      64657200 
 7099              	.LC16:
 7100 0183 32313736 		.ascii	"2176decaecbce78abc3b96ef049fabed\000"
 7100      64656361 
 7100      65636263 
 7100      65373861 
 7100      62633362 
 7101              	.LC17:
 7102 01a4 726F6265 		.ascii	"roberto_msgs/MotorState\000"
 7102      72746F5F 
 7102      6D736773 
 7102      2F4D6F74 
 7102      6F725374 
 7103              	.LC18:
 7104 01bc 65386235 		.ascii	"e8b5d1162b85151c49e02b8224796c0e\000"
 7104      64313136 
 7104      32623835 
 7104      31353163 
 7104      34396530 
 7105              	.LC19:
 7106 01dd 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 7106      61676520 
 7106      66726F6D 
 7106      20646576 
 7106      69636520 
 7107 0210 66666572 		.ascii	"ffer.\000"
 7107      2E00
 7108              	.LC20:
 7109 0216 00       		.ascii	"\000"
 7110              	.LC21:
 7111 0217 73657276 		.ascii	"servo_left\000"
 7111      6F5F6C65 
 7111      667400
 7112              	.LC22:
 7113 0222 73657276 		.ascii	"servo_right\000"
 7113      6F5F7269 
 7113      67687400 
 7114              	.LC23:
 7115 022e 66726F6E 		.ascii	"front_right\000"
 7115      745F7269 
 7115      67687400 
 7116              	.LC24:
 7117 023a 66726F6E 		.ascii	"front_left\000"
 7117      745F6C65 
 7117      667400
 7118              	.LC25:
 7119 0245 72656172 		.ascii	"rear_left\000"
 7119      5F6C6566 
 7119      7400
 7120              	.LC26:
 7121 024f 72656172 		.ascii	"rear_right\000"
 7121      5F726967 
 7121      687400
 7122              	.LC27:
 7123 025a 636D645F 		.ascii	"cmd_vel\000"
 7123      76656C00 
 7124              	.LC28:
 7125 0262 64656275 		.ascii	"debug\000"
 7125      6700
 7126              	.LC29:
 7127 0268 6F646F6D 		.ascii	"odom_vel\000"
 7127      5F76656C 
 7127      00
 7128              		.data
 7129              		.set	.LANCHOR2,. + 0
 7132              	currentMode:
 7133 0000 01       		.byte	1
 7134              		.bss
 7135              		.align	2
 7136              		.set	.LANCHOR1,. + 0
 7139              	initialized:
 7140 0000 00       		.space	1
 7141 0001 000000   		.space	3
 7144              	lastMsg:
 7145 0004 00000000 		.space	4
 7148              	waitForServos:
 7149 0008 00       		.space	1
 7150 0009 000000   		.space	3
 7153              	L:
 7154 000c 00000000 		.space	4
 7157              	d:
 7158 0010 00000000 		.space	4
 7161              	servo_left:
 7162 0014 00000000 		.space	4
 7165              	servo_right:
 7166 0018 00000000 		.space	4
 7169              	motorCmd:
 7170 001c 00000000 		.space	16
 7170      00000000 
 7170      00000000 
 7170      00000000 
 7173              	spinAngle:
 7174 002c 00000000 		.space	4
 7177              	spinningAutonomously:
 7178 0030 00       		.space	1
 7179 0031 000000   		.space	3
 7182              	USART_CNTOUT:
 7183 0034 00000000 		.space	4
 7186              	USART_CNTIN:
 7187 0038 00000000 		.space	4
 7190              	USART_FIFO:
 7191 003c 00000000 		.space	1024
 7191      00000000 
 7191      00000000 
 7191      00000000 
 7191      00000000 
 7194              	shuttingDown:
 7195 043c 00       		.space	1
 7196 043d 000000   		.space	3
 7199              	nh:
 7200 0440 00000000 		.space	2352
 7200      00000000 
 7200      00000000 
 7200      00000000 
 7200      00000000 
 7203              	motor_sub:
 7204 0d70 00000000 		.space	64
 7204      00000000 
 7204      00000000 
 7204      00000000 
 7204      00000000 
 7207              	odom_pub:
 7208 0db0 00000000 		.space	20
 7208      00000000 
 7208      00000000 
 7208      00000000 
 7208      00000000 
 7211              	debug_pub:
 7212 0dc4 00000000 		.space	20
 7212      00000000 
 7212      00000000 
 7212      00000000 
 7212      00000000 
 7215              	front_left:
 7216 0dd8 00000000 		.space	4
 7219              	front_right:
 7220 0ddc 00000000 		.space	4
 7223              	rear_left:
 7224 0de0 00000000 		.space	4
 7227              	rear_right:
 7228 0de4 00000000 		.space	4
 7231              	odom_msg:
 7232 0de8 00000000 		.space	48
 7232      00000000 
 7232      00000000 
 7232      00000000 
 7232      00000000 
 7235              	odomDim:
 7236 0e18 00000000 		.space	16
 7236      00000000 
 7236      00000000 
 7236      00000000 
 7239              	debug_msg:
 7240 0e28 00000000 		.space	48
 7240      00000000 
 7240      00000000 
 7240      00000000 
 7240      00000000 
 7243              	debugDim:
 7244 0e58 00000000 		.space	16
 7244      00000000 
 7244      00000000 
 7244      00000000 
 7245              		.text
 7246              	.Letext0:
 7247              		.file 18 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 7248              		.file 19 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types.h"
 7249              		.file 20 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 7250              		.file 21 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdint.h"
 7251              		.file 22 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 7252              		.file 23 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_usart.h"
 7253              		.file 24 "/opt/gcc-arm-none-eabi-5_2-2015q4/lib/gcc/arm-none-eabi/5.2.1/include/stddef.h"
 7254              		.file 25 "/opt/gcc-arm-none-eabi-5_2-2015q4/lib/gcc/arm-none-eabi/5.2.1/include/stdarg.h"
 7255              		.file 26 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/lock.h"
 7256              		.file 27 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_types.h"
 7257              		.file 28 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/reent.h"
 7258              		.file 29 "<built-in>"
 7259              		.file 30 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/type_traits"
 7260              		.file 31 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/exception_ptr.h"
 7261              		.file 32 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/arm-none-eabi/armv7-m/
 7262              		.file 33 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/debug/debug.h"
 7263              		.file 34 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/cwchar"
 7264              		.file 35 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/cstdint"
 7265              		.file 36 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/clocale"
 7266              		.file 37 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/stl_pair.h"
 7267              		.file 38 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/uses_allocator.h"
 7268              		.file 39 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/tuple"
 7269              		.file 40 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/predefined_ops.h"
 7270              		.file 41 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/ext/new_allocator.h"
 7271              		.file 42 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/ext/numeric_traits.h"
 7272              		.file 43 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/wchar.h"
 7273              		.file 44 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/locale.h"
 7274              		.file 45 "./inc/motorSettings.h"
 7275              		.file 46 "./lib/ros_lib/ros/duration.h"
 7276              		.file 47 "./lib/ros_lib/ros.h"
 7277              		.file 48 "./lib/ros_lib/geometry_msgs/Point.h"
 7278              		.file 49 "./lib/ros_lib/geometry_msgs/TransformStamped.h"
 7279              		.file 50 "./lib/ros_lib/geometry_msgs/Transform.h"
 7280              		.file 51 "./lib/ros_lib/geometry_msgs/Vector3.h"
 7281              		.file 52 "./lib/ros_lib/geometry_msgs/Quaternion.h"
 7282              		.file 53 "./lib/ros_lib/sensor_msgs/Joy.h"
 7283              		.file 54 "./lib/ros_lib/nav_msgs/Odometry.h"
 7284              		.file 55 "./inc/motor.h"
 7285              		.file 56 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/string.h"
 7286              		.file 57 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdlib.h"
 7287              		.file 58 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/math.h"
 7288              		.file 59 "./inc/stm32_time.h"
 7289              		.file 60 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 7290              		.file 61 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_exti.h"
 7291              		.file 62 "./inc/led.h"
 7292              		.file 63 "./inc/encoder.h"
 7293              		.file 64 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/new"
 7294              		.file 65 "./lib/ros_lib/tf/tf.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/ccEzVTHg.s:20     .text._ZNK8std_msgs4Time9serializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:25     .text._ZNK8std_msgs4Time9serializeEPh:00000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:75     .text._ZN8std_msgs4Time11deserializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:80     .text._ZN8std_msgs4Time11deserializeEPh:00000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:131    .text._ZN8std_msgs4Time7getTypeEv:00000000 $t
     /tmp/ccEzVTHg.s:136    .text._ZN8std_msgs4Time7getTypeEv:00000000 _ZN8std_msgs4Time7getTypeEv
     /tmp/ccEzVTHg.s:152    .text._ZN8std_msgs4Time7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:00000000 $d
     /tmp/ccEzVTHg.s:159    .text._ZN8std_msgs4Time6getMD5Ev:00000000 $t
     /tmp/ccEzVTHg.s:164    .text._ZN8std_msgs4Time6getMD5Ev:00000000 _ZN8std_msgs4Time6getMD5Ev
     /tmp/ccEzVTHg.s:180    .text._ZN8std_msgs4Time6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:00000000 $d
     /tmp/ccEzVTHg.s:187    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $t
     /tmp/ccEzVTHg.s:192    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
     /tmp/ccEzVTHg.s:209    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $d
     /tmp/ccEzVTHg.s:216    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $t
     /tmp/ccEzVTHg.s:221    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
     /tmp/ccEzVTHg.s:237    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $d
     /tmp/ccEzVTHg.s:244    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $t
     /tmp/ccEzVTHg.s:249    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 _ZN14rosserial_msgs3Log7getTypeEv
     /tmp/ccEzVTHg.s:266    .text._ZN14rosserial_msgs3Log7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $d
     /tmp/ccEzVTHg.s:273    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $t
     /tmp/ccEzVTHg.s:278    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 _ZN14rosserial_msgs3Log6getMD5Ev
     /tmp/ccEzVTHg.s:294    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $d
     /tmp/ccEzVTHg.s:301    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $t
     /tmp/ccEzVTHg.s:306    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
     /tmp/ccEzVTHg.s:323    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $d
     /tmp/ccEzVTHg.s:330    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $t
     /tmp/ccEzVTHg.s:335    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
     /tmp/ccEzVTHg.s:351    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $d
     /tmp/ccEzVTHg.s:358    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 $t
     /tmp/ccEzVTHg.s:363    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 _ZN8std_msgs19MultiArrayDimension7getTypeEv
     /tmp/ccEzVTHg.s:380    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 $d
     /tmp/ccEzVTHg.s:387    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 $t
     /tmp/ccEzVTHg.s:392    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 _ZN8std_msgs19MultiArrayDimension6getMD5Ev
     /tmp/ccEzVTHg.s:408    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 $d
     /tmp/ccEzVTHg.s:415    .text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:420    .text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 _ZNK8std_msgs16MultiArrayLayout9serializeEPh
.ARM.exidx.text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:513    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 $t
     /tmp/ccEzVTHg.s:518    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 _ZN8std_msgs16MultiArrayLayout7getTypeEv
     /tmp/ccEzVTHg.s:534    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 $d
     /tmp/ccEzVTHg.s:541    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 $t
     /tmp/ccEzVTHg.s:546    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 _ZN8std_msgs16MultiArrayLayout6getMD5Ev
     /tmp/ccEzVTHg.s:562    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 $d
     /tmp/ccEzVTHg.s:569    .text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:574    .text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 _ZNK8std_msgs17Float32MultiArray9serializeEPh
.ARM.exidx.text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:666    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 $t
     /tmp/ccEzVTHg.s:671    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 _ZN8std_msgs17Float32MultiArray7getTypeEv
     /tmp/ccEzVTHg.s:687    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 $d
     /tmp/ccEzVTHg.s:694    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 $t
     /tmp/ccEzVTHg.s:699    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 _ZN8std_msgs17Float32MultiArray6getMD5Ev
     /tmp/ccEzVTHg.s:715    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 $d
     /tmp/ccEzVTHg.s:722    .text._ZN8std_msgs6Header7getTypeEv:00000000 $t
     /tmp/ccEzVTHg.s:727    .text._ZN8std_msgs6Header7getTypeEv:00000000 _ZN8std_msgs6Header7getTypeEv
     /tmp/ccEzVTHg.s:744    .text._ZN8std_msgs6Header7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header7getTypeEv:00000000 $d
     /tmp/ccEzVTHg.s:751    .text._ZN8std_msgs6Header6getMD5Ev:00000000 $t
     /tmp/ccEzVTHg.s:756    .text._ZN8std_msgs6Header6getMD5Ev:00000000 _ZN8std_msgs6Header6getMD5Ev
     /tmp/ccEzVTHg.s:772    .text._ZN8std_msgs6Header6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header6getMD5Ev:00000000 $d
     /tmp/ccEzVTHg.s:779    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $t
     /tmp/ccEzVTHg.s:784    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 _ZN12roberto_msgs10MotorState7getTypeEv
     /tmp/ccEzVTHg.s:801    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $d
     /tmp/ccEzVTHg.s:808    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $t
     /tmp/ccEzVTHg.s:813    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 _ZN12roberto_msgs10MotorState6getMD5Ev
     /tmp/ccEzVTHg.s:829    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $d
     /tmp/ccEzVTHg.s:836    .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv:00000000 $t
     /tmp/ccEzVTHg.s:841    .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv:00000000 $d
     /tmp/ccEzVTHg.s:861    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $t
     /tmp/ccEzVTHg.s:866    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $d
     /tmp/ccEzVTHg.s:886    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $t
     /tmp/ccEzVTHg.s:891    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
     /tmp/ccEzVTHg.s:907    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $d
     /tmp/ccEzVTHg.s:914    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $t
     /tmp/ccEzVTHg.s:919    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
     /tmp/ccEzVTHg.s:935    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $d
     /tmp/ccEzVTHg.s:942    .text._ZNK8std_msgs6Header9serializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:947    .text._ZNK8std_msgs6Header9serializeEPh:00000000 _ZNK8std_msgs6Header9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6Header9serializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:1046   .text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:1051   .text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 _ZNK8std_msgs19MultiArrayDimension9serializeEPh
.ARM.exidx.text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:1134   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:1139   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:1352   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:1357   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:1416   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:1421   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:1556   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:1561   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:1635   .text._ZN8std_msgs6Header11deserializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:1640   .text._ZN8std_msgs6Header11deserializeEPh:00000000 _ZN8std_msgs6Header11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6Header11deserializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:1753   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:1758   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:1946   .text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:1951   .text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 _ZN8std_msgs19MultiArrayDimension11deserializeEPh
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:2053   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:2058   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:2313   .text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:2318   .text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 _ZN8std_msgs16MultiArrayLayout11deserializeEPh
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:2432   .text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:2437   .text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 _ZN8std_msgs17Float32MultiArray11deserializeEPh
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:2553   .text:00000000 $t
     /tmp/ccEzVTHg.s:2558   .text:00000000 _Z8motor_cbRKN12roberto_msgs10MotorStateE
     /tmp/ccEzVTHg.s:2997   .text:00000258 $d
                       .ARM.exidx:00000000 $d
     /tmp/ccEzVTHg.s:3014   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:00000000 $t
     /tmp/ccEzVTHg.s:3019   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE
     /tmp/ccEzVTHg.s:3223   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:000000d0 $d
     /tmp/ccEzVTHg.s:6929   .rodata._ZTVN14rosserial_msgs3LogE:00000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:00000000 $d
     /tmp/ccEzVTHg.s:3231   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $t
     /tmp/ccEzVTHg.s:3236   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 _ZN3ros3Msg19serializeAvrFloat64EPhf
.ARM.exidx.text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $d
     /tmp/ccEzVTHg.s:3323   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:3328   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 _ZNK12roberto_msgs10MotorState9serializeEPh
.ARM.exidx.text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:3400   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $t
     /tmp/ccEzVTHg.s:3405   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 _ZN3ros3Msg21deserializeAvrFloat64EPKhPf
.ARM.exidx.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $d
     /tmp/ccEzVTHg.s:3477   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $t
     /tmp/ccEzVTHg.s:3482   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 _ZN12roberto_msgs10MotorState11deserializeEPh
.ARM.exidx.text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $d
     /tmp/ccEzVTHg.s:3556   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $t
     /tmp/ccEzVTHg.s:3561   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $d
     /tmp/ccEzVTHg.s:3605   .text._ZN3ros9Publisher7publishEPKNS_3MsgE:00000000 $t
     /tmp/ccEzVTHg.s:3610   .text._ZN3ros9Publisher7publishEPKNS_3MsgE:00000000 _ZN3ros9Publisher7publishEPKNS_3MsgE
.ARM.exidx.text._ZN3ros9Publisher7publishEPKNS_3MsgE:00000000 $d
     /tmp/ccEzVTHg.s:3646   .text._ZN15ArduinoHardware4initEv:00000000 $t
     /tmp/ccEzVTHg.s:3651   .text._ZN15ArduinoHardware4initEv:00000000 _ZN15ArduinoHardware4initEv
     /tmp/ccEzVTHg.s:3768   .text._ZN15ArduinoHardware4initEv:0000008c $d
.ARM.exidx.text._ZN15ArduinoHardware4initEv:00000000 $d
     /tmp/ccEzVTHg.s:3775   .text:00000288 $t
     /tmp/ccEzVTHg.s:3780   .text:00000288 USART1_IRQHandler
     /tmp/ccEzVTHg.s:3843   .text:000002d0 $d
     /tmp/ccEzVTHg.s:3849   .text:000002d8 $t
     /tmp/ccEzVTHg.s:3854   .text:000002d8 EXTI2_IRQHandler
     /tmp/ccEzVTHg.s:3895   .text:000002f8 $d
                       .ARM.extab:00000000 $d
     /tmp/ccEzVTHg.s:3900   .text:000002fc $t
     /tmp/ccEzVTHg.s:3905   .text:000002fc HardFault_Handler
     /tmp/ccEzVTHg.s:3923   .text:0000030c _MSP
     /tmp/ccEzVTHg.s:3942   .text:00000314 hard_fault_handler_c
     /tmp/ccEzVTHg.s:3992   .text:0000033c $d
     /tmp/ccEzVTHg.s:4002   .text:00000344 $t
     /tmp/ccEzVTHg.s:4007   .text:00000344 _Z13assert_failedPhm
     /tmp/ccEzVTHg.s:4025   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:00000000 $t
     /tmp/ccEzVTHg.s:4030   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
     /tmp/ccEzVTHg.s:4101   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:00000024 $d
     /tmp/ccEzVTHg.s:6905   .rodata._ZTVN8std_msgs4TimeE:00000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:00000000 $d
     /tmp/ccEzVTHg.s:4107   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:00000000 $t
     /tmp/ccEzVTHg.s:4112   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv
     /tmp/ccEzVTHg.s:4274   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:000000b4 $d
     /tmp/ccEzVTHg.s:6917   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 _ZTVN14rosserial_msgs9TopicInfoE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:00000000 $d
     /tmp/ccEzVTHg.s:4281   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:00000000 $t
     /tmp/ccEzVTHg.s:4286   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh
     /tmp/ccEzVTHg.s:4419   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:00000074 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:00000000 $d
     /tmp/ccEzVTHg.s:4427   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:00000000 $t
     /tmp/ccEzVTHg.s:4432   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv
     /tmp/ccEzVTHg.s:4794   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:00000208 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:00000000 $d
     /tmp/ccEzVTHg.s:4803   .text.startup:00000000 $t
     /tmp/ccEzVTHg.s:4808   .text.startup:00000000 main
     /tmp/ccEzVTHg.s:4980   .text.startup:000000b4 $d
     /tmp/ccEzVTHg.s:4989   .text.startup:000000cc $t
     /tmp/ccEzVTHg.s:5418   .text.startup:000003a8 $d
     /tmp/ccEzVTHg.s:5445   .text.startup:00000408 $t
     /tmp/ccEzVTHg.s:5610   .text.startup:000004f0 $d
     /tmp/ccEzVTHg.s:5616   .text.startup:000004fc $t
     /tmp/ccEzVTHg.s:6096   .text.startup:00000850 $d
     /tmp/ccEzVTHg.s:6107   .text.startup:0000086c $t
     /tmp/ccEzVTHg.s:6175   .text.startup:000008cc $d
          .ARM.exidx.text.startup:00000000 $d
     /tmp/ccEzVTHg.s:6183   .text.startup:000008d8 $t
     /tmp/ccEzVTHg.s:6187   .text.startup:000008d8 _GLOBAL__sub_I_USART_FIFO
     /tmp/ccEzVTHg.s:6663   .text.startup:00000a50 $d
     /tmp/ccEzVTHg.s:7013   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:00000000 _ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
     /tmp/ccEzVTHg.s:6941   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 _ZTVN14rosserial_msgs20RequestParamResponseE
     /tmp/ccEzVTHg.s:7024   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccEzVTHg.s:7001   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 _ZTVN12roberto_msgs10MotorStateE
     /tmp/ccEzVTHg.s:6953   .rodata._ZTVN8std_msgs19MultiArrayDimensionE:00000000 _ZTVN8std_msgs19MultiArrayDimensionE
     /tmp/ccEzVTHg.s:6989   .rodata._ZTVN8std_msgs6HeaderE:00000000 _ZTVN8std_msgs6HeaderE
     /tmp/ccEzVTHg.s:6977   .rodata._ZTVN8std_msgs17Float32MultiArrayE:00000000 _ZTVN8std_msgs17Float32MultiArrayE
     /tmp/ccEzVTHg.s:6965   .rodata._ZTVN8std_msgs16MultiArrayLayoutE:00000000 _ZTVN8std_msgs16MultiArrayLayoutE
     /tmp/ccEzVTHg.s:6690   .init_array:00000000 $d
     /tmp/ccEzVTHg.s:6696   .rodata._ZTSN3ros3MsgE:00000000 _ZTSN3ros3MsgE
     /tmp/ccEzVTHg.s:6703   .rodata._ZTIN3ros3MsgE:00000000 _ZTIN3ros3MsgE
     /tmp/ccEzVTHg.s:6700   .rodata._ZTIN3ros3MsgE:00000000 $d
     /tmp/ccEzVTHg.s:6710   .rodata._ZTSN8std_msgs4TimeE:00000000 _ZTSN8std_msgs4TimeE
     /tmp/ccEzVTHg.s:6717   .rodata._ZTIN8std_msgs4TimeE:00000000 _ZTIN8std_msgs4TimeE
     /tmp/ccEzVTHg.s:6714   .rodata._ZTIN8std_msgs4TimeE:00000000 $d
     /tmp/ccEzVTHg.s:6725   .rodata._ZTSN14rosserial_msgs9TopicInfoE:00000000 _ZTSN14rosserial_msgs9TopicInfoE
     /tmp/ccEzVTHg.s:6732   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 _ZTIN14rosserial_msgs9TopicInfoE
     /tmp/ccEzVTHg.s:6729   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/ccEzVTHg.s:6740   .rodata._ZTSN14rosserial_msgs3LogE:00000000 _ZTSN14rosserial_msgs3LogE
     /tmp/ccEzVTHg.s:6747   .rodata._ZTIN14rosserial_msgs3LogE:00000000 _ZTIN14rosserial_msgs3LogE
     /tmp/ccEzVTHg.s:6744   .rodata._ZTIN14rosserial_msgs3LogE:00000000 $d
     /tmp/ccEzVTHg.s:6755   .rodata._ZTSN14rosserial_msgs20RequestParamResponseE:00000000 _ZTSN14rosserial_msgs20RequestParamResponseE
     /tmp/ccEzVTHg.s:6762   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 _ZTIN14rosserial_msgs20RequestParamResponseE
     /tmp/ccEzVTHg.s:6759   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/ccEzVTHg.s:6770   .rodata._ZTSN3ros15NodeHandleBase_E:00000000 _ZTSN3ros15NodeHandleBase_E
     /tmp/ccEzVTHg.s:6777   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 _ZTIN3ros15NodeHandleBase_E
     /tmp/ccEzVTHg.s:6774   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 $d
     /tmp/ccEzVTHg.s:6784   .rodata._ZTSN3ros11Subscriber_E:00000000 _ZTSN3ros11Subscriber_E
     /tmp/ccEzVTHg.s:6791   .rodata._ZTIN3ros11Subscriber_E:00000000 _ZTIN3ros11Subscriber_E
     /tmp/ccEzVTHg.s:6788   .rodata._ZTIN3ros11Subscriber_E:00000000 $d
     /tmp/ccEzVTHg.s:6798   .rodata._ZTSN8std_msgs19MultiArrayDimensionE:00000000 _ZTSN8std_msgs19MultiArrayDimensionE
     /tmp/ccEzVTHg.s:6805   .rodata._ZTIN8std_msgs19MultiArrayDimensionE:00000000 _ZTIN8std_msgs19MultiArrayDimensionE
     /tmp/ccEzVTHg.s:6802   .rodata._ZTIN8std_msgs19MultiArrayDimensionE:00000000 $d
     /tmp/ccEzVTHg.s:6813   .rodata._ZTSN8std_msgs16MultiArrayLayoutE:00000000 _ZTSN8std_msgs16MultiArrayLayoutE
     /tmp/ccEzVTHg.s:6820   .rodata._ZTIN8std_msgs16MultiArrayLayoutE:00000000 _ZTIN8std_msgs16MultiArrayLayoutE
     /tmp/ccEzVTHg.s:6817   .rodata._ZTIN8std_msgs16MultiArrayLayoutE:00000000 $d
     /tmp/ccEzVTHg.s:6828   .rodata._ZTSN8std_msgs17Float32MultiArrayE:00000000 _ZTSN8std_msgs17Float32MultiArrayE
     /tmp/ccEzVTHg.s:6835   .rodata._ZTIN8std_msgs17Float32MultiArrayE:00000000 _ZTIN8std_msgs17Float32MultiArrayE
     /tmp/ccEzVTHg.s:6832   .rodata._ZTIN8std_msgs17Float32MultiArrayE:00000000 $d
     /tmp/ccEzVTHg.s:6843   .rodata._ZTSN8std_msgs6HeaderE:00000000 _ZTSN8std_msgs6HeaderE
     /tmp/ccEzVTHg.s:6850   .rodata._ZTIN8std_msgs6HeaderE:00000000 _ZTIN8std_msgs6HeaderE
     /tmp/ccEzVTHg.s:6847   .rodata._ZTIN8std_msgs6HeaderE:00000000 $d
     /tmp/ccEzVTHg.s:6858   .rodata._ZTSN12roberto_msgs10MotorStateE:00000000 _ZTSN12roberto_msgs10MotorStateE
     /tmp/ccEzVTHg.s:6865   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 _ZTIN12roberto_msgs10MotorStateE
     /tmp/ccEzVTHg.s:6862   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/ccEzVTHg.s:6873   .rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:00000000 _ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
     /tmp/ccEzVTHg.s:6881   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:00000000 _ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
     /tmp/ccEzVTHg.s:6878   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:00000000 $d
     /tmp/ccEzVTHg.s:6889   .rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccEzVTHg.s:6896   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccEzVTHg.s:6893   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/ccEzVTHg.s:6902   .rodata._ZTVN8std_msgs4TimeE:00000000 $d
     /tmp/ccEzVTHg.s:6914   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/ccEzVTHg.s:6926   .rodata._ZTVN14rosserial_msgs3LogE:00000000 $d
     /tmp/ccEzVTHg.s:6938   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/ccEzVTHg.s:6950   .rodata._ZTVN8std_msgs19MultiArrayDimensionE:00000000 $d
     /tmp/ccEzVTHg.s:6962   .rodata._ZTVN8std_msgs16MultiArrayLayoutE:00000000 $d
     /tmp/ccEzVTHg.s:6974   .rodata._ZTVN8std_msgs17Float32MultiArrayE:00000000 $d
     /tmp/ccEzVTHg.s:6986   .rodata._ZTVN8std_msgs6HeaderE:00000000 $d
     /tmp/ccEzVTHg.s:6998   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/ccEzVTHg.s:7010   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:00000000 $d
     /tmp/ccEzVTHg.s:7021   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/ccEzVTHg.s:7207   .bss:00000db0 odom_pub
     /tmp/ccEzVTHg.s:7231   .bss:00000de8 odom_msg
     /tmp/ccEzVTHg.s:7211   .bss:00000dc4 debug_pub
     /tmp/ccEzVTHg.s:7239   .bss:00000e28 debug_msg
     /tmp/ccEzVTHg.s:7203   .bss:00000d70 motor_sub
     /tmp/ccEzVTHg.s:7177   .bss:00000030 spinningAutonomously
     /tmp/ccEzVTHg.s:7148   .bss:00000008 waitForServos
     /tmp/ccEzVTHg.s:7194   .bss:0000043c shuttingDown
     /tmp/ccEzVTHg.s:7243   .bss:00000e58 debugDim
     /tmp/ccEzVTHg.s:7235   .bss:00000e18 odomDim
     /tmp/ccEzVTHg.s:7199   .bss:00000440 nh
     /tmp/ccEzVTHg.s:7139   .bss:00000000 initialized
     /tmp/ccEzVTHg.s:7144   .bss:00000004 lastMsg
     /tmp/ccEzVTHg.s:7132   .data:00000000 currentMode
     /tmp/ccEzVTHg.s:7173   .bss:0000002c spinAngle
     /tmp/ccEzVTHg.s:7169   .bss:0000001c motorCmd
     /tmp/ccEzVTHg.s:7153   .bss:0000000c L
     /tmp/ccEzVTHg.s:7157   .bss:00000010 d
     /tmp/ccEzVTHg.s:7223   .bss:00000de0 rear_left
     /tmp/ccEzVTHg.s:7227   .bss:00000de4 rear_right
     /tmp/ccEzVTHg.s:7215   .bss:00000dd8 front_left
     /tmp/ccEzVTHg.s:7219   .bss:00000ddc front_right
     /tmp/ccEzVTHg.s:7165   .bss:00000018 servo_right
     /tmp/ccEzVTHg.s:7161   .bss:00000014 servo_left
     /tmp/ccEzVTHg.s:7182   .bss:00000034 USART_CNTOUT
     /tmp/ccEzVTHg.s:7186   .bss:00000038 USART_CNTIN
     /tmp/ccEzVTHg.s:7190   .bss:0000003c USART_FIFO
     /tmp/ccEzVTHg.s:7059   .rodata:00000000 $d
     /tmp/ccEzVTHg.s:7063   .rodata:00000000 _ZN14rosserial_msgsL12REQUESTPARAME
     /tmp/ccEzVTHg.s:7135   .bss:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_unwind_cpp_pr0
strlen
memcpy
realloc
__aeabi_fcmpeq
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
__aeabi_fadd
__aeabi_fmul
__aeabi_fsub
__aeabi_fdiv
__aeabi_dadd
__aeabi_fcmpgt
__aeabi_fcmplt
millis
sin
atan
USART_SendData
RCC_APB2PeriphClockCmd
GPIO_Init
USART_Cmd
USART_Init
USART_ITConfig
USART_GetITStatus
USART_ReceiveData
EXTI_GetITStatus
EXTI_ClearITPendingBit
__aeabi_unwind_cpp_pr1
RCC_APB1PeriphClockCmd
_ZN3ros16normalizeSecNSecERmS0_
__aeabi_f2iz
__aeabi_dsub
RCC_Configuration
SysTick_Init
GPIO_PinRemapConfig
I2C1_Init
DEBUG_Init
SHUTDOWN_Init
LED_Init
delay
_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
_ZN13motorSettings12setRegulatorEfffff
_ZN5motor11createMotorEP13motorSettings
_Znaj
led_set
sqrt
debug_toggle
cos
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
