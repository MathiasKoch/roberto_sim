   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  20              		.align	1
  21              		.weak	_ZNK8std_msgs4Time9serializeEPh
  22              		.thumb
  23              		.thumb_func
  25              	_ZNK8std_msgs4Time9serializeEPh:
  26              		.fnstart
  27              	.LFB54:
  28              		.file 1 "./lib/ros_lib/std_msgs/Time.h"
   1:./lib/ros_lib/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:./lib/ros_lib/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:./lib/ros_lib/std_msgs/Time.h **** 
   4:./lib/ros_lib/std_msgs/Time.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Time.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Time.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Time.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Time.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Time.h **** 
  10:./lib/ros_lib/std_msgs/Time.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Time.h **** {
  12:./lib/ros_lib/std_msgs/Time.h **** 
  13:./lib/ros_lib/std_msgs/Time.h ****   class Time : public ros::Msg
  14:./lib/ros_lib/std_msgs/Time.h ****   {
  15:./lib/ros_lib/std_msgs/Time.h ****     public:
  16:./lib/ros_lib/std_msgs/Time.h ****       ros::Time data;
  17:./lib/ros_lib/std_msgs/Time.h **** 
  18:./lib/ros_lib/std_msgs/Time.h ****     Time():
  19:./lib/ros_lib/std_msgs/Time.h ****       data()
  20:./lib/ros_lib/std_msgs/Time.h ****     {
  21:./lib/ros_lib/std_msgs/Time.h ****     }
  22:./lib/ros_lib/std_msgs/Time.h **** 
  23:./lib/ros_lib/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  29              		.loc 1 23 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  24:./lib/ros_lib/std_msgs/Time.h ****     {
  25:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  26:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  35              		.loc 1 26 0
  36 0000 4368     		ldr	r3, [r0, #4]
  37 0002 0B70     		strb	r3, [r1]
  27:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  38              		.loc 1 27 0
  39 0004 4368     		ldr	r3, [r0, #4]
  40 0006 1B0A     		lsrs	r3, r3, #8
  41 0008 4B70     		strb	r3, [r1, #1]
  28:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  42              		.loc 1 28 0
  43 000a C388     		ldrh	r3, [r0, #6]
  44 000c 8B70     		strb	r3, [r1, #2]
  29:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  45              		.loc 1 29 0
  46 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  47 0010 CB70     		strb	r3, [r1, #3]
  48              	.LVL1:
  30:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  31:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  49              		.loc 1 31 0
  50 0012 8368     		ldr	r3, [r0, #8]
  51 0014 0B71     		strb	r3, [r1, #4]
  32:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  52              		.loc 1 32 0
  53 0016 8368     		ldr	r3, [r0, #8]
  54 0018 1B0A     		lsrs	r3, r3, #8
  55 001a 4B71     		strb	r3, [r1, #5]
  33:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  56              		.loc 1 33 0
  57 001c 4389     		ldrh	r3, [r0, #10]
  58 001e 8B71     		strb	r3, [r1, #6]
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  59              		.loc 1 34 0
  60 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  35:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  36:./lib/ros_lib/std_msgs/Time.h ****       return offset;
  37:./lib/ros_lib/std_msgs/Time.h ****     }
  61              		.loc 1 37 0
  62 0022 0820     		movs	r0, #8
  63              	.LVL2:
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  64              		.loc 1 34 0
  65 0024 CB71     		strb	r3, [r1, #7]
  66              	.LVL3:
  67              		.loc 1 37 0
  68 0026 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE54:
  71              		.cantunwind
  72              		.fnend
  74              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  75              		.align	1
  76              		.weak	_ZN8std_msgs4Time11deserializeEPh
  77              		.thumb
  78              		.thumb_func
  80              	_ZN8std_msgs4Time11deserializeEPh:
  81              		.fnstart
  82              	.LFB55:
  38:./lib/ros_lib/std_msgs/Time.h **** 
  39:./lib/ros_lib/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  83              		.loc 1 39 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL4:
  40:./lib/ros_lib/std_msgs/Time.h ****     {
  41:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  42:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  89              		.loc 1 42 0
  90 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  91 0002 4360     		str	r3, [r0, #4]
  43:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  92              		.loc 1 43 0
  93 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  94 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  95 000a 4360     		str	r3, [r0, #4]
  44:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  96              		.loc 1 44 0
  97 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  98 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  99 0012 4360     		str	r3, [r0, #4]
  45:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 100              		.loc 1 45 0
 101 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 102 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 103 001a 4360     		str	r3, [r0, #4]
 104              	.LVL5:
  46:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  47:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 105              		.loc 1 47 0
 106 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 107 001e 8360     		str	r3, [r0, #8]
  48:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 108              		.loc 1 48 0
 109 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 110 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 111 0026 8360     		str	r3, [r0, #8]
  49:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 112              		.loc 1 49 0
 113 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 114 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 115 002e 8360     		str	r3, [r0, #8]
  50:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 116              		.loc 1 50 0
 117 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 118 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 119 0036 8360     		str	r3, [r0, #8]
 120              	.LVL6:
  51:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  52:./lib/ros_lib/std_msgs/Time.h ****      return offset;
  53:./lib/ros_lib/std_msgs/Time.h ****     }
 121              		.loc 1 53 0
 122 0038 0820     		movs	r0, #8
 123              	.LVL7:
 124 003a 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE55:
 127              		.cantunwind
 128              		.fnend
 130              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 131              		.align	1
 132              		.weak	_ZN8std_msgs4Time7getTypeEv
 133              		.thumb
 134              		.thumb_func
 136              	_ZN8std_msgs4Time7getTypeEv:
 137              		.fnstart
 138              	.LFB56:
  54:./lib/ros_lib/std_msgs/Time.h **** 
  55:./lib/ros_lib/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 139              		.loc 1 55 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144              	.LVL8:
 145              		.loc 1 55 0
 146 0000 0048     		ldr	r0, .L4
 147              	.LVL9:
 148 0002 7047     		bx	lr
 149              	.L5:
 150              		.align	2
 151              	.L4:
 152 0004 00000000 		.word	.LC0
 153              		.cfi_endproc
 154              	.LFE56:
 155              		.cantunwind
 156              		.fnend
 158              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 159              		.align	1
 160              		.weak	_ZN8std_msgs4Time6getMD5Ev
 161              		.thumb
 162              		.thumb_func
 164              	_ZN8std_msgs4Time6getMD5Ev:
 165              		.fnstart
 166              	.LFB57:
  56:./lib/ros_lib/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 167              		.loc 1 56 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL10:
 173              		.loc 1 56 0
 174 0000 0048     		ldr	r0, .L7
 175              	.LVL11:
 176 0002 7047     		bx	lr
 177              	.L8:
 178              		.align	2
 179              	.L7:
 180 0004 0E000000 		.word	.LC1
 181              		.cfi_endproc
 182              	.LFE57:
 183              		.cantunwind
 184              		.fnend
 186              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 187              		.align	1
 188              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 189              		.thumb
 190              		.thumb_func
 192              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 193              		.fnstart
 194              	.LFB63:
 195              		.file 2 "./lib/ros_lib/rosserial_msgs/TopicInfo.h"
   1:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   4:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   9:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** {
  11:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  12:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   {
  14:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  29:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     TopicInfo():
  30:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_id(0),
  31:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_name(""),
  32:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       message_type(""),
  33:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       md5sum(""),
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       buffer_size(0)
  35:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  36:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  37:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  39:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  40:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  43:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  46:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  51:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  56:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  59:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
  60:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
  61:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  62:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  68:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  69:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       return offset;
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  71:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
  73:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  74:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
  77:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  78:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
  80:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  83:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
  86:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  87:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
  89:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  92:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
  95:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  96:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
  98:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 101:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 104:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 105:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 106:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
 107:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
 108:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 109:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 110:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 111:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 112:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 113:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 115:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 116:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****      return offset;
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
 118:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 119:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 196              		.loc 2 119 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL12:
 202              		.loc 2 119 0
 203 0000 0048     		ldr	r0, .L10
 204              	.LVL13:
 205 0002 7047     		bx	lr
 206              	.L11:
 207              		.align	2
 208              	.L10:
 209 0004 2F000000 		.word	.LC2
 210              		.cfi_endproc
 211              	.LFE63:
 212              		.cantunwind
 213              		.fnend
 215              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 216              		.align	1
 217              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 218              		.thumb
 219              		.thumb_func
 221              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 222              		.fnstart
 223              	.LFB64:
 120:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 224              		.loc 2 120 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL14:
 230              		.loc 2 120 0
 231 0000 0048     		ldr	r0, .L13
 232              	.LVL15:
 233 0002 7047     		bx	lr
 234              	.L14:
 235              		.align	2
 236              	.L13:
 237 0004 48000000 		.word	.LC3
 238              		.cfi_endproc
 239              	.LFE64:
 240              		.cantunwind
 241              		.fnend
 243              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 244              		.align	1
 245              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 246              		.thumb
 247              		.thumb_func
 249              	_ZN14rosserial_msgs3Log7getTypeEv:
 250              		.fnstart
 251              	.LFB70:
 252              		.file 3 "./lib/ros_lib/rosserial_msgs/Log.h"
   1:./lib/ros_lib/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:./lib/ros_lib/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:./lib/ros_lib/rosserial_msgs/Log.h **** 
   4:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/Log.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/Log.h **** 
   9:./lib/ros_lib/rosserial_msgs/Log.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/Log.h **** {
  11:./lib/ros_lib/rosserial_msgs/Log.h **** 
  12:./lib/ros_lib/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/Log.h ****   {
  14:./lib/ros_lib/rosserial_msgs/Log.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/Log.h ****       uint8_t level;
  16:./lib/ros_lib/rosserial_msgs/Log.h ****       const char* msg;
  17:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  18:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  19:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  20:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  21:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  22:./lib/ros_lib/rosserial_msgs/Log.h **** 
  23:./lib/ros_lib/rosserial_msgs/Log.h ****     Log():
  24:./lib/ros_lib/rosserial_msgs/Log.h ****       level(0),
  25:./lib/ros_lib/rosserial_msgs/Log.h ****       msg("")
  26:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  27:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  28:./lib/ros_lib/rosserial_msgs/Log.h **** 
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  31:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  33:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  36:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  38:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  39:./lib/ros_lib/rosserial_msgs/Log.h ****       return offset;
  40:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  41:./lib/ros_lib/rosserial_msgs/Log.h **** 
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
  43:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  44:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
  46:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  47:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg;
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
  49:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  50:./lib/ros_lib/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
  51:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
  52:./lib/ros_lib/rosserial_msgs/Log.h ****       }
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
  55:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  56:./lib/ros_lib/rosserial_msgs/Log.h ****      return offset;
  57:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  58:./lib/ros_lib/rosserial_msgs/Log.h **** 
  59:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 253              		.loc 3 59 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL16:
 259              		.loc 3 59 0
 260 0000 0048     		ldr	r0, .L16
 261              	.LVL17:
 262 0002 7047     		bx	lr
 263              	.L17:
 264              		.align	2
 265              	.L16:
 266 0004 69000000 		.word	.LC4
 267              		.cfi_endproc
 268              	.LFE70:
 269              		.cantunwind
 270              		.fnend
 272              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 273              		.align	1
 274              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 275              		.thumb
 276              		.thumb_func
 278              	_ZN14rosserial_msgs3Log6getMD5Ev:
 279              		.fnstart
 280              	.LFB71:
  60:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 281              		.loc 3 60 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL18:
 287              		.loc 3 60 0
 288 0000 0048     		ldr	r0, .L19
 289              	.LVL19:
 290 0002 7047     		bx	lr
 291              	.L20:
 292              		.align	2
 293              	.L19:
 294 0004 7C000000 		.word	.LC5
 295              		.cfi_endproc
 296              	.LFE71:
 297              		.cantunwind
 298              		.fnend
 300              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 301              		.align	1
 302              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 303              		.thumb
 304              		.thumb_func
 306              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 307              		.fnstart
 308              	.LFB84:
 309              		.file 4 "./lib/ros_lib/rosserial_msgs/RequestParam.h"
   1:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   4:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <string.h>
   5:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   6:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   7:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
   8:./lib/ros_lib/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
   9:./lib/ros_lib/rosserial_msgs/RequestParam.h **** {
  10:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  11:./lib/ros_lib/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  12:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  13:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  14:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  15:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  16:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       const char* name;
  17:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  18:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamRequest():
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       name("")
  20:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  21:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  22:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  24:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  25:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  28:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  30:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  31:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  33:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  35:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  36:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  37:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  39:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  42:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  45:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  46:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  48:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  49:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
  50:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  51:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  52:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   };
  53:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  54:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  55:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  56:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  57:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  58:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  59:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  60:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  61:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float st_floats;
  62:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float * floats;
  63:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  64:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* st_strings;
  65:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* * strings;
  66:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  67:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamResponse():
  68:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length(0), ints(NULL),
  69:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length(0), floats(NULL),
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length(0), strings(NULL)
  71:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  72:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  73:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  75:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  76:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  82:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  83:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
  84:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
  85:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_intsi;
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  91:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  92:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  98:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  99:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 100:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 101:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_floatsi;
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 107:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 108:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 116:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 119:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 120:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 122:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 124:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 125:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 129:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 132:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 133:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
 134:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 135:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 136:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 137:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 138:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 139:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 140:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 142:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 144:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 148:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 151:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 152:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 153:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 154:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 155:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 156:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 157:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 158:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 161:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 163:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 170:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 172:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 175:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 178:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 180:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 181:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 183:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 184:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 310              		.loc 4 184 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL20:
 316              		.loc 4 184 0
 317 0000 0048     		ldr	r0, .L22
 318              	.LVL21:
 319 0002 7047     		bx	lr
 320              	.L23:
 321              		.align	2
 322              	.L22:
 323 0004 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE84:
 326              		.cantunwind
 327              		.fnend
 329              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 330              		.align	1
 331              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 332              		.thumb
 333              		.thumb_func
 335              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 336              		.fnstart
 337              	.LFB85:
 185:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 338              		.loc 4 185 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343              	.LVL22:
 344              		.loc 4 185 0
 345 0000 0048     		ldr	r0, .L25
 346              	.LVL23:
 347 0002 7047     		bx	lr
 348              	.L26:
 349              		.align	2
 350              	.L25:
 351 0004 9D000000 		.word	.LC6
 352              		.cfi_endproc
 353              	.LFE85:
 354              		.cantunwind
 355              		.fnend
 357              		.section	.text._ZN8std_msgs6String7getTypeEv,"axG",%progbits,_ZN8std_msgs6String7getTypeEv,comdat
 358              		.align	1
 359              		.weak	_ZN8std_msgs6String7getTypeEv
 360              		.thumb
 361              		.thumb_func
 363              	_ZN8std_msgs6String7getTypeEv:
 364              		.fnstart
 365              	.LFB154:
 366              		.file 5 "./lib/ros_lib/std_msgs/String.h"
   1:./lib/ros_lib/std_msgs/String.h **** #ifndef _ROS_std_msgs_String_h
   2:./lib/ros_lib/std_msgs/String.h **** #define _ROS_std_msgs_String_h
   3:./lib/ros_lib/std_msgs/String.h **** 
   4:./lib/ros_lib/std_msgs/String.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/String.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/String.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/String.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/String.h **** 
   9:./lib/ros_lib/std_msgs/String.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/String.h **** {
  11:./lib/ros_lib/std_msgs/String.h **** 
  12:./lib/ros_lib/std_msgs/String.h ****   class String : public ros::Msg
  13:./lib/ros_lib/std_msgs/String.h ****   {
  14:./lib/ros_lib/std_msgs/String.h ****     public:
  15:./lib/ros_lib/std_msgs/String.h ****       const char* data;
  16:./lib/ros_lib/std_msgs/String.h **** 
  17:./lib/ros_lib/std_msgs/String.h ****     String():
  18:./lib/ros_lib/std_msgs/String.h ****       data("")
  19:./lib/ros_lib/std_msgs/String.h ****     {
  20:./lib/ros_lib/std_msgs/String.h ****     }
  21:./lib/ros_lib/std_msgs/String.h **** 
  22:./lib/ros_lib/std_msgs/String.h ****     virtual int serialize(unsigned char *outbuffer) const
  23:./lib/ros_lib/std_msgs/String.h ****     {
  24:./lib/ros_lib/std_msgs/String.h ****       int offset = 0;
  25:./lib/ros_lib/std_msgs/String.h ****       uint32_t length_data = strlen(this->data);
  26:./lib/ros_lib/std_msgs/String.h ****       memcpy(outbuffer + offset, &length_data, sizeof(uint32_t));
  27:./lib/ros_lib/std_msgs/String.h ****       offset += 4;
  28:./lib/ros_lib/std_msgs/String.h ****       memcpy(outbuffer + offset, this->data, length_data);
  29:./lib/ros_lib/std_msgs/String.h ****       offset += length_data;
  30:./lib/ros_lib/std_msgs/String.h ****       return offset;
  31:./lib/ros_lib/std_msgs/String.h ****     }
  32:./lib/ros_lib/std_msgs/String.h **** 
  33:./lib/ros_lib/std_msgs/String.h ****     virtual int deserialize(unsigned char *inbuffer)
  34:./lib/ros_lib/std_msgs/String.h ****     {
  35:./lib/ros_lib/std_msgs/String.h ****       int offset = 0;
  36:./lib/ros_lib/std_msgs/String.h ****       uint32_t length_data;
  37:./lib/ros_lib/std_msgs/String.h ****       memcpy(&length_data, (inbuffer + offset), sizeof(uint32_t));
  38:./lib/ros_lib/std_msgs/String.h ****       offset += 4;
  39:./lib/ros_lib/std_msgs/String.h ****       for(unsigned int k= offset; k< offset+length_data; ++k){
  40:./lib/ros_lib/std_msgs/String.h ****           inbuffer[k-1]=inbuffer[k];
  41:./lib/ros_lib/std_msgs/String.h ****       }
  42:./lib/ros_lib/std_msgs/String.h ****       inbuffer[offset+length_data-1]=0;
  43:./lib/ros_lib/std_msgs/String.h ****       this->data = (char *)(inbuffer + offset-1);
  44:./lib/ros_lib/std_msgs/String.h ****       offset += length_data;
  45:./lib/ros_lib/std_msgs/String.h ****      return offset;
  46:./lib/ros_lib/std_msgs/String.h ****     }
  47:./lib/ros_lib/std_msgs/String.h **** 
  48:./lib/ros_lib/std_msgs/String.h ****     const char * getType(){ return "std_msgs/String"; };
 367              		.loc 5 48 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372              	.LVL24:
 373              		.loc 5 48 0
 374 0000 0048     		ldr	r0, .L28
 375              	.LVL25:
 376 0002 7047     		bx	lr
 377              	.L29:
 378              		.align	2
 379              	.L28:
 380 0004 BE000000 		.word	.LC7
 381              		.cfi_endproc
 382              	.LFE154:
 383              		.cantunwind
 384              		.fnend
 386              		.section	.text._ZN8std_msgs6String6getMD5Ev,"axG",%progbits,_ZN8std_msgs6String6getMD5Ev,comdat
 387              		.align	1
 388              		.weak	_ZN8std_msgs6String6getMD5Ev
 389              		.thumb
 390              		.thumb_func
 392              	_ZN8std_msgs6String6getMD5Ev:
 393              		.fnstart
 394              	.LFB155:
  49:./lib/ros_lib/std_msgs/String.h ****     const char * getMD5(){ return "992ce8a1687cec8c8bd883ec73ca41d1"; };
 395              		.loc 5 49 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400              	.LVL26:
 401              		.loc 5 49 0
 402 0000 0048     		ldr	r0, .L31
 403              	.LVL27:
 404 0002 7047     		bx	lr
 405              	.L32:
 406              		.align	2
 407              	.L31:
 408 0004 CE000000 		.word	.LC8
 409              		.cfi_endproc
 410              	.LFE155:
 411              		.cantunwind
 412              		.fnend
 414              		.section	.text._ZNK8std_msgs5UInt89serializeEPh,"axG",%progbits,_ZNK8std_msgs5UInt89serializeEPh,c
 415              		.align	1
 416              		.weak	_ZNK8std_msgs5UInt89serializeEPh
 417              		.thumb
 418              		.thumb_func
 420              	_ZNK8std_msgs5UInt89serializeEPh:
 421              		.fnstart
 422              	.LFB159:
 423              		.file 6 "./lib/ros_lib/std_msgs/UInt8.h"
   1:./lib/ros_lib/std_msgs/UInt8.h **** #ifndef _ROS_std_msgs_UInt8_h
   2:./lib/ros_lib/std_msgs/UInt8.h **** #define _ROS_std_msgs_UInt8_h
   3:./lib/ros_lib/std_msgs/UInt8.h **** 
   4:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/UInt8.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/UInt8.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/UInt8.h **** 
   9:./lib/ros_lib/std_msgs/UInt8.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/UInt8.h **** {
  11:./lib/ros_lib/std_msgs/UInt8.h **** 
  12:./lib/ros_lib/std_msgs/UInt8.h ****   class UInt8 : public ros::Msg
  13:./lib/ros_lib/std_msgs/UInt8.h ****   {
  14:./lib/ros_lib/std_msgs/UInt8.h ****     public:
  15:./lib/ros_lib/std_msgs/UInt8.h ****       uint8_t data;
  16:./lib/ros_lib/std_msgs/UInt8.h **** 
  17:./lib/ros_lib/std_msgs/UInt8.h ****     UInt8():
  18:./lib/ros_lib/std_msgs/UInt8.h ****       data(0)
  19:./lib/ros_lib/std_msgs/UInt8.h ****     {
  20:./lib/ros_lib/std_msgs/UInt8.h ****     }
  21:./lib/ros_lib/std_msgs/UInt8.h **** 
  22:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int serialize(unsigned char *outbuffer) const
 424              		.loc 6 22 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              		@ link register save eliminated.
 429              	.LVL28:
  23:./lib/ros_lib/std_msgs/UInt8.h ****     {
  24:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  25:./lib/ros_lib/std_msgs/UInt8.h ****       *(outbuffer + offset + 0) = (this->data >> (8 * 0)) & 0xFF;
 430              		.loc 6 25 0
 431 0000 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  26:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  27:./lib/ros_lib/std_msgs/UInt8.h ****       return offset;
  28:./lib/ros_lib/std_msgs/UInt8.h ****     }
 432              		.loc 6 28 0
 433 0002 0120     		movs	r0, #1
 434              	.LVL29:
  25:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 435              		.loc 6 25 0
 436 0004 0B70     		strb	r3, [r1]
 437              	.LVL30:
 438              		.loc 6 28 0
 439 0006 7047     		bx	lr
 440              		.cfi_endproc
 441              	.LFE159:
 442              		.cantunwind
 443              		.fnend
 445              		.section	.text._ZN8std_msgs5UInt811deserializeEPh,"axG",%progbits,_ZN8std_msgs5UInt811deserializeE
 446              		.align	1
 447              		.weak	_ZN8std_msgs5UInt811deserializeEPh
 448              		.thumb
 449              		.thumb_func
 451              	_ZN8std_msgs5UInt811deserializeEPh:
 452              		.fnstart
 453              	.LFB160:
  29:./lib/ros_lib/std_msgs/UInt8.h **** 
  30:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int deserialize(unsigned char *inbuffer)
 454              		.loc 6 30 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 459              	.LVL31:
  31:./lib/ros_lib/std_msgs/UInt8.h ****     {
  32:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  33:./lib/ros_lib/std_msgs/UInt8.h ****       this->data =  ((uint8_t) (*(inbuffer + offset)));
 460              		.loc 6 33 0
 461 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 462 0002 0371     		strb	r3, [r0, #4]
 463              	.LVL32:
  34:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  35:./lib/ros_lib/std_msgs/UInt8.h ****      return offset;
  36:./lib/ros_lib/std_msgs/UInt8.h ****     }
 464              		.loc 6 36 0
 465 0004 0120     		movs	r0, #1
 466              	.LVL33:
 467 0006 7047     		bx	lr
 468              		.cfi_endproc
 469              	.LFE160:
 470              		.cantunwind
 471              		.fnend
 473              		.section	.text._ZN8std_msgs5UInt87getTypeEv,"axG",%progbits,_ZN8std_msgs5UInt87getTypeEv,comdat
 474              		.align	1
 475              		.weak	_ZN8std_msgs5UInt87getTypeEv
 476              		.thumb
 477              		.thumb_func
 479              	_ZN8std_msgs5UInt87getTypeEv:
 480              		.fnstart
 481              	.LFB161:
  37:./lib/ros_lib/std_msgs/UInt8.h **** 
  38:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getType(){ return "std_msgs/UInt8"; };
 482              		.loc 6 38 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487              	.LVL34:
 488              		.loc 6 38 0
 489 0000 0048     		ldr	r0, .L36
 490              	.LVL35:
 491 0002 7047     		bx	lr
 492              	.L37:
 493              		.align	2
 494              	.L36:
 495 0004 EF000000 		.word	.LC9
 496              		.cfi_endproc
 497              	.LFE161:
 498              		.cantunwind
 499              		.fnend
 501              		.section	.text._ZN8std_msgs5UInt86getMD5Ev,"axG",%progbits,_ZN8std_msgs5UInt86getMD5Ev,comdat
 502              		.align	1
 503              		.weak	_ZN8std_msgs5UInt86getMD5Ev
 504              		.thumb
 505              		.thumb_func
 507              	_ZN8std_msgs5UInt86getMD5Ev:
 508              		.fnstart
 509              	.LFB162:
  39:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getMD5(){ return "7c8164229e7d2c17eb95e9231617fdee"; };
 510              		.loc 6 39 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514              		@ link register save eliminated.
 515              	.LVL36:
 516              		.loc 6 39 0
 517 0000 0048     		ldr	r0, .L39
 518              	.LVL37:
 519 0002 7047     		bx	lr
 520              	.L40:
 521              		.align	2
 522              	.L39:
 523 0004 FE000000 		.word	.LC10
 524              		.cfi_endproc
 525              	.LFE162:
 526              		.cantunwind
 527              		.fnend
 529              		.section	.text._ZN8std_msgs6Header7getTypeEv,"axG",%progbits,_ZN8std_msgs6Header7getTypeEv,comdat
 530              		.align	1
 531              		.weak	_ZN8std_msgs6Header7getTypeEv
 532              		.thumb
 533              		.thumb_func
 535              	_ZN8std_msgs6Header7getTypeEv:
 536              		.fnstart
 537              	.LFB168:
 538              		.file 7 "./lib/ros_lib/std_msgs/Header.h"
   1:./lib/ros_lib/std_msgs/Header.h **** #ifndef _ROS_std_msgs_Header_h
   2:./lib/ros_lib/std_msgs/Header.h **** #define _ROS_std_msgs_Header_h
   3:./lib/ros_lib/std_msgs/Header.h **** 
   4:./lib/ros_lib/std_msgs/Header.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Header.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Header.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Header.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Header.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Header.h **** 
  10:./lib/ros_lib/std_msgs/Header.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Header.h **** {
  12:./lib/ros_lib/std_msgs/Header.h **** 
  13:./lib/ros_lib/std_msgs/Header.h ****   class Header : public ros::Msg
  14:./lib/ros_lib/std_msgs/Header.h ****   {
  15:./lib/ros_lib/std_msgs/Header.h ****     public:
  16:./lib/ros_lib/std_msgs/Header.h ****       uint32_t seq;
  17:./lib/ros_lib/std_msgs/Header.h ****       ros::Time stamp;
  18:./lib/ros_lib/std_msgs/Header.h ****       const char* frame_id;
  19:./lib/ros_lib/std_msgs/Header.h **** 
  20:./lib/ros_lib/std_msgs/Header.h ****     Header():
  21:./lib/ros_lib/std_msgs/Header.h ****       seq(0),
  22:./lib/ros_lib/std_msgs/Header.h ****       stamp(),
  23:./lib/ros_lib/std_msgs/Header.h ****       frame_id("")
  24:./lib/ros_lib/std_msgs/Header.h ****     {
  25:./lib/ros_lib/std_msgs/Header.h ****     }
  26:./lib/ros_lib/std_msgs/Header.h **** 
  27:./lib/ros_lib/std_msgs/Header.h ****     virtual int serialize(unsigned char *outbuffer) const
  28:./lib/ros_lib/std_msgs/Header.h ****     {
  29:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->seq >> (8 * 0)) & 0xFF;
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
  33:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
  34:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
  38:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
  39:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
  43:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
  44:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  45:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id = strlen(this->frame_id);
  46:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
  47:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  48:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, this->frame_id, length_frame_id);
  49:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  50:./lib/ros_lib/std_msgs/Header.h ****       return offset;
  51:./lib/ros_lib/std_msgs/Header.h ****     }
  52:./lib/ros_lib/std_msgs/Header.h **** 
  53:./lib/ros_lib/std_msgs/Header.h ****     virtual int deserialize(unsigned char *inbuffer)
  54:./lib/ros_lib/std_msgs/Header.h ****     {
  55:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq =  ((uint32_t) (*(inbuffer + offset)));
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  59:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  60:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  64:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  65:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  69:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  70:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  71:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id;
  72:./lib/ros_lib/std_msgs/Header.h ****       memcpy(&length_frame_id, (inbuffer + offset), sizeof(uint32_t));
  73:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  74:./lib/ros_lib/std_msgs/Header.h ****       for(unsigned int k= offset; k< offset+length_frame_id; ++k){
  75:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
  76:./lib/ros_lib/std_msgs/Header.h ****       }
  77:./lib/ros_lib/std_msgs/Header.h ****       inbuffer[offset+length_frame_id-1]=0;
  78:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
  79:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  80:./lib/ros_lib/std_msgs/Header.h ****      return offset;
  81:./lib/ros_lib/std_msgs/Header.h ****     }
  82:./lib/ros_lib/std_msgs/Header.h **** 
  83:./lib/ros_lib/std_msgs/Header.h ****     const char * getType(){ return "std_msgs/Header"; };
 539              		.loc 7 83 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 544              	.LVL38:
 545              		.loc 7 83 0
 546 0000 0048     		ldr	r0, .L42
 547              	.LVL39:
 548 0002 7047     		bx	lr
 549              	.L43:
 550              		.align	2
 551              	.L42:
 552 0004 1F010000 		.word	.LC11
 553              		.cfi_endproc
 554              	.LFE168:
 555              		.cantunwind
 556              		.fnend
 558              		.section	.text._ZN8std_msgs6Header6getMD5Ev,"axG",%progbits,_ZN8std_msgs6Header6getMD5Ev,comdat
 559              		.align	1
 560              		.weak	_ZN8std_msgs6Header6getMD5Ev
 561              		.thumb
 562              		.thumb_func
 564              	_ZN8std_msgs6Header6getMD5Ev:
 565              		.fnstart
 566              	.LFB169:
  84:./lib/ros_lib/std_msgs/Header.h ****     const char * getMD5(){ return "2176decaecbce78abc3b96ef049fabed"; };
 567              		.loc 7 84 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              		@ link register save eliminated.
 572              	.LVL40:
 573              		.loc 7 84 0
 574 0000 0048     		ldr	r0, .L45
 575              	.LVL41:
 576 0002 7047     		bx	lr
 577              	.L46:
 578              		.align	2
 579              	.L45:
 580 0004 2F010000 		.word	.LC12
 581              		.cfi_endproc
 582              	.LFE169:
 583              		.cantunwind
 584              		.fnend
 586              		.section	.text._ZN12roberto_msgs10MotorState7getTypeEv,"axG",%progbits,_ZN12roberto_msgs10MotorSta
 587              		.align	1
 588              		.weak	_ZN12roberto_msgs10MotorState7getTypeEv
 589              		.thumb
 590              		.thumb_func
 592              	_ZN12roberto_msgs10MotorState7getTypeEv:
 593              		.fnstart
 594              	.LFB175:
 595              		.file 8 "./lib/ros_lib/roberto_msgs/MotorState.h"
   1:./lib/ros_lib/roberto_msgs/MotorState.h **** #ifndef _ROS_roberto_msgs_MotorState_h
   2:./lib/ros_lib/roberto_msgs/MotorState.h **** #define _ROS_roberto_msgs_MotorState_h
   3:./lib/ros_lib/roberto_msgs/MotorState.h **** 
   4:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdint.h>
   5:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <string.h>
   6:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdlib.h>
   7:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "ros/msg.h"
   8:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "std_msgs/Header.h"
   9:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  10:./lib/ros_lib/roberto_msgs/MotorState.h **** namespace roberto_msgs
  11:./lib/ros_lib/roberto_msgs/MotorState.h **** {
  12:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  13:./lib/ros_lib/roberto_msgs/MotorState.h ****   class MotorState : public ros::Msg
  14:./lib/ros_lib/roberto_msgs/MotorState.h ****   {
  15:./lib/ros_lib/roberto_msgs/MotorState.h ****     public:
  16:./lib/ros_lib/roberto_msgs/MotorState.h ****       std_msgs::Header header;
  17:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_angle;
  18:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_velocity;
  19:./lib/ros_lib/roberto_msgs/MotorState.h ****       float speed;
  20:./lib/ros_lib/roberto_msgs/MotorState.h ****       float acceleration;
  21:./lib/ros_lib/roberto_msgs/MotorState.h ****       uint8_t mode;
  22:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_AUTO = 0 };
  23:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_PIVOT = 1 };
  24:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SPIN = 2 };
  25:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SIDEWAYS = 3 };
  26:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  27:./lib/ros_lib/roberto_msgs/MotorState.h ****     MotorState():
  28:./lib/ros_lib/roberto_msgs/MotorState.h ****       header(),
  29:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_angle(0),
  30:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_velocity(0),
  31:./lib/ros_lib/roberto_msgs/MotorState.h ****       speed(0),
  32:./lib/ros_lib/roberto_msgs/MotorState.h ****       acceleration(0),
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****       mode(0)
  34:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  35:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  36:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int serialize(unsigned char *outbuffer) const
  38:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  39:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.serialize(outbuffer + offset);
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
  46:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  47:./lib/ros_lib/roberto_msgs/MotorState.h ****       return offset;
  48:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  49:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  52:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.deserialize(inbuffer + offset);
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
  59:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  60:./lib/ros_lib/roberto_msgs/MotorState.h ****      return offset;
  61:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  62:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  63:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getType(){ return "roberto_msgs/MotorState"; };
 596              		.loc 8 63 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601              	.LVL42:
 602              		.loc 8 63 0
 603 0000 0048     		ldr	r0, .L48
 604              	.LVL43:
 605 0002 7047     		bx	lr
 606              	.L49:
 607              		.align	2
 608              	.L48:
 609 0004 50010000 		.word	.LC13
 610              		.cfi_endproc
 611              	.LFE175:
 612              		.cantunwind
 613              		.fnend
 615              		.section	.text._ZN12roberto_msgs10MotorState6getMD5Ev,"axG",%progbits,_ZN12roberto_msgs10MotorStat
 616              		.align	1
 617              		.weak	_ZN12roberto_msgs10MotorState6getMD5Ev
 618              		.thumb
 619              		.thumb_func
 621              	_ZN12roberto_msgs10MotorState6getMD5Ev:
 622              		.fnstart
 623              	.LFB176:
  64:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getMD5(){ return "e8b5d1162b85151c49e02b8224796c0e"; };
 624              		.loc 8 64 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              		@ link register save eliminated.
 629              	.LVL44:
 630              		.loc 8 64 0
 631 0000 0048     		ldr	r0, .L51
 632              	.LVL45:
 633 0002 7047     		bx	lr
 634              	.L52:
 635              		.align	2
 636              	.L51:
 637 0004 68010000 		.word	.LC14
 638              		.cfi_endproc
 639              	.LFE176:
 640              		.cantunwind
 641              		.fnend
 643              		.text
 644              		.align	1
 645              		.global	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 646              		.thumb
 647              		.thumb_func
 649              	_Z8motor_cbRKN12roberto_msgs10MotorStateE:
 650              		.fnstart
 651              	.LFB178:
 652              		.file 9 "src/main.cpp"
   1:src/main.cpp  **** #include <stm32f10x.h>
   2:src/main.cpp  **** 
   3:src/main.cpp  **** #include <stdio.h>
   4:src/main.cpp  **** 
   5:src/main.cpp  **** #include "motor.h"
   6:src/main.cpp  **** #include "motorSettings.h"
   7:src/main.cpp  **** #include "led.h"
   8:src/main.cpp  **** #include "pid.h"
   9:src/main.cpp  **** #include "encoder.h"
  10:src/main.cpp  **** #include "stm32_time.h"
  11:src/main.cpp  **** 
  12:src/main.cpp  **** 
  13:src/main.cpp  **** #include <ros.h>
  14:src/main.cpp  **** #include <std_msgs/String.h>
  15:src/main.cpp  **** #include <std_msgs/UInt8.h>
  16:src/main.cpp  **** #include <roberto_msgs/MotorState.h>
  17:src/main.cpp  **** 
  18:src/main.cpp  **** 
  19:src/main.cpp  **** 
  20:src/main.cpp  **** /* Private function prototypes -----------------------------------------------*/
  21:src/main.cpp  **** 
  22:src/main.cpp  **** 
  23:src/main.cpp  **** __IO uint8_t Rx_Idx = 0x00;
  24:src/main.cpp  **** uint8_t slaveAddress;
  25:src/main.cpp  **** uint8_t RxBuffer [RXBUFFERSIZE] = {0};
  26:src/main.cpp  **** __IO uint8_t NumberOfByteToReceive = 0x00;
  27:src/main.cpp  **** __IO uint8_t GenerateStartStatus = 0x00;
  28:src/main.cpp  **** 
  29:src/main.cpp  **** 
  30:src/main.cpp  **** 
  31:src/main.cpp  **** ros::NodeHandle nh;
  32:src/main.cpp  **** 
  33:src/main.cpp  **** void led_cb( const std_msgs::UInt8& cmd_msg){
  34:src/main.cpp  ****   led_set(cmd_msg.data);
  35:src/main.cpp  **** }
  36:src/main.cpp  **** 
  37:src/main.cpp  **** 
  38:src/main.cpp  **** 
  39:src/main.cpp  **** void motor_cb( const roberto_msgs::MotorState& cmd_msg){
 653              		.loc 9 39 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657              		@ link register save eliminated.
 658              	.LVL46:
 659 0000 7047     		bx	lr
 660              		.cfi_endproc
 661              	.LFE178:
 662              		.cantunwind
 663              		.fnend
 665              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh,"axG",%progbits,_ZN3ros10Subscri
 666              		.align	1
 667              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 668              		.thumb
 669              		.thumb_func
 671              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:
 672              		.fnstart
 673              	.LFB209:
 674              		.file 10 "./lib/ros_lib/ros/subscriber.h"
   1:./lib/ros_lib/ros/subscriber.h **** /* 
   2:./lib/ros_lib/ros/subscriber.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/subscriber.h ****  *
   4:./lib/ros_lib/ros/subscriber.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/subscriber.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/subscriber.h ****  *
   7:./lib/ros_lib/ros/subscriber.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/subscriber.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/subscriber.h ****  * are met:
  10:./lib/ros_lib/ros/subscriber.h ****  *
  11:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/subscriber.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/subscriber.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/subscriber.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/subscriber.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/subscriber.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/subscriber.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/subscriber.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/subscriber.h ****  *
  21:./lib/ros_lib/ros/subscriber.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/subscriber.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/subscriber.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/subscriber.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/subscriber.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/subscriber.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/subscriber.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/subscriber.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/subscriber.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/subscriber.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/subscriber.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/subscriber.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/subscriber.h ****  */
  34:./lib/ros_lib/ros/subscriber.h **** 
  35:./lib/ros_lib/ros/subscriber.h **** #ifndef ROS_SUBSCRIBER_H_
  36:./lib/ros_lib/ros/subscriber.h **** #define ROS_SUBSCRIBER_H_
  37:./lib/ros_lib/ros/subscriber.h **** 
  38:./lib/ros_lib/ros/subscriber.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/subscriber.h **** 
  40:./lib/ros_lib/ros/subscriber.h **** namespace ros {
  41:./lib/ros_lib/ros/subscriber.h **** 
  42:./lib/ros_lib/ros/subscriber.h ****   /* Base class for objects subscribers. */
  43:./lib/ros_lib/ros/subscriber.h ****   class Subscriber_
  44:./lib/ros_lib/ros/subscriber.h ****   {
  45:./lib/ros_lib/ros/subscriber.h ****     public:
  46:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char *data)=0;
  47:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType()=0;
  48:./lib/ros_lib/ros/subscriber.h **** 
  49:./lib/ros_lib/ros/subscriber.h ****       // id_ is set by NodeHandle when we advertise 
  50:./lib/ros_lib/ros/subscriber.h ****       int id_;
  51:./lib/ros_lib/ros/subscriber.h **** 
  52:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType()=0;
  53:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5()=0;
  54:./lib/ros_lib/ros/subscriber.h ****       const char * topic_;
  55:./lib/ros_lib/ros/subscriber.h ****   };
  56:./lib/ros_lib/ros/subscriber.h **** 
  57:./lib/ros_lib/ros/subscriber.h **** 
  58:./lib/ros_lib/ros/subscriber.h ****   /* Actual subscriber, templated on message type. */
  59:./lib/ros_lib/ros/subscriber.h ****   template<typename MsgT>
  60:./lib/ros_lib/ros/subscriber.h ****   class Subscriber: public Subscriber_{
  61:./lib/ros_lib/ros/subscriber.h ****     public:
  62:./lib/ros_lib/ros/subscriber.h ****       typedef void(*CallbackT)(const MsgT&);
  63:./lib/ros_lib/ros/subscriber.h ****       MsgT msg;
  64:./lib/ros_lib/ros/subscriber.h **** 
  65:./lib/ros_lib/ros/subscriber.h ****       Subscriber(const char * topic_name, CallbackT cb, int endpoint=rosserial_msgs::TopicInfo::ID_
  66:./lib/ros_lib/ros/subscriber.h ****         cb_(cb),
  67:./lib/ros_lib/ros/subscriber.h ****         endpoint_(endpoint)
  68:./lib/ros_lib/ros/subscriber.h ****       {
  69:./lib/ros_lib/ros/subscriber.h ****         topic_ = topic_name;
  70:./lib/ros_lib/ros/subscriber.h ****       };
  71:./lib/ros_lib/ros/subscriber.h **** 
  72:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char* data){
 675              		.loc 10 72 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              		@ link register save eliminated.
 680              	.LVL47:
 681              	.LBB150:
 682              	.LBB151:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 683              		.loc 6 33 0
 684 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 685              	.LBE151:
 686              	.LBE150:
  73:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
  74:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 687              		.loc 10 74 0
 688 0002 0C30     		adds	r0, r0, #12
 689              	.LVL48:
 690              	.LBB153:
 691              	.LBB152:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 692              		.loc 6 33 0
 693 0004 0371     		strb	r3, [r0, #4]
 694              	.LVL49:
 695              	.LBE152:
 696              	.LBE153:
 697              		.loc 10 74 0
 698 0006 8368     		ldr	r3, [r0, #8]
 699 0008 1847     		bx	r3	@ indirect register sibling call
 700              	.LVL50:
 701              		.cfi_endproc
 702              	.LFE209:
 703              		.cantunwind
 704              		.fnend
 706              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv,"axG",%progbits,_ZN3ros10
 707              		.align	1
 708              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 709              		.thumb
 710              		.thumb_func
 712              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:
 713              		.fnstart
 714              	.LFB210:
  75:./lib/ros_lib/ros/subscriber.h ****       }
  76:./lib/ros_lib/ros/subscriber.h **** 
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType(){ return this->msg.getType(); }
  78:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
  79:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 715              		.loc 10 79 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720              	.LVL51:
 721              		.loc 10 79 0
 722 0000 8069     		ldr	r0, [r0, #24]
 723              	.LVL52:
 724 0002 7047     		bx	lr
 725              		.cfi_endproc
 726              	.LFE210:
 727              		.cantunwind
 728              		.fnend
 730              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv,"axG",%progbits,_ZN3ros10Subsc
 731              		.align	1
 732              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 733              		.thumb
 734              		.thumb_func
 736              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:
 737              		.fnstart
 738              	.LFB211:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 739              		.loc 10 77 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 744              	.LVL53:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 745              		.loc 10 77 0
 746 0000 0048     		ldr	r0, .L57
 747              	.LVL54:
 748 0002 7047     		bx	lr
 749              	.L58:
 750              		.align	2
 751              	.L57:
 752 0004 EF000000 		.word	.LC9
 753              		.cfi_endproc
 754              	.LFE211:
 755              		.cantunwind
 756              		.fnend
 758              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev,"axG",%progbits,_ZN3ros10Subscri
 759              		.align	1
 760              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 761              		.thumb
 762              		.thumb_func
 764              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:
 765              		.fnstart
 766              	.LFB212:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 767              		.loc 10 78 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              		@ link register save eliminated.
 772              	.LVL55:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 773              		.loc 10 78 0
 774 0000 0048     		ldr	r0, .L60
 775              	.LVL56:
 776 0002 7047     		bx	lr
 777              	.L61:
 778              		.align	2
 779              	.L60:
 780 0004 FE000000 		.word	.LC10
 781              		.cfi_endproc
 782              	.LFE212:
 783              		.cantunwind
 784              		.fnend
 786              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv,"axG",%progbit
 787              		.align	1
 788              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 789              		.thumb
 790              		.thumb_func
 792              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:
 793              		.fnstart
 794              	.LFB214:
 795              		.loc 10 79 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 0
 798              		@ frame_needed = 0, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 800              	.LVL57:
 801              		.loc 10 79 0
 802 0000 C06B     		ldr	r0, [r0, #60]
 803              	.LVL58:
 804 0002 7047     		bx	lr
 805              		.cfi_endproc
 806              	.LFE214:
 807              		.cantunwind
 808              		.fnend
 810              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv,"axG",%progbits,_ZN
 811              		.align	1
 812              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 813              		.thumb
 814              		.thumb_func
 816              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:
 817              		.fnstart
 818              	.LFB215:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 819              		.loc 10 77 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 0, uses_anonymous_args = 0
 823              		@ link register save eliminated.
 824              	.LVL59:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 825              		.loc 10 77 0
 826 0000 0048     		ldr	r0, .L64
 827              	.LVL60:
 828 0002 7047     		bx	lr
 829              	.L65:
 830              		.align	2
 831              	.L64:
 832 0004 50010000 		.word	.LC13
 833              		.cfi_endproc
 834              	.LFE215:
 835              		.cantunwind
 836              		.fnend
 838              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev,"axG",%progbits,_ZN3r
 839              		.align	1
 840              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 841              		.thumb
 842              		.thumb_func
 844              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:
 845              		.fnstart
 846              	.LFB216:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 847              		.loc 10 78 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              		@ link register save eliminated.
 852              	.LVL61:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 853              		.loc 10 78 0
 854 0000 0048     		ldr	r0, .L67
 855              	.LVL62:
 856 0002 7047     		bx	lr
 857              	.L68:
 858              		.align	2
 859              	.L67:
 860 0004 68010000 		.word	.LC14
 861              		.cfi_endproc
 862              	.LFE216:
 863              		.cantunwind
 864              		.fnend
 866              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv,"axG",%pr
 867              		.align	1
 868              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
 869              		.thumb
 870              		.thumb_func
 872              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:
 873              		.fnstart
 874              	.LFB217:
 875              		.file 11 "./lib/ros_lib/ros/node_handle.h"
   1:./lib/ros_lib/ros/node_handle.h **** /*
   2:./lib/ros_lib/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/node_handle.h ****  *
   4:./lib/ros_lib/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/node_handle.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/node_handle.h ****  *
   7:./lib/ros_lib/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/node_handle.h ****  * are met:
  10:./lib/ros_lib/ros/node_handle.h ****  *
  11:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/node_handle.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/node_handle.h ****  *
  21:./lib/ros_lib/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/node_handle.h ****  */
  34:./lib/ros_lib/ros/node_handle.h **** 
  35:./lib/ros_lib/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:./lib/ros_lib/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:./lib/ros_lib/ros/node_handle.h **** 
  38:./lib/ros_lib/ros/node_handle.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/node_handle.h **** 
  40:./lib/ros_lib/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:./lib/ros_lib/ros/node_handle.h **** 
  45:./lib/ros_lib/ros/node_handle.h **** #define SYNC_SECONDS        5
  46:./lib/ros_lib/ros/node_handle.h **** 
  47:./lib/ros_lib/ros/node_handle.h **** #define MODE_FIRST_FF       0
  48:./lib/ros_lib/ros/node_handle.h **** /*
  49:./lib/ros_lib/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  50:./lib/ros_lib/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  51:./lib/ros_lib/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  52:./lib/ros_lib/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  53:./lib/ros_lib/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  54:./lib/ros_lib/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  55:./lib/ros_lib/ros/node_handle.h ****  */
  56:./lib/ros_lib/ros/node_handle.h **** #define MODE_PROTOCOL_VER   1
  57:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER1		0xff // through groovy
  58:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER2		0xfe // in hydro
  59:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER 		PROTOCOL_VER2
  60:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_L         2
  61:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_H         3
  62:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_CHECKSUM  4   // checksum for msg size received from size L and H
  63:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_L        5   // waiting for topic id
  64:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_H        6
  65:./lib/ros_lib/ros/node_handle.h **** #define MODE_MESSAGE        7
  66:./lib/ros_lib/ros/node_handle.h **** #define MODE_MSG_CHECKSUM   8   // checksum for msg and topic id
  67:./lib/ros_lib/ros/node_handle.h **** 
  68:./lib/ros_lib/ros/node_handle.h **** 
  69:./lib/ros_lib/ros/node_handle.h **** #define MSG_TIMEOUT 20  //20 milliseconds to recieve all of message data
  70:./lib/ros_lib/ros/node_handle.h **** 
  71:./lib/ros_lib/ros/node_handle.h **** #include "msg.h"
  72:./lib/ros_lib/ros/node_handle.h **** 
  73:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  74:./lib/ros_lib/ros/node_handle.h **** 
  75:./lib/ros_lib/ros/node_handle.h ****   class NodeHandleBase_{
  76:./lib/ros_lib/ros/node_handle.h ****     public:
  77:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg* msg)=0;
  78:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce()=0;
  79:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected()=0;
  80:./lib/ros_lib/ros/node_handle.h ****     };
  81:./lib/ros_lib/ros/node_handle.h **** }
  82:./lib/ros_lib/ros/node_handle.h **** 
  83:./lib/ros_lib/ros/node_handle.h **** #include "publisher.h"
  84:./lib/ros_lib/ros/node_handle.h **** #include "subscriber.h"
  85:./lib/ros_lib/ros/node_handle.h **** #include "service_server.h"
  86:./lib/ros_lib/ros/node_handle.h **** #include "service_client.h"
  87:./lib/ros_lib/ros/node_handle.h **** 
  88:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  89:./lib/ros_lib/ros/node_handle.h **** 
  90:./lib/ros_lib/ros/node_handle.h ****   using rosserial_msgs::TopicInfo;
  91:./lib/ros_lib/ros/node_handle.h **** 
  92:./lib/ros_lib/ros/node_handle.h ****   /* Node Handle */
  93:./lib/ros_lib/ros/node_handle.h ****   template<class Hardware,
  94:./lib/ros_lib/ros/node_handle.h ****            int MAX_SUBSCRIBERS=25,
  95:./lib/ros_lib/ros/node_handle.h ****            int MAX_PUBLISHERS=25,
  96:./lib/ros_lib/ros/node_handle.h ****            int INPUT_SIZE=512,
  97:./lib/ros_lib/ros/node_handle.h ****            int OUTPUT_SIZE=512>
  98:./lib/ros_lib/ros/node_handle.h ****   class NodeHandle_ : public NodeHandleBase_
  99:./lib/ros_lib/ros/node_handle.h ****   {
 100:./lib/ros_lib/ros/node_handle.h ****     protected:
 101:./lib/ros_lib/ros/node_handle.h ****       Hardware hardware_;
 102:./lib/ros_lib/ros/node_handle.h **** 
 103:./lib/ros_lib/ros/node_handle.h ****       /* time used for syncing */
 104:./lib/ros_lib/ros/node_handle.h ****       uint32_t rt_time;
 105:./lib/ros_lib/ros/node_handle.h **** 
 106:./lib/ros_lib/ros/node_handle.h ****       /* used for computing current time */
 107:./lib/ros_lib/ros/node_handle.h ****       uint32_t sec_offset, nsec_offset;
 108:./lib/ros_lib/ros/node_handle.h **** 
 109:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_in[INPUT_SIZE];
 110:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_out[OUTPUT_SIZE];
 111:./lib/ros_lib/ros/node_handle.h **** 
 112:./lib/ros_lib/ros/node_handle.h ****       Publisher * publishers[MAX_PUBLISHERS];
 113:./lib/ros_lib/ros/node_handle.h ****       Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 114:./lib/ros_lib/ros/node_handle.h **** 
 115:./lib/ros_lib/ros/node_handle.h ****       /*
 116:./lib/ros_lib/ros/node_handle.h ****        * Setup Functions
 117:./lib/ros_lib/ros/node_handle.h ****        */
 118:./lib/ros_lib/ros/node_handle.h ****     public:
 119:./lib/ros_lib/ros/node_handle.h ****       NodeHandle_() : configured_(false) {
 120:./lib/ros_lib/ros/node_handle.h **** 
 121:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_PUBLISHERS; i++)
 122:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 123:./lib/ros_lib/ros/node_handle.h **** 
 124:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_SUBSCRIBERS; i++)
 125:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 126:./lib/ros_lib/ros/node_handle.h **** 
 127:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< INPUT_SIZE; i++)
 128:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 129:./lib/ros_lib/ros/node_handle.h **** 
 130:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< OUTPUT_SIZE; i++)
 131:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 132:./lib/ros_lib/ros/node_handle.h **** 
 133:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 134:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 135:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats_length = 0;
 136:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats = NULL;
 137:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 138:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 139:./lib/ros_lib/ros/node_handle.h ****       }
 140:./lib/ros_lib/ros/node_handle.h **** 
 141:./lib/ros_lib/ros/node_handle.h ****       Hardware* getHardware(){
 142:./lib/ros_lib/ros/node_handle.h ****         return &hardware_;
 143:./lib/ros_lib/ros/node_handle.h ****       }
 144:./lib/ros_lib/ros/node_handle.h **** 
 145:./lib/ros_lib/ros/node_handle.h ****       /* Start serial, initialize buffers */
 146:./lib/ros_lib/ros/node_handle.h ****       void initNode(){
 147:./lib/ros_lib/ros/node_handle.h ****         hardware_.init();
 148:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 149:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 150:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 151:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 152:./lib/ros_lib/ros/node_handle.h ****       };
 153:./lib/ros_lib/ros/node_handle.h **** 
 154:./lib/ros_lib/ros/node_handle.h ****       /* Start a named port, which may be network server IP, initialize buffers */
 155:./lib/ros_lib/ros/node_handle.h ****       void initNode(char *portName){
 156:./lib/ros_lib/ros/node_handle.h ****         hardware_.init(portName);
 157:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 158:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 159:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 160:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 161:./lib/ros_lib/ros/node_handle.h ****       };
 162:./lib/ros_lib/ros/node_handle.h **** 
 163:./lib/ros_lib/ros/node_handle.h ****     protected:
 164:./lib/ros_lib/ros/node_handle.h ****       //State machine variables for spinOnce
 165:./lib/ros_lib/ros/node_handle.h ****       int mode_;
 166:./lib/ros_lib/ros/node_handle.h ****       int bytes_;
 167:./lib/ros_lib/ros/node_handle.h ****       int topic_;
 168:./lib/ros_lib/ros/node_handle.h ****       int index_;
 169:./lib/ros_lib/ros/node_handle.h ****       int checksum_;
 170:./lib/ros_lib/ros/node_handle.h **** 
 171:./lib/ros_lib/ros/node_handle.h ****       bool configured_;
 172:./lib/ros_lib/ros/node_handle.h **** 
 173:./lib/ros_lib/ros/node_handle.h ****       /* used for syncing the time */
 174:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_time;
 175:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_receive_time;
 176:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_msg_timeout_time;
 177:./lib/ros_lib/ros/node_handle.h **** 
 178:./lib/ros_lib/ros/node_handle.h ****     public:
 179:./lib/ros_lib/ros/node_handle.h ****       /* This function goes in your loop() function, it handles
 180:./lib/ros_lib/ros/node_handle.h ****        *  serial input and callbacks for subscribers.
 181:./lib/ros_lib/ros/node_handle.h ****        */
 182:./lib/ros_lib/ros/node_handle.h **** 
 183:./lib/ros_lib/ros/node_handle.h **** 
 184:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce(){
 185:./lib/ros_lib/ros/node_handle.h **** 
 186:./lib/ros_lib/ros/node_handle.h ****         /* restart if timed out */
 187:./lib/ros_lib/ros/node_handle.h ****         uint32_t c_time = hardware_.time();
 188:./lib/ros_lib/ros/node_handle.h ****         if( (c_time - last_sync_receive_time) > (SYNC_SECONDS*2200) ){
 189:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 190:./lib/ros_lib/ros/node_handle.h ****          }
 191:./lib/ros_lib/ros/node_handle.h **** 
 192:./lib/ros_lib/ros/node_handle.h ****         /* reset if message has timed out */
 193:./lib/ros_lib/ros/node_handle.h ****         if ( mode_ != MODE_FIRST_FF){
 194:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 195:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 196:./lib/ros_lib/ros/node_handle.h ****           }
 197:./lib/ros_lib/ros/node_handle.h ****         }
 198:./lib/ros_lib/ros/node_handle.h **** 
 199:./lib/ros_lib/ros/node_handle.h ****         /* while available buffer, read data */
 200:./lib/ros_lib/ros/node_handle.h ****         while( true )
 201:./lib/ros_lib/ros/node_handle.h ****         {
 202:./lib/ros_lib/ros/node_handle.h ****           int data = hardware_.read();
 203:./lib/ros_lib/ros/node_handle.h ****           if( data < 0 )
 204:./lib/ros_lib/ros/node_handle.h ****             break;
 205:./lib/ros_lib/ros/node_handle.h ****           checksum_ += data;
 206:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 207:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 208:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 209:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 210:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 211:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 212:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 213:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 214:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 215:./lib/ros_lib/ros/node_handle.h ****             }
 216:./lib/ros_lib/ros/node_handle.h ****             else if( hardware_.time() - c_time > (SYNC_SECONDS)){
 217:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 218:./lib/ros_lib/ros/node_handle.h ****               configured_=false;
 219:./lib/ros_lib/ros/node_handle.h ****               return -2;
 220:./lib/ros_lib/ros/node_handle.h ****             }
 221:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_PROTOCOL_VER ){
 222:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 223:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 224:./lib/ros_lib/ros/node_handle.h ****             }else{
 225:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_FIRST_FF;
 226:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 227:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 228:./lib/ros_lib/ros/node_handle.h ****             }
 229:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_SIZE_L ){   /* bottom half of message size */
 230:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 231:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 232:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 233:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 234:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_H ){   /* top half of message size */
 235:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 236:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 237:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 238:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 239:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 240:./lib/ros_lib/ros/node_handle.h **** 	    else
 241:./lib/ros_lib/ros/node_handle.h **** 	      mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 242:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 243:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 244:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 245:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 246:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 247:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 248:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 249:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 250:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 251:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_MSG_CHECKSUM ){ /* do checksum */
 252:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 253:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 254:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 255:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 256:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 258:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 259:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 260:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 261:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 262:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 263:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 264:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 265:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 266:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 267:./lib/ros_lib/ros/node_handle.h ****               }else{
 268:./lib/ros_lib/ros/node_handle.h ****                 if(subscribers[topic_-100])
 269:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 270:./lib/ros_lib/ros/node_handle.h ****               }
 271:./lib/ros_lib/ros/node_handle.h ****             }
 272:./lib/ros_lib/ros/node_handle.h ****           }
 273:./lib/ros_lib/ros/node_handle.h ****         }
 274:./lib/ros_lib/ros/node_handle.h **** 
 275:./lib/ros_lib/ros/node_handle.h ****         /* occasionally sync time */
 276:./lib/ros_lib/ros/node_handle.h ****         if( configured_ && ((c_time-last_sync_time) > (SYNC_SECONDS*500) )){
 277:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 278:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 279:./lib/ros_lib/ros/node_handle.h ****         }
 280:./lib/ros_lib/ros/node_handle.h **** 
 281:./lib/ros_lib/ros/node_handle.h ****         return 0;
 282:./lib/ros_lib/ros/node_handle.h ****       }
 283:./lib/ros_lib/ros/node_handle.h **** 
 284:./lib/ros_lib/ros/node_handle.h **** 
 285:./lib/ros_lib/ros/node_handle.h ****       /* Are we connected to the PC? */
 286:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected() {
 876              		.loc 11 286 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 0
 879              		@ frame_needed = 0, uses_anonymous_args = 0
 880              		@ link register save eliminated.
 881              	.LVL63:
 287:./lib/ros_lib/ros/node_handle.h ****         return configured_;
 288:./lib/ros_lib/ros/node_handle.h ****       };
 882              		.loc 11 288 0
 883 0000 90F8F404 		ldrb	r0, [r0, #1268]	@ zero_extendqisi2
 884              	.LVL64:
 885 0004 7047     		bx	lr
 886              		.cfi_endproc
 887              	.LFE217:
 888              		.cantunwind
 889              		.fnend
 891              		.text
 892              		.align	1
 893              		.global	_Z6led_cbRKN8std_msgs5UInt8E
 894              		.thumb
 895              		.thumb_func
 897              	_Z6led_cbRKN8std_msgs5UInt8E:
 898              		.fnstart
 899              	.LFB177:
  33:src/main.cpp  ****   led_set(cmd_msg.data);
 900              		.loc 9 33 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904              		@ link register save eliminated.
 905              	.LVL65:
  34:src/main.cpp  **** }
 906              		.loc 9 34 0
 907 0002 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 908              	.LVL66:
 909 0004 FFF7FEBF 		b	led_set
 910              	.LVL67:
 911              		.cfi_endproc
 912              	.LFE177:
 913              		.cantunwind
 914              		.fnend
 916              		.section	.text._ZNK8std_msgs6Header9serializeEPh,"axG",%progbits,_ZNK8std_msgs6Header9serializeEPh
 917              		.align	1
 918              		.weak	_ZNK8std_msgs6Header9serializeEPh
 919              		.thumb
 920              		.thumb_func
 922              	_ZNK8std_msgs6Header9serializeEPh:
 923              		.fnstart
 924              	.LFB166:
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 925              		.loc 7 27 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 8
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              	.LVL68:
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 930              		.loc 7 30 0
 931 0000 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 932              		.loc 7 27 0
 933 0002 73B5     		push	{r0, r1, r4, r5, r6, lr}
 934              	.LCFI0:
 935              		.cfi_def_cfa_offset 24
 936              		.cfi_offset 4, -16
 937              		.cfi_offset 5, -12
 938              		.cfi_offset 6, -8
 939              		.cfi_offset 14, -4
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 940              		.loc 7 30 0
 941 0004 0B70     		strb	r3, [r1]
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 942              		.loc 7 31 0
 943 0006 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 944              		.loc 7 27 0
 945 0008 0546     		mov	r5, r0
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 946              		.loc 7 31 0
 947 000a 1B0A     		lsrs	r3, r3, #8
 948 000c 4B70     		strb	r3, [r1, #1]
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 949              		.loc 7 32 0
 950 000e C388     		ldrh	r3, [r0, #6]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 951              		.loc 7 27 0
 952 0010 0C46     		mov	r4, r1
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 953              		.loc 7 32 0
 954 0012 8B70     		strb	r3, [r1, #2]
  33:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 955              		.loc 7 33 0
 956 0014 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 957 0016 CB70     		strb	r3, [r1, #3]
 958              	.LVL69:
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 959              		.loc 7 35 0
 960 0018 8368     		ldr	r3, [r0, #8]
 961 001a 0B71     		strb	r3, [r1, #4]
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 962              		.loc 7 36 0
 963 001c 8368     		ldr	r3, [r0, #8]
 964 001e 1B0A     		lsrs	r3, r3, #8
 965 0020 4B71     		strb	r3, [r1, #5]
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 966              		.loc 7 37 0
 967 0022 4389     		ldrh	r3, [r0, #10]
 968 0024 8B71     		strb	r3, [r1, #6]
  38:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 969              		.loc 7 38 0
 970 0026 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 971 0028 CB71     		strb	r3, [r1, #7]
 972              	.LVL70:
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 973              		.loc 7 40 0
 974 002a C368     		ldr	r3, [r0, #12]
 975 002c 0B72     		strb	r3, [r1, #8]
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 976              		.loc 7 41 0
 977 002e C368     		ldr	r3, [r0, #12]
 978 0030 1B0A     		lsrs	r3, r3, #8
 979 0032 4B72     		strb	r3, [r1, #9]
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 980              		.loc 7 42 0
 981 0034 C389     		ldrh	r3, [r0, #14]
 982 0036 8B72     		strb	r3, [r1, #10]
  43:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 983              		.loc 7 43 0
 984 0038 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 985 003a CB72     		strb	r3, [r1, #11]
 986              	.LVL71:
  45:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 987              		.loc 7 45 0
 988 003c 0069     		ldr	r0, [r0, #16]
 989              	.LVL72:
 990 003e FFF7FEFF 		bl	strlen
 991              	.LVL73:
 992 0042 0646     		mov	r6, r0
 993 0044 02AB     		add	r3, sp, #8
 994 0046 43F8040D 		str	r0, [r3, #-4]!
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 995              		.loc 7 46 0
 996 004a 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 997              		.loc 7 48 0
 998 004c 3246     		mov	r2, r6
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 999              		.loc 7 46 0
 1000 004e E060     		str	r0, [r4, #12]	@ unaligned
 1001              	.LVL74:
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1002              		.loc 7 48 0
 1003 0050 2969     		ldr	r1, [r5, #16]
 1004 0052 04F11000 		add	r0, r4, #16
 1005 0056 FFF7FEFF 		bl	memcpy
 1006              	.LVL75:
  51:./lib/ros_lib/std_msgs/Header.h **** 
 1007              		.loc 7 51 0
 1008 005a 06F11000 		add	r0, r6, #16
 1009              	.LVL76:
 1010 005e 02B0     		add	sp, sp, #8
 1011              	.LCFI1:
 1012              		.cfi_def_cfa_offset 16
 1013              		@ sp needed
 1014 0060 70BD     		pop	{r4, r5, r6, pc}
 1015              		.cfi_endproc
 1016              	.LFE166:
 1017              		.cantunwind
 1018              		.fnend
 1020              		.section	.text._ZNK8std_msgs6String9serializeEPh,"axG",%progbits,_ZNK8std_msgs6String9serializeEPh
 1021              		.align	1
 1022              		.weak	_ZNK8std_msgs6String9serializeEPh
 1023              		.thumb
 1024              		.thumb_func
 1026              	_ZNK8std_msgs6String9serializeEPh:
 1027              		.fnstart
 1028              	.LFB152:
  22:./lib/ros_lib/std_msgs/String.h ****     {
 1029              		.loc 5 22 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 8
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033              	.LVL77:
 1034 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1035              	.LCFI2:
 1036              		.cfi_def_cfa_offset 24
 1037              		.cfi_offset 4, -16
 1038              		.cfi_offset 5, -12
 1039              		.cfi_offset 6, -8
 1040              		.cfi_offset 14, -4
  22:./lib/ros_lib/std_msgs/String.h ****     {
 1041              		.loc 5 22 0
 1042 0002 0646     		mov	r6, r0
  25:./lib/ros_lib/std_msgs/String.h ****       memcpy(outbuffer + offset, &length_data, sizeof(uint32_t));
 1043              		.loc 5 25 0
 1044 0004 4068     		ldr	r0, [r0, #4]
 1045              	.LVL78:
  22:./lib/ros_lib/std_msgs/String.h ****     {
 1046              		.loc 5 22 0
 1047 0006 0C46     		mov	r4, r1
  25:./lib/ros_lib/std_msgs/String.h ****       memcpy(outbuffer + offset, &length_data, sizeof(uint32_t));
 1048              		.loc 5 25 0
 1049 0008 FFF7FEFF 		bl	strlen
 1050              	.LVL79:
 1051 000c 02AB     		add	r3, sp, #8
 1052 000e 43F8040D 		str	r0, [r3, #-4]!
 1053 0012 0546     		mov	r5, r0
  26:./lib/ros_lib/std_msgs/String.h ****       offset += 4;
 1054              		.loc 5 26 0
 1055 0014 1868     		ldr	r0, [r3]	@ unaligned
 1056 0016 2346     		mov	r3, r4
 1057 0018 43F8040B 		str	r0, [r3], #4	@ unaligned
 1058              	.LVL80:
  28:./lib/ros_lib/std_msgs/String.h ****       offset += length_data;
 1059              		.loc 5 28 0
 1060 001c 2A46     		mov	r2, r5
 1061 001e 7168     		ldr	r1, [r6, #4]
 1062 0020 1846     		mov	r0, r3
 1063 0022 FFF7FEFF 		bl	memcpy
 1064              	.LVL81:
  31:./lib/ros_lib/std_msgs/String.h **** 
 1065              		.loc 5 31 0
 1066 0026 281D     		adds	r0, r5, #4
 1067              	.LVL82:
 1068 0028 02B0     		add	sp, sp, #8
 1069              	.LCFI3:
 1070              		.cfi_def_cfa_offset 16
 1071              		@ sp needed
 1072 002a 70BD     		pop	{r4, r5, r6, pc}
 1073              		.cfi_endproc
 1074              	.LFE152:
 1075              		.cantunwind
 1076              		.fnend
 1078              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 1079              		.align	1
 1080              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1081              		.thumb
 1082              		.thumb_func
 1084              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1085              		.fnstart
 1086              	.LFB82:
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1087              		.loc 4 74 0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 8
 1090              		@ frame_needed = 0, uses_anonymous_args = 0
 1091              	.LVL83:
 1092 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 1093              	.LCFI4:
 1094              		.cfi_def_cfa_offset 40
 1095              		.cfi_offset 4, -28
 1096              		.cfi_offset 5, -24
 1097              		.cfi_offset 6, -20
 1098              		.cfi_offset 7, -16
 1099              		.cfi_offset 8, -12
 1100              		.cfi_offset 9, -8
 1101              		.cfi_offset 14, -4
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1102              		.loc 4 77 0
 1103 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1104              		.loc 4 74 0
 1105 0006 0746     		mov	r7, r0
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1106              		.loc 4 77 0
 1107 0008 0B70     		strb	r3, [r1]
 1108              	.LVL84:
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1109              		.loc 4 78 0
 1110 000a 0023     		movs	r3, #0
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1111              		.loc 4 80 0
 1112 000c 1A46     		mov	r2, r3
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1113              		.loc 4 74 0
 1114 000e 0C46     		mov	r4, r1
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1115              		.loc 4 78 0
 1116 0010 4B70     		strb	r3, [r1, #1]
 1117              	.LVL85:
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1118              		.loc 4 79 0
 1119 0012 8B70     		strb	r3, [r1, #2]
 1120              	.LVL86:
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1121              		.loc 4 80 0
 1122 0014 CB70     		strb	r3, [r1, #3]
 1123              	.LVL87:
 1124 0016 0431     		adds	r1, r1, #4
 1125              	.LVL88:
 1126              	.L75:
 1127              	.LBB154:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1128              		.loc 4 81 0 discriminator 3
 1129 0018 3D79     		ldrb	r5, [r7, #4]	@ zero_extendqisi2
 1130 001a 501C     		adds	r0, r2, #1
 1131 001c D2B2     		uxtb	r2, r2
 1132 001e 9542     		cmp	r5, r2
 1133 0020 A1EB0403 		sub	r3, r1, r4
 1134              	.LVL89:
 1135 0024 01F10401 		add	r1, r1, #4
 1136 0028 0FD9     		bls	.L74
 1137              	.LBB155:
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1138              		.loc 4 86 0 discriminator 2
 1139 002a FB68     		ldr	r3, [r7, #12]
 1140              	.LVL90:
 1141 002c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1142              	.LVL91:
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1143              		.loc 4 88 0 discriminator 2
 1144 0030 1A0A     		lsrs	r2, r3, #8
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1145              		.loc 4 87 0 discriminator 2
 1146 0032 01F8043C 		strb	r3, [r1, #-4]
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1147              		.loc 4 88 0 discriminator 2
 1148 0036 01F8032C 		strb	r2, [r1, #-3]
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1149              		.loc 4 89 0 discriminator 2
 1150 003a 1A0C     		lsrs	r2, r3, #16
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1151              		.loc 4 90 0 discriminator 2
 1152 003c 1B0E     		lsrs	r3, r3, #24
 1153              	.LVL92:
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1154              		.loc 4 89 0 discriminator 2
 1155 003e 01F8022C 		strb	r2, [r1, #-2]
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1156              		.loc 4 90 0 discriminator 2
 1157 0042 01F8013C 		strb	r3, [r1, #-1]
 1158              	.LVL93:
 1159              	.LBE155:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1160              		.loc 4 81 0 discriminator 2
 1161 0046 0246     		mov	r2, r0
 1162 0048 E6E7     		b	.L75
 1163              	.LVL94:
 1164              	.L74:
 1165              	.LBE154:
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1166              		.loc 4 93 0
 1167 004a 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1168              		.loc 4 94 0
 1169 004c E118     		adds	r1, r4, r3
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1170              		.loc 4 93 0
 1171 004e E254     		strb	r2, [r4, r3]
 1172              	.LVL95:
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1173              		.loc 4 94 0
 1174 0050 0022     		movs	r2, #0
 1175 0052 0433     		adds	r3, r3, #4
 1176              	.LVL96:
 1177 0054 4A70     		strb	r2, [r1, #1]
 1178              	.LVL97:
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1179              		.loc 4 95 0
 1180 0056 8A70     		strb	r2, [r1, #2]
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1181              		.loc 4 96 0
 1182 0058 CA70     		strb	r2, [r1, #3]
 1183              	.LVL98:
 1184 005a 2344     		add	r3, r3, r4
 1185              	.LVL99:
 1186              	.L77:
 1187              	.LBB156:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1188              		.loc 4 97 0 discriminator 3
 1189 005c 387C     		ldrb	r0, [r7, #16]	@ zero_extendqisi2
 1190 005e 511C     		adds	r1, r2, #1
 1191 0060 D2B2     		uxtb	r2, r2
 1192 0062 9042     		cmp	r0, r2
 1193 0064 A3EB0406 		sub	r6, r3, r4
 1194              	.LVL100:
 1195 0068 03F10403 		add	r3, r3, #4
 1196 006c 0FD9     		bls	.L76
 1197              	.LBB157:
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1198              		.loc 4 102 0 discriminator 2
 1199 006e B869     		ldr	r0, [r7, #24]
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1200              		.loc 4 103 0 discriminator 2
 1201 0070 50F82220 		ldr	r2, [r0, r2, lsl #2]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1202              		.loc 4 104 0 discriminator 2
 1203 0074 100A     		lsrs	r0, r2, #8
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1204              		.loc 4 103 0 discriminator 2
 1205 0076 03F8042C 		strb	r2, [r3, #-4]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1206              		.loc 4 104 0 discriminator 2
 1207 007a 03F8030C 		strb	r0, [r3, #-3]
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1208              		.loc 4 105 0 discriminator 2
 1209 007e 100C     		lsrs	r0, r2, #16
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1210              		.loc 4 106 0 discriminator 2
 1211 0080 120E     		lsrs	r2, r2, #24
 1212 0082 03F8012C 		strb	r2, [r3, #-1]
 1213              	.LVL101:
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1214              		.loc 4 105 0 discriminator 2
 1215 0086 03F8020C 		strb	r0, [r3, #-2]
 1216              	.LBE157:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1217              		.loc 4 97 0 discriminator 2
 1218 008a 0A46     		mov	r2, r1
 1219 008c E6E7     		b	.L77
 1220              	.LVL102:
 1221              	.L76:
 1222              	.LBE156:
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1223              		.loc 4 109 0
 1224 008e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1225              		.loc 4 110 0
 1226 0090 A219     		adds	r2, r4, r6
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1227              		.loc 4 109 0
 1228 0092 A355     		strb	r3, [r4, r6]
 1229              	.LVL103:
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1230              		.loc 4 110 0
 1231 0094 0023     		movs	r3, #0
 1232 0096 5370     		strb	r3, [r2, #1]
 1233              	.LVL104:
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1234              		.loc 4 111 0
 1235 0098 9370     		strb	r3, [r2, #2]
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1236              		.loc 4 112 0
 1237 009a 0436     		adds	r6, r6, #4
 1238              	.LVL105:
 1239 009c D370     		strb	r3, [r2, #3]
 1240              	.LVL106:
 1241              	.L79:
 1242              	.LBB158:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1243              		.loc 4 113 0 discriminator 3
 1244 009e 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 1245 00a0 DDB2     		uxtb	r5, r3
 1246 00a2 AA42     		cmp	r2, r5
 1247 00a4 03F10109 		add	r9, r3, #1
 1248 00a8 15D9     		bls	.L78
 1249              	.LBB159:
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1250              		.loc 4 114 0 discriminator 2
 1251 00aa 7B6A     		ldr	r3, [r7, #36]
 1252              	.LVL107:
 1253 00ac 53F82500 		ldr	r0, [r3, r5, lsl #2]
 1254 00b0 FFF7FEFF 		bl	strlen
 1255              	.LVL108:
 1256 00b4 8046     		mov	r8, r0
 1257 00b6 02AB     		add	r3, sp, #8
 1258 00b8 43F8040D 		str	r0, [r3, #-4]!
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1259              		.loc 4 115 0 discriminator 2
 1260 00bc 1868     		ldr	r0, [r3]	@ unaligned
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1261              		.loc 4 117 0 discriminator 2
 1262 00be 4246     		mov	r2, r8
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1263              		.loc 4 115 0 discriminator 2
 1264 00c0 A051     		str	r0, [r4, r6]	@ unaligned
 1265              	.LVL109:
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1266              		.loc 4 117 0 discriminator 2
 1267 00c2 7B6A     		ldr	r3, [r7, #36]
 1268 00c4 0436     		adds	r6, r6, #4
 1269              	.LVL110:
 1270 00c6 53F82510 		ldr	r1, [r3, r5, lsl #2]
 1271 00ca A019     		adds	r0, r4, r6
 1272 00cc FFF7FEFF 		bl	memcpy
 1273              	.LVL111:
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 1274              		.loc 4 118 0 discriminator 2
 1275 00d0 4644     		add	r6, r6, r8
 1276              	.LVL112:
 1277              	.LBE159:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1278              		.loc 4 113 0 discriminator 2
 1279 00d2 4B46     		mov	r3, r9
 1280 00d4 E3E7     		b	.L79
 1281              	.LVL113:
 1282              	.L78:
 1283              	.LBE158:
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 1284              		.loc 4 121 0
 1285 00d6 3046     		mov	r0, r6
 1286 00d8 03B0     		add	sp, sp, #12
 1287              	.LCFI5:
 1288              		.cfi_def_cfa_offset 28
 1289              		@ sp needed
 1290 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1291              		.cfi_endproc
 1292              	.LFE82:
 1293              		.cantunwind
 1294              		.fnend
 1296              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 1297              		.align	1
 1298              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1299              		.thumb
 1300              		.thumb_func
 1302              	_ZNK14rosserial_msgs3Log9serializeEPh:
 1303              		.fnstart
 1304              	.LFB68:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1305              		.loc 3 29 0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 8
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309              	.LVL114:
 1310 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1311              	.LCFI6:
 1312              		.cfi_def_cfa_offset 24
 1313              		.cfi_offset 4, -16
 1314              		.cfi_offset 5, -12
 1315              		.cfi_offset 6, -8
 1316              		.cfi_offset 14, -4
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1317              		.loc 3 32 0
 1318 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1319              		.loc 3 29 0
 1320 0004 0646     		mov	r6, r0
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1321              		.loc 3 32 0
 1322 0006 0B70     		strb	r3, [r1]
 1323              	.LVL115:
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1324              		.loc 3 34 0
 1325 0008 8068     		ldr	r0, [r0, #8]
 1326              	.LVL116:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1327              		.loc 3 29 0
 1328 000a 0D46     		mov	r5, r1
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1329              		.loc 3 34 0
 1330 000c FFF7FEFF 		bl	strlen
 1331              	.LVL117:
 1332 0010 0446     		mov	r4, r0
 1333 0012 02AB     		add	r3, sp, #8
 1334 0014 43F8040D 		str	r0, [r3, #-4]!
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1335              		.loc 3 35 0
 1336 0018 1868     		ldr	r0, [r3]	@ unaligned
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1337              		.loc 3 37 0
 1338 001a 2246     		mov	r2, r4
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1339              		.loc 3 35 0
 1340 001c C5F80100 		str	r0, [r5, #1]	@ unaligned
 1341              	.LVL118:
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1342              		.loc 3 37 0
 1343 0020 B168     		ldr	r1, [r6, #8]
 1344 0022 681D     		adds	r0, r5, #5
 1345 0024 FFF7FEFF 		bl	memcpy
 1346              	.LVL119:
  40:./lib/ros_lib/rosserial_msgs/Log.h **** 
 1347              		.loc 3 40 0
 1348 0028 601D     		adds	r0, r4, #5
 1349              	.LVL120:
 1350 002a 02B0     		add	sp, sp, #8
 1351              	.LCFI7:
 1352              		.cfi_def_cfa_offset 16
 1353              		@ sp needed
 1354 002c 70BD     		pop	{r4, r5, r6, pc}
 1355              		.cfi_endproc
 1356              	.LFE68:
 1357              		.cantunwind
 1358              		.fnend
 1360              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 1361              		.align	1
 1362              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 1363              		.thumb
 1364              		.thumb_func
 1366              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 1367              		.fnstart
 1368              	.LFB61:
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1369              		.loc 2 38 0
 1370              		.cfi_startproc
 1371              		@ args = 0, pretend = 0, frame = 16
 1372              		@ frame_needed = 0, uses_anonymous_args = 0
 1373              	.LVL121:
 1374 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 1375              	.LCFI8:
 1376              		.cfi_def_cfa_offset 40
 1377              		.cfi_offset 4, -24
 1378              		.cfi_offset 5, -20
 1379              		.cfi_offset 6, -16
 1380              		.cfi_offset 7, -12
 1381              		.cfi_offset 8, -8
 1382              		.cfi_offset 14, -4
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1383              		.loc 2 41 0
 1384 0004 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1385              		.loc 2 38 0
 1386 0006 0646     		mov	r6, r0
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1387              		.loc 2 41 0
 1388 0008 0B70     		strb	r3, [r1]
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1389              		.loc 2 42 0
 1390 000a 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1391              		.loc 2 38 0
 1392 000c 0D46     		mov	r5, r1
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1393              		.loc 2 42 0
 1394 000e 1B0A     		lsrs	r3, r3, #8
 1395 0010 4B70     		strb	r3, [r1, #1]
 1396              	.LVL122:
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1397              		.loc 2 44 0
 1398 0012 8068     		ldr	r0, [r0, #8]
 1399              	.LVL123:
 1400 0014 FFF7FEFF 		bl	strlen
 1401              	.LVL124:
 1402 0018 0446     		mov	r4, r0
 1403 001a 04AB     		add	r3, sp, #16
 1404 001c 43F80C0D 		str	r0, [r3, #-12]!
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1405              		.loc 2 45 0
 1406 0020 1868     		ldr	r0, [r3]	@ unaligned
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1407              		.loc 2 47 0
 1408 0022 2246     		mov	r2, r4
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1409              		.loc 2 45 0
 1410 0024 C5F80200 		str	r0, [r5, #2]	@ unaligned
 1411              	.LVL125:
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1412              		.loc 2 47 0
 1413 0028 B168     		ldr	r1, [r6, #8]
 1414 002a A81D     		adds	r0, r5, #6
 1415 002c FFF7FEFF 		bl	memcpy
 1416              	.LVL126:
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 1417              		.loc 2 49 0
 1418 0030 F068     		ldr	r0, [r6, #12]
 1419 0032 FFF7FEFF 		bl	strlen
 1420              	.LVL127:
 1421 0036 0746     		mov	r7, r0
 1422 0038 04AB     		add	r3, sp, #16
 1423 003a 43F8080D 		str	r0, [r3, #-8]!
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1424              		.loc 2 50 0
 1425 003e 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 1426              		.loc 2 48 0
 1427 0040 04F10608 		add	r8, r4, #6
 1428              	.LVL128:
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1429              		.loc 2 50 0
 1430 0044 45F80800 		str	r0, [r5, r8]	@ unaligned
 1431              	.LVL129:
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1432              		.loc 2 52 0
 1433 0048 0A34     		adds	r4, r4, #10
 1434 004a 3A46     		mov	r2, r7
 1435 004c F168     		ldr	r1, [r6, #12]
 1436 004e 2819     		adds	r0, r5, r4
 1437 0050 FFF7FEFF 		bl	memcpy
 1438              	.LVL130:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1439              		.loc 2 54 0
 1440 0054 3069     		ldr	r0, [r6, #16]
 1441 0056 FFF7FEFF 		bl	strlen
 1442              	.LVL131:
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 1443              		.loc 2 53 0
 1444 005a 3C44     		add	r4, r4, r7
 1445              	.LVL132:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1446              		.loc 2 54 0
 1447 005c 0746     		mov	r7, r0
 1448 005e 04AB     		add	r3, sp, #16
 1449 0060 43F8040D 		str	r0, [r3, #-4]!
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1450              		.loc 2 55 0
 1451 0064 1868     		ldr	r0, [r3]	@ unaligned
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1452              		.loc 2 57 0
 1453 0066 3A46     		mov	r2, r7
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1454              		.loc 2 55 0
 1455 0068 2851     		str	r0, [r5, r4]	@ unaligned
 1456              	.LVL133:
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1457              		.loc 2 57 0
 1458 006a 0434     		adds	r4, r4, #4
 1459              	.LVL134:
 1460 006c 2819     		adds	r0, r5, r4
 1461 006e 3169     		ldr	r1, [r6, #16]
 1462 0070 FFF7FEFF 		bl	memcpy
 1463              	.LVL135:
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 1464              		.loc 2 63 0
 1465 0074 7369     		ldr	r3, [r6, #20]
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 1466              		.loc 2 58 0
 1467 0076 3819     		adds	r0, r7, r4
 1468              	.LVL136:
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 1469              		.loc 2 64 0
 1470 0078 2B54     		strb	r3, [r5, r0]
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 1471              		.loc 2 65 0
 1472 007a 1A0A     		lsrs	r2, r3, #8
 1473 007c 0544     		add	r5, r5, r0
 1474              	.LVL137:
 1475 007e 6A70     		strb	r2, [r5, #1]
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1476              		.loc 2 70 0
 1477 0080 0430     		adds	r0, r0, #4
 1478              	.LVL138:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1479              		.loc 2 66 0
 1480 0082 1A0C     		lsrs	r2, r3, #16
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1481              		.loc 2 67 0
 1482 0084 1B0E     		lsrs	r3, r3, #24
 1483              	.LVL139:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1484              		.loc 2 66 0
 1485 0086 AA70     		strb	r2, [r5, #2]
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1486              		.loc 2 67 0
 1487 0088 EB70     		strb	r3, [r5, #3]
 1488              	.LVL140:
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1489              		.loc 2 70 0
 1490 008a 04B0     		add	sp, sp, #16
 1491              	.LCFI9:
 1492              		.cfi_def_cfa_offset 24
 1493              		@ sp needed
 1494 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1495              		.cfi_endproc
 1496              	.LFE61:
 1497              		.cantunwind
 1498              		.fnend
 1500              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
 1501              		.align	1
 1502              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 1503              		.thumb
 1504              		.thumb_func
 1506              	_ZN14rosserial_msgs3Log11deserializeEPh:
 1507              		.fnstart
 1508              	.LFB69:
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1509              		.loc 3 42 0
 1510              		.cfi_startproc
 1511              		@ args = 0, pretend = 0, frame = 8
 1512              		@ frame_needed = 0, uses_anonymous_args = 0
 1513              	.LVL141:
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1514              		.loc 3 45 0
 1515 0000 0B46     		mov	r3, r1
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1516              		.loc 3 42 0
 1517 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1518              	.LCFI10:
 1519              		.cfi_def_cfa_offset 24
 1520              		.cfi_offset 4, -12
 1521              		.cfi_offset 5, -8
 1522              		.cfi_offset 14, -4
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1523              		.loc 3 45 0
 1524 0004 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1525              		.loc 3 42 0
 1526 0008 0446     		mov	r4, r0
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1527              		.loc 3 45 0
 1528 000a 0271     		strb	r2, [r0, #4]
 1529              	.LVL142:
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1530              		.loc 3 48 0
 1531 000c 1868     		ldr	r0, [r3]	@ unaligned
 1532              	.LVL143:
 1533 000e 4A1D     		adds	r2, r1, #5
 1534 0010 0190     		str	r0, [sp, #4]	@ unaligned
 1535              	.LVL144:
 1536              	.LBB160:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1537              		.loc 3 50 0
 1538 0012 019B     		ldr	r3, [sp, #4]
 1539 0014 581D     		adds	r0, r3, #5
 1540              	.LVL145:
 1541              	.L85:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1542              		.loc 3 50 0 is_stmt 0 discriminator 3
 1543 0016 551A     		subs	r5, r2, r1
 1544              	.LVL146:
 1545 0018 A842     		cmp	r0, r5
 1546 001a 04D9     		bls	.L84
  51:./lib/ros_lib/rosserial_msgs/Log.h ****       }
 1547              		.loc 3 51 0 is_stmt 1 discriminator 2
 1548 001c 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 1549              	.LVL147:
 1550 0020 02F8025C 		strb	r5, [r2, #-2]
 1551              	.LVL148:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1552              		.loc 3 50 0 discriminator 2
 1553 0024 F7E7     		b	.L85
 1554              	.LVL149:
 1555              	.L84:
 1556              	.LBE160:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 1557              		.loc 3 53 0
 1558 0026 0B44     		add	r3, r3, r1
 1559 0028 0022     		movs	r2, #0
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1560              		.loc 3 54 0
 1561 002a 0431     		adds	r1, r1, #4
 1562              	.LVL150:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 1563              		.loc 3 53 0
 1564 002c 1A71     		strb	r2, [r3, #4]
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1565              		.loc 3 54 0
 1566 002e A160     		str	r1, [r4, #8]
 1567              	.LVL151:
  57:./lib/ros_lib/rosserial_msgs/Log.h **** 
 1568              		.loc 3 57 0
 1569 0030 03B0     		add	sp, sp, #12
 1570              	.LCFI11:
 1571              		.cfi_def_cfa_offset 12
 1572              		@ sp needed
 1573 0032 30BD     		pop	{r4, r5, pc}
 1574              		.cfi_endproc
 1575              	.LFE69:
 1576              		.cantunwind
 1577              		.fnend
 1579              		.section	.text._ZN8std_msgs6Header11deserializeEPh,"axG",%progbits,_ZN8std_msgs6Header11deserializ
 1580              		.align	1
 1581              		.weak	_ZN8std_msgs6Header11deserializeEPh
 1582              		.thumb
 1583              		.thumb_func
 1585              	_ZN8std_msgs6Header11deserializeEPh:
 1586              		.fnstart
 1587              	.LFB167:
  53:./lib/ros_lib/std_msgs/Header.h ****     {
 1588              		.loc 7 53 0
 1589              		.cfi_startproc
 1590              		@ args = 0, pretend = 0, frame = 8
 1591              		@ frame_needed = 0, uses_anonymous_args = 0
 1592              	.LVL152:
 1593 0000 0346     		mov	r3, r0
 1594 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1595              	.LCFI12:
 1596              		.cfi_def_cfa_offset 24
 1597              		.cfi_offset 4, -12
 1598              		.cfi_offset 5, -8
 1599              		.cfi_offset 14, -4
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1600              		.loc 7 56 0
 1601 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1602 0006 01F11004 		add	r4, r1, #16
 1603 000a 4260     		str	r2, [r0, #4]
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1604              		.loc 7 57 0
 1605 000c 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 1606              	.LVL153:
 1607 000e 42EA0022 		orr	r2, r2, r0, lsl #8
 1608 0012 5A60     		str	r2, [r3, #4]
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1609              		.loc 7 58 0
 1610 0014 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 1611 0016 42EA0042 		orr	r2, r2, r0, lsl #16
 1612 001a 5A60     		str	r2, [r3, #4]
  59:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1613              		.loc 7 59 0
 1614 001c C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 1615 001e 42EA0062 		orr	r2, r2, r0, lsl #24
 1616 0022 5A60     		str	r2, [r3, #4]
 1617              	.LVL154:
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1618              		.loc 7 61 0
 1619 0024 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 1620 0026 9A60     		str	r2, [r3, #8]
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1621              		.loc 7 62 0
 1622 0028 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 1623 002a 42EA0022 		orr	r2, r2, r0, lsl #8
 1624 002e 9A60     		str	r2, [r3, #8]
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1625              		.loc 7 63 0
 1626 0030 8879     		ldrb	r0, [r1, #6]	@ zero_extendqisi2
 1627 0032 42EA0042 		orr	r2, r2, r0, lsl #16
 1628 0036 9A60     		str	r2, [r3, #8]
  64:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1629              		.loc 7 64 0
 1630 0038 C879     		ldrb	r0, [r1, #7]	@ zero_extendqisi2
 1631 003a 42EA0062 		orr	r2, r2, r0, lsl #24
 1632 003e 9A60     		str	r2, [r3, #8]
 1633              	.LVL155:
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1634              		.loc 7 66 0
 1635 0040 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 1636 0042 DA60     		str	r2, [r3, #12]
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1637              		.loc 7 67 0
 1638 0044 487A     		ldrb	r0, [r1, #9]	@ zero_extendqisi2
 1639 0046 42EA0022 		orr	r2, r2, r0, lsl #8
 1640 004a DA60     		str	r2, [r3, #12]
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1641              		.loc 7 68 0
 1642 004c 887A     		ldrb	r0, [r1, #10]	@ zero_extendqisi2
 1643 004e 42EA0042 		orr	r2, r2, r0, lsl #16
 1644 0052 DA60     		str	r2, [r3, #12]
  69:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1645              		.loc 7 69 0
 1646 0054 C87A     		ldrb	r0, [r1, #11]	@ zero_extendqisi2
 1647 0056 42EA0062 		orr	r2, r2, r0, lsl #24
 1648 005a DA60     		str	r2, [r3, #12]
 1649              	.LVL156:
  72:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1650              		.loc 7 72 0
 1651 005c C868     		ldr	r0, [r1, #12]	@ unaligned
 1652 005e 0190     		str	r0, [sp, #4]	@ unaligned
 1653              	.LVL157:
 1654              	.LBB161:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1655              		.loc 7 74 0
 1656 0060 019A     		ldr	r2, [sp, #4]
 1657 0062 02F11000 		add	r0, r2, #16
 1658              	.LVL158:
 1659              	.L89:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1660              		.loc 7 74 0 is_stmt 0 discriminator 3
 1661 0066 651A     		subs	r5, r4, r1
 1662              	.LVL159:
 1663 0068 A842     		cmp	r0, r5
 1664 006a 04D9     		bls	.L88
  75:./lib/ros_lib/std_msgs/Header.h ****       }
 1665              		.loc 7 75 0 is_stmt 1 discriminator 2
 1666 006c 14F8015B 		ldrb	r5, [r4], #1	@ zero_extendqisi2
 1667              	.LVL160:
 1668 0070 04F8025C 		strb	r5, [r4, #-2]
 1669              	.LVL161:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1670              		.loc 7 74 0 discriminator 2
 1671 0074 F7E7     		b	.L89
 1672              	.LVL162:
 1673              	.L88:
 1674              	.LBE161:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 1675              		.loc 7 77 0
 1676 0076 0A44     		add	r2, r2, r1
 1677 0078 0024     		movs	r4, #0
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1678              		.loc 7 78 0
 1679 007a 0F31     		adds	r1, r1, #15
 1680              	.LVL163:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 1681              		.loc 7 77 0
 1682 007c D473     		strb	r4, [r2, #15]
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1683              		.loc 7 78 0
 1684 007e 1961     		str	r1, [r3, #16]
 1685              	.LVL164:
  81:./lib/ros_lib/std_msgs/Header.h **** 
 1686              		.loc 7 81 0
 1687 0080 03B0     		add	sp, sp, #12
 1688              	.LCFI13:
 1689              		.cfi_def_cfa_offset 12
 1690              		@ sp needed
 1691 0082 30BD     		pop	{r4, r5, pc}
 1692              		.cfi_endproc
 1693              	.LFE167:
 1694              		.cantunwind
 1695              		.fnend
 1697              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 1698              		.align	1
 1699              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 1700              		.thumb
 1701              		.thumb_func
 1703              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 1704              		.fnstart
 1705              	.LFB62:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1706              		.loc 2 72 0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 16
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
 1710              	.LVL165:
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1711              		.loc 2 75 0
 1712 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1713              		.loc 2 72 0
 1714 0002 30B5     		push	{r4, r5, lr}
 1715              	.LCFI14:
 1716              		.cfi_def_cfa_offset 12
 1717              		.cfi_offset 4, -12
 1718              		.cfi_offset 5, -8
 1719              		.cfi_offset 14, -4
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1720              		.loc 2 75 0
 1721 0004 8380     		strh	r3, [r0, #4]	@ movhi
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1722              		.loc 2 76 0
 1723 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1724              		.loc 2 72 0
 1725 0008 0446     		mov	r4, r0
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1726              		.loc 2 76 0
 1727 000a 43EA0223 		orr	r3, r3, r2, lsl #8
 1728 000e 8380     		strh	r3, [r0, #4]	@ movhi
 1729              	.LVL166:
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1730              		.loc 2 79 0
 1731 0010 D1F80200 		ldr	r0, [r1, #2]	@ unaligned
 1732              	.LVL167:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1733              		.loc 2 72 0
 1734 0014 85B0     		sub	sp, sp, #20
 1735              	.LCFI15:
 1736              		.cfi_def_cfa_offset 32
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1737              		.loc 2 79 0
 1738 0016 0190     		str	r0, [sp, #4]	@ unaligned
 1739              	.LVL168:
 1740              	.LBB162:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1741              		.loc 2 81 0
 1742 0018 019D     		ldr	r5, [sp, #4]
 1743 001a 8A1D     		adds	r2, r1, #6
 1744 001c AB1D     		adds	r3, r5, #6
 1745              	.LVL169:
 1746              	.L93:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1747              		.loc 2 81 0 is_stmt 0 discriminator 3
 1748 001e 501A     		subs	r0, r2, r1
 1749              	.LVL170:
 1750 0020 8342     		cmp	r3, r0
 1751 0022 04D9     		bls	.L92
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 1752              		.loc 2 82 0 is_stmt 1 discriminator 2
 1753 0024 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 1754              	.LVL171:
 1755 0028 02F8020C 		strb	r0, [r2, #-2]
 1756              	.LVL172:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1757              		.loc 2 81 0 discriminator 2
 1758 002c F7E7     		b	.L93
 1759              	.LVL173:
 1760              	.L92:
 1761              	.LBE162:
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 1762              		.loc 2 84 0
 1763 002e 4A19     		adds	r2, r1, r5
 1764 0030 0020     		movs	r0, #0
 1765              	.LVL174:
 1766 0032 5071     		strb	r0, [r2, #5]
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1767              		.loc 2 85 0
 1768 0034 4A1D     		adds	r2, r1, #5
 1769 0036 A260     		str	r2, [r4, #8]
 1770              	.LVL175:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1771              		.loc 2 88 0
 1772 0038 C858     		ldr	r0, [r1, r3]	@ unaligned
 1773              	.LBB163:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1774              		.loc 2 90 0
 1775 003a 1A1D     		adds	r2, r3, #4
 1776              	.LBE163:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1777              		.loc 2 88 0
 1778 003c 0290     		str	r0, [sp, #8]	@ unaligned
 1779              	.LVL176:
 1780              	.LBB164:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1781              		.loc 2 90 0
 1782 003e 029B     		ldr	r3, [sp, #8]
 1783 0040 05F10A00 		add	r0, r5, #10
 1784 0044 1344     		add	r3, r3, r2
 1785 0046 0844     		add	r0, r0, r1
 1786              	.LVL177:
 1787              	.L95:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1788              		.loc 2 90 0 is_stmt 0 discriminator 3
 1789 0048 451A     		subs	r5, r0, r1
 1790              	.LVL178:
 1791 004a AB42     		cmp	r3, r5
 1792 004c 04D9     		bls	.L94
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 1793              		.loc 2 91 0 is_stmt 1 discriminator 2
 1794 004e 10F8015B 		ldrb	r5, [r0], #1	@ zero_extendqisi2
 1795              	.LVL179:
 1796 0052 00F8025C 		strb	r5, [r0, #-2]
 1797              	.LVL180:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1798              		.loc 2 90 0 discriminator 2
 1799 0056 F7E7     		b	.L95
 1800              	.LVL181:
 1801              	.L94:
 1802              	.LBE164:
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1803              		.loc 2 94 0
 1804 0058 013A     		subs	r2, r2, #1
 1805              	.LVL182:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 1806              		.loc 2 93 0
 1807 005a C818     		adds	r0, r1, r3
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1808              		.loc 2 94 0
 1809 005c 0A44     		add	r2, r2, r1
 1810              	.LVL183:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 1811              		.loc 2 93 0
 1812 005e 0025     		movs	r5, #0
 1813              	.LVL184:
 1814 0060 00F8015C 		strb	r5, [r0, #-1]
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1815              		.loc 2 94 0
 1816 0064 E260     		str	r2, [r4, #12]
 1817              	.LVL185:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1818              		.loc 2 97 0
 1819 0066 0068     		ldr	r0, [r0]	@ unaligned
 1820              	.LBB165:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1821              		.loc 2 99 0
 1822 0068 0433     		adds	r3, r3, #4
 1823              	.LVL186:
 1824              	.LBE165:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1825              		.loc 2 97 0
 1826 006a 0390     		str	r0, [sp, #12]	@ unaligned
 1827              	.LVL187:
 1828              	.LBB166:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1829              		.loc 2 99 0
 1830 006c 0398     		ldr	r0, [sp, #12]
 1831 006e CA18     		adds	r2, r1, r3
 1832 0070 1844     		add	r0, r0, r3
 1833              	.LVL188:
 1834              	.L97:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1835              		.loc 2 99 0 is_stmt 0 discriminator 3
 1836 0072 551A     		subs	r5, r2, r1
 1837              	.LVL189:
 1838 0074 A842     		cmp	r0, r5
 1839 0076 04D9     		bls	.L96
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 1840              		.loc 2 100 0 is_stmt 1 discriminator 2
 1841 0078 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 1842              	.LVL190:
 1843 007c 02F8025C 		strb	r5, [r2, #-2]
 1844              	.LVL191:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1845              		.loc 2 99 0 discriminator 2
 1846 0080 F7E7     		b	.L97
 1847              	.LVL192:
 1848              	.L96:
 1849              	.LBE166:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1850              		.loc 2 103 0
 1851 0082 013B     		subs	r3, r3, #1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 1852              		.loc 2 102 0
 1853 0084 0D18     		adds	r5, r1, r0
 1854              	.LVL193:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1855              		.loc 2 103 0
 1856 0086 0B44     		add	r3, r3, r1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 1857              		.loc 2 102 0
 1858 0088 0022     		movs	r2, #0
 1859              	.LVL194:
 1860 008a 05F8012C 		strb	r2, [r5, #-1]
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1861              		.loc 2 103 0
 1862 008e 2361     		str	r3, [r4, #16]
 1863              	.LVL195:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1864              		.loc 2 114 0
 1865 0090 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 1866 0092 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 1867 0094 1B04     		lsls	r3, r3, #16
 1868 0096 43EA0223 		orr	r3, r3, r2, lsl #8
 1869 009a 0A5C     		ldrb	r2, [r1, r0]	@ zero_extendqisi2
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1870              		.loc 2 117 0
 1871 009c 0430     		adds	r0, r0, #4
 1872              	.LVL196:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1873              		.loc 2 114 0
 1874 009e 1343     		orrs	r3, r3, r2
 1875 00a0 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 1876 00a2 43EA0263 		orr	r3, r3, r2, lsl #24
 1877 00a6 6361     		str	r3, [r4, #20]
 1878              	.LVL197:
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1879              		.loc 2 117 0
 1880 00a8 05B0     		add	sp, sp, #20
 1881              	.LCFI16:
 1882              		.cfi_def_cfa_offset 12
 1883              		@ sp needed
 1884 00aa 30BD     		pop	{r4, r5, pc}
 1885              		.cfi_endproc
 1886              	.LFE62:
 1887              		.cantunwind
 1888              		.fnend
 1890              		.section	.text._ZN8std_msgs6String11deserializeEPh,"axG",%progbits,_ZN8std_msgs6String11deserializ
 1891              		.align	1
 1892              		.weak	_ZN8std_msgs6String11deserializeEPh
 1893              		.thumb
 1894              		.thumb_func
 1896              	_ZN8std_msgs6String11deserializeEPh:
 1897              		.fnstart
 1898              	.LFB153:
  33:./lib/ros_lib/std_msgs/String.h ****     {
 1899              		.loc 5 33 0
 1900              		.cfi_startproc
 1901              		@ args = 0, pretend = 0, frame = 8
 1902              		@ frame_needed = 0, uses_anonymous_args = 0
 1903              	.LVL198:
  37:./lib/ros_lib/std_msgs/String.h ****       offset += 4;
 1904              		.loc 5 37 0
 1905 0000 0B46     		mov	r3, r1
  33:./lib/ros_lib/std_msgs/String.h ****     {
 1906              		.loc 5 33 0
 1907 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1908              	.LCFI17:
 1909              		.cfi_def_cfa_offset 24
 1910              		.cfi_offset 4, -12
 1911              		.cfi_offset 5, -8
 1912              		.cfi_offset 14, -4
  33:./lib/ros_lib/std_msgs/String.h ****     {
 1913              		.loc 5 33 0
 1914 0004 0446     		mov	r4, r0
  37:./lib/ros_lib/std_msgs/String.h ****       offset += 4;
 1915              		.loc 5 37 0
 1916 0006 53F8040B 		ldr	r0, [r3], #4	@ unaligned
 1917              	.LVL199:
 1918 000a 0190     		str	r0, [sp, #4]	@ unaligned
 1919              	.LVL200:
 1920              	.LBB167:
  39:./lib/ros_lib/std_msgs/String.h ****           inbuffer[k-1]=inbuffer[k];
 1921              		.loc 5 39 0
 1922 000c 019A     		ldr	r2, [sp, #4]
 1923 000e 101D     		adds	r0, r2, #4
 1924              	.LVL201:
 1925              	.L103:
  39:./lib/ros_lib/std_msgs/String.h ****           inbuffer[k-1]=inbuffer[k];
 1926              		.loc 5 39 0 is_stmt 0 discriminator 3
 1927 0010 5D1A     		subs	r5, r3, r1
 1928              	.LVL202:
 1929 0012 A842     		cmp	r0, r5
 1930 0014 04D9     		bls	.L102
  40:./lib/ros_lib/std_msgs/String.h ****       }
 1931              		.loc 5 40 0 is_stmt 1 discriminator 2
 1932 0016 13F8015B 		ldrb	r5, [r3], #1	@ zero_extendqisi2
 1933              	.LVL203:
 1934 001a 03F8025C 		strb	r5, [r3, #-2]
 1935              	.LVL204:
  39:./lib/ros_lib/std_msgs/String.h ****           inbuffer[k-1]=inbuffer[k];
 1936              		.loc 5 39 0 discriminator 2
 1937 001e F7E7     		b	.L103
 1938              	.LVL205:
 1939              	.L102:
 1940              	.LBE167:
  42:./lib/ros_lib/std_msgs/String.h ****       this->data = (char *)(inbuffer + offset-1);
 1941              		.loc 5 42 0
 1942 0020 0A44     		add	r2, r2, r1
 1943 0022 0023     		movs	r3, #0
  43:./lib/ros_lib/std_msgs/String.h ****       offset += length_data;
 1944              		.loc 5 43 0
 1945 0024 0331     		adds	r1, r1, #3
 1946              	.LVL206:
  42:./lib/ros_lib/std_msgs/String.h ****       this->data = (char *)(inbuffer + offset-1);
 1947              		.loc 5 42 0
 1948 0026 D370     		strb	r3, [r2, #3]
  43:./lib/ros_lib/std_msgs/String.h ****       offset += length_data;
 1949              		.loc 5 43 0
 1950 0028 6160     		str	r1, [r4, #4]
 1951              	.LVL207:
  46:./lib/ros_lib/std_msgs/String.h **** 
 1952              		.loc 5 46 0
 1953 002a 03B0     		add	sp, sp, #12
 1954              	.LCFI18:
 1955              		.cfi_def_cfa_offset 12
 1956              		@ sp needed
 1957 002c 30BD     		pop	{r4, r5, pc}
 1958              		.cfi_endproc
 1959              	.LFE153:
 1960              		.cantunwind
 1961              		.fnend
 1963              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 1964              		.align	1
 1965              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 1966              		.thumb
 1967              		.thumb_func
 1969              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 1970              		.fnstart
 1971              	.LFB83:
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1972              		.loc 4 123 0
 1973              		.cfi_startproc
 1974              		@ args = 0, pretend = 0, frame = 8
 1975              		@ frame_needed = 0, uses_anonymous_args = 0
 1976              	.LVL208:
 1977 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1978              	.LCFI19:
 1979              		.cfi_def_cfa_offset 32
 1980              		.cfi_offset 4, -20
 1981              		.cfi_offset 5, -16
 1982              		.cfi_offset 6, -12
 1983              		.cfi_offset 7, -8
 1984              		.cfi_offset 14, -4
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 1985              		.loc 4 126 0
 1986 0002 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 1987              	.LVL209:
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 1988              		.loc 4 127 0
 1989 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1990              		.loc 4 123 0
 1991 0006 0446     		mov	r4, r0
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 1992              		.loc 4 127 0
 1993 0008 AB42     		cmp	r3, r5
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1994              		.loc 4 123 0
 1995 000a 0E46     		mov	r6, r1
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 1996              		.loc 4 127 0
 1997 000c 04D2     		bcs	.L106
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 1998              		.loc 4 128 0
 1999 000e A900     		lsls	r1, r5, #2
 2000              	.LVL210:
 2001 0010 C068     		ldr	r0, [r0, #12]
 2002              	.LVL211:
 2003 0012 FFF7FEFF 		bl	realloc
 2004              	.LVL212:
 2005 0016 E060     		str	r0, [r4, #12]
 2006              	.L106:
 2007              	.LVL213:
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 2008              		.loc 4 130 0
 2009 0018 2571     		strb	r5, [r4, #4]
 2010              	.LVL214:
 2011 001a 321D     		adds	r2, r6, #4
 2012 001c 0021     		movs	r1, #0
 2013              	.LVL215:
 2014              	.L108:
 2015              	.LBB168:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2016              		.loc 4 131 0 discriminator 3
 2017 001e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2018 0020 4F1C     		adds	r7, r1, #1
 2019 0022 C9B2     		uxtb	r1, r1
 2020 0024 8B42     		cmp	r3, r1
 2021 0026 A2EB0605 		sub	r5, r2, r6
 2022              	.LVL216:
 2023 002a 02F10402 		add	r2, r2, #4
 2024 002e 14D9     		bls	.L107
 2025              	.LVL217:
 2026              	.LBB169:
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 2027              		.loc 4 141 0 discriminator 2
 2028 0030 12F8023C 		ldrb	r3, [r2, #-2]	@ zero_extendqisi2
 2029              	.LVL218:
 2030 0034 12F8030C 		ldrb	r0, [r2, #-3]	@ zero_extendqisi2
 2031              	.LVL219:
 2032 0038 1B04     		lsls	r3, r3, #16
 2033              	.LVL220:
 2034 003a 43EA0023 		orr	r3, r3, r0, lsl #8
 2035 003e 12F8040C 		ldrb	r0, [r2, #-4]	@ zero_extendqisi2
 2036              	.LVL221:
 2037 0042 0343     		orrs	r3, r3, r0
 2038 0044 12F8010C 		ldrb	r0, [r2, #-1]	@ zero_extendqisi2
 2039 0048 43EA0063 		orr	r3, r3, r0, lsl #24
 2040 004c A360     		str	r3, [r4, #8]
 2041              	.LVL222:
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2042              		.loc 4 143 0 discriminator 2
 2043 004e A068     		ldr	r0, [r4, #8]	@ unaligned
 2044 0050 E368     		ldr	r3, [r4, #12]
 2045 0052 43F82100 		str	r0, [r3, r1, lsl #2]	@ unaligned
 2046              	.LVL223:
 2047              	.LBE169:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2048              		.loc 4 131 0 discriminator 2
 2049 0056 3946     		mov	r1, r7
 2050 0058 E1E7     		b	.L108
 2051              	.LVL224:
 2052              	.L107:
 2053              	.LBE168:
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 2054              		.loc 4 145 0
 2055 005a 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2056              	.LVL225:
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 2057              		.loc 4 146 0
 2058 005c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 2059 005e BB42     		cmp	r3, r7
 2060 0060 04D2     		bcs	.L109
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2061              		.loc 4 147 0
 2062 0062 B900     		lsls	r1, r7, #2
 2063 0064 A069     		ldr	r0, [r4, #24]
 2064 0066 FFF7FEFF 		bl	realloc
 2065              	.LVL226:
 2066 006a A061     		str	r0, [r4, #24]
 2067              	.L109:
 2068              	.LVL227:
 2069 006c 2B1D     		adds	r3, r5, #4
 2070              	.LVL228:
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 2071              		.loc 4 149 0
 2072 006e 2774     		strb	r7, [r4, #16]
 2073              	.LVL229:
 2074 0070 3344     		add	r3, r3, r6
 2075              	.LVL230:
 2076 0072 0022     		movs	r2, #0
 2077              	.LVL231:
 2078              	.L111:
 2079              	.LBB170:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2080              		.loc 4 150 0 discriminator 3
 2081 0074 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 2082 0076 571C     		adds	r7, r2, #1
 2083 0078 D2B2     		uxtb	r2, r2
 2084 007a 9142     		cmp	r1, r2
 2085 007c A3EB0605 		sub	r5, r3, r6
 2086              	.LVL232:
 2087 0080 03F10403 		add	r3, r3, #4
 2088 0084 14D9     		bls	.L110
 2089              	.LVL233:
 2090              	.LBB171:
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 2091              		.loc 4 159 0 discriminator 2
 2092 0086 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 2093 008a 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2094 008e 0904     		lsls	r1, r1, #16
 2095              	.LVL234:
 2096 0090 41EA0021 		orr	r1, r1, r0, lsl #8
 2097              	.LVL235:
 2098 0094 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2099 0098 0143     		orrs	r1, r1, r0
 2100 009a 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2101              	.LVL236:
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 2102              		.loc 4 160 0 discriminator 2
 2103 009e 41EA0061 		orr	r1, r1, r0, lsl #24
 2104 00a2 6161     		str	r1, [r4, #20]	@ float
 2105              	.LVL237:
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2106              		.loc 4 162 0 discriminator 2
 2107 00a4 6069     		ldr	r0, [r4, #20]	@ unaligned
 2108 00a6 A169     		ldr	r1, [r4, #24]
 2109 00a8 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 2110              	.LVL238:
 2111              	.LBE171:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2112              		.loc 4 150 0 discriminator 2
 2113 00ac 3A46     		mov	r2, r7
 2114 00ae E1E7     		b	.L111
 2115              	.LVL239:
 2116              	.L110:
 2117              	.LBE170:
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 2118              		.loc 4 164 0
 2119 00b0 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2120              	.LVL240:
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 2121              		.loc 4 165 0
 2122 00b2 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 2123 00b4 BB42     		cmp	r3, r7
 2124 00b6 04D2     		bcs	.L112
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2125              		.loc 4 166 0
 2126 00b8 B900     		lsls	r1, r7, #2
 2127 00ba 606A     		ldr	r0, [r4, #36]
 2128 00bc FFF7FEFF 		bl	realloc
 2129              	.LVL241:
 2130 00c0 6062     		str	r0, [r4, #36]
 2131              	.L112:
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 2132              		.loc 4 167 0
 2133 00c2 2B1D     		adds	r3, r5, #4
 2134              	.LVL242:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2135              		.loc 4 168 0
 2136 00c4 0025     		movs	r5, #0
 2137              	.LBB172:
 2138              	.LBB173:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2139              		.loc 4 176 0
 2140 00c6 AE46     		mov	lr, r5
 2141              	.LBE173:
 2142              	.LBE172:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2143              		.loc 4 168 0
 2144 00c8 2777     		strb	r7, [r4, #28]
 2145              	.LVL243:
 2146              	.L116:
 2147              	.LBB177:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2148              		.loc 4 169 0 discriminator 1
 2149 00ca 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 2150 00cc EFB2     		uxtb	r7, r5
 2151 00ce BA42     		cmp	r2, r7
 2152 00d0 19D9     		bls	.L113
 2153              	.LBB176:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2154              		.loc 4 171 0
 2155 00d2 F058     		ldr	r0, [r6, r3]	@ unaligned
 2156              	.LBB174:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2157              		.loc 4 173 0
 2158 00d4 1A1D     		adds	r2, r3, #4
 2159              	.LBE174:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2160              		.loc 4 171 0
 2161 00d6 0190     		str	r0, [sp, #4]	@ unaligned
 2162              	.LVL244:
 2163              	.LBB175:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2164              		.loc 4 173 0
 2165 00d8 019B     		ldr	r3, [sp, #4]
 2166 00da B118     		adds	r1, r6, r2
 2167 00dc 1344     		add	r3, r3, r2
 2168              	.LVL245:
 2169              	.L115:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2170              		.loc 4 173 0 is_stmt 0 discriminator 3
 2171 00de 881B     		subs	r0, r1, r6
 2172              	.LVL246:
 2173 00e0 8342     		cmp	r3, r0
 2174 00e2 04D9     		bls	.L114
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2175              		.loc 4 174 0 is_stmt 1 discriminator 2
 2176 00e4 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 2177              	.LVL247:
 2178 00e8 01F8020C 		strb	r0, [r1, #-2]
 2179              	.LVL248:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2180              		.loc 4 173 0 discriminator 2
 2181 00ec F7E7     		b	.L115
 2182              	.LVL249:
 2183              	.L114:
 2184              	.LBE175:
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2185              		.loc 4 177 0 discriminator 2
 2186 00ee 013A     		subs	r2, r2, #1
 2187              	.LVL250:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2188              		.loc 4 176 0 discriminator 2
 2189 00f0 F118     		adds	r1, r6, r3
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2190              		.loc 4 177 0 discriminator 2
 2191 00f2 3244     		add	r2, r2, r6
 2192              	.LVL251:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2193              		.loc 4 176 0 discriminator 2
 2194 00f4 01F801EC 		strb	lr, [r1, #-1]
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2195              		.loc 4 177 0 discriminator 2
 2196 00f8 2262     		str	r2, [r4, #32]
 2197              	.LVL252:
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2198              		.loc 4 179 0 discriminator 2
 2199 00fa 216A     		ldr	r1, [r4, #32]	@ unaligned
 2200 00fc 626A     		ldr	r2, [r4, #36]
 2201 00fe 0135     		adds	r5, r5, #1
 2202              	.LVL253:
 2203 0100 42F82710 		str	r1, [r2, r7, lsl #2]	@ unaligned
 2204              	.LVL254:
 2205              	.LBE176:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2206              		.loc 4 169 0 discriminator 2
 2207 0104 E1E7     		b	.L116
 2208              	.LVL255:
 2209              	.L113:
 2210              	.LBE177:
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2211              		.loc 4 182 0
 2212 0106 1846     		mov	r0, r3
 2213 0108 03B0     		add	sp, sp, #12
 2214              	.LCFI20:
 2215              		.cfi_def_cfa_offset 20
 2216              		@ sp needed
 2217 010a F0BD     		pop	{r4, r5, r6, r7, pc}
 2218              		.cfi_endproc
 2219              	.LFE83:
 2220              		.cantunwind
 2221              		.fnend
 2223              		.global	__aeabi_fcmplt
 2224              		.section	.text._ZN3ros3Msg19serializeAvrFloat64EPhf,"axG",%progbits,_ZN3ros3Msg19serializeAvrFloat
 2225              		.align	1
 2226              		.weak	_ZN3ros3Msg19serializeAvrFloat64EPhf
 2227              		.thumb
 2228              		.thumb_func
 2230              	_ZN3ros3Msg19serializeAvrFloat64EPhf:
 2231              		.fnstart
 2232              	.LFB29:
 2233              		.file 12 "./lib/ros_lib/ros/msg.h"
   1:./lib/ros_lib/ros/msg.h **** /* 
   2:./lib/ros_lib/ros/msg.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/msg.h ****  *
   4:./lib/ros_lib/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/msg.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/msg.h ****  *
   7:./lib/ros_lib/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/msg.h ****  * are met:
  10:./lib/ros_lib/ros/msg.h ****  *
  11:./lib/ros_lib/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/msg.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/msg.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/msg.h ****  *
  21:./lib/ros_lib/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/msg.h ****  */
  34:./lib/ros_lib/ros/msg.h **** 
  35:./lib/ros_lib/ros/msg.h **** #ifndef _ROS_MSG_H_
  36:./lib/ros_lib/ros/msg.h **** #define _ROS_MSG_H_
  37:./lib/ros_lib/ros/msg.h **** 
  38:./lib/ros_lib/ros/msg.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/msg.h **** 
  40:./lib/ros_lib/ros/msg.h **** namespace ros {
  41:./lib/ros_lib/ros/msg.h **** 
  42:./lib/ros_lib/ros/msg.h **** /* Base Message Type */
  43:./lib/ros_lib/ros/msg.h **** class Msg
  44:./lib/ros_lib/ros/msg.h **** {
  45:./lib/ros_lib/ros/msg.h **** public:
  46:./lib/ros_lib/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  47:./lib/ros_lib/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  48:./lib/ros_lib/ros/msg.h ****   virtual const char * getType() = 0;
  49:./lib/ros_lib/ros/msg.h ****   virtual const char * getMD5() = 0;
  50:./lib/ros_lib/ros/msg.h **** 
  51:./lib/ros_lib/ros/msg.h ****   /**
  52:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  53:./lib/ros_lib/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  54:./lib/ros_lib/ros/msg.h ****    *        fields, despite AVV having no native support for double.
  55:./lib/ros_lib/ros/msg.h ****    *
  56:./lib/ros_lib/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  57:./lib/ros_lib/ros/msg.h ****    * @param[in] f value to serialize.
  58:./lib/ros_lib/ros/msg.h ****    *
  59:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  60:./lib/ros_lib/ros/msg.h ****    *
  61:./lib/ros_lib/ros/msg.h ****    */
  62:./lib/ros_lib/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
 2234              		.loc 12 62 0
 2235              		.cfi_startproc
 2236              		@ args = 0, pretend = 0, frame = 0
 2237              		@ frame_needed = 0, uses_anonymous_args = 0
 2238              	.LVL256:
 2239 0000 38B5     		push	{r3, r4, r5, lr}
 2240              	.LCFI21:
 2241              		.cfi_def_cfa_offset 16
 2242              		.cfi_offset 3, -16
 2243              		.cfi_offset 4, -12
 2244              		.cfi_offset 5, -8
 2245              		.cfi_offset 14, -4
  63:./lib/ros_lib/ros/msg.h ****   {
  64:./lib/ros_lib/ros/msg.h ****     const int32_t* val = (int32_t*) &f;
  65:./lib/ros_lib/ros/msg.h ****     int32_t exp = ((*val >> 23) & 255);
 2246              		.loc 12 65 0
 2247 0002 C1F3C753 		ubfx	r3, r1, #23, #8
 2248              	.LVL257:
  62:./lib/ros_lib/ros/msg.h ****   {
 2249              		.loc 12 62 0
 2250 0006 0546     		mov	r5, r0
 2251              		.loc 12 65 0
 2252 0008 0A46     		mov	r2, r1
  62:./lib/ros_lib/ros/msg.h ****   {
 2253              		.loc 12 62 0
 2254 000a 0846     		mov	r0, r1
 2255              	.LVL258:
  66:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 2256              		.loc 12 66 0
 2257 000c 0BB1     		cbz	r3, .L119
  67:./lib/ros_lib/ros/msg.h ****     {
  68:./lib/ros_lib/ros/msg.h ****       exp += 1023 - 127;
 2258              		.loc 12 68 0
 2259 000e 03F56073 		add	r3, r3, #896
 2260              	.LVL259:
 2261              	.L119:
  69:./lib/ros_lib/ros/msg.h ****     }
  70:./lib/ros_lib/ros/msg.h **** 
  71:./lib/ros_lib/ros/msg.h ****     int32_t sig = *val;
  72:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 2262              		.loc 12 72 0
 2263 0012 0021     		movs	r1, #0
 2264              	.LVL260:
 2265 0014 2970     		strb	r1, [r5]
 2266              	.LVL261:
  73:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 2267              		.loc 12 73 0
 2268 0016 6970     		strb	r1, [r5, #1]
 2269              	.LVL262:
  74:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 2270              		.loc 12 74 0
 2271 0018 A970     		strb	r1, [r5, #2]
 2272              	.LVL263:
  75:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 2273              		.loc 12 75 0
 2274 001a 5101     		lsls	r1, r2, #5
 2275 001c E970     		strb	r1, [r5, #3]
 2276              	.LVL264:
  76:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 2277              		.loc 12 76 0
 2278 001e D110     		asrs	r1, r2, #3
 2279 0020 2971     		strb	r1, [r5, #4]
 2280              	.LVL265:
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 2281              		.loc 12 77 0
 2282 0022 D112     		asrs	r1, r2, #11
  78:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 2283              		.loc 12 78 0
 2284 0024 C2F3C342 		ubfx	r2, r2, #19, #4
 2285 0028 42EA0312 		orr	r2, r2, r3, lsl #4
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 2286              		.loc 12 77 0
 2287 002c 6971     		strb	r1, [r5, #5]
 2288              	.LVL266:
 2289              		.loc 12 78 0
 2290 002e AA71     		strb	r2, [r5, #6]
 2291              	.LVL267:
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
  80:./lib/ros_lib/ros/msg.h **** 
  81:./lib/ros_lib/ros/msg.h ****     // Mark negative bit as necessary.
  82:./lib/ros_lib/ros/msg.h ****     if (f < 0)
 2292              		.loc 12 82 0
 2293 0030 0021     		movs	r1, #0
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 2294              		.loc 12 79 0
 2295 0032 C3F30714 		ubfx	r4, r3, #4, #8
 2296              		.loc 12 82 0
 2297 0036 FFF7FEFF 		bl	__aeabi_fcmplt
 2298              	.LVL268:
 2299 003a 08B9     		cbnz	r0, .L120
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 2300              		.loc 12 79 0
 2301 003c EC71     		strb	r4, [r5, #7]
 2302 003e 02E0     		b	.L121
 2303              	.L120:
  83:./lib/ros_lib/ros/msg.h ****     {
  84:./lib/ros_lib/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
 2304              		.loc 12 84 0
 2305 0040 64F07F03 		orn	r3, r4, #127
 2306 0044 EB71     		strb	r3, [r5, #7]
 2307              	.L121:
  85:./lib/ros_lib/ros/msg.h ****     }
  86:./lib/ros_lib/ros/msg.h **** 
  87:./lib/ros_lib/ros/msg.h ****     return 8;
  88:./lib/ros_lib/ros/msg.h ****   }
 2308              		.loc 12 88 0
 2309 0046 0820     		movs	r0, #8
 2310 0048 38BD     		pop	{r3, r4, r5, pc}
 2311              		.cfi_endproc
 2312              	.LFE29:
 2313              		.cantunwind
 2314              		.fnend
 2316              		.section	.text._ZNK12roberto_msgs10MotorState9serializeEPh,"axG",%progbits,_ZNK12roberto_msgs10Mot
 2317              		.align	1
 2318              		.weak	_ZNK12roberto_msgs10MotorState9serializeEPh
 2319              		.thumb
 2320              		.thumb_func
 2322              	_ZNK12roberto_msgs10MotorState9serializeEPh:
 2323              		.fnstart
 2324              	.LFB173:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 2325              		.loc 8 37 0
 2326              		.cfi_startproc
 2327              		@ args = 0, pretend = 0, frame = 0
 2328              		@ frame_needed = 0, uses_anonymous_args = 0
 2329              	.LVL269:
 2330 0000 70B5     		push	{r4, r5, r6, lr}
 2331              	.LCFI22:
 2332              		.cfi_def_cfa_offset 16
 2333              		.cfi_offset 4, -16
 2334              		.cfi_offset 5, -12
 2335              		.cfi_offset 6, -8
 2336              		.cfi_offset 14, -4
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 2337              		.loc 8 37 0
 2338 0002 0546     		mov	r5, r0
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 2339              		.loc 8 40 0
 2340 0004 0430     		adds	r0, r0, #4
 2341              	.LVL270:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 2342              		.loc 8 37 0
 2343 0006 0E46     		mov	r6, r1
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 2344              		.loc 8 40 0
 2345 0008 FFF7FEFF 		bl	_ZNK8std_msgs6Header9serializeEPh
 2346              	.LVL271:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 2347              		.loc 8 41 0
 2348 000c A969     		ldr	r1, [r5, #24]	@ float
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 2349              		.loc 8 40 0
 2350 000e 0446     		mov	r4, r0
 2351              	.LVL272:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 2352              		.loc 8 41 0
 2353 0010 3018     		adds	r0, r6, r0
 2354              	.LVL273:
 2355 0012 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 2356              	.LVL274:
 2357 0016 0444     		add	r4, r4, r0
 2358              	.LVL275:
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
 2359              		.loc 8 42 0
 2360 0018 E969     		ldr	r1, [r5, #28]	@ float
 2361 001a 3019     		adds	r0, r6, r4
 2362 001c FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 2363              	.LVL276:
 2364 0020 0444     		add	r4, r4, r0
 2365              	.LVL277:
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
 2366              		.loc 8 43 0
 2367 0022 296A     		ldr	r1, [r5, #32]	@ float
 2368 0024 3019     		adds	r0, r6, r4
 2369 0026 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 2370              	.LVL278:
 2371 002a 0444     		add	r4, r4, r0
 2372              	.LVL279:
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
 2373              		.loc 8 44 0
 2374 002c 696A     		ldr	r1, [r5, #36]	@ float
 2375 002e 3019     		adds	r0, r6, r4
 2376 0030 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 2377              	.LVL280:
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 2378              		.loc 8 45 0
 2379 0034 95F82830 		ldrb	r3, [r5, #40]	@ zero_extendqisi2
 2380 0038 2044     		add	r0, r0, r4
 2381              	.LVL281:
 2382 003a 3354     		strb	r3, [r6, r0]
 2383              	.LVL282:
  48:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 2384              		.loc 8 48 0
 2385 003c 0130     		adds	r0, r0, #1
 2386              	.LVL283:
 2387 003e 70BD     		pop	{r4, r5, r6, pc}
 2388              		.cfi_endproc
 2389              	.LFE173:
 2390              		.cantunwind
 2391              		.fnend
 2393              		.section	.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf,"axG",%progbits,_ZN3ros3Msg21deserializeAv
 2394              		.align	1
 2395              		.weak	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 2396              		.thumb
 2397              		.thumb_func
 2399              	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf:
 2400              		.fnstart
 2401              	.LFB30:
  89:./lib/ros_lib/ros/msg.h **** 
  90:./lib/ros_lib/ros/msg.h ****   /**
  91:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
  92:./lib/ros_lib/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
  93:./lib/ros_lib/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
  94:./lib/ros_lib/ros/msg.h ****    *
  95:./lib/ros_lib/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
  96:./lib/ros_lib/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
  97:./lib/ros_lib/ros/msg.h ****    *
  98:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  99:./lib/ros_lib/ros/msg.h ****    */
 100:./lib/ros_lib/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 2402              		.loc 12 100 0
 2403              		.cfi_startproc
 2404              		@ args = 0, pretend = 0, frame = 0
 2405              		@ frame_needed = 0, uses_anonymous_args = 0
 2406              	.LVL284:
 2407 0000 30B5     		push	{r4, r5, lr}
 2408              	.LCFI23:
 2409              		.cfi_def_cfa_offset 12
 2410              		.cfi_offset 4, -12
 2411              		.cfi_offset 5, -8
 2412              		.cfi_offset 14, -4
 101:./lib/ros_lib/ros/msg.h ****   {
 102:./lib/ros_lib/ros/msg.h ****     uint32_t* val = (uint32_t*)f;
 103:./lib/ros_lib/ros/msg.h ****     inbuffer += 3;
 104:./lib/ros_lib/ros/msg.h **** 
 105:./lib/ros_lib/ros/msg.h ****     // Copy truncated mantissa.
 106:./lib/ros_lib/ros/msg.h ****     *val = ((uint32_t)(*(inbuffer++)) >> 5 & 0x07);
 2413              		.loc 12 106 0
 2414 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 2415 0004 5B09     		lsrs	r3, r3, #5
 2416 0006 0B60     		str	r3, [r1]
 2417              	.LVL285:
 107:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 2418              		.loc 12 107 0
 2419 0008 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 2420 000a 43EAC203 		orr	r3, r3, r2, lsl #3
 2421 000e 0B60     		str	r3, [r1]
 2422              	.LVL286:
 108:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 2423              		.loc 12 108 0
 2424 0010 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 2425 0012 43EAC222 		orr	r2, r3, r2, lsl #11
 2426 0016 0A60     		str	r2, [r1]
 109:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 2427              		.loc 12 109 0
 2428 0018 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 2429 001a DB04     		lsls	r3, r3, #19
 2430 001c 03F4F003 		and	r3, r3, #7864320
 2431 0020 1343     		orrs	r3, r3, r2
 2432 0022 0B60     		str	r3, [r1]
 2433              	.LVL287:
 110:./lib/ros_lib/ros/msg.h **** 
 111:./lib/ros_lib/ros/msg.h ****     // Copy truncated exponent.
 112:./lib/ros_lib/ros/msg.h ****     uint32_t exp = ((uint32_t)(*(inbuffer++)) & 0xf0)>>4;
 113:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 2434              		.loc 12 113 0
 2435 0024 C479     		ldrb	r4, [r0, #7]	@ zero_extendqisi2
 112:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 2436              		.loc 12 112 0
 2437 0026 8579     		ldrb	r5, [r0, #6]	@ zero_extendqisi2
 2438              	.LVL288:
 2439              		.loc 12 113 0
 2440 0028 2401     		lsls	r4, r4, #4
 2441 002a 04F4FE62 		and	r2, r4, #2032
 2442              	.LVL289:
 114:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 2443              		.loc 12 114 0
 2444 002e 52EA1512 		orrs	r2, r2, r5, lsr #4
 2445              	.LVL290:
 115:./lib/ros_lib/ros/msg.h ****     {
 116:./lib/ros_lib/ros/msg.h ****       *val |= ((exp) - 1023 + 127) << 23;
 2446              		.loc 12 116 0
 2447 0032 1EBF     		ittt	ne
 2448 0034 A2F56072 		subne	r2, r2, #896
 2449              	.LVL291:
 2450 0038 43EAC253 		orrne	r3, r3, r2, lsl #23
 2451 003c 0B60     		strne	r3, [r1]
 2452              	.LVL292:
 117:./lib/ros_lib/ros/msg.h ****     }  
 118:./lib/ros_lib/ros/msg.h **** 
 119:./lib/ros_lib/ros/msg.h ****     // Copy negative sign.
 120:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0x80) << 24;
 2453              		.loc 12 120 0
 2454 003e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 121:./lib/ros_lib/ros/msg.h **** 
 122:./lib/ros_lib/ros/msg.h ****     return 8;
 123:./lib/ros_lib/ros/msg.h ****   }
 2455              		.loc 12 123 0
 2456 0040 0820     		movs	r0, #8
 2457              	.LVL293:
 120:./lib/ros_lib/ros/msg.h **** 
 2458              		.loc 12 120 0
 2459 0042 23F07F02 		bic	r2, r3, #127
 2460 0046 0B68     		ldr	r3, [r1]
 2461 0048 43EA0263 		orr	r3, r3, r2, lsl #24
 2462 004c 0B60     		str	r3, [r1]
 2463              		.loc 12 123 0
 2464 004e 30BD     		pop	{r4, r5, pc}
 2465              		.cfi_endproc
 2466              	.LFE30:
 2467              		.cantunwind
 2468              		.fnend
 2470              		.section	.text._ZN12roberto_msgs10MotorState11deserializeEPh,"axG",%progbits,_ZN12roberto_msgs10Mo
 2471              		.align	1
 2472              		.weak	_ZN12roberto_msgs10MotorState11deserializeEPh
 2473              		.thumb
 2474              		.thumb_func
 2476              	_ZN12roberto_msgs10MotorState11deserializeEPh:
 2477              		.fnstart
 2478              	.LFB174:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 2479              		.loc 8 50 0
 2480              		.cfi_startproc
 2481              		@ args = 0, pretend = 0, frame = 0
 2482              		@ frame_needed = 0, uses_anonymous_args = 0
 2483              	.LVL294:
 2484 0000 70B5     		push	{r4, r5, r6, lr}
 2485              	.LCFI24:
 2486              		.cfi_def_cfa_offset 16
 2487              		.cfi_offset 4, -16
 2488              		.cfi_offset 5, -12
 2489              		.cfi_offset 6, -8
 2490              		.cfi_offset 14, -4
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 2491              		.loc 8 50 0
 2492 0002 0546     		mov	r5, r0
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 2493              		.loc 8 53 0
 2494 0004 0430     		adds	r0, r0, #4
 2495              	.LVL295:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 2496              		.loc 8 50 0
 2497 0006 0E46     		mov	r6, r1
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 2498              		.loc 8 53 0
 2499 0008 FFF7FEFF 		bl	_ZN8std_msgs6Header11deserializeEPh
 2500              	.LVL296:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 2501              		.loc 8 54 0
 2502 000c 05F11801 		add	r1, r5, #24
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 2503              		.loc 8 53 0
 2504 0010 0446     		mov	r4, r0
 2505              	.LVL297:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 2506              		.loc 8 54 0
 2507 0012 3018     		adds	r0, r6, r0
 2508              	.LVL298:
 2509 0014 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 2510              	.LVL299:
 2511 0018 0444     		add	r4, r4, r0
 2512              	.LVL300:
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
 2513              		.loc 8 55 0
 2514 001a 05F11C01 		add	r1, r5, #28
 2515 001e 3019     		adds	r0, r6, r4
 2516 0020 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 2517              	.LVL301:
 2518 0024 0444     		add	r4, r4, r0
 2519              	.LVL302:
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
 2520              		.loc 8 56 0
 2521 0026 05F12001 		add	r1, r5, #32
 2522 002a 3019     		adds	r0, r6, r4
 2523 002c FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 2524              	.LVL303:
 2525 0030 0444     		add	r4, r4, r0
 2526              	.LVL304:
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
 2527              		.loc 8 57 0
 2528 0032 05F12401 		add	r1, r5, #36
 2529 0036 3019     		adds	r0, r6, r4
 2530 0038 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 2531              	.LVL305:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 2532              		.loc 8 58 0
 2533 003c 2044     		add	r0, r0, r4
 2534              	.LVL306:
 2535 003e 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 2536              		.loc 8 61 0
 2537 0040 0130     		adds	r0, r0, #1
 2538              	.LVL307:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 2539              		.loc 8 58 0
 2540 0042 85F82830 		strb	r3, [r5, #40]
 2541              	.LVL308:
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 2542              		.loc 8 61 0
 2543 0046 70BD     		pop	{r4, r5, r6, pc}
 2544              		.cfi_endproc
 2545              	.LFE174:
 2546              		.cantunwind
 2547              		.fnend
 2549              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh,"axG",%progbits,_ZN3r
 2550              		.align	1
 2551              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 2552              		.thumb
 2553              		.thumb_func
 2555              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:
 2556              		.fnstart
 2557              	.LFB213:
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 2558              		.loc 10 72 0
 2559              		.cfi_startproc
 2560              		@ args = 0, pretend = 0, frame = 0
 2561              		@ frame_needed = 0, uses_anonymous_args = 0
 2562              	.LVL309:
 2563 0000 70B5     		push	{r4, r5, r6, lr}
 2564              	.LCFI25:
 2565              		.cfi_def_cfa_offset 16
 2566              		.cfi_offset 4, -16
 2567              		.cfi_offset 5, -12
 2568              		.cfi_offset 6, -8
 2569              		.cfi_offset 14, -4
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 2570              		.loc 10 72 0
 2571 0002 0546     		mov	r5, r0
  73:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 2572              		.loc 10 73 0
 2573 0004 00F10C04 		add	r4, r0, #12
 2574 0008 2046     		mov	r0, r4
 2575              	.LVL310:
 2576 000a FFF7FEFF 		bl	_ZN12roberto_msgs10MotorState11deserializeEPh
 2577              	.LVL311:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 2578              		.loc 10 74 0
 2579 000e AB6B     		ldr	r3, [r5, #56]
 2580 0010 2046     		mov	r0, r4
  75:./lib/ros_lib/ros/subscriber.h **** 
 2581              		.loc 10 75 0
 2582 0012 BDE87040 		pop	{r4, r5, r6, lr}
 2583              	.LCFI26:
 2584              		.cfi_restore 14
 2585              		.cfi_restore 6
 2586              		.cfi_restore 5
 2587              		.cfi_restore 4
 2588              		.cfi_def_cfa_offset 0
 2589              	.LVL312:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 2590              		.loc 10 74 0
 2591 0016 1847     		bx	r3	@ indirect register sibling call
 2592              	.LVL313:
 2593              		.cfi_endproc
 2594              	.LFE213:
 2595              		.cantunwind
 2596              		.fnend
 2598              		.section	.text._ZN15ArduinoHardware4initEv,"axG",%progbits,_ZN15ArduinoHardware4initEv,comdat
 2599              		.align	1
 2600              		.weak	_ZN15ArduinoHardware4initEv
 2601              		.thumb
 2602              		.thumb_func
 2604              	_ZN15ArduinoHardware4initEv:
 2605              		.fnstart
 2606              	.LFB144:
 2607              		.file 13 "./lib/ros_lib/ArduinoHardware.h"
   1:./lib/ros_lib/ArduinoHardware.h **** /* 
   2:./lib/ros_lib/ArduinoHardware.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ArduinoHardware.h ****  *
   4:./lib/ros_lib/ArduinoHardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ArduinoHardware.h ****  * All rights reserved.
   6:./lib/ros_lib/ArduinoHardware.h ****  *
   7:./lib/ros_lib/ArduinoHardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ArduinoHardware.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ArduinoHardware.h ****  * are met:
  10:./lib/ros_lib/ArduinoHardware.h ****  *
  11:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ArduinoHardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ArduinoHardware.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ArduinoHardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ArduinoHardware.h ****  *    with the distribution.
  17:./lib/ros_lib/ArduinoHardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ArduinoHardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ArduinoHardware.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ArduinoHardware.h ****  *
  21:./lib/ros_lib/ArduinoHardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ArduinoHardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ArduinoHardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ArduinoHardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ArduinoHardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ArduinoHardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ArduinoHardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ArduinoHardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ArduinoHardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ArduinoHardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ArduinoHardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ArduinoHardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ArduinoHardware.h ****  */
  34:./lib/ros_lib/ArduinoHardware.h **** 
  35:./lib/ros_lib/ArduinoHardware.h **** #ifndef ROS_ARDUINO_HARDWARE_H_
  36:./lib/ros_lib/ArduinoHardware.h **** #define ROS_ARDUINO_HARDWARE_H_
  37:./lib/ros_lib/ArduinoHardware.h **** 
  38:./lib/ros_lib/ArduinoHardware.h **** #include "stm32f10x.h"
  39:./lib/ros_lib/ArduinoHardware.h **** #include "stm32_time.h"
  40:./lib/ros_lib/ArduinoHardware.h **** #include "led.h"
  41:./lib/ros_lib/ArduinoHardware.h **** 
  42:./lib/ros_lib/ArduinoHardware.h **** #define BUFFER_SIZE 512
  43:./lib/ros_lib/ArduinoHardware.h **** 
  44:./lib/ros_lib/ArduinoHardware.h **** 
  45:./lib/ros_lib/ArduinoHardware.h **** volatile uint16_t USART_FIFO[BUFFER_SIZE];
  46:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTIN;
  47:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTOUT;
  48:./lib/ros_lib/ArduinoHardware.h **** 
  49:./lib/ros_lib/ArduinoHardware.h **** class ArduinoHardware {
  50:./lib/ros_lib/ArduinoHardware.h ****   public:
  51:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(USART_TypeDef* io , long baud= 115200){
  52:./lib/ros_lib/ArduinoHardware.h ****       iostream = io;
  53:./lib/ros_lib/ArduinoHardware.h ****       baud_ = baud;
  54:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  55:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  56:./lib/ros_lib/ArduinoHardware.h ****     }
  57:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware()
  58:./lib/ros_lib/ArduinoHardware.h ****     {
  59:./lib/ros_lib/ArduinoHardware.h ****       /* Leonardo support */
  60:./lib/ros_lib/ArduinoHardware.h ****       iostream = USART1;
  61:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  63:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  64:./lib/ros_lib/ArduinoHardware.h ****     }
  65:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(ArduinoHardware& h){
  66:./lib/ros_lib/ArduinoHardware.h ****       this->iostream = iostream;
  67:./lib/ros_lib/ArduinoHardware.h ****       this->baud_ = h.baud_;
  68:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  69:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  70:./lib/ros_lib/ArduinoHardware.h ****     }
  71:./lib/ros_lib/ArduinoHardware.h ****   
  72:./lib/ros_lib/ArduinoHardware.h ****     void setBaud(long baud){
  73:./lib/ros_lib/ArduinoHardware.h ****       this->baud_= baud;
  74:./lib/ros_lib/ArduinoHardware.h ****     }
  75:./lib/ros_lib/ArduinoHardware.h ****   
  76:./lib/ros_lib/ArduinoHardware.h ****     int getBaud(){return baud_;}
  77:./lib/ros_lib/ArduinoHardware.h **** 
  78:./lib/ros_lib/ArduinoHardware.h ****     void init(){
 2608              		.loc 13 78 0
 2609              		.cfi_startproc
 2610              		@ args = 0, pretend = 0, frame = 24
 2611              		@ frame_needed = 0, uses_anonymous_args = 0
 2612              	.LVL314:
 2613 0000 70B5     		push	{r4, r5, r6, lr}
 2614              		.save {r4, r5, r6, lr}
 2615              	.LCFI27:
 2616              		.cfi_def_cfa_offset 16
 2617              		.cfi_offset 4, -16
 2618              		.cfi_offset 5, -12
 2619              		.cfi_offset 6, -8
 2620              		.cfi_offset 14, -4
 2621 0002 0446     		mov	r4, r0
 2622              		.pad #24
 2623 0004 86B0     		sub	sp, sp, #24
 2624              	.LCFI28:
 2625              		.cfi_def_cfa_offset 40
  79:./lib/ros_lib/ArduinoHardware.h ****       USART_InitTypeDef usart1_init_struct;
  80:./lib/ros_lib/ArduinoHardware.h ****       /* Bit configuration structure for GPIOA PIN9 and PIN10 */
  81:./lib/ros_lib/ArduinoHardware.h ****       GPIO_InitTypeDef gpioa_init_struct;
  82:./lib/ros_lib/ArduinoHardware.h **** 
  83:./lib/ros_lib/ArduinoHardware.h ****       /* Enalbe clock for USART1, AFIO and GPIOA */
  84:./lib/ros_lib/ArduinoHardware.h ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2Periph_AFIO | 
  85:./lib/ros_lib/ArduinoHardware.h ****                            RCC_APB2Periph_GPIOA, ENABLE);
  86:./lib/ros_lib/ArduinoHardware.h ****                             
  87:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Tx */
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_9;
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  90:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
  91:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 2626              		.loc 13 91 0
 2627 0006 214D     		ldr	r5, .L134
  85:./lib/ros_lib/ArduinoHardware.h ****                             
 2628              		.loc 13 85 0
 2629 0008 0121     		movs	r1, #1
 2630 000a 44F20500 		movw	r0, #16389
 2631              	.LVL315:
 2632 000e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 2633              	.LVL316:
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 2634              		.loc 13 88 0
 2635 0012 4FF40073 		mov	r3, #512
 2636 0016 ADF80430 		strh	r3, [sp, #4]	@ movhi
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 2637              		.loc 13 89 0
 2638 001a 0326     		movs	r6, #3
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 2639              		.loc 13 90 0
 2640 001c 1823     		movs	r3, #24
 2641              		.loc 13 91 0
 2642 001e 01A9     		add	r1, sp, #4
 2643 0020 2846     		mov	r0, r5
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 2644              		.loc 13 90 0
 2645 0022 8DF80730 		strb	r3, [sp, #7]
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 2646              		.loc 13 89 0
 2647 0026 8DF80660 		strb	r6, [sp, #6]
 2648              		.loc 13 91 0
 2649 002a FFF7FEFF 		bl	GPIO_Init
 2650              	.LVL317:
  92:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
  93:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_10;
 2651              		.loc 13 93 0
 2652 002e 4FF48063 		mov	r3, #1024
 2653 0032 ADF80430 		strh	r3, [sp, #4]	@ movhi
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  95:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 2654              		.loc 13 95 0
 2655 0036 0423     		movs	r3, #4
  96:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 2656              		.loc 13 96 0
 2657 0038 0DEB0301 		add	r1, sp, r3
 2658 003c 2846     		mov	r0, r5
  95:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 2659              		.loc 13 95 0
 2660 003e 8DF80730 		strb	r3, [sp, #7]
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 2661              		.loc 13 94 0
 2662 0042 8DF80660 		strb	r6, [sp, #6]
 2663              		.loc 13 96 0
 2664 0046 FFF7FEFF 		bl	GPIO_Init
 2665              	.LVL318:
  97:./lib/ros_lib/ArduinoHardware.h **** 
  98:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 */
  99:./lib/ros_lib/ArduinoHardware.h ****       USART_Cmd(iostream, ENABLE);  
 2666              		.loc 13 99 0
 2667 004a 2068     		ldr	r0, [r4]
 2668 004c 0121     		movs	r1, #1
 2669 004e FFF7FEFF 		bl	USART_Cmd
 2670              	.LVL319:
 100:./lib/ros_lib/ArduinoHardware.h ****       /* Baud rate 115200, 8-bit data, One stop bit
 101:./lib/ros_lib/ArduinoHardware.h ****       * No parity, Do both Rx and Tx, No HW flow control
 102:./lib/ros_lib/ArduinoHardware.h ****       */
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_BaudRate = baud_;   
 2671              		.loc 13 103 0
 2672 0052 6368     		ldr	r3, [r4, #4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 2673              		.loc 13 107 0
 2674 0054 0C22     		movs	r2, #12
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 2675              		.loc 13 103 0
 2676 0056 0293     		str	r3, [sp, #8]
 108:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 109:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 110:./lib/ros_lib/ArduinoHardware.h ****       USART_Init(iostream, &usart1_init_struct);
 2677              		.loc 13 110 0
 2678 0058 02A9     		add	r1, sp, #8
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 2679              		.loc 13 104 0
 2680 005a 0023     		movs	r3, #0
 2681              		.loc 13 110 0
 2682 005c 2068     		ldr	r0, [r4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 2683              		.loc 13 104 0
 2684 005e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 2685              		.loc 13 105 0
 2686 0062 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 2687              		.loc 13 106 0
 2688 0066 ADF81030 		strh	r3, [sp, #16]	@ movhi
 108:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 2689              		.loc 13 108 0
 2690 006a ADF81430 		strh	r3, [sp, #20]	@ movhi
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 2691              		.loc 13 107 0
 2692 006e ADF81220 		strh	r2, [sp, #18]	@ movhi
 2693              		.loc 13 110 0
 2694 0072 FFF7FEFF 		bl	USART_Init
 2695              	.LVL320:
 111:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 112:./lib/ros_lib/ArduinoHardware.h ****       USART_ITConfig(iostream, USART_IT_RXNE, ENABLE);
 2696              		.loc 13 112 0
 2697 0076 0122     		movs	r2, #1
 2698 0078 40F22551 		movw	r1, #1317
 2699 007c 2068     		ldr	r0, [r4]
 2700 007e FFF7FEFF 		bl	USART_ITConfig
 2701              	.LVL321:
 2702              	.LBB178:
 2703              	.LBB179:
 2704              		.file 14 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
   1:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**************************************************************************//**
   2:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @file     core_cm3.h
   3:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @version  V1.30
   5:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @date     30. October 2009
   6:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
   7:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @note
   8:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  10:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  11:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  15:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  16:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  22:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
  23:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  24:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CORE_H__
  26:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  27:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  29:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 10: \n
  31:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  34:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 530: \n
  35:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     return(__regBasePri); \n
  36:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * . 
  38:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 550: \n
  39:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  42:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 754: \n
  43:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  46:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 750: \n
  47:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  50:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 528: \n
  51:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  54:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 751: \n
  55:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  58:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  60:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  61:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  62:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -save */
  63:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e10  */
  64:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e530 */
  65:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e550 */
  66:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e754 */
  67:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e750 */
  68:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e528 */
  69:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e751 */
  70:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  71:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  72:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - CMSIS version number
  75:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
  78:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  79:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  80:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
  81:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  extern "C" {
  82:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif 
  83:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  84:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  88:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  90:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  92:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__ICCARM__)
  93:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
  95:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  96:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  97:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * IO definitions
 106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
 111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                 Register Abstraction
 122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  @{
 125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
 126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }  NVIC_Type;                                               
 148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SCB_Type;                                                
 177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                                      
 314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for SysTick
 363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SysTick_Type;
 372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  union  
 413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   {
 414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } ITM_Type;                                                
 445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 505:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0;
 506:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 510:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1;
 511:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 512:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } InterruptType_Type;
 513:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 514:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 518:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 522:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 525:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 529:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 530:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 534:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 535:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 536:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 537:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } MPU_Type;                                                
 549:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 550:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Type Register */
 551:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 554:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 557:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 560:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Control Register */
 561:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 564:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 567:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 570:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Number Register */
 571:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 574:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Base Address Register */
 575:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 578:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 581:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 584:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 588:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 591:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 594:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 597:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 600:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 603:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 606:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 609:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 612:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 614:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 615:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 616:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 619:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 620:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 621:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 622:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } CoreDebug_Type;
 627:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 628:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 632:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 635:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 638:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 641:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 644:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 647:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 650:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 653:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 656:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 659:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 662:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 665:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 669:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 672:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 676:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 679:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 682:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 685:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 688:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 691:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 694:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 697:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 700:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 703:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 706:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 709:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 713:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 714:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 722:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 729:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 733:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 734:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 736:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 737:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 738:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 740:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 741:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 745:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 749:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 753:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 757:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 758:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 759:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 760:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 762:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ARM armcc specific functions */
 764:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 765:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 768:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                             __nop
 769:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFI                             __wfi
 770:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFE                             __wfe
 771:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __SEV                             __sev
 772:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __REV                             __rev
 776:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __RBIT                            __rbit
 777:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 784:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 785:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 790:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 791:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 792:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 794:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
 795:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 796:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
 797:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 798:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 800:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 801:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 803:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 805:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 808:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 810:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 811:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 813:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
 814:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 815:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
 817:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 818:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 820:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 821:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 823:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 825:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 828:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 830:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 831:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 833:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 834:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 835:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 836:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 838:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 840:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 841:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 843:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 844:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 845:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 846:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 848:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 850:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 851:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 853:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 854:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 856:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 858:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __CLREX(void);
 859:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 860:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 861:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 863:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 864:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 865:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 866:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 867:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 869:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 870:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 872:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 873:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 874:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 875:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 876:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 878:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 879:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 881:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 882:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 883:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 885:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 887:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 888:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 890:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   priMask  PriMask
 891:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 892:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 894:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 896:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 897:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 899:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 900:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 901:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 902:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 903:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 905:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 906:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 908:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask faultMask value
 909:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 910:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
 911:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 912:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 914:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 915:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
 916:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
 917:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
 918:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 919:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
 920:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 921:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 923:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 924:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
 925:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 926:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
 927:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 928:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
 929:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 930:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 932:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 934:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 935:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 937:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 939:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CLREX                           __clrex
 940:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 941:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 942:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 944:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 945:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 946:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 947:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 948:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 950:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regBasePri);
 952:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 953:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 954:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 955:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 957:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 958:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 959:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 960:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 961:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 963:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 966:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 967:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 968:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 970:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 971:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 972:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 974:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 976:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regPriMask);
 978:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 979:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 980:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 981:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 983:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
 984:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 985:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 987:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 989:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regPriMask = (priMask);
 991:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 992:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 993:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 994:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 996:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 997:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 998:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 999:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1000:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1002:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regFaultMask);
1004:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1005:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1006:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1007:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1009:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1011:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1012:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1013:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1015:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1018:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1019:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1020:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1021:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1022:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
1023:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1024:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1025:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1026:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1028:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regControl);
1030:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1031:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1032:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1033:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1034:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1035:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1036:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1037:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1038:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1039:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1041:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regControl = control;
1043:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1044:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1045:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1047:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1048:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1049:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* IAR iccarm specific functions */
1051:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1052:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1055:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1058:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1064:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1076:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1077:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1078:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1080:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1081:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1082:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1083:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1084:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1086:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1087:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1089:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1091:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1094:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1096:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1097:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1099:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* GNU gcc specific functions */
1203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
1261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
1263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
1265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
1270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
1272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
1274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
1281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
1290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
1299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
1301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** * 
1316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** *  @return Control value
1317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in integer value
1338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* TASKING carm specific functions */
1437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*
1439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Including the CMSIS ones.
1442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
1445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   Core  Function Interface containing:
1449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core NVIC Functions
1450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core SysTick Functions
1451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core Reset Functions
1452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
1453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@{*/
1454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t reg_value;
1471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   
1473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return priority grouping field 
1485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 2705              		.loc 14 1504 0
 2706 0082 034B     		ldr	r3, .L134+4
 2707 0084 2022     		movs	r2, #32
 2708 0086 5A60     		str	r2, [r3, #4]
 2709              	.LVL322:
 2710              	.LBE179:
 2711              	.LBE178:
 113:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 global interrupt */
 114:./lib/ros_lib/ArduinoHardware.h ****       NVIC_EnableIRQ(USART1_IRQn);
 115:./lib/ros_lib/ArduinoHardware.h ****     }
 2712              		.loc 13 115 0
 2713 0088 06B0     		add	sp, sp, #24
 2714              	.LCFI29:
 2715              		.cfi_def_cfa_offset 16
 2716              		@ sp needed
 2717 008a 70BD     		pop	{r4, r5, r6, pc}
 2718              	.LVL323:
 2719              	.L135:
 2720              		.align	2
 2721              	.L134:
 2722 008c 00080140 		.word	1073809408
 2723 0090 00E100E0 		.word	-536813312
 2724              		.cfi_endproc
 2725              	.LFE144:
 2726              		.fnend
 2728              		.text
 2729              		.align	1
 2730              		.global	USART1_IRQHandler
 2731              		.thumb
 2732              		.thumb_func
 2734              	USART1_IRQHandler:
 2735              		.fnstart
 2736              	.LFB148:
 116:./lib/ros_lib/ArduinoHardware.h **** 
 117:./lib/ros_lib/ArduinoHardware.h ****     int read(){
 118:./lib/ros_lib/ArduinoHardware.h ****       if(USART_CNTIN == USART_CNTOUT)
 119:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 120:./lib/ros_lib/ArduinoHardware.h ****       
 121:./lib/ros_lib/ArduinoHardware.h ****       int returnVal = USART_FIFO[USART_CNTOUT];
 122:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 123:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 124:./lib/ros_lib/ArduinoHardware.h ****     }
 125:./lib/ros_lib/ArduinoHardware.h **** 
 126:./lib/ros_lib/ArduinoHardware.h ****     void write(uint8_t* data, int length){
 127:./lib/ros_lib/ArduinoHardware.h ****       for(int i=0; i<length; i++){
 128:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 129:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 130:./lib/ros_lib/ArduinoHardware.h ****       }
 131:./lib/ros_lib/ArduinoHardware.h ****     }
 132:./lib/ros_lib/ArduinoHardware.h **** 
 133:./lib/ros_lib/ArduinoHardware.h ****     uint32_t time(){
 134:./lib/ros_lib/ArduinoHardware.h ****       return millis();
 135:./lib/ros_lib/ArduinoHardware.h ****     }
 136:./lib/ros_lib/ArduinoHardware.h **** 
 137:./lib/ros_lib/ArduinoHardware.h ****   protected:
 138:./lib/ros_lib/ArduinoHardware.h ****     USART_TypeDef* iostream;
 139:./lib/ros_lib/ArduinoHardware.h ****     long baud_;
 140:./lib/ros_lib/ArduinoHardware.h **** 
 141:./lib/ros_lib/ArduinoHardware.h **** };
 142:./lib/ros_lib/ArduinoHardware.h **** 
 143:./lib/ros_lib/ArduinoHardware.h **** 
 144:./lib/ros_lib/ArduinoHardware.h **** 
 145:./lib/ros_lib/ArduinoHardware.h **** extern "C"{
 146:./lib/ros_lib/ArduinoHardware.h ****   void USART1_IRQHandler(void){
 2737              		.loc 13 146 0
 2738              		.cfi_startproc
 2739              		@ args = 0, pretend = 0, frame = 0
 2740              		@ frame_needed = 0, uses_anonymous_args = 0
 2741 0008 38B5     		push	{r3, r4, r5, lr}
 2742              		.save {r3, r4, r5, lr}
 2743              	.LCFI30:
 2744              		.cfi_def_cfa_offset 16
 2745              		.cfi_offset 3, -16
 2746              		.cfi_offset 4, -12
 2747              		.cfi_offset 5, -8
 2748              		.cfi_offset 14, -4
 147:./lib/ros_lib/ArduinoHardware.h **** 
 148:./lib/ros_lib/ArduinoHardware.h ****     if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET 
 2749              		.loc 13 148 0
 2750 000a 40F22551 		movw	r1, #1317
 2751 000e 0F48     		ldr	r0, .L143
 2752 0010 FFF7FEFF 		bl	USART_GetITStatus
 2753              	.LVL324:
 149:./lib/ros_lib/ArduinoHardware.h ****       && USART_CNTIN != (( USART_CNTOUT - 1 + BUFFER_SIZE) % BUFFER_SIZE)){
 2754              		.loc 13 149 0
 2755 0014 40B1     		cbz	r0, .L137
 2756              		.loc 13 149 0 is_stmt 0 discriminator 1
 2757 0016 0E4C     		ldr	r4, .L143+4
 2758 0018 2368     		ldr	r3, [r4]
 2759 001a 6268     		ldr	r2, [r4, #4]
 2760 001c 03F2FF13 		addw	r3, r3, #511
 2761 0020 C3F30803 		ubfx	r3, r3, #0, #9
 2762 0024 9342     		cmp	r3, r2
 2763 0026 04D1     		bne	.L138
 2764              	.L137:
 150:./lib/ros_lib/ArduinoHardware.h **** 
 151:./lib/ros_lib/ArduinoHardware.h ****       USART_FIFO[USART_CNTIN] = USART_ReceiveData(USART1);
 152:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 153:./lib/ros_lib/ArduinoHardware.h ****     }else{
 154:./lib/ros_lib/ArduinoHardware.h ****       // Should NEVER reach this point!
 155:./lib/ros_lib/ArduinoHardware.h ****       (void)USART_ReceiveData(USART1);  // Clear inerrupt flag by reading byte
 156:./lib/ros_lib/ArduinoHardware.h ****     }
 157:./lib/ros_lib/ArduinoHardware.h ****   }   
 2765              		.loc 13 157 0 is_stmt 1
 2766 0028 BDE83840 		pop	{r3, r4, r5, lr}
 2767              	.LCFI31:
 2768              		.cfi_remember_state
 2769              		.cfi_restore 14
 2770              		.cfi_restore 5
 2771              		.cfi_restore 4
 2772              		.cfi_restore 3
 2773              		.cfi_def_cfa_offset 0
 155:./lib/ros_lib/ArduinoHardware.h ****     }
 2774              		.loc 13 155 0
 2775 002c 0748     		ldr	r0, .L143
 2776 002e FFF7FEBF 		b	USART_ReceiveData
 2777              	.LVL325:
 2778              	.L138:
 2779              	.LCFI32:
 2780              		.cfi_restore_state
 151:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 2781              		.loc 13 151 0
 2782 0032 0648     		ldr	r0, .L143
 2783 0034 6568     		ldr	r5, [r4, #4]
 2784 0036 FFF7FEFF 		bl	USART_ReceiveData
 2785              	.LVL326:
 2786 003a 04EB4505 		add	r5, r4, r5, lsl #1
 2787 003e 2881     		strh	r0, [r5, #8]	@ movhi
 152:./lib/ros_lib/ArduinoHardware.h ****     }else{
 2788              		.loc 13 152 0
 2789 0040 6368     		ldr	r3, [r4, #4]
 2790 0042 0133     		adds	r3, r3, #1
 2791 0044 C3F30803 		ubfx	r3, r3, #0, #9
 2792 0048 6360     		str	r3, [r4, #4]
 2793 004a 38BD     		pop	{r3, r4, r5, pc}
 2794              	.L144:
 2795              		.align	2
 2796              	.L143:
 2797 004c 00380140 		.word	1073821696
 2798 0050 00000000 		.word	.LANCHOR1
 2799              		.cfi_endproc
 2800              	.LFE148:
 2801              		.fnend
 2803              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc,"axG",%p
 2804              		.align	1
 2805              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 2806              		.thumb
 2807              		.thumb_func
 2809              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:
 2810              		.fnstart
 2811              	.LFB200:
 289:./lib/ros_lib/ros/node_handle.h **** 
 290:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 291:./lib/ros_lib/ros/node_handle.h ****        * Time functions
 292:./lib/ros_lib/ros/node_handle.h ****        */
 293:./lib/ros_lib/ros/node_handle.h **** 
 294:./lib/ros_lib/ros/node_handle.h ****       void requestSyncTime()
 295:./lib/ros_lib/ros/node_handle.h ****       {
 296:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 297:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_TIME, &t);
 298:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 299:./lib/ros_lib/ros/node_handle.h ****       }
 300:./lib/ros_lib/ros/node_handle.h **** 
 301:./lib/ros_lib/ros/node_handle.h ****       void syncTime(uint8_t * data)
 302:./lib/ros_lib/ros/node_handle.h ****       {
 303:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 304:./lib/ros_lib/ros/node_handle.h ****         uint32_t offset = hardware_.time() - rt_time;
 305:./lib/ros_lib/ros/node_handle.h **** 
 306:./lib/ros_lib/ros/node_handle.h ****         t.deserialize(data);
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 308:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 309:./lib/ros_lib/ros/node_handle.h **** 
 310:./lib/ros_lib/ros/node_handle.h ****         this->setNow(t.data);
 311:./lib/ros_lib/ros/node_handle.h ****         last_sync_receive_time = hardware_.time();
 312:./lib/ros_lib/ros/node_handle.h ****       }
 313:./lib/ros_lib/ros/node_handle.h **** 
 314:./lib/ros_lib/ros/node_handle.h ****       Time now()
 315:./lib/ros_lib/ros/node_handle.h ****       {
 316:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 317:./lib/ros_lib/ros/node_handle.h ****         Time current_time;
 318:./lib/ros_lib/ros/node_handle.h ****         current_time.sec = ms/1000 + sec_offset;
 319:./lib/ros_lib/ros/node_handle.h ****         current_time.nsec = (ms%1000)*1000000UL + nsec_offset;
 320:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(current_time.sec, current_time.nsec);
 321:./lib/ros_lib/ros/node_handle.h ****         return current_time;
 322:./lib/ros_lib/ros/node_handle.h ****       }
 323:./lib/ros_lib/ros/node_handle.h **** 
 324:./lib/ros_lib/ros/node_handle.h ****       void setNow( Time & new_now )
 325:./lib/ros_lib/ros/node_handle.h ****       {
 326:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 327:./lib/ros_lib/ros/node_handle.h ****         sec_offset = new_now.sec - ms/1000 - 1;
 328:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 329:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 330:./lib/ros_lib/ros/node_handle.h ****       }
 331:./lib/ros_lib/ros/node_handle.h **** 
 332:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 333:./lib/ros_lib/ros/node_handle.h ****        * Topic Management
 334:./lib/ros_lib/ros/node_handle.h ****        */
 335:./lib/ros_lib/ros/node_handle.h **** 
 336:./lib/ros_lib/ros/node_handle.h ****       /* Register a new publisher */
 337:./lib/ros_lib/ros/node_handle.h ****       bool advertise(Publisher & p)
 338:./lib/ros_lib/ros/node_handle.h ****       {
 339:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_PUBLISHERS; i++){
 340:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 341:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 342:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 343:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 344:./lib/ros_lib/ros/node_handle.h ****             return true;
 345:./lib/ros_lib/ros/node_handle.h ****           }
 346:./lib/ros_lib/ros/node_handle.h ****         }
 347:./lib/ros_lib/ros/node_handle.h ****         return false;
 348:./lib/ros_lib/ros/node_handle.h ****       }
 349:./lib/ros_lib/ros/node_handle.h **** 
 350:./lib/ros_lib/ros/node_handle.h ****       /* Register a new subscriber */
 351:./lib/ros_lib/ros/node_handle.h ****       template<typename MsgT>
 352:./lib/ros_lib/ros/node_handle.h ****       bool subscribe(Subscriber< MsgT> & s){
 353:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 354:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 355:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 356:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 357:./lib/ros_lib/ros/node_handle.h ****             return true;
 358:./lib/ros_lib/ros/node_handle.h ****           }
 359:./lib/ros_lib/ros/node_handle.h ****         }
 360:./lib/ros_lib/ros/node_handle.h ****         return false;
 361:./lib/ros_lib/ros/node_handle.h ****       }
 362:./lib/ros_lib/ros/node_handle.h **** 
 363:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Server */
 364:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 365:./lib/ros_lib/ros/node_handle.h ****       bool advertiseService(ServiceServer<MReq,MRes>& srv){
 366:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 367:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 368:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 369:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 370:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 371:./lib/ros_lib/ros/node_handle.h ****             return v;
 372:./lib/ros_lib/ros/node_handle.h ****           }
 373:./lib/ros_lib/ros/node_handle.h ****         }
 374:./lib/ros_lib/ros/node_handle.h ****         return false;
 375:./lib/ros_lib/ros/node_handle.h ****       }
 376:./lib/ros_lib/ros/node_handle.h **** 
 377:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Client */
 378:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 379:./lib/ros_lib/ros/node_handle.h ****       bool serviceClient(ServiceClient<MReq, MRes>& srv){
 380:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 381:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 382:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 383:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 384:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 385:./lib/ros_lib/ros/node_handle.h ****             return v;
 386:./lib/ros_lib/ros/node_handle.h ****           }
 387:./lib/ros_lib/ros/node_handle.h ****         }
 388:./lib/ros_lib/ros/node_handle.h ****         return false;
 389:./lib/ros_lib/ros/node_handle.h ****       }
 390:./lib/ros_lib/ros/node_handle.h **** 
 391:./lib/ros_lib/ros/node_handle.h ****       void negotiateTopics()
 392:./lib/ros_lib/ros/node_handle.h ****       {
 393:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::TopicInfo ti;
 394:./lib/ros_lib/ros/node_handle.h ****         int i;
 395:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_PUBLISHERS; i++)
 396:./lib/ros_lib/ros/node_handle.h ****         {
 397:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] != 0) // non-empty slot
 398:./lib/ros_lib/ros/node_handle.h ****           {
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = publishers[i]->id_;
 400:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 401:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 402:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 403:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 404:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 405:./lib/ros_lib/ros/node_handle.h ****           }
 406:./lib/ros_lib/ros/node_handle.h ****         }
 407:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_SUBSCRIBERS; i++)
 408:./lib/ros_lib/ros/node_handle.h ****         {
 409:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] != 0) // non-empty slot
 410:./lib/ros_lib/ros/node_handle.h ****           {
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = subscribers[i]->id_;
 412:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 413:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 414:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 415:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 416:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 417:./lib/ros_lib/ros/node_handle.h ****           }
 418:./lib/ros_lib/ros/node_handle.h ****         }
 419:./lib/ros_lib/ros/node_handle.h ****         configured_ = true;
 420:./lib/ros_lib/ros/node_handle.h ****       }
 421:./lib/ros_lib/ros/node_handle.h **** 
 422:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg * msg)
 423:./lib/ros_lib/ros/node_handle.h ****       {
 424:./lib/ros_lib/ros/node_handle.h ****         if(id >= 100 && !configured_)
 425:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 426:./lib/ros_lib/ros/node_handle.h **** 
 427:./lib/ros_lib/ros/node_handle.h ****         /* serialize message */
 428:./lib/ros_lib/ros/node_handle.h ****         uint16_t l = msg->serialize(message_out+7);
 429:./lib/ros_lib/ros/node_handle.h **** 
 430:./lib/ros_lib/ros/node_handle.h ****         /* setup the header */
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[0] = 0xff;
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 435:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 437:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 438:./lib/ros_lib/ros/node_handle.h **** 
 439:./lib/ros_lib/ros/node_handle.h ****         /* calculate checksum */
 440:./lib/ros_lib/ros/node_handle.h ****         int chk = 0;
 441:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 442:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 443:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 444:./lib/ros_lib/ros/node_handle.h ****         message_out[l++] = 255 - (chk%256);
 445:./lib/ros_lib/ros/node_handle.h **** 
 446:./lib/ros_lib/ros/node_handle.h ****         if( l <= OUTPUT_SIZE ){
 447:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 448:./lib/ros_lib/ros/node_handle.h ****           return l;
 449:./lib/ros_lib/ros/node_handle.h ****         }else{
 450:./lib/ros_lib/ros/node_handle.h ****           logerror("Message from device dropped: message larger than buffer.");
 451:./lib/ros_lib/ros/node_handle.h ****           return -1;
 452:./lib/ros_lib/ros/node_handle.h ****         }
 453:./lib/ros_lib/ros/node_handle.h ****       }
 454:./lib/ros_lib/ros/node_handle.h **** 
 455:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 456:./lib/ros_lib/ros/node_handle.h ****        * Logging
 457:./lib/ros_lib/ros/node_handle.h ****        */
 458:./lib/ros_lib/ros/node_handle.h **** 
 459:./lib/ros_lib/ros/node_handle.h ****     private:
 460:./lib/ros_lib/ros/node_handle.h ****       void log(char byte, const char * msg){
 461:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::Log l;
 462:./lib/ros_lib/ros/node_handle.h ****         l.level= byte;
 463:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 464:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 465:./lib/ros_lib/ros/node_handle.h ****       }
 466:./lib/ros_lib/ros/node_handle.h **** 
 467:./lib/ros_lib/ros/node_handle.h ****     public:
 468:./lib/ros_lib/ros/node_handle.h ****       void logdebug(const char* msg){
 469:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ROSDEBUG, msg);
 470:./lib/ros_lib/ros/node_handle.h ****       }
 471:./lib/ros_lib/ros/node_handle.h ****       void loginfo(const char * msg){
 472:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::INFO, msg);
 473:./lib/ros_lib/ros/node_handle.h ****       }
 474:./lib/ros_lib/ros/node_handle.h ****       void logwarn(const char *msg){
 475:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::WARN, msg);
 476:./lib/ros_lib/ros/node_handle.h ****       }
 477:./lib/ros_lib/ros/node_handle.h ****       void logerror(const char*msg){
 2812              		.loc 11 477 0
 2813              		.cfi_startproc
 2814              		@ args = 0, pretend = 0, frame = 16
 2815              		@ frame_needed = 0, uses_anonymous_args = 0
 2816              	.LVL327:
 2817 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 2818              		.save {lr}
 2819              		.pad #20
 2820              	.LCFI33:
 2821              		.cfi_def_cfa_offset 24
 2822              		.cfi_offset 14, -4
 2823              	.LVL328:
 2824              	.LBB186:
 2825              	.LBB187:
 2826              	.LBB188:
 2827              	.LBB189:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2828              		.loc 3 25 0
 2829 0002 074B     		ldr	r3, .L146
 2830              	.LBE189:
 2831              	.LBE188:
 463:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2832              		.loc 11 463 0
 2833 0004 0391     		str	r1, [sp, #12]
 2834              	.LBB191:
 2835              	.LBB190:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2836              		.loc 3 25 0
 2837 0006 0193     		str	r3, [sp, #4]
 2838              	.LVL329:
 2839              	.LBE190:
 2840              	.LBE191:
 462:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 2841              		.loc 11 462 0
 2842 0008 0323     		movs	r3, #3
 2843 000a 8DF80830 		strb	r3, [sp, #8]
 464:./lib/ros_lib/ros/node_handle.h ****       }
 2844              		.loc 11 464 0
 2845 000e 0368     		ldr	r3, [r0]
 2846 0010 01AA     		add	r2, sp, #4
 2847 0012 1B68     		ldr	r3, [r3]
 2848 0014 0721     		movs	r1, #7
 2849              	.LVL330:
 2850 0016 9847     		blx	r3
 2851              	.LVL331:
 2852              	.LBE187:
 2853              	.LBE186:
 478:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ERROR, msg);
 479:./lib/ros_lib/ros/node_handle.h ****       }
 2854              		.loc 11 479 0
 2855 0018 05B0     		add	sp, sp, #20
 2856              	.LCFI34:
 2857              		.cfi_def_cfa_offset 4
 2858              		@ sp needed
 2859 001a 5DF804FB 		ldr	pc, [sp], #4
 2860              	.L147:
 2861 001e 00BF     		.align	2
 2862              	.L146:
 2863 0020 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 2864              		.cfi_endproc
 2865              	.LFE200:
 2866              		.fnend
 2868              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE,"
 2869              		.align	1
 2870              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 2871              		.thumb
 2872              		.thumb_func
 2874              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:
 2875              		.fnstart
 2876              	.LFB206:
 422:./lib/ros_lib/ros/node_handle.h ****       {
 2877              		.loc 11 422 0
 2878              		.cfi_startproc
 2879              		@ args = 0, pretend = 0, frame = 0
 2880              		@ frame_needed = 0, uses_anonymous_args = 0
 2881              	.LVL332:
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 2882              		.loc 11 424 0
 2883 0000 6329     		cmp	r1, #99
 422:./lib/ros_lib/ros/node_handle.h ****       {
 2884              		.loc 11 422 0
 2885 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2886              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 2887              	.LCFI35:
 2888              		.cfi_def_cfa_offset 32
 2889              		.cfi_offset 3, -32
 2890              		.cfi_offset 4, -28
 2891              		.cfi_offset 5, -24
 2892              		.cfi_offset 6, -20
 2893              		.cfi_offset 7, -16
 2894              		.cfi_offset 8, -12
 2895              		.cfi_offset 9, -8
 2896              		.cfi_offset 14, -4
 422:./lib/ros_lib/ros/node_handle.h ****       {
 2897              		.loc 11 422 0
 2898 0006 0446     		mov	r4, r0
 2899 0008 0E46     		mov	r6, r1
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 2900              		.loc 11 424 0
 2901 000a 03DD     		ble	.L149
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 2902              		.loc 11 424 0 is_stmt 0 discriminator 1
 2903 000c 90F8F454 		ldrb	r5, [r0, #1268]	@ zero_extendqisi2
 2904 0010 002D     		cmp	r5, #0
 2905 0012 4FD0     		beq	.L150
 2906              	.L149:
 428:./lib/ros_lib/ros/node_handle.h **** 
 2907              		.loc 11 428 0 is_stmt 1
 2908 0014 1368     		ldr	r3, [r2]
 2909 0016 04F21F21 		addw	r1, r4, #543
 2910              	.LVL333:
 2911 001a 1B68     		ldr	r3, [r3]
 2912 001c 1046     		mov	r0, r2
 2913              	.LVL334:
 2914 001e 9847     		blx	r3
 2915              	.LVL335:
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 2916              		.loc 11 431 0
 2917 0020 FF22     		movs	r2, #255
 2918 0022 84F81822 		strb	r2, [r4, #536]
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 2919              		.loc 11 432 0
 2920 0026 FE22     		movs	r2, #254
 428:./lib/ros_lib/ros/node_handle.h **** 
 2921              		.loc 11 428 0
 2922 0028 83B2     		uxth	r3, r0
 2923              	.LVL336:
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 2924              		.loc 11 432 0
 2925 002a 84F81922 		strb	r2, [r4, #537]
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 2926              		.loc 11 433 0
 2927 002e C2B2     		uxtb	r2, r0
 434:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 2928              		.loc 11 434 0
 2929 0030 C0F30720 		ubfx	r0, r0, #8, #8
 2930 0034 84F81B02 		strb	r0, [r4, #539]
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 2931              		.loc 11 435 0
 2932 0038 1044     		add	r0, r0, r2
 2933 003a C043     		mvns	r0, r0
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 2934              		.loc 11 436 0
 2935 003c 84F81D62 		strb	r6, [r4, #541]
 437:./lib/ros_lib/ros/node_handle.h **** 
 2936              		.loc 11 437 0
 2937 0040 46F30726 		sbfx	r6, r6, #8, #8
 2938              	.LVL337:
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 2939              		.loc 11 433 0
 2940 0044 84F81A22 		strb	r2, [r4, #538]
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 2941              		.loc 11 435 0
 2942 0048 84F81C02 		strb	r0, [r4, #540]
 437:./lib/ros_lib/ros/node_handle.h **** 
 2943              		.loc 11 437 0
 2944 004c 84F81E62 		strb	r6, [r4, #542]
 2945              	.LVL338:
 2946 0050 04F50770 		add	r0, r4, #540
 2947              	.LBB196:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 2948              		.loc 11 441 0
 2949 0054 0521     		movs	r1, #5
 2950              	.LBE196:
 440:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 2951              		.loc 11 440 0
 2952 0056 0022     		movs	r2, #0
 2953              	.LBB197:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 2954              		.loc 11 441 0
 2955 0058 9E1D     		adds	r6, r3, #6
 2956              	.LVL339:
 2957              	.L152:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 2958              		.loc 11 441 0 is_stmt 0 discriminator 3
 2959 005a B142     		cmp	r1, r6
 2960 005c 04DC     		bgt	.L151
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 2961              		.loc 11 442 0 is_stmt 1 discriminator 2
 2962 005e 10F8015F 		ldrb	r5, [r0, #1]!	@ zero_extendqisi2
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 2963              		.loc 11 441 0 discriminator 2
 2964 0062 0131     		adds	r1, r1, #1
 2965              	.LVL340:
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 2966              		.loc 11 442 0 discriminator 2
 2967 0064 2A44     		add	r2, r2, r5
 2968              	.LVL341:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 2969              		.loc 11 441 0 discriminator 2
 2970 0066 F8E7     		b	.L152
 2971              	.L151:
 2972              	.LVL342:
 2973              	.LBE197:
 444:./lib/ros_lib/ros/node_handle.h **** 
 2974              		.loc 11 444 0
 2975 0068 D243     		mvns	r2, r2
 2976              	.LVL343:
 2977 006a 03F10806 		add	r6, r3, #8
 2978 006e 0733     		adds	r3, r3, #7
 2979              	.LVL344:
 2980 0070 B6B2     		uxth	r6, r6
 2981              	.LVL345:
 2982 0072 9BB2     		uxth	r3, r3
 2983 0074 2344     		add	r3, r3, r4
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 2984              		.loc 11 446 0
 2985 0076 B6F5007F 		cmp	r6, #512
 444:./lib/ros_lib/ros/node_handle.h **** 
 2986              		.loc 11 444 0
 2987 007a 83F81822 		strb	r2, [r3, #536]
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 2988              		.loc 11 446 0
 2989 007e 13D8     		bhi	.L153
 447:./lib/ros_lib/ros/node_handle.h ****           return l;
 2990              		.loc 11 447 0
 2991 0080 04F50678 		add	r8, r4, #536
 2992 0084 3546     		mov	r5, r6
 2993              	.LVL346:
 2994 0086 4746     		mov	r7, r8
 2995              	.LBB198:
 2996              	.LBB199:
 128:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 2997              		.loc 13 128 0
 2998 0088 DFF83490 		ldr	r9, .L160+4
 2999              	.LVL347:
 3000              	.L155:
 127:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 3001              		.loc 13 127 0
 3002 008c C8EB0703 		rsb	r3, r8, r7
 3003 0090 9E42     		cmp	r6, r3
 3004 0092 0FDD     		ble	.L150
 3005              	.L158:
 128:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 3006              		.loc 13 128 0
 3007 0094 B9F80030 		ldrh	r3, [r9]
 3008 0098 5B06     		lsls	r3, r3, #25
 3009 009a FBD5     		bpl	.L158
 129:./lib/ros_lib/ArduinoHardware.h ****       }
 3010              		.loc 13 129 0
 3011 009c 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 3012              	.LVL348:
 3013 00a0 6068     		ldr	r0, [r4, #4]
 3014 00a2 FFF7FEFF 		bl	USART_SendData
 3015              	.LVL349:
 3016 00a6 F1E7     		b	.L155
 3017              	.LVL350:
 3018              	.L153:
 3019              	.LBE199:
 3020              	.LBE198:
 450:./lib/ros_lib/ros/node_handle.h ****           return -1;
 3021              		.loc 11 450 0
 3022 00a8 0449     		ldr	r1, .L160
 3023              	.LVL351:
 3024 00aa 2046     		mov	r0, r4
 3025 00ac FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 3026              	.LVL352:
 451:./lib/ros_lib/ros/node_handle.h ****         }
 3027              		.loc 11 451 0
 3028 00b0 4FF0FF35 		mov	r5, #-1
 3029              	.LVL353:
 3030              	.L150:
 453:./lib/ros_lib/ros/node_handle.h **** 
 3031              		.loc 11 453 0
 3032 00b4 2846     		mov	r0, r5
 3033 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3034              	.LVL354:
 3035              	.L161:
 3036 00ba 00BF     		.align	2
 3037              	.L160:
 3038 00bc 89010000 		.word	.LC15
 3039 00c0 00380140 		.word	1073821696
 3040              		.cfi_endproc
 3041              	.LFE206:
 3042              		.fnend
 3044              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv,"a
 3045              		.align	1
 3046              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 3047              		.thumb
 3048              		.thumb_func
 3050              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:
 3051              		.fnstart
 3052              	.LFB203:
 294:./lib/ros_lib/ros/node_handle.h ****       {
 3053              		.loc 11 294 0
 3054              		.cfi_startproc
 3055              		@ args = 0, pretend = 0, frame = 16
 3056              		@ frame_needed = 0, uses_anonymous_args = 0
 3057              	.LVL355:
 3058 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 3059              		.save {r4, lr}
 3060              		.pad #16
 3061              	.LCFI36:
 3062              		.cfi_def_cfa_offset 24
 3063              		.cfi_offset 4, -8
 3064              		.cfi_offset 14, -4
 3065              	.LVL356:
 3066              	.LBB200:
 3067              	.LBB201:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 3068              		.loc 1 19 0
 3069 0002 084B     		ldr	r3, .L163
 3070              	.LBE201:
 3071              	.LBE200:
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 3072              		.loc 11 297 0
 3073 0004 01AA     		add	r2, sp, #4
 3074              	.LVL357:
 3075              	.LBB205:
 3076              	.LBB204:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 3077              		.loc 1 19 0
 3078 0006 0193     		str	r3, [sp, #4]
 3079              	.LVL358:
 3080              	.LBB202:
 3081              	.LBB203:
 3082              		.file 15 "./lib/ros_lib/ros/time.h"
   1:./lib/ros_lib/ros/time.h **** /*
   2:./lib/ros_lib/ros/time.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/time.h ****  *
   4:./lib/ros_lib/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/time.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/time.h ****  *
   7:./lib/ros_lib/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/time.h ****  * are met:
  10:./lib/ros_lib/ros/time.h ****  *
  11:./lib/ros_lib/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/time.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/time.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/time.h ****  *
  21:./lib/ros_lib/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/time.h ****  */
  34:./lib/ros_lib/ros/time.h **** 
  35:./lib/ros_lib/ros/time.h **** #ifndef ROS_TIME_H_
  36:./lib/ros_lib/ros/time.h **** #define ROS_TIME_H_
  37:./lib/ros_lib/ros/time.h **** 
  38:./lib/ros_lib/ros/time.h **** #include <math.h>
  39:./lib/ros_lib/ros/time.h **** #include <stdint.h>
  40:./lib/ros_lib/ros/time.h **** 
  41:./lib/ros_lib/ros/time.h **** #include "ros/duration.h"
  42:./lib/ros_lib/ros/time.h **** 
  43:./lib/ros_lib/ros/time.h **** namespace ros
  44:./lib/ros_lib/ros/time.h **** {
  45:./lib/ros_lib/ros/time.h ****   void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  46:./lib/ros_lib/ros/time.h **** 
  47:./lib/ros_lib/ros/time.h ****   class Time
  48:./lib/ros_lib/ros/time.h ****   {
  49:./lib/ros_lib/ros/time.h ****     public:
  50:./lib/ros_lib/ros/time.h ****       uint32_t sec, nsec;
  51:./lib/ros_lib/ros/time.h **** 
  52:./lib/ros_lib/ros/time.h ****       Time() : sec(0), nsec(0) {}
 3083              		.loc 15 52 0
 3084 0008 0023     		movs	r3, #0
 3085 000a 0293     		str	r3, [sp, #8]
 3086 000c 0393     		str	r3, [sp, #12]
 3087              	.LVL359:
 3088              	.LBE203:
 3089              	.LBE202:
 3090              	.LBE204:
 3091              	.LBE205:
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 3092              		.loc 11 297 0
 3093 000e 0368     		ldr	r3, [r0]
 3094 0010 0A21     		movs	r1, #10
 3095 0012 1B68     		ldr	r3, [r3]
 294:./lib/ros_lib/ros/node_handle.h ****       {
 3096              		.loc 11 294 0
 3097 0014 0446     		mov	r4, r0
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 3098              		.loc 11 297 0
 3099 0016 9847     		blx	r3
 3100              	.LVL360:
 3101              	.LBB206:
 3102              	.LBB207:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3103              		.loc 13 134 0
 3104 0018 FFF7FEFF 		bl	millis
 3105              	.LVL361:
 3106              	.LBE207:
 3107              	.LBE206:
 298:./lib/ros_lib/ros/node_handle.h ****       }
 3108              		.loc 11 298 0
 3109 001c E060     		str	r0, [r4, #12]
 299:./lib/ros_lib/ros/node_handle.h **** 
 3110              		.loc 11 299 0
 3111 001e 04B0     		add	sp, sp, #16
 3112              	.LCFI37:
 3113              		.cfi_def_cfa_offset 8
 3114              		@ sp needed
 3115 0020 10BD     		pop	{r4, pc}
 3116              	.LVL362:
 3117              	.L164:
 3118 0022 00BF     		.align	2
 3119              	.L163:
 3120 0024 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 3121              		.cfi_endproc
 3122              	.LFE203:
 3123              		.fnend
 3125              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv,"a
 3126              		.align	1
 3127              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 3128              		.thumb
 3129              		.thumb_func
 3131              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:
 3132              		.fnstart
 3133              	.LFB204:
 391:./lib/ros_lib/ros/node_handle.h ****       {
 3134              		.loc 11 391 0
 3135              		.cfi_startproc
 3136              		@ args = 0, pretend = 0, frame = 24
 3137              		@ frame_needed = 0, uses_anonymous_args = 0
 3138              	.LVL363:
 3139 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3140              		.save {r4, r5, r6, r7, r8, lr}
 3141              	.LCFI38:
 3142              		.cfi_def_cfa_offset 24
 3143              		.cfi_offset 4, -24
 3144              		.cfi_offset 5, -20
 3145              		.cfi_offset 6, -16
 3146              		.cfi_offset 7, -12
 3147              		.cfi_offset 8, -8
 3148              		.cfi_offset 14, -4
 3149 0004 0446     		mov	r4, r0
 3150              	.LBB213:
 3151              	.LBB214:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 3152              		.loc 2 34 0
 3153 0006 2B4B     		ldr	r3, .L178
 3154              	.LBE214:
 3155              	.LBE213:
 391:./lib/ros_lib/ros/node_handle.h ****       {
 3156              		.loc 11 391 0
 3157              		.pad #24
 3158 0008 86B0     		sub	sp, sp, #24
 3159              	.LCFI39:
 3160              		.cfi_def_cfa_offset 48
 3161              	.LVL364:
 3162              	.LBB216:
 3163              	.LBB215:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 3164              		.loc 2 34 0
 3165 000a 0093     		str	r3, [sp]
 3166 000c 2A4B     		ldr	r3, .L178+4
 3167 000e 0022     		movs	r2, #0
 3168 0010 ADF80420 		strh	r2, [sp, #4]	@ movhi
 3169 0014 0293     		str	r3, [sp, #8]
 3170 0016 0393     		str	r3, [sp, #12]
 3171 0018 0493     		str	r3, [sp, #16]
 3172 001a 0592     		str	r2, [sp, #20]
 3173              	.LVL365:
 3174 001c 00F21446 		addw	r6, r0, #1044
 3175 0020 00F58F65 		add	r5, r0, #1144
 3176              	.LBE215:
 3177              	.LBE216:
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 3178              		.loc 11 403 0
 3179 0024 4FF40077 		mov	r7, #512
 3180              	.LVL366:
 3181              	.L167:
 397:./lib/ros_lib/ros/node_handle.h ****           {
 3182              		.loc 11 397 0
 3183 0028 56F8043F 		ldr	r3, [r6, #4]!
 3184 002c BBB1     		cbz	r3, .L166
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 3185              		.loc 11 399 0
 3186 002e 9A68     		ldr	r2, [r3, #8]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3187              		.loc 11 401 0
 3188 0030 5868     		ldr	r0, [r3, #4]
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 3189              		.loc 11 399 0
 3190 0032 ADF80420 		strh	r2, [sp, #4]	@ movhi
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 3191              		.loc 11 400 0
 3192 0036 1A68     		ldr	r2, [r3]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3193              		.loc 11 401 0
 3194 0038 0368     		ldr	r3, [r0]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 3195              		.loc 11 400 0
 3196 003a 0292     		str	r2, [sp, #8]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3197              		.loc 11 401 0
 3198 003c 9B68     		ldr	r3, [r3, #8]
 3199 003e 9847     		blx	r3
 3200              	.LVL367:
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 3201              		.loc 11 402 0
 3202 0040 3368     		ldr	r3, [r6]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3203              		.loc 11 401 0
 3204 0042 0390     		str	r0, [sp, #12]
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 3205              		.loc 11 402 0
 3206 0044 5868     		ldr	r0, [r3, #4]
 3207 0046 0368     		ldr	r3, [r0]
 3208 0048 DB68     		ldr	r3, [r3, #12]
 3209 004a 9847     		blx	r3
 3210              	.LVL368:
 3211 004c 3168     		ldr	r1, [r6]
 404:./lib/ros_lib/ros/node_handle.h ****           }
 3212              		.loc 11 404 0
 3213 004e 2368     		ldr	r3, [r4]
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 3214              		.loc 11 402 0
 3215 0050 0490     		str	r0, [sp, #16]
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 3216              		.loc 11 403 0
 3217 0052 0597     		str	r7, [sp, #20]
 3218              	.LVL369:
 404:./lib/ros_lib/ros/node_handle.h ****           }
 3219              		.loc 11 404 0
 3220 0054 1B68     		ldr	r3, [r3]
 3221 0056 6A46     		mov	r2, sp
 3222 0058 0969     		ldr	r1, [r1, #16]
 3223              	.LVL370:
 3224 005a 2046     		mov	r0, r4
 3225 005c 9847     		blx	r3
 3226              	.LVL371:
 3227              	.L166:
 395:./lib/ros_lib/ros/node_handle.h ****         {
 3228              		.loc 11 395 0 discriminator 2
 3229 005e AE42     		cmp	r6, r5
 3230 0060 E2D1     		bne	.L167
 3231 0062 04F2DC46 		addw	r6, r4, #1244
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 3232              		.loc 11 415 0
 3233 0066 4FF40077 		mov	r7, #512
 3234              	.L169:
 409:./lib/ros_lib/ros/node_handle.h ****           {
 3235              		.loc 11 409 0
 3236 006a 55F8040F 		ldr	r0, [r5, #4]!
 3237 006e C8B1     		cbz	r0, .L168
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 3238              		.loc 11 411 0
 3239 0070 4368     		ldr	r3, [r0, #4]
 3240 0072 ADF80430 		strh	r3, [sp, #4]	@ movhi
 412:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 3241              		.loc 11 412 0
 3242 0076 8368     		ldr	r3, [r0, #8]
 3243 0078 0293     		str	r3, [sp, #8]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 3244              		.loc 11 413 0
 3245 007a 0368     		ldr	r3, [r0]
 3246 007c 9B68     		ldr	r3, [r3, #8]
 3247 007e 9847     		blx	r3
 3248              	.LVL372:
 3249 0080 0390     		str	r0, [sp, #12]
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 3250              		.loc 11 414 0
 3251 0082 2868     		ldr	r0, [r5]
 3252 0084 0368     		ldr	r3, [r0]
 3253 0086 DB68     		ldr	r3, [r3, #12]
 3254 0088 9847     		blx	r3
 3255              	.LVL373:
 416:./lib/ros_lib/ros/node_handle.h ****           }
 3256              		.loc 11 416 0
 3257 008a 2368     		ldr	r3, [r4]
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 3258              		.loc 11 414 0
 3259 008c 0490     		str	r0, [sp, #16]
 416:./lib/ros_lib/ros/node_handle.h ****           }
 3260              		.loc 11 416 0
 3261 008e 2868     		ldr	r0, [r5]
 3262 0090 D3F80080 		ldr	r8, [r3]
 3263 0094 0368     		ldr	r3, [r0]
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 3264              		.loc 11 415 0
 3265 0096 0597     		str	r7, [sp, #20]
 416:./lib/ros_lib/ros/node_handle.h ****           }
 3266              		.loc 11 416 0
 3267 0098 5B68     		ldr	r3, [r3, #4]
 3268 009a 9847     		blx	r3
 3269              	.LVL374:
 3270 009c 6A46     		mov	r2, sp
 3271 009e 0146     		mov	r1, r0
 3272 00a0 2046     		mov	r0, r4
 3273 00a2 C047     		blx	r8
 3274              	.LVL375:
 3275              	.L168:
 407:./lib/ros_lib/ros/node_handle.h ****         {
 3276              		.loc 11 407 0 discriminator 2
 3277 00a4 AE42     		cmp	r6, r5
 3278 00a6 E0D1     		bne	.L169
 419:./lib/ros_lib/ros/node_handle.h ****       }
 3279              		.loc 11 419 0
 3280 00a8 0123     		movs	r3, #1
 3281 00aa 84F8F434 		strb	r3, [r4, #1268]
 420:./lib/ros_lib/ros/node_handle.h **** 
 3282              		.loc 11 420 0
 3283 00ae 06B0     		add	sp, sp, #24
 3284              	.LCFI40:
 3285              		.cfi_def_cfa_offset 24
 3286              	.LVL376:
 3287              		@ sp needed
 3288 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3289              	.LVL377:
 3290              	.L179:
 3291              		.align	2
 3292              	.L178:
 3293 00b4 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 3294 00b8 C2010000 		.word	.LC16
 3295              		.cfi_endproc
 3296              	.LFE204:
 3297              		.fnend
 3299              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh,"axG",%pr
 3300              		.align	1
 3301              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 3302              		.thumb
 3303              		.thumb_func
 3305              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:
 3306              		.fnstart
 3307              	.LFB205:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 3308              		.loc 11 301 0
 3309              		.cfi_startproc
 3310              		@ args = 0, pretend = 0, frame = 16
 3311              		@ frame_needed = 0, uses_anonymous_args = 0
 3312              	.LVL378:
 3313 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 3314              		.save {r4, r5, r6, lr}
 3315              		.pad #16
 3316              	.LCFI41:
 3317              		.cfi_def_cfa_offset 32
 3318              		.cfi_offset 4, -16
 3319              		.cfi_offset 5, -12
 3320              		.cfi_offset 6, -8
 3321              		.cfi_offset 14, -4
 3322              	.LVL379:
 3323              	.LBB231:
 3324              	.LBB232:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 3325              		.loc 1 19 0
 3326 0002 1C4B     		ldr	r3, .L181
 3327              	.LBE232:
 3328              	.LBE231:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 3329              		.loc 11 301 0
 3330 0004 0446     		mov	r4, r0
 3331              	.LBB236:
 3332              	.LBB235:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 3333              		.loc 1 19 0
 3334 0006 0193     		str	r3, [sp, #4]
 3335              	.LVL380:
 3336              	.LBB233:
 3337              	.LBB234:
 3338              		.loc 15 52 0
 3339 0008 0023     		movs	r3, #0
 3340 000a 0293     		str	r3, [sp, #8]
 3341 000c 0393     		str	r3, [sp, #12]
 3342              	.LVL381:
 3343              	.LBE234:
 3344              	.LBE233:
 3345              	.LBE235:
 3346              	.LBE236:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 3347              		.loc 11 301 0
 3348 000e 0D46     		mov	r5, r1
 3349              	.LBB237:
 3350              	.LBB238:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3351              		.loc 13 134 0
 3352 0010 FFF7FEFF 		bl	millis
 3353              	.LVL382:
 3354              	.LBE238:
 3355              	.LBE237:
 304:./lib/ros_lib/ros/node_handle.h **** 
 3356              		.loc 11 304 0
 3357 0014 E268     		ldr	r2, [r4, #12]
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 3358              		.loc 11 306 0
 3359 0016 2946     		mov	r1, r5
 304:./lib/ros_lib/ros/node_handle.h **** 
 3360              		.loc 11 304 0
 3361 0018 861A     		subs	r6, r0, r2
 3362              	.LVL383:
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 3363              		.loc 11 307 0
 3364 001a 4FF47A75 		mov	r5, #1000
 3365              	.LVL384:
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 3366              		.loc 11 306 0
 3367 001e 01A8     		add	r0, sp, #4
 3368 0020 FFF7FEFF 		bl	_ZN8std_msgs4Time11deserializeEPh
 3369              	.LVL385:
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 3370              		.loc 11 307 0
 3371 0024 B6FBF5F2 		udiv	r2, r6, r5
 3372 0028 029B     		ldr	r3, [sp, #8]
 3373 002a 1344     		add	r3, r3, r2
 308:./lib/ros_lib/ros/node_handle.h **** 
 3374              		.loc 11 308 0
 3375 002c 05FB1262 		mls	r2, r5, r2, r6
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 3376              		.loc 11 307 0
 3377 0030 0293     		str	r3, [sp, #8]
 308:./lib/ros_lib/ros/node_handle.h **** 
 3378              		.loc 11 308 0
 3379 0032 114E     		ldr	r6, .L181+4
 3380              	.LVL386:
 3381 0034 039B     		ldr	r3, [sp, #12]
 3382 0036 06FB0232 		mla	r2, r6, r2, r3
 3383 003a 0392     		str	r2, [sp, #12]
 3384              	.LVL387:
 3385              	.LBB239:
 3386              	.LBB240:
 3387              	.LBB241:
 3388              	.LBB242:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3389              		.loc 13 134 0
 3390 003c FFF7FEFF 		bl	millis
 3391              	.LVL388:
 3392              	.LBE242:
 3393              	.LBE241:
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 3394              		.loc 11 327 0
 3395 0040 B0FBF5F3 		udiv	r3, r0, r5
 3396 0044 029A     		ldr	r2, [sp, #8]
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 3397              		.loc 11 328 0
 3398 0046 0399     		ldr	r1, [sp, #12]
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 3399              		.loc 11 327 0
 3400 0048 013A     		subs	r2, r2, #1
 3401 004a D21A     		subs	r2, r2, r3
 3402 004c 2261     		str	r2, [r4, #16]
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 3403              		.loc 11 328 0
 3404 004e 0B4A     		ldr	r2, .L181+8
 3405 0050 05FB1300 		mls	r0, r5, r3, r0
 3406              	.LVL389:
 3407 0054 0A44     		add	r2, r2, r1
 3408 0056 2146     		mov	r1, r4
 3409 0058 06FB1023 		mls	r3, r6, r0, r2
 329:./lib/ros_lib/ros/node_handle.h ****       }
 3410              		.loc 11 329 0
 3411 005c 04F11000 		add	r0, r4, #16
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 3412              		.loc 11 328 0
 3413 0060 41F8143F 		str	r3, [r1, #20]!
 329:./lib/ros_lib/ros/node_handle.h ****       }
 3414              		.loc 11 329 0
 3415 0064 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 3416              	.LVL390:
 3417              	.LBE240:
 3418              	.LBE239:
 3419              	.LBB243:
 3420              	.LBB244:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3421              		.loc 13 134 0
 3422 0068 FFF7FEFF 		bl	millis
 3423              	.LVL391:
 3424              	.LBE244:
 3425              	.LBE243:
 311:./lib/ros_lib/ros/node_handle.h ****       }
 3426              		.loc 11 311 0
 3427 006c C4F8FC04 		str	r0, [r4, #1276]
 312:./lib/ros_lib/ros/node_handle.h **** 
 3428              		.loc 11 312 0
 3429 0070 04B0     		add	sp, sp, #16
 3430              	.LCFI42:
 3431              		.cfi_def_cfa_offset 16
 3432              		@ sp needed
 3433 0072 70BD     		pop	{r4, r5, r6, pc}
 3434              	.LVL392:
 3435              	.L182:
 3436              		.align	2
 3437              	.L181:
 3438 0074 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 3439 0078 40420F00 		.word	1000000
 3440 007c 00CA9A3B 		.word	1000000000
 3441              		.cfi_endproc
 3442              	.LFE205:
 3443              		.fnend
 3445              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv,"axG",%pro
 3446              		.align	1
 3447              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 3448              		.thumb
 3449              		.thumb_func
 3451              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:
 3452              		.fnstart
 3453              	.LFB201:
 184:./lib/ros_lib/ros/node_handle.h **** 
 3454              		.loc 11 184 0
 3455              		.cfi_startproc
 3456              		@ args = 0, pretend = 0, frame = 0
 3457              		@ frame_needed = 0, uses_anonymous_args = 0
 3458              	.LVL393:
 3459 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3460              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 3461              	.LCFI43:
 3462              		.cfi_def_cfa_offset 32
 3463              		.cfi_offset 3, -32
 3464              		.cfi_offset 4, -28
 3465              		.cfi_offset 5, -24
 3466              		.cfi_offset 6, -20
 3467              		.cfi_offset 7, -16
 3468              		.cfi_offset 8, -12
 3469              		.cfi_offset 9, -8
 3470              		.cfi_offset 14, -4
 184:./lib/ros_lib/ros/node_handle.h **** 
 3471              		.loc 11 184 0
 3472 0004 0446     		mov	r4, r0
 3473              	.LVL394:
 3474              	.LBB252:
 3475              	.LBB253:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3476              		.loc 13 134 0
 3477 0006 FFF7FEFF 		bl	millis
 3478              	.LVL395:
 3479              	.LBE253:
 3480              	.LBE252:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 3481              		.loc 11 188 0
 3482 000a 42F6F822 		movw	r2, #11000
 3483 000e D4F8FC34 		ldr	r3, [r4, #1276]
 3484              	.LBB255:
 3485              	.LBB254:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3486              		.loc 13 134 0
 3487 0012 0646     		mov	r6, r0
 3488              	.LVL396:
 3489              	.LBE254:
 3490              	.LBE255:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 3491              		.loc 11 188 0
 3492 0014 C31A     		subs	r3, r0, r3
 3493 0016 9342     		cmp	r3, r2
 189:./lib/ros_lib/ros/node_handle.h ****          }
 3494              		.loc 11 189 0
 3495 0018 84BF     		itt	hi
 3496 001a 0023     		movhi	r3, #0
 3497 001c 84F8F434 		strbhi	r3, [r4, #1268]
 193:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 3498              		.loc 11 193 0
 3499 0020 D4F8E034 		ldr	r3, [r4, #1248]
 3500 0024 33B1     		cbz	r3, .L185
 194:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 3501              		.loc 11 194 0
 3502 0026 D4F80035 		ldr	r3, [r4, #1280]
 3503 002a 8342     		cmp	r3, r0
 195:./lib/ros_lib/ros/node_handle.h ****           }
 3504              		.loc 11 195 0
 3505 002c 3CBF     		itt	cc
 3506 002e 0023     		movcc	r3, #0
 3507 0030 C4F8E034 		strcc	r3, [r4, #1248]
 3508              	.L185:
 3509              	.LBB256:
 3510              	.LBB257:
 3511              	.LBB258:
 118:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 3512              		.loc 13 118 0
 3513 0034 744F     		ldr	r7, .L225
 3514              	.LBE258:
 3515              	.LBE257:
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 3516              		.loc 11 252 0
 3517 0036 4FF00008 		mov	r8, #0
 269:./lib/ros_lib/ros/node_handle.h ****               }
 3518              		.loc 11 269 0
 3519 003a 04F11809 		add	r9, r4, #24
 3520              	.LVL397:
 3521              	.L186:
 3522              	.LBB261:
 3523              	.LBB259:
 118:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 3524              		.loc 13 118 0
 3525 003e 7A68     		ldr	r2, [r7, #4]
 3526 0040 3B68     		ldr	r3, [r7]
 3527 0042 9A42     		cmp	r2, r3
 3528 0044 00F0CC80 		beq	.L187
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 3529              		.loc 13 121 0
 3530 0048 3B68     		ldr	r3, [r7]
 3531              	.LBE259:
 3532              	.LBE261:
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 3533              		.loc 11 206 0
 3534 004a D4F8E054 		ldr	r5, [r4, #1248]
 3535              	.LBB262:
 3536              	.LBB260:
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 3537              		.loc 13 121 0
 3538 004e 07EB4303 		add	r3, r7, r3, lsl #1
 3539 0052 1B89     		ldrh	r3, [r3, #8]
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 3540              		.loc 13 122 0
 3541 0054 3A68     		ldr	r2, [r7]
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 3542              		.loc 13 121 0
 3543 0056 9BB2     		uxth	r3, r3
 3544              	.LVL398:
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 3545              		.loc 13 122 0
 3546 0058 0132     		adds	r2, r2, #1
 3547 005a C2F30802 		ubfx	r2, r2, #0, #9
 3548 005e 3A60     		str	r2, [r7]
 3549              	.LVL399:
 3550              	.LBE260:
 3551              	.LBE262:
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 3552              		.loc 11 205 0
 3553 0060 D4F8F024 		ldr	r2, [r4, #1264]
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 3554              		.loc 11 206 0
 3555 0064 072D     		cmp	r5, #7
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 3556              		.loc 11 205 0
 3557 0066 1A44     		add	r2, r2, r3
 3558 0068 C4F8F024 		str	r2, [r4, #1264]
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 3559              		.loc 11 206 0
 3560 006c 0FD1     		bne	.L188
 207:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 3561              		.loc 11 207 0
 3562 006e D4F8EC24 		ldr	r2, [r4, #1260]
 3563 0072 511C     		adds	r1, r2, #1
 3564 0074 2244     		add	r2, r2, r4
 3565 0076 C4F8EC14 		str	r1, [r4, #1260]
 3566 007a 1376     		strb	r3, [r2, #24]
 208:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 3567              		.loc 11 208 0
 3568 007c D4F8E434 		ldr	r3, [r4, #1252]
 3569 0080 013B     		subs	r3, r3, #1
 3570 0082 C4F8E434 		str	r3, [r4, #1252]
 3571              	.L223:
 209:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 3572              		.loc 11 209 0
 3573 0086 002B     		cmp	r3, #0
 3574 0088 D9D1     		bne	.L186
 210:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 3575              		.loc 11 210 0
 3576 008a 0823     		movs	r3, #8
 3577 008c 1AE0     		b	.L221
 3578              	.L188:
 211:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 3579              		.loc 11 211 0
 3580 008e A5B9     		cbnz	r5, .L191
 212:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 3581              		.loc 11 212 0
 3582 0090 FF2B     		cmp	r3, #255
 3583 0092 07D1     		bne	.L192
 213:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 3584              		.loc 11 213 0
 3585 0094 0123     		movs	r3, #1
 3586 0096 C4F8E034 		str	r3, [r4, #1248]
 214:./lib/ros_lib/ros/node_handle.h ****             }
 3587              		.loc 11 214 0
 3588 009a 06F11403 		add	r3, r6, #20
 3589 009e C4F80035 		str	r3, [r4, #1280]
 3590 00a2 CCE7     		b	.L186
 3591              	.L192:
 3592              	.LVL400:
 3593              	.LBB263:
 3594              	.LBB264:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3595              		.loc 13 134 0
 3596 00a4 FFF7FEFF 		bl	millis
 3597              	.LVL401:
 3598              	.LBE264:
 3599              	.LBE263:
 216:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 3600              		.loc 11 216 0
 3601 00a8 801B     		subs	r0, r0, r6
 3602 00aa 0528     		cmp	r0, #5
 3603 00ac C7D9     		bls	.L186
 218:./lib/ros_lib/ros/node_handle.h ****               return -2;
 3604              		.loc 11 218 0
 3605 00ae 84F8F454 		strb	r5, [r4, #1268]
 219:./lib/ros_lib/ros/node_handle.h ****             }
 3606              		.loc 11 219 0
 3607 00b2 6FF00100 		mvn	r0, #1
 3608 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3609              	.LVL402:
 3610              	.L191:
 221:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 3611              		.loc 11 221 0
 3612 00ba 012D     		cmp	r5, #1
 3613 00bc 0FD1     		bne	.L194
 222:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 3614              		.loc 11 222 0
 3615 00be FE2B     		cmp	r3, #254
 3616 00c0 03D1     		bne	.L195
 223:./lib/ros_lib/ros/node_handle.h ****             }else{
 3617              		.loc 11 223 0
 3618 00c2 0223     		movs	r3, #2
 3619              	.L221:
 3620 00c4 C4F8E034 		str	r3, [r4, #1248]
 3621 00c8 B9E7     		b	.L186
 3622              	.L195:
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 3623              		.loc 11 226 0
 3624 00ca 94F8F434 		ldrb	r3, [r4, #1268]	@ zero_extendqisi2
 225:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 3625              		.loc 11 225 0
 3626 00ce C4F8E084 		str	r8, [r4, #1248]
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 3627              		.loc 11 226 0
 3628 00d2 002B     		cmp	r3, #0
 3629 00d4 B3D1     		bne	.L186
 227:./lib/ros_lib/ros/node_handle.h ****             }
 3630              		.loc 11 227 0
 3631 00d6 2046     		mov	r0, r4
 3632 00d8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 3633              	.LVL403:
 3634 00dc AFE7     		b	.L186
 3635              	.L194:
 229:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 3636              		.loc 11 229 0
 3637 00de 022D     		cmp	r5, #2
 3638 00e0 05D1     		bne	.L196
 230:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 3639              		.loc 11 230 0
 3640 00e2 C4F8E434 		str	r3, [r4, #1252]
 231:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 3641              		.loc 11 231 0
 3642 00e6 C4F8EC84 		str	r8, [r4, #1260]
 232:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 3643              		.loc 11 232 0
 3644 00ea 0322     		movs	r2, #3
 3645 00ec 20E0     		b	.L222
 3646              	.L196:
 234:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 3647              		.loc 11 234 0
 3648 00ee 032D     		cmp	r5, #3
 3649 00f0 07D1     		bne	.L197
 235:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 3650              		.loc 11 235 0
 3651 00f2 D4F8E424 		ldr	r2, [r4, #1252]
 3652 00f6 02EB0323 		add	r3, r2, r3, lsl #8
 3653 00fa C4F8E434 		str	r3, [r4, #1252]
 236:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 3654              		.loc 11 236 0
 3655 00fe 0423     		movs	r3, #4
 3656 0100 E0E7     		b	.L221
 3657              	.L197:
 237:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 3658              		.loc 11 237 0
 3659 0102 042D     		cmp	r5, #4
 3660 0104 0FD1     		bne	.L198
 238:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 3661              		.loc 11 238 0
 3662 0106 414B     		ldr	r3, .L225+4
 3663 0108 1340     		ands	r3, r3, r2
 3664 010a 002B     		cmp	r3, #0
 3665 010c BEBF     		ittt	lt
 3666 010e 03F1FF33 		addlt	r3, r3, #-1
 3667 0112 63F0FF03 		ornlt	r3, r3, #255
 3668 0116 0133     		addlt	r3, r3, #1
 3669 0118 FF2B     		cmp	r3, #255
 3670 011a 01D1     		bne	.L199
 239:./lib/ros_lib/ros/node_handle.h **** 	    else
 3671              		.loc 11 239 0
 3672 011c 0523     		movs	r3, #5
 3673 011e D1E7     		b	.L221
 3674              	.L199:
 241:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 3675              		.loc 11 241 0
 3676 0120 C4F8E084 		str	r8, [r4, #1248]
 3677 0124 8BE7     		b	.L186
 3678              	.L198:
 242:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 3679              		.loc 11 242 0
 3680 0126 052D     		cmp	r5, #5
 3681 0128 07D1     		bne	.L201
 243:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 3682              		.loc 11 243 0
 3683 012a C4F8E834 		str	r3, [r4, #1256]
 244:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 3684              		.loc 11 244 0
 3685 012e 0622     		movs	r2, #6
 3686              	.L222:
 3687 0130 C4F8E024 		str	r2, [r4, #1248]
 245:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 3688              		.loc 11 245 0
 3689 0134 C4F8F034 		str	r3, [r4, #1264]
 3690 0138 81E7     		b	.L186
 3691              	.L201:
 246:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 3692              		.loc 11 246 0
 3693 013a 062D     		cmp	r5, #6
 3694 013c 0BD1     		bne	.L202
 247:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 3695              		.loc 11 247 0
 3696 013e D4F8E824 		ldr	r2, [r4, #1256]
 3697 0142 02EB0323 		add	r3, r2, r3, lsl #8
 3698 0146 C4F8E834 		str	r3, [r4, #1256]
 248:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 3699              		.loc 11 248 0
 3700 014a 0723     		movs	r3, #7
 3701 014c C4F8E034 		str	r3, [r4, #1248]
 249:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 3702              		.loc 11 249 0
 3703 0150 D4F8E434 		ldr	r3, [r4, #1252]
 3704 0154 97E7     		b	.L223
 3705              	.L202:
 251:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 3706              		.loc 11 251 0
 3707 0156 082D     		cmp	r5, #8
 3708 0158 7FF471AF 		bne	.L186
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 3709              		.loc 11 253 0
 3710 015c 2B4B     		ldr	r3, .L225+4
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 3711              		.loc 11 252 0
 3712 015e C4F8E084 		str	r8, [r4, #1248]
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 3713              		.loc 11 253 0
 3714 0162 1340     		ands	r3, r3, r2
 3715 0164 002B     		cmp	r3, #0
 3716 0166 BEBF     		ittt	lt
 3717 0168 03F1FF33 		addlt	r3, r3, #-1
 3718 016c 63F0FF03 		ornlt	r3, r3, #255
 3719 0170 0133     		addlt	r3, r3, #1
 3720 0172 FF2B     		cmp	r3, #255
 3721 0174 7FF463AF 		bne	.L186
 254:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 3722              		.loc 11 254 0
 3723 0178 D4F8E834 		ldr	r3, [r4, #1256]
 3724 017c 6BB9     		cbnz	r3, .L205
 255:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 3725              		.loc 11 255 0
 3726 017e 2046     		mov	r0, r4
 3727 0180 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 3728              	.LVL404:
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 3729              		.loc 11 256 0
 3730 0184 2046     		mov	r0, r4
 3731 0186 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 3732              	.LVL405:
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 3733              		.loc 11 257 0
 3734 018a C4F8F864 		str	r6, [r4, #1272]
 258:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 3735              		.loc 11 258 0
 3736 018e C4F8FC64 		str	r6, [r4, #1276]
 259:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 3737              		.loc 11 259 0
 3738 0192 4FF0FF30 		mov	r0, #-1
 3739 0196 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3740              	.LVL406:
 3741              	.L205:
 260:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 3742              		.loc 11 260 0
 3743 019a 0A2B     		cmp	r3, #10
 3744 019c 04D1     		bne	.L206
 261:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 3745              		.loc 11 261 0
 3746 019e 4946     		mov	r1, r9
 3747 01a0 2046     		mov	r0, r4
 3748 01a2 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 3749              	.LVL407:
 3750 01a6 4AE7     		b	.L186
 3751              	.L206:
 262:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 3752              		.loc 11 262 0
 3753 01a8 062B     		cmp	r3, #6
 3754 01aa 08D1     		bne	.L207
 263:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 3755              		.loc 11 263 0
 3756 01ac 4946     		mov	r1, r9
 3757 01ae 04F5A160 		add	r0, r4, #1288
 3758 01b2 FFF7FEFF 		bl	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 3759              	.LVL408:
 264:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 3760              		.loc 11 264 0
 3761 01b6 0123     		movs	r3, #1
 3762 01b8 84F80435 		strb	r3, [r4, #1284]
 3763 01bc 3FE7     		b	.L186
 3764              	.L207:
 265:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 3765              		.loc 11 265 0
 3766 01be 0B2B     		cmp	r3, #11
 3767 01c0 02D1     		bne	.L208
 266:./lib/ros_lib/ros/node_handle.h ****               }else{
 3768              		.loc 11 266 0
 3769 01c2 84F8F484 		strb	r8, [r4, #1268]
 3770 01c6 3AE7     		b	.L186
 3771              	.L208:
 268:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 3772              		.loc 11 268 0
 3773 01c8 04EB8303 		add	r3, r4, r3, lsl #2
 3774 01cc D3F8EC02 		ldr	r0, [r3, #748]
 3775 01d0 0028     		cmp	r0, #0
 3776 01d2 3FF434AF 		beq	.L186
 269:./lib/ros_lib/ros/node_handle.h ****               }
 3777              		.loc 11 269 0
 3778 01d6 0368     		ldr	r3, [r0]
 3779 01d8 4946     		mov	r1, r9
 3780 01da 1B68     		ldr	r3, [r3]
 3781 01dc 9847     		blx	r3
 3782              	.LVL409:
 3783 01de 2EE7     		b	.L186
 3784              	.L187:
 3785              	.LBE256:
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 3786              		.loc 11 276 0
 3787 01e0 94F8F404 		ldrb	r0, [r4, #1268]	@ zero_extendqisi2
 3788 01e4 70B1     		cbz	r0, .L224
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 3789              		.loc 11 276 0 is_stmt 0 discriminator 1
 3790 01e6 40F6C412 		movw	r2, #2500
 3791 01ea D4F8F834 		ldr	r3, [r4, #1272]
 3792 01ee F31A     		subs	r3, r6, r3
 3793 01f0 9342     		cmp	r3, r2
 3794 01f2 04D9     		bls	.L210
 277:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 3795              		.loc 11 277 0 is_stmt 1
 3796 01f4 2046     		mov	r0, r4
 3797 01f6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 3798              	.LVL410:
 278:./lib/ros_lib/ros/node_handle.h ****         }
 3799              		.loc 11 278 0
 3800 01fa C4F8F864 		str	r6, [r4, #1272]
 3801              	.L210:
 281:./lib/ros_lib/ros/node_handle.h ****       }
 3802              		.loc 11 281 0
 3803 01fe 0020     		movs	r0, #0
 3804 0200 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3805              	.LVL411:
 3806              	.L224:
 282:./lib/ros_lib/ros/node_handle.h **** 
 3807              		.loc 11 282 0
 3808 0204 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3809              	.LVL412:
 3810              	.L226:
 3811              		.align	2
 3812              	.L225:
 3813 0208 00000000 		.word	.LANCHOR1
 3814 020c FF000080 		.word	-2147483393
 3815              		.cfi_endproc
 3816              	.LFE201:
 3817              		.fnend
 3819              		.section	.text.startup,"ax",%progbits
 3820              		.align	1
 3821              		.global	main
 3822              		.thumb
 3823              		.thumb_func
 3825              	main:
 3826              		.fnstart
 3827              	.LFB179:
  40:src/main.cpp  **** 
  41:src/main.cpp  **** }
  42:src/main.cpp  **** 
  43:src/main.cpp  **** 
  44:src/main.cpp  **** ros::Subscriber<roberto_msgs::MotorState> motor_sub("motor", &motor_cb);
  45:src/main.cpp  **** ros::Subscriber<std_msgs::UInt8> led_sub("led", &led_cb);
  46:src/main.cpp  **** 
  47:src/main.cpp  **** std_msgs::String str_msg;
  48:src/main.cpp  **** ros::Publisher chatter("encoder", &str_msg);
  49:src/main.cpp  **** 
  50:src/main.cpp  **** char hello[25];
  51:src/main.cpp  **** char str[150];
  52:src/main.cpp  **** 
  53:src/main.cpp  **** 
  54:src/main.cpp  **** int main(){
 3828              		.loc 9 54 0
 3829              		.cfi_startproc
 3830              		@ args = 0, pretend = 0, frame = 576
 3831              		@ frame_needed = 0, uses_anonymous_args = 0
 3832 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3833              		.save {r4, r5, r6, r7, r8, r9, lr}
 3834              	.LCFI44:
 3835              		.cfi_def_cfa_offset 28
 3836              		.cfi_offset 4, -28
 3837              		.cfi_offset 5, -24
 3838              		.cfi_offset 6, -20
 3839              		.cfi_offset 7, -16
 3840              		.cfi_offset 8, -12
 3841              		.cfi_offset 9, -8
 3842              		.cfi_offset 14, -4
 3843              	.LBB276:
 3844              	.LBB277:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 3845              		.loc 11 147 0
 3846 0004 224C     		ldr	r4, .L247
 3847              	.LBE277:
 3848              	.LBE276:
 3849              		.loc 9 54 0
 3850              		.pad #612
 3851 0006 ADF5197D 		sub	sp, sp, #612
 3852              	.LCFI45:
 3853              		.cfi_def_cfa_offset 640
  55:src/main.cpp  ****   /* System Clocks Configuration */
  56:src/main.cpp  ****   RCC_Configuration();
 3854              		.loc 9 56 0
 3855 000a FFF7FEFF 		bl	RCC_Configuration
 3856              	.LVL413:
 3857              	.LBB279:
 3858              	.LBB278:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 3859              		.loc 11 147 0
 3860 000e 04F20C40 		addw	r0, r4, #1036
 3861 0012 FFF7FEFF 		bl	_ZN15ArduinoHardware4initEv
 3862              	.LVL414:
 3863 0016 04F50862 		add	r2, r4, #2176
 151:./lib/ros_lib/ros/node_handle.h ****       };
 3864              		.loc 11 151 0
 3865 001a 1146     		mov	r1, r2
 148:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 3866              		.loc 11 148 0
 3867 001c 0023     		movs	r3, #0
 3868 001e C4F8E838 		str	r3, [r4, #2280]
 149:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 3869              		.loc 11 149 0
 3870 0022 C4F8EC38 		str	r3, [r4, #2284]
 150:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 3871              		.loc 11 150 0
 3872 0026 C4F8F438 		str	r3, [r4, #2292]
 151:./lib/ros_lib/ros/node_handle.h ****       };
 3873              		.loc 11 151 0
 3874 002a C4F8F038 		str	r3, [r4, #2288]
 3875              	.LVL415:
 3876              	.L230:
 3877              	.LBE278:
 3878              	.LBE279:
 3879              	.LBB280:
 3880              	.LBB281:
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 3881              		.loc 11 354 0
 3882 002e 51F8040F 		ldr	r0, [r1, #4]!
 3883 0032 40B9     		cbnz	r0, .L228
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 3884              		.loc 11 355 0
 3885 0034 1748     		ldr	r0, .L247+4
 3886 0036 04EB8301 		add	r1, r4, r3, lsl #2
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 3887              		.loc 11 356 0
 3888 003a 6433     		adds	r3, r3, #100
 3889              	.LVL416:
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 3890              		.loc 11 355 0
 3891 003c C1F88408 		str	r0, [r1, #2180]
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 3892              		.loc 11 356 0
 3893 0040 C4F83C39 		str	r3, [r4, #2364]
 3894 0044 02E0     		b	.L229
 3895              	.LVL417:
 3896              	.L228:
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 3897              		.loc 11 353 0
 3898 0046 0133     		adds	r3, r3, #1
 3899              	.LVL418:
 3900 0048 192B     		cmp	r3, #25
 3901 004a F0D1     		bne	.L230
 3902              	.LVL419:
 3903              	.L229:
 3904              	.LBE281:
 3905              	.LBE280:
 3906              	.LBB282:
 3907              	.LBB283:
 3908 004c 0023     		movs	r3, #0
 3909              	.LVL420:
 3910              	.L233:
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 3911              		.loc 11 354 0
 3912 004e 52F8041F 		ldr	r1, [r2, #4]!
 3913 0052 41B9     		cbnz	r1, .L231
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 3914              		.loc 11 355 0
 3915 0054 1049     		ldr	r1, .L247+8
 3916 0056 04EB8302 		add	r2, r4, r3, lsl #2
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 3917              		.loc 11 356 0
 3918 005a 6433     		adds	r3, r3, #100
 3919              	.LVL421:
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 3920              		.loc 11 355 0
 3921 005c C2F88418 		str	r1, [r2, #2180]
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 3922              		.loc 11 356 0
 3923 0060 C4F87C39 		str	r3, [r4, #2428]
 3924 0064 02E0     		b	.L232
 3925              	.LVL422:
 3926              	.L231:
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 3927              		.loc 11 353 0
 3928 0066 0133     		adds	r3, r3, #1
 3929              	.LVL423:
 3930 0068 192B     		cmp	r3, #25
 3931 006a F0D1     		bne	.L233
 3932              	.LVL424:
 3933              	.L232:
 3934 006c 0B4A     		ldr	r2, .L247+12
 3935              	.LBE283:
 3936              	.LBE282:
 3937              	.LBB284:
 3938              	.LBB285:
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 3939              		.loc 11 339 0
 3940 006e 0023     		movs	r3, #0
 3941              	.LVL425:
 3942              	.L236:
 340:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 3943              		.loc 11 340 0
 3944 0070 52F8041F 		ldr	r1, [r2, #4]!
 3945 0074 B1B9     		cbnz	r1, .L234
 341:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 3946              		.loc 11 341 0
 3947 0076 0A4A     		ldr	r2, .L247+16
 3948 0078 04EB8301 		add	r1, r4, r3, lsl #2
 3949 007c C1F82028 		str	r2, [r1, #2080]
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 3950              		.loc 11 342 0
 3951 0080 7D33     		adds	r3, r3, #125
 3952              	.LVL426:
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 3953              		.loc 11 343 0
 3954 0082 A2F28C52 		subw	r2, r2, #1420
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 3955              		.loc 11 342 0
 3956 0086 C4F89C39 		str	r3, [r4, #2460]
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 3957              		.loc 11 343 0
 3958 008a C4F8A029 		str	r2, [r4, #2464]
 3959 008e 0CE0     		b	.L235
 3960              	.L248:
 3961              		.align	2
 3962              	.L247:
 3963 0090 00000000 		.word	.LANCHOR1
 3964 0094 38090000 		.word	.LANCHOR1+2360
 3965 0098 78090000 		.word	.LANCHOR1+2424
 3966 009c 1C080000 		.word	.LANCHOR1+2076
 3967 00a0 94090000 		.word	.LANCHOR1+2452
 3968              	.LVL427:
 3969              	.L234:
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 3970              		.loc 11 339 0
 3971 00a4 0133     		adds	r3, r3, #1
 3972              	.LVL428:
 3973 00a6 192B     		cmp	r3, #25
 3974 00a8 E2D1     		bne	.L236
 3975              	.LVL429:
 3976              	.L235:
 3977              	.LBE285:
 3978              	.LBE284:
  57:src/main.cpp  **** 
  58:src/main.cpp  ****   nh.initNode();
  59:src/main.cpp  ****   nh.subscribe(motor_sub);
  60:src/main.cpp  ****   nh.subscribe(led_sub);
  61:src/main.cpp  ****   nh.advertise(chatter);
  62:src/main.cpp  **** 
  63:src/main.cpp  ****   GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
 3979              		.loc 9 63 0
 3980 00aa 0121     		movs	r1, #1
 3981 00ac A548     		ldr	r0, .L249
 3982 00ae FFF7FEFF 		bl	GPIO_PinRemapConfig
 3983              	.LVL430:
  64:src/main.cpp  ****   I2C1_Init();
  65:src/main.cpp  ****   SysTick_Init();
  66:src/main.cpp  ****   DEBUG_Init();
  67:src/main.cpp  ****   LED_Init();
  68:src/main.cpp  **** 
  69:src/main.cpp  ****   delay(1000);
  70:src/main.cpp  **** 
  71:src/main.cpp  ****   motorSettings SL(MOTOR_TYPE_SERVO, "servo_left", TIM4, 4);
 3984              		.loc 9 71 0
 3985 00b2 0426     		movs	r6, #4
  64:src/main.cpp  ****   I2C1_Init();
 3986              		.loc 9 64 0
 3987 00b4 FFF7FEFF 		bl	I2C1_Init
 3988              	.LVL431:
  65:src/main.cpp  ****   DEBUG_Init();
 3989              		.loc 9 65 0
 3990 00b8 FFF7FEFF 		bl	SysTick_Init
 3991              	.LVL432:
  66:src/main.cpp  ****   LED_Init();
 3992              		.loc 9 66 0
 3993 00bc FFF7FEFF 		bl	DEBUG_Init
 3994              	.LVL433:
  67:src/main.cpp  **** 
 3995              		.loc 9 67 0
 3996 00c0 FFF7FEFF 		bl	LED_Init
 3997              	.LVL434:
  69:src/main.cpp  **** 
 3998              		.loc 9 69 0
 3999 00c4 4FF47A70 		mov	r0, #1000
 4000 00c8 FFF7FEFF 		bl	delay
 4001              	.LVL435:
 4002              		.loc 9 71 0
 4003 00cc 9E4B     		ldr	r3, .L249+4
 4004 00ce 9F4A     		ldr	r2, .L249+8
 4005 00d0 0121     		movs	r1, #1
 4006 00d2 0096     		str	r6, [sp]
 4007 00d4 08A8     		add	r0, sp, #32
 4008 00d6 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4009              	.LVL436:
  72:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 4010              		.loc 9 72 0
 4011 00da 4FF40073 		mov	r3, #512
  73:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 4012              		.loc 9 73 0
 4013 00de 9C4C     		ldr	r4, .L249+12
  72:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 4014              		.loc 9 72 0
 4015 00e0 0E93     		str	r3, [sp, #56]
  74:src/main.cpp  **** 
  75:src/main.cpp  ****   motorSettings SR(MOTOR_TYPE_SERVO, "servo_right", TIM4, 3);
 4016              		.loc 9 75 0
 4017 00e2 0323     		movs	r3, #3
  76:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
  77:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
  78:src/main.cpp  **** 
  79:src/main.cpp  ****   motorSettings FR(MOTOR_TYPE_DC_MOTOR, "front_right", TIM1, 1);
 4018              		.loc 9 79 0
 4019 00e4 0127     		movs	r7, #1
  75:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 4020              		.loc 9 75 0
 4021 00e6 0093     		str	r3, [sp]
 4022 00e8 9A4A     		ldr	r2, .L249+16
 4023 00ea 974B     		ldr	r3, .L249+4
 4024 00ec 0121     		movs	r1, #1
 4025 00ee 20A8     		add	r0, sp, #128
  76:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 4026              		.loc 9 76 0
 4027 00f0 4FF48078 		mov	r8, #256
  73:src/main.cpp  **** 
 4028              		.loc 9 73 0
 4029 00f4 0F94     		str	r4, [sp, #60]
  75:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 4030              		.loc 9 75 0
 4031 00f6 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4032              	.LVL437:
 4033              		.loc 9 79 0
 4034 00fa 0097     		str	r7, [sp]
 4035 00fc 964B     		ldr	r3, .L249+20
 4036 00fe 974A     		ldr	r2, .L249+24
 4037 0100 0221     		movs	r1, #2
 4038 0102 38A8     		add	r0, sp, #224
  80:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
  81:src/main.cpp  ****               GPIO_Pin_15, GPIOC, GPIO_Pin_0, GPIOA,
  82:src/main.cpp  ****               GPIO_Pin_8, GPIOA);
 4039              		.loc 9 82 0
 4040 0104 964D     		ldr	r5, .L249+28
  76:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 4041              		.loc 9 76 0
 4042 0106 CDF89880 		str	r8, [sp, #152]
  77:src/main.cpp  **** 
 4043              		.loc 9 77 0
 4044 010a 2794     		str	r4, [sp, #156]
  79:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 4045              		.loc 9 79 0
 4046 010c FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4047              	.LVL438:
 4048              		.loc 9 82 0
 4049 0110 944A     		ldr	r2, .L249+32
 4050 0112 0397     		str	r7, [sp, #12]
 4051 0114 4FF40047 		mov	r7, #32768
 4052 0118 0695     		str	r5, [sp, #24]
 4053 011a CDF81480 		str	r8, [sp, #20]
 4054 011e 0495     		str	r5, [sp, #16]
 4055 0120 0292     		str	r2, [sp, #8]
 4056 0122 8DE88400 		stmia	sp, {r2, r7}
 4057 0126 4FF48043 		mov	r3, #16384
 4058 012a 4FF40051 		mov	r1, #8192
 4059 012e 38A8     		add	r0, sp, #224
 4060 0130 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 4061              	.LVL439:
  83:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 4062              		.loc 9 83 0
 4063 0134 1823     		movs	r3, #24
 4064 0136 ADF82831 		strh	r3, [sp, #296]	@ movhi
  84:src/main.cpp  **** 
  85:src/main.cpp  ****   motorSettings FL(MOTOR_TYPE_DC_MOTOR, "front_left", TIM3, 4);
 4065              		.loc 9 85 0
 4066 013a 8B4A     		ldr	r2, .L249+36
 4067 013c 8B4B     		ldr	r3, .L249+40
 4068 013e 0221     		movs	r1, #2
 4069 0140 0096     		str	r6, [sp]
 4070 0142 50A8     		add	r0, sp, #320
 4071 0144 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4072              	.LVL440:
  86:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
  87:src/main.cpp  ****               GPIO_Pin_4, GPIOA,GPIO_Pin_10,GPIOB,
  88:src/main.cpp  ****               GPIO_Pin_1, GPIOB);
 4073              		.loc 9 88 0
 4074 0148 4FF00208 		mov	r8, #2
 4075 014c 4FF01009 		mov	r9, #16
 4076 0150 4FF48063 		mov	r3, #1024
 4077 0154 8DE82002 		stmia	sp, {r5, r9}
 4078 0158 0393     		str	r3, [sp, #12]
 4079 015a 0295     		str	r5, [sp, #8]
 4080 015c 2023     		movs	r3, #32
 4081 015e 2246     		mov	r2, r4
 4082 0160 3146     		mov	r1, r6
 4083 0162 50A8     		add	r0, sp, #320
 4084 0164 0694     		str	r4, [sp, #24]
 4085 0166 CDF81480 		str	r8, [sp, #20]
 4086 016a 0494     		str	r4, [sp, #16]
 4087 016c FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 4088              	.LVL441:
  89:src/main.cpp  ****   FL.encoderAddr = (0x10);
  90:src/main.cpp  **** 
  91:src/main.cpp  ****   motorSettings RL(MOTOR_TYPE_DC_MOTOR, "rear_left", TIM2, 4);
 4089              		.loc 9 91 0
 4090 0170 4FF08043 		mov	r3, #1073741824
 4091 0174 7E4A     		ldr	r2, .L249+44
 4092 0176 4146     		mov	r1, r8
 4093 0178 0096     		str	r6, [sp]
 4094 017a 68A8     		add	r0, sp, #416
  89:src/main.cpp  ****   FL.encoderAddr = (0x10);
 4095              		.loc 9 89 0
 4096 017c ADF88891 		strh	r9, [sp, #392]	@ movhi
 4097              		.loc 9 91 0
 4098 0180 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4099              	.LVL442:
  92:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
  93:src/main.cpp  ****     GPIO_Pin_13, GPIOB, GPIO_Pin_14, GPIOB,
  94:src/main.cpp  ****     GPIO_Pin_3, GPIOA);
 4100              		.loc 9 94 0
 4101 0184 4FF48043 		mov	r3, #16384
 4102 0188 4FF00809 		mov	r9, #8
 4103 018c 0393     		str	r3, [sp, #12]
 4104 018e 4FF40053 		mov	r3, #8192
 4105 0192 0695     		str	r5, [sp, #24]
 4106 0194 0193     		str	r3, [sp, #4]
 4107 0196 2246     		mov	r2, r4
 4108 0198 4FF48053 		mov	r3, #4096
 4109 019c 4FF40061 		mov	r1, #2048
 4110 01a0 68A8     		add	r0, sp, #416
 4111 01a2 CDF81490 		str	r9, [sp, #20]
 4112 01a6 0494     		str	r4, [sp, #16]
 4113 01a8 0294     		str	r4, [sp, #8]
 4114 01aa 0094     		str	r4, [sp]
 4115 01ac FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 4116              	.LVL443:
  95:src/main.cpp  **** 
  96:src/main.cpp  ****   motorSettings RR(MOTOR_TYPE_DC_MOTOR, "rear_right", TIM1, 4);
 4117              		.loc 9 96 0
 4118 01b0 694B     		ldr	r3, .L249+20
 4119 01b2 704A     		ldr	r2, .L249+48
 4120 01b4 4146     		mov	r1, r8
 4121 01b6 0096     		str	r6, [sp]
 4122 01b8 80A8     		add	r0, sp, #512
 4123 01ba FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4124              	.LVL444:
  97:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
  98:src/main.cpp  ****               GPIO_Pin_15, GPIOA, GPIO_Pin_3, GPIOB,
  99:src/main.cpp  ****               GPIO_Pin_11, GPIOA);
 4125              		.loc 9 99 0
 4126 01be 4FF40063 		mov	r3, #2048
 4127 01c2 0695     		str	r5, [sp, #24]
 4128 01c4 0593     		str	r3, [sp, #20]
 4129 01c6 0295     		str	r5, [sp, #8]
 4130 01c8 4FF48053 		mov	r3, #4096
 4131 01cc 8DE8A000 		stmia	sp, {r5, r7}
 4132 01d0 2246     		mov	r2, r4
 4133 01d2 3946     		mov	r1, r7
 4134 01d4 80A8     		add	r0, sp, #512
 4135 01d6 0494     		str	r4, [sp, #16]
 4136 01d8 CDF80C90 		str	r9, [sp, #12]
 4137 01dc FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 4138              	.LVL445:
 100:src/main.cpp  **** 
 101:src/main.cpp  ****   motor *servo_left = motor::createMotor(&SL);
 4139              		.loc 9 101 0
 4140 01e0 08A8     		add	r0, sp, #32
 4141 01e2 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4142              	.LVL446:
 102:src/main.cpp  ****   if(!servo_left->motorInit()){
 4143              		.loc 9 102 0
 4144 01e6 0368     		ldr	r3, [r0]
 101:src/main.cpp  ****   if(!servo_left->motorInit()){
 4145              		.loc 9 101 0
 4146 01e8 0546     		mov	r5, r0
 4147              	.LVL447:
 4148              		.loc 9 102 0
 4149 01ea DB68     		ldr	r3, [r3, #12]
 4150 01ec 9847     		blx	r3
 4151              	.LVL448:
 4152 01ee 68B9     		cbnz	r0, .L237
 103:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 4153              		.loc 9 103 0
 4154 01f0 2B68     		ldr	r3, [r5]
 4155 01f2 2846     		mov	r0, r5
 4156 01f4 1B69     		ldr	r3, [r3, #16]
 4157 01f6 9847     		blx	r3
 4158              	.LVL449:
 4159 01f8 5F49     		ldr	r1, .L249+52
 4160 01fa 0246     		mov	r2, r0
 4161 01fc 5F48     		ldr	r0, .L249+56
 4162 01fe FFF7FEFF 		bl	sprintf
 4163              	.LVL450:
 104:src/main.cpp  ****     nh.logerror(str);
 4164              		.loc 9 104 0
 4165 0202 5E49     		ldr	r1, .L249+56
 4166 0204 A1F5B460 		sub	r0, r1, #1440
 4167 0208 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4168              	.LVL451:
 4169              	.L237:
 105:src/main.cpp  ****   }
 106:src/main.cpp  **** 
 107:src/main.cpp  ****   motor *servo_right = motor::createMotor(&SR);
 4170              		.loc 9 107 0
 4171 020c 20A8     		add	r0, sp, #128
 4172 020e FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4173              	.LVL452:
 108:src/main.cpp  ****   if(!servo_right->motorInit()){
 4174              		.loc 9 108 0
 4175 0212 0368     		ldr	r3, [r0]
 107:src/main.cpp  ****   if(!servo_right->motorInit()){
 4176              		.loc 9 107 0
 4177 0214 0446     		mov	r4, r0
 4178              	.LVL453:
 4179              		.loc 9 108 0
 4180 0216 DB68     		ldr	r3, [r3, #12]
 4181 0218 9847     		blx	r3
 4182              	.LVL454:
 4183 021a 68B9     		cbnz	r0, .L238
 109:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 4184              		.loc 9 109 0
 4185 021c 2368     		ldr	r3, [r4]
 4186 021e 2046     		mov	r0, r4
 4187 0220 1B69     		ldr	r3, [r3, #16]
 4188 0222 9847     		blx	r3
 4189              	.LVL455:
 4190 0224 5449     		ldr	r1, .L249+52
 4191 0226 0246     		mov	r2, r0
 4192 0228 5448     		ldr	r0, .L249+56
 4193 022a FFF7FEFF 		bl	sprintf
 4194              	.LVL456:
 110:src/main.cpp  ****     nh.logerror(str);
 4195              		.loc 9 110 0
 4196 022e 5349     		ldr	r1, .L249+56
 4197 0230 A1F5B460 		sub	r0, r1, #1440
 4198 0234 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4199              	.LVL457:
 4200              	.L238:
 111:src/main.cpp  ****   }
 112:src/main.cpp  **** 
 113:src/main.cpp  ****   motor *front_left = motor::createMotor(&FL);
 4201              		.loc 9 113 0
 4202 0238 50A8     		add	r0, sp, #320
 4203 023a FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4204              	.LVL458:
 114:src/main.cpp  ****   if(!front_left->motorInit()){
 4205              		.loc 9 114 0
 4206 023e 0368     		ldr	r3, [r0]
 113:src/main.cpp  ****   if(!front_left->motorInit()){
 4207              		.loc 9 113 0
 4208 0240 0746     		mov	r7, r0
 4209              	.LVL459:
 4210              		.loc 9 114 0
 4211 0242 DB68     		ldr	r3, [r3, #12]
 4212 0244 9847     		blx	r3
 4213              	.LVL460:
 4214 0246 68B9     		cbnz	r0, .L239
 115:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 4215              		.loc 9 115 0
 4216 0248 3B68     		ldr	r3, [r7]
 4217 024a 3846     		mov	r0, r7
 4218 024c 1B69     		ldr	r3, [r3, #16]
 4219 024e 9847     		blx	r3
 4220              	.LVL461:
 4221 0250 4949     		ldr	r1, .L249+52
 4222 0252 0246     		mov	r2, r0
 4223 0254 4948     		ldr	r0, .L249+56
 4224 0256 FFF7FEFF 		bl	sprintf
 4225              	.LVL462:
 116:src/main.cpp  ****     nh.logerror(str);
 4226              		.loc 9 116 0
 4227 025a 4849     		ldr	r1, .L249+56
 4228 025c A1F5B460 		sub	r0, r1, #1440
 4229 0260 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4230              	.LVL463:
 4231              	.L239:
 117:src/main.cpp  ****   }
 118:src/main.cpp  **** 
 119:src/main.cpp  ****   motor *front_right = motor::createMotor(&FR);
 4232              		.loc 9 119 0
 4233 0264 38A8     		add	r0, sp, #224
 4234 0266 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4235              	.LVL464:
 120:src/main.cpp  ****   if(!front_right->motorInit()){
 4236              		.loc 9 120 0
 4237 026a 0368     		ldr	r3, [r0]
 119:src/main.cpp  ****   if(!front_right->motorInit()){
 4238              		.loc 9 119 0
 4239 026c 0646     		mov	r6, r0
 4240              	.LVL465:
 4241              		.loc 9 120 0
 4242 026e DB68     		ldr	r3, [r3, #12]
 4243 0270 9847     		blx	r3
 4244              	.LVL466:
 4245 0272 68B9     		cbnz	r0, .L240
 121:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 4246              		.loc 9 121 0
 4247 0274 3368     		ldr	r3, [r6]
 4248 0276 3046     		mov	r0, r6
 4249 0278 1B69     		ldr	r3, [r3, #16]
 4250 027a 9847     		blx	r3
 4251              	.LVL467:
 4252 027c 3E49     		ldr	r1, .L249+52
 4253 027e 0246     		mov	r2, r0
 4254 0280 3E48     		ldr	r0, .L249+56
 4255 0282 FFF7FEFF 		bl	sprintf
 4256              	.LVL468:
 122:src/main.cpp  ****     nh.logerror(str);
 4257              		.loc 9 122 0
 4258 0286 3D49     		ldr	r1, .L249+56
 4259 0288 A1F5B460 		sub	r0, r1, #1440
 4260 028c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4261              	.LVL469:
 4262              	.L240:
 123:src/main.cpp  ****   }
 124:src/main.cpp  **** 
 125:src/main.cpp  ****   motor *rear_left = motor::createMotor(&RL);
 4263              		.loc 9 125 0
 4264 0290 68A8     		add	r0, sp, #416
 4265 0292 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4266              	.LVL470:
 126:src/main.cpp  ****   if(!rear_left->motorInit()){
 4267              		.loc 9 126 0
 4268 0296 0368     		ldr	r3, [r0]
 125:src/main.cpp  ****   if(!rear_left->motorInit()){
 4269              		.loc 9 125 0
 4270 0298 8046     		mov	r8, r0
 4271              	.LVL471:
 4272              		.loc 9 126 0
 4273 029a DB68     		ldr	r3, [r3, #12]
 4274 029c 9847     		blx	r3
 4275              	.LVL472:
 4276 029e 70B9     		cbnz	r0, .L241
 127:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 4277              		.loc 9 127 0
 4278 02a0 D8F80030 		ldr	r3, [r8]
 4279 02a4 4046     		mov	r0, r8
 4280 02a6 1B69     		ldr	r3, [r3, #16]
 4281 02a8 9847     		blx	r3
 4282              	.LVL473:
 4283 02aa 3349     		ldr	r1, .L249+52
 4284 02ac 0246     		mov	r2, r0
 4285 02ae 3348     		ldr	r0, .L249+56
 4286 02b0 FFF7FEFF 		bl	sprintf
 4287              	.LVL474:
 128:src/main.cpp  ****     nh.logerror(str);
 4288              		.loc 9 128 0
 4289 02b4 3149     		ldr	r1, .L249+56
 4290 02b6 A1F5B460 		sub	r0, r1, #1440
 4291 02ba FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4292              	.LVL475:
 4293              	.L241:
 129:src/main.cpp  ****   }
 130:src/main.cpp  **** 
 131:src/main.cpp  ****   motor *rear_right = motor::createMotor(&RR);
 4294              		.loc 9 131 0
 4295 02be 80A8     		add	r0, sp, #512
 4296 02c0 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4297              	.LVL476:
 132:src/main.cpp  ****   if(!rear_right->motorInit()){
 4298              		.loc 9 132 0
 4299 02c4 0368     		ldr	r3, [r0]
 131:src/main.cpp  ****   if(!rear_right->motorInit()){
 4300              		.loc 9 131 0
 4301 02c6 8046     		mov	r8, r0
 4302              	.LVL477:
 4303              		.loc 9 132 0
 4304 02c8 DB68     		ldr	r3, [r3, #12]
 4305 02ca 9847     		blx	r3
 4306              	.LVL478:
 4307 02cc 70B9     		cbnz	r0, .L242
 133:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 4308              		.loc 9 133 0
 4309 02ce D8F80030 		ldr	r3, [r8]
 4310 02d2 4046     		mov	r0, r8
 4311 02d4 1B69     		ldr	r3, [r3, #16]
 4312 02d6 9847     		blx	r3
 4313              	.LVL479:
 4314 02d8 2749     		ldr	r1, .L249+52
 4315 02da 0246     		mov	r2, r0
 4316 02dc 2748     		ldr	r0, .L249+56
 4317 02de FFF7FEFF 		bl	sprintf
 4318              	.LVL480:
 134:src/main.cpp  ****     nh.logerror(str);
 4319              		.loc 9 134 0
 4320 02e2 2649     		ldr	r1, .L249+56
 4321 02e4 A1F5B460 		sub	r0, r1, #1440
 4322 02e8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4323              	.LVL481:
 4324              	.L242:
 135:src/main.cpp  ****   }
 136:src/main.cpp  **** 
 137:src/main.cpp  ****   servo_left->setReference(90);
 4325              		.loc 9 137 0
 4326 02ec 2B68     		ldr	r3, [r5]
 4327 02ee 2449     		ldr	r1, .L249+60
 4328 02f0 5B69     		ldr	r3, [r3, #20]
 4329 02f2 2846     		mov	r0, r5
 4330 02f4 9847     		blx	r3
 4331              	.LVL482:
 138:src/main.cpp  ****   servo_right->setReference(100);
 4332              		.loc 9 138 0
 4333 02f6 2368     		ldr	r3, [r4]
 4334 02f8 2249     		ldr	r1, .L249+64
 4335 02fa 5B69     		ldr	r3, [r3, #20]
 4336 02fc 2046     		mov	r0, r4
 4337 02fe 9847     		blx	r3
 4338              	.LVL483:
 139:src/main.cpp  **** 
 140:src/main.cpp  ****   servo_left->update(1);
 4339              		.loc 9 140 0
 4340 0300 2B68     		ldr	r3, [r5]
 4341 0302 4FF07E51 		mov	r1, #1065353216
 4342 0306 DB69     		ldr	r3, [r3, #28]
 4343 0308 2846     		mov	r0, r5
 4344 030a 9847     		blx	r3
 4345              	.LVL484:
 141:src/main.cpp  ****   servo_right->update(1);
 4346              		.loc 9 141 0
 4347 030c 2368     		ldr	r3, [r4]
 4348 030e 4FF07E51 		mov	r1, #1065353216
 4349 0312 DB69     		ldr	r3, [r3, #28]
 4350 0314 2046     		mov	r0, r4
 4351 0316 9847     		blx	r3
 4352              	.LVL485:
 142:src/main.cpp  ****   //rear_right->update(1);
 143:src/main.cpp  ****   //rear_left->update(1);
 144:src/main.cpp  ****   front_left->update(1);
 4353              		.loc 9 144 0
 4354 0318 3B68     		ldr	r3, [r7]
 4355 031a 4FF07E51 		mov	r1, #1065353216
 4356 031e DB69     		ldr	r3, [r3, #28]
 4357 0320 3846     		mov	r0, r7
 4358 0322 9847     		blx	r3
 4359              	.LVL486:
 145:src/main.cpp  ****   front_right->update(1);
 4360              		.loc 9 145 0
 4361 0324 3368     		ldr	r3, [r6]
 4362 0326 4FF07E51 		mov	r1, #1065353216
 4363 032a DB69     		ldr	r3, [r3, #28]
 4364 032c 3046     		mov	r0, r6
 4365 032e 9847     		blx	r3
 4366              	.LVL487:
 4367              	.L243:
 146:src/main.cpp  **** 
 147:src/main.cpp  ****  
 148:src/main.cpp  ****   /*int16_t speed = 0;*/
 149:src/main.cpp  **** 
 150:src/main.cpp  ****   
 151:src/main.cpp  ****   //led_set(200);
 152:src/main.cpp  **** 
 153:src/main.cpp  **** 
 154:src/main.cpp  **** 
 155:src/main.cpp  ****   while (1){
 156:src/main.cpp  ****     debug_toggle();
 4368              		.loc 9 156 0
 4369 0330 FFF7FEFF 		bl	debug_toggle
 4370              	.LVL488:
 157:src/main.cpp  **** 
 158:src/main.cpp  **** 
 159:src/main.cpp  **** 
 160:src/main.cpp  ****    /* sprintf(hello, "Speed is:");
 161:src/main.cpp  ****     str_msg.data = hello;
 162:src/main.cpp  ****     chatter.publish( &str_msg );*/
 163:src/main.cpp  **** 
 164:src/main.cpp  ****     nh.spinOnce();
 4371              		.loc 9 164 0
 4372 0334 1448     		ldr	r0, .L249+68
 4373 0336 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 4374              	.LVL489:
 165:src/main.cpp  **** 
 166:src/main.cpp  **** 
 167:src/main.cpp  ****     delay(100);
 4375              		.loc 9 167 0
 4376 033a 6420     		movs	r0, #100
 4377 033c FFF7FEFF 		bl	delay
 4378              	.LVL490:
 4379 0340 F6E7     		b	.L243
 4380              	.L250:
 4381 0342 00BF     		.align	2
 4382              	.L249:
 4383 0344 00023000 		.word	3146240
 4384 0348 00080040 		.word	1073743872
 4385 034c C3010000 		.word	.LC17
 4386 0350 000C0140 		.word	1073810432
 4387 0354 CE010000 		.word	.LC18
 4388 0358 002C0140 		.word	1073818624
 4389 035c DA010000 		.word	.LC19
 4390 0360 00080140 		.word	1073809408
 4391 0364 00100140 		.word	1073811456
 4392 0368 E6010000 		.word	.LC20
 4393 036c 00040040 		.word	1073742848
 4394 0370 F1010000 		.word	.LC21
 4395 0374 FB010000 		.word	.LC22
 4396 0378 06020000 		.word	.LC23
 4397 037c A8090000 		.word	.LANCHOR1+2472
 4398 0380 0000B442 		.word	1119092736
 4399 0384 0000C842 		.word	1120403456
 4400 0388 08040000 		.word	.LANCHOR1+1032
 4401              		.cfi_endproc
 4402              	.LFE179:
 4403              		.fnend
 4405              		.text
 4406              		.align	1
 4407              		.global	_Z13assert_failedPhm
 4408              		.thumb
 4409              		.thumb_func
 4411              	_Z13assert_failedPhm:
 4412              		.fnstart
 4413              	.LFB180:
 168:src/main.cpp  ****   }
 169:src/main.cpp  ****   return 0;
 170:src/main.cpp  **** }
 171:src/main.cpp  **** 
 172:src/main.cpp  **** void assert_failed(uint8_t* file, uint32_t line){
 4414              		.loc 9 172 0
 4415              		.cfi_startproc
 4416              		@ args = 0, pretend = 0, frame = 152
 4417              		@ frame_needed = 0, uses_anonymous_args = 0
 4418              	.LVL491:
 4419 0054 00B5     		push	{lr}
 4420              		.save {lr}
 4421              	.LCFI46:
 4422              		.cfi_def_cfa_offset 4
 4423              		.cfi_offset 14, -4
 4424              		.pad #156
 4425 0056 A7B0     		sub	sp, sp, #156
 4426              	.LCFI47:
 4427              		.cfi_def_cfa_offset 160
 173:src/main.cpp  ****   /* User can add his own implementation to report the file name and line number,
 174:src/main.cpp  ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 175:src/main.cpp  ****   char str[150];
 176:src/main.cpp  **** 
 177:src/main.cpp  ****   sprintf(str, "Wrong parameters value: file %s on line %d\r\n", file, line);
 4428              		.loc 9 177 0
 4429 0058 0B46     		mov	r3, r1
 4430 005a 0246     		mov	r2, r0
 4431 005c 0849     		ldr	r1, .L253
 4432              	.LVL492:
 4433 005e 6846     		mov	r0, sp
 4434              	.LVL493:
 4435 0060 FFF7FEFF 		bl	sprintf
 4436              	.LVL494:
 178:src/main.cpp  ****   nh.logerror(str);
 4437              		.loc 9 178 0
 4438 0064 6946     		mov	r1, sp
 4439 0066 0748     		ldr	r0, .L253+4
 4440 0068 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4441              	.LVL495:
 4442              	.L252:
 179:src/main.cpp  ****   while (1){
 180:src/main.cpp  ****     debug_toggle();
 4443              		.loc 9 180 0
 4444 006c FFF7FEFF 		bl	debug_toggle
 4445              	.LVL496:
 181:src/main.cpp  ****     delay(100);
 4446              		.loc 9 181 0
 4447 0070 6420     		movs	r0, #100
 4448 0072 FFF7FEFF 		bl	delay
 4449              	.LVL497:
 182:src/main.cpp  ****     nh.spinOnce();
 4450              		.loc 9 182 0
 4451 0076 0348     		ldr	r0, .L253+4
 4452 0078 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 4453              	.LVL498:
 4454 007c F6E7     		b	.L252
 4455              	.L254:
 4456 007e 00BF     		.align	2
 4457              	.L253:
 4458 0080 30020000 		.word	.LC24
 4459 0084 08040000 		.word	.LANCHOR1+1032
 4460              		.cfi_endproc
 4461              	.LFE180:
 4462              		.fnend
 4464              		.section	.text.startup
 4465              		.align	1
 4466              		.thumb
 4467              		.thumb_func
 4469              	_GLOBAL__sub_I_USART_FIFO:
 4470              		.fnstart
 4471              	.LFB218:
 183:src/main.cpp  ****   }
 184:src/main.cpp  **** }
 4472              		.loc 9 184 0
 4473              		.cfi_startproc
 4474              		@ args = 0, pretend = 0, frame = 0
 4475              		@ frame_needed = 0, uses_anonymous_args = 0
 4476              	.LVL499:
 4477              	.LBB336:
 4478              	.LBB337:
 4479              	.LBB338:
 4480              	.LBB339:
 119:./lib/ros_lib/ros/node_handle.h **** 
 4481              		.loc 11 119 0
 4482 038c 444B     		ldr	r3, .L264
 4483 038e 454A     		ldr	r2, .L264+4
 4484              	.LBE339:
 4485              	.LBE338:
 4486              	.LBE337:
 4487              	.LBE336:
 4488              		.loc 9 184 0
 4489 0390 30B5     		push	{r4, r5, lr}
 4490              	.LCFI48:
 4491              		.cfi_def_cfa_offset 12
 4492              		.cfi_offset 4, -12
 4493              		.cfi_offset 5, -8
 4494              		.cfi_offset 14, -4
 4495              	.LBB425:
 4496              	.LBB424:
 4497              	.LBB357:
 4498              	.LBB356:
 119:./lib/ros_lib/ros/node_handle.h **** 
 4499              		.loc 11 119 0
 4500 0392 C3F80824 		str	r2, [r3, #1032]
 4501              	.LVL500:
 4502              	.LBB340:
 4503              	.LBB341:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
 4504              		.loc 13 60 0
 4505 0396 444A     		ldr	r2, .L264+8
 4506              	.LBE341:
 4507              	.LBE340:
 4508              	.LBB344:
 4509              	.LBB345:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 4510              		.loc 4 70 0
 4511 0398 4449     		ldr	r1, .L264+12
 4512              	.LBE345:
 4513              	.LBE344:
 4514              	.LBB348:
 4515              	.LBB342:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
 4516              		.loc 13 60 0
 4517 039a C3F80C24 		str	r2, [r3, #1036]
  61:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
 4518              		.loc 13 61 0
 4519 039e 4FF4E132 		mov	r2, #115200
 4520 03a2 C3F81024 		str	r2, [r3, #1040]
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
 4521              		.loc 13 62 0
 4522 03a6 0022     		movs	r2, #0
 4523 03a8 5A60     		str	r2, [r3, #4]
 4524              	.LBE342:
 4525              	.LBE348:
 4526              	.LBB349:
 4527              	.LBB346:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 4528              		.loc 4 70 0
 4529 03aa C3F81019 		str	r1, [r3, #2320]
 4530              	.LBE346:
 4531              	.LBE349:
 4532              	.LBB350:
 4533              	.LBB343:
  63:./lib/ros_lib/ArduinoHardware.h ****     }
 4534              		.loc 13 63 0
 4535 03ae 1A60     		str	r2, [r3]
 4536              	.LVL501:
 4537              	.LBE343:
 4538              	.LBE350:
 119:./lib/ros_lib/ros/node_handle.h **** 
 4539              		.loc 11 119 0
 4540 03b0 83F8FC28 		strb	r2, [r3, #2300]
 4541              	.LVL502:
 4542              	.LBB351:
 4543              	.LBB347:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 4544              		.loc 4 70 0
 4545 03b4 83F81429 		strb	r2, [r3, #2324]
 4546 03b8 C3F81C29 		str	r2, [r3, #2332]
 4547 03bc 83F82029 		strb	r2, [r3, #2336]
 4548 03c0 C3F82829 		str	r2, [r3, #2344]
 4549 03c4 83F82C29 		strb	r2, [r3, #2348]
 4550 03c8 C3F83429 		str	r2, [r3, #2356]
 4551              	.LVL503:
 4552 03cc 03F61C01 		addw	r1, r3, #2076
 4553 03d0 03F50863 		add	r3, r3, #2176
 4554              	.LVL504:
 4555              	.L256:
 4556              	.LBE347:
 4557              	.LBE351:
 4558              	.LBB352:
 122:./lib/ros_lib/ros/node_handle.h **** 
 4559              		.loc 11 122 0
 4560 03d4 41F8042F 		str	r2, [r1, #4]!
 121:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 4561              		.loc 11 121 0
 4562 03d8 8B42     		cmp	r3, r1
 4563 03da FBD1     		bne	.L256
 4564 03dc 344A     		ldr	r2, .L264+16
 4565              	.LBE352:
 4566              	.LBB353:
 125:./lib/ros_lib/ros/node_handle.h **** 
 4567              		.loc 11 125 0
 4568 03de 0021     		movs	r1, #0
 4569              	.L257:
 4570 03e0 43F8041F 		str	r1, [r3, #4]!
 4571              	.LVL505:
 124:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 4572              		.loc 11 124 0
 4573 03e4 9A42     		cmp	r2, r3
 4574 03e6 FBD1     		bne	.L257
 4575 03e8 0023     		movs	r3, #0
 4576              	.LBE353:
 4577              	.LBB354:
 128:./lib/ros_lib/ros/node_handle.h **** 
 4578              		.loc 11 128 0
 4579 03ea 1946     		mov	r1, r3
 4580 03ec 3148     		ldr	r0, .L264+20
 4581              	.L258:
 4582              	.LVL506:
 4583 03ee C218     		adds	r2, r0, r3
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 4584              		.loc 11 127 0
 4585 03f0 0133     		adds	r3, r3, #1
 4586              	.LVL507:
 4587 03f2 B3F5007F 		cmp	r3, #512
 128:./lib/ros_lib/ros/node_handle.h **** 
 4588              		.loc 11 128 0
 4589 03f6 1176     		strb	r1, [r2, #24]
 4590 03f8 2E4D     		ldr	r5, .L264+20
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 4591              		.loc 11 127 0
 4592 03fa F8D1     		bne	.L258
 4593 03fc 0021     		movs	r1, #0
 4594              	.LBE354:
 4595              	.LBB355:
 131:./lib/ros_lib/ros/node_handle.h **** 
 4596              		.loc 11 131 0
 4597 03fe 0C46     		mov	r4, r1
 4598              	.LVL508:
 4599              	.L259:
 4600 0400 6818     		adds	r0, r5, r1
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 4601              		.loc 11 130 0
 4602 0402 0131     		adds	r1, r1, #1
 4603              	.LVL509:
 4604 0404 B1F5007F 		cmp	r1, #512
 131:./lib/ros_lib/ros/node_handle.h **** 
 4605              		.loc 11 131 0
 4606 0408 254B     		ldr	r3, .L264
 4607 040a 4FF00002 		mov	r2, #0
 4608 040e 80F81842 		strb	r4, [r0, #536]
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 4609              		.loc 11 130 0
 4610 0412 F5D1     		bne	.L259
 4611              	.LVL510:
 4612              	.LBE355:
 4613              	.LBE356:
 4614              	.LBE357:
 4615              	.LBB358:
 4616              	.LBB359:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4617              		.loc 10 67 0
 4618 0414 2849     		ldr	r1, .L264+24
  69:./lib/ros_lib/ros/subscriber.h ****       };
 4619              		.loc 10 69 0
 4620 0416 294C     		ldr	r4, .L264+28
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4621              		.loc 10 67 0
 4622 0418 C3F83819 		str	r1, [r3, #2360]
 4623              	.LVL511:
 4624              	.LBB360:
 4625              	.LBB361:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 4626              		.loc 8 33 0
 4627 041c 2849     		ldr	r1, .L264+32
 4628              	.LBE361:
 4629              	.LBE360:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 4630              		.loc 10 69 0
 4631 041e C3F84049 		str	r4, [r3, #2368]
 4632              	.LBB377:
 4633              	.LBB372:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 4634              		.loc 8 33 0
 4635 0422 C3F84419 		str	r1, [r3, #2372]
 4636              	.LVL512:
 4637              	.LBB362:
 4638              	.LBB363:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 4639              		.loc 7 23 0
 4640 0426 2749     		ldr	r1, .L264+36
 4641              	.LBE363:
 4642              	.LBE362:
 4643              	.LBE372:
 4644              	.LBE377:
 4645              	.LBE359:
 4646              	.LBE358:
 4647              	.LBB387:
 4648              	.LBB388:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4649              		.loc 10 67 0
 4650 0428 274C     		ldr	r4, .L264+40
 4651              	.LBE388:
 4652              	.LBE387:
 4653              	.LBB400:
 4654              	.LBB382:
 4655              	.LBB378:
 4656              	.LBB373:
 4657              	.LBB369:
 4658              	.LBB366:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 4659              		.loc 7 23 0
 4660 042a C3F84819 		str	r1, [r3, #2376]
 4661              	.LBE366:
 4662              	.LBE369:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 4663              		.loc 8 33 0
 4664 042e 0021     		movs	r1, #0
 4665 0430 C3F85C19 		str	r1, [r3, #2396]	@ float
 4666 0434 C3F86019 		str	r1, [r3, #2400]	@ float
 4667 0438 C3F86419 		str	r1, [r3, #2404]	@ float
 4668 043c C3F86819 		str	r1, [r3, #2408]	@ float
 4669              	.LBE373:
 4670              	.LBE378:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4671              		.loc 10 67 0
 4672 0440 2249     		ldr	r1, .L264+44
 4673              	.LBE382:
 4674              	.LBE400:
 4675              	.LBB401:
 4676              	.LBB395:
 4677 0442 C3F87849 		str	r4, [r3, #2424]
 4678              	.LBE395:
 4679              	.LBE401:
 4680              	.LBB402:
 4681              	.LBB383:
 4682 0446 C3F87019 		str	r1, [r3, #2416]
 4683 044a 0121     		movs	r1, #1
 4684 044c C3F87419 		str	r1, [r3, #2420]
 4685              	.LBE383:
 4686              	.LBE402:
 4687              	.LBB403:
 4688              	.LBB396:
 4689 0450 C3F89019 		str	r1, [r3, #2448]
  69:./lib/ros_lib/ros/subscriber.h ****       };
 4690              		.loc 10 69 0
 4691 0454 1E49     		ldr	r1, .L264+48
 4692              	.LBB389:
 4693              	.LBB390:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 4694              		.loc 6 18 0
 4695 0456 1F4C     		ldr	r4, .L264+52
 4696              	.LBE390:
 4697              	.LBE389:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 4698              		.loc 10 69 0
 4699 0458 C3F88019 		str	r1, [r3, #2432]
 4700              	.LBE396:
 4701              	.LBE403:
 4702              	.LBB404:
 4703              	.LBB405:
  18:./lib/ros_lib/std_msgs/String.h ****     {
 4704              		.loc 5 18 0
 4705 045c 1E49     		ldr	r1, .L264+56
 4706              	.LBE405:
 4707              	.LBE404:
 4708              	.LBB408:
 4709              	.LBB384:
 4710              	.LBB379:
 4711              	.LBB374:
 4712              	.LBB370:
 4713              	.LBB367:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 4714              		.loc 7 23 0
 4715 045e 1F48     		ldr	r0, .L264+60
 4716              	.LBE367:
 4717              	.LBE370:
 4718              	.LBE374:
 4719              	.LBE379:
 4720              	.LBE384:
 4721              	.LBE408:
 4722              	.LBB409:
 4723              	.LBB406:
  18:./lib/ros_lib/std_msgs/String.h ****     {
 4724              		.loc 5 18 0
 4725 0460 C3F8401A 		str	r1, [r3, #2624]
 4726              	.LBE406:
 4727              	.LBE409:
 4728              	.LBB410:
 4729              	.LBB411:
 4730              		.file 16 "./lib/ros_lib/ros/publisher.h"
   1:./lib/ros_lib/ros/publisher.h **** /* 
   2:./lib/ros_lib/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/publisher.h ****  *
   4:./lib/ros_lib/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/publisher.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/publisher.h ****  *
   7:./lib/ros_lib/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/publisher.h ****  * are met:
  10:./lib/ros_lib/ros/publisher.h ****  *
  11:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/publisher.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/publisher.h ****  *
  21:./lib/ros_lib/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/publisher.h ****  */
  34:./lib/ros_lib/ros/publisher.h **** 
  35:./lib/ros_lib/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:./lib/ros_lib/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:./lib/ros_lib/ros/publisher.h **** 
  38:./lib/ros_lib/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/publisher.h **** #include "node_handle.h"
  40:./lib/ros_lib/ros/publisher.h **** 
  41:./lib/ros_lib/ros/publisher.h **** namespace ros {
  42:./lib/ros_lib/ros/publisher.h **** 
  43:./lib/ros_lib/ros/publisher.h ****   /* Generic Publisher */
  44:./lib/ros_lib/ros/publisher.h ****   class Publisher
  45:./lib/ros_lib/ros/publisher.h ****   {
  46:./lib/ros_lib/ros/publisher.h ****     public:
  47:./lib/ros_lib/ros/publisher.h ****       Publisher( const char * topic_name, Msg * msg, int endpoint=rosserial_msgs::TopicInfo::ID_PUB
  48:./lib/ros_lib/ros/publisher.h ****         topic_(topic_name), 
  49:./lib/ros_lib/ros/publisher.h ****         msg_(msg),
  50:./lib/ros_lib/ros/publisher.h ****         endpoint_(endpoint) {};
 4731              		.loc 16 50 0
 4732 0464 1E49     		ldr	r1, .L264+64
 4733              	.LBE411:
 4734              	.LBE410:
 4735              	.LBB415:
 4736              	.LBB397:
 4737              	.LBB393:
 4738              	.LBB391:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 4739              		.loc 6 18 0
 4740 0466 C3F88449 		str	r4, [r3, #2436]
 4741              	.LBE391:
 4742              	.LBE393:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4743              		.loc 10 67 0
 4744 046a 1E4C     		ldr	r4, .L264+68
 4745              	.LBE397:
 4746              	.LBE415:
 4747              	.LBB416:
 4748              	.LBB412:
 4749              		.loc 16 50 0
 4750 046c C3F89419 		str	r1, [r3, #2452]
 4751              	.LBE412:
 4752              	.LBE416:
 4753              	.LBB417:
 4754              	.LBB385:
 4755              	.LBB380:
 4756              	.LBB375:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 4757              		.loc 8 33 0
 4758 0470 83F86C29 		strb	r2, [r3, #2412]
 4759              	.LBE375:
 4760              	.LBE380:
 4761              	.LBE385:
 4762              	.LBE417:
 4763              	.LBB418:
 4764              	.LBB413:
 4765              		.loc 16 50 0
 4766 0474 03F52461 		add	r1, r3, #2624
 4767              	.LBE413:
 4768              	.LBE418:
 4769              	.LBB419:
 4770              	.LBB398:
 4771              	.LBB394:
 4772              	.LBB392:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 4773              		.loc 6 18 0
 4774 0478 83F88829 		strb	r2, [r3, #2440]
 4775              	.LBE392:
 4776              	.LBE394:
 4777              	.LBE398:
 4778              	.LBE419:
 4779              	.LBB420:
 4780              	.LBB386:
 4781              	.LBB381:
 4782              	.LBB376:
 4783              	.LBB371:
 4784              	.LBB368:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 4785              		.loc 7 23 0
 4786 047c C3F84C29 		str	r2, [r3, #2380]
 4787              	.LVL513:
 4788              	.LBB364:
 4789              	.LBB365:
 4790              		.loc 15 52 0
 4791 0480 C3F85029 		str	r2, [r3, #2384]
 4792 0484 C3F85429 		str	r2, [r3, #2388]
 4793              	.LVL514:
 4794              	.LBE365:
 4795              	.LBE364:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 4796              		.loc 7 23 0
 4797 0488 C3F85809 		str	r0, [r3, #2392]
 4798              	.LVL515:
 4799              	.LBE368:
 4800              	.LBE371:
 4801              	.LBE376:
 4802              	.LBE381:
 4803              	.LBE386:
 4804              	.LBE420:
 4805              	.LBB421:
 4806              	.LBB399:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4807              		.loc 10 67 0
 4808 048c C3F88C49 		str	r4, [r3, #2444]
 4809              	.LBE399:
 4810              	.LBE421:
 4811              	.LBB422:
 4812              	.LBB407:
  18:./lib/ros_lib/std_msgs/String.h ****     {
 4813              		.loc 5 18 0
 4814 0490 C3F8440A 		str	r0, [r3, #2628]
 4815              	.LVL516:
 4816              	.LBE407:
 4817              	.LBE422:
 4818              	.LBB423:
 4819              	.LBB414:
 4820              		.loc 16 50 0
 4821 0494 C3F89819 		str	r1, [r3, #2456]
 4822 0498 C3F8A429 		str	r2, [r3, #2468]
 4823              	.LVL517:
 4824 049c 30BD     		pop	{r4, r5, pc}
 4825              	.L265:
 4826 049e 00BF     		.align	2
 4827              	.L264:
 4828 04a0 00000000 		.word	.LANCHOR1
 4829 04a4 08000000 		.word	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE+8
 4830 04a8 00380140 		.word	1073821696
 4831 04ac 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 4832 04b0 E4080000 		.word	.LANCHOR1+2276
 4833 04b4 08040000 		.word	.LANCHOR1+1032
 4834 04b8 08000000 		.word	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE+8
 4835 04bc 5D020000 		.word	.LC25
 4836 04c0 08000000 		.word	_ZTVN12roberto_msgs10MotorStateE+8
 4837 04c4 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 4838 04c8 08000000 		.word	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE+8
 4839 04cc 00000000 		.word	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 4840 04d0 63020000 		.word	.LC26
 4841 04d4 08000000 		.word	_ZTVN8std_msgs5UInt8E+8
 4842 04d8 08000000 		.word	_ZTVN8std_msgs6StringE+8
 4843 04dc C2010000 		.word	.LC16
 4844 04e0 67020000 		.word	.LC27
 4845 04e4 00000000 		.word	_Z6led_cbRKN8std_msgs5UInt8E
 4846              	.LBE414:
 4847              	.LBE423:
 4848              	.LBE424:
 4849              	.LBE425:
 4850              		.cfi_endproc
 4851              	.LFE218:
 4852              		.cantunwind
 4853              		.fnend
 4855              		.section	.init_array,"aw",%init_array
 4856              		.align	2
 4857 0000 00000000 		.word	_GLOBAL__sub_I_USART_FIFO(target1)
 4858              		.weak	_ZTSN3ros3MsgE
 4859              		.section	.rodata._ZTSN3ros3MsgE,"aG",%progbits,_ZTSN3ros3MsgE,comdat
 4862              	_ZTSN3ros3MsgE:
 4863 0000 4E33726F 		.ascii	"N3ros3MsgE\000"
 4863      73334D73 
 4863      674500
 4864              		.weak	_ZTIN3ros3MsgE
 4865              		.section	.rodata._ZTIN3ros3MsgE,"aG",%progbits,_ZTIN3ros3MsgE,comdat
 4866              		.align	2
 4869              	_ZTIN3ros3MsgE:
 4870 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 4871 0004 00000000 		.word	_ZTSN3ros3MsgE
 4872              		.weak	_ZTSN8std_msgs4TimeE
 4873              		.section	.rodata._ZTSN8std_msgs4TimeE,"aG",%progbits,_ZTSN8std_msgs4TimeE,comdat
 4876              	_ZTSN8std_msgs4TimeE:
 4877 0000 4E387374 		.ascii	"N8std_msgs4TimeE\000"
 4877      645F6D73 
 4877      67733454 
 4877      696D6545 
 4877      00
 4878              		.weak	_ZTIN8std_msgs4TimeE
 4879              		.section	.rodata._ZTIN8std_msgs4TimeE,"aG",%progbits,_ZTIN8std_msgs4TimeE,comdat
 4880              		.align	2
 4883              	_ZTIN8std_msgs4TimeE:
 4884 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 4885 0004 00000000 		.word	_ZTSN8std_msgs4TimeE
 4886 0008 00000000 		.word	_ZTIN3ros3MsgE
 4887              		.weak	_ZTSN14rosserial_msgs9TopicInfoE
 4888              		.section	.rodata._ZTSN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTSN14rosserial_msgs9TopicInfoE,
 4891              	_ZTSN14rosserial_msgs9TopicInfoE:
 4892 0000 4E313472 		.ascii	"N14rosserial_msgs9TopicInfoE\000"
 4892      6F737365 
 4892      7269616C 
 4892      5F6D7367 
 4892      7339546F 
 4893              		.weak	_ZTIN14rosserial_msgs9TopicInfoE
 4894              		.section	.rodata._ZTIN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTIN14rosserial_msgs9TopicInfoE,
 4895              		.align	2
 4898              	_ZTIN14rosserial_msgs9TopicInfoE:
 4899 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 4900 0004 00000000 		.word	_ZTSN14rosserial_msgs9TopicInfoE
 4901 0008 00000000 		.word	_ZTIN3ros3MsgE
 4902              		.weak	_ZTSN14rosserial_msgs3LogE
 4903              		.section	.rodata._ZTSN14rosserial_msgs3LogE,"aG",%progbits,_ZTSN14rosserial_msgs3LogE,comdat
 4906              	_ZTSN14rosserial_msgs3LogE:
 4907 0000 4E313472 		.ascii	"N14rosserial_msgs3LogE\000"
 4907      6F737365 
 4907      7269616C 
 4907      5F6D7367 
 4907      73334C6F 
 4908              		.weak	_ZTIN14rosserial_msgs3LogE
 4909              		.section	.rodata._ZTIN14rosserial_msgs3LogE,"aG",%progbits,_ZTIN14rosserial_msgs3LogE,comdat
 4910              		.align	2
 4913              	_ZTIN14rosserial_msgs3LogE:
 4914 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 4915 0004 00000000 		.word	_ZTSN14rosserial_msgs3LogE
 4916 0008 00000000 		.word	_ZTIN3ros3MsgE
 4917              		.weak	_ZTSN14rosserial_msgs20RequestParamResponseE
 4918              		.section	.rodata._ZTSN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTSN14rosserial_msgs
 4921              	_ZTSN14rosserial_msgs20RequestParamResponseE:
 4922 0000 4E313472 		.ascii	"N14rosserial_msgs20RequestParamResponseE\000"
 4922      6F737365 
 4922      7269616C 
 4922      5F6D7367 
 4922      73323052 
 4923              		.weak	_ZTIN14rosserial_msgs20RequestParamResponseE
 4924              		.section	.rodata._ZTIN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTIN14rosserial_msgs
 4925              		.align	2
 4928              	_ZTIN14rosserial_msgs20RequestParamResponseE:
 4929 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 4930 0004 00000000 		.word	_ZTSN14rosserial_msgs20RequestParamResponseE
 4931 0008 00000000 		.word	_ZTIN3ros3MsgE
 4932              		.weak	_ZTSN3ros15NodeHandleBase_E
 4933              		.section	.rodata._ZTSN3ros15NodeHandleBase_E,"aG",%progbits,_ZTSN3ros15NodeHandleBase_E,comdat
 4936              	_ZTSN3ros15NodeHandleBase_E:
 4937 0000 4E33726F 		.ascii	"N3ros15NodeHandleBase_E\000"
 4937      7331354E 
 4937      6F646548 
 4937      616E646C 
 4937      65426173 
 4938              		.weak	_ZTIN3ros15NodeHandleBase_E
 4939              		.section	.rodata._ZTIN3ros15NodeHandleBase_E,"aG",%progbits,_ZTIN3ros15NodeHandleBase_E,comdat
 4940              		.align	2
 4943              	_ZTIN3ros15NodeHandleBase_E:
 4944 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 4945 0004 00000000 		.word	_ZTSN3ros15NodeHandleBase_E
 4946              		.weak	_ZTSN3ros11Subscriber_E
 4947              		.section	.rodata._ZTSN3ros11Subscriber_E,"aG",%progbits,_ZTSN3ros11Subscriber_E,comdat
 4950              	_ZTSN3ros11Subscriber_E:
 4951 0000 4E33726F 		.ascii	"N3ros11Subscriber_E\000"
 4951      73313153 
 4951      75627363 
 4951      72696265 
 4951      725F4500 
 4952              		.weak	_ZTIN3ros11Subscriber_E
 4953              		.section	.rodata._ZTIN3ros11Subscriber_E,"aG",%progbits,_ZTIN3ros11Subscriber_E,comdat
 4954              		.align	2
 4957              	_ZTIN3ros11Subscriber_E:
 4958 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 4959 0004 00000000 		.word	_ZTSN3ros11Subscriber_E
 4960              		.weak	_ZTSN8std_msgs6StringE
 4961              		.section	.rodata._ZTSN8std_msgs6StringE,"aG",%progbits,_ZTSN8std_msgs6StringE,comdat
 4964              	_ZTSN8std_msgs6StringE:
 4965 0000 4E387374 		.ascii	"N8std_msgs6StringE\000"
 4965      645F6D73 
 4965      67733653 
 4965      7472696E 
 4965      674500
 4966              		.weak	_ZTIN8std_msgs6StringE
 4967              		.section	.rodata._ZTIN8std_msgs6StringE,"aG",%progbits,_ZTIN8std_msgs6StringE,comdat
 4968              		.align	2
 4971              	_ZTIN8std_msgs6StringE:
 4972 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 4973 0004 00000000 		.word	_ZTSN8std_msgs6StringE
 4974 0008 00000000 		.word	_ZTIN3ros3MsgE
 4975              		.weak	_ZTSN8std_msgs5UInt8E
 4976              		.section	.rodata._ZTSN8std_msgs5UInt8E,"aG",%progbits,_ZTSN8std_msgs5UInt8E,comdat
 4979              	_ZTSN8std_msgs5UInt8E:
 4980 0000 4E387374 		.ascii	"N8std_msgs5UInt8E\000"
 4980      645F6D73 
 4980      67733555 
 4980      496E7438 
 4980      4500
 4981              		.weak	_ZTIN8std_msgs5UInt8E
 4982              		.section	.rodata._ZTIN8std_msgs5UInt8E,"aG",%progbits,_ZTIN8std_msgs5UInt8E,comdat
 4983              		.align	2
 4986              	_ZTIN8std_msgs5UInt8E:
 4987 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 4988 0004 00000000 		.word	_ZTSN8std_msgs5UInt8E
 4989 0008 00000000 		.word	_ZTIN3ros3MsgE
 4990              		.weak	_ZTSN8std_msgs6HeaderE
 4991              		.section	.rodata._ZTSN8std_msgs6HeaderE,"aG",%progbits,_ZTSN8std_msgs6HeaderE,comdat
 4994              	_ZTSN8std_msgs6HeaderE:
 4995 0000 4E387374 		.ascii	"N8std_msgs6HeaderE\000"
 4995      645F6D73 
 4995      67733648 
 4995      65616465 
 4995      724500
 4996              		.weak	_ZTIN8std_msgs6HeaderE
 4997              		.section	.rodata._ZTIN8std_msgs6HeaderE,"aG",%progbits,_ZTIN8std_msgs6HeaderE,comdat
 4998              		.align	2
 5001              	_ZTIN8std_msgs6HeaderE:
 5002 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5003 0004 00000000 		.word	_ZTSN8std_msgs6HeaderE
 5004 0008 00000000 		.word	_ZTIN3ros3MsgE
 5005              		.weak	_ZTSN12roberto_msgs10MotorStateE
 5006              		.section	.rodata._ZTSN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTSN12roberto_msgs10MotorStateE,
 5009              	_ZTSN12roberto_msgs10MotorStateE:
 5010 0000 4E313272 		.ascii	"N12roberto_msgs10MotorStateE\000"
 5010      6F626572 
 5010      746F5F6D 
 5010      73677331 
 5010      304D6F74 
 5011              		.weak	_ZTIN12roberto_msgs10MotorStateE
 5012              		.section	.rodata._ZTIN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTIN12roberto_msgs10MotorStateE,
 5013              		.align	2
 5016              	_ZTIN12roberto_msgs10MotorStateE:
 5017 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5018 0004 00000000 		.word	_ZTSN12roberto_msgs10MotorStateE
 5019 0008 00000000 		.word	_ZTIN3ros3MsgE
 5020              		.weak	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5021              		.section	.rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 5024              	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 5025 0000 4E33726F 		.ascii	"N3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512"
 5025      7331314E 
 5025      6F646548 
 5025      616E646C 
 5025      655F4931 
 5026 0033 454C6935 		.ascii	"ELi512EEE\000"
 5026      31324545 
 5026      4500
 5027              		.weak	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5028              		.section	.rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 5029              		.align	2
 5032              	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 5033 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5034 0004 00000000 		.word	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5035 0008 00000000 		.word	_ZTIN3ros15NodeHandleBase_E
 5036              		.weak	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 5037              		.section	.rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTSN3ros10Su
 5040              	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 5041 0000 4E33726F 		.ascii	"N3ros10SubscriberIN12roberto_msgs10MotorStateEEE\000"
 5041      73313053 
 5041      75627363 
 5041      72696265 
 5041      72494E31 
 5042              		.weak	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 5043              		.section	.rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTIN3ros10Su
 5044              		.align	2
 5047              	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 5048 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5049 0004 00000000 		.word	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 5050 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 5051              		.weak	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 5052              		.section	.rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTSN3ros10SubscriberIN8
 5055              	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:
 5056 0000 4E33726F 		.ascii	"N3ros10SubscriberIN8std_msgs5UInt8EEE\000"
 5056      73313053 
 5056      75627363 
 5056      72696265 
 5056      72494E38 
 5057              		.weak	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 5058              		.section	.rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTIN3ros10SubscriberIN8
 5059              		.align	2
 5062              	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:
 5063 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5064 0004 00000000 		.word	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 5065 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 5066              		.weak	_ZTVN8std_msgs4TimeE
 5067              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 5068              		.align	2
 5071              	_ZTVN8std_msgs4TimeE:
 5072 0000 00000000 		.word	0
 5073 0004 00000000 		.word	_ZTIN8std_msgs4TimeE
 5074 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 5075 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 5076 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 5077 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 5078              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 5079              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 5080              		.align	2
 5083              	_ZTVN14rosserial_msgs9TopicInfoE:
 5084 0000 00000000 		.word	0
 5085 0004 00000000 		.word	_ZTIN14rosserial_msgs9TopicInfoE
 5086 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 5087 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 5088 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 5089 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 5090              		.weak	_ZTVN14rosserial_msgs3LogE
 5091              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 5092              		.align	2
 5095              	_ZTVN14rosserial_msgs3LogE:
 5096 0000 00000000 		.word	0
 5097 0004 00000000 		.word	_ZTIN14rosserial_msgs3LogE
 5098 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 5099 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 5100 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 5101 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 5102              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 5103              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 5104              		.align	2
 5107              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 5108 0000 00000000 		.word	0
 5109 0004 00000000 		.word	_ZTIN14rosserial_msgs20RequestParamResponseE
 5110 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 5111 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 5112 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 5113 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 5114              		.weak	_ZTVN8std_msgs6StringE
 5115              		.section	.rodata._ZTVN8std_msgs6StringE,"aG",%progbits,_ZTVN8std_msgs6StringE,comdat
 5116              		.align	2
 5119              	_ZTVN8std_msgs6StringE:
 5120 0000 00000000 		.word	0
 5121 0004 00000000 		.word	_ZTIN8std_msgs6StringE
 5122 0008 00000000 		.word	_ZNK8std_msgs6String9serializeEPh
 5123 000c 00000000 		.word	_ZN8std_msgs6String11deserializeEPh
 5124 0010 00000000 		.word	_ZN8std_msgs6String7getTypeEv
 5125 0014 00000000 		.word	_ZN8std_msgs6String6getMD5Ev
 5126              		.weak	_ZTVN8std_msgs5UInt8E
 5127              		.section	.rodata._ZTVN8std_msgs5UInt8E,"aG",%progbits,_ZTVN8std_msgs5UInt8E,comdat
 5128              		.align	2
 5131              	_ZTVN8std_msgs5UInt8E:
 5132 0000 00000000 		.word	0
 5133 0004 00000000 		.word	_ZTIN8std_msgs5UInt8E
 5134 0008 00000000 		.word	_ZNK8std_msgs5UInt89serializeEPh
 5135 000c 00000000 		.word	_ZN8std_msgs5UInt811deserializeEPh
 5136 0010 00000000 		.word	_ZN8std_msgs5UInt87getTypeEv
 5137 0014 00000000 		.word	_ZN8std_msgs5UInt86getMD5Ev
 5138              		.weak	_ZTVN8std_msgs6HeaderE
 5139              		.section	.rodata._ZTVN8std_msgs6HeaderE,"aG",%progbits,_ZTVN8std_msgs6HeaderE,comdat
 5140              		.align	2
 5143              	_ZTVN8std_msgs6HeaderE:
 5144 0000 00000000 		.word	0
 5145 0004 00000000 		.word	_ZTIN8std_msgs6HeaderE
 5146 0008 00000000 		.word	_ZNK8std_msgs6Header9serializeEPh
 5147 000c 00000000 		.word	_ZN8std_msgs6Header11deserializeEPh
 5148 0010 00000000 		.word	_ZN8std_msgs6Header7getTypeEv
 5149 0014 00000000 		.word	_ZN8std_msgs6Header6getMD5Ev
 5150              		.weak	_ZTVN12roberto_msgs10MotorStateE
 5151              		.section	.rodata._ZTVN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTVN12roberto_msgs10MotorStateE,
 5152              		.align	2
 5155              	_ZTVN12roberto_msgs10MotorStateE:
 5156 0000 00000000 		.word	0
 5157 0004 00000000 		.word	_ZTIN12roberto_msgs10MotorStateE
 5158 0008 00000000 		.word	_ZNK12roberto_msgs10MotorState9serializeEPh
 5159 000c 00000000 		.word	_ZN12roberto_msgs10MotorState11deserializeEPh
 5160 0010 00000000 		.word	_ZN12roberto_msgs10MotorState7getTypeEv
 5161 0014 00000000 		.word	_ZN12roberto_msgs10MotorState6getMD5Ev
 5162              		.weak	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5163              		.section	.rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 5164              		.align	2
 5167              	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 5168 0000 00000000 		.word	0
 5169 0004 00000000 		.word	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5170 0008 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 5171 000c 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 5172 0010 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
 5173              		.weak	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 5174              		.section	.rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTVN3ros10Su
 5175              		.align	2
 5178              	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 5179 0000 00000000 		.word	0
 5180 0004 00000000 		.word	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 5181 0008 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 5182 000c 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 5183 0010 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 5184 0014 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 5185              		.weak	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
 5186              		.section	.rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTVN3ros10SubscriberIN8
 5187              		.align	2
 5190              	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:
 5191 0000 00000000 		.word	0
 5192 0004 00000000 		.word	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 5193 0008 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 5194 000c 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 5195 0010 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 5196 0014 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 5197              		.global	str
 5198              		.global	hello
 5199              		.global	chatter
 5200              		.global	str_msg
 5201              		.global	led_sub
 5202              		.global	motor_sub
 5203              		.global	nh
 5204              		.global	GenerateStartStatus
 5205              		.global	NumberOfByteToReceive
 5206              		.global	RxBuffer
 5207              		.global	slaveAddress
 5208              		.global	Rx_Idx
 5209              		.global	USART_CNTOUT
 5210              		.global	USART_CNTIN
 5211              		.global	USART_FIFO
 5212              		.section	.rodata
 5213              		.set	.LANCHOR0,. + 0
 5216              	_ZN14rosserial_msgsL12REQUESTPARAME:
 5217 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 5217      65726961 
 5217      6C5F6D73 
 5217      67732F52 
 5217      65717565 
 5218              		.section	.rodata.str1.1,"aMS",%progbits,1
 5219              	.LC0:
 5220 0000 7374645F 		.ascii	"std_msgs/Time\000"
 5220      6D736773 
 5220      2F54696D 
 5220      6500
 5221              	.LC1:
 5222 000e 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 5222      36366337 
 5222      34633535 
 5222      32633331 
 5222      31666263 
 5223              	.LC2:
 5224 002f 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 5224      65726961 
 5224      6C5F6D73 
 5224      67732F54 
 5224      6F706963 
 5225              	.LC3:
 5226 0048 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 5226      31663838 
 5226      66633434 
 5226      38393266 
 5226      38633130 
 5227              	.LC4:
 5228 0069 726F7373 		.ascii	"rosserial_msgs/Log\000"
 5228      65726961 
 5228      6C5F6D73 
 5228      67732F4C 
 5228      6F6700
 5229              	.LC5:
 5230 007c 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 5230      64373331 
 5230      63323539 
 5230      33333236 
 5230      31636436 
 5231              	.LC6:
 5232 009d 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 5232      39386264 
 5232      61363539 
 5232      38313938 
 5232      36646466 
 5233              	.LC7:
 5234 00be 7374645F 		.ascii	"std_msgs/String\000"
 5234      6D736773 
 5234      2F537472 
 5234      696E6700 
 5235              	.LC8:
 5236 00ce 39393263 		.ascii	"992ce8a1687cec8c8bd883ec73ca41d1\000"
 5236      65386131 
 5236      36383763 
 5236      65633863 
 5236      38626438 
 5237              	.LC9:
 5238 00ef 7374645F 		.ascii	"std_msgs/UInt8\000"
 5238      6D736773 
 5238      2F55496E 
 5238      743800
 5239              	.LC10:
 5240 00fe 37633831 		.ascii	"7c8164229e7d2c17eb95e9231617fdee\000"
 5240      36343232 
 5240      39653764 
 5240      32633137 
 5240      65623935 
 5241              	.LC11:
 5242 011f 7374645F 		.ascii	"std_msgs/Header\000"
 5242      6D736773 
 5242      2F486561 
 5242      64657200 
 5243              	.LC12:
 5244 012f 32313736 		.ascii	"2176decaecbce78abc3b96ef049fabed\000"
 5244      64656361 
 5244      65636263 
 5244      65373861 
 5244      62633362 
 5245              	.LC13:
 5246 0150 726F6265 		.ascii	"roberto_msgs/MotorState\000"
 5246      72746F5F 
 5246      6D736773 
 5246      2F4D6F74 
 5246      6F725374 
 5247              	.LC14:
 5248 0168 65386235 		.ascii	"e8b5d1162b85151c49e02b8224796c0e\000"
 5248      64313136 
 5248      32623835 
 5248      31353163 
 5248      34396530 
 5249              	.LC15:
 5250 0189 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 5250      61676520 
 5250      66726F6D 
 5250      20646576 
 5250      69636520 
 5251 01bc 66666572 		.ascii	"ffer.\000"
 5251      2E00
 5252              	.LC16:
 5253 01c2 00       		.ascii	"\000"
 5254              	.LC17:
 5255 01c3 73657276 		.ascii	"servo_left\000"
 5255      6F5F6C65 
 5255      667400
 5256              	.LC18:
 5257 01ce 73657276 		.ascii	"servo_right\000"
 5257      6F5F7269 
 5257      67687400 
 5258              	.LC19:
 5259 01da 66726F6E 		.ascii	"front_right\000"
 5259      745F7269 
 5259      67687400 
 5260              	.LC20:
 5261 01e6 66726F6E 		.ascii	"front_left\000"
 5261      745F6C65 
 5261      667400
 5262              	.LC21:
 5263 01f1 72656172 		.ascii	"rear_left\000"
 5263      5F6C6566 
 5263      7400
 5264              	.LC22:
 5265 01fb 72656172 		.ascii	"rear_right\000"
 5265      5F726967 
 5265      687400
 5266              	.LC23:
 5267 0206 556E6162 		.ascii	"Unable to initialize motor: %s - [FAIL]\015\012\000"
 5267      6C652074 
 5267      6F20696E 
 5267      69746961 
 5267      6C697A65 
 5268              	.LC24:
 5269 0230 57726F6E 		.ascii	"Wrong parameters value: file %s on line %d\015\012\000"
 5269      67207061 
 5269      72616D65 
 5269      74657273 
 5269      2076616C 
 5270              	.LC25:
 5271 025d 6D6F746F 		.ascii	"motor\000"
 5271      7200
 5272              	.LC26:
 5273 0263 6C656400 		.ascii	"led\000"
 5274              	.LC27:
 5275 0267 656E636F 		.ascii	"encoder\000"
 5275      64657200 
 5276              		.bss
 5277              		.align	2
 5278              		.set	.LANCHOR1,. + 0
 5281              	USART_CNTOUT:
 5282 0000 00000000 		.space	4
 5285              	USART_CNTIN:
 5286 0004 00000000 		.space	4
 5289              	USART_FIFO:
 5290 0008 00000000 		.space	1024
 5290      00000000 
 5290      00000000 
 5290      00000000 
 5290      00000000 
 5293              	nh:
 5294 0408 00000000 		.space	1328
 5294      00000000 
 5294      00000000 
 5294      00000000 
 5294      00000000 
 5297              	motor_sub:
 5298 0938 00000000 		.space	64
 5298      00000000 
 5298      00000000 
 5298      00000000 
 5298      00000000 
 5301              	led_sub:
 5302 0978 00000000 		.space	28
 5302      00000000 
 5302      00000000 
 5302      00000000 
 5302      00000000 
 5305              	chatter:
 5306 0994 00000000 		.space	20
 5306      00000000 
 5306      00000000 
 5306      00000000 
 5306      00000000 
 5309              	str:
 5310 09a8 00000000 		.space	150
 5310      00000000 
 5310      00000000 
 5310      00000000 
 5310      00000000 
 5311 0a3e 0000     		.space	2
 5314              	str_msg:
 5315 0a40 00000000 		.space	8
 5315      00000000 
 5318              	hello:
 5319 0a48 00000000 		.space	25
 5319      00000000 
 5319      00000000 
 5319      00000000 
 5319      00000000 
 5322              	GenerateStartStatus:
 5323 0a61 00       		.space	1
 5326              	NumberOfByteToReceive:
 5327 0a62 00       		.space	1
 5330              	RxBuffer:
 5331 0a63 0000     		.space	2
 5334              	slaveAddress:
 5335 0a65 00       		.space	1
 5338              	Rx_Idx:
 5339 0a66 00       		.space	1
 5340              		.text
 5341              	.Letext0:
 5342              		.file 17 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 5343              		.file 18 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types.h"
 5344              		.file 19 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 5345              		.file 20 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 5346              		.file 21 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_usart.h"
 5347              		.file 22 "./inc/motorSettings.h"
 5348              		.file 23 "./lib/ros_lib/ros/duration.h"
 5349              		.file 24 "./lib/ros_lib/ros.h"
 5350              		.file 25 "./inc/motor.h"
 5351              		.file 26 "./inc/led.h"
 5352              		.file 27 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/string.h"
 5353              		.file 28 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdlib.h"
 5354              		.file 29 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 5355              		.file 30 "./inc/stm32_time.h"
 5356              		.file 31 "./inc/encoder.h"
 5357              		.file 32 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdio.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/cclbatWZ.s:20     .text._ZNK8std_msgs4Time9serializeEPh:00000000 $t
     /tmp/cclbatWZ.s:25     .text._ZNK8std_msgs4Time9serializeEPh:00000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:00000000 $d
     /tmp/cclbatWZ.s:75     .text._ZN8std_msgs4Time11deserializeEPh:00000000 $t
     /tmp/cclbatWZ.s:80     .text._ZN8std_msgs4Time11deserializeEPh:00000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:00000000 $d
     /tmp/cclbatWZ.s:131    .text._ZN8std_msgs4Time7getTypeEv:00000000 $t
     /tmp/cclbatWZ.s:136    .text._ZN8std_msgs4Time7getTypeEv:00000000 _ZN8std_msgs4Time7getTypeEv
     /tmp/cclbatWZ.s:152    .text._ZN8std_msgs4Time7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:00000000 $d
     /tmp/cclbatWZ.s:159    .text._ZN8std_msgs4Time6getMD5Ev:00000000 $t
     /tmp/cclbatWZ.s:164    .text._ZN8std_msgs4Time6getMD5Ev:00000000 _ZN8std_msgs4Time6getMD5Ev
     /tmp/cclbatWZ.s:180    .text._ZN8std_msgs4Time6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:00000000 $d
     /tmp/cclbatWZ.s:187    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $t
     /tmp/cclbatWZ.s:192    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
     /tmp/cclbatWZ.s:209    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $d
     /tmp/cclbatWZ.s:216    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $t
     /tmp/cclbatWZ.s:221    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
     /tmp/cclbatWZ.s:237    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $d
     /tmp/cclbatWZ.s:244    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $t
     /tmp/cclbatWZ.s:249    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 _ZN14rosserial_msgs3Log7getTypeEv
     /tmp/cclbatWZ.s:266    .text._ZN14rosserial_msgs3Log7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $d
     /tmp/cclbatWZ.s:273    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $t
     /tmp/cclbatWZ.s:278    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 _ZN14rosserial_msgs3Log6getMD5Ev
     /tmp/cclbatWZ.s:294    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $d
     /tmp/cclbatWZ.s:301    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $t
     /tmp/cclbatWZ.s:306    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
     /tmp/cclbatWZ.s:323    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $d
     /tmp/cclbatWZ.s:330    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $t
     /tmp/cclbatWZ.s:335    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
     /tmp/cclbatWZ.s:351    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $d
     /tmp/cclbatWZ.s:358    .text._ZN8std_msgs6String7getTypeEv:00000000 $t
     /tmp/cclbatWZ.s:363    .text._ZN8std_msgs6String7getTypeEv:00000000 _ZN8std_msgs6String7getTypeEv
     /tmp/cclbatWZ.s:380    .text._ZN8std_msgs6String7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs6String7getTypeEv:00000000 $d
     /tmp/cclbatWZ.s:387    .text._ZN8std_msgs6String6getMD5Ev:00000000 $t
     /tmp/cclbatWZ.s:392    .text._ZN8std_msgs6String6getMD5Ev:00000000 _ZN8std_msgs6String6getMD5Ev
     /tmp/cclbatWZ.s:408    .text._ZN8std_msgs6String6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs6String6getMD5Ev:00000000 $d
     /tmp/cclbatWZ.s:415    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 $t
     /tmp/cclbatWZ.s:420    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 _ZNK8std_msgs5UInt89serializeEPh
.ARM.exidx.text._ZNK8std_msgs5UInt89serializeEPh:00000000 $d
     /tmp/cclbatWZ.s:446    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 $t
     /tmp/cclbatWZ.s:451    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 _ZN8std_msgs5UInt811deserializeEPh
.ARM.exidx.text._ZN8std_msgs5UInt811deserializeEPh:00000000 $d
     /tmp/cclbatWZ.s:474    .text._ZN8std_msgs5UInt87getTypeEv:00000000 $t
     /tmp/cclbatWZ.s:479    .text._ZN8std_msgs5UInt87getTypeEv:00000000 _ZN8std_msgs5UInt87getTypeEv
     /tmp/cclbatWZ.s:495    .text._ZN8std_msgs5UInt87getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt87getTypeEv:00000000 $d
     /tmp/cclbatWZ.s:502    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 $t
     /tmp/cclbatWZ.s:507    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 _ZN8std_msgs5UInt86getMD5Ev
     /tmp/cclbatWZ.s:523    .text._ZN8std_msgs5UInt86getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt86getMD5Ev:00000000 $d
     /tmp/cclbatWZ.s:530    .text._ZN8std_msgs6Header7getTypeEv:00000000 $t
     /tmp/cclbatWZ.s:535    .text._ZN8std_msgs6Header7getTypeEv:00000000 _ZN8std_msgs6Header7getTypeEv
     /tmp/cclbatWZ.s:552    .text._ZN8std_msgs6Header7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header7getTypeEv:00000000 $d
     /tmp/cclbatWZ.s:559    .text._ZN8std_msgs6Header6getMD5Ev:00000000 $t
     /tmp/cclbatWZ.s:564    .text._ZN8std_msgs6Header6getMD5Ev:00000000 _ZN8std_msgs6Header6getMD5Ev
     /tmp/cclbatWZ.s:580    .text._ZN8std_msgs6Header6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header6getMD5Ev:00000000 $d
     /tmp/cclbatWZ.s:587    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $t
     /tmp/cclbatWZ.s:592    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 _ZN12roberto_msgs10MotorState7getTypeEv
     /tmp/cclbatWZ.s:609    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $d
     /tmp/cclbatWZ.s:616    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $t
     /tmp/cclbatWZ.s:621    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 _ZN12roberto_msgs10MotorState6getMD5Ev
     /tmp/cclbatWZ.s:637    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $d
     /tmp/cclbatWZ.s:644    .text:00000000 $t
     /tmp/cclbatWZ.s:649    .text:00000000 _Z8motor_cbRKN12roberto_msgs10MotorStateE
                       .ARM.exidx:00000000 $d
     /tmp/cclbatWZ.s:666    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $t
     /tmp/cclbatWZ.s:671    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $d
     /tmp/cclbatWZ.s:707    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $t
     /tmp/cclbatWZ.s:712    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $d
     /tmp/cclbatWZ.s:731    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $t
     /tmp/cclbatWZ.s:736    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
     /tmp/cclbatWZ.s:752    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $d
     /tmp/cclbatWZ.s:759    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $t
     /tmp/cclbatWZ.s:764    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
     /tmp/cclbatWZ.s:780    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $d
     /tmp/cclbatWZ.s:787    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $t
     /tmp/cclbatWZ.s:792    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $d
     /tmp/cclbatWZ.s:811    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $t
     /tmp/cclbatWZ.s:816    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
     /tmp/cclbatWZ.s:832    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $d
     /tmp/cclbatWZ.s:839    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $t
     /tmp/cclbatWZ.s:844    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
     /tmp/cclbatWZ.s:860    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $d
     /tmp/cclbatWZ.s:867    .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 $t
     /tmp/cclbatWZ.s:872    .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 $d
     /tmp/cclbatWZ.s:897    .text:00000002 _Z6led_cbRKN8std_msgs5UInt8E
     /tmp/cclbatWZ.s:917    .text._ZNK8std_msgs6Header9serializeEPh:00000000 $t
     /tmp/cclbatWZ.s:922    .text._ZNK8std_msgs6Header9serializeEPh:00000000 _ZNK8std_msgs6Header9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6Header9serializeEPh:00000000 $d
     /tmp/cclbatWZ.s:1021   .text._ZNK8std_msgs6String9serializeEPh:00000000 $t
     /tmp/cclbatWZ.s:1026   .text._ZNK8std_msgs6String9serializeEPh:00000000 _ZNK8std_msgs6String9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6String9serializeEPh:00000000 $d
     /tmp/cclbatWZ.s:1079   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $t
     /tmp/cclbatWZ.s:1084   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $d
     /tmp/cclbatWZ.s:1297   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $t
     /tmp/cclbatWZ.s:1302   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $d
     /tmp/cclbatWZ.s:1361   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $t
     /tmp/cclbatWZ.s:1366   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $d
     /tmp/cclbatWZ.s:1501   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $t
     /tmp/cclbatWZ.s:1506   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $d
     /tmp/cclbatWZ.s:1580   .text._ZN8std_msgs6Header11deserializeEPh:00000000 $t
     /tmp/cclbatWZ.s:1585   .text._ZN8std_msgs6Header11deserializeEPh:00000000 _ZN8std_msgs6Header11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6Header11deserializeEPh:00000000 $d
     /tmp/cclbatWZ.s:1698   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $t
     /tmp/cclbatWZ.s:1703   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $d
     /tmp/cclbatWZ.s:1891   .text._ZN8std_msgs6String11deserializeEPh:00000000 $t
     /tmp/cclbatWZ.s:1896   .text._ZN8std_msgs6String11deserializeEPh:00000000 _ZN8std_msgs6String11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6String11deserializeEPh:00000000 $d
     /tmp/cclbatWZ.s:1964   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $t
     /tmp/cclbatWZ.s:1969   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $d
     /tmp/cclbatWZ.s:2225   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $t
     /tmp/cclbatWZ.s:2230   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 _ZN3ros3Msg19serializeAvrFloat64EPhf
.ARM.exidx.text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $d
     /tmp/cclbatWZ.s:2317   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $t
     /tmp/cclbatWZ.s:2322   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 _ZNK12roberto_msgs10MotorState9serializeEPh
.ARM.exidx.text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $d
     /tmp/cclbatWZ.s:2394   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $t
     /tmp/cclbatWZ.s:2399   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 _ZN3ros3Msg21deserializeAvrFloat64EPKhPf
.ARM.exidx.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $d
     /tmp/cclbatWZ.s:2471   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $t
     /tmp/cclbatWZ.s:2476   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 _ZN12roberto_msgs10MotorState11deserializeEPh
.ARM.exidx.text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $d
     /tmp/cclbatWZ.s:2550   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $t
     /tmp/cclbatWZ.s:2555   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $d
     /tmp/cclbatWZ.s:2599   .text._ZN15ArduinoHardware4initEv:00000000 $t
     /tmp/cclbatWZ.s:2604   .text._ZN15ArduinoHardware4initEv:00000000 _ZN15ArduinoHardware4initEv
     /tmp/cclbatWZ.s:2722   .text._ZN15ArduinoHardware4initEv:0000008c $d
.ARM.exidx.text._ZN15ArduinoHardware4initEv:00000000 $d
     /tmp/cclbatWZ.s:2734   .text:00000008 USART1_IRQHandler
     /tmp/cclbatWZ.s:2797   .text:0000004c $d
     /tmp/cclbatWZ.s:2804   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 $t
     /tmp/cclbatWZ.s:2809   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
     /tmp/cclbatWZ.s:2863   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000020 $d
     /tmp/cclbatWZ.s:5095   .rodata._ZTVN14rosserial_msgs3LogE:00000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 $d
     /tmp/cclbatWZ.s:2869   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 $t
     /tmp/cclbatWZ.s:2874   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
     /tmp/cclbatWZ.s:3038   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:000000bc $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 $d
     /tmp/cclbatWZ.s:3045   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 $t
     /tmp/cclbatWZ.s:3050   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
     /tmp/cclbatWZ.s:3120   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000024 $d
     /tmp/cclbatWZ.s:5071   .rodata._ZTVN8std_msgs4TimeE:00000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 $d
     /tmp/cclbatWZ.s:3126   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 $t
     /tmp/cclbatWZ.s:3131   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
     /tmp/cclbatWZ.s:3293   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:000000b4 $d
     /tmp/cclbatWZ.s:5083   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 _ZTVN14rosserial_msgs9TopicInfoE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 $d
     /tmp/cclbatWZ.s:3300   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 $t
     /tmp/cclbatWZ.s:3305   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
     /tmp/cclbatWZ.s:3438   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000074 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 $d
     /tmp/cclbatWZ.s:3446   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 $t
     /tmp/cclbatWZ.s:3451   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
     /tmp/cclbatWZ.s:3813   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000208 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 $d
     /tmp/cclbatWZ.s:3820   .text.startup:00000000 $t
     /tmp/cclbatWZ.s:3825   .text.startup:00000000 main
     /tmp/cclbatWZ.s:3963   .text.startup:00000090 $d
     /tmp/cclbatWZ.s:3971   .text.startup:000000a4 $t
     /tmp/cclbatWZ.s:4383   .text.startup:00000344 $d
          .ARM.exidx.text.startup:00000000 $d
     /tmp/cclbatWZ.s:4406   .text:00000054 $t
     /tmp/cclbatWZ.s:4411   .text:00000054 _Z13assert_failedPhm
     /tmp/cclbatWZ.s:4458   .text:00000080 $d
     /tmp/cclbatWZ.s:4465   .text.startup:0000038c $t
     /tmp/cclbatWZ.s:4469   .text.startup:0000038c _GLOBAL__sub_I_USART_FIFO
     /tmp/cclbatWZ.s:4828   .text.startup:000004a0 $d
     /tmp/cclbatWZ.s:5167   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/cclbatWZ.s:5107   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 _ZTVN14rosserial_msgs20RequestParamResponseE
     /tmp/cclbatWZ.s:5178   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/cclbatWZ.s:5155   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 _ZTVN12roberto_msgs10MotorStateE
     /tmp/cclbatWZ.s:5143   .rodata._ZTVN8std_msgs6HeaderE:00000000 _ZTVN8std_msgs6HeaderE
     /tmp/cclbatWZ.s:5190   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/cclbatWZ.s:5131   .rodata._ZTVN8std_msgs5UInt8E:00000000 _ZTVN8std_msgs5UInt8E
     /tmp/cclbatWZ.s:5119   .rodata._ZTVN8std_msgs6StringE:00000000 _ZTVN8std_msgs6StringE
     /tmp/cclbatWZ.s:4856   .init_array:00000000 $d
     /tmp/cclbatWZ.s:4862   .rodata._ZTSN3ros3MsgE:00000000 _ZTSN3ros3MsgE
     /tmp/cclbatWZ.s:4869   .rodata._ZTIN3ros3MsgE:00000000 _ZTIN3ros3MsgE
     /tmp/cclbatWZ.s:4866   .rodata._ZTIN3ros3MsgE:00000000 $d
     /tmp/cclbatWZ.s:4876   .rodata._ZTSN8std_msgs4TimeE:00000000 _ZTSN8std_msgs4TimeE
     /tmp/cclbatWZ.s:4883   .rodata._ZTIN8std_msgs4TimeE:00000000 _ZTIN8std_msgs4TimeE
     /tmp/cclbatWZ.s:4880   .rodata._ZTIN8std_msgs4TimeE:00000000 $d
     /tmp/cclbatWZ.s:4891   .rodata._ZTSN14rosserial_msgs9TopicInfoE:00000000 _ZTSN14rosserial_msgs9TopicInfoE
     /tmp/cclbatWZ.s:4898   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 _ZTIN14rosserial_msgs9TopicInfoE
     /tmp/cclbatWZ.s:4895   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/cclbatWZ.s:4906   .rodata._ZTSN14rosserial_msgs3LogE:00000000 _ZTSN14rosserial_msgs3LogE
     /tmp/cclbatWZ.s:4913   .rodata._ZTIN14rosserial_msgs3LogE:00000000 _ZTIN14rosserial_msgs3LogE
     /tmp/cclbatWZ.s:4910   .rodata._ZTIN14rosserial_msgs3LogE:00000000 $d
     /tmp/cclbatWZ.s:4921   .rodata._ZTSN14rosserial_msgs20RequestParamResponseE:00000000 _ZTSN14rosserial_msgs20RequestParamResponseE
     /tmp/cclbatWZ.s:4928   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 _ZTIN14rosserial_msgs20RequestParamResponseE
     /tmp/cclbatWZ.s:4925   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/cclbatWZ.s:4936   .rodata._ZTSN3ros15NodeHandleBase_E:00000000 _ZTSN3ros15NodeHandleBase_E
     /tmp/cclbatWZ.s:4943   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 _ZTIN3ros15NodeHandleBase_E
     /tmp/cclbatWZ.s:4940   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 $d
     /tmp/cclbatWZ.s:4950   .rodata._ZTSN3ros11Subscriber_E:00000000 _ZTSN3ros11Subscriber_E
     /tmp/cclbatWZ.s:4957   .rodata._ZTIN3ros11Subscriber_E:00000000 _ZTIN3ros11Subscriber_E
     /tmp/cclbatWZ.s:4954   .rodata._ZTIN3ros11Subscriber_E:00000000 $d
     /tmp/cclbatWZ.s:4964   .rodata._ZTSN8std_msgs6StringE:00000000 _ZTSN8std_msgs6StringE
     /tmp/cclbatWZ.s:4971   .rodata._ZTIN8std_msgs6StringE:00000000 _ZTIN8std_msgs6StringE
     /tmp/cclbatWZ.s:4968   .rodata._ZTIN8std_msgs6StringE:00000000 $d
     /tmp/cclbatWZ.s:4979   .rodata._ZTSN8std_msgs5UInt8E:00000000 _ZTSN8std_msgs5UInt8E
     /tmp/cclbatWZ.s:4986   .rodata._ZTIN8std_msgs5UInt8E:00000000 _ZTIN8std_msgs5UInt8E
     /tmp/cclbatWZ.s:4983   .rodata._ZTIN8std_msgs5UInt8E:00000000 $d
     /tmp/cclbatWZ.s:4994   .rodata._ZTSN8std_msgs6HeaderE:00000000 _ZTSN8std_msgs6HeaderE
     /tmp/cclbatWZ.s:5001   .rodata._ZTIN8std_msgs6HeaderE:00000000 _ZTIN8std_msgs6HeaderE
     /tmp/cclbatWZ.s:4998   .rodata._ZTIN8std_msgs6HeaderE:00000000 $d
     /tmp/cclbatWZ.s:5009   .rodata._ZTSN12roberto_msgs10MotorStateE:00000000 _ZTSN12roberto_msgs10MotorStateE
     /tmp/cclbatWZ.s:5016   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 _ZTIN12roberto_msgs10MotorStateE
     /tmp/cclbatWZ.s:5013   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/cclbatWZ.s:5024   .rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/cclbatWZ.s:5032   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/cclbatWZ.s:5029   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 $d
     /tmp/cclbatWZ.s:5040   .rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/cclbatWZ.s:5047   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/cclbatWZ.s:5044   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/cclbatWZ.s:5055   .rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/cclbatWZ.s:5062   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/cclbatWZ.s:5059   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/cclbatWZ.s:5068   .rodata._ZTVN8std_msgs4TimeE:00000000 $d
     /tmp/cclbatWZ.s:5080   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/cclbatWZ.s:5092   .rodata._ZTVN14rosserial_msgs3LogE:00000000 $d
     /tmp/cclbatWZ.s:5104   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/cclbatWZ.s:5116   .rodata._ZTVN8std_msgs6StringE:00000000 $d
     /tmp/cclbatWZ.s:5128   .rodata._ZTVN8std_msgs5UInt8E:00000000 $d
     /tmp/cclbatWZ.s:5140   .rodata._ZTVN8std_msgs6HeaderE:00000000 $d
     /tmp/cclbatWZ.s:5152   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/cclbatWZ.s:5164   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 $d
     /tmp/cclbatWZ.s:5175   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/cclbatWZ.s:5187   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/cclbatWZ.s:5309   .bss:000009a8 str
     /tmp/cclbatWZ.s:5318   .bss:00000a48 hello
     /tmp/cclbatWZ.s:5305   .bss:00000994 chatter
     /tmp/cclbatWZ.s:5314   .bss:00000a40 str_msg
     /tmp/cclbatWZ.s:5301   .bss:00000978 led_sub
     /tmp/cclbatWZ.s:5297   .bss:00000938 motor_sub
     /tmp/cclbatWZ.s:5293   .bss:00000408 nh
     /tmp/cclbatWZ.s:5322   .bss:00000a61 GenerateStartStatus
     /tmp/cclbatWZ.s:5326   .bss:00000a62 NumberOfByteToReceive
     /tmp/cclbatWZ.s:5330   .bss:00000a63 RxBuffer
     /tmp/cclbatWZ.s:5334   .bss:00000a65 slaveAddress
     /tmp/cclbatWZ.s:5338   .bss:00000a66 Rx_Idx
     /tmp/cclbatWZ.s:5281   .bss:00000000 USART_CNTOUT
     /tmp/cclbatWZ.s:5285   .bss:00000004 USART_CNTIN
     /tmp/cclbatWZ.s:5289   .bss:00000008 USART_FIFO
     /tmp/cclbatWZ.s:5216   .rodata:00000000 _ZN14rosserial_msgsL12REQUESTPARAME
     /tmp/cclbatWZ.s:5277   .bss:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
led_set
strlen
memcpy
realloc
__aeabi_fcmplt
RCC_APB2PeriphClockCmd
GPIO_Init
USART_Cmd
USART_Init
USART_ITConfig
__aeabi_unwind_cpp_pr0
USART_GetITStatus
USART_ReceiveData
USART_SendData
millis
_ZN3ros16normalizeSecNSecERmS0_
RCC_Configuration
GPIO_PinRemapConfig
I2C1_Init
SysTick_Init
DEBUG_Init
LED_Init
delay
_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
_ZN5motor11createMotorEP13motorSettings
sprintf
debug_toggle
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
