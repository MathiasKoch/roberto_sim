   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  20              		.align	1
  21              		.weak	_ZNK8std_msgs4Time9serializeEPh
  22              		.thumb
  23              		.thumb_func
  25              	_ZNK8std_msgs4Time9serializeEPh:
  26              		.fnstart
  27              	.LFB54:
  28              		.file 1 "./lib/ros_lib/std_msgs/Time.h"
   1:./lib/ros_lib/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:./lib/ros_lib/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:./lib/ros_lib/std_msgs/Time.h **** 
   4:./lib/ros_lib/std_msgs/Time.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Time.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Time.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Time.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Time.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Time.h **** 
  10:./lib/ros_lib/std_msgs/Time.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Time.h **** {
  12:./lib/ros_lib/std_msgs/Time.h **** 
  13:./lib/ros_lib/std_msgs/Time.h ****   class Time : public ros::Msg
  14:./lib/ros_lib/std_msgs/Time.h ****   {
  15:./lib/ros_lib/std_msgs/Time.h ****     public:
  16:./lib/ros_lib/std_msgs/Time.h ****       ros::Time data;
  17:./lib/ros_lib/std_msgs/Time.h **** 
  18:./lib/ros_lib/std_msgs/Time.h ****     Time():
  19:./lib/ros_lib/std_msgs/Time.h ****       data()
  20:./lib/ros_lib/std_msgs/Time.h ****     {
  21:./lib/ros_lib/std_msgs/Time.h ****     }
  22:./lib/ros_lib/std_msgs/Time.h **** 
  23:./lib/ros_lib/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  29              		.loc 1 23 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  24:./lib/ros_lib/std_msgs/Time.h ****     {
  25:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  26:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  35              		.loc 1 26 0
  36 0000 4368     		ldr	r3, [r0, #4]
  37 0002 0B70     		strb	r3, [r1]
  27:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  38              		.loc 1 27 0
  39 0004 4368     		ldr	r3, [r0, #4]
  40 0006 1B0A     		lsrs	r3, r3, #8
  41 0008 4B70     		strb	r3, [r1, #1]
  28:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  42              		.loc 1 28 0
  43 000a C388     		ldrh	r3, [r0, #6]
  44 000c 8B70     		strb	r3, [r1, #2]
  29:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  45              		.loc 1 29 0
  46 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  47 0010 CB70     		strb	r3, [r1, #3]
  48              	.LVL1:
  30:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  31:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  49              		.loc 1 31 0
  50 0012 8368     		ldr	r3, [r0, #8]
  51 0014 0B71     		strb	r3, [r1, #4]
  32:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  52              		.loc 1 32 0
  53 0016 8368     		ldr	r3, [r0, #8]
  54 0018 1B0A     		lsrs	r3, r3, #8
  55 001a 4B71     		strb	r3, [r1, #5]
  33:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  56              		.loc 1 33 0
  57 001c 4389     		ldrh	r3, [r0, #10]
  58 001e 8B71     		strb	r3, [r1, #6]
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  59              		.loc 1 34 0
  60 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  35:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  36:./lib/ros_lib/std_msgs/Time.h ****       return offset;
  37:./lib/ros_lib/std_msgs/Time.h ****     }
  61              		.loc 1 37 0
  62 0022 0820     		movs	r0, #8
  63              	.LVL2:
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  64              		.loc 1 34 0
  65 0024 CB71     		strb	r3, [r1, #7]
  66              	.LVL3:
  67              		.loc 1 37 0
  68 0026 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE54:
  71              		.cantunwind
  72              		.fnend
  74              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  75              		.align	1
  76              		.weak	_ZN8std_msgs4Time11deserializeEPh
  77              		.thumb
  78              		.thumb_func
  80              	_ZN8std_msgs4Time11deserializeEPh:
  81              		.fnstart
  82              	.LFB55:
  38:./lib/ros_lib/std_msgs/Time.h **** 
  39:./lib/ros_lib/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  83              		.loc 1 39 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL4:
  40:./lib/ros_lib/std_msgs/Time.h ****     {
  41:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  42:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  89              		.loc 1 42 0
  90 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  91 0002 4360     		str	r3, [r0, #4]
  43:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  92              		.loc 1 43 0
  93 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  94 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  95 000a 4360     		str	r3, [r0, #4]
  44:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  96              		.loc 1 44 0
  97 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  98 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  99 0012 4360     		str	r3, [r0, #4]
  45:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 100              		.loc 1 45 0
 101 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 102 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 103 001a 4360     		str	r3, [r0, #4]
 104              	.LVL5:
  46:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  47:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 105              		.loc 1 47 0
 106 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 107 001e 8360     		str	r3, [r0, #8]
  48:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 108              		.loc 1 48 0
 109 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 110 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 111 0026 8360     		str	r3, [r0, #8]
  49:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 112              		.loc 1 49 0
 113 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 114 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 115 002e 8360     		str	r3, [r0, #8]
  50:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 116              		.loc 1 50 0
 117 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 118 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 119 0036 8360     		str	r3, [r0, #8]
 120              	.LVL6:
  51:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  52:./lib/ros_lib/std_msgs/Time.h ****      return offset;
  53:./lib/ros_lib/std_msgs/Time.h ****     }
 121              		.loc 1 53 0
 122 0038 0820     		movs	r0, #8
 123              	.LVL7:
 124 003a 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE55:
 127              		.cantunwind
 128              		.fnend
 130              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 131              		.align	1
 132              		.weak	_ZN8std_msgs4Time7getTypeEv
 133              		.thumb
 134              		.thumb_func
 136              	_ZN8std_msgs4Time7getTypeEv:
 137              		.fnstart
 138              	.LFB56:
  54:./lib/ros_lib/std_msgs/Time.h **** 
  55:./lib/ros_lib/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 139              		.loc 1 55 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144              	.LVL8:
 145              		.loc 1 55 0
 146 0000 0048     		ldr	r0, .L4
 147              	.LVL9:
 148 0002 7047     		bx	lr
 149              	.L5:
 150              		.align	2
 151              	.L4:
 152 0004 00000000 		.word	.LC0
 153              		.cfi_endproc
 154              	.LFE56:
 155              		.cantunwind
 156              		.fnend
 158              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 159              		.align	1
 160              		.weak	_ZN8std_msgs4Time6getMD5Ev
 161              		.thumb
 162              		.thumb_func
 164              	_ZN8std_msgs4Time6getMD5Ev:
 165              		.fnstart
 166              	.LFB57:
  56:./lib/ros_lib/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 167              		.loc 1 56 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL10:
 173              		.loc 1 56 0
 174 0000 0048     		ldr	r0, .L7
 175              	.LVL11:
 176 0002 7047     		bx	lr
 177              	.L8:
 178              		.align	2
 179              	.L7:
 180 0004 0E000000 		.word	.LC1
 181              		.cfi_endproc
 182              	.LFE57:
 183              		.cantunwind
 184              		.fnend
 186              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 187              		.align	1
 188              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 189              		.thumb
 190              		.thumb_func
 192              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 193              		.fnstart
 194              	.LFB63:
 195              		.file 2 "./lib/ros_lib/rosserial_msgs/TopicInfo.h"
   1:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   4:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   9:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** {
  11:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  12:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   {
  14:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  29:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     TopicInfo():
  30:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_id(0),
  31:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_name(""),
  32:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       message_type(""),
  33:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       md5sum(""),
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       buffer_size(0)
  35:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  36:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  37:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  39:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  40:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  43:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  46:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  51:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  56:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  59:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
  60:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
  61:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  62:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  68:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  69:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       return offset;
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  71:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
  73:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  74:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
  77:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  78:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
  80:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  83:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
  86:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  87:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
  89:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  92:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
  95:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  96:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
  98:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 101:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 104:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 105:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 106:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
 107:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
 108:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 109:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 110:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 111:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 112:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 113:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 115:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 116:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****      return offset;
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
 118:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 119:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 196              		.loc 2 119 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL12:
 202              		.loc 2 119 0
 203 0000 0048     		ldr	r0, .L10
 204              	.LVL13:
 205 0002 7047     		bx	lr
 206              	.L11:
 207              		.align	2
 208              	.L10:
 209 0004 2F000000 		.word	.LC2
 210              		.cfi_endproc
 211              	.LFE63:
 212              		.cantunwind
 213              		.fnend
 215              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 216              		.align	1
 217              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 218              		.thumb
 219              		.thumb_func
 221              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 222              		.fnstart
 223              	.LFB64:
 120:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 224              		.loc 2 120 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL14:
 230              		.loc 2 120 0
 231 0000 0048     		ldr	r0, .L13
 232              	.LVL15:
 233 0002 7047     		bx	lr
 234              	.L14:
 235              		.align	2
 236              	.L13:
 237 0004 48000000 		.word	.LC3
 238              		.cfi_endproc
 239              	.LFE64:
 240              		.cantunwind
 241              		.fnend
 243              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 244              		.align	1
 245              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 246              		.thumb
 247              		.thumb_func
 249              	_ZN14rosserial_msgs3Log7getTypeEv:
 250              		.fnstart
 251              	.LFB70:
 252              		.file 3 "./lib/ros_lib/rosserial_msgs/Log.h"
   1:./lib/ros_lib/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:./lib/ros_lib/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:./lib/ros_lib/rosserial_msgs/Log.h **** 
   4:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/Log.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/Log.h **** 
   9:./lib/ros_lib/rosserial_msgs/Log.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/Log.h **** {
  11:./lib/ros_lib/rosserial_msgs/Log.h **** 
  12:./lib/ros_lib/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/Log.h ****   {
  14:./lib/ros_lib/rosserial_msgs/Log.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/Log.h ****       uint8_t level;
  16:./lib/ros_lib/rosserial_msgs/Log.h ****       const char* msg;
  17:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  18:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  19:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  20:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  21:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  22:./lib/ros_lib/rosserial_msgs/Log.h **** 
  23:./lib/ros_lib/rosserial_msgs/Log.h ****     Log():
  24:./lib/ros_lib/rosserial_msgs/Log.h ****       level(0),
  25:./lib/ros_lib/rosserial_msgs/Log.h ****       msg("")
  26:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  27:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  28:./lib/ros_lib/rosserial_msgs/Log.h **** 
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  31:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  33:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  36:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  38:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  39:./lib/ros_lib/rosserial_msgs/Log.h ****       return offset;
  40:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  41:./lib/ros_lib/rosserial_msgs/Log.h **** 
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
  43:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  44:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
  46:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  47:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg;
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
  49:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  50:./lib/ros_lib/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
  51:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
  52:./lib/ros_lib/rosserial_msgs/Log.h ****       }
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
  55:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  56:./lib/ros_lib/rosserial_msgs/Log.h ****      return offset;
  57:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  58:./lib/ros_lib/rosserial_msgs/Log.h **** 
  59:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 253              		.loc 3 59 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL16:
 259              		.loc 3 59 0
 260 0000 0048     		ldr	r0, .L16
 261              	.LVL17:
 262 0002 7047     		bx	lr
 263              	.L17:
 264              		.align	2
 265              	.L16:
 266 0004 69000000 		.word	.LC4
 267              		.cfi_endproc
 268              	.LFE70:
 269              		.cantunwind
 270              		.fnend
 272              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 273              		.align	1
 274              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 275              		.thumb
 276              		.thumb_func
 278              	_ZN14rosserial_msgs3Log6getMD5Ev:
 279              		.fnstart
 280              	.LFB71:
  60:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 281              		.loc 3 60 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL18:
 287              		.loc 3 60 0
 288 0000 0048     		ldr	r0, .L19
 289              	.LVL19:
 290 0002 7047     		bx	lr
 291              	.L20:
 292              		.align	2
 293              	.L19:
 294 0004 7C000000 		.word	.LC5
 295              		.cfi_endproc
 296              	.LFE71:
 297              		.cantunwind
 298              		.fnend
 300              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 301              		.align	1
 302              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 303              		.thumb
 304              		.thumb_func
 306              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 307              		.fnstart
 308              	.LFB84:
 309              		.file 4 "./lib/ros_lib/rosserial_msgs/RequestParam.h"
   1:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   4:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <string.h>
   5:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   6:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   7:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
   8:./lib/ros_lib/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
   9:./lib/ros_lib/rosserial_msgs/RequestParam.h **** {
  10:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  11:./lib/ros_lib/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  12:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  13:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  14:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  15:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  16:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       const char* name;
  17:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  18:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamRequest():
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       name("")
  20:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  21:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  22:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  24:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  25:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  28:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  30:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  31:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  33:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  35:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  36:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  37:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  39:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  42:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  45:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  46:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  48:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  49:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
  50:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  51:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  52:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   };
  53:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  54:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  55:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  56:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  57:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  58:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  59:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  60:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  61:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float st_floats;
  62:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float * floats;
  63:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  64:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* st_strings;
  65:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* * strings;
  66:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  67:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamResponse():
  68:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length(0), ints(NULL),
  69:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length(0), floats(NULL),
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length(0), strings(NULL)
  71:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  72:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  73:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  75:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  76:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  82:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  83:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
  84:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
  85:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_intsi;
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  91:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  92:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  98:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  99:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 100:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 101:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_floatsi;
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 107:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 108:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 116:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 119:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 120:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 122:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 124:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 125:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 129:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 132:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 133:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
 134:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 135:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 136:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 137:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 138:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 139:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 140:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 142:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 144:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 148:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 151:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 152:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 153:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 154:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 155:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 156:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 157:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 158:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 161:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 163:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 170:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 172:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 175:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 178:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 180:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 181:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 183:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 184:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 310              		.loc 4 184 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL20:
 316              		.loc 4 184 0
 317 0000 0048     		ldr	r0, .L22
 318              	.LVL21:
 319 0002 7047     		bx	lr
 320              	.L23:
 321              		.align	2
 322              	.L22:
 323 0004 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE84:
 326              		.cantunwind
 327              		.fnend
 329              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 330              		.align	1
 331              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 332              		.thumb
 333              		.thumb_func
 335              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 336              		.fnstart
 337              	.LFB85:
 185:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 338              		.loc 4 185 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343              	.LVL22:
 344              		.loc 4 185 0
 345 0000 0048     		ldr	r0, .L25
 346              	.LVL23:
 347 0002 7047     		bx	lr
 348              	.L26:
 349              		.align	2
 350              	.L25:
 351 0004 9D000000 		.word	.LC6
 352              		.cfi_endproc
 353              	.LFE85:
 354              		.cantunwind
 355              		.fnend
 357              		.section	.text._ZN8std_msgs19MultiArrayDimension7getTypeEv,"axG",%progbits,_ZN8std_msgs19MultiArra
 358              		.align	1
 359              		.weak	_ZN8std_msgs19MultiArrayDimension7getTypeEv
 360              		.thumb
 361              		.thumb_func
 363              	_ZN8std_msgs19MultiArrayDimension7getTypeEv:
 364              		.fnstart
 365              	.LFB154:
 366              		.file 5 "./lib/ros_lib/std_msgs/MultiArrayDimension.h"
   1:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #ifndef _ROS_std_msgs_MultiArrayDimension_h
   2:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #define _ROS_std_msgs_MultiArrayDimension_h
   3:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
   4:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
   9:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** {
  11:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  12:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****   class MultiArrayDimension : public ros::Msg
  13:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****   {
  14:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     public:
  15:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       const char* label;
  16:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t size;
  17:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t stride;
  18:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  19:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     MultiArrayDimension():
  20:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       label(""),
  21:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       size(0),
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       stride(0)
  23:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  24:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  25:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     virtual int serialize(unsigned char *outbuffer) const
  27:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  28:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       int offset = 0;
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t length_label = strlen(this->label);
  30:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
  31:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
  32:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, this->label, length_label);
  33:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
  34:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 0) = (this->size >> (8 * 0)) & 0xFF;
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->size >> (8 * 1)) & 0xFF;
  36:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
  37:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->size >> (8 * 3)) & 0xFF;
  38:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
  39:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 0) = (this->stride >> (8 * 0)) & 0xFF;
  40:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->stride >> (8 * 1)) & 0xFF;
  41:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->stride >> (8 * 2)) & 0xFF;
  42:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->stride >> (8 * 3)) & 0xFF;
  43:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
  44:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       return offset;
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  46:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     virtual int deserialize(unsigned char *inbuffer)
  48:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  49:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       int offset = 0;
  50:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t length_label;
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(&length_label, (inbuffer + offset), sizeof(uint32_t));
  52:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       for(unsigned int k= offset; k< offset+length_label; ++k){
  54:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
  55:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       }
  56:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       inbuffer[offset+length_label-1]=0;
  57:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->label = (char *)(inbuffer + offset-1);
  58:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size =  ((uint32_t) (*(inbuffer + offset)));
  60:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  61:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  62:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  63:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
  64:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride =  ((uint32_t) (*(inbuffer + offset)));
  65:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  66:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  67:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  68:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
  69:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****      return offset;
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  71:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  72:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     const char * getType(){ return "std_msgs/MultiArrayDimension"; };
 367              		.loc 5 72 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372              	.LVL24:
 373              		.loc 5 72 0
 374 0000 0048     		ldr	r0, .L28
 375              	.LVL25:
 376 0002 7047     		bx	lr
 377              	.L29:
 378              		.align	2
 379              	.L28:
 380 0004 BE000000 		.word	.LC7
 381              		.cfi_endproc
 382              	.LFE154:
 383              		.cantunwind
 384              		.fnend
 386              		.section	.text._ZN8std_msgs19MultiArrayDimension6getMD5Ev,"axG",%progbits,_ZN8std_msgs19MultiArray
 387              		.align	1
 388              		.weak	_ZN8std_msgs19MultiArrayDimension6getMD5Ev
 389              		.thumb
 390              		.thumb_func
 392              	_ZN8std_msgs19MultiArrayDimension6getMD5Ev:
 393              		.fnstart
 394              	.LFB155:
  73:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     const char * getMD5(){ return "4cd0c83a8683deae40ecdac60e53bfa8"; };
 395              		.loc 5 73 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400              	.LVL26:
 401              		.loc 5 73 0
 402 0000 0048     		ldr	r0, .L31
 403              	.LVL27:
 404 0002 7047     		bx	lr
 405              	.L32:
 406              		.align	2
 407              	.L31:
 408 0004 DB000000 		.word	.LC8
 409              		.cfi_endproc
 410              	.LFE155:
 411              		.cantunwind
 412              		.fnend
 414              		.section	.text._ZNK8std_msgs16MultiArrayLayout9serializeEPh,"axG",%progbits,_ZNK8std_msgs16MultiAr
 415              		.align	1
 416              		.weak	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 417              		.thumb
 418              		.thumb_func
 420              	_ZNK8std_msgs16MultiArrayLayout9serializeEPh:
 421              		.fnstart
 422              	.LFB159:
 423              		.file 6 "./lib/ros_lib/std_msgs/MultiArrayLayout.h"
   1:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #ifndef _ROS_std_msgs_MultiArrayLayout_h
   2:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #define _ROS_std_msgs_MultiArrayLayout_h
   3:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
   4:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include "std_msgs/MultiArrayDimension.h"
   9:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  10:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** {
  12:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  13:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****   class MultiArrayLayout : public ros::Msg
  14:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****   {
  15:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     public:
  16:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint8_t dim_length;
  17:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       std_msgs::MultiArrayDimension st_dim;
  18:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       std_msgs::MultiArrayDimension * dim;
  19:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint32_t data_offset;
  20:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  21:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     MultiArrayLayout():
  22:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length(0), dim(NULL),
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       data_offset(0)
  24:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  25:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
  26:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  27:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     virtual int serialize(unsigned char *outbuffer) const
 424              		.loc 6 27 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              	.LVL28:
 429 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 430              		.save {r3, r4, r5, r6, r7, lr}
 431              	.LCFI0:
 432              		.cfi_def_cfa_offset 24
 433              		.cfi_offset 3, -24
 434              		.cfi_offset 4, -20
 435              		.cfi_offset 5, -16
 436              		.cfi_offset 6, -12
 437              		.cfi_offset 7, -8
 438              		.cfi_offset 14, -4
 439              		.loc 6 27 0
 440 0002 0D46     		mov	r5, r1
  28:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  29:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = dim_length;
 441              		.loc 6 30 0
 442 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  27:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 443              		.loc 6 27 0
 444 0006 0446     		mov	r4, r0
  31:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 445              		.loc 6 31 0
 446 0008 0020     		movs	r0, #0
 447              	.LVL29:
  30:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 448              		.loc 6 30 0
 449 000a 0B70     		strb	r3, [r1]
 450              	.LVL30:
 451              		.loc 6 31 0
 452 000c 4870     		strb	r0, [r1, #1]
 453              	.LVL31:
  32:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 454              		.loc 6 32 0
 455 000e 8870     		strb	r0, [r1, #2]
 456              	.LVL32:
  33:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 457              		.loc 6 33 0
 458 0010 C870     		strb	r0, [r1, #3]
 459              	.LVL33:
 460 0012 0426     		movs	r6, #4
 461              	.LVL34:
 462              	.L35:
 463              	.LBB149:
  34:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 464              		.loc 6 34 0 discriminator 3
 465 0014 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 466 0016 471C     		adds	r7, r0, #1
 467 0018 C0B2     		uxtb	r0, r0
 468 001a 8342     		cmp	r3, r0
 469 001c 05EB0601 		add	r1, r5, r6
 470 0020 08D9     		bls	.L34
  35:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->dim[i].serialize(outbuffer + offset);
 471              		.loc 6 35 0 discriminator 2
 472 0022 A369     		ldr	r3, [r4, #24]
 473 0024 0001     		lsls	r0, r0, #4
 474              	.LVL35:
 475 0026 1A58     		ldr	r2, [r3, r0]
 476 0028 1844     		add	r0, r0, r3
 477 002a 1268     		ldr	r2, [r2]
 478 002c 9047     		blx	r2
 479              	.LVL36:
 480 002e 0644     		add	r6, r6, r0
 481              	.LVL37:
  34:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 482              		.loc 6 34 0 discriminator 2
 483 0030 3846     		mov	r0, r7
 484 0032 EFE7     		b	.L35
 485              	.LVL38:
 486              	.L34:
 487              	.LBE149:
  36:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
  37:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 0) = (this->data_offset >> (8 * 0)) & 0xFF;
 488              		.loc 6 37 0
 489 0034 E369     		ldr	r3, [r4, #28]
  38:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
  39:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 2) = (this->data_offset >> (8 * 2)) & 0xFF;
  40:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 3) = (this->data_offset >> (8 * 3)) & 0xFF;
  41:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
  42:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       return offset;
  43:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
 490              		.loc 6 43 0
 491 0036 301D     		adds	r0, r6, #4
 492              	.LVL39:
  37:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
 493              		.loc 6 37 0
 494 0038 AB55     		strb	r3, [r5, r6]
  38:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
 495              		.loc 6 38 0
 496 003a E369     		ldr	r3, [r4, #28]
 497 003c 1B0A     		lsrs	r3, r3, #8
 498 003e 4B70     		strb	r3, [r1, #1]
  39:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 3) = (this->data_offset >> (8 * 3)) & 0xFF;
 499              		.loc 6 39 0
 500 0040 E38B     		ldrh	r3, [r4, #30]
 501 0042 8B70     		strb	r3, [r1, #2]
  40:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
 502              		.loc 6 40 0
 503 0044 E37F     		ldrb	r3, [r4, #31]	@ zero_extendqisi2
 504 0046 CB70     		strb	r3, [r1, #3]
 505              	.LVL40:
 506              		.loc 6 43 0
 507 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 508              		.cfi_endproc
 509              	.LFE159:
 510              		.fnend
 512              		.section	.text._ZN8std_msgs16MultiArrayLayout7getTypeEv,"axG",%progbits,_ZN8std_msgs16MultiArrayLa
 513              		.align	1
 514              		.weak	_ZN8std_msgs16MultiArrayLayout7getTypeEv
 515              		.thumb
 516              		.thumb_func
 518              	_ZN8std_msgs16MultiArrayLayout7getTypeEv:
 519              		.fnstart
 520              	.LFB161:
  44:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     virtual int deserialize(unsigned char *inbuffer)
  46:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  47:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       int offset = 0;
  48:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint8_t dim_lengthT = *(inbuffer + offset++);
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       if(dim_lengthT > dim_length)
  50:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
  51:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += 3;
  52:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length = dim_lengthT;
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
  56:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset =  ((uint32_t) (*(inbuffer + offset)));
  58:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  59:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  60:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  61:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
  62:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****      return offset;
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
  64:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  65:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     const char * getType(){ return "std_msgs/MultiArrayLayout"; };
 521              		.loc 6 65 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526              	.LVL41:
 527              		.loc 6 65 0
 528 0000 0048     		ldr	r0, .L38
 529              	.LVL42:
 530 0002 7047     		bx	lr
 531              	.L39:
 532              		.align	2
 533              	.L38:
 534 0004 FC000000 		.word	.LC9
 535              		.cfi_endproc
 536              	.LFE161:
 537              		.cantunwind
 538              		.fnend
 540              		.section	.text._ZN8std_msgs16MultiArrayLayout6getMD5Ev,"axG",%progbits,_ZN8std_msgs16MultiArrayLay
 541              		.align	1
 542              		.weak	_ZN8std_msgs16MultiArrayLayout6getMD5Ev
 543              		.thumb
 544              		.thumb_func
 546              	_ZN8std_msgs16MultiArrayLayout6getMD5Ev:
 547              		.fnstart
 548              	.LFB162:
  66:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     const char * getMD5(){ return "0fed2a11c13e11c5571b4e2a995a91a3"; };
 549              		.loc 6 66 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 554              	.LVL43:
 555              		.loc 6 66 0
 556 0000 0048     		ldr	r0, .L41
 557              	.LVL44:
 558 0002 7047     		bx	lr
 559              	.L42:
 560              		.align	2
 561              	.L41:
 562 0004 16010000 		.word	.LC10
 563              		.cfi_endproc
 564              	.LFE162:
 565              		.cantunwind
 566              		.fnend
 568              		.section	.text._ZNK8std_msgs17Float32MultiArray9serializeEPh,"axG",%progbits,_ZNK8std_msgs17Float3
 569              		.align	1
 570              		.weak	_ZNK8std_msgs17Float32MultiArray9serializeEPh
 571              		.thumb
 572              		.thumb_func
 574              	_ZNK8std_msgs17Float32MultiArray9serializeEPh:
 575              		.fnstart
 576              	.LFB166:
 577              		.file 7 "./lib/ros_lib/std_msgs/Float32MultiArray.h"
   1:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #ifndef _ROS_std_msgs_Float32MultiArray_h
   2:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #define _ROS_std_msgs_Float32MultiArray_h
   3:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
   4:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include "std_msgs/MultiArrayLayout.h"
   9:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  10:./lib/ros_lib/std_msgs/Float32MultiArray.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Float32MultiArray.h **** {
  12:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  13:./lib/ros_lib/std_msgs/Float32MultiArray.h ****   class Float32MultiArray : public ros::Msg
  14:./lib/ros_lib/std_msgs/Float32MultiArray.h ****   {
  15:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     public:
  16:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       std_msgs::MultiArrayLayout layout;
  17:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_length;
  18:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       float st_data;
  19:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       float * data;
  20:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  21:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     Float32MultiArray():
  22:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       layout(),
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       data_length(0), data(NULL)
  24:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  25:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
  26:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  27:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     virtual int serialize(unsigned char *outbuffer) const
 578              		.loc 7 27 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              	.LVL45:
 583 0000 70B5     		push	{r4, r5, r6, lr}
 584              		.save {r4, r5, r6, lr}
 585              	.LCFI1:
 586              		.cfi_def_cfa_offset 16
 587              		.cfi_offset 4, -16
 588              		.cfi_offset 5, -12
 589              		.cfi_offset 6, -8
 590              		.cfi_offset 14, -4
 591              		.loc 7 27 0
 592 0002 0446     		mov	r4, r0
  28:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  29:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += this->layout.serialize(outbuffer + offset);
 593              		.loc 7 30 0
 594 0004 0430     		adds	r0, r0, #4
 595              	.LVL46:
  27:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 596              		.loc 7 27 0
 597 0006 0D46     		mov	r5, r1
 598              		.loc 7 30 0
 599 0008 FFF7FEFF 		bl	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 600              	.LVL47:
  31:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = data_length;
 601              		.loc 7 31 0
 602 000c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
  32:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 603              		.loc 7 32 0
 604 0010 0022     		movs	r2, #0
  31:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = data_length;
 605              		.loc 7 31 0
 606 0012 2B54     		strb	r3, [r5, r0]
 607              	.LVL48:
 608              		.loc 7 32 0
 609 0014 2B18     		adds	r3, r5, r0
 610 0016 0430     		adds	r0, r0, #4
 611              	.LVL49:
 612 0018 5A70     		strb	r2, [r3, #1]
 613              	.LVL50:
  33:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 614              		.loc 7 33 0
 615 001a 9A70     		strb	r2, [r3, #2]
  34:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 616              		.loc 7 34 0
 617 001c DA70     		strb	r2, [r3, #3]
 618              	.LVL51:
 619 001e 2B18     		adds	r3, r5, r0
 620              	.LVL52:
 621              	.L45:
 622              	.LBB150:
  35:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
 623              		.loc 7 35 0 discriminator 3
 624 0020 94F82460 		ldrb	r6, [r4, #36]	@ zero_extendqisi2
 625 0024 511C     		adds	r1, r2, #1
 626 0026 D2B2     		uxtb	r2, r2
 627 0028 9642     		cmp	r6, r2
 628 002a A3EB0500 		sub	r0, r3, r5
 629              	.LVL53:
 630 002e 03F10403 		add	r3, r3, #4
 631 0032 0FD9     		bls	.L44
 632              	.LBB151:
  36:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
  37:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         float real;
  38:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         uint32_t base;
  39:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       } u_datai;
  40:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_datai.real = this->data[i];
 633              		.loc 7 40 0 discriminator 2
 634 0034 E06A     		ldr	r0, [r4, #44]
 635              	.LVL54:
  41:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 0) = (u_datai.base >> (8 * 0)) & 0xFF;
 636              		.loc 7 41 0 discriminator 2
 637 0036 50F82220 		ldr	r2, [r0, r2, lsl #2]
  42:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 1) = (u_datai.base >> (8 * 1)) & 0xFF;
 638              		.loc 7 42 0 discriminator 2
 639 003a 100A     		lsrs	r0, r2, #8
  41:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 0) = (u_datai.base >> (8 * 0)) & 0xFF;
 640              		.loc 7 41 0 discriminator 2
 641 003c 03F8042C 		strb	r2, [r3, #-4]
 642              		.loc 7 42 0 discriminator 2
 643 0040 03F8030C 		strb	r0, [r3, #-3]
  43:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 2) = (u_datai.base >> (8 * 2)) & 0xFF;
 644              		.loc 7 43 0 discriminator 2
 645 0044 100C     		lsrs	r0, r2, #16
  44:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 3) = (u_datai.base >> (8 * 3)) & 0xFF;
 646              		.loc 7 44 0 discriminator 2
 647 0046 120E     		lsrs	r2, r2, #24
 648 0048 03F8012C 		strb	r2, [r3, #-1]
 649              	.LVL55:
  43:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 2) = (u_datai.base >> (8 * 2)) & 0xFF;
 650              		.loc 7 43 0 discriminator 2
 651 004c 03F8020C 		strb	r0, [r3, #-2]
 652              	.LBE151:
  35:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 653              		.loc 7 35 0 discriminator 2
 654 0050 0A46     		mov	r2, r1
 655 0052 E5E7     		b	.L45
 656              	.LVL56:
 657              	.L44:
 658              	.LBE150:
  45:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->data[i]);
  46:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
  47:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       return offset;
  48:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
 659              		.loc 7 48 0
 660 0054 70BD     		pop	{r4, r5, r6, pc}
 661              		.cfi_endproc
 662              	.LFE166:
 663              		.fnend
 665              		.section	.text._ZN8std_msgs17Float32MultiArray7getTypeEv,"axG",%progbits,_ZN8std_msgs17Float32Mult
 666              		.align	1
 667              		.weak	_ZN8std_msgs17Float32MultiArray7getTypeEv
 668              		.thumb
 669              		.thumb_func
 671              	_ZN8std_msgs17Float32MultiArray7getTypeEv:
 672              		.fnstart
 673              	.LFB168:
  49:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  52:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       int offset = 0;
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += this->layout.deserialize(inbuffer + offset);
  54:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       if(data_lengthT > data_length)
  56:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
  57:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += 3;
  58:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       data_length = data_lengthT;
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
  60:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
  61:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         float real;
  62:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         uint32_t base;
  63:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       } u_st_data;
  64:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base = 0;
  65:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
  66:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  67:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  68:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  69:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       this->st_data = u_st_data.real;
  70:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->st_data);
  71:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         memcpy( &(this->data[i]), &(this->st_data), sizeof(float));
  72:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
  73:./lib/ros_lib/std_msgs/Float32MultiArray.h ****      return offset;
  74:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
  75:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  76:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     const char * getType(){ return "std_msgs/Float32MultiArray"; };
 674              		.loc 7 76 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		@ link register save eliminated.
 679              	.LVL57:
 680              		.loc 7 76 0
 681 0000 0048     		ldr	r0, .L47
 682              	.LVL58:
 683 0002 7047     		bx	lr
 684              	.L48:
 685              		.align	2
 686              	.L47:
 687 0004 37010000 		.word	.LC11
 688              		.cfi_endproc
 689              	.LFE168:
 690              		.cantunwind
 691              		.fnend
 693              		.section	.text._ZN8std_msgs17Float32MultiArray6getMD5Ev,"axG",%progbits,_ZN8std_msgs17Float32Multi
 694              		.align	1
 695              		.weak	_ZN8std_msgs17Float32MultiArray6getMD5Ev
 696              		.thumb
 697              		.thumb_func
 699              	_ZN8std_msgs17Float32MultiArray6getMD5Ev:
 700              		.fnstart
 701              	.LFB169:
  77:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     const char * getMD5(){ return "6a40e0ffa6a17a503ac3f8616991b1f6"; };
 702              		.loc 7 77 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707              	.LVL59:
 708              		.loc 7 77 0
 709 0000 0048     		ldr	r0, .L50
 710              	.LVL60:
 711 0002 7047     		bx	lr
 712              	.L51:
 713              		.align	2
 714              	.L50:
 715 0004 52010000 		.word	.LC12
 716              		.cfi_endproc
 717              	.LFE169:
 718              		.cantunwind
 719              		.fnend
 721              		.section	.text._ZNK8std_msgs5UInt89serializeEPh,"axG",%progbits,_ZNK8std_msgs5UInt89serializeEPh,c
 722              		.align	1
 723              		.weak	_ZNK8std_msgs5UInt89serializeEPh
 724              		.thumb
 725              		.thumb_func
 727              	_ZNK8std_msgs5UInt89serializeEPh:
 728              		.fnstart
 729              	.LFB173:
 730              		.file 8 "./lib/ros_lib/std_msgs/UInt8.h"
   1:./lib/ros_lib/std_msgs/UInt8.h **** #ifndef _ROS_std_msgs_UInt8_h
   2:./lib/ros_lib/std_msgs/UInt8.h **** #define _ROS_std_msgs_UInt8_h
   3:./lib/ros_lib/std_msgs/UInt8.h **** 
   4:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/UInt8.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/UInt8.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/UInt8.h **** 
   9:./lib/ros_lib/std_msgs/UInt8.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/UInt8.h **** {
  11:./lib/ros_lib/std_msgs/UInt8.h **** 
  12:./lib/ros_lib/std_msgs/UInt8.h ****   class UInt8 : public ros::Msg
  13:./lib/ros_lib/std_msgs/UInt8.h ****   {
  14:./lib/ros_lib/std_msgs/UInt8.h ****     public:
  15:./lib/ros_lib/std_msgs/UInt8.h ****       uint8_t data;
  16:./lib/ros_lib/std_msgs/UInt8.h **** 
  17:./lib/ros_lib/std_msgs/UInt8.h ****     UInt8():
  18:./lib/ros_lib/std_msgs/UInt8.h ****       data(0)
  19:./lib/ros_lib/std_msgs/UInt8.h ****     {
  20:./lib/ros_lib/std_msgs/UInt8.h ****     }
  21:./lib/ros_lib/std_msgs/UInt8.h **** 
  22:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int serialize(unsigned char *outbuffer) const
 731              		.loc 8 22 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              		@ link register save eliminated.
 736              	.LVL61:
  23:./lib/ros_lib/std_msgs/UInt8.h ****     {
  24:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  25:./lib/ros_lib/std_msgs/UInt8.h ****       *(outbuffer + offset + 0) = (this->data >> (8 * 0)) & 0xFF;
 737              		.loc 8 25 0
 738 0000 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  26:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  27:./lib/ros_lib/std_msgs/UInt8.h ****       return offset;
  28:./lib/ros_lib/std_msgs/UInt8.h ****     }
 739              		.loc 8 28 0
 740 0002 0120     		movs	r0, #1
 741              	.LVL62:
  25:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 742              		.loc 8 25 0
 743 0004 0B70     		strb	r3, [r1]
 744              	.LVL63:
 745              		.loc 8 28 0
 746 0006 7047     		bx	lr
 747              		.cfi_endproc
 748              	.LFE173:
 749              		.cantunwind
 750              		.fnend
 752              		.section	.text._ZN8std_msgs5UInt811deserializeEPh,"axG",%progbits,_ZN8std_msgs5UInt811deserializeE
 753              		.align	1
 754              		.weak	_ZN8std_msgs5UInt811deserializeEPh
 755              		.thumb
 756              		.thumb_func
 758              	_ZN8std_msgs5UInt811deserializeEPh:
 759              		.fnstart
 760              	.LFB174:
  29:./lib/ros_lib/std_msgs/UInt8.h **** 
  30:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int deserialize(unsigned char *inbuffer)
 761              		.loc 8 30 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              		@ link register save eliminated.
 766              	.LVL64:
  31:./lib/ros_lib/std_msgs/UInt8.h ****     {
  32:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  33:./lib/ros_lib/std_msgs/UInt8.h ****       this->data =  ((uint8_t) (*(inbuffer + offset)));
 767              		.loc 8 33 0
 768 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 769 0002 0371     		strb	r3, [r0, #4]
 770              	.LVL65:
  34:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  35:./lib/ros_lib/std_msgs/UInt8.h ****      return offset;
  36:./lib/ros_lib/std_msgs/UInt8.h ****     }
 771              		.loc 8 36 0
 772 0004 0120     		movs	r0, #1
 773              	.LVL66:
 774 0006 7047     		bx	lr
 775              		.cfi_endproc
 776              	.LFE174:
 777              		.cantunwind
 778              		.fnend
 780              		.section	.text._ZN8std_msgs5UInt87getTypeEv,"axG",%progbits,_ZN8std_msgs5UInt87getTypeEv,comdat
 781              		.align	1
 782              		.weak	_ZN8std_msgs5UInt87getTypeEv
 783              		.thumb
 784              		.thumb_func
 786              	_ZN8std_msgs5UInt87getTypeEv:
 787              		.fnstart
 788              	.LFB175:
  37:./lib/ros_lib/std_msgs/UInt8.h **** 
  38:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getType(){ return "std_msgs/UInt8"; };
 789              		.loc 8 38 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 794              	.LVL67:
 795              		.loc 8 38 0
 796 0000 0048     		ldr	r0, .L55
 797              	.LVL68:
 798 0002 7047     		bx	lr
 799              	.L56:
 800              		.align	2
 801              	.L55:
 802 0004 73010000 		.word	.LC13
 803              		.cfi_endproc
 804              	.LFE175:
 805              		.cantunwind
 806              		.fnend
 808              		.section	.text._ZN8std_msgs5UInt86getMD5Ev,"axG",%progbits,_ZN8std_msgs5UInt86getMD5Ev,comdat
 809              		.align	1
 810              		.weak	_ZN8std_msgs5UInt86getMD5Ev
 811              		.thumb
 812              		.thumb_func
 814              	_ZN8std_msgs5UInt86getMD5Ev:
 815              		.fnstart
 816              	.LFB176:
  39:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getMD5(){ return "7c8164229e7d2c17eb95e9231617fdee"; };
 817              		.loc 8 39 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		@ link register save eliminated.
 822              	.LVL69:
 823              		.loc 8 39 0
 824 0000 0048     		ldr	r0, .L58
 825              	.LVL70:
 826 0002 7047     		bx	lr
 827              	.L59:
 828              		.align	2
 829              	.L58:
 830 0004 82010000 		.word	.LC14
 831              		.cfi_endproc
 832              	.LFE176:
 833              		.cantunwind
 834              		.fnend
 836              		.section	.text._ZN8std_msgs6Header7getTypeEv,"axG",%progbits,_ZN8std_msgs6Header7getTypeEv,comdat
 837              		.align	1
 838              		.weak	_ZN8std_msgs6Header7getTypeEv
 839              		.thumb
 840              		.thumb_func
 842              	_ZN8std_msgs6Header7getTypeEv:
 843              		.fnstart
 844              	.LFB182:
 845              		.file 9 "./lib/ros_lib/std_msgs/Header.h"
   1:./lib/ros_lib/std_msgs/Header.h **** #ifndef _ROS_std_msgs_Header_h
   2:./lib/ros_lib/std_msgs/Header.h **** #define _ROS_std_msgs_Header_h
   3:./lib/ros_lib/std_msgs/Header.h **** 
   4:./lib/ros_lib/std_msgs/Header.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Header.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Header.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Header.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Header.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Header.h **** 
  10:./lib/ros_lib/std_msgs/Header.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Header.h **** {
  12:./lib/ros_lib/std_msgs/Header.h **** 
  13:./lib/ros_lib/std_msgs/Header.h ****   class Header : public ros::Msg
  14:./lib/ros_lib/std_msgs/Header.h ****   {
  15:./lib/ros_lib/std_msgs/Header.h ****     public:
  16:./lib/ros_lib/std_msgs/Header.h ****       uint32_t seq;
  17:./lib/ros_lib/std_msgs/Header.h ****       ros::Time stamp;
  18:./lib/ros_lib/std_msgs/Header.h ****       const char* frame_id;
  19:./lib/ros_lib/std_msgs/Header.h **** 
  20:./lib/ros_lib/std_msgs/Header.h ****     Header():
  21:./lib/ros_lib/std_msgs/Header.h ****       seq(0),
  22:./lib/ros_lib/std_msgs/Header.h ****       stamp(),
  23:./lib/ros_lib/std_msgs/Header.h ****       frame_id("")
  24:./lib/ros_lib/std_msgs/Header.h ****     {
  25:./lib/ros_lib/std_msgs/Header.h ****     }
  26:./lib/ros_lib/std_msgs/Header.h **** 
  27:./lib/ros_lib/std_msgs/Header.h ****     virtual int serialize(unsigned char *outbuffer) const
  28:./lib/ros_lib/std_msgs/Header.h ****     {
  29:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->seq >> (8 * 0)) & 0xFF;
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
  33:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
  34:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
  38:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
  39:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
  43:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
  44:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  45:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id = strlen(this->frame_id);
  46:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
  47:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  48:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, this->frame_id, length_frame_id);
  49:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  50:./lib/ros_lib/std_msgs/Header.h ****       return offset;
  51:./lib/ros_lib/std_msgs/Header.h ****     }
  52:./lib/ros_lib/std_msgs/Header.h **** 
  53:./lib/ros_lib/std_msgs/Header.h ****     virtual int deserialize(unsigned char *inbuffer)
  54:./lib/ros_lib/std_msgs/Header.h ****     {
  55:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq =  ((uint32_t) (*(inbuffer + offset)));
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  59:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  60:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  64:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  65:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  69:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  70:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  71:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id;
  72:./lib/ros_lib/std_msgs/Header.h ****       memcpy(&length_frame_id, (inbuffer + offset), sizeof(uint32_t));
  73:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  74:./lib/ros_lib/std_msgs/Header.h ****       for(unsigned int k= offset; k< offset+length_frame_id; ++k){
  75:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
  76:./lib/ros_lib/std_msgs/Header.h ****       }
  77:./lib/ros_lib/std_msgs/Header.h ****       inbuffer[offset+length_frame_id-1]=0;
  78:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
  79:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  80:./lib/ros_lib/std_msgs/Header.h ****      return offset;
  81:./lib/ros_lib/std_msgs/Header.h ****     }
  82:./lib/ros_lib/std_msgs/Header.h **** 
  83:./lib/ros_lib/std_msgs/Header.h ****     const char * getType(){ return "std_msgs/Header"; };
 846              		.loc 9 83 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850              		@ link register save eliminated.
 851              	.LVL71:
 852              		.loc 9 83 0
 853 0000 0048     		ldr	r0, .L61
 854              	.LVL72:
 855 0002 7047     		bx	lr
 856              	.L62:
 857              		.align	2
 858              	.L61:
 859 0004 A3010000 		.word	.LC15
 860              		.cfi_endproc
 861              	.LFE182:
 862              		.cantunwind
 863              		.fnend
 865              		.section	.text._ZN8std_msgs6Header6getMD5Ev,"axG",%progbits,_ZN8std_msgs6Header6getMD5Ev,comdat
 866              		.align	1
 867              		.weak	_ZN8std_msgs6Header6getMD5Ev
 868              		.thumb
 869              		.thumb_func
 871              	_ZN8std_msgs6Header6getMD5Ev:
 872              		.fnstart
 873              	.LFB183:
  84:./lib/ros_lib/std_msgs/Header.h ****     const char * getMD5(){ return "2176decaecbce78abc3b96ef049fabed"; };
 874              		.loc 9 84 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878              		@ link register save eliminated.
 879              	.LVL73:
 880              		.loc 9 84 0
 881 0000 0048     		ldr	r0, .L64
 882              	.LVL74:
 883 0002 7047     		bx	lr
 884              	.L65:
 885              		.align	2
 886              	.L64:
 887 0004 B3010000 		.word	.LC16
 888              		.cfi_endproc
 889              	.LFE183:
 890              		.cantunwind
 891              		.fnend
 893              		.section	.text._ZN11sensor_msgs3Joy7getTypeEv,"axG",%progbits,_ZN11sensor_msgs3Joy7getTypeEv,comda
 894              		.align	1
 895              		.weak	_ZN11sensor_msgs3Joy7getTypeEv
 896              		.thumb
 897              		.thumb_func
 899              	_ZN11sensor_msgs3Joy7getTypeEv:
 900              		.fnstart
 901              	.LFB189:
 902              		.file 10 "./lib/ros_lib/sensor_msgs/Joy.h"
   1:./lib/ros_lib/sensor_msgs/Joy.h **** #ifndef _ROS_sensor_msgs_Joy_h
   2:./lib/ros_lib/sensor_msgs/Joy.h **** #define _ROS_sensor_msgs_Joy_h
   3:./lib/ros_lib/sensor_msgs/Joy.h **** 
   4:./lib/ros_lib/sensor_msgs/Joy.h **** #include <stdint.h>
   5:./lib/ros_lib/sensor_msgs/Joy.h **** #include <string.h>
   6:./lib/ros_lib/sensor_msgs/Joy.h **** #include <stdlib.h>
   7:./lib/ros_lib/sensor_msgs/Joy.h **** #include "ros/msg.h"
   8:./lib/ros_lib/sensor_msgs/Joy.h **** #include "std_msgs/Header.h"
   9:./lib/ros_lib/sensor_msgs/Joy.h **** 
  10:./lib/ros_lib/sensor_msgs/Joy.h **** namespace sensor_msgs
  11:./lib/ros_lib/sensor_msgs/Joy.h **** {
  12:./lib/ros_lib/sensor_msgs/Joy.h **** 
  13:./lib/ros_lib/sensor_msgs/Joy.h ****   class Joy : public ros::Msg
  14:./lib/ros_lib/sensor_msgs/Joy.h ****   {
  15:./lib/ros_lib/sensor_msgs/Joy.h ****     public:
  16:./lib/ros_lib/sensor_msgs/Joy.h ****       std_msgs::Header header;
  17:./lib/ros_lib/sensor_msgs/Joy.h ****       uint8_t axes_length;
  18:./lib/ros_lib/sensor_msgs/Joy.h ****       float st_axes;
  19:./lib/ros_lib/sensor_msgs/Joy.h ****       float * axes;
  20:./lib/ros_lib/sensor_msgs/Joy.h ****       uint8_t buttons_length;
  21:./lib/ros_lib/sensor_msgs/Joy.h ****       int32_t st_buttons;
  22:./lib/ros_lib/sensor_msgs/Joy.h ****       int32_t * buttons;
  23:./lib/ros_lib/sensor_msgs/Joy.h **** 
  24:./lib/ros_lib/sensor_msgs/Joy.h ****     Joy():
  25:./lib/ros_lib/sensor_msgs/Joy.h ****       header(),
  26:./lib/ros_lib/sensor_msgs/Joy.h ****       axes_length(0), axes(NULL),
  27:./lib/ros_lib/sensor_msgs/Joy.h ****       buttons_length(0), buttons(NULL)
  28:./lib/ros_lib/sensor_msgs/Joy.h ****     {
  29:./lib/ros_lib/sensor_msgs/Joy.h ****     }
  30:./lib/ros_lib/sensor_msgs/Joy.h **** 
  31:./lib/ros_lib/sensor_msgs/Joy.h ****     virtual int serialize(unsigned char *outbuffer) const
  32:./lib/ros_lib/sensor_msgs/Joy.h ****     {
  33:./lib/ros_lib/sensor_msgs/Joy.h ****       int offset = 0;
  34:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += this->header.serialize(outbuffer + offset);
  35:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = axes_length;
  36:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
  37:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
  38:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
  39:./lib/ros_lib/sensor_msgs/Joy.h ****       for( uint8_t i = 0; i < axes_length; i++){
  40:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
  41:./lib/ros_lib/sensor_msgs/Joy.h ****         float real;
  42:./lib/ros_lib/sensor_msgs/Joy.h ****         uint32_t base;
  43:./lib/ros_lib/sensor_msgs/Joy.h ****       } u_axesi;
  44:./lib/ros_lib/sensor_msgs/Joy.h ****       u_axesi.real = this->axes[i];
  45:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 0) = (u_axesi.base >> (8 * 0)) & 0xFF;
  46:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 1) = (u_axesi.base >> (8 * 1)) & 0xFF;
  47:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 2) = (u_axesi.base >> (8 * 2)) & 0xFF;
  48:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 3) = (u_axesi.base >> (8 * 3)) & 0xFF;
  49:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->axes[i]);
  50:./lib/ros_lib/sensor_msgs/Joy.h ****       }
  51:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = buttons_length;
  52:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
  53:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
  54:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
  55:./lib/ros_lib/sensor_msgs/Joy.h ****       for( uint8_t i = 0; i < buttons_length; i++){
  56:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
  57:./lib/ros_lib/sensor_msgs/Joy.h ****         int32_t real;
  58:./lib/ros_lib/sensor_msgs/Joy.h ****         uint32_t base;
  59:./lib/ros_lib/sensor_msgs/Joy.h ****       } u_buttonsi;
  60:./lib/ros_lib/sensor_msgs/Joy.h ****       u_buttonsi.real = this->buttons[i];
  61:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 0) = (u_buttonsi.base >> (8 * 0)) & 0xFF;
  62:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 1) = (u_buttonsi.base >> (8 * 1)) & 0xFF;
  63:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 2) = (u_buttonsi.base >> (8 * 2)) & 0xFF;
  64:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 3) = (u_buttonsi.base >> (8 * 3)) & 0xFF;
  65:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->buttons[i]);
  66:./lib/ros_lib/sensor_msgs/Joy.h ****       }
  67:./lib/ros_lib/sensor_msgs/Joy.h ****       return offset;
  68:./lib/ros_lib/sensor_msgs/Joy.h ****     }
  69:./lib/ros_lib/sensor_msgs/Joy.h **** 
  70:./lib/ros_lib/sensor_msgs/Joy.h ****     virtual int deserialize(unsigned char *inbuffer)
  71:./lib/ros_lib/sensor_msgs/Joy.h ****     {
  72:./lib/ros_lib/sensor_msgs/Joy.h ****       int offset = 0;
  73:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += this->header.deserialize(inbuffer + offset);
  74:./lib/ros_lib/sensor_msgs/Joy.h ****       uint8_t axes_lengthT = *(inbuffer + offset++);
  75:./lib/ros_lib/sensor_msgs/Joy.h ****       if(axes_lengthT > axes_length)
  76:./lib/ros_lib/sensor_msgs/Joy.h ****         this->axes = (float*)realloc(this->axes, axes_lengthT * sizeof(float));
  77:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += 3;
  78:./lib/ros_lib/sensor_msgs/Joy.h ****       axes_length = axes_lengthT;
  79:./lib/ros_lib/sensor_msgs/Joy.h ****       for( uint8_t i = 0; i < axes_length; i++){
  80:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
  81:./lib/ros_lib/sensor_msgs/Joy.h ****         float real;
  82:./lib/ros_lib/sensor_msgs/Joy.h ****         uint32_t base;
  83:./lib/ros_lib/sensor_msgs/Joy.h ****       } u_st_axes;
  84:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_axes.base = 0;
  85:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_axes.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
  86:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_axes.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  87:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_axes.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  88:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_axes.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  89:./lib/ros_lib/sensor_msgs/Joy.h ****       this->st_axes = u_st_axes.real;
  90:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->st_axes);
  91:./lib/ros_lib/sensor_msgs/Joy.h ****         memcpy( &(this->axes[i]), &(this->st_axes), sizeof(float));
  92:./lib/ros_lib/sensor_msgs/Joy.h ****       }
  93:./lib/ros_lib/sensor_msgs/Joy.h ****       uint8_t buttons_lengthT = *(inbuffer + offset++);
  94:./lib/ros_lib/sensor_msgs/Joy.h ****       if(buttons_lengthT > buttons_length)
  95:./lib/ros_lib/sensor_msgs/Joy.h ****         this->buttons = (int32_t*)realloc(this->buttons, buttons_lengthT * sizeof(int32_t));
  96:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += 3;
  97:./lib/ros_lib/sensor_msgs/Joy.h ****       buttons_length = buttons_lengthT;
  98:./lib/ros_lib/sensor_msgs/Joy.h ****       for( uint8_t i = 0; i < buttons_length; i++){
  99:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 100:./lib/ros_lib/sensor_msgs/Joy.h ****         int32_t real;
 101:./lib/ros_lib/sensor_msgs/Joy.h ****         uint32_t base;
 102:./lib/ros_lib/sensor_msgs/Joy.h ****       } u_st_buttons;
 103:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_buttons.base = 0;
 104:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_buttons.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 105:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_buttons.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 106:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_buttons.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 107:./lib/ros_lib/sensor_msgs/Joy.h ****       u_st_buttons.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 108:./lib/ros_lib/sensor_msgs/Joy.h ****       this->st_buttons = u_st_buttons.real;
 109:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->st_buttons);
 110:./lib/ros_lib/sensor_msgs/Joy.h ****         memcpy( &(this->buttons[i]), &(this->st_buttons), sizeof(int32_t));
 111:./lib/ros_lib/sensor_msgs/Joy.h ****       }
 112:./lib/ros_lib/sensor_msgs/Joy.h ****      return offset;
 113:./lib/ros_lib/sensor_msgs/Joy.h ****     }
 114:./lib/ros_lib/sensor_msgs/Joy.h **** 
 115:./lib/ros_lib/sensor_msgs/Joy.h ****     const char * getType(){ return "sensor_msgs/Joy"; };
 903              		.loc 10 115 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907              		@ link register save eliminated.
 908              	.LVL75:
 909              		.loc 10 115 0
 910 0000 0048     		ldr	r0, .L67
 911              	.LVL76:
 912 0002 7047     		bx	lr
 913              	.L68:
 914              		.align	2
 915              	.L67:
 916 0004 D4010000 		.word	.LC17
 917              		.cfi_endproc
 918              	.LFE189:
 919              		.cantunwind
 920              		.fnend
 922              		.section	.text._ZN11sensor_msgs3Joy6getMD5Ev,"axG",%progbits,_ZN11sensor_msgs3Joy6getMD5Ev,comdat
 923              		.align	1
 924              		.weak	_ZN11sensor_msgs3Joy6getMD5Ev
 925              		.thumb
 926              		.thumb_func
 928              	_ZN11sensor_msgs3Joy6getMD5Ev:
 929              		.fnstart
 930              	.LFB190:
 116:./lib/ros_lib/sensor_msgs/Joy.h ****     const char * getMD5(){ return "5a9ea5f83505693b71e785041e67a8bb"; };
 931              		.loc 10 116 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935              		@ link register save eliminated.
 936              	.LVL77:
 937              		.loc 10 116 0
 938 0000 0048     		ldr	r0, .L70
 939              	.LVL78:
 940 0002 7047     		bx	lr
 941              	.L71:
 942              		.align	2
 943              	.L70:
 944 0004 E4010000 		.word	.LC18
 945              		.cfi_endproc
 946              	.LFE190:
 947              		.cantunwind
 948              		.fnend
 950              		.global	__aeabi_fadd
 951              		.text
 952              		.align	1
 953              		.global	_Z8motor_cbRKN11sensor_msgs3JoyE
 954              		.thumb
 955              		.thumb_func
 957              	_Z8motor_cbRKN11sensor_msgs3JoyE:
 958              		.fnstart
 959              	.LFB199:
 960              		.file 11 "src/main.cpp"
   1:src/main.cpp  **** #include <stm32f10x.h>
   2:src/main.cpp  **** 
   3:src/main.cpp  **** #include <stdio.h>
   4:src/main.cpp  **** 
   5:src/main.cpp  **** #include "motor.h"
   6:src/main.cpp  **** #include "motorSettings.h"
   7:src/main.cpp  **** #include "led.h"
   8:src/main.cpp  **** #include "encoder.h"
   9:src/main.cpp  **** #include "stm32_time.h"
  10:src/main.cpp  **** 
  11:src/main.cpp  **** 
  12:src/main.cpp  **** #include <ros.h>
  13:src/main.cpp  **** #include <std_msgs/MultiArrayDimension.h>
  14:src/main.cpp  **** #include <std_msgs/Float32MultiArray.h>
  15:src/main.cpp  **** #include <std_msgs/UInt8.h>
  16:src/main.cpp  **** #include <sensor_msgs/Joy.h>
  17:src/main.cpp  **** #include <roberto_msgs/MotorState.h>
  18:src/main.cpp  **** 
  19:src/main.cpp  **** 
  20:src/main.cpp  **** 
  21:src/main.cpp  **** /* Private function prototypes -----------------------------------------------*/
  22:src/main.cpp  **** 
  23:src/main.cpp  **** 
  24:src/main.cpp  **** __IO uint8_t Rx_Idx = 0x00;
  25:src/main.cpp  **** uint8_t slaveAddress;
  26:src/main.cpp  **** uint8_t RxBuffer [RXBUFFERSIZE] = {0};
  27:src/main.cpp  **** __IO uint8_t NumberOfByteToReceive = 0x00;
  28:src/main.cpp  **** __IO uint8_t GenerateStartStatus = 0x00;
  29:src/main.cpp  **** 
  30:src/main.cpp  **** motor *servo_left;
  31:src/main.cpp  **** motor *servo_right;
  32:src/main.cpp  **** motor *front_right;
  33:src/main.cpp  **** motor *front_left;
  34:src/main.cpp  **** motor *rear_right;
  35:src/main.cpp  **** motor *rear_left;
  36:src/main.cpp  **** 
  37:src/main.cpp  **** 
  38:src/main.cpp  **** ros::NodeHandle nh;
  39:src/main.cpp  **** 
  40:src/main.cpp  **** void led_cb( const std_msgs::UInt8& cmd_msg){
  41:src/main.cpp  ****   led_set(cmd_msg.data);
  42:src/main.cpp  **** }
  43:src/main.cpp  **** 
  44:src/main.cpp  **** 
  45:src/main.cpp  **** 
  46:src/main.cpp  **** void motor_cb( const sensor_msgs::Joy& cmd_msg){
 961              		.loc 11 46 0
 962              		.cfi_startproc
 963              		@ args = 0, pretend = 0, frame = 0
 964              		@ frame_needed = 0, uses_anonymous_args = 0
 965              	.LVL79:
  47:src/main.cpp  ****   front_right->setReference(cmd_msg.axes[1]*2);
 966              		.loc 11 47 0
 967 0000 036A     		ldr	r3, [r0, #32]
  46:src/main.cpp  ****   front_right->setReference(cmd_msg.axes[1]*2);
 968              		.loc 11 46 0
 969 0002 70B5     		push	{r4, r5, r6, lr}
 970              		.save {r4, r5, r6, lr}
 971              	.LCFI2:
 972              		.cfi_def_cfa_offset 16
 973              		.cfi_offset 4, -16
 974              		.cfi_offset 5, -12
 975              		.cfi_offset 6, -8
 976              		.cfi_offset 14, -4
 977              		.loc 11 47 0
 978 0004 5968     		ldr	r1, [r3, #4]	@ float
  46:src/main.cpp  ****   front_right->setReference(cmd_msg.axes[1]*2);
 979              		.loc 11 46 0
 980 0006 0446     		mov	r4, r0
 981              		.loc 11 47 0
 982 0008 0846     		mov	r0, r1
 983              	.LVL80:
 984 000a FFF7FEFF 		bl	__aeabi_fadd
 985              	.LVL81:
 986 000e 154D     		ldr	r5, .L73
 987 0010 0146     		mov	r1, r0
 988 0012 2E68     		ldr	r6, [r5]
 989 0014 3368     		ldr	r3, [r6]
 990 0016 3046     		mov	r0, r6
 991 0018 5B69     		ldr	r3, [r3, #20]
 992 001a 9847     		blx	r3
 993              	.LVL82:
  48:src/main.cpp  ****   front_left->setReference(cmd_msg.axes[1]*2);
 994              		.loc 11 48 0
 995 001c 236A     		ldr	r3, [r4, #32]
 996 001e 6E68     		ldr	r6, [r5, #4]
 997 0020 5968     		ldr	r1, [r3, #4]	@ float
 998 0022 0846     		mov	r0, r1
 999 0024 FFF7FEFF 		bl	__aeabi_fadd
 1000              	.LVL83:
 1001 0028 3368     		ldr	r3, [r6]
 1002 002a 0146     		mov	r1, r0
 1003 002c 5B69     		ldr	r3, [r3, #20]
 1004 002e 3046     		mov	r0, r6
 1005 0030 9847     		blx	r3
 1006              	.LVL84:
  49:src/main.cpp  ****   rear_right->setReference(cmd_msg.axes[1]*2);
 1007              		.loc 11 49 0
 1008 0032 236A     		ldr	r3, [r4, #32]
 1009 0034 AE68     		ldr	r6, [r5, #8]
 1010 0036 5968     		ldr	r1, [r3, #4]	@ float
 1011 0038 0846     		mov	r0, r1
 1012 003a FFF7FEFF 		bl	__aeabi_fadd
 1013              	.LVL85:
 1014 003e 3368     		ldr	r3, [r6]
 1015 0040 0146     		mov	r1, r0
 1016 0042 5B69     		ldr	r3, [r3, #20]
 1017 0044 3046     		mov	r0, r6
 1018 0046 9847     		blx	r3
 1019              	.LVL86:
  50:src/main.cpp  ****   rear_left->setReference(cmd_msg.axes[1]*2);
 1020              		.loc 11 50 0
 1021 0048 236A     		ldr	r3, [r4, #32]
 1022 004a ED68     		ldr	r5, [r5, #12]
 1023 004c 5968     		ldr	r1, [r3, #4]	@ float
 1024 004e 0846     		mov	r0, r1
 1025 0050 FFF7FEFF 		bl	__aeabi_fadd
 1026              	.LVL87:
 1027 0054 2B68     		ldr	r3, [r5]
 1028 0056 0146     		mov	r1, r0
 1029 0058 5B69     		ldr	r3, [r3, #20]
 1030 005a 2846     		mov	r0, r5
  51:src/main.cpp  **** }
 1031              		.loc 11 51 0
 1032 005c BDE87040 		pop	{r4, r5, r6, lr}
 1033              	.LCFI3:
 1034              		.cfi_restore 14
 1035              		.cfi_restore 6
 1036              		.cfi_restore 5
 1037              		.cfi_restore 4
 1038              		.cfi_def_cfa_offset 0
 1039              	.LVL88:
  50:src/main.cpp  ****   rear_left->setReference(cmd_msg.axes[1]*2);
 1040              		.loc 11 50 0
 1041 0060 1847     		bx	r3	@ indirect register sibling call
 1042              	.LVL89:
 1043              	.L74:
 1044 0062 00BF     		.align	2
 1045              	.L73:
 1046 0064 00000000 		.word	.LANCHOR1
 1047              		.cfi_endproc
 1048              	.LFE199:
 1049              		.fnend
 1051              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh,"axG",%progbits,_ZN3ros10Subscri
 1052              		.align	1
 1053              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 1054              		.thumb
 1055              		.thumb_func
 1057              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:
 1058              		.fnstart
 1059              	.LFB230:
 1060              		.file 12 "./lib/ros_lib/ros/subscriber.h"
   1:./lib/ros_lib/ros/subscriber.h **** /* 
   2:./lib/ros_lib/ros/subscriber.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/subscriber.h ****  *
   4:./lib/ros_lib/ros/subscriber.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/subscriber.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/subscriber.h ****  *
   7:./lib/ros_lib/ros/subscriber.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/subscriber.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/subscriber.h ****  * are met:
  10:./lib/ros_lib/ros/subscriber.h ****  *
  11:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/subscriber.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/subscriber.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/subscriber.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/subscriber.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/subscriber.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/subscriber.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/subscriber.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/subscriber.h ****  *
  21:./lib/ros_lib/ros/subscriber.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/subscriber.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/subscriber.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/subscriber.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/subscriber.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/subscriber.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/subscriber.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/subscriber.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/subscriber.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/subscriber.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/subscriber.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/subscriber.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/subscriber.h ****  */
  34:./lib/ros_lib/ros/subscriber.h **** 
  35:./lib/ros_lib/ros/subscriber.h **** #ifndef ROS_SUBSCRIBER_H_
  36:./lib/ros_lib/ros/subscriber.h **** #define ROS_SUBSCRIBER_H_
  37:./lib/ros_lib/ros/subscriber.h **** 
  38:./lib/ros_lib/ros/subscriber.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/subscriber.h **** 
  40:./lib/ros_lib/ros/subscriber.h **** namespace ros {
  41:./lib/ros_lib/ros/subscriber.h **** 
  42:./lib/ros_lib/ros/subscriber.h ****   /* Base class for objects subscribers. */
  43:./lib/ros_lib/ros/subscriber.h ****   class Subscriber_
  44:./lib/ros_lib/ros/subscriber.h ****   {
  45:./lib/ros_lib/ros/subscriber.h ****     public:
  46:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char *data)=0;
  47:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType()=0;
  48:./lib/ros_lib/ros/subscriber.h **** 
  49:./lib/ros_lib/ros/subscriber.h ****       // id_ is set by NodeHandle when we advertise 
  50:./lib/ros_lib/ros/subscriber.h ****       int id_;
  51:./lib/ros_lib/ros/subscriber.h **** 
  52:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType()=0;
  53:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5()=0;
  54:./lib/ros_lib/ros/subscriber.h ****       const char * topic_;
  55:./lib/ros_lib/ros/subscriber.h ****   };
  56:./lib/ros_lib/ros/subscriber.h **** 
  57:./lib/ros_lib/ros/subscriber.h **** 
  58:./lib/ros_lib/ros/subscriber.h ****   /* Actual subscriber, templated on message type. */
  59:./lib/ros_lib/ros/subscriber.h ****   template<typename MsgT>
  60:./lib/ros_lib/ros/subscriber.h ****   class Subscriber: public Subscriber_{
  61:./lib/ros_lib/ros/subscriber.h ****     public:
  62:./lib/ros_lib/ros/subscriber.h ****       typedef void(*CallbackT)(const MsgT&);
  63:./lib/ros_lib/ros/subscriber.h ****       MsgT msg;
  64:./lib/ros_lib/ros/subscriber.h **** 
  65:./lib/ros_lib/ros/subscriber.h ****       Subscriber(const char * topic_name, CallbackT cb, int endpoint=rosserial_msgs::TopicInfo::ID_
  66:./lib/ros_lib/ros/subscriber.h ****         cb_(cb),
  67:./lib/ros_lib/ros/subscriber.h ****         endpoint_(endpoint)
  68:./lib/ros_lib/ros/subscriber.h ****       {
  69:./lib/ros_lib/ros/subscriber.h ****         topic_ = topic_name;
  70:./lib/ros_lib/ros/subscriber.h ****       };
  71:./lib/ros_lib/ros/subscriber.h **** 
  72:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char* data){
 1061              		.loc 12 72 0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 1065              		@ link register save eliminated.
 1066              	.LVL90:
 1067              	.LBB152:
 1068              	.LBB153:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 1069              		.loc 8 33 0
 1070 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1071              	.LBE153:
 1072              	.LBE152:
  73:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
  74:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 1073              		.loc 12 74 0
 1074 0002 0C30     		adds	r0, r0, #12
 1075              	.LVL91:
 1076              	.LBB155:
 1077              	.LBB154:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 1078              		.loc 8 33 0
 1079 0004 0371     		strb	r3, [r0, #4]
 1080              	.LVL92:
 1081              	.LBE154:
 1082              	.LBE155:
 1083              		.loc 12 74 0
 1084 0006 8368     		ldr	r3, [r0, #8]
 1085 0008 1847     		bx	r3	@ indirect register sibling call
 1086              	.LVL93:
 1087              		.cfi_endproc
 1088              	.LFE230:
 1089              		.cantunwind
 1090              		.fnend
 1092              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv,"axG",%progbits,_ZN3ros10
 1093              		.align	1
 1094              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 1095              		.thumb
 1096              		.thumb_func
 1098              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:
 1099              		.fnstart
 1100              	.LFB231:
  75:./lib/ros_lib/ros/subscriber.h ****       }
  76:./lib/ros_lib/ros/subscriber.h **** 
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType(){ return this->msg.getType(); }
  78:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
  79:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1101              		.loc 12 79 0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 0
 1104              		@ frame_needed = 0, uses_anonymous_args = 0
 1105              		@ link register save eliminated.
 1106              	.LVL94:
 1107              		.loc 12 79 0
 1108 0000 8069     		ldr	r0, [r0, #24]
 1109              	.LVL95:
 1110 0002 7047     		bx	lr
 1111              		.cfi_endproc
 1112              	.LFE231:
 1113              		.cantunwind
 1114              		.fnend
 1116              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv,"axG",%progbits,_ZN3ros10Subsc
 1117              		.align	1
 1118              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 1119              		.thumb
 1120              		.thumb_func
 1122              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:
 1123              		.fnstart
 1124              	.LFB232:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1125              		.loc 12 77 0
 1126              		.cfi_startproc
 1127              		@ args = 0, pretend = 0, frame = 0
 1128              		@ frame_needed = 0, uses_anonymous_args = 0
 1129              		@ link register save eliminated.
 1130              	.LVL96:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1131              		.loc 12 77 0
 1132 0000 0048     		ldr	r0, .L78
 1133              	.LVL97:
 1134 0002 7047     		bx	lr
 1135              	.L79:
 1136              		.align	2
 1137              	.L78:
 1138 0004 73010000 		.word	.LC13
 1139              		.cfi_endproc
 1140              	.LFE232:
 1141              		.cantunwind
 1142              		.fnend
 1144              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev,"axG",%progbits,_ZN3ros10Subscri
 1145              		.align	1
 1146              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 1147              		.thumb
 1148              		.thumb_func
 1150              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:
 1151              		.fnstart
 1152              	.LFB233:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1153              		.loc 12 78 0
 1154              		.cfi_startproc
 1155              		@ args = 0, pretend = 0, frame = 0
 1156              		@ frame_needed = 0, uses_anonymous_args = 0
 1157              		@ link register save eliminated.
 1158              	.LVL98:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1159              		.loc 12 78 0
 1160 0000 0048     		ldr	r0, .L81
 1161              	.LVL99:
 1162 0002 7047     		bx	lr
 1163              	.L82:
 1164              		.align	2
 1165              	.L81:
 1166 0004 82010000 		.word	.LC14
 1167              		.cfi_endproc
 1168              	.LFE233:
 1169              		.cantunwind
 1170              		.fnend
 1172              		.section	.text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE15getEndpointTypeEv,"axG",%progbits,_ZN3ros
 1173              		.align	1
 1174              		.weak	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE15getEndpointTypeEv
 1175              		.thumb
 1176              		.thumb_func
 1178              	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE15getEndpointTypeEv:
 1179              		.fnstart
 1180              	.LFB235:
 1181              		.loc 12 79 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 0, uses_anonymous_args = 0
 1185              		@ link register save eliminated.
 1186              	.LVL100:
 1187              		.loc 12 79 0
 1188 0000 006C     		ldr	r0, [r0, #64]
 1189              	.LVL101:
 1190 0002 7047     		bx	lr
 1191              		.cfi_endproc
 1192              	.LFE235:
 1193              		.cantunwind
 1194              		.fnend
 1196              		.section	.text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv,"axG",%progbits,_ZN3ros10Sub
 1197              		.align	1
 1198              		.weak	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv
 1199              		.thumb
 1200              		.thumb_func
 1202              	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv:
 1203              		.fnstart
 1204              	.LFB236:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1205              		.loc 12 77 0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 0
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
 1209              		@ link register save eliminated.
 1210              	.LVL102:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1211              		.loc 12 77 0
 1212 0000 0048     		ldr	r0, .L85
 1213              	.LVL103:
 1214 0002 7047     		bx	lr
 1215              	.L86:
 1216              		.align	2
 1217              	.L85:
 1218 0004 D4010000 		.word	.LC17
 1219              		.cfi_endproc
 1220              	.LFE236:
 1221              		.cantunwind
 1222              		.fnend
 1224              		.section	.text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev,"axG",%progbits,_ZN3ros10Subsc
 1225              		.align	1
 1226              		.weak	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev
 1227              		.thumb
 1228              		.thumb_func
 1230              	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev:
 1231              		.fnstart
 1232              	.LFB237:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1233              		.loc 12 78 0
 1234              		.cfi_startproc
 1235              		@ args = 0, pretend = 0, frame = 0
 1236              		@ frame_needed = 0, uses_anonymous_args = 0
 1237              		@ link register save eliminated.
 1238              	.LVL104:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1239              		.loc 12 78 0
 1240 0000 0048     		ldr	r0, .L88
 1241              	.LVL105:
 1242 0002 7047     		bx	lr
 1243              	.L89:
 1244              		.align	2
 1245              	.L88:
 1246 0004 E4010000 		.word	.LC18
 1247              		.cfi_endproc
 1248              	.LFE237:
 1249              		.cantunwind
 1250              		.fnend
 1252              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv,"axG",%pr
 1253              		.align	1
 1254              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
 1255              		.thumb
 1256              		.thumb_func
 1258              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:
 1259              		.fnstart
 1260              	.LFB238:
 1261              		.file 13 "./lib/ros_lib/ros/node_handle.h"
   1:./lib/ros_lib/ros/node_handle.h **** /*
   2:./lib/ros_lib/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/node_handle.h ****  *
   4:./lib/ros_lib/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/node_handle.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/node_handle.h ****  *
   7:./lib/ros_lib/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/node_handle.h ****  * are met:
  10:./lib/ros_lib/ros/node_handle.h ****  *
  11:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/node_handle.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/node_handle.h ****  *
  21:./lib/ros_lib/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/node_handle.h ****  */
  34:./lib/ros_lib/ros/node_handle.h **** 
  35:./lib/ros_lib/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:./lib/ros_lib/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:./lib/ros_lib/ros/node_handle.h **** 
  38:./lib/ros_lib/ros/node_handle.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/node_handle.h **** 
  40:./lib/ros_lib/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:./lib/ros_lib/ros/node_handle.h **** 
  45:./lib/ros_lib/ros/node_handle.h **** #define SYNC_SECONDS        5
  46:./lib/ros_lib/ros/node_handle.h **** 
  47:./lib/ros_lib/ros/node_handle.h **** #define MODE_FIRST_FF       0
  48:./lib/ros_lib/ros/node_handle.h **** /*
  49:./lib/ros_lib/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  50:./lib/ros_lib/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  51:./lib/ros_lib/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  52:./lib/ros_lib/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  53:./lib/ros_lib/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  54:./lib/ros_lib/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  55:./lib/ros_lib/ros/node_handle.h ****  */
  56:./lib/ros_lib/ros/node_handle.h **** #define MODE_PROTOCOL_VER   1
  57:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER1		0xff // through groovy
  58:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER2		0xfe // in hydro
  59:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER 		PROTOCOL_VER2
  60:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_L         2
  61:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_H         3
  62:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_CHECKSUM  4   // checksum for msg size received from size L and H
  63:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_L        5   // waiting for topic id
  64:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_H        6
  65:./lib/ros_lib/ros/node_handle.h **** #define MODE_MESSAGE        7
  66:./lib/ros_lib/ros/node_handle.h **** #define MODE_MSG_CHECKSUM   8   // checksum for msg and topic id
  67:./lib/ros_lib/ros/node_handle.h **** 
  68:./lib/ros_lib/ros/node_handle.h **** 
  69:./lib/ros_lib/ros/node_handle.h **** #define MSG_TIMEOUT 20  //20 milliseconds to recieve all of message data
  70:./lib/ros_lib/ros/node_handle.h **** 
  71:./lib/ros_lib/ros/node_handle.h **** #include "msg.h"
  72:./lib/ros_lib/ros/node_handle.h **** 
  73:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  74:./lib/ros_lib/ros/node_handle.h **** 
  75:./lib/ros_lib/ros/node_handle.h ****   class NodeHandleBase_{
  76:./lib/ros_lib/ros/node_handle.h ****     public:
  77:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg* msg)=0;
  78:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce()=0;
  79:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected()=0;
  80:./lib/ros_lib/ros/node_handle.h ****     };
  81:./lib/ros_lib/ros/node_handle.h **** }
  82:./lib/ros_lib/ros/node_handle.h **** 
  83:./lib/ros_lib/ros/node_handle.h **** #include "publisher.h"
  84:./lib/ros_lib/ros/node_handle.h **** #include "subscriber.h"
  85:./lib/ros_lib/ros/node_handle.h **** #include "service_server.h"
  86:./lib/ros_lib/ros/node_handle.h **** #include "service_client.h"
  87:./lib/ros_lib/ros/node_handle.h **** 
  88:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  89:./lib/ros_lib/ros/node_handle.h **** 
  90:./lib/ros_lib/ros/node_handle.h ****   using rosserial_msgs::TopicInfo;
  91:./lib/ros_lib/ros/node_handle.h **** 
  92:./lib/ros_lib/ros/node_handle.h ****   /* Node Handle */
  93:./lib/ros_lib/ros/node_handle.h ****   template<class Hardware,
  94:./lib/ros_lib/ros/node_handle.h ****            int MAX_SUBSCRIBERS=25,
  95:./lib/ros_lib/ros/node_handle.h ****            int MAX_PUBLISHERS=25,
  96:./lib/ros_lib/ros/node_handle.h ****            int INPUT_SIZE=512,
  97:./lib/ros_lib/ros/node_handle.h ****            int OUTPUT_SIZE=512>
  98:./lib/ros_lib/ros/node_handle.h ****   class NodeHandle_ : public NodeHandleBase_
  99:./lib/ros_lib/ros/node_handle.h ****   {
 100:./lib/ros_lib/ros/node_handle.h ****     protected:
 101:./lib/ros_lib/ros/node_handle.h ****       Hardware hardware_;
 102:./lib/ros_lib/ros/node_handle.h **** 
 103:./lib/ros_lib/ros/node_handle.h ****       /* time used for syncing */
 104:./lib/ros_lib/ros/node_handle.h ****       uint32_t rt_time;
 105:./lib/ros_lib/ros/node_handle.h **** 
 106:./lib/ros_lib/ros/node_handle.h ****       /* used for computing current time */
 107:./lib/ros_lib/ros/node_handle.h ****       uint32_t sec_offset, nsec_offset;
 108:./lib/ros_lib/ros/node_handle.h **** 
 109:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_in[INPUT_SIZE];
 110:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_out[OUTPUT_SIZE];
 111:./lib/ros_lib/ros/node_handle.h **** 
 112:./lib/ros_lib/ros/node_handle.h ****       Publisher * publishers[MAX_PUBLISHERS];
 113:./lib/ros_lib/ros/node_handle.h ****       Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 114:./lib/ros_lib/ros/node_handle.h **** 
 115:./lib/ros_lib/ros/node_handle.h ****       /*
 116:./lib/ros_lib/ros/node_handle.h ****        * Setup Functions
 117:./lib/ros_lib/ros/node_handle.h ****        */
 118:./lib/ros_lib/ros/node_handle.h ****     public:
 119:./lib/ros_lib/ros/node_handle.h ****       NodeHandle_() : configured_(false) {
 120:./lib/ros_lib/ros/node_handle.h **** 
 121:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_PUBLISHERS; i++)
 122:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 123:./lib/ros_lib/ros/node_handle.h **** 
 124:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_SUBSCRIBERS; i++)
 125:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 126:./lib/ros_lib/ros/node_handle.h **** 
 127:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< INPUT_SIZE; i++)
 128:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 129:./lib/ros_lib/ros/node_handle.h **** 
 130:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< OUTPUT_SIZE; i++)
 131:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 132:./lib/ros_lib/ros/node_handle.h **** 
 133:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 134:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 135:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats_length = 0;
 136:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats = NULL;
 137:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 138:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 139:./lib/ros_lib/ros/node_handle.h ****       }
 140:./lib/ros_lib/ros/node_handle.h **** 
 141:./lib/ros_lib/ros/node_handle.h ****       Hardware* getHardware(){
 142:./lib/ros_lib/ros/node_handle.h ****         return &hardware_;
 143:./lib/ros_lib/ros/node_handle.h ****       }
 144:./lib/ros_lib/ros/node_handle.h **** 
 145:./lib/ros_lib/ros/node_handle.h ****       /* Start serial, initialize buffers */
 146:./lib/ros_lib/ros/node_handle.h ****       void initNode(){
 147:./lib/ros_lib/ros/node_handle.h ****         hardware_.init();
 148:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 149:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 150:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 151:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 152:./lib/ros_lib/ros/node_handle.h ****       };
 153:./lib/ros_lib/ros/node_handle.h **** 
 154:./lib/ros_lib/ros/node_handle.h ****       /* Start a named port, which may be network server IP, initialize buffers */
 155:./lib/ros_lib/ros/node_handle.h ****       void initNode(char *portName){
 156:./lib/ros_lib/ros/node_handle.h ****         hardware_.init(portName);
 157:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 158:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 159:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 160:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 161:./lib/ros_lib/ros/node_handle.h ****       };
 162:./lib/ros_lib/ros/node_handle.h **** 
 163:./lib/ros_lib/ros/node_handle.h ****     protected:
 164:./lib/ros_lib/ros/node_handle.h ****       //State machine variables for spinOnce
 165:./lib/ros_lib/ros/node_handle.h ****       int mode_;
 166:./lib/ros_lib/ros/node_handle.h ****       int bytes_;
 167:./lib/ros_lib/ros/node_handle.h ****       int topic_;
 168:./lib/ros_lib/ros/node_handle.h ****       int index_;
 169:./lib/ros_lib/ros/node_handle.h ****       int checksum_;
 170:./lib/ros_lib/ros/node_handle.h **** 
 171:./lib/ros_lib/ros/node_handle.h ****       bool configured_;
 172:./lib/ros_lib/ros/node_handle.h **** 
 173:./lib/ros_lib/ros/node_handle.h ****       /* used for syncing the time */
 174:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_time;
 175:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_receive_time;
 176:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_msg_timeout_time;
 177:./lib/ros_lib/ros/node_handle.h **** 
 178:./lib/ros_lib/ros/node_handle.h ****     public:
 179:./lib/ros_lib/ros/node_handle.h ****       /* This function goes in your loop() function, it handles
 180:./lib/ros_lib/ros/node_handle.h ****        *  serial input and callbacks for subscribers.
 181:./lib/ros_lib/ros/node_handle.h ****        */
 182:./lib/ros_lib/ros/node_handle.h **** 
 183:./lib/ros_lib/ros/node_handle.h **** 
 184:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce(){
 185:./lib/ros_lib/ros/node_handle.h **** 
 186:./lib/ros_lib/ros/node_handle.h ****         /* restart if timed out */
 187:./lib/ros_lib/ros/node_handle.h ****         uint32_t c_time = hardware_.time();
 188:./lib/ros_lib/ros/node_handle.h ****         if( (c_time - last_sync_receive_time) > (SYNC_SECONDS*2200) ){
 189:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 190:./lib/ros_lib/ros/node_handle.h ****          }
 191:./lib/ros_lib/ros/node_handle.h **** 
 192:./lib/ros_lib/ros/node_handle.h ****         /* reset if message has timed out */
 193:./lib/ros_lib/ros/node_handle.h ****         if ( mode_ != MODE_FIRST_FF){
 194:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 195:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 196:./lib/ros_lib/ros/node_handle.h ****           }
 197:./lib/ros_lib/ros/node_handle.h ****         }
 198:./lib/ros_lib/ros/node_handle.h **** 
 199:./lib/ros_lib/ros/node_handle.h ****         /* while available buffer, read data */
 200:./lib/ros_lib/ros/node_handle.h ****         while( true )
 201:./lib/ros_lib/ros/node_handle.h ****         {
 202:./lib/ros_lib/ros/node_handle.h ****           int data = hardware_.read();
 203:./lib/ros_lib/ros/node_handle.h ****           if( data < 0 )
 204:./lib/ros_lib/ros/node_handle.h ****             break;
 205:./lib/ros_lib/ros/node_handle.h ****           checksum_ += data;
 206:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 207:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 208:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 209:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 210:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 211:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 212:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 213:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 214:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 215:./lib/ros_lib/ros/node_handle.h ****             }
 216:./lib/ros_lib/ros/node_handle.h ****             else if( hardware_.time() - c_time > (SYNC_SECONDS)){
 217:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 218:./lib/ros_lib/ros/node_handle.h ****               configured_=false;
 219:./lib/ros_lib/ros/node_handle.h ****               return -2;
 220:./lib/ros_lib/ros/node_handle.h ****             }
 221:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_PROTOCOL_VER ){
 222:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 223:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 224:./lib/ros_lib/ros/node_handle.h ****             }else{
 225:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_FIRST_FF;
 226:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 227:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 228:./lib/ros_lib/ros/node_handle.h ****             }
 229:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_SIZE_L ){   /* bottom half of message size */
 230:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 231:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 232:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 233:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 234:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_H ){   /* top half of message size */
 235:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 236:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 237:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 238:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 239:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 240:./lib/ros_lib/ros/node_handle.h **** 	    else
 241:./lib/ros_lib/ros/node_handle.h **** 	      mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 242:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 243:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 244:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 245:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 246:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 247:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 248:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 249:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 250:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 251:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_MSG_CHECKSUM ){ /* do checksum */
 252:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 253:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 254:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 255:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 256:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 258:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 259:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 260:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 261:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 262:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 263:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 264:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 265:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 266:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 267:./lib/ros_lib/ros/node_handle.h ****               }else{
 268:./lib/ros_lib/ros/node_handle.h ****                 if(subscribers[topic_-100])
 269:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 270:./lib/ros_lib/ros/node_handle.h ****               }
 271:./lib/ros_lib/ros/node_handle.h ****             }
 272:./lib/ros_lib/ros/node_handle.h ****           }
 273:./lib/ros_lib/ros/node_handle.h ****         }
 274:./lib/ros_lib/ros/node_handle.h **** 
 275:./lib/ros_lib/ros/node_handle.h ****         /* occasionally sync time */
 276:./lib/ros_lib/ros/node_handle.h ****         if( configured_ && ((c_time-last_sync_time) > (SYNC_SECONDS*500) )){
 277:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 278:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 279:./lib/ros_lib/ros/node_handle.h ****         }
 280:./lib/ros_lib/ros/node_handle.h **** 
 281:./lib/ros_lib/ros/node_handle.h ****         return 0;
 282:./lib/ros_lib/ros/node_handle.h ****       }
 283:./lib/ros_lib/ros/node_handle.h **** 
 284:./lib/ros_lib/ros/node_handle.h **** 
 285:./lib/ros_lib/ros/node_handle.h ****       /* Are we connected to the PC? */
 286:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected() {
 1262              		.loc 13 286 0
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 0
 1265              		@ frame_needed = 0, uses_anonymous_args = 0
 1266              		@ link register save eliminated.
 1267              	.LVL106:
 287:./lib/ros_lib/ros/node_handle.h ****         return configured_;
 288:./lib/ros_lib/ros/node_handle.h ****       };
 1268              		.loc 13 288 0
 1269 0000 90F8F404 		ldrb	r0, [r0, #1268]	@ zero_extendqisi2
 1270              	.LVL107:
 1271 0004 7047     		bx	lr
 1272              		.cfi_endproc
 1273              	.LFE238:
 1274              		.cantunwind
 1275              		.fnend
 1277              		.text
 1278              		.align	1
 1279              		.global	_Z6led_cbRKN8std_msgs5UInt8E
 1280              		.thumb
 1281              		.thumb_func
 1283              	_Z6led_cbRKN8std_msgs5UInt8E:
 1284              		.fnstart
 1285              	.LFB198:
  40:src/main.cpp  ****   led_set(cmd_msg.data);
 1286              		.loc 11 40 0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 0
 1289              		@ frame_needed = 0, uses_anonymous_args = 0
 1290              		@ link register save eliminated.
 1291              	.LVL108:
  41:src/main.cpp  **** }
 1292              		.loc 11 41 0
 1293 0068 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 1294              	.LVL109:
 1295 006a FFF7FEBF 		b	led_set
 1296              	.LVL110:
 1297              		.cfi_endproc
 1298              	.LFE198:
 1299              		.cantunwind
 1300              		.fnend
 1302              		.section	.text._ZNK8std_msgs6Header9serializeEPh,"axG",%progbits,_ZNK8std_msgs6Header9serializeEPh
 1303              		.align	1
 1304              		.weak	_ZNK8std_msgs6Header9serializeEPh
 1305              		.thumb
 1306              		.thumb_func
 1308              	_ZNK8std_msgs6Header9serializeEPh:
 1309              		.fnstart
 1310              	.LFB180:
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1311              		.loc 9 27 0
 1312              		.cfi_startproc
 1313              		@ args = 0, pretend = 0, frame = 8
 1314              		@ frame_needed = 0, uses_anonymous_args = 0
 1315              	.LVL111:
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1316              		.loc 9 30 0
 1317 0000 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1318              		.loc 9 27 0
 1319 0002 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1320              	.LCFI4:
 1321              		.cfi_def_cfa_offset 24
 1322              		.cfi_offset 4, -16
 1323              		.cfi_offset 5, -12
 1324              		.cfi_offset 6, -8
 1325              		.cfi_offset 14, -4
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1326              		.loc 9 30 0
 1327 0004 0B70     		strb	r3, [r1]
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1328              		.loc 9 31 0
 1329 0006 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1330              		.loc 9 27 0
 1331 0008 0546     		mov	r5, r0
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1332              		.loc 9 31 0
 1333 000a 1B0A     		lsrs	r3, r3, #8
 1334 000c 4B70     		strb	r3, [r1, #1]
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1335              		.loc 9 32 0
 1336 000e C388     		ldrh	r3, [r0, #6]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1337              		.loc 9 27 0
 1338 0010 0C46     		mov	r4, r1
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1339              		.loc 9 32 0
 1340 0012 8B70     		strb	r3, [r1, #2]
  33:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1341              		.loc 9 33 0
 1342 0014 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 1343 0016 CB70     		strb	r3, [r1, #3]
 1344              	.LVL112:
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 1345              		.loc 9 35 0
 1346 0018 8368     		ldr	r3, [r0, #8]
 1347 001a 0B71     		strb	r3, [r1, #4]
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 1348              		.loc 9 36 0
 1349 001c 8368     		ldr	r3, [r0, #8]
 1350 001e 1B0A     		lsrs	r3, r3, #8
 1351 0020 4B71     		strb	r3, [r1, #5]
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 1352              		.loc 9 37 0
 1353 0022 4389     		ldrh	r3, [r0, #10]
 1354 0024 8B71     		strb	r3, [r1, #6]
  38:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1355              		.loc 9 38 0
 1356 0026 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1357 0028 CB71     		strb	r3, [r1, #7]
 1358              	.LVL113:
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 1359              		.loc 9 40 0
 1360 002a C368     		ldr	r3, [r0, #12]
 1361 002c 0B72     		strb	r3, [r1, #8]
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 1362              		.loc 9 41 0
 1363 002e C368     		ldr	r3, [r0, #12]
 1364 0030 1B0A     		lsrs	r3, r3, #8
 1365 0032 4B72     		strb	r3, [r1, #9]
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 1366              		.loc 9 42 0
 1367 0034 C389     		ldrh	r3, [r0, #14]
 1368 0036 8B72     		strb	r3, [r1, #10]
  43:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1369              		.loc 9 43 0
 1370 0038 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 1371 003a CB72     		strb	r3, [r1, #11]
 1372              	.LVL114:
  45:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 1373              		.loc 9 45 0
 1374 003c 0069     		ldr	r0, [r0, #16]
 1375              	.LVL115:
 1376 003e FFF7FEFF 		bl	strlen
 1377              	.LVL116:
 1378 0042 0646     		mov	r6, r0
 1379 0044 02AB     		add	r3, sp, #8
 1380 0046 43F8040D 		str	r0, [r3, #-4]!
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1381              		.loc 9 46 0
 1382 004a 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1383              		.loc 9 48 0
 1384 004c 3246     		mov	r2, r6
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1385              		.loc 9 46 0
 1386 004e E060     		str	r0, [r4, #12]	@ unaligned
 1387              	.LVL117:
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1388              		.loc 9 48 0
 1389 0050 2969     		ldr	r1, [r5, #16]
 1390 0052 04F11000 		add	r0, r4, #16
 1391 0056 FFF7FEFF 		bl	memcpy
 1392              	.LVL118:
  51:./lib/ros_lib/std_msgs/Header.h **** 
 1393              		.loc 9 51 0
 1394 005a 06F11000 		add	r0, r6, #16
 1395              	.LVL119:
 1396 005e 02B0     		add	sp, sp, #8
 1397              	.LCFI5:
 1398              		.cfi_def_cfa_offset 16
 1399              		@ sp needed
 1400 0060 70BD     		pop	{r4, r5, r6, pc}
 1401              		.cfi_endproc
 1402              	.LFE180:
 1403              		.cantunwind
 1404              		.fnend
 1406              		.section	.text._ZNK11sensor_msgs3Joy9serializeEPh,"axG",%progbits,_ZNK11sensor_msgs3Joy9serializeE
 1407              		.align	1
 1408              		.weak	_ZNK11sensor_msgs3Joy9serializeEPh
 1409              		.thumb
 1410              		.thumb_func
 1412              	_ZNK11sensor_msgs3Joy9serializeEPh:
 1413              		.fnstart
 1414              	.LFB187:
  31:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 1415              		.loc 10 31 0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 0
 1418              		@ frame_needed = 0, uses_anonymous_args = 0
 1419              	.LVL120:
 1420 0000 70B5     		push	{r4, r5, r6, lr}
 1421              	.LCFI6:
 1422              		.cfi_def_cfa_offset 16
 1423              		.cfi_offset 4, -16
 1424              		.cfi_offset 5, -12
 1425              		.cfi_offset 6, -8
 1426              		.cfi_offset 14, -4
  31:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 1427              		.loc 10 31 0
 1428 0002 0546     		mov	r5, r0
 1429              	.LVL121:
  34:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = axes_length;
 1430              		.loc 10 34 0
 1431 0004 0430     		adds	r0, r0, #4
 1432              	.LVL122:
  31:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 1433              		.loc 10 31 0
 1434 0006 0C46     		mov	r4, r1
  34:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = axes_length;
 1435              		.loc 10 34 0
 1436 0008 FFF7FEFF 		bl	_ZNK8std_msgs6Header9serializeEPh
 1437              	.LVL123:
  35:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1438              		.loc 10 35 0
 1439 000c 2B7E     		ldrb	r3, [r5, #24]	@ zero_extendqisi2
  36:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1440              		.loc 10 36 0
 1441 000e 2218     		adds	r2, r4, r0
  35:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1442              		.loc 10 35 0
 1443 0010 2354     		strb	r3, [r4, r0]
 1444              	.LVL124:
  36:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1445              		.loc 10 36 0
 1446 0012 0023     		movs	r3, #0
 1447 0014 5370     		strb	r3, [r2, #1]
 1448              	.LVL125:
  37:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1449              		.loc 10 37 0
 1450 0016 9370     		strb	r3, [r2, #2]
 1451              	.LVL126:
  38:./lib/ros_lib/sensor_msgs/Joy.h ****       for( uint8_t i = 0; i < axes_length; i++){
 1452              		.loc 10 38 0
 1453 0018 D370     		strb	r3, [r2, #3]
 1454              	.LVL127:
 1455 001a 1A46     		mov	r2, r3
 1456 001c 0430     		adds	r0, r0, #4
 1457              	.LVL128:
 1458 001e 2044     		add	r0, r0, r4
 1459              	.LVL129:
 1460              	.L95:
 1461              	.LBB156:
  39:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 1462              		.loc 10 39 0 discriminator 3
 1463 0020 2E7E     		ldrb	r6, [r5, #24]	@ zero_extendqisi2
 1464 0022 511C     		adds	r1, r2, #1
 1465 0024 D2B2     		uxtb	r2, r2
 1466 0026 9642     		cmp	r6, r2
 1467 0028 A0EB0403 		sub	r3, r0, r4
 1468              	.LVL130:
 1469 002c 00F10400 		add	r0, r0, #4
 1470 0030 0FD9     		bls	.L94
 1471              	.LBB157:
  44:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 0) = (u_axesi.base >> (8 * 0)) & 0xFF;
 1472              		.loc 10 44 0 discriminator 2
 1473 0032 2B6A     		ldr	r3, [r5, #32]
 1474              	.LVL131:
  45:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 1) = (u_axesi.base >> (8 * 1)) & 0xFF;
 1475              		.loc 10 45 0 discriminator 2
 1476 0034 53F82230 		ldr	r3, [r3, r2, lsl #2]
  46:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 2) = (u_axesi.base >> (8 * 2)) & 0xFF;
 1477              		.loc 10 46 0 discriminator 2
 1478 0038 1A0A     		lsrs	r2, r3, #8
  45:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 1) = (u_axesi.base >> (8 * 1)) & 0xFF;
 1479              		.loc 10 45 0 discriminator 2
 1480 003a 00F8043C 		strb	r3, [r0, #-4]
  46:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 2) = (u_axesi.base >> (8 * 2)) & 0xFF;
 1481              		.loc 10 46 0 discriminator 2
 1482 003e 00F8032C 		strb	r2, [r0, #-3]
  47:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 3) = (u_axesi.base >> (8 * 3)) & 0xFF;
 1483              		.loc 10 47 0 discriminator 2
 1484 0042 1A0C     		lsrs	r2, r3, #16
  48:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->axes[i]);
 1485              		.loc 10 48 0 discriminator 2
 1486 0044 1B0E     		lsrs	r3, r3, #24
  47:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 3) = (u_axesi.base >> (8 * 3)) & 0xFF;
 1487              		.loc 10 47 0 discriminator 2
 1488 0046 00F8022C 		strb	r2, [r0, #-2]
  48:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->axes[i]);
 1489              		.loc 10 48 0 discriminator 2
 1490 004a 00F8013C 		strb	r3, [r0, #-1]
 1491              	.LVL132:
 1492              	.LBE157:
  39:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 1493              		.loc 10 39 0 discriminator 2
 1494 004e 0A46     		mov	r2, r1
 1495 0050 E6E7     		b	.L95
 1496              	.LVL133:
 1497              	.L94:
 1498              	.LBE156:
  51:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1499              		.loc 10 51 0
 1500 0052 95F82420 		ldrb	r2, [r5, #36]	@ zero_extendqisi2
  52:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1501              		.loc 10 52 0
 1502 0056 E118     		adds	r1, r4, r3
  51:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1503              		.loc 10 51 0
 1504 0058 E254     		strb	r2, [r4, r3]
 1505              	.LVL134:
  52:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1506              		.loc 10 52 0
 1507 005a 0022     		movs	r2, #0
 1508 005c 0433     		adds	r3, r3, #4
 1509              	.LVL135:
 1510 005e 4A70     		strb	r2, [r1, #1]
 1511              	.LVL136:
  53:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset++) = 0;
 1512              		.loc 10 53 0
 1513 0060 8A70     		strb	r2, [r1, #2]
  54:./lib/ros_lib/sensor_msgs/Joy.h ****       for( uint8_t i = 0; i < buttons_length; i++){
 1514              		.loc 10 54 0
 1515 0062 CA70     		strb	r2, [r1, #3]
 1516              	.LVL137:
 1517 0064 2344     		add	r3, r3, r4
 1518              	.LVL138:
 1519              	.L97:
 1520              	.LBB158:
  55:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 1521              		.loc 10 55 0 discriminator 3
 1522 0066 95F82460 		ldrb	r6, [r5, #36]	@ zero_extendqisi2
 1523 006a 511C     		adds	r1, r2, #1
 1524 006c D2B2     		uxtb	r2, r2
 1525 006e 9642     		cmp	r6, r2
 1526 0070 A3EB0400 		sub	r0, r3, r4
 1527              	.LVL139:
 1528 0074 03F10403 		add	r3, r3, #4
 1529 0078 0FD9     		bls	.L96
 1530              	.LBB159:
  60:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 0) = (u_buttonsi.base >> (8 * 0)) & 0xFF;
 1531              		.loc 10 60 0 discriminator 2
 1532 007a E86A     		ldr	r0, [r5, #44]
 1533              	.LVL140:
 1534 007c 50F82220 		ldr	r2, [r0, r2, lsl #2]
 1535              	.LVL141:
  62:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 2) = (u_buttonsi.base >> (8 * 2)) & 0xFF;
 1536              		.loc 10 62 0 discriminator 2
 1537 0080 100A     		lsrs	r0, r2, #8
  61:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 1) = (u_buttonsi.base >> (8 * 1)) & 0xFF;
 1538              		.loc 10 61 0 discriminator 2
 1539 0082 03F8042C 		strb	r2, [r3, #-4]
  62:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 2) = (u_buttonsi.base >> (8 * 2)) & 0xFF;
 1540              		.loc 10 62 0 discriminator 2
 1541 0086 03F8030C 		strb	r0, [r3, #-3]
  63:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 3) = (u_buttonsi.base >> (8 * 3)) & 0xFF;
 1542              		.loc 10 63 0 discriminator 2
 1543 008a 100C     		lsrs	r0, r2, #16
  64:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->buttons[i]);
 1544              		.loc 10 64 0 discriminator 2
 1545 008c 120E     		lsrs	r2, r2, #24
 1546              	.LVL142:
 1547 008e 03F8012C 		strb	r2, [r3, #-1]
 1548              	.LVL143:
  63:./lib/ros_lib/sensor_msgs/Joy.h ****       *(outbuffer + offset + 3) = (u_buttonsi.base >> (8 * 3)) & 0xFF;
 1549              		.loc 10 63 0 discriminator 2
 1550 0092 03F8020C 		strb	r0, [r3, #-2]
 1551              	.LBE159:
  55:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 1552              		.loc 10 55 0 discriminator 2
 1553 0096 0A46     		mov	r2, r1
 1554 0098 E5E7     		b	.L97
 1555              	.LVL144:
 1556              	.L96:
 1557              	.LBE158:
  68:./lib/ros_lib/sensor_msgs/Joy.h **** 
 1558              		.loc 10 68 0
 1559 009a 70BD     		pop	{r4, r5, r6, pc}
 1560              		.cfi_endproc
 1561              	.LFE187:
 1562              		.cantunwind
 1563              		.fnend
 1565              		.section	.text._ZNK8std_msgs19MultiArrayDimension9serializeEPh,"axG",%progbits,_ZNK8std_msgs19Mult
 1566              		.align	1
 1567              		.weak	_ZNK8std_msgs19MultiArrayDimension9serializeEPh
 1568              		.thumb
 1569              		.thumb_func
 1571              	_ZNK8std_msgs19MultiArrayDimension9serializeEPh:
 1572              		.fnstart
 1573              	.LFB152:
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1574              		.loc 5 26 0
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 8
 1577              		@ frame_needed = 0, uses_anonymous_args = 0
 1578              	.LVL145:
 1579 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1580              	.LCFI7:
 1581              		.cfi_def_cfa_offset 24
 1582              		.cfi_offset 4, -16
 1583              		.cfi_offset 5, -12
 1584              		.cfi_offset 6, -8
 1585              		.cfi_offset 14, -4
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1586              		.loc 5 26 0
 1587 0002 0546     		mov	r5, r0
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
 1588              		.loc 5 29 0
 1589 0004 4068     		ldr	r0, [r0, #4]
 1590              	.LVL146:
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1591              		.loc 5 26 0
 1592 0006 0C46     		mov	r4, r1
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
 1593              		.loc 5 29 0
 1594 0008 FFF7FEFF 		bl	strlen
 1595              	.LVL147:
 1596 000c 02AB     		add	r3, sp, #8
 1597 000e 43F8040D 		str	r0, [r3, #-4]!
 1598 0012 0646     		mov	r6, r0
  30:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 1599              		.loc 5 30 0
 1600 0014 1868     		ldr	r0, [r3]	@ unaligned
 1601 0016 2346     		mov	r3, r4
 1602 0018 43F8040B 		str	r0, [r3], #4	@ unaligned
 1603              	.LVL148:
  32:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
 1604              		.loc 5 32 0
 1605 001c 6968     		ldr	r1, [r5, #4]
 1606 001e 3246     		mov	r2, r6
 1607 0020 1846     		mov	r0, r3
 1608 0022 FFF7FEFF 		bl	memcpy
 1609              	.LVL149:
  34:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->size >> (8 * 1)) & 0xFF;
 1610              		.loc 5 34 0
 1611 0026 AB68     		ldr	r3, [r5, #8]
 1612 0028 A119     		adds	r1, r4, r6
 1613 002a 0B71     		strb	r3, [r1, #4]
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
 1614              		.loc 5 35 0
 1615 002c AB68     		ldr	r3, [r5, #8]
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 1616              		.loc 5 45 0
 1617 002e 06F10C00 		add	r0, r6, #12
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
 1618              		.loc 5 35 0
 1619 0032 1B0A     		lsrs	r3, r3, #8
 1620 0034 4B71     		strb	r3, [r1, #5]
  36:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->size >> (8 * 3)) & 0xFF;
 1621              		.loc 5 36 0
 1622 0036 6B89     		ldrh	r3, [r5, #10]
 1623 0038 8B71     		strb	r3, [r1, #6]
  37:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
 1624              		.loc 5 37 0
 1625 003a EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 1626 003c CB71     		strb	r3, [r1, #7]
 1627              	.LVL150:
  39:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->stride >> (8 * 1)) & 0xFF;
 1628              		.loc 5 39 0
 1629 003e EB68     		ldr	r3, [r5, #12]
 1630 0040 0B72     		strb	r3, [r1, #8]
  40:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->stride >> (8 * 2)) & 0xFF;
 1631              		.loc 5 40 0
 1632 0042 EB68     		ldr	r3, [r5, #12]
 1633 0044 1B0A     		lsrs	r3, r3, #8
 1634 0046 4B72     		strb	r3, [r1, #9]
  41:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->stride >> (8 * 3)) & 0xFF;
 1635              		.loc 5 41 0
 1636 0048 EB89     		ldrh	r3, [r5, #14]
 1637 004a 8B72     		strb	r3, [r1, #10]
  42:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
 1638              		.loc 5 42 0
 1639 004c EB7B     		ldrb	r3, [r5, #15]	@ zero_extendqisi2
 1640 004e CB72     		strb	r3, [r1, #11]
 1641              	.LVL151:
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 1642              		.loc 5 45 0
 1643 0050 02B0     		add	sp, sp, #8
 1644              	.LCFI8:
 1645              		.cfi_def_cfa_offset 16
 1646              		@ sp needed
 1647 0052 70BD     		pop	{r4, r5, r6, pc}
 1648              		.cfi_endproc
 1649              	.LFE152:
 1650              		.cantunwind
 1651              		.fnend
 1653              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 1654              		.align	1
 1655              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1656              		.thumb
 1657              		.thumb_func
 1659              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1660              		.fnstart
 1661              	.LFB82:
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1662              		.loc 4 74 0
 1663              		.cfi_startproc
 1664              		@ args = 0, pretend = 0, frame = 8
 1665              		@ frame_needed = 0, uses_anonymous_args = 0
 1666              	.LVL152:
 1667 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 1668              	.LCFI9:
 1669              		.cfi_def_cfa_offset 40
 1670              		.cfi_offset 4, -28
 1671              		.cfi_offset 5, -24
 1672              		.cfi_offset 6, -20
 1673              		.cfi_offset 7, -16
 1674              		.cfi_offset 8, -12
 1675              		.cfi_offset 9, -8
 1676              		.cfi_offset 14, -4
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1677              		.loc 4 77 0
 1678 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1679              		.loc 4 74 0
 1680 0006 0746     		mov	r7, r0
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1681              		.loc 4 77 0
 1682 0008 0B70     		strb	r3, [r1]
 1683              	.LVL153:
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1684              		.loc 4 78 0
 1685 000a 0023     		movs	r3, #0
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1686              		.loc 4 80 0
 1687 000c 1A46     		mov	r2, r3
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1688              		.loc 4 74 0
 1689 000e 0C46     		mov	r4, r1
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1690              		.loc 4 78 0
 1691 0010 4B70     		strb	r3, [r1, #1]
 1692              	.LVL154:
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1693              		.loc 4 79 0
 1694 0012 8B70     		strb	r3, [r1, #2]
 1695              	.LVL155:
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1696              		.loc 4 80 0
 1697 0014 CB70     		strb	r3, [r1, #3]
 1698              	.LVL156:
 1699 0016 0431     		adds	r1, r1, #4
 1700              	.LVL157:
 1701              	.L101:
 1702              	.LBB160:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1703              		.loc 4 81 0 discriminator 3
 1704 0018 3D79     		ldrb	r5, [r7, #4]	@ zero_extendqisi2
 1705 001a 501C     		adds	r0, r2, #1
 1706 001c D2B2     		uxtb	r2, r2
 1707 001e 9542     		cmp	r5, r2
 1708 0020 A1EB0403 		sub	r3, r1, r4
 1709              	.LVL158:
 1710 0024 01F10401 		add	r1, r1, #4
 1711 0028 0FD9     		bls	.L100
 1712              	.LBB161:
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1713              		.loc 4 86 0 discriminator 2
 1714 002a FB68     		ldr	r3, [r7, #12]
 1715              	.LVL159:
 1716 002c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1717              	.LVL160:
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1718              		.loc 4 88 0 discriminator 2
 1719 0030 1A0A     		lsrs	r2, r3, #8
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1720              		.loc 4 87 0 discriminator 2
 1721 0032 01F8043C 		strb	r3, [r1, #-4]
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1722              		.loc 4 88 0 discriminator 2
 1723 0036 01F8032C 		strb	r2, [r1, #-3]
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1724              		.loc 4 89 0 discriminator 2
 1725 003a 1A0C     		lsrs	r2, r3, #16
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1726              		.loc 4 90 0 discriminator 2
 1727 003c 1B0E     		lsrs	r3, r3, #24
 1728              	.LVL161:
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1729              		.loc 4 89 0 discriminator 2
 1730 003e 01F8022C 		strb	r2, [r1, #-2]
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1731              		.loc 4 90 0 discriminator 2
 1732 0042 01F8013C 		strb	r3, [r1, #-1]
 1733              	.LVL162:
 1734              	.LBE161:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1735              		.loc 4 81 0 discriminator 2
 1736 0046 0246     		mov	r2, r0
 1737 0048 E6E7     		b	.L101
 1738              	.LVL163:
 1739              	.L100:
 1740              	.LBE160:
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1741              		.loc 4 93 0
 1742 004a 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1743              		.loc 4 94 0
 1744 004c E118     		adds	r1, r4, r3
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1745              		.loc 4 93 0
 1746 004e E254     		strb	r2, [r4, r3]
 1747              	.LVL164:
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1748              		.loc 4 94 0
 1749 0050 0022     		movs	r2, #0
 1750 0052 0433     		adds	r3, r3, #4
 1751              	.LVL165:
 1752 0054 4A70     		strb	r2, [r1, #1]
 1753              	.LVL166:
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1754              		.loc 4 95 0
 1755 0056 8A70     		strb	r2, [r1, #2]
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1756              		.loc 4 96 0
 1757 0058 CA70     		strb	r2, [r1, #3]
 1758              	.LVL167:
 1759 005a 2344     		add	r3, r3, r4
 1760              	.LVL168:
 1761              	.L103:
 1762              	.LBB162:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1763              		.loc 4 97 0 discriminator 3
 1764 005c 387C     		ldrb	r0, [r7, #16]	@ zero_extendqisi2
 1765 005e 511C     		adds	r1, r2, #1
 1766 0060 D2B2     		uxtb	r2, r2
 1767 0062 9042     		cmp	r0, r2
 1768 0064 A3EB0406 		sub	r6, r3, r4
 1769              	.LVL169:
 1770 0068 03F10403 		add	r3, r3, #4
 1771 006c 0FD9     		bls	.L102
 1772              	.LBB163:
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1773              		.loc 4 102 0 discriminator 2
 1774 006e B869     		ldr	r0, [r7, #24]
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1775              		.loc 4 103 0 discriminator 2
 1776 0070 50F82220 		ldr	r2, [r0, r2, lsl #2]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1777              		.loc 4 104 0 discriminator 2
 1778 0074 100A     		lsrs	r0, r2, #8
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1779              		.loc 4 103 0 discriminator 2
 1780 0076 03F8042C 		strb	r2, [r3, #-4]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1781              		.loc 4 104 0 discriminator 2
 1782 007a 03F8030C 		strb	r0, [r3, #-3]
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1783              		.loc 4 105 0 discriminator 2
 1784 007e 100C     		lsrs	r0, r2, #16
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1785              		.loc 4 106 0 discriminator 2
 1786 0080 120E     		lsrs	r2, r2, #24
 1787 0082 03F8012C 		strb	r2, [r3, #-1]
 1788              	.LVL170:
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1789              		.loc 4 105 0 discriminator 2
 1790 0086 03F8020C 		strb	r0, [r3, #-2]
 1791              	.LBE163:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1792              		.loc 4 97 0 discriminator 2
 1793 008a 0A46     		mov	r2, r1
 1794 008c E6E7     		b	.L103
 1795              	.LVL171:
 1796              	.L102:
 1797              	.LBE162:
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1798              		.loc 4 109 0
 1799 008e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1800              		.loc 4 110 0
 1801 0090 A219     		adds	r2, r4, r6
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1802              		.loc 4 109 0
 1803 0092 A355     		strb	r3, [r4, r6]
 1804              	.LVL172:
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1805              		.loc 4 110 0
 1806 0094 0023     		movs	r3, #0
 1807 0096 5370     		strb	r3, [r2, #1]
 1808              	.LVL173:
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1809              		.loc 4 111 0
 1810 0098 9370     		strb	r3, [r2, #2]
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1811              		.loc 4 112 0
 1812 009a 0436     		adds	r6, r6, #4
 1813              	.LVL174:
 1814 009c D370     		strb	r3, [r2, #3]
 1815              	.LVL175:
 1816              	.L105:
 1817              	.LBB164:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1818              		.loc 4 113 0 discriminator 3
 1819 009e 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 1820 00a0 DDB2     		uxtb	r5, r3
 1821 00a2 AA42     		cmp	r2, r5
 1822 00a4 03F10109 		add	r9, r3, #1
 1823 00a8 15D9     		bls	.L104
 1824              	.LBB165:
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1825              		.loc 4 114 0 discriminator 2
 1826 00aa 7B6A     		ldr	r3, [r7, #36]
 1827              	.LVL176:
 1828 00ac 53F82500 		ldr	r0, [r3, r5, lsl #2]
 1829 00b0 FFF7FEFF 		bl	strlen
 1830              	.LVL177:
 1831 00b4 8046     		mov	r8, r0
 1832 00b6 02AB     		add	r3, sp, #8
 1833 00b8 43F8040D 		str	r0, [r3, #-4]!
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1834              		.loc 4 115 0 discriminator 2
 1835 00bc 1868     		ldr	r0, [r3]	@ unaligned
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1836              		.loc 4 117 0 discriminator 2
 1837 00be 4246     		mov	r2, r8
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1838              		.loc 4 115 0 discriminator 2
 1839 00c0 A051     		str	r0, [r4, r6]	@ unaligned
 1840              	.LVL178:
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1841              		.loc 4 117 0 discriminator 2
 1842 00c2 7B6A     		ldr	r3, [r7, #36]
 1843 00c4 0436     		adds	r6, r6, #4
 1844              	.LVL179:
 1845 00c6 53F82510 		ldr	r1, [r3, r5, lsl #2]
 1846 00ca A019     		adds	r0, r4, r6
 1847 00cc FFF7FEFF 		bl	memcpy
 1848              	.LVL180:
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 1849              		.loc 4 118 0 discriminator 2
 1850 00d0 4644     		add	r6, r6, r8
 1851              	.LVL181:
 1852              	.LBE165:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1853              		.loc 4 113 0 discriminator 2
 1854 00d2 4B46     		mov	r3, r9
 1855 00d4 E3E7     		b	.L105
 1856              	.LVL182:
 1857              	.L104:
 1858              	.LBE164:
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 1859              		.loc 4 121 0
 1860 00d6 3046     		mov	r0, r6
 1861 00d8 03B0     		add	sp, sp, #12
 1862              	.LCFI10:
 1863              		.cfi_def_cfa_offset 28
 1864              		@ sp needed
 1865 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1866              		.cfi_endproc
 1867              	.LFE82:
 1868              		.cantunwind
 1869              		.fnend
 1871              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 1872              		.align	1
 1873              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1874              		.thumb
 1875              		.thumb_func
 1877              	_ZNK14rosserial_msgs3Log9serializeEPh:
 1878              		.fnstart
 1879              	.LFB68:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1880              		.loc 3 29 0
 1881              		.cfi_startproc
 1882              		@ args = 0, pretend = 0, frame = 8
 1883              		@ frame_needed = 0, uses_anonymous_args = 0
 1884              	.LVL183:
 1885 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1886              	.LCFI11:
 1887              		.cfi_def_cfa_offset 24
 1888              		.cfi_offset 4, -16
 1889              		.cfi_offset 5, -12
 1890              		.cfi_offset 6, -8
 1891              		.cfi_offset 14, -4
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1892              		.loc 3 32 0
 1893 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1894              		.loc 3 29 0
 1895 0004 0646     		mov	r6, r0
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1896              		.loc 3 32 0
 1897 0006 0B70     		strb	r3, [r1]
 1898              	.LVL184:
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1899              		.loc 3 34 0
 1900 0008 8068     		ldr	r0, [r0, #8]
 1901              	.LVL185:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1902              		.loc 3 29 0
 1903 000a 0D46     		mov	r5, r1
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1904              		.loc 3 34 0
 1905 000c FFF7FEFF 		bl	strlen
 1906              	.LVL186:
 1907 0010 0446     		mov	r4, r0
 1908 0012 02AB     		add	r3, sp, #8
 1909 0014 43F8040D 		str	r0, [r3, #-4]!
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1910              		.loc 3 35 0
 1911 0018 1868     		ldr	r0, [r3]	@ unaligned
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1912              		.loc 3 37 0
 1913 001a 2246     		mov	r2, r4
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1914              		.loc 3 35 0
 1915 001c C5F80100 		str	r0, [r5, #1]	@ unaligned
 1916              	.LVL187:
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1917              		.loc 3 37 0
 1918 0020 B168     		ldr	r1, [r6, #8]
 1919 0022 681D     		adds	r0, r5, #5
 1920 0024 FFF7FEFF 		bl	memcpy
 1921              	.LVL188:
  40:./lib/ros_lib/rosserial_msgs/Log.h **** 
 1922              		.loc 3 40 0
 1923 0028 601D     		adds	r0, r4, #5
 1924              	.LVL189:
 1925 002a 02B0     		add	sp, sp, #8
 1926              	.LCFI12:
 1927              		.cfi_def_cfa_offset 16
 1928              		@ sp needed
 1929 002c 70BD     		pop	{r4, r5, r6, pc}
 1930              		.cfi_endproc
 1931              	.LFE68:
 1932              		.cantunwind
 1933              		.fnend
 1935              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 1936              		.align	1
 1937              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 1938              		.thumb
 1939              		.thumb_func
 1941              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 1942              		.fnstart
 1943              	.LFB61:
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1944              		.loc 2 38 0
 1945              		.cfi_startproc
 1946              		@ args = 0, pretend = 0, frame = 16
 1947              		@ frame_needed = 0, uses_anonymous_args = 0
 1948              	.LVL190:
 1949 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 1950              	.LCFI13:
 1951              		.cfi_def_cfa_offset 40
 1952              		.cfi_offset 4, -24
 1953              		.cfi_offset 5, -20
 1954              		.cfi_offset 6, -16
 1955              		.cfi_offset 7, -12
 1956              		.cfi_offset 8, -8
 1957              		.cfi_offset 14, -4
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1958              		.loc 2 41 0
 1959 0004 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1960              		.loc 2 38 0
 1961 0006 0646     		mov	r6, r0
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1962              		.loc 2 41 0
 1963 0008 0B70     		strb	r3, [r1]
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1964              		.loc 2 42 0
 1965 000a 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1966              		.loc 2 38 0
 1967 000c 0D46     		mov	r5, r1
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1968              		.loc 2 42 0
 1969 000e 1B0A     		lsrs	r3, r3, #8
 1970 0010 4B70     		strb	r3, [r1, #1]
 1971              	.LVL191:
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1972              		.loc 2 44 0
 1973 0012 8068     		ldr	r0, [r0, #8]
 1974              	.LVL192:
 1975 0014 FFF7FEFF 		bl	strlen
 1976              	.LVL193:
 1977 0018 0446     		mov	r4, r0
 1978 001a 04AB     		add	r3, sp, #16
 1979 001c 43F80C0D 		str	r0, [r3, #-12]!
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1980              		.loc 2 45 0
 1981 0020 1868     		ldr	r0, [r3]	@ unaligned
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1982              		.loc 2 47 0
 1983 0022 2246     		mov	r2, r4
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1984              		.loc 2 45 0
 1985 0024 C5F80200 		str	r0, [r5, #2]	@ unaligned
 1986              	.LVL194:
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1987              		.loc 2 47 0
 1988 0028 B168     		ldr	r1, [r6, #8]
 1989 002a A81D     		adds	r0, r5, #6
 1990 002c FFF7FEFF 		bl	memcpy
 1991              	.LVL195:
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 1992              		.loc 2 49 0
 1993 0030 F068     		ldr	r0, [r6, #12]
 1994 0032 FFF7FEFF 		bl	strlen
 1995              	.LVL196:
 1996 0036 0746     		mov	r7, r0
 1997 0038 04AB     		add	r3, sp, #16
 1998 003a 43F8080D 		str	r0, [r3, #-8]!
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1999              		.loc 2 50 0
 2000 003e 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 2001              		.loc 2 48 0
 2002 0040 04F10608 		add	r8, r4, #6
 2003              	.LVL197:
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2004              		.loc 2 50 0
 2005 0044 45F80800 		str	r0, [r5, r8]	@ unaligned
 2006              	.LVL198:
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2007              		.loc 2 52 0
 2008 0048 0A34     		adds	r4, r4, #10
 2009 004a 3A46     		mov	r2, r7
 2010 004c F168     		ldr	r1, [r6, #12]
 2011 004e 2819     		adds	r0, r5, r4
 2012 0050 FFF7FEFF 		bl	memcpy
 2013              	.LVL199:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 2014              		.loc 2 54 0
 2015 0054 3069     		ldr	r0, [r6, #16]
 2016 0056 FFF7FEFF 		bl	strlen
 2017              	.LVL200:
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 2018              		.loc 2 53 0
 2019 005a 3C44     		add	r4, r4, r7
 2020              	.LVL201:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 2021              		.loc 2 54 0
 2022 005c 0746     		mov	r7, r0
 2023 005e 04AB     		add	r3, sp, #16
 2024 0060 43F8040D 		str	r0, [r3, #-4]!
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2025              		.loc 2 55 0
 2026 0064 1868     		ldr	r0, [r3]	@ unaligned
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2027              		.loc 2 57 0
 2028 0066 3A46     		mov	r2, r7
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2029              		.loc 2 55 0
 2030 0068 2851     		str	r0, [r5, r4]	@ unaligned
 2031              	.LVL202:
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2032              		.loc 2 57 0
 2033 006a 0434     		adds	r4, r4, #4
 2034              	.LVL203:
 2035 006c 2819     		adds	r0, r5, r4
 2036 006e 3169     		ldr	r1, [r6, #16]
 2037 0070 FFF7FEFF 		bl	memcpy
 2038              	.LVL204:
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 2039              		.loc 2 63 0
 2040 0074 7369     		ldr	r3, [r6, #20]
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 2041              		.loc 2 58 0
 2042 0076 3819     		adds	r0, r7, r4
 2043              	.LVL205:
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 2044              		.loc 2 64 0
 2045 0078 2B54     		strb	r3, [r5, r0]
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 2046              		.loc 2 65 0
 2047 007a 1A0A     		lsrs	r2, r3, #8
 2048 007c 0544     		add	r5, r5, r0
 2049              	.LVL206:
 2050 007e 6A70     		strb	r2, [r5, #1]
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2051              		.loc 2 70 0
 2052 0080 0430     		adds	r0, r0, #4
 2053              	.LVL207:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 2054              		.loc 2 66 0
 2055 0082 1A0C     		lsrs	r2, r3, #16
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2056              		.loc 2 67 0
 2057 0084 1B0E     		lsrs	r3, r3, #24
 2058              	.LVL208:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 2059              		.loc 2 66 0
 2060 0086 AA70     		strb	r2, [r5, #2]
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2061              		.loc 2 67 0
 2062 0088 EB70     		strb	r3, [r5, #3]
 2063              	.LVL209:
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2064              		.loc 2 70 0
 2065 008a 04B0     		add	sp, sp, #16
 2066              	.LCFI14:
 2067              		.cfi_def_cfa_offset 24
 2068              		@ sp needed
 2069 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2070              		.cfi_endproc
 2071              	.LFE61:
 2072              		.cantunwind
 2073              		.fnend
 2075              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
 2076              		.align	1
 2077              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 2078              		.thumb
 2079              		.thumb_func
 2081              	_ZN14rosserial_msgs3Log11deserializeEPh:
 2082              		.fnstart
 2083              	.LFB69:
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2084              		.loc 3 42 0
 2085              		.cfi_startproc
 2086              		@ args = 0, pretend = 0, frame = 8
 2087              		@ frame_needed = 0, uses_anonymous_args = 0
 2088              	.LVL210:
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2089              		.loc 3 45 0
 2090 0000 0B46     		mov	r3, r1
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2091              		.loc 3 42 0
 2092 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2093              	.LCFI15:
 2094              		.cfi_def_cfa_offset 24
 2095              		.cfi_offset 4, -12
 2096              		.cfi_offset 5, -8
 2097              		.cfi_offset 14, -4
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2098              		.loc 3 45 0
 2099 0004 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2100              		.loc 3 42 0
 2101 0008 0446     		mov	r4, r0
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2102              		.loc 3 45 0
 2103 000a 0271     		strb	r2, [r0, #4]
 2104              	.LVL211:
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 2105              		.loc 3 48 0
 2106 000c 1868     		ldr	r0, [r3]	@ unaligned
 2107              	.LVL212:
 2108 000e 4A1D     		adds	r2, r1, #5
 2109 0010 0190     		str	r0, [sp, #4]	@ unaligned
 2110              	.LVL213:
 2111              	.LBB166:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2112              		.loc 3 50 0
 2113 0012 019B     		ldr	r3, [sp, #4]
 2114 0014 581D     		adds	r0, r3, #5
 2115              	.LVL214:
 2116              	.L110:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2117              		.loc 3 50 0 is_stmt 0 discriminator 3
 2118 0016 551A     		subs	r5, r2, r1
 2119              	.LVL215:
 2120 0018 A842     		cmp	r0, r5
 2121 001a 04D9     		bls	.L109
  51:./lib/ros_lib/rosserial_msgs/Log.h ****       }
 2122              		.loc 3 51 0 is_stmt 1 discriminator 2
 2123 001c 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 2124              	.LVL216:
 2125 0020 02F8025C 		strb	r5, [r2, #-2]
 2126              	.LVL217:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2127              		.loc 3 50 0 discriminator 2
 2128 0024 F7E7     		b	.L110
 2129              	.LVL218:
 2130              	.L109:
 2131              	.LBE166:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 2132              		.loc 3 53 0
 2133 0026 0B44     		add	r3, r3, r1
 2134 0028 0022     		movs	r2, #0
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2135              		.loc 3 54 0
 2136 002a 0431     		adds	r1, r1, #4
 2137              	.LVL219:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 2138              		.loc 3 53 0
 2139 002c 1A71     		strb	r2, [r3, #4]
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2140              		.loc 3 54 0
 2141 002e A160     		str	r1, [r4, #8]
 2142              	.LVL220:
  57:./lib/ros_lib/rosserial_msgs/Log.h **** 
 2143              		.loc 3 57 0
 2144 0030 03B0     		add	sp, sp, #12
 2145              	.LCFI16:
 2146              		.cfi_def_cfa_offset 12
 2147              		@ sp needed
 2148 0032 30BD     		pop	{r4, r5, pc}
 2149              		.cfi_endproc
 2150              	.LFE69:
 2151              		.cantunwind
 2152              		.fnend
 2154              		.section	.text._ZN8std_msgs6Header11deserializeEPh,"axG",%progbits,_ZN8std_msgs6Header11deserializ
 2155              		.align	1
 2156              		.weak	_ZN8std_msgs6Header11deserializeEPh
 2157              		.thumb
 2158              		.thumb_func
 2160              	_ZN8std_msgs6Header11deserializeEPh:
 2161              		.fnstart
 2162              	.LFB181:
  53:./lib/ros_lib/std_msgs/Header.h ****     {
 2163              		.loc 9 53 0
 2164              		.cfi_startproc
 2165              		@ args = 0, pretend = 0, frame = 8
 2166              		@ frame_needed = 0, uses_anonymous_args = 0
 2167              	.LVL221:
 2168 0000 0346     		mov	r3, r0
 2169 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2170              	.LCFI17:
 2171              		.cfi_def_cfa_offset 24
 2172              		.cfi_offset 4, -12
 2173              		.cfi_offset 5, -8
 2174              		.cfi_offset 14, -4
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2175              		.loc 9 56 0
 2176 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2177 0006 01F11004 		add	r4, r1, #16
 2178 000a 4260     		str	r2, [r0, #4]
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2179              		.loc 9 57 0
 2180 000c 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 2181              	.LVL222:
 2182 000e 42EA0022 		orr	r2, r2, r0, lsl #8
 2183 0012 5A60     		str	r2, [r3, #4]
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2184              		.loc 9 58 0
 2185 0014 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 2186 0016 42EA0042 		orr	r2, r2, r0, lsl #16
 2187 001a 5A60     		str	r2, [r3, #4]
  59:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 2188              		.loc 9 59 0
 2189 001c C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 2190 001e 42EA0062 		orr	r2, r2, r0, lsl #24
 2191 0022 5A60     		str	r2, [r3, #4]
 2192              	.LVL223:
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2193              		.loc 9 61 0
 2194 0024 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 2195 0026 9A60     		str	r2, [r3, #8]
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2196              		.loc 9 62 0
 2197 0028 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 2198 002a 42EA0022 		orr	r2, r2, r0, lsl #8
 2199 002e 9A60     		str	r2, [r3, #8]
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2200              		.loc 9 63 0
 2201 0030 8879     		ldrb	r0, [r1, #6]	@ zero_extendqisi2
 2202 0032 42EA0042 		orr	r2, r2, r0, lsl #16
 2203 0036 9A60     		str	r2, [r3, #8]
  64:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 2204              		.loc 9 64 0
 2205 0038 C879     		ldrb	r0, [r1, #7]	@ zero_extendqisi2
 2206 003a 42EA0062 		orr	r2, r2, r0, lsl #24
 2207 003e 9A60     		str	r2, [r3, #8]
 2208              	.LVL224:
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2209              		.loc 9 66 0
 2210 0040 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 2211 0042 DA60     		str	r2, [r3, #12]
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2212              		.loc 9 67 0
 2213 0044 487A     		ldrb	r0, [r1, #9]	@ zero_extendqisi2
 2214 0046 42EA0022 		orr	r2, r2, r0, lsl #8
 2215 004a DA60     		str	r2, [r3, #12]
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2216              		.loc 9 68 0
 2217 004c 887A     		ldrb	r0, [r1, #10]	@ zero_extendqisi2
 2218 004e 42EA0042 		orr	r2, r2, r0, lsl #16
 2219 0052 DA60     		str	r2, [r3, #12]
  69:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 2220              		.loc 9 69 0
 2221 0054 C87A     		ldrb	r0, [r1, #11]	@ zero_extendqisi2
 2222 0056 42EA0062 		orr	r2, r2, r0, lsl #24
 2223 005a DA60     		str	r2, [r3, #12]
 2224              	.LVL225:
  72:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 2225              		.loc 9 72 0
 2226 005c C868     		ldr	r0, [r1, #12]	@ unaligned
 2227 005e 0190     		str	r0, [sp, #4]	@ unaligned
 2228              	.LVL226:
 2229              	.LBB167:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2230              		.loc 9 74 0
 2231 0060 019A     		ldr	r2, [sp, #4]
 2232 0062 02F11000 		add	r0, r2, #16
 2233              	.LVL227:
 2234              	.L114:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2235              		.loc 9 74 0 is_stmt 0 discriminator 3
 2236 0066 651A     		subs	r5, r4, r1
 2237              	.LVL228:
 2238 0068 A842     		cmp	r0, r5
 2239 006a 04D9     		bls	.L113
  75:./lib/ros_lib/std_msgs/Header.h ****       }
 2240              		.loc 9 75 0 is_stmt 1 discriminator 2
 2241 006c 14F8015B 		ldrb	r5, [r4], #1	@ zero_extendqisi2
 2242              	.LVL229:
 2243 0070 04F8025C 		strb	r5, [r4, #-2]
 2244              	.LVL230:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2245              		.loc 9 74 0 discriminator 2
 2246 0074 F7E7     		b	.L114
 2247              	.LVL231:
 2248              	.L113:
 2249              	.LBE167:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 2250              		.loc 9 77 0
 2251 0076 0A44     		add	r2, r2, r1
 2252 0078 0024     		movs	r4, #0
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 2253              		.loc 9 78 0
 2254 007a 0F31     		adds	r1, r1, #15
 2255              	.LVL232:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 2256              		.loc 9 77 0
 2257 007c D473     		strb	r4, [r2, #15]
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 2258              		.loc 9 78 0
 2259 007e 1961     		str	r1, [r3, #16]
 2260              	.LVL233:
  81:./lib/ros_lib/std_msgs/Header.h **** 
 2261              		.loc 9 81 0
 2262 0080 03B0     		add	sp, sp, #12
 2263              	.LCFI18:
 2264              		.cfi_def_cfa_offset 12
 2265              		@ sp needed
 2266 0082 30BD     		pop	{r4, r5, pc}
 2267              		.cfi_endproc
 2268              	.LFE181:
 2269              		.cantunwind
 2270              		.fnend
 2272              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 2273              		.align	1
 2274              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 2275              		.thumb
 2276              		.thumb_func
 2278              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 2279              		.fnstart
 2280              	.LFB62:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2281              		.loc 2 72 0
 2282              		.cfi_startproc
 2283              		@ args = 0, pretend = 0, frame = 16
 2284              		@ frame_needed = 0, uses_anonymous_args = 0
 2285              	.LVL234:
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2286              		.loc 2 75 0
 2287 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2288              		.loc 2 72 0
 2289 0002 30B5     		push	{r4, r5, lr}
 2290              	.LCFI19:
 2291              		.cfi_def_cfa_offset 12
 2292              		.cfi_offset 4, -12
 2293              		.cfi_offset 5, -8
 2294              		.cfi_offset 14, -4
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2295              		.loc 2 75 0
 2296 0004 8380     		strh	r3, [r0, #4]	@ movhi
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2297              		.loc 2 76 0
 2298 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2299              		.loc 2 72 0
 2300 0008 0446     		mov	r4, r0
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2301              		.loc 2 76 0
 2302 000a 43EA0223 		orr	r3, r3, r2, lsl #8
 2303 000e 8380     		strh	r3, [r0, #4]	@ movhi
 2304              	.LVL235:
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2305              		.loc 2 79 0
 2306 0010 D1F80200 		ldr	r0, [r1, #2]	@ unaligned
 2307              	.LVL236:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2308              		.loc 2 72 0
 2309 0014 85B0     		sub	sp, sp, #20
 2310              	.LCFI20:
 2311              		.cfi_def_cfa_offset 32
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2312              		.loc 2 79 0
 2313 0016 0190     		str	r0, [sp, #4]	@ unaligned
 2314              	.LVL237:
 2315              	.LBB168:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2316              		.loc 2 81 0
 2317 0018 019D     		ldr	r5, [sp, #4]
 2318 001a 8A1D     		adds	r2, r1, #6
 2319 001c AB1D     		adds	r3, r5, #6
 2320              	.LVL238:
 2321              	.L118:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2322              		.loc 2 81 0 is_stmt 0 discriminator 3
 2323 001e 501A     		subs	r0, r2, r1
 2324              	.LVL239:
 2325 0020 8342     		cmp	r3, r0
 2326 0022 04D9     		bls	.L117
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2327              		.loc 2 82 0 is_stmt 1 discriminator 2
 2328 0024 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 2329              	.LVL240:
 2330 0028 02F8020C 		strb	r0, [r2, #-2]
 2331              	.LVL241:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2332              		.loc 2 81 0 discriminator 2
 2333 002c F7E7     		b	.L118
 2334              	.LVL242:
 2335              	.L117:
 2336              	.LBE168:
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 2337              		.loc 2 84 0
 2338 002e 4A19     		adds	r2, r1, r5
 2339 0030 0020     		movs	r0, #0
 2340              	.LVL243:
 2341 0032 5071     		strb	r0, [r2, #5]
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 2342              		.loc 2 85 0
 2343 0034 4A1D     		adds	r2, r1, #5
 2344 0036 A260     		str	r2, [r4, #8]
 2345              	.LVL244:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2346              		.loc 2 88 0
 2347 0038 C858     		ldr	r0, [r1, r3]	@ unaligned
 2348              	.LBB169:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2349              		.loc 2 90 0
 2350 003a 1A1D     		adds	r2, r3, #4
 2351              	.LBE169:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2352              		.loc 2 88 0
 2353 003c 0290     		str	r0, [sp, #8]	@ unaligned
 2354              	.LVL245:
 2355              	.LBB170:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2356              		.loc 2 90 0
 2357 003e 029B     		ldr	r3, [sp, #8]
 2358 0040 05F10A00 		add	r0, r5, #10
 2359 0044 1344     		add	r3, r3, r2
 2360 0046 0844     		add	r0, r0, r1
 2361              	.LVL246:
 2362              	.L120:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2363              		.loc 2 90 0 is_stmt 0 discriminator 3
 2364 0048 451A     		subs	r5, r0, r1
 2365              	.LVL247:
 2366 004a AB42     		cmp	r3, r5
 2367 004c 04D9     		bls	.L119
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2368              		.loc 2 91 0 is_stmt 1 discriminator 2
 2369 004e 10F8015B 		ldrb	r5, [r0], #1	@ zero_extendqisi2
 2370              	.LVL248:
 2371 0052 00F8025C 		strb	r5, [r0, #-2]
 2372              	.LVL249:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2373              		.loc 2 90 0 discriminator 2
 2374 0056 F7E7     		b	.L120
 2375              	.LVL250:
 2376              	.L119:
 2377              	.LBE170:
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2378              		.loc 2 94 0
 2379 0058 013A     		subs	r2, r2, #1
 2380              	.LVL251:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 2381              		.loc 2 93 0
 2382 005a C818     		adds	r0, r1, r3
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2383              		.loc 2 94 0
 2384 005c 0A44     		add	r2, r2, r1
 2385              	.LVL252:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 2386              		.loc 2 93 0
 2387 005e 0025     		movs	r5, #0
 2388              	.LVL253:
 2389 0060 00F8015C 		strb	r5, [r0, #-1]
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2390              		.loc 2 94 0
 2391 0064 E260     		str	r2, [r4, #12]
 2392              	.LVL254:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2393              		.loc 2 97 0
 2394 0066 0068     		ldr	r0, [r0]	@ unaligned
 2395              	.LBB171:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2396              		.loc 2 99 0
 2397 0068 0433     		adds	r3, r3, #4
 2398              	.LVL255:
 2399              	.LBE171:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2400              		.loc 2 97 0
 2401 006a 0390     		str	r0, [sp, #12]	@ unaligned
 2402              	.LVL256:
 2403              	.LBB172:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2404              		.loc 2 99 0
 2405 006c 0398     		ldr	r0, [sp, #12]
 2406 006e CA18     		adds	r2, r1, r3
 2407 0070 1844     		add	r0, r0, r3
 2408              	.LVL257:
 2409              	.L122:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2410              		.loc 2 99 0 is_stmt 0 discriminator 3
 2411 0072 551A     		subs	r5, r2, r1
 2412              	.LVL258:
 2413 0074 A842     		cmp	r0, r5
 2414 0076 04D9     		bls	.L121
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2415              		.loc 2 100 0 is_stmt 1 discriminator 2
 2416 0078 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 2417              	.LVL259:
 2418 007c 02F8025C 		strb	r5, [r2, #-2]
 2419              	.LVL260:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2420              		.loc 2 99 0 discriminator 2
 2421 0080 F7E7     		b	.L122
 2422              	.LVL261:
 2423              	.L121:
 2424              	.LBE172:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2425              		.loc 2 103 0
 2426 0082 013B     		subs	r3, r3, #1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 2427              		.loc 2 102 0
 2428 0084 0D18     		adds	r5, r1, r0
 2429              	.LVL262:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2430              		.loc 2 103 0
 2431 0086 0B44     		add	r3, r3, r1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 2432              		.loc 2 102 0
 2433 0088 0022     		movs	r2, #0
 2434              	.LVL263:
 2435 008a 05F8012C 		strb	r2, [r5, #-1]
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2436              		.loc 2 103 0
 2437 008e 2361     		str	r3, [r4, #16]
 2438              	.LVL264:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2439              		.loc 2 114 0
 2440 0090 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 2441 0092 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 2442 0094 1B04     		lsls	r3, r3, #16
 2443 0096 43EA0223 		orr	r3, r3, r2, lsl #8
 2444 009a 0A5C     		ldrb	r2, [r1, r0]	@ zero_extendqisi2
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2445              		.loc 2 117 0
 2446 009c 0430     		adds	r0, r0, #4
 2447              	.LVL265:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2448              		.loc 2 114 0
 2449 009e 1343     		orrs	r3, r3, r2
 2450 00a0 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 2451 00a2 43EA0263 		orr	r3, r3, r2, lsl #24
 2452 00a6 6361     		str	r3, [r4, #20]
 2453              	.LVL266:
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2454              		.loc 2 117 0
 2455 00a8 05B0     		add	sp, sp, #20
 2456              	.LCFI21:
 2457              		.cfi_def_cfa_offset 12
 2458              		@ sp needed
 2459 00aa 30BD     		pop	{r4, r5, pc}
 2460              		.cfi_endproc
 2461              	.LFE62:
 2462              		.cantunwind
 2463              		.fnend
 2465              		.section	.text._ZN8std_msgs19MultiArrayDimension11deserializeEPh,"axG",%progbits,_ZN8std_msgs19Mul
 2466              		.align	1
 2467              		.weak	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 2468              		.thumb
 2469              		.thumb_func
 2471              	_ZN8std_msgs19MultiArrayDimension11deserializeEPh:
 2472              		.fnstart
 2473              	.LFB153:
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 2474              		.loc 5 47 0
 2475              		.cfi_startproc
 2476              		@ args = 0, pretend = 0, frame = 8
 2477              		@ frame_needed = 0, uses_anonymous_args = 0
 2478              	.LVL267:
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 2479              		.loc 5 51 0
 2480 0000 0B46     		mov	r3, r1
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 2481              		.loc 5 47 0
 2482 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2483              	.LCFI22:
 2484              		.cfi_def_cfa_offset 24
 2485              		.cfi_offset 4, -12
 2486              		.cfi_offset 5, -8
 2487              		.cfi_offset 14, -4
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 2488              		.loc 5 47 0
 2489 0004 0246     		mov	r2, r0
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 2490              		.loc 5 51 0
 2491 0006 53F8040B 		ldr	r0, [r3], #4	@ unaligned
 2492              	.LVL268:
 2493 000a 0190     		str	r0, [sp, #4]	@ unaligned
 2494              	.LVL269:
 2495              	.LBB173:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 2496              		.loc 5 53 0
 2497 000c 0198     		ldr	r0, [sp, #4]
 2498 000e 051D     		adds	r5, r0, #4
 2499              	.LVL270:
 2500              	.L128:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 2501              		.loc 5 53 0 is_stmt 0 discriminator 3
 2502 0010 5C1A     		subs	r4, r3, r1
 2503              	.LVL271:
 2504 0012 A542     		cmp	r5, r4
 2505 0014 04D9     		bls	.L127
  54:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       }
 2506              		.loc 5 54 0 is_stmt 1 discriminator 2
 2507 0016 13F8014B 		ldrb	r4, [r3], #1	@ zero_extendqisi2
 2508              	.LVL272:
 2509 001a 03F8024C 		strb	r4, [r3, #-2]
 2510              	.LVL273:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 2511              		.loc 5 53 0 discriminator 2
 2512 001e F7E7     		b	.L128
 2513              	.LVL274:
 2514              	.L127:
 2515              	.LBE173:
  56:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->label = (char *)(inbuffer + offset-1);
 2516              		.loc 5 56 0
 2517 0020 0C18     		adds	r4, r1, r0
 2518              	.LVL275:
 2519 0022 0023     		movs	r3, #0
 2520              	.LVL276:
 2521 0024 E370     		strb	r3, [r4, #3]
  57:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
 2522              		.loc 5 57 0
 2523 0026 CB1C     		adds	r3, r1, #3
 2524 0028 5360     		str	r3, [r2, #4]
 2525              	.LVL277:
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2526              		.loc 5 59 0
 2527 002a 4B5D     		ldrb	r3, [r1, r5]	@ zero_extendqisi2
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 2528              		.loc 5 70 0
 2529 002c 0C30     		adds	r0, r0, #12
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2530              		.loc 5 59 0
 2531 002e 9360     		str	r3, [r2, #8]
  60:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2532              		.loc 5 60 0
 2533 0030 6179     		ldrb	r1, [r4, #5]	@ zero_extendqisi2
 2534              	.LVL278:
 2535 0032 43EA0123 		orr	r3, r3, r1, lsl #8
 2536 0036 9360     		str	r3, [r2, #8]
  61:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2537              		.loc 5 61 0
 2538 0038 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 2539 003a 43EA0143 		orr	r3, r3, r1, lsl #16
 2540 003e 9360     		str	r3, [r2, #8]
  62:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
 2541              		.loc 5 62 0
 2542 0040 E179     		ldrb	r1, [r4, #7]	@ zero_extendqisi2
 2543 0042 43EA0163 		orr	r3, r3, r1, lsl #24
 2544 0046 9360     		str	r3, [r2, #8]
 2545              	.LVL279:
  64:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2546              		.loc 5 64 0
 2547 0048 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 2548 004a D360     		str	r3, [r2, #12]
  65:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2549              		.loc 5 65 0
 2550 004c 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 2551 004e 43EA0123 		orr	r3, r3, r1, lsl #8
 2552 0052 D360     		str	r3, [r2, #12]
  66:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2553              		.loc 5 66 0
 2554 0054 A17A     		ldrb	r1, [r4, #10]	@ zero_extendqisi2
 2555 0056 43EA0143 		orr	r3, r3, r1, lsl #16
 2556 005a D360     		str	r3, [r2, #12]
  67:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
 2557              		.loc 5 67 0
 2558 005c E17A     		ldrb	r1, [r4, #11]	@ zero_extendqisi2
 2559 005e 43EA0163 		orr	r3, r3, r1, lsl #24
 2560 0062 D360     		str	r3, [r2, #12]
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 2561              		.loc 5 70 0
 2562 0064 03B0     		add	sp, sp, #12
 2563              	.LCFI23:
 2564              		.cfi_def_cfa_offset 12
 2565              		@ sp needed
 2566 0066 30BD     		pop	{r4, r5, pc}
 2567              		.cfi_endproc
 2568              	.LFE153:
 2569              		.cantunwind
 2570              		.fnend
 2572              		.section	.text._ZN11sensor_msgs3Joy11deserializeEPh,"axG",%progbits,_ZN11sensor_msgs3Joy11deserial
 2573              		.align	1
 2574              		.weak	_ZN11sensor_msgs3Joy11deserializeEPh
 2575              		.thumb
 2576              		.thumb_func
 2578              	_ZN11sensor_msgs3Joy11deserializeEPh:
 2579              		.fnstart
 2580              	.LFB188:
  70:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 2581              		.loc 10 70 0
 2582              		.cfi_startproc
 2583              		@ args = 0, pretend = 0, frame = 0
 2584              		@ frame_needed = 0, uses_anonymous_args = 0
 2585              	.LVL280:
 2586 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2587              	.LCFI24:
 2588              		.cfi_def_cfa_offset 24
 2589              		.cfi_offset 3, -24
 2590              		.cfi_offset 4, -20
 2591              		.cfi_offset 5, -16
 2592              		.cfi_offset 6, -12
 2593              		.cfi_offset 7, -8
 2594              		.cfi_offset 14, -4
  70:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 2595              		.loc 10 70 0
 2596 0002 0446     		mov	r4, r0
 2597              	.LVL281:
  73:./lib/ros_lib/sensor_msgs/Joy.h ****       uint8_t axes_lengthT = *(inbuffer + offset++);
 2598              		.loc 10 73 0
 2599 0004 0430     		adds	r0, r0, #4
 2600              	.LVL282:
  70:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 2601              		.loc 10 70 0
 2602 0006 0D46     		mov	r5, r1
  73:./lib/ros_lib/sensor_msgs/Joy.h ****       uint8_t axes_lengthT = *(inbuffer + offset++);
 2603              		.loc 10 73 0
 2604 0008 FFF7FEFF 		bl	_ZN8std_msgs6Header11deserializeEPh
 2605              	.LVL283:
  75:./lib/ros_lib/sensor_msgs/Joy.h ****         this->axes = (float*)realloc(this->axes, axes_lengthT * sizeof(float));
 2606              		.loc 10 75 0
 2607 000c 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
  74:./lib/ros_lib/sensor_msgs/Joy.h ****       if(axes_lengthT > axes_length)
 2608              		.loc 10 74 0
 2609 000e 2F5C     		ldrb	r7, [r5, r0]	@ zero_extendqisi2
  73:./lib/ros_lib/sensor_msgs/Joy.h ****       uint8_t axes_lengthT = *(inbuffer + offset++);
 2610              		.loc 10 73 0
 2611 0010 0646     		mov	r6, r0
 2612              	.LVL284:
  75:./lib/ros_lib/sensor_msgs/Joy.h ****         this->axes = (float*)realloc(this->axes, axes_lengthT * sizeof(float));
 2613              		.loc 10 75 0
 2614 0012 BB42     		cmp	r3, r7
 2615 0014 04D2     		bcs	.L131
  76:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += 3;
 2616              		.loc 10 76 0
 2617 0016 B900     		lsls	r1, r7, #2
 2618 0018 206A     		ldr	r0, [r4, #32]
 2619              	.LVL285:
 2620 001a FFF7FEFF 		bl	realloc
 2621              	.LVL286:
 2622 001e 2062     		str	r0, [r4, #32]
 2623              	.L131:
 2624              	.LVL287:
 2625 0020 301D     		adds	r0, r6, #4
 2626              	.LVL288:
  78:./lib/ros_lib/sensor_msgs/Joy.h ****       for( uint8_t i = 0; i < axes_length; i++){
 2627              		.loc 10 78 0
 2628 0022 2776     		strb	r7, [r4, #24]
 2629              	.LVL289:
 2630 0024 2844     		add	r0, r0, r5
 2631              	.LVL290:
 2632 0026 0022     		movs	r2, #0
 2633              	.LVL291:
 2634              	.L133:
 2635              	.LBB174:
  79:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 2636              		.loc 10 79 0 discriminator 3
 2637 0028 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 2638 002a 571C     		adds	r7, r2, #1
 2639 002c D2B2     		uxtb	r2, r2
 2640 002e 9342     		cmp	r3, r2
 2641 0030 A0EB0506 		sub	r6, r0, r5
 2642              	.LVL292:
 2643 0034 00F10400 		add	r0, r0, #4
 2644 0038 14D9     		bls	.L132
 2645              	.LVL293:
 2646              	.LBB175:
  88:./lib/ros_lib/sensor_msgs/Joy.h ****       this->st_axes = u_st_axes.real;
 2647              		.loc 10 88 0 discriminator 2
 2648 003a 10F8023C 		ldrb	r3, [r0, #-2]	@ zero_extendqisi2
 2649 003e 10F8031C 		ldrb	r1, [r0, #-3]	@ zero_extendqisi2
 2650 0042 1B04     		lsls	r3, r3, #16
 2651              	.LVL294:
 2652 0044 43EA0123 		orr	r3, r3, r1, lsl #8
 2653              	.LVL295:
 2654 0048 10F8041C 		ldrb	r1, [r0, #-4]	@ zero_extendqisi2
 2655 004c 0B43     		orrs	r3, r3, r1
 2656 004e 10F8011C 		ldrb	r1, [r0, #-1]	@ zero_extendqisi2
 2657              	.LVL296:
  89:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->st_axes);
 2658              		.loc 10 89 0 discriminator 2
 2659 0052 43EA0163 		orr	r3, r3, r1, lsl #24
 2660 0056 E361     		str	r3, [r4, #28]	@ float
 2661              	.LVL297:
  91:./lib/ros_lib/sensor_msgs/Joy.h ****       }
 2662              		.loc 10 91 0 discriminator 2
 2663 0058 E169     		ldr	r1, [r4, #28]	@ unaligned
 2664 005a 236A     		ldr	r3, [r4, #32]
 2665 005c 43F82210 		str	r1, [r3, r2, lsl #2]	@ unaligned
 2666              	.LVL298:
 2667              	.LBE175:
  79:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 2668              		.loc 10 79 0 discriminator 2
 2669 0060 3A46     		mov	r2, r7
 2670 0062 E1E7     		b	.L133
 2671              	.LVL299:
 2672              	.L132:
 2673              	.LBE174:
  93:./lib/ros_lib/sensor_msgs/Joy.h ****       if(buttons_lengthT > buttons_length)
 2674              		.loc 10 93 0
 2675 0064 AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2676              	.LVL300:
  94:./lib/ros_lib/sensor_msgs/Joy.h ****         this->buttons = (int32_t*)realloc(this->buttons, buttons_lengthT * sizeof(int32_t));
 2677              		.loc 10 94 0
 2678 0066 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 2679 006a BB42     		cmp	r3, r7
 2680 006c 04D2     		bcs	.L134
  95:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += 3;
 2681              		.loc 10 95 0
 2682 006e B900     		lsls	r1, r7, #2
 2683 0070 E06A     		ldr	r0, [r4, #44]
 2684 0072 FFF7FEFF 		bl	realloc
 2685              	.LVL301:
 2686 0076 E062     		str	r0, [r4, #44]
 2687              	.L134:
 2688              	.LVL302:
 2689 0078 331D     		adds	r3, r6, #4
 2690              	.LVL303:
  97:./lib/ros_lib/sensor_msgs/Joy.h ****       for( uint8_t i = 0; i < buttons_length; i++){
 2691              		.loc 10 97 0
 2692 007a 84F82470 		strb	r7, [r4, #36]
 2693              	.LVL304:
 2694 007e 2B44     		add	r3, r3, r5
 2695              	.LVL305:
 2696 0080 0022     		movs	r2, #0
 2697              	.LVL306:
 2698              	.L136:
 2699              	.LBB176:
  98:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 2700              		.loc 10 98 0 discriminator 3
 2701 0082 94F82410 		ldrb	r1, [r4, #36]	@ zero_extendqisi2
 2702 0086 561C     		adds	r6, r2, #1
 2703 0088 D2B2     		uxtb	r2, r2
 2704 008a 9142     		cmp	r1, r2
 2705 008c A3EB0500 		sub	r0, r3, r5
 2706              	.LVL307:
 2707 0090 03F10403 		add	r3, r3, #4
 2708 0094 14D9     		bls	.L135
 2709              	.LVL308:
 2710              	.LBB177:
 108:./lib/ros_lib/sensor_msgs/Joy.h ****       offset += sizeof(this->st_buttons);
 2711              		.loc 10 108 0 discriminator 2
 2712 0096 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 2713              	.LVL309:
 2714 009a 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2715              	.LVL310:
 2716 009e 0904     		lsls	r1, r1, #16
 2717              	.LVL311:
 2718 00a0 41EA0021 		orr	r1, r1, r0, lsl #8
 2719 00a4 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2720              	.LVL312:
 2721 00a8 0143     		orrs	r1, r1, r0
 2722 00aa 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2723 00ae 41EA0061 		orr	r1, r1, r0, lsl #24
 2724 00b2 A162     		str	r1, [r4, #40]
 2725              	.LVL313:
 110:./lib/ros_lib/sensor_msgs/Joy.h ****       }
 2726              		.loc 10 110 0 discriminator 2
 2727 00b4 A06A     		ldr	r0, [r4, #40]	@ unaligned
 2728 00b6 E16A     		ldr	r1, [r4, #44]
 2729 00b8 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 2730              	.LVL314:
 2731              	.LBE177:
  98:./lib/ros_lib/sensor_msgs/Joy.h ****       union {
 2732              		.loc 10 98 0 discriminator 2
 2733 00bc 3246     		mov	r2, r6
 2734 00be E0E7     		b	.L136
 2735              	.LVL315:
 2736              	.L135:
 2737              	.LBE176:
 113:./lib/ros_lib/sensor_msgs/Joy.h **** 
 2738              		.loc 10 113 0
 2739 00c0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2740              		.cfi_endproc
 2741              	.LFE188:
 2742              		.cantunwind
 2743              		.fnend
 2745              		.section	.text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE8callbackEPh,"axG",%progbits,_ZN3ros10Subsc
 2746              		.align	1
 2747              		.weak	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE8callbackEPh
 2748              		.thumb
 2749              		.thumb_func
 2751              	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE8callbackEPh:
 2752              		.fnstart
 2753              	.LFB234:
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 2754              		.loc 12 72 0
 2755              		.cfi_startproc
 2756              		@ args = 0, pretend = 0, frame = 0
 2757              		@ frame_needed = 0, uses_anonymous_args = 0
 2758              	.LVL316:
 2759 0000 70B5     		push	{r4, r5, r6, lr}
 2760              	.LCFI25:
 2761              		.cfi_def_cfa_offset 16
 2762              		.cfi_offset 4, -16
 2763              		.cfi_offset 5, -12
 2764              		.cfi_offset 6, -8
 2765              		.cfi_offset 14, -4
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 2766              		.loc 12 72 0
 2767 0002 0546     		mov	r5, r0
  73:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 2768              		.loc 12 73 0
 2769 0004 00F10C04 		add	r4, r0, #12
 2770 0008 2046     		mov	r0, r4
 2771              	.LVL317:
 2772 000a FFF7FEFF 		bl	_ZN11sensor_msgs3Joy11deserializeEPh
 2773              	.LVL318:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 2774              		.loc 12 74 0
 2775 000e EB6B     		ldr	r3, [r5, #60]
 2776 0010 2046     		mov	r0, r4
  75:./lib/ros_lib/ros/subscriber.h **** 
 2777              		.loc 12 75 0
 2778 0012 BDE87040 		pop	{r4, r5, r6, lr}
 2779              	.LCFI26:
 2780              		.cfi_restore 14
 2781              		.cfi_restore 6
 2782              		.cfi_restore 5
 2783              		.cfi_restore 4
 2784              		.cfi_def_cfa_offset 0
 2785              	.LVL319:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 2786              		.loc 12 74 0
 2787 0016 1847     		bx	r3	@ indirect register sibling call
 2788              	.LVL320:
 2789              		.cfi_endproc
 2790              	.LFE234:
 2791              		.cantunwind
 2792              		.fnend
 2794              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 2795              		.align	1
 2796              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 2797              		.thumb
 2798              		.thumb_func
 2800              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 2801              		.fnstart
 2802              	.LFB83:
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2803              		.loc 4 123 0
 2804              		.cfi_startproc
 2805              		@ args = 0, pretend = 0, frame = 8
 2806              		@ frame_needed = 0, uses_anonymous_args = 0
 2807              	.LVL321:
 2808 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2809              	.LCFI27:
 2810              		.cfi_def_cfa_offset 32
 2811              		.cfi_offset 4, -20
 2812              		.cfi_offset 5, -16
 2813              		.cfi_offset 6, -12
 2814              		.cfi_offset 7, -8
 2815              		.cfi_offset 14, -4
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 2816              		.loc 4 126 0
 2817 0002 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 2818              	.LVL322:
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2819              		.loc 4 127 0
 2820 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2821              		.loc 4 123 0
 2822 0006 0446     		mov	r4, r0
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2823              		.loc 4 127 0
 2824 0008 AB42     		cmp	r3, r5
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2825              		.loc 4 123 0
 2826 000a 0E46     		mov	r6, r1
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2827              		.loc 4 127 0
 2828 000c 04D2     		bcs	.L139
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2829              		.loc 4 128 0
 2830 000e A900     		lsls	r1, r5, #2
 2831              	.LVL323:
 2832 0010 C068     		ldr	r0, [r0, #12]
 2833              	.LVL324:
 2834 0012 FFF7FEFF 		bl	realloc
 2835              	.LVL325:
 2836 0016 E060     		str	r0, [r4, #12]
 2837              	.L139:
 2838              	.LVL326:
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 2839              		.loc 4 130 0
 2840 0018 2571     		strb	r5, [r4, #4]
 2841              	.LVL327:
 2842 001a 321D     		adds	r2, r6, #4
 2843 001c 0021     		movs	r1, #0
 2844              	.LVL328:
 2845              	.L141:
 2846              	.LBB178:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2847              		.loc 4 131 0 discriminator 3
 2848 001e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2849 0020 4F1C     		adds	r7, r1, #1
 2850 0022 C9B2     		uxtb	r1, r1
 2851 0024 8B42     		cmp	r3, r1
 2852 0026 A2EB0605 		sub	r5, r2, r6
 2853              	.LVL329:
 2854 002a 02F10402 		add	r2, r2, #4
 2855 002e 14D9     		bls	.L140
 2856              	.LVL330:
 2857              	.LBB179:
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 2858              		.loc 4 141 0 discriminator 2
 2859 0030 12F8023C 		ldrb	r3, [r2, #-2]	@ zero_extendqisi2
 2860              	.LVL331:
 2861 0034 12F8030C 		ldrb	r0, [r2, #-3]	@ zero_extendqisi2
 2862              	.LVL332:
 2863 0038 1B04     		lsls	r3, r3, #16
 2864              	.LVL333:
 2865 003a 43EA0023 		orr	r3, r3, r0, lsl #8
 2866 003e 12F8040C 		ldrb	r0, [r2, #-4]	@ zero_extendqisi2
 2867              	.LVL334:
 2868 0042 0343     		orrs	r3, r3, r0
 2869 0044 12F8010C 		ldrb	r0, [r2, #-1]	@ zero_extendqisi2
 2870 0048 43EA0063 		orr	r3, r3, r0, lsl #24
 2871 004c A360     		str	r3, [r4, #8]
 2872              	.LVL335:
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2873              		.loc 4 143 0 discriminator 2
 2874 004e A068     		ldr	r0, [r4, #8]	@ unaligned
 2875 0050 E368     		ldr	r3, [r4, #12]
 2876 0052 43F82100 		str	r0, [r3, r1, lsl #2]	@ unaligned
 2877              	.LVL336:
 2878              	.LBE179:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2879              		.loc 4 131 0 discriminator 2
 2880 0056 3946     		mov	r1, r7
 2881 0058 E1E7     		b	.L141
 2882              	.LVL337:
 2883              	.L140:
 2884              	.LBE178:
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 2885              		.loc 4 145 0
 2886 005a 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2887              	.LVL338:
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 2888              		.loc 4 146 0
 2889 005c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 2890 005e BB42     		cmp	r3, r7
 2891 0060 04D2     		bcs	.L142
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2892              		.loc 4 147 0
 2893 0062 B900     		lsls	r1, r7, #2
 2894 0064 A069     		ldr	r0, [r4, #24]
 2895 0066 FFF7FEFF 		bl	realloc
 2896              	.LVL339:
 2897 006a A061     		str	r0, [r4, #24]
 2898              	.L142:
 2899              	.LVL340:
 2900 006c 2B1D     		adds	r3, r5, #4
 2901              	.LVL341:
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 2902              		.loc 4 149 0
 2903 006e 2774     		strb	r7, [r4, #16]
 2904              	.LVL342:
 2905 0070 3344     		add	r3, r3, r6
 2906              	.LVL343:
 2907 0072 0022     		movs	r2, #0
 2908              	.LVL344:
 2909              	.L144:
 2910              	.LBB180:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2911              		.loc 4 150 0 discriminator 3
 2912 0074 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 2913 0076 571C     		adds	r7, r2, #1
 2914 0078 D2B2     		uxtb	r2, r2
 2915 007a 9142     		cmp	r1, r2
 2916 007c A3EB0605 		sub	r5, r3, r6
 2917              	.LVL345:
 2918 0080 03F10403 		add	r3, r3, #4
 2919 0084 14D9     		bls	.L143
 2920              	.LVL346:
 2921              	.LBB181:
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 2922              		.loc 4 159 0 discriminator 2
 2923 0086 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 2924 008a 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2925 008e 0904     		lsls	r1, r1, #16
 2926              	.LVL347:
 2927 0090 41EA0021 		orr	r1, r1, r0, lsl #8
 2928              	.LVL348:
 2929 0094 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2930 0098 0143     		orrs	r1, r1, r0
 2931 009a 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2932              	.LVL349:
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 2933              		.loc 4 160 0 discriminator 2
 2934 009e 41EA0061 		orr	r1, r1, r0, lsl #24
 2935 00a2 6161     		str	r1, [r4, #20]	@ float
 2936              	.LVL350:
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2937              		.loc 4 162 0 discriminator 2
 2938 00a4 6069     		ldr	r0, [r4, #20]	@ unaligned
 2939 00a6 A169     		ldr	r1, [r4, #24]
 2940 00a8 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 2941              	.LVL351:
 2942              	.LBE181:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2943              		.loc 4 150 0 discriminator 2
 2944 00ac 3A46     		mov	r2, r7
 2945 00ae E1E7     		b	.L144
 2946              	.LVL352:
 2947              	.L143:
 2948              	.LBE180:
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 2949              		.loc 4 164 0
 2950 00b0 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2951              	.LVL353:
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 2952              		.loc 4 165 0
 2953 00b2 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 2954 00b4 BB42     		cmp	r3, r7
 2955 00b6 04D2     		bcs	.L145
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2956              		.loc 4 166 0
 2957 00b8 B900     		lsls	r1, r7, #2
 2958 00ba 606A     		ldr	r0, [r4, #36]
 2959 00bc FFF7FEFF 		bl	realloc
 2960              	.LVL354:
 2961 00c0 6062     		str	r0, [r4, #36]
 2962              	.L145:
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 2963              		.loc 4 167 0
 2964 00c2 2B1D     		adds	r3, r5, #4
 2965              	.LVL355:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2966              		.loc 4 168 0
 2967 00c4 0025     		movs	r5, #0
 2968              	.LBB182:
 2969              	.LBB183:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2970              		.loc 4 176 0
 2971 00c6 AE46     		mov	lr, r5
 2972              	.LBE183:
 2973              	.LBE182:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2974              		.loc 4 168 0
 2975 00c8 2777     		strb	r7, [r4, #28]
 2976              	.LVL356:
 2977              	.L149:
 2978              	.LBB187:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2979              		.loc 4 169 0 discriminator 1
 2980 00ca 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 2981 00cc EFB2     		uxtb	r7, r5
 2982 00ce BA42     		cmp	r2, r7
 2983 00d0 19D9     		bls	.L146
 2984              	.LBB186:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2985              		.loc 4 171 0
 2986 00d2 F058     		ldr	r0, [r6, r3]	@ unaligned
 2987              	.LBB184:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2988              		.loc 4 173 0
 2989 00d4 1A1D     		adds	r2, r3, #4
 2990              	.LBE184:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2991              		.loc 4 171 0
 2992 00d6 0190     		str	r0, [sp, #4]	@ unaligned
 2993              	.LVL357:
 2994              	.LBB185:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2995              		.loc 4 173 0
 2996 00d8 019B     		ldr	r3, [sp, #4]
 2997 00da B118     		adds	r1, r6, r2
 2998 00dc 1344     		add	r3, r3, r2
 2999              	.LVL358:
 3000              	.L148:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3001              		.loc 4 173 0 is_stmt 0 discriminator 3
 3002 00de 881B     		subs	r0, r1, r6
 3003              	.LVL359:
 3004 00e0 8342     		cmp	r3, r0
 3005 00e2 04D9     		bls	.L147
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 3006              		.loc 4 174 0 is_stmt 1 discriminator 2
 3007 00e4 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 3008              	.LVL360:
 3009 00e8 01F8020C 		strb	r0, [r1, #-2]
 3010              	.LVL361:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 3011              		.loc 4 173 0 discriminator 2
 3012 00ec F7E7     		b	.L148
 3013              	.LVL362:
 3014              	.L147:
 3015              	.LBE185:
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 3016              		.loc 4 177 0 discriminator 2
 3017 00ee 013A     		subs	r2, r2, #1
 3018              	.LVL363:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 3019              		.loc 4 176 0 discriminator 2
 3020 00f0 F118     		adds	r1, r6, r3
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 3021              		.loc 4 177 0 discriminator 2
 3022 00f2 3244     		add	r2, r2, r6
 3023              	.LVL364:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 3024              		.loc 4 176 0 discriminator 2
 3025 00f4 01F801EC 		strb	lr, [r1, #-1]
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 3026              		.loc 4 177 0 discriminator 2
 3027 00f8 2262     		str	r2, [r4, #32]
 3028              	.LVL365:
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 3029              		.loc 4 179 0 discriminator 2
 3030 00fa 216A     		ldr	r1, [r4, #32]	@ unaligned
 3031 00fc 626A     		ldr	r2, [r4, #36]
 3032 00fe 0135     		adds	r5, r5, #1
 3033              	.LVL366:
 3034 0100 42F82710 		str	r1, [r2, r7, lsl #2]	@ unaligned
 3035              	.LVL367:
 3036              	.LBE186:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 3037              		.loc 4 169 0 discriminator 2
 3038 0104 E1E7     		b	.L149
 3039              	.LVL368:
 3040              	.L146:
 3041              	.LBE187:
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 3042              		.loc 4 182 0
 3043 0106 1846     		mov	r0, r3
 3044 0108 03B0     		add	sp, sp, #12
 3045              	.LCFI28:
 3046              		.cfi_def_cfa_offset 20
 3047              		@ sp needed
 3048 010a F0BD     		pop	{r4, r5, r6, r7, pc}
 3049              		.cfi_endproc
 3050              	.LFE83:
 3051              		.cantunwind
 3052              		.fnend
 3054              		.section	.text._ZN8std_msgs16MultiArrayLayout11deserializeEPh,"axG",%progbits,_ZN8std_msgs16MultiA
 3055              		.align	1
 3056              		.weak	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 3057              		.thumb
 3058              		.thumb_func
 3060              	_ZN8std_msgs16MultiArrayLayout11deserializeEPh:
 3061              		.fnstart
 3062              	.LFB160:
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 3063              		.loc 6 45 0
 3064              		.cfi_startproc
 3065              		@ args = 0, pretend = 0, frame = 0
 3066              		@ frame_needed = 0, uses_anonymous_args = 0
 3067              	.LVL369:
 3068 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3069              	.LCFI29:
 3070              		.cfi_def_cfa_offset 32
 3071              		.cfi_offset 4, -32
 3072              		.cfi_offset 5, -28
 3073              		.cfi_offset 6, -24
 3074              		.cfi_offset 7, -20
 3075              		.cfi_offset 8, -16
 3076              		.cfi_offset 9, -12
 3077              		.cfi_offset 10, -8
 3078              		.cfi_offset 14, -4
  48:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       if(dim_lengthT > dim_length)
 3079              		.loc 6 48 0
 3080 0004 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 3081              	.LVL370:
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 3082              		.loc 6 49 0
 3083 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 3084              		.loc 6 45 0
 3085 0008 0446     		mov	r4, r0
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 3086              		.loc 6 49 0
 3087 000a AB42     		cmp	r3, r5
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 3088              		.loc 6 45 0
 3089 000c 0F46     		mov	r7, r1
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 3090              		.loc 6 49 0
 3091 000e 04D2     		bcs	.L152
  50:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += 3;
 3092              		.loc 6 50 0
 3093 0010 2901     		lsls	r1, r5, #4
 3094              	.LVL371:
 3095 0012 8069     		ldr	r0, [r0, #24]
 3096              	.LVL372:
 3097 0014 FFF7FEFF 		bl	realloc
 3098              	.LVL373:
 3099 0018 A061     		str	r0, [r4, #24]
 3100              	.L152:
 3101              	.LVL374:
  52:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 3102              		.loc 6 52 0
 3103 001a 2571     		strb	r5, [r4, #4]
 3104              	.LVL375:
 3105 001c 0023     		movs	r3, #0
  51:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length = dim_lengthT;
 3106              		.loc 6 51 0
 3107 001e 0426     		movs	r6, #4
 3108              	.LBB188:
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 3109              		.loc 6 54 0
 3110 0020 04F10808 		add	r8, r4, #8
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 3111              		.loc 6 55 0
 3112 0024 04F1180A 		add	r10, r4, #24
 3113              	.LVL376:
 3114              	.L155:
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
 3115              		.loc 6 53 0 discriminator 3
 3116 0028 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 3117 002a DDB2     		uxtb	r5, r3
 3118 002c AA42     		cmp	r2, r5
 3119 002e 03F10109 		add	r9, r3, #1
 3120 0032 07EB0601 		add	r1, r7, r6
 3121 0036 0FD9     		bls	.L153
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 3122              		.loc 6 54 0 discriminator 2
 3123 0038 4046     		mov	r0, r8
 3124 003a FFF7FEFF 		bl	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 3125              	.LVL377:
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 3126              		.loc 6 55 0 discriminator 2
 3127 003e 4246     		mov	r2, r8
 3128 0040 A369     		ldr	r3, [r4, #24]
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 3129              		.loc 6 54 0 discriminator 2
 3130 0042 0644     		add	r6, r6, r0
 3131              	.LVL378:
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 3132              		.loc 6 55 0 discriminator 2
 3133 0044 03EB0513 		add	r3, r3, r5, lsl #4
 3134              	.L154:
 3135 0048 52F8041B 		ldr	r1, [r2], #4	@ unaligned
 3136 004c 5245     		cmp	r2, r10
 3137 004e 43F8041B 		str	r1, [r3], #4	@ unaligned
 3138 0052 F9D1     		bne	.L154
 3139              	.LVL379:
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
 3140              		.loc 6 53 0 discriminator 2
 3141 0054 4B46     		mov	r3, r9
 3142 0056 E7E7     		b	.L155
 3143              	.LVL380:
 3144              	.L153:
 3145              	.LBE188:
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 3146              		.loc 6 57 0
 3147 0058 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 3148              	.LVL381:
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
 3149              		.loc 6 63 0
 3150 005a 301D     		adds	r0, r6, #4
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 3151              		.loc 6 57 0
 3152 005c E361     		str	r3, [r4, #28]
  58:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 3153              		.loc 6 58 0
 3154 005e 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 3155 0060 43EA0223 		orr	r3, r3, r2, lsl #8
 3156 0064 E361     		str	r3, [r4, #28]
  59:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 3157              		.loc 6 59 0
 3158 0066 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 3159 0068 43EA0243 		orr	r3, r3, r2, lsl #16
 3160 006c E361     		str	r3, [r4, #28]
  60:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
 3161              		.loc 6 60 0
 3162 006e CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 3163 0070 43EA0263 		orr	r3, r3, r2, lsl #24
 3164 0074 E361     		str	r3, [r4, #28]
 3165              	.LVL382:
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
 3166              		.loc 6 63 0
 3167 0076 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3168              		.cfi_endproc
 3169              	.LFE160:
 3170              		.cantunwind
 3171              		.fnend
 3173              		.section	.text._ZN8std_msgs17Float32MultiArray11deserializeEPh,"axG",%progbits,_ZN8std_msgs17Float
 3174              		.align	1
 3175              		.weak	_ZN8std_msgs17Float32MultiArray11deserializeEPh
 3176              		.thumb
 3177              		.thumb_func
 3179              	_ZN8std_msgs17Float32MultiArray11deserializeEPh:
 3180              		.fnstart
 3181              	.LFB167:
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 3182              		.loc 7 50 0
 3183              		.cfi_startproc
 3184              		@ args = 0, pretend = 0, frame = 0
 3185              		@ frame_needed = 0, uses_anonymous_args = 0
 3186              	.LVL383:
 3187 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3188              	.LCFI30:
 3189              		.cfi_def_cfa_offset 24
 3190              		.cfi_offset 3, -24
 3191              		.cfi_offset 4, -20
 3192              		.cfi_offset 5, -16
 3193              		.cfi_offset 6, -12
 3194              		.cfi_offset 7, -8
 3195              		.cfi_offset 14, -4
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 3196              		.loc 7 50 0
 3197 0002 0446     		mov	r4, r0
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 3198              		.loc 7 53 0
 3199 0004 0430     		adds	r0, r0, #4
 3200              	.LVL384:
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 3201              		.loc 7 50 0
 3202 0006 0D46     		mov	r5, r1
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 3203              		.loc 7 53 0
 3204 0008 FFF7FEFF 		bl	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 3205              	.LVL385:
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
 3206              		.loc 7 55 0
 3207 000c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
  54:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       if(data_lengthT > data_length)
 3208              		.loc 7 54 0
 3209 0010 2F5C     		ldrb	r7, [r5, r0]	@ zero_extendqisi2
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 3210              		.loc 7 53 0
 3211 0012 0646     		mov	r6, r0
 3212              	.LVL386:
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
 3213              		.loc 7 55 0
 3214 0014 BB42     		cmp	r3, r7
 3215 0016 04D2     		bcs	.L158
  56:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += 3;
 3216              		.loc 7 56 0
 3217 0018 B900     		lsls	r1, r7, #2
 3218 001a E06A     		ldr	r0, [r4, #44]
 3219              	.LVL387:
 3220 001c FFF7FEFF 		bl	realloc
 3221              	.LVL388:
 3222 0020 E062     		str	r0, [r4, #44]
 3223              	.L158:
 3224              	.LVL389:
 3225 0022 331D     		adds	r3, r6, #4
 3226              	.LVL390:
  58:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
 3227              		.loc 7 58 0
 3228 0024 84F82470 		strb	r7, [r4, #36]
 3229              	.LVL391:
 3230 0028 2B44     		add	r3, r3, r5
 3231              	.LVL392:
 3232 002a 0022     		movs	r2, #0
 3233              	.LVL393:
 3234              	.L160:
 3235              	.LBB189:
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 3236              		.loc 7 59 0 discriminator 3
 3237 002c 94F82410 		ldrb	r1, [r4, #36]	@ zero_extendqisi2
 3238 0030 561C     		adds	r6, r2, #1
 3239 0032 D2B2     		uxtb	r2, r2
 3240 0034 9142     		cmp	r1, r2
 3241 0036 A3EB0500 		sub	r0, r3, r5
 3242              	.LVL394:
 3243 003a 03F10403 		add	r3, r3, #4
 3244 003e 14D9     		bls	.L159
 3245              	.LVL395:
 3246              	.LBB190:
  68:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       this->st_data = u_st_data.real;
 3247              		.loc 7 68 0 discriminator 2
 3248 0040 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 3249 0044 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 3250              	.LVL396:
 3251 0048 0904     		lsls	r1, r1, #16
 3252              	.LVL397:
 3253 004a 41EA0021 		orr	r1, r1, r0, lsl #8
 3254              	.LVL398:
 3255 004e 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 3256 0052 0143     		orrs	r1, r1, r0
 3257 0054 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 3258              	.LVL399:
  69:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->st_data);
 3259              		.loc 7 69 0 discriminator 2
 3260 0058 41EA0061 		orr	r1, r1, r0, lsl #24
 3261 005c A162     		str	r1, [r4, #40]	@ float
 3262              	.LVL400:
  71:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
 3263              		.loc 7 71 0 discriminator 2
 3264 005e A06A     		ldr	r0, [r4, #40]	@ unaligned
 3265 0060 E16A     		ldr	r1, [r4, #44]
 3266 0062 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 3267              	.LVL401:
 3268              	.LBE190:
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 3269              		.loc 7 59 0 discriminator 2
 3270 0066 3246     		mov	r2, r6
 3271 0068 E0E7     		b	.L160
 3272              	.LVL402:
 3273              	.L159:
 3274              	.LBE189:
  74:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
 3275              		.loc 7 74 0
 3276 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3277              		.cfi_endproc
 3278              	.LFE167:
 3279              		.cantunwind
 3280              		.fnend
 3282              		.section	.text._ZN15ArduinoHardware4initEv,"axG",%progbits,_ZN15ArduinoHardware4initEv,comdat
 3283              		.align	1
 3284              		.weak	_ZN15ArduinoHardware4initEv
 3285              		.thumb
 3286              		.thumb_func
 3288              	_ZN15ArduinoHardware4initEv:
 3289              		.fnstart
 3290              	.LFB144:
 3291              		.file 14 "./lib/ros_lib/ArduinoHardware.h"
   1:./lib/ros_lib/ArduinoHardware.h **** /* 
   2:./lib/ros_lib/ArduinoHardware.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ArduinoHardware.h ****  *
   4:./lib/ros_lib/ArduinoHardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ArduinoHardware.h ****  * All rights reserved.
   6:./lib/ros_lib/ArduinoHardware.h ****  *
   7:./lib/ros_lib/ArduinoHardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ArduinoHardware.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ArduinoHardware.h ****  * are met:
  10:./lib/ros_lib/ArduinoHardware.h ****  *
  11:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ArduinoHardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ArduinoHardware.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ArduinoHardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ArduinoHardware.h ****  *    with the distribution.
  17:./lib/ros_lib/ArduinoHardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ArduinoHardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ArduinoHardware.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ArduinoHardware.h ****  *
  21:./lib/ros_lib/ArduinoHardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ArduinoHardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ArduinoHardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ArduinoHardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ArduinoHardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ArduinoHardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ArduinoHardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ArduinoHardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ArduinoHardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ArduinoHardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ArduinoHardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ArduinoHardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ArduinoHardware.h ****  */
  34:./lib/ros_lib/ArduinoHardware.h **** 
  35:./lib/ros_lib/ArduinoHardware.h **** #ifndef ROS_ARDUINO_HARDWARE_H_
  36:./lib/ros_lib/ArduinoHardware.h **** #define ROS_ARDUINO_HARDWARE_H_
  37:./lib/ros_lib/ArduinoHardware.h **** 
  38:./lib/ros_lib/ArduinoHardware.h **** #include "stm32f10x.h"
  39:./lib/ros_lib/ArduinoHardware.h **** #include "stm32_time.h"
  40:./lib/ros_lib/ArduinoHardware.h **** #include "led.h"
  41:./lib/ros_lib/ArduinoHardware.h **** 
  42:./lib/ros_lib/ArduinoHardware.h **** #define BUFFER_SIZE 512
  43:./lib/ros_lib/ArduinoHardware.h **** 
  44:./lib/ros_lib/ArduinoHardware.h **** 
  45:./lib/ros_lib/ArduinoHardware.h **** volatile uint16_t USART_FIFO[BUFFER_SIZE];
  46:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTIN;
  47:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTOUT;
  48:./lib/ros_lib/ArduinoHardware.h **** 
  49:./lib/ros_lib/ArduinoHardware.h **** class ArduinoHardware {
  50:./lib/ros_lib/ArduinoHardware.h ****   public:
  51:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(USART_TypeDef* io , long baud= 115200){
  52:./lib/ros_lib/ArduinoHardware.h ****       iostream = io;
  53:./lib/ros_lib/ArduinoHardware.h ****       baud_ = baud;
  54:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  55:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  56:./lib/ros_lib/ArduinoHardware.h ****     }
  57:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware()
  58:./lib/ros_lib/ArduinoHardware.h ****     {
  59:./lib/ros_lib/ArduinoHardware.h ****       /* Leonardo support */
  60:./lib/ros_lib/ArduinoHardware.h ****       iostream = USART1;
  61:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  63:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  64:./lib/ros_lib/ArduinoHardware.h ****     }
  65:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(ArduinoHardware& h){
  66:./lib/ros_lib/ArduinoHardware.h ****       this->iostream = iostream;
  67:./lib/ros_lib/ArduinoHardware.h ****       this->baud_ = h.baud_;
  68:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  69:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  70:./lib/ros_lib/ArduinoHardware.h ****     }
  71:./lib/ros_lib/ArduinoHardware.h ****   
  72:./lib/ros_lib/ArduinoHardware.h ****     void setBaud(long baud){
  73:./lib/ros_lib/ArduinoHardware.h ****       this->baud_= baud;
  74:./lib/ros_lib/ArduinoHardware.h ****     }
  75:./lib/ros_lib/ArduinoHardware.h ****   
  76:./lib/ros_lib/ArduinoHardware.h ****     int getBaud(){return baud_;}
  77:./lib/ros_lib/ArduinoHardware.h **** 
  78:./lib/ros_lib/ArduinoHardware.h ****     void init(){
 3292              		.loc 14 78 0
 3293              		.cfi_startproc
 3294              		@ args = 0, pretend = 0, frame = 24
 3295              		@ frame_needed = 0, uses_anonymous_args = 0
 3296              	.LVL403:
 3297 0000 70B5     		push	{r4, r5, r6, lr}
 3298              		.save {r4, r5, r6, lr}
 3299              	.LCFI31:
 3300              		.cfi_def_cfa_offset 16
 3301              		.cfi_offset 4, -16
 3302              		.cfi_offset 5, -12
 3303              		.cfi_offset 6, -8
 3304              		.cfi_offset 14, -4
 3305 0002 0446     		mov	r4, r0
 3306              		.pad #24
 3307 0004 86B0     		sub	sp, sp, #24
 3308              	.LCFI32:
 3309              		.cfi_def_cfa_offset 40
  79:./lib/ros_lib/ArduinoHardware.h ****       USART_InitTypeDef usart1_init_struct;
  80:./lib/ros_lib/ArduinoHardware.h ****       /* Bit configuration structure for GPIOA PIN9 and PIN10 */
  81:./lib/ros_lib/ArduinoHardware.h ****       GPIO_InitTypeDef gpioa_init_struct;
  82:./lib/ros_lib/ArduinoHardware.h **** 
  83:./lib/ros_lib/ArduinoHardware.h ****       /* Enalbe clock for USART1, AFIO and GPIOA */
  84:./lib/ros_lib/ArduinoHardware.h ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2Periph_AFIO | 
  85:./lib/ros_lib/ArduinoHardware.h ****                            RCC_APB2Periph_GPIOA, ENABLE);
  86:./lib/ros_lib/ArduinoHardware.h ****                             
  87:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Tx */
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_9;
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  90:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
  91:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3310              		.loc 14 91 0
 3311 0006 214D     		ldr	r5, .L162
  85:./lib/ros_lib/ArduinoHardware.h ****                             
 3312              		.loc 14 85 0
 3313 0008 0121     		movs	r1, #1
 3314 000a 44F20500 		movw	r0, #16389
 3315              	.LVL404:
 3316 000e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 3317              	.LVL405:
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 3318              		.loc 14 88 0
 3319 0012 4FF40073 		mov	r3, #512
 3320 0016 ADF80430 		strh	r3, [sp, #4]	@ movhi
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 3321              		.loc 14 89 0
 3322 001a 0326     		movs	r6, #3
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3323              		.loc 14 90 0
 3324 001c 1823     		movs	r3, #24
 3325              		.loc 14 91 0
 3326 001e 01A9     		add	r1, sp, #4
 3327 0020 2846     		mov	r0, r5
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3328              		.loc 14 90 0
 3329 0022 8DF80730 		strb	r3, [sp, #7]
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 3330              		.loc 14 89 0
 3331 0026 8DF80660 		strb	r6, [sp, #6]
 3332              		.loc 14 91 0
 3333 002a FFF7FEFF 		bl	GPIO_Init
 3334              	.LVL406:
  92:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
  93:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_10;
 3335              		.loc 14 93 0
 3336 002e 4FF48063 		mov	r3, #1024
 3337 0032 ADF80430 		strh	r3, [sp, #4]	@ movhi
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  95:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 3338              		.loc 14 95 0
 3339 0036 0423     		movs	r3, #4
  96:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3340              		.loc 14 96 0
 3341 0038 0DEB0301 		add	r1, sp, r3
 3342 003c 2846     		mov	r0, r5
  95:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3343              		.loc 14 95 0
 3344 003e 8DF80730 		strb	r3, [sp, #7]
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 3345              		.loc 14 94 0
 3346 0042 8DF80660 		strb	r6, [sp, #6]
 3347              		.loc 14 96 0
 3348 0046 FFF7FEFF 		bl	GPIO_Init
 3349              	.LVL407:
  97:./lib/ros_lib/ArduinoHardware.h **** 
  98:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 */
  99:./lib/ros_lib/ArduinoHardware.h ****       USART_Cmd(iostream, ENABLE);  
 3350              		.loc 14 99 0
 3351 004a 2068     		ldr	r0, [r4]
 3352 004c 0121     		movs	r1, #1
 3353 004e FFF7FEFF 		bl	USART_Cmd
 3354              	.LVL408:
 100:./lib/ros_lib/ArduinoHardware.h ****       /* Baud rate 115200, 8-bit data, One stop bit
 101:./lib/ros_lib/ArduinoHardware.h ****       * No parity, Do both Rx and Tx, No HW flow control
 102:./lib/ros_lib/ArduinoHardware.h ****       */
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_BaudRate = baud_;   
 3355              		.loc 14 103 0
 3356 0052 6368     		ldr	r3, [r4, #4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 3357              		.loc 14 107 0
 3358 0054 0C22     		movs	r2, #12
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 3359              		.loc 14 103 0
 3360 0056 0293     		str	r3, [sp, #8]
 108:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 109:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 110:./lib/ros_lib/ArduinoHardware.h ****       USART_Init(iostream, &usart1_init_struct);
 3361              		.loc 14 110 0
 3362 0058 02A9     		add	r1, sp, #8
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 3363              		.loc 14 104 0
 3364 005a 0023     		movs	r3, #0
 3365              		.loc 14 110 0
 3366 005c 2068     		ldr	r0, [r4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 3367              		.loc 14 104 0
 3368 005e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 3369              		.loc 14 105 0
 3370 0062 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 3371              		.loc 14 106 0
 3372 0066 ADF81030 		strh	r3, [sp, #16]	@ movhi
 108:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 3373              		.loc 14 108 0
 3374 006a ADF81430 		strh	r3, [sp, #20]	@ movhi
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 3375              		.loc 14 107 0
 3376 006e ADF81220 		strh	r2, [sp, #18]	@ movhi
 3377              		.loc 14 110 0
 3378 0072 FFF7FEFF 		bl	USART_Init
 3379              	.LVL409:
 111:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 112:./lib/ros_lib/ArduinoHardware.h ****       USART_ITConfig(iostream, USART_IT_RXNE, ENABLE);
 3380              		.loc 14 112 0
 3381 0076 0122     		movs	r2, #1
 3382 0078 40F22551 		movw	r1, #1317
 3383 007c 2068     		ldr	r0, [r4]
 3384 007e FFF7FEFF 		bl	USART_ITConfig
 3385              	.LVL410:
 3386              	.LBB191:
 3387              	.LBB192:
 3388              		.file 15 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
   1:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**************************************************************************//**
   2:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @file     core_cm3.h
   3:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @version  V1.30
   5:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @date     30. October 2009
   6:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
   7:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @note
   8:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  10:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  11:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  15:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  16:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  22:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
  23:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  24:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CORE_H__
  26:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  27:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  29:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 10: \n
  31:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  34:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 530: \n
  35:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     return(__regBasePri); \n
  36:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * . 
  38:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 550: \n
  39:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  42:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 754: \n
  43:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  46:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 750: \n
  47:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  50:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 528: \n
  51:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  54:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 751: \n
  55:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  58:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  60:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  61:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  62:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -save */
  63:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e10  */
  64:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e530 */
  65:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e550 */
  66:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e754 */
  67:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e750 */
  68:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e528 */
  69:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e751 */
  70:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  71:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  72:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - CMSIS version number
  75:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
  78:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  79:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  80:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
  81:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  extern "C" {
  82:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif 
  83:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  84:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  88:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  90:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  92:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__ICCARM__)
  93:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
  95:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  96:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  97:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * IO definitions
 106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
 111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                 Register Abstraction
 122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  @{
 125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
 126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }  NVIC_Type;                                               
 148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SCB_Type;                                                
 177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                                      
 314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for SysTick
 363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SysTick_Type;
 372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  union  
 413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   {
 414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } ITM_Type;                                                
 445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 505:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0;
 506:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 510:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1;
 511:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 512:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } InterruptType_Type;
 513:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 514:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 518:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 522:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 525:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 529:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 530:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 534:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 535:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 536:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 537:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } MPU_Type;                                                
 549:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 550:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Type Register */
 551:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 554:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 557:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 560:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Control Register */
 561:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 564:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 567:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 570:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Number Register */
 571:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 574:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Base Address Register */
 575:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 578:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 581:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 584:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 588:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 591:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 594:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 597:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 600:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 603:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 606:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 609:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 612:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 614:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 615:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 616:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 619:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 620:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 621:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 622:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } CoreDebug_Type;
 627:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 628:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 632:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 635:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 638:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 641:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 644:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 647:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 650:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 653:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 656:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 659:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 662:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 665:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 669:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 672:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 676:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 679:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 682:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 685:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 688:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 691:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 694:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 697:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 700:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 703:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 706:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 709:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 713:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 714:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 722:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 729:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 733:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 734:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 736:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 737:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 738:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 740:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 741:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 745:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 749:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 753:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 757:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 758:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 759:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 760:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 762:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ARM armcc specific functions */
 764:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 765:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 768:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                             __nop
 769:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFI                             __wfi
 770:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFE                             __wfe
 771:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __SEV                             __sev
 772:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __REV                             __rev
 776:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __RBIT                            __rbit
 777:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 784:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 785:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 790:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 791:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 792:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 794:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
 795:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 796:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
 797:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 798:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 800:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 801:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 803:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 805:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 808:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 810:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 811:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 813:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
 814:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 815:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
 817:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 818:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 820:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 821:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 823:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 825:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 828:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 830:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 831:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 833:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 834:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 835:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 836:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 838:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 840:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 841:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 843:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 844:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 845:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 846:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 848:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 850:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 851:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 853:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 854:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 856:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 858:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __CLREX(void);
 859:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 860:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 861:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 863:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 864:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 865:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 866:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 867:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 869:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 870:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 872:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 873:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 874:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 875:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 876:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 878:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 879:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 881:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 882:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 883:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 885:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 887:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 888:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 890:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   priMask  PriMask
 891:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 892:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 894:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 896:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 897:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 899:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 900:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 901:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 902:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 903:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 905:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 906:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 908:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask faultMask value
 909:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 910:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
 911:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 912:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 914:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 915:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
 916:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
 917:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
 918:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 919:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
 920:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 921:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 923:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 924:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
 925:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 926:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
 927:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 928:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
 929:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 930:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 932:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 934:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 935:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 937:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 939:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CLREX                           __clrex
 940:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 941:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 942:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 944:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 945:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 946:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 947:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 948:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 950:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regBasePri);
 952:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 953:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 954:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 955:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 957:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 958:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 959:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 960:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 961:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 963:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 966:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 967:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 968:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 970:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 971:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 972:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 974:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 976:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regPriMask);
 978:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 979:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 980:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 981:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 983:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
 984:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 985:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 987:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 989:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regPriMask = (priMask);
 991:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 992:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 993:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 994:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 996:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 997:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 998:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 999:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1000:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1002:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regFaultMask);
1004:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1005:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1006:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1007:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1009:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1011:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1012:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1013:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1015:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1018:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1019:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1020:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1021:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1022:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
1023:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1024:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1025:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1026:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1028:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regControl);
1030:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1031:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1032:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1033:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1034:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1035:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1036:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1037:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1038:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1039:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1041:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regControl = control;
1043:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1044:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1045:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1047:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1048:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1049:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* IAR iccarm specific functions */
1051:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1052:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1055:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1058:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1064:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1076:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1077:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1078:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1080:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1081:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1082:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1083:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1084:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1086:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1087:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1089:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1091:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1094:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1096:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1097:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1099:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* GNU gcc specific functions */
1203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
1261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
1263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
1265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
1270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
1272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
1274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
1281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
1290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
1299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
1301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** * 
1316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** *  @return Control value
1317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in integer value
1338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* TASKING carm specific functions */
1437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*
1439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Including the CMSIS ones.
1442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
1445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   Core  Function Interface containing:
1449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core NVIC Functions
1450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core SysTick Functions
1451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core Reset Functions
1452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
1453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@{*/
1454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t reg_value;
1471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   
1473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return priority grouping field 
1485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 3389              		.loc 15 1504 0
 3390 0082 034B     		ldr	r3, .L162+4
 3391 0084 2022     		movs	r2, #32
 3392 0086 5A60     		str	r2, [r3, #4]
 3393              	.LVL411:
 3394              	.LBE192:
 3395              	.LBE191:
 113:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 global interrupt */
 114:./lib/ros_lib/ArduinoHardware.h ****       NVIC_EnableIRQ(USART1_IRQn);
 115:./lib/ros_lib/ArduinoHardware.h ****     }
 3396              		.loc 14 115 0
 3397 0088 06B0     		add	sp, sp, #24
 3398              	.LCFI33:
 3399              		.cfi_def_cfa_offset 16
 3400              		@ sp needed
 3401 008a 70BD     		pop	{r4, r5, r6, pc}
 3402              	.LVL412:
 3403              	.L163:
 3404              		.align	2
 3405              	.L162:
 3406 008c 00080140 		.word	1073809408
 3407 0090 00E100E0 		.word	-536813312
 3408              		.cfi_endproc
 3409              	.LFE144:
 3410              		.fnend
 3412              		.text
 3413              		.align	1
 3414              		.global	USART1_IRQHandler
 3415              		.thumb
 3416              		.thumb_func
 3418              	USART1_IRQHandler:
 3419              		.fnstart
 3420              	.LFB148:
 116:./lib/ros_lib/ArduinoHardware.h **** 
 117:./lib/ros_lib/ArduinoHardware.h ****     int read(){
 118:./lib/ros_lib/ArduinoHardware.h ****       if(USART_CNTIN == USART_CNTOUT)
 119:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 120:./lib/ros_lib/ArduinoHardware.h ****       
 121:./lib/ros_lib/ArduinoHardware.h ****       int returnVal = USART_FIFO[USART_CNTOUT];
 122:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 123:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 124:./lib/ros_lib/ArduinoHardware.h ****     }
 125:./lib/ros_lib/ArduinoHardware.h **** 
 126:./lib/ros_lib/ArduinoHardware.h ****     void write(uint8_t* data, int length){
 127:./lib/ros_lib/ArduinoHardware.h ****       for(int i=0; i<length; i++){
 128:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 129:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 130:./lib/ros_lib/ArduinoHardware.h ****       }
 131:./lib/ros_lib/ArduinoHardware.h ****     }
 132:./lib/ros_lib/ArduinoHardware.h **** 
 133:./lib/ros_lib/ArduinoHardware.h ****     uint32_t time(){
 134:./lib/ros_lib/ArduinoHardware.h ****       return millis();
 135:./lib/ros_lib/ArduinoHardware.h ****     }
 136:./lib/ros_lib/ArduinoHardware.h **** 
 137:./lib/ros_lib/ArduinoHardware.h ****   protected:
 138:./lib/ros_lib/ArduinoHardware.h ****     USART_TypeDef* iostream;
 139:./lib/ros_lib/ArduinoHardware.h ****     long baud_;
 140:./lib/ros_lib/ArduinoHardware.h **** 
 141:./lib/ros_lib/ArduinoHardware.h **** };
 142:./lib/ros_lib/ArduinoHardware.h **** 
 143:./lib/ros_lib/ArduinoHardware.h **** 
 144:./lib/ros_lib/ArduinoHardware.h **** 
 145:./lib/ros_lib/ArduinoHardware.h **** extern "C"{
 146:./lib/ros_lib/ArduinoHardware.h ****   void USART1_IRQHandler(void){
 3421              		.loc 14 146 0
 3422              		.cfi_startproc
 3423              		@ args = 0, pretend = 0, frame = 0
 3424              		@ frame_needed = 0, uses_anonymous_args = 0
 3425 006e 38B5     		push	{r3, r4, r5, lr}
 3426              		.save {r3, r4, r5, lr}
 3427              	.LCFI34:
 3428              		.cfi_def_cfa_offset 16
 3429              		.cfi_offset 3, -16
 3430              		.cfi_offset 4, -12
 3431              		.cfi_offset 5, -8
 3432              		.cfi_offset 14, -4
 147:./lib/ros_lib/ArduinoHardware.h **** 
 148:./lib/ros_lib/ArduinoHardware.h ****     if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET 
 3433              		.loc 14 148 0
 3434 0070 40F22551 		movw	r1, #1317
 3435 0074 0F48     		ldr	r0, .L171
 3436 0076 FFF7FEFF 		bl	USART_GetITStatus
 3437              	.LVL413:
 149:./lib/ros_lib/ArduinoHardware.h ****       && USART_CNTIN != (( USART_CNTOUT - 1 + BUFFER_SIZE) % BUFFER_SIZE)){
 3438              		.loc 14 149 0
 3439 007a 40B1     		cbz	r0, .L165
 3440              		.loc 14 149 0 is_stmt 0 discriminator 1
 3441 007c 0E4C     		ldr	r4, .L171+4
 3442 007e 2369     		ldr	r3, [r4, #16]
 3443 0080 6269     		ldr	r2, [r4, #20]
 3444 0082 03F2FF13 		addw	r3, r3, #511
 3445 0086 C3F30803 		ubfx	r3, r3, #0, #9
 3446 008a 9342     		cmp	r3, r2
 3447 008c 04D1     		bne	.L166
 3448              	.L165:
 150:./lib/ros_lib/ArduinoHardware.h **** 
 151:./lib/ros_lib/ArduinoHardware.h ****       USART_FIFO[USART_CNTIN] = USART_ReceiveData(USART1);
 152:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 153:./lib/ros_lib/ArduinoHardware.h ****     }else{
 154:./lib/ros_lib/ArduinoHardware.h ****       // Should NEVER reach this point!
 155:./lib/ros_lib/ArduinoHardware.h ****       (void)USART_ReceiveData(USART1);  // Clear inerrupt flag by reading byte
 156:./lib/ros_lib/ArduinoHardware.h ****     }
 157:./lib/ros_lib/ArduinoHardware.h ****   }   
 3449              		.loc 14 157 0 is_stmt 1
 3450 008e BDE83840 		pop	{r3, r4, r5, lr}
 3451              	.LCFI35:
 3452              		.cfi_remember_state
 3453              		.cfi_restore 14
 3454              		.cfi_restore 5
 3455              		.cfi_restore 4
 3456              		.cfi_restore 3
 3457              		.cfi_def_cfa_offset 0
 155:./lib/ros_lib/ArduinoHardware.h ****     }
 3458              		.loc 14 155 0
 3459 0092 0848     		ldr	r0, .L171
 3460 0094 FFF7FEBF 		b	USART_ReceiveData
 3461              	.LVL414:
 3462              	.L166:
 3463              	.LCFI36:
 3464              		.cfi_restore_state
 151:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 3465              		.loc 14 151 0
 3466 0098 0648     		ldr	r0, .L171
 3467 009a 6569     		ldr	r5, [r4, #20]
 3468 009c FFF7FEFF 		bl	USART_ReceiveData
 3469              	.LVL415:
 3470 00a0 04EB4505 		add	r5, r4, r5, lsl #1
 3471 00a4 2883     		strh	r0, [r5, #24]	@ movhi
 152:./lib/ros_lib/ArduinoHardware.h ****     }else{
 3472              		.loc 14 152 0
 3473 00a6 6369     		ldr	r3, [r4, #20]
 3474 00a8 0133     		adds	r3, r3, #1
 3475 00aa C3F30803 		ubfx	r3, r3, #0, #9
 3476 00ae 6361     		str	r3, [r4, #20]
 3477 00b0 38BD     		pop	{r3, r4, r5, pc}
 3478              	.L172:
 3479 00b2 00BF     		.align	2
 3480              	.L171:
 3481 00b4 00380140 		.word	1073821696
 3482 00b8 00000000 		.word	.LANCHOR1
 3483              		.cfi_endproc
 3484              	.LFE148:
 3485              		.fnend
 3487              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc,"axG",%p
 3488              		.align	1
 3489              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 3490              		.thumb
 3491              		.thumb_func
 3493              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:
 3494              		.fnstart
 3495              	.LFB221:
 289:./lib/ros_lib/ros/node_handle.h **** 
 290:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 291:./lib/ros_lib/ros/node_handle.h ****        * Time functions
 292:./lib/ros_lib/ros/node_handle.h ****        */
 293:./lib/ros_lib/ros/node_handle.h **** 
 294:./lib/ros_lib/ros/node_handle.h ****       void requestSyncTime()
 295:./lib/ros_lib/ros/node_handle.h ****       {
 296:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 297:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_TIME, &t);
 298:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 299:./lib/ros_lib/ros/node_handle.h ****       }
 300:./lib/ros_lib/ros/node_handle.h **** 
 301:./lib/ros_lib/ros/node_handle.h ****       void syncTime(uint8_t * data)
 302:./lib/ros_lib/ros/node_handle.h ****       {
 303:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 304:./lib/ros_lib/ros/node_handle.h ****         uint32_t offset = hardware_.time() - rt_time;
 305:./lib/ros_lib/ros/node_handle.h **** 
 306:./lib/ros_lib/ros/node_handle.h ****         t.deserialize(data);
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 308:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 309:./lib/ros_lib/ros/node_handle.h **** 
 310:./lib/ros_lib/ros/node_handle.h ****         this->setNow(t.data);
 311:./lib/ros_lib/ros/node_handle.h ****         last_sync_receive_time = hardware_.time();
 312:./lib/ros_lib/ros/node_handle.h ****       }
 313:./lib/ros_lib/ros/node_handle.h **** 
 314:./lib/ros_lib/ros/node_handle.h ****       Time now()
 315:./lib/ros_lib/ros/node_handle.h ****       {
 316:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 317:./lib/ros_lib/ros/node_handle.h ****         Time current_time;
 318:./lib/ros_lib/ros/node_handle.h ****         current_time.sec = ms/1000 + sec_offset;
 319:./lib/ros_lib/ros/node_handle.h ****         current_time.nsec = (ms%1000)*1000000UL + nsec_offset;
 320:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(current_time.sec, current_time.nsec);
 321:./lib/ros_lib/ros/node_handle.h ****         return current_time;
 322:./lib/ros_lib/ros/node_handle.h ****       }
 323:./lib/ros_lib/ros/node_handle.h **** 
 324:./lib/ros_lib/ros/node_handle.h ****       void setNow( Time & new_now )
 325:./lib/ros_lib/ros/node_handle.h ****       {
 326:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 327:./lib/ros_lib/ros/node_handle.h ****         sec_offset = new_now.sec - ms/1000 - 1;
 328:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 329:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 330:./lib/ros_lib/ros/node_handle.h ****       }
 331:./lib/ros_lib/ros/node_handle.h **** 
 332:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 333:./lib/ros_lib/ros/node_handle.h ****        * Topic Management
 334:./lib/ros_lib/ros/node_handle.h ****        */
 335:./lib/ros_lib/ros/node_handle.h **** 
 336:./lib/ros_lib/ros/node_handle.h ****       /* Register a new publisher */
 337:./lib/ros_lib/ros/node_handle.h ****       bool advertise(Publisher & p)
 338:./lib/ros_lib/ros/node_handle.h ****       {
 339:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_PUBLISHERS; i++){
 340:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 341:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 342:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 343:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 344:./lib/ros_lib/ros/node_handle.h ****             return true;
 345:./lib/ros_lib/ros/node_handle.h ****           }
 346:./lib/ros_lib/ros/node_handle.h ****         }
 347:./lib/ros_lib/ros/node_handle.h ****         return false;
 348:./lib/ros_lib/ros/node_handle.h ****       }
 349:./lib/ros_lib/ros/node_handle.h **** 
 350:./lib/ros_lib/ros/node_handle.h ****       /* Register a new subscriber */
 351:./lib/ros_lib/ros/node_handle.h ****       template<typename MsgT>
 352:./lib/ros_lib/ros/node_handle.h ****       bool subscribe(Subscriber< MsgT> & s){
 353:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 354:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 355:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 356:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 357:./lib/ros_lib/ros/node_handle.h ****             return true;
 358:./lib/ros_lib/ros/node_handle.h ****           }
 359:./lib/ros_lib/ros/node_handle.h ****         }
 360:./lib/ros_lib/ros/node_handle.h ****         return false;
 361:./lib/ros_lib/ros/node_handle.h ****       }
 362:./lib/ros_lib/ros/node_handle.h **** 
 363:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Server */
 364:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 365:./lib/ros_lib/ros/node_handle.h ****       bool advertiseService(ServiceServer<MReq,MRes>& srv){
 366:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 367:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 368:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 369:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 370:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 371:./lib/ros_lib/ros/node_handle.h ****             return v;
 372:./lib/ros_lib/ros/node_handle.h ****           }
 373:./lib/ros_lib/ros/node_handle.h ****         }
 374:./lib/ros_lib/ros/node_handle.h ****         return false;
 375:./lib/ros_lib/ros/node_handle.h ****       }
 376:./lib/ros_lib/ros/node_handle.h **** 
 377:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Client */
 378:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 379:./lib/ros_lib/ros/node_handle.h ****       bool serviceClient(ServiceClient<MReq, MRes>& srv){
 380:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 381:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 382:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 383:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 384:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 385:./lib/ros_lib/ros/node_handle.h ****             return v;
 386:./lib/ros_lib/ros/node_handle.h ****           }
 387:./lib/ros_lib/ros/node_handle.h ****         }
 388:./lib/ros_lib/ros/node_handle.h ****         return false;
 389:./lib/ros_lib/ros/node_handle.h ****       }
 390:./lib/ros_lib/ros/node_handle.h **** 
 391:./lib/ros_lib/ros/node_handle.h ****       void negotiateTopics()
 392:./lib/ros_lib/ros/node_handle.h ****       {
 393:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::TopicInfo ti;
 394:./lib/ros_lib/ros/node_handle.h ****         int i;
 395:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_PUBLISHERS; i++)
 396:./lib/ros_lib/ros/node_handle.h ****         {
 397:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] != 0) // non-empty slot
 398:./lib/ros_lib/ros/node_handle.h ****           {
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = publishers[i]->id_;
 400:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 401:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 402:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 403:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 404:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 405:./lib/ros_lib/ros/node_handle.h ****           }
 406:./lib/ros_lib/ros/node_handle.h ****         }
 407:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_SUBSCRIBERS; i++)
 408:./lib/ros_lib/ros/node_handle.h ****         {
 409:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] != 0) // non-empty slot
 410:./lib/ros_lib/ros/node_handle.h ****           {
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = subscribers[i]->id_;
 412:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 413:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 414:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 415:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 416:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 417:./lib/ros_lib/ros/node_handle.h ****           }
 418:./lib/ros_lib/ros/node_handle.h ****         }
 419:./lib/ros_lib/ros/node_handle.h ****         configured_ = true;
 420:./lib/ros_lib/ros/node_handle.h ****       }
 421:./lib/ros_lib/ros/node_handle.h **** 
 422:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg * msg)
 423:./lib/ros_lib/ros/node_handle.h ****       {
 424:./lib/ros_lib/ros/node_handle.h ****         if(id >= 100 && !configured_)
 425:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 426:./lib/ros_lib/ros/node_handle.h **** 
 427:./lib/ros_lib/ros/node_handle.h ****         /* serialize message */
 428:./lib/ros_lib/ros/node_handle.h ****         uint16_t l = msg->serialize(message_out+7);
 429:./lib/ros_lib/ros/node_handle.h **** 
 430:./lib/ros_lib/ros/node_handle.h ****         /* setup the header */
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[0] = 0xff;
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 435:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 437:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 438:./lib/ros_lib/ros/node_handle.h **** 
 439:./lib/ros_lib/ros/node_handle.h ****         /* calculate checksum */
 440:./lib/ros_lib/ros/node_handle.h ****         int chk = 0;
 441:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 442:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 443:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 444:./lib/ros_lib/ros/node_handle.h ****         message_out[l++] = 255 - (chk%256);
 445:./lib/ros_lib/ros/node_handle.h **** 
 446:./lib/ros_lib/ros/node_handle.h ****         if( l <= OUTPUT_SIZE ){
 447:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 448:./lib/ros_lib/ros/node_handle.h ****           return l;
 449:./lib/ros_lib/ros/node_handle.h ****         }else{
 450:./lib/ros_lib/ros/node_handle.h ****           logerror("Message from device dropped: message larger than buffer.");
 451:./lib/ros_lib/ros/node_handle.h ****           return -1;
 452:./lib/ros_lib/ros/node_handle.h ****         }
 453:./lib/ros_lib/ros/node_handle.h ****       }
 454:./lib/ros_lib/ros/node_handle.h **** 
 455:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 456:./lib/ros_lib/ros/node_handle.h ****        * Logging
 457:./lib/ros_lib/ros/node_handle.h ****        */
 458:./lib/ros_lib/ros/node_handle.h **** 
 459:./lib/ros_lib/ros/node_handle.h ****     private:
 460:./lib/ros_lib/ros/node_handle.h ****       void log(char byte, const char * msg){
 461:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::Log l;
 462:./lib/ros_lib/ros/node_handle.h ****         l.level= byte;
 463:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 464:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 465:./lib/ros_lib/ros/node_handle.h ****       }
 466:./lib/ros_lib/ros/node_handle.h **** 
 467:./lib/ros_lib/ros/node_handle.h ****     public:
 468:./lib/ros_lib/ros/node_handle.h ****       void logdebug(const char* msg){
 469:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ROSDEBUG, msg);
 470:./lib/ros_lib/ros/node_handle.h ****       }
 471:./lib/ros_lib/ros/node_handle.h ****       void loginfo(const char * msg){
 472:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::INFO, msg);
 473:./lib/ros_lib/ros/node_handle.h ****       }
 474:./lib/ros_lib/ros/node_handle.h ****       void logwarn(const char *msg){
 475:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::WARN, msg);
 476:./lib/ros_lib/ros/node_handle.h ****       }
 477:./lib/ros_lib/ros/node_handle.h ****       void logerror(const char*msg){
 3496              		.loc 13 477 0
 3497              		.cfi_startproc
 3498              		@ args = 0, pretend = 0, frame = 16
 3499              		@ frame_needed = 0, uses_anonymous_args = 0
 3500              	.LVL416:
 3501 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 3502              		.save {lr}
 3503              		.pad #20
 3504              	.LCFI37:
 3505              		.cfi_def_cfa_offset 24
 3506              		.cfi_offset 14, -4
 3507              	.LVL417:
 3508              	.LBB199:
 3509              	.LBB200:
 3510              	.LBB201:
 3511              	.LBB202:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 3512              		.loc 3 25 0
 3513 0002 074B     		ldr	r3, .L174
 3514              	.LBE202:
 3515              	.LBE201:
 463:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3516              		.loc 13 463 0
 3517 0004 0391     		str	r1, [sp, #12]
 3518              	.LBB204:
 3519              	.LBB203:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 3520              		.loc 3 25 0
 3521 0006 0193     		str	r3, [sp, #4]
 3522              	.LVL418:
 3523              	.LBE203:
 3524              	.LBE204:
 462:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 3525              		.loc 13 462 0
 3526 0008 0323     		movs	r3, #3
 3527 000a 8DF80830 		strb	r3, [sp, #8]
 464:./lib/ros_lib/ros/node_handle.h ****       }
 3528              		.loc 13 464 0
 3529 000e 0368     		ldr	r3, [r0]
 3530 0010 01AA     		add	r2, sp, #4
 3531 0012 1B68     		ldr	r3, [r3]
 3532 0014 0721     		movs	r1, #7
 3533              	.LVL419:
 3534 0016 9847     		blx	r3
 3535              	.LVL420:
 3536              	.LBE200:
 3537              	.LBE199:
 478:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ERROR, msg);
 479:./lib/ros_lib/ros/node_handle.h ****       }
 3538              		.loc 13 479 0
 3539 0018 05B0     		add	sp, sp, #20
 3540              	.LCFI38:
 3541              		.cfi_def_cfa_offset 4
 3542              		@ sp needed
 3543 001a 5DF804FB 		ldr	pc, [sp], #4
 3544              	.L175:
 3545 001e 00BF     		.align	2
 3546              	.L174:
 3547 0020 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3548              		.cfi_endproc
 3549              	.LFE221:
 3550              		.fnend
 3552              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE,"
 3553              		.align	1
 3554              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 3555              		.thumb
 3556              		.thumb_func
 3558              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:
 3559              		.fnstart
 3560              	.LFB227:
 422:./lib/ros_lib/ros/node_handle.h ****       {
 3561              		.loc 13 422 0
 3562              		.cfi_startproc
 3563              		@ args = 0, pretend = 0, frame = 0
 3564              		@ frame_needed = 0, uses_anonymous_args = 0
 3565              	.LVL421:
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 3566              		.loc 13 424 0
 3567 0000 6329     		cmp	r1, #99
 422:./lib/ros_lib/ros/node_handle.h ****       {
 3568              		.loc 13 422 0
 3569 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3570              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 3571              	.LCFI39:
 3572              		.cfi_def_cfa_offset 32
 3573              		.cfi_offset 3, -32
 3574              		.cfi_offset 4, -28
 3575              		.cfi_offset 5, -24
 3576              		.cfi_offset 6, -20
 3577              		.cfi_offset 7, -16
 3578              		.cfi_offset 8, -12
 3579              		.cfi_offset 9, -8
 3580              		.cfi_offset 14, -4
 422:./lib/ros_lib/ros/node_handle.h ****       {
 3581              		.loc 13 422 0
 3582 0006 0446     		mov	r4, r0
 3583 0008 0E46     		mov	r6, r1
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 3584              		.loc 13 424 0
 3585 000a 03DD     		ble	.L177
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 3586              		.loc 13 424 0 is_stmt 0 discriminator 1
 3587 000c 90F8F454 		ldrb	r5, [r0, #1268]	@ zero_extendqisi2
 3588 0010 002D     		cmp	r5, #0
 3589 0012 4FD0     		beq	.L178
 3590              	.L177:
 428:./lib/ros_lib/ros/node_handle.h **** 
 3591              		.loc 13 428 0 is_stmt 1
 3592 0014 1368     		ldr	r3, [r2]
 3593 0016 04F21F21 		addw	r1, r4, #543
 3594              	.LVL422:
 3595 001a 1B68     		ldr	r3, [r3]
 3596 001c 1046     		mov	r0, r2
 3597              	.LVL423:
 3598 001e 9847     		blx	r3
 3599              	.LVL424:
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 3600              		.loc 13 431 0
 3601 0020 FF22     		movs	r2, #255
 3602 0022 84F81822 		strb	r2, [r4, #536]
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 3603              		.loc 13 432 0
 3604 0026 FE22     		movs	r2, #254
 428:./lib/ros_lib/ros/node_handle.h **** 
 3605              		.loc 13 428 0
 3606 0028 83B2     		uxth	r3, r0
 3607              	.LVL425:
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 3608              		.loc 13 432 0
 3609 002a 84F81922 		strb	r2, [r4, #537]
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 3610              		.loc 13 433 0
 3611 002e C2B2     		uxtb	r2, r0
 434:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 3612              		.loc 13 434 0
 3613 0030 C0F30720 		ubfx	r0, r0, #8, #8
 3614 0034 84F81B02 		strb	r0, [r4, #539]
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 3615              		.loc 13 435 0
 3616 0038 1044     		add	r0, r0, r2
 3617 003a C043     		mvns	r0, r0
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 3618              		.loc 13 436 0
 3619 003c 84F81D62 		strb	r6, [r4, #541]
 437:./lib/ros_lib/ros/node_handle.h **** 
 3620              		.loc 13 437 0
 3621 0040 46F30726 		sbfx	r6, r6, #8, #8
 3622              	.LVL426:
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 3623              		.loc 13 433 0
 3624 0044 84F81A22 		strb	r2, [r4, #538]
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 3625              		.loc 13 435 0
 3626 0048 84F81C02 		strb	r0, [r4, #540]
 437:./lib/ros_lib/ros/node_handle.h **** 
 3627              		.loc 13 437 0
 3628 004c 84F81E62 		strb	r6, [r4, #542]
 3629              	.LVL427:
 3630 0050 04F50770 		add	r0, r4, #540
 3631              	.LBB209:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3632              		.loc 13 441 0
 3633 0054 0521     		movs	r1, #5
 3634              	.LBE209:
 440:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 3635              		.loc 13 440 0
 3636 0056 0022     		movs	r2, #0
 3637              	.LBB210:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3638              		.loc 13 441 0
 3639 0058 9E1D     		adds	r6, r3, #6
 3640              	.LVL428:
 3641              	.L180:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3642              		.loc 13 441 0 is_stmt 0 discriminator 3
 3643 005a B142     		cmp	r1, r6
 3644 005c 04DC     		bgt	.L179
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 3645              		.loc 13 442 0 is_stmt 1 discriminator 2
 3646 005e 10F8015F 		ldrb	r5, [r0, #1]!	@ zero_extendqisi2
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3647              		.loc 13 441 0 discriminator 2
 3648 0062 0131     		adds	r1, r1, #1
 3649              	.LVL429:
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 3650              		.loc 13 442 0 discriminator 2
 3651 0064 2A44     		add	r2, r2, r5
 3652              	.LVL430:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3653              		.loc 13 441 0 discriminator 2
 3654 0066 F8E7     		b	.L180
 3655              	.L179:
 3656              	.LVL431:
 3657              	.LBE210:
 444:./lib/ros_lib/ros/node_handle.h **** 
 3658              		.loc 13 444 0
 3659 0068 D243     		mvns	r2, r2
 3660              	.LVL432:
 3661 006a 03F10806 		add	r6, r3, #8
 3662 006e 0733     		adds	r3, r3, #7
 3663              	.LVL433:
 3664 0070 B6B2     		uxth	r6, r6
 3665              	.LVL434:
 3666 0072 9BB2     		uxth	r3, r3
 3667 0074 2344     		add	r3, r3, r4
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 3668              		.loc 13 446 0
 3669 0076 B6F5007F 		cmp	r6, #512
 444:./lib/ros_lib/ros/node_handle.h **** 
 3670              		.loc 13 444 0
 3671 007a 83F81822 		strb	r2, [r3, #536]
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 3672              		.loc 13 446 0
 3673 007e 13D8     		bhi	.L181
 447:./lib/ros_lib/ros/node_handle.h ****           return l;
 3674              		.loc 13 447 0
 3675 0080 04F50678 		add	r8, r4, #536
 3676 0084 3546     		mov	r5, r6
 3677              	.LVL435:
 3678 0086 4746     		mov	r7, r8
 3679              	.LBB211:
 3680              	.LBB212:
 128:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 3681              		.loc 14 128 0
 3682 0088 DFF83490 		ldr	r9, .L188+4
 3683              	.LVL436:
 3684              	.L183:
 127:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 3685              		.loc 14 127 0
 3686 008c C8EB0703 		rsb	r3, r8, r7
 3687 0090 9E42     		cmp	r6, r3
 3688 0092 0FDD     		ble	.L178
 3689              	.L186:
 128:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 3690              		.loc 14 128 0
 3691 0094 B9F80030 		ldrh	r3, [r9]
 3692 0098 5B06     		lsls	r3, r3, #25
 3693 009a FBD5     		bpl	.L186
 129:./lib/ros_lib/ArduinoHardware.h ****       }
 3694              		.loc 14 129 0
 3695 009c 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 3696              	.LVL437:
 3697 00a0 6068     		ldr	r0, [r4, #4]
 3698 00a2 FFF7FEFF 		bl	USART_SendData
 3699              	.LVL438:
 3700 00a6 F1E7     		b	.L183
 3701              	.LVL439:
 3702              	.L181:
 3703              	.LBE212:
 3704              	.LBE211:
 450:./lib/ros_lib/ros/node_handle.h ****           return -1;
 3705              		.loc 13 450 0
 3706 00a8 0449     		ldr	r1, .L188
 3707              	.LVL440:
 3708 00aa 2046     		mov	r0, r4
 3709 00ac FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 3710              	.LVL441:
 451:./lib/ros_lib/ros/node_handle.h ****         }
 3711              		.loc 13 451 0
 3712 00b0 4FF0FF35 		mov	r5, #-1
 3713              	.LVL442:
 3714              	.L178:
 453:./lib/ros_lib/ros/node_handle.h **** 
 3715              		.loc 13 453 0
 3716 00b4 2846     		mov	r0, r5
 3717 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3718              	.LVL443:
 3719              	.L189:
 3720 00ba 00BF     		.align	2
 3721              	.L188:
 3722 00bc 05020000 		.word	.LC19
 3723 00c0 00380140 		.word	1073821696
 3724              		.cfi_endproc
 3725              	.LFE227:
 3726              		.fnend
 3728              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv,"a
 3729              		.align	1
 3730              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 3731              		.thumb
 3732              		.thumb_func
 3734              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:
 3735              		.fnstart
 3736              	.LFB224:
 294:./lib/ros_lib/ros/node_handle.h ****       {
 3737              		.loc 13 294 0
 3738              		.cfi_startproc
 3739              		@ args = 0, pretend = 0, frame = 16
 3740              		@ frame_needed = 0, uses_anonymous_args = 0
 3741              	.LVL444:
 3742 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 3743              		.save {r4, lr}
 3744              		.pad #16
 3745              	.LCFI40:
 3746              		.cfi_def_cfa_offset 24
 3747              		.cfi_offset 4, -8
 3748              		.cfi_offset 14, -4
 3749              	.LVL445:
 3750              	.LBB213:
 3751              	.LBB214:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 3752              		.loc 1 19 0
 3753 0002 084B     		ldr	r3, .L191
 3754              	.LBE214:
 3755              	.LBE213:
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 3756              		.loc 13 297 0
 3757 0004 01AA     		add	r2, sp, #4
 3758              	.LVL446:
 3759              	.LBB218:
 3760              	.LBB217:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 3761              		.loc 1 19 0
 3762 0006 0193     		str	r3, [sp, #4]
 3763              	.LVL447:
 3764              	.LBB215:
 3765              	.LBB216:
 3766              		.file 16 "./lib/ros_lib/ros/time.h"
   1:./lib/ros_lib/ros/time.h **** /*
   2:./lib/ros_lib/ros/time.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/time.h ****  *
   4:./lib/ros_lib/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/time.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/time.h ****  *
   7:./lib/ros_lib/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/time.h ****  * are met:
  10:./lib/ros_lib/ros/time.h ****  *
  11:./lib/ros_lib/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/time.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/time.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/time.h ****  *
  21:./lib/ros_lib/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/time.h ****  */
  34:./lib/ros_lib/ros/time.h **** 
  35:./lib/ros_lib/ros/time.h **** #ifndef ROS_TIME_H_
  36:./lib/ros_lib/ros/time.h **** #define ROS_TIME_H_
  37:./lib/ros_lib/ros/time.h **** 
  38:./lib/ros_lib/ros/time.h **** #include <math.h>
  39:./lib/ros_lib/ros/time.h **** #include <stdint.h>
  40:./lib/ros_lib/ros/time.h **** 
  41:./lib/ros_lib/ros/time.h **** #include "ros/duration.h"
  42:./lib/ros_lib/ros/time.h **** 
  43:./lib/ros_lib/ros/time.h **** namespace ros
  44:./lib/ros_lib/ros/time.h **** {
  45:./lib/ros_lib/ros/time.h ****   void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  46:./lib/ros_lib/ros/time.h **** 
  47:./lib/ros_lib/ros/time.h ****   class Time
  48:./lib/ros_lib/ros/time.h ****   {
  49:./lib/ros_lib/ros/time.h ****     public:
  50:./lib/ros_lib/ros/time.h ****       uint32_t sec, nsec;
  51:./lib/ros_lib/ros/time.h **** 
  52:./lib/ros_lib/ros/time.h ****       Time() : sec(0), nsec(0) {}
 3767              		.loc 16 52 0
 3768 0008 0023     		movs	r3, #0
 3769 000a 0293     		str	r3, [sp, #8]
 3770 000c 0393     		str	r3, [sp, #12]
 3771              	.LVL448:
 3772              	.LBE216:
 3773              	.LBE215:
 3774              	.LBE217:
 3775              	.LBE218:
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 3776              		.loc 13 297 0
 3777 000e 0368     		ldr	r3, [r0]
 3778 0010 0A21     		movs	r1, #10
 3779 0012 1B68     		ldr	r3, [r3]
 294:./lib/ros_lib/ros/node_handle.h ****       {
 3780              		.loc 13 294 0
 3781 0014 0446     		mov	r4, r0
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 3782              		.loc 13 297 0
 3783 0016 9847     		blx	r3
 3784              	.LVL449:
 3785              	.LBB219:
 3786              	.LBB220:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3787              		.loc 14 134 0
 3788 0018 FFF7FEFF 		bl	millis
 3789              	.LVL450:
 3790              	.LBE220:
 3791              	.LBE219:
 298:./lib/ros_lib/ros/node_handle.h ****       }
 3792              		.loc 13 298 0
 3793 001c E060     		str	r0, [r4, #12]
 299:./lib/ros_lib/ros/node_handle.h **** 
 3794              		.loc 13 299 0
 3795 001e 04B0     		add	sp, sp, #16
 3796              	.LCFI41:
 3797              		.cfi_def_cfa_offset 8
 3798              		@ sp needed
 3799 0020 10BD     		pop	{r4, pc}
 3800              	.LVL451:
 3801              	.L192:
 3802 0022 00BF     		.align	2
 3803              	.L191:
 3804 0024 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 3805              		.cfi_endproc
 3806              	.LFE224:
 3807              		.fnend
 3809              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv,"a
 3810              		.align	1
 3811              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 3812              		.thumb
 3813              		.thumb_func
 3815              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:
 3816              		.fnstart
 3817              	.LFB225:
 391:./lib/ros_lib/ros/node_handle.h ****       {
 3818              		.loc 13 391 0
 3819              		.cfi_startproc
 3820              		@ args = 0, pretend = 0, frame = 24
 3821              		@ frame_needed = 0, uses_anonymous_args = 0
 3822              	.LVL452:
 3823 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3824              		.save {r4, r5, r6, r7, r8, lr}
 3825              	.LCFI42:
 3826              		.cfi_def_cfa_offset 24
 3827              		.cfi_offset 4, -24
 3828              		.cfi_offset 5, -20
 3829              		.cfi_offset 6, -16
 3830              		.cfi_offset 7, -12
 3831              		.cfi_offset 8, -8
 3832              		.cfi_offset 14, -4
 3833 0004 0446     		mov	r4, r0
 3834              	.LBB226:
 3835              	.LBB227:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 3836              		.loc 2 34 0
 3837 0006 2B4B     		ldr	r3, .L206
 3838              	.LBE227:
 3839              	.LBE226:
 391:./lib/ros_lib/ros/node_handle.h ****       {
 3840              		.loc 13 391 0
 3841              		.pad #24
 3842 0008 86B0     		sub	sp, sp, #24
 3843              	.LCFI43:
 3844              		.cfi_def_cfa_offset 48
 3845              	.LVL453:
 3846              	.LBB229:
 3847              	.LBB228:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 3848              		.loc 2 34 0
 3849 000a 0093     		str	r3, [sp]
 3850 000c 2A4B     		ldr	r3, .L206+4
 3851 000e 0022     		movs	r2, #0
 3852 0010 ADF80420 		strh	r2, [sp, #4]	@ movhi
 3853 0014 0293     		str	r3, [sp, #8]
 3854 0016 0393     		str	r3, [sp, #12]
 3855 0018 0493     		str	r3, [sp, #16]
 3856 001a 0592     		str	r2, [sp, #20]
 3857              	.LVL454:
 3858 001c 00F21446 		addw	r6, r0, #1044
 3859 0020 00F58F65 		add	r5, r0, #1144
 3860              	.LBE228:
 3861              	.LBE229:
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 3862              		.loc 13 403 0
 3863 0024 4FF40077 		mov	r7, #512
 3864              	.LVL455:
 3865              	.L195:
 397:./lib/ros_lib/ros/node_handle.h ****           {
 3866              		.loc 13 397 0
 3867 0028 56F8043F 		ldr	r3, [r6, #4]!
 3868 002c BBB1     		cbz	r3, .L194
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 3869              		.loc 13 399 0
 3870 002e 9A68     		ldr	r2, [r3, #8]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3871              		.loc 13 401 0
 3872 0030 5868     		ldr	r0, [r3, #4]
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 3873              		.loc 13 399 0
 3874 0032 ADF80420 		strh	r2, [sp, #4]	@ movhi
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 3875              		.loc 13 400 0
 3876 0036 1A68     		ldr	r2, [r3]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3877              		.loc 13 401 0
 3878 0038 0368     		ldr	r3, [r0]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 3879              		.loc 13 400 0
 3880 003a 0292     		str	r2, [sp, #8]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3881              		.loc 13 401 0
 3882 003c 9B68     		ldr	r3, [r3, #8]
 3883 003e 9847     		blx	r3
 3884              	.LVL456:
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 3885              		.loc 13 402 0
 3886 0040 3368     		ldr	r3, [r6]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3887              		.loc 13 401 0
 3888 0042 0390     		str	r0, [sp, #12]
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 3889              		.loc 13 402 0
 3890 0044 5868     		ldr	r0, [r3, #4]
 3891 0046 0368     		ldr	r3, [r0]
 3892 0048 DB68     		ldr	r3, [r3, #12]
 3893 004a 9847     		blx	r3
 3894              	.LVL457:
 3895 004c 3168     		ldr	r1, [r6]
 404:./lib/ros_lib/ros/node_handle.h ****           }
 3896              		.loc 13 404 0
 3897 004e 2368     		ldr	r3, [r4]
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 3898              		.loc 13 402 0
 3899 0050 0490     		str	r0, [sp, #16]
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 3900              		.loc 13 403 0
 3901 0052 0597     		str	r7, [sp, #20]
 3902              	.LVL458:
 404:./lib/ros_lib/ros/node_handle.h ****           }
 3903              		.loc 13 404 0
 3904 0054 1B68     		ldr	r3, [r3]
 3905 0056 6A46     		mov	r2, sp
 3906 0058 0969     		ldr	r1, [r1, #16]
 3907              	.LVL459:
 3908 005a 2046     		mov	r0, r4
 3909 005c 9847     		blx	r3
 3910              	.LVL460:
 3911              	.L194:
 395:./lib/ros_lib/ros/node_handle.h ****         {
 3912              		.loc 13 395 0 discriminator 2
 3913 005e AE42     		cmp	r6, r5
 3914 0060 E2D1     		bne	.L195
 3915 0062 04F2DC46 		addw	r6, r4, #1244
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 3916              		.loc 13 415 0
 3917 0066 4FF40077 		mov	r7, #512
 3918              	.L197:
 409:./lib/ros_lib/ros/node_handle.h ****           {
 3919              		.loc 13 409 0
 3920 006a 55F8040F 		ldr	r0, [r5, #4]!
 3921 006e C8B1     		cbz	r0, .L196
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 3922              		.loc 13 411 0
 3923 0070 4368     		ldr	r3, [r0, #4]
 3924 0072 ADF80430 		strh	r3, [sp, #4]	@ movhi
 412:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 3925              		.loc 13 412 0
 3926 0076 8368     		ldr	r3, [r0, #8]
 3927 0078 0293     		str	r3, [sp, #8]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 3928              		.loc 13 413 0
 3929 007a 0368     		ldr	r3, [r0]
 3930 007c 9B68     		ldr	r3, [r3, #8]
 3931 007e 9847     		blx	r3
 3932              	.LVL461:
 3933 0080 0390     		str	r0, [sp, #12]
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 3934              		.loc 13 414 0
 3935 0082 2868     		ldr	r0, [r5]
 3936 0084 0368     		ldr	r3, [r0]
 3937 0086 DB68     		ldr	r3, [r3, #12]
 3938 0088 9847     		blx	r3
 3939              	.LVL462:
 416:./lib/ros_lib/ros/node_handle.h ****           }
 3940              		.loc 13 416 0
 3941 008a 2368     		ldr	r3, [r4]
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 3942              		.loc 13 414 0
 3943 008c 0490     		str	r0, [sp, #16]
 416:./lib/ros_lib/ros/node_handle.h ****           }
 3944              		.loc 13 416 0
 3945 008e 2868     		ldr	r0, [r5]
 3946 0090 D3F80080 		ldr	r8, [r3]
 3947 0094 0368     		ldr	r3, [r0]
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 3948              		.loc 13 415 0
 3949 0096 0597     		str	r7, [sp, #20]
 416:./lib/ros_lib/ros/node_handle.h ****           }
 3950              		.loc 13 416 0
 3951 0098 5B68     		ldr	r3, [r3, #4]
 3952 009a 9847     		blx	r3
 3953              	.LVL463:
 3954 009c 6A46     		mov	r2, sp
 3955 009e 0146     		mov	r1, r0
 3956 00a0 2046     		mov	r0, r4
 3957 00a2 C047     		blx	r8
 3958              	.LVL464:
 3959              	.L196:
 407:./lib/ros_lib/ros/node_handle.h ****         {
 3960              		.loc 13 407 0 discriminator 2
 3961 00a4 AE42     		cmp	r6, r5
 3962 00a6 E0D1     		bne	.L197
 419:./lib/ros_lib/ros/node_handle.h ****       }
 3963              		.loc 13 419 0
 3964 00a8 0123     		movs	r3, #1
 3965 00aa 84F8F434 		strb	r3, [r4, #1268]
 420:./lib/ros_lib/ros/node_handle.h **** 
 3966              		.loc 13 420 0
 3967 00ae 06B0     		add	sp, sp, #24
 3968              	.LCFI44:
 3969              		.cfi_def_cfa_offset 24
 3970              	.LVL465:
 3971              		@ sp needed
 3972 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3973              	.LVL466:
 3974              	.L207:
 3975              		.align	2
 3976              	.L206:
 3977 00b4 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 3978 00b8 3E020000 		.word	.LC20
 3979              		.cfi_endproc
 3980              	.LFE225:
 3981              		.fnend
 3983              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh,"axG",%pr
 3984              		.align	1
 3985              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 3986              		.thumb
 3987              		.thumb_func
 3989              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:
 3990              		.fnstart
 3991              	.LFB226:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 3992              		.loc 13 301 0
 3993              		.cfi_startproc
 3994              		@ args = 0, pretend = 0, frame = 16
 3995              		@ frame_needed = 0, uses_anonymous_args = 0
 3996              	.LVL467:
 3997 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 3998              		.save {r4, r5, r6, lr}
 3999              		.pad #16
 4000              	.LCFI45:
 4001              		.cfi_def_cfa_offset 32
 4002              		.cfi_offset 4, -16
 4003              		.cfi_offset 5, -12
 4004              		.cfi_offset 6, -8
 4005              		.cfi_offset 14, -4
 4006              	.LVL468:
 4007              	.LBB244:
 4008              	.LBB245:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4009              		.loc 1 19 0
 4010 0002 1C4B     		ldr	r3, .L209
 4011              	.LBE245:
 4012              	.LBE244:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 4013              		.loc 13 301 0
 4014 0004 0446     		mov	r4, r0
 4015              	.LBB249:
 4016              	.LBB248:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4017              		.loc 1 19 0
 4018 0006 0193     		str	r3, [sp, #4]
 4019              	.LVL469:
 4020              	.LBB246:
 4021              	.LBB247:
 4022              		.loc 16 52 0
 4023 0008 0023     		movs	r3, #0
 4024 000a 0293     		str	r3, [sp, #8]
 4025 000c 0393     		str	r3, [sp, #12]
 4026              	.LVL470:
 4027              	.LBE247:
 4028              	.LBE246:
 4029              	.LBE248:
 4030              	.LBE249:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 4031              		.loc 13 301 0
 4032 000e 0D46     		mov	r5, r1
 4033              	.LBB250:
 4034              	.LBB251:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4035              		.loc 14 134 0
 4036 0010 FFF7FEFF 		bl	millis
 4037              	.LVL471:
 4038              	.LBE251:
 4039              	.LBE250:
 304:./lib/ros_lib/ros/node_handle.h **** 
 4040              		.loc 13 304 0
 4041 0014 E268     		ldr	r2, [r4, #12]
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 4042              		.loc 13 306 0
 4043 0016 2946     		mov	r1, r5
 304:./lib/ros_lib/ros/node_handle.h **** 
 4044              		.loc 13 304 0
 4045 0018 861A     		subs	r6, r0, r2
 4046              	.LVL472:
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4047              		.loc 13 307 0
 4048 001a 4FF47A75 		mov	r5, #1000
 4049              	.LVL473:
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 4050              		.loc 13 306 0
 4051 001e 01A8     		add	r0, sp, #4
 4052 0020 FFF7FEFF 		bl	_ZN8std_msgs4Time11deserializeEPh
 4053              	.LVL474:
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4054              		.loc 13 307 0
 4055 0024 B6FBF5F2 		udiv	r2, r6, r5
 4056 0028 029B     		ldr	r3, [sp, #8]
 4057 002a 1344     		add	r3, r3, r2
 308:./lib/ros_lib/ros/node_handle.h **** 
 4058              		.loc 13 308 0
 4059 002c 05FB1262 		mls	r2, r5, r2, r6
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4060              		.loc 13 307 0
 4061 0030 0293     		str	r3, [sp, #8]
 308:./lib/ros_lib/ros/node_handle.h **** 
 4062              		.loc 13 308 0
 4063 0032 114E     		ldr	r6, .L209+4
 4064              	.LVL475:
 4065 0034 039B     		ldr	r3, [sp, #12]
 4066 0036 06FB0232 		mla	r2, r6, r2, r3
 4067 003a 0392     		str	r2, [sp, #12]
 4068              	.LVL476:
 4069              	.LBB252:
 4070              	.LBB253:
 4071              	.LBB254:
 4072              	.LBB255:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4073              		.loc 14 134 0
 4074 003c FFF7FEFF 		bl	millis
 4075              	.LVL477:
 4076              	.LBE255:
 4077              	.LBE254:
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 4078              		.loc 13 327 0
 4079 0040 B0FBF5F3 		udiv	r3, r0, r5
 4080 0044 029A     		ldr	r2, [sp, #8]
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4081              		.loc 13 328 0
 4082 0046 0399     		ldr	r1, [sp, #12]
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 4083              		.loc 13 327 0
 4084 0048 013A     		subs	r2, r2, #1
 4085 004a D21A     		subs	r2, r2, r3
 4086 004c 2261     		str	r2, [r4, #16]
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4087              		.loc 13 328 0
 4088 004e 0B4A     		ldr	r2, .L209+8
 4089 0050 05FB1300 		mls	r0, r5, r3, r0
 4090              	.LVL478:
 4091 0054 0A44     		add	r2, r2, r1
 4092 0056 2146     		mov	r1, r4
 4093 0058 06FB1023 		mls	r3, r6, r0, r2
 329:./lib/ros_lib/ros/node_handle.h ****       }
 4094              		.loc 13 329 0
 4095 005c 04F11000 		add	r0, r4, #16
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4096              		.loc 13 328 0
 4097 0060 41F8143F 		str	r3, [r1, #20]!
 329:./lib/ros_lib/ros/node_handle.h ****       }
 4098              		.loc 13 329 0
 4099 0064 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 4100              	.LVL479:
 4101              	.LBE253:
 4102              	.LBE252:
 4103              	.LBB256:
 4104              	.LBB257:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4105              		.loc 14 134 0
 4106 0068 FFF7FEFF 		bl	millis
 4107              	.LVL480:
 4108              	.LBE257:
 4109              	.LBE256:
 311:./lib/ros_lib/ros/node_handle.h ****       }
 4110              		.loc 13 311 0
 4111 006c C4F8FC04 		str	r0, [r4, #1276]
 312:./lib/ros_lib/ros/node_handle.h **** 
 4112              		.loc 13 312 0
 4113 0070 04B0     		add	sp, sp, #16
 4114              	.LCFI46:
 4115              		.cfi_def_cfa_offset 16
 4116              		@ sp needed
 4117 0072 70BD     		pop	{r4, r5, r6, pc}
 4118              	.LVL481:
 4119              	.L210:
 4120              		.align	2
 4121              	.L209:
 4122 0074 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4123 0078 40420F00 		.word	1000000
 4124 007c 00CA9A3B 		.word	1000000000
 4125              		.cfi_endproc
 4126              	.LFE226:
 4127              		.fnend
 4129              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv,"axG",%pro
 4130              		.align	1
 4131              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 4132              		.thumb
 4133              		.thumb_func
 4135              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:
 4136              		.fnstart
 4137              	.LFB222:
 184:./lib/ros_lib/ros/node_handle.h **** 
 4138              		.loc 13 184 0
 4139              		.cfi_startproc
 4140              		@ args = 0, pretend = 0, frame = 0
 4141              		@ frame_needed = 0, uses_anonymous_args = 0
 4142              	.LVL482:
 4143 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4144              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 4145              	.LCFI47:
 4146              		.cfi_def_cfa_offset 32
 4147              		.cfi_offset 3, -32
 4148              		.cfi_offset 4, -28
 4149              		.cfi_offset 5, -24
 4150              		.cfi_offset 6, -20
 4151              		.cfi_offset 7, -16
 4152              		.cfi_offset 8, -12
 4153              		.cfi_offset 9, -8
 4154              		.cfi_offset 14, -4
 184:./lib/ros_lib/ros/node_handle.h **** 
 4155              		.loc 13 184 0
 4156 0004 0446     		mov	r4, r0
 4157              	.LVL483:
 4158              	.LBB265:
 4159              	.LBB266:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4160              		.loc 14 134 0
 4161 0006 FFF7FEFF 		bl	millis
 4162              	.LVL484:
 4163              	.LBE266:
 4164              	.LBE265:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 4165              		.loc 13 188 0
 4166 000a 42F6F822 		movw	r2, #11000
 4167 000e D4F8FC34 		ldr	r3, [r4, #1276]
 4168              	.LBB268:
 4169              	.LBB267:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4170              		.loc 14 134 0
 4171 0012 0646     		mov	r6, r0
 4172              	.LVL485:
 4173              	.LBE267:
 4174              	.LBE268:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 4175              		.loc 13 188 0
 4176 0014 C31A     		subs	r3, r0, r3
 4177 0016 9342     		cmp	r3, r2
 189:./lib/ros_lib/ros/node_handle.h ****          }
 4178              		.loc 13 189 0
 4179 0018 84BF     		itt	hi
 4180 001a 0023     		movhi	r3, #0
 4181 001c 84F8F434 		strbhi	r3, [r4, #1268]
 193:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 4182              		.loc 13 193 0
 4183 0020 D4F8E034 		ldr	r3, [r4, #1248]
 4184 0024 33B1     		cbz	r3, .L213
 194:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 4185              		.loc 13 194 0
 4186 0026 D4F80035 		ldr	r3, [r4, #1280]
 4187 002a 8342     		cmp	r3, r0
 195:./lib/ros_lib/ros/node_handle.h ****           }
 4188              		.loc 13 195 0
 4189 002c 3CBF     		itt	cc
 4190 002e 0023     		movcc	r3, #0
 4191 0030 C4F8E034 		strcc	r3, [r4, #1248]
 4192              	.L213:
 4193              	.LBB269:
 4194              	.LBB270:
 4195              	.LBB271:
 118:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 4196              		.loc 14 118 0
 4197 0034 744F     		ldr	r7, .L253
 4198              	.LBE271:
 4199              	.LBE270:
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 4200              		.loc 13 252 0
 4201 0036 4FF00008 		mov	r8, #0
 269:./lib/ros_lib/ros/node_handle.h ****               }
 4202              		.loc 13 269 0
 4203 003a 04F11809 		add	r9, r4, #24
 4204              	.LVL486:
 4205              	.L214:
 4206              	.LBB274:
 4207              	.LBB272:
 118:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 4208              		.loc 14 118 0
 4209 003e 7A69     		ldr	r2, [r7, #20]
 4210 0040 3B69     		ldr	r3, [r7, #16]
 4211 0042 9A42     		cmp	r2, r3
 4212 0044 00F0CC80 		beq	.L215
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 4213              		.loc 14 121 0
 4214 0048 3B69     		ldr	r3, [r7, #16]
 4215              	.LBE272:
 4216              	.LBE274:
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4217              		.loc 13 206 0
 4218 004a D4F8E054 		ldr	r5, [r4, #1248]
 4219              	.LBB275:
 4220              	.LBB273:
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 4221              		.loc 14 121 0
 4222 004e 07EB4303 		add	r3, r7, r3, lsl #1
 4223 0052 1B8B     		ldrh	r3, [r3, #24]
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 4224              		.loc 14 122 0
 4225 0054 3A69     		ldr	r2, [r7, #16]
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 4226              		.loc 14 121 0
 4227 0056 9BB2     		uxth	r3, r3
 4228              	.LVL487:
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 4229              		.loc 14 122 0
 4230 0058 0132     		adds	r2, r2, #1
 4231 005a C2F30802 		ubfx	r2, r2, #0, #9
 4232 005e 3A61     		str	r2, [r7, #16]
 4233              	.LVL488:
 4234              	.LBE273:
 4235              	.LBE275:
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 4236              		.loc 13 205 0
 4237 0060 D4F8F024 		ldr	r2, [r4, #1264]
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4238              		.loc 13 206 0
 4239 0064 072D     		cmp	r5, #7
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 4240              		.loc 13 205 0
 4241 0066 1A44     		add	r2, r2, r3
 4242 0068 C4F8F024 		str	r2, [r4, #1264]
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4243              		.loc 13 206 0
 4244 006c 0FD1     		bne	.L216
 207:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 4245              		.loc 13 207 0
 4246 006e D4F8EC24 		ldr	r2, [r4, #1260]
 4247 0072 511C     		adds	r1, r2, #1
 4248 0074 2244     		add	r2, r2, r4
 4249 0076 C4F8EC14 		str	r1, [r4, #1260]
 4250 007a 1376     		strb	r3, [r2, #24]
 208:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 4251              		.loc 13 208 0
 4252 007c D4F8E434 		ldr	r3, [r4, #1252]
 4253 0080 013B     		subs	r3, r3, #1
 4254 0082 C4F8E434 		str	r3, [r4, #1252]
 4255              	.L251:
 209:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 4256              		.loc 13 209 0
 4257 0086 002B     		cmp	r3, #0
 4258 0088 D9D1     		bne	.L214
 210:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 4259              		.loc 13 210 0
 4260 008a 0823     		movs	r3, #8
 4261 008c 1AE0     		b	.L249
 4262              	.L216:
 211:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 4263              		.loc 13 211 0
 4264 008e A5B9     		cbnz	r5, .L219
 212:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 4265              		.loc 13 212 0
 4266 0090 FF2B     		cmp	r3, #255
 4267 0092 07D1     		bne	.L220
 213:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 4268              		.loc 13 213 0
 4269 0094 0123     		movs	r3, #1
 4270 0096 C4F8E034 		str	r3, [r4, #1248]
 214:./lib/ros_lib/ros/node_handle.h ****             }
 4271              		.loc 13 214 0
 4272 009a 06F11403 		add	r3, r6, #20
 4273 009e C4F80035 		str	r3, [r4, #1280]
 4274 00a2 CCE7     		b	.L214
 4275              	.L220:
 4276              	.LVL489:
 4277              	.LBB276:
 4278              	.LBB277:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4279              		.loc 14 134 0
 4280 00a4 FFF7FEFF 		bl	millis
 4281              	.LVL490:
 4282              	.LBE277:
 4283              	.LBE276:
 216:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 4284              		.loc 13 216 0
 4285 00a8 801B     		subs	r0, r0, r6
 4286 00aa 0528     		cmp	r0, #5
 4287 00ac C7D9     		bls	.L214
 218:./lib/ros_lib/ros/node_handle.h ****               return -2;
 4288              		.loc 13 218 0
 4289 00ae 84F8F454 		strb	r5, [r4, #1268]
 219:./lib/ros_lib/ros/node_handle.h ****             }
 4290              		.loc 13 219 0
 4291 00b2 6FF00100 		mvn	r0, #1
 4292 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4293              	.LVL491:
 4294              	.L219:
 221:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 4295              		.loc 13 221 0
 4296 00ba 012D     		cmp	r5, #1
 4297 00bc 0FD1     		bne	.L222
 222:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 4298              		.loc 13 222 0
 4299 00be FE2B     		cmp	r3, #254
 4300 00c0 03D1     		bne	.L223
 223:./lib/ros_lib/ros/node_handle.h ****             }else{
 4301              		.loc 13 223 0
 4302 00c2 0223     		movs	r3, #2
 4303              	.L249:
 4304 00c4 C4F8E034 		str	r3, [r4, #1248]
 4305 00c8 B9E7     		b	.L214
 4306              	.L223:
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 4307              		.loc 13 226 0
 4308 00ca 94F8F434 		ldrb	r3, [r4, #1268]	@ zero_extendqisi2
 225:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 4309              		.loc 13 225 0
 4310 00ce C4F8E084 		str	r8, [r4, #1248]
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 4311              		.loc 13 226 0
 4312 00d2 002B     		cmp	r3, #0
 4313 00d4 B3D1     		bne	.L214
 227:./lib/ros_lib/ros/node_handle.h ****             }
 4314              		.loc 13 227 0
 4315 00d6 2046     		mov	r0, r4
 4316 00d8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 4317              	.LVL492:
 4318 00dc AFE7     		b	.L214
 4319              	.L222:
 229:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 4320              		.loc 13 229 0
 4321 00de 022D     		cmp	r5, #2
 4322 00e0 05D1     		bne	.L224
 230:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 4323              		.loc 13 230 0
 4324 00e2 C4F8E434 		str	r3, [r4, #1252]
 231:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 4325              		.loc 13 231 0
 4326 00e6 C4F8EC84 		str	r8, [r4, #1260]
 232:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 4327              		.loc 13 232 0
 4328 00ea 0322     		movs	r2, #3
 4329 00ec 20E0     		b	.L250
 4330              	.L224:
 234:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 4331              		.loc 13 234 0
 4332 00ee 032D     		cmp	r5, #3
 4333 00f0 07D1     		bne	.L225
 235:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 4334              		.loc 13 235 0
 4335 00f2 D4F8E424 		ldr	r2, [r4, #1252]
 4336 00f6 02EB0323 		add	r3, r2, r3, lsl #8
 4337 00fa C4F8E434 		str	r3, [r4, #1252]
 236:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 4338              		.loc 13 236 0
 4339 00fe 0423     		movs	r3, #4
 4340 0100 E0E7     		b	.L249
 4341              	.L225:
 237:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 4342              		.loc 13 237 0
 4343 0102 042D     		cmp	r5, #4
 4344 0104 0FD1     		bne	.L226
 238:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 4345              		.loc 13 238 0
 4346 0106 414B     		ldr	r3, .L253+4
 4347 0108 1340     		ands	r3, r3, r2
 4348 010a 002B     		cmp	r3, #0
 4349 010c BEBF     		ittt	lt
 4350 010e 03F1FF33 		addlt	r3, r3, #-1
 4351 0112 63F0FF03 		ornlt	r3, r3, #255
 4352 0116 0133     		addlt	r3, r3, #1
 4353 0118 FF2B     		cmp	r3, #255
 4354 011a 01D1     		bne	.L227
 239:./lib/ros_lib/ros/node_handle.h **** 	    else
 4355              		.loc 13 239 0
 4356 011c 0523     		movs	r3, #5
 4357 011e D1E7     		b	.L249
 4358              	.L227:
 241:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 4359              		.loc 13 241 0
 4360 0120 C4F8E084 		str	r8, [r4, #1248]
 4361 0124 8BE7     		b	.L214
 4362              	.L226:
 242:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 4363              		.loc 13 242 0
 4364 0126 052D     		cmp	r5, #5
 4365 0128 07D1     		bne	.L229
 243:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 4366              		.loc 13 243 0
 4367 012a C4F8E834 		str	r3, [r4, #1256]
 244:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 4368              		.loc 13 244 0
 4369 012e 0622     		movs	r2, #6
 4370              	.L250:
 4371 0130 C4F8E024 		str	r2, [r4, #1248]
 245:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 4372              		.loc 13 245 0
 4373 0134 C4F8F034 		str	r3, [r4, #1264]
 4374 0138 81E7     		b	.L214
 4375              	.L229:
 246:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 4376              		.loc 13 246 0
 4377 013a 062D     		cmp	r5, #6
 4378 013c 0BD1     		bne	.L230
 247:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 4379              		.loc 13 247 0
 4380 013e D4F8E824 		ldr	r2, [r4, #1256]
 4381 0142 02EB0323 		add	r3, r2, r3, lsl #8
 4382 0146 C4F8E834 		str	r3, [r4, #1256]
 248:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 4383              		.loc 13 248 0
 4384 014a 0723     		movs	r3, #7
 4385 014c C4F8E034 		str	r3, [r4, #1248]
 249:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 4386              		.loc 13 249 0
 4387 0150 D4F8E434 		ldr	r3, [r4, #1252]
 4388 0154 97E7     		b	.L251
 4389              	.L230:
 251:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 4390              		.loc 13 251 0
 4391 0156 082D     		cmp	r5, #8
 4392 0158 7FF471AF 		bne	.L214
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 4393              		.loc 13 253 0
 4394 015c 2B4B     		ldr	r3, .L253+4
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 4395              		.loc 13 252 0
 4396 015e C4F8E084 		str	r8, [r4, #1248]
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 4397              		.loc 13 253 0
 4398 0162 1340     		ands	r3, r3, r2
 4399 0164 002B     		cmp	r3, #0
 4400 0166 BEBF     		ittt	lt
 4401 0168 03F1FF33 		addlt	r3, r3, #-1
 4402 016c 63F0FF03 		ornlt	r3, r3, #255
 4403 0170 0133     		addlt	r3, r3, #1
 4404 0172 FF2B     		cmp	r3, #255
 4405 0174 7FF463AF 		bne	.L214
 254:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 4406              		.loc 13 254 0
 4407 0178 D4F8E834 		ldr	r3, [r4, #1256]
 4408 017c 6BB9     		cbnz	r3, .L233
 255:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 4409              		.loc 13 255 0
 4410 017e 2046     		mov	r0, r4
 4411 0180 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 4412              	.LVL493:
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 4413              		.loc 13 256 0
 4414 0184 2046     		mov	r0, r4
 4415 0186 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 4416              	.LVL494:
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 4417              		.loc 13 257 0
 4418 018a C4F8F864 		str	r6, [r4, #1272]
 258:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 4419              		.loc 13 258 0
 4420 018e C4F8FC64 		str	r6, [r4, #1276]
 259:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 4421              		.loc 13 259 0
 4422 0192 4FF0FF30 		mov	r0, #-1
 4423 0196 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4424              	.LVL495:
 4425              	.L233:
 260:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 4426              		.loc 13 260 0
 4427 019a 0A2B     		cmp	r3, #10
 4428 019c 04D1     		bne	.L234
 261:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 4429              		.loc 13 261 0
 4430 019e 4946     		mov	r1, r9
 4431 01a0 2046     		mov	r0, r4
 4432 01a2 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 4433              	.LVL496:
 4434 01a6 4AE7     		b	.L214
 4435              	.L234:
 262:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 4436              		.loc 13 262 0
 4437 01a8 062B     		cmp	r3, #6
 4438 01aa 08D1     		bne	.L235
 263:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 4439              		.loc 13 263 0
 4440 01ac 4946     		mov	r1, r9
 4441 01ae 04F5A160 		add	r0, r4, #1288
 4442 01b2 FFF7FEFF 		bl	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 4443              	.LVL497:
 264:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 4444              		.loc 13 264 0
 4445 01b6 0123     		movs	r3, #1
 4446 01b8 84F80435 		strb	r3, [r4, #1284]
 4447 01bc 3FE7     		b	.L214
 4448              	.L235:
 265:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 4449              		.loc 13 265 0
 4450 01be 0B2B     		cmp	r3, #11
 4451 01c0 02D1     		bne	.L236
 266:./lib/ros_lib/ros/node_handle.h ****               }else{
 4452              		.loc 13 266 0
 4453 01c2 84F8F484 		strb	r8, [r4, #1268]
 4454 01c6 3AE7     		b	.L214
 4455              	.L236:
 268:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 4456              		.loc 13 268 0
 4457 01c8 04EB8303 		add	r3, r4, r3, lsl #2
 4458 01cc D3F8EC02 		ldr	r0, [r3, #748]
 4459 01d0 0028     		cmp	r0, #0
 4460 01d2 3FF434AF 		beq	.L214
 269:./lib/ros_lib/ros/node_handle.h ****               }
 4461              		.loc 13 269 0
 4462 01d6 0368     		ldr	r3, [r0]
 4463 01d8 4946     		mov	r1, r9
 4464 01da 1B68     		ldr	r3, [r3]
 4465 01dc 9847     		blx	r3
 4466              	.LVL498:
 4467 01de 2EE7     		b	.L214
 4468              	.L215:
 4469              	.LBE269:
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 4470              		.loc 13 276 0
 4471 01e0 94F8F404 		ldrb	r0, [r4, #1268]	@ zero_extendqisi2
 4472 01e4 70B1     		cbz	r0, .L252
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 4473              		.loc 13 276 0 is_stmt 0 discriminator 1
 4474 01e6 40F6C412 		movw	r2, #2500
 4475 01ea D4F8F834 		ldr	r3, [r4, #1272]
 4476 01ee F31A     		subs	r3, r6, r3
 4477 01f0 9342     		cmp	r3, r2
 4478 01f2 04D9     		bls	.L238
 277:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 4479              		.loc 13 277 0 is_stmt 1
 4480 01f4 2046     		mov	r0, r4
 4481 01f6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 4482              	.LVL499:
 278:./lib/ros_lib/ros/node_handle.h ****         }
 4483              		.loc 13 278 0
 4484 01fa C4F8F864 		str	r6, [r4, #1272]
 4485              	.L238:
 281:./lib/ros_lib/ros/node_handle.h ****       }
 4486              		.loc 13 281 0
 4487 01fe 0020     		movs	r0, #0
 4488 0200 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4489              	.LVL500:
 4490              	.L252:
 282:./lib/ros_lib/ros/node_handle.h **** 
 4491              		.loc 13 282 0
 4492 0204 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4493              	.LVL501:
 4494              	.L254:
 4495              		.align	2
 4496              	.L253:
 4497 0208 00000000 		.word	.LANCHOR1
 4498 020c FF000080 		.word	-2147483393
 4499              		.cfi_endproc
 4500              	.LFE222:
 4501              		.fnend
 4503              		.section	.text.startup,"ax",%progbits
 4504              		.align	1
 4505              		.global	main
 4506              		.thumb
 4507              		.thumb_func
 4509              	main:
 4510              		.fnstart
 4511              	.LFB200:
  52:src/main.cpp  **** 
  53:src/main.cpp  **** 
  54:src/main.cpp  **** //ros::Subscriber<roberto_msgs::MotorState> motor_sub("motor", &motor_cb);
  55:src/main.cpp  **** ros::Subscriber<sensor_msgs::Joy> motor_sub("joy", &motor_cb);
  56:src/main.cpp  **** ros::Subscriber<std_msgs::UInt8> led_sub("led", &led_cb);
  57:src/main.cpp  **** 
  58:src/main.cpp  **** std_msgs::Float32MultiArray str_msg;
  59:src/main.cpp  **** ros::Publisher chatter("encoder", &str_msg);
  60:src/main.cpp  **** 
  61:src/main.cpp  **** char hello[25];
  62:src/main.cpp  **** char str[150];
  63:src/main.cpp  **** 
  64:src/main.cpp  **** 
  65:src/main.cpp  **** int main(){
 4512              		.loc 11 65 0
 4513              		.cfi_startproc
 4514              		@ args = 0, pretend = 0, frame = 576
 4515              		@ frame_needed = 0, uses_anonymous_args = 0
 4516 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4517              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4518              	.LCFI48:
 4519              		.cfi_def_cfa_offset 36
 4520              		.cfi_offset 4, -36
 4521              		.cfi_offset 5, -32
 4522              		.cfi_offset 6, -28
 4523              		.cfi_offset 7, -24
 4524              		.cfi_offset 8, -20
 4525              		.cfi_offset 9, -16
 4526              		.cfi_offset 10, -12
 4527              		.cfi_offset 11, -8
 4528              		.cfi_offset 14, -4
 4529              		.pad #612
 4530 0004 ADF5197D 		sub	sp, sp, #612
 4531              	.LCFI49:
 4532              		.cfi_def_cfa_offset 648
  66:src/main.cpp  ****   /* System Clocks Configuration */
  67:src/main.cpp  ****   RCC_Configuration();
 4533              		.loc 11 67 0
 4534 0008 FFF7FEFF 		bl	RCC_Configuration
 4535              	.LVL502:
  68:src/main.cpp  **** 
  69:src/main.cpp  ****   str_msg.data = (float *)malloc(sizeof(float)*4);
 4536              		.loc 11 69 0
 4537 000c 1020     		movs	r0, #16
 4538 000e FFF7FEFF 		bl	malloc
 4539              	.LVL503:
 4540 0012 234C     		ldr	r4, .L275
  70:src/main.cpp  ****   str_msg.data_length = 4;
 4541              		.loc 11 70 0
 4542 0014 0423     		movs	r3, #4
  69:src/main.cpp  ****   str_msg.data_length = 4;
 4543              		.loc 11 69 0
 4544 0016 C4F84404 		str	r0, [r4, #1092]
 4545              	.LBB291:
 4546              	.LBB292:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 4547              		.loc 13 147 0
 4548 001a 04F24C40 		addw	r0, r4, #1100
 4549              	.LBE292:
 4550              	.LBE291:
 4551              		.loc 11 70 0
 4552 001e 84F83C34 		strb	r3, [r4, #1084]
 4553              	.LVL504:
 4554              	.LBB294:
 4555              	.LBB293:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 4556              		.loc 13 147 0
 4557 0022 FFF7FEFF 		bl	_ZN15ArduinoHardware4initEv
 4558              	.LVL505:
 4559 0026 04F50C62 		add	r2, r4, #2240
 151:./lib/ros_lib/ros/node_handle.h ****       };
 4560              		.loc 13 151 0
 4561 002a 1146     		mov	r1, r2
 148:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 4562              		.loc 13 148 0
 4563 002c 0023     		movs	r3, #0
 4564 002e C4F82839 		str	r3, [r4, #2344]
 149:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 4565              		.loc 13 149 0
 4566 0032 C4F82C39 		str	r3, [r4, #2348]
 150:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 4567              		.loc 13 150 0
 4568 0036 C4F83439 		str	r3, [r4, #2356]
 151:./lib/ros_lib/ros/node_handle.h ****       };
 4569              		.loc 13 151 0
 4570 003a C4F83039 		str	r3, [r4, #2352]
 4571              	.LVL506:
 4572              	.L258:
 4573              	.LBE293:
 4574              	.LBE294:
 4575              	.LBB295:
 4576              	.LBB296:
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 4577              		.loc 13 354 0
 4578 003e 51F8040F 		ldr	r0, [r1, #4]!
 4579 0042 40B9     		cbnz	r0, .L256
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 4580              		.loc 13 355 0
 4581 0044 1748     		ldr	r0, .L275+4
 4582 0046 04EB8301 		add	r1, r4, r3, lsl #2
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 4583              		.loc 13 356 0
 4584 004a 6433     		adds	r3, r3, #100
 4585              	.LVL507:
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 4586              		.loc 13 355 0
 4587 004c C1F8C408 		str	r0, [r1, #2244]
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 4588              		.loc 13 356 0
 4589 0050 C4F87C39 		str	r3, [r4, #2428]
 4590 0054 02E0     		b	.L257
 4591              	.LVL508:
 4592              	.L256:
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 4593              		.loc 13 353 0
 4594 0056 0133     		adds	r3, r3, #1
 4595              	.LVL509:
 4596 0058 192B     		cmp	r3, #25
 4597 005a F0D1     		bne	.L258
 4598              	.LVL510:
 4599              	.L257:
 4600              	.LBE296:
 4601              	.LBE295:
 4602              	.LBB297:
 4603              	.LBB298:
 4604 005c 0023     		movs	r3, #0
 4605              	.LVL511:
 4606              	.L261:
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 4607              		.loc 13 354 0
 4608 005e 52F8041F 		ldr	r1, [r2, #4]!
 4609 0062 41B9     		cbnz	r1, .L259
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 4610              		.loc 13 355 0
 4611 0064 1049     		ldr	r1, .L275+8
 4612 0066 04EB8302 		add	r2, r4, r3, lsl #2
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 4613              		.loc 13 356 0
 4614 006a 6433     		adds	r3, r3, #100
 4615              	.LVL512:
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 4616              		.loc 13 355 0
 4617 006c C2F8C418 		str	r1, [r2, #2244]
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 4618              		.loc 13 356 0
 4619 0070 C4F8C039 		str	r3, [r4, #2496]
 4620 0074 02E0     		b	.L260
 4621              	.LVL513:
 4622              	.L259:
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 4623              		.loc 13 353 0
 4624 0076 0133     		adds	r3, r3, #1
 4625              	.LVL514:
 4626 0078 192B     		cmp	r3, #25
 4627 007a F0D1     		bne	.L261
 4628              	.LVL515:
 4629              	.L260:
 4630 007c 0B4A     		ldr	r2, .L275+12
 4631              	.LBE298:
 4632              	.LBE297:
 4633              	.LBB299:
 4634              	.LBB300:
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 4635              		.loc 13 339 0
 4636 007e 0023     		movs	r3, #0
 4637              	.LVL516:
 4638              	.L264:
 340:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 4639              		.loc 13 340 0
 4640 0080 52F8041F 		ldr	r1, [r2, #4]!
 4641 0084 B1B9     		cbnz	r1, .L262
 341:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 4642              		.loc 13 341 0
 4643 0086 0A4A     		ldr	r2, .L275+16
 4644 0088 04EB8301 		add	r1, r4, r3, lsl #2
 4645 008c C1F86028 		str	r2, [r1, #2144]
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 4646              		.loc 13 342 0
 4647 0090 7D33     		adds	r3, r3, #125
 4648              	.LVL517:
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 4649              		.loc 13 343 0
 4650 0092 A2F5B262 		sub	r2, r2, #1424
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 4651              		.loc 13 342 0
 4652 0096 C4F8E039 		str	r3, [r4, #2528]
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 4653              		.loc 13 343 0
 4654 009a C4F8E429 		str	r2, [r4, #2532]
 4655 009e 0CE0     		b	.L263
 4656              	.L276:
 4657              		.align	2
 4658              	.L275:
 4659 00a0 00000000 		.word	.LANCHOR1
 4660 00a4 78090000 		.word	.LANCHOR1+2424
 4661 00a8 BC090000 		.word	.LANCHOR1+2492
 4662 00ac 5C080000 		.word	.LANCHOR1+2140
 4663 00b0 D8090000 		.word	.LANCHOR1+2520
 4664              	.LVL518:
 4665              	.L262:
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 4666              		.loc 13 339 0
 4667 00b4 0133     		adds	r3, r3, #1
 4668              	.LVL519:
 4669 00b6 192B     		cmp	r3, #25
 4670 00b8 E2D1     		bne	.L264
 4671              	.LVL520:
 4672              	.L263:
 4673              	.LBE300:
 4674              	.LBE299:
  71:src/main.cpp  **** 
  72:src/main.cpp  ****   nh.initNode();
  73:src/main.cpp  ****   nh.subscribe(motor_sub);
  74:src/main.cpp  ****   nh.subscribe(led_sub);
  75:src/main.cpp  ****   nh.advertise(chatter);
  76:src/main.cpp  **** 
  77:src/main.cpp  ****   
  78:src/main.cpp  ****   GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
 4675              		.loc 11 78 0
 4676 00ba 0121     		movs	r1, #1
 4677 00bc B648     		ldr	r0, .L277
 4678 00be FFF7FEFF 		bl	GPIO_PinRemapConfig
 4679              	.LVL521:
  79:src/main.cpp  ****   I2C1_Init();
  80:src/main.cpp  ****   SysTick_Init();
  81:src/main.cpp  ****   DEBUG_Init();
  82:src/main.cpp  ****   LED_Init();
  83:src/main.cpp  **** 
  84:src/main.cpp  ****   float KP = 500;
  85:src/main.cpp  ****   float KI = 500;
  86:src/main.cpp  ****   float KD = 4;
  87:src/main.cpp  ****   float integralSaturation = 10000;
  88:src/main.cpp  ****   float wheelRadius = 0.04;
  89:src/main.cpp  **** 
  90:src/main.cpp  ****   delay(1000);
  91:src/main.cpp  **** 
  92:src/main.cpp  ****   motorSettings SL(MOTOR_TYPE_SERVO, "servo_left", TIM4, 4);
 4680              		.loc 11 92 0
 4681 00c2 0427     		movs	r7, #4
  79:src/main.cpp  ****   I2C1_Init();
 4682              		.loc 11 79 0
 4683 00c4 FFF7FEFF 		bl	I2C1_Init
 4684              	.LVL522:
  80:src/main.cpp  ****   DEBUG_Init();
 4685              		.loc 11 80 0
 4686 00c8 FFF7FEFF 		bl	SysTick_Init
 4687              	.LVL523:
  81:src/main.cpp  ****   LED_Init();
 4688              		.loc 11 81 0
 4689 00cc FFF7FEFF 		bl	DEBUG_Init
 4690              	.LVL524:
  82:src/main.cpp  **** 
 4691              		.loc 11 82 0
 4692 00d0 FFF7FEFF 		bl	LED_Init
 4693              	.LVL525:
  90:src/main.cpp  **** 
 4694              		.loc 11 90 0
 4695 00d4 4FF47A70 		mov	r0, #1000
 4696 00d8 FFF7FEFF 		bl	delay
 4697              	.LVL526:
 4698              		.loc 11 92 0
 4699 00dc AF4B     		ldr	r3, .L277+4
 4700 00de B04A     		ldr	r2, .L277+8
 4701 00e0 0121     		movs	r1, #1
 4702 00e2 0097     		str	r7, [sp]
 4703 00e4 08A8     		add	r0, sp, #32
 4704 00e6 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4705              	.LVL527:
  93:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 4706              		.loc 11 93 0
 4707 00ea 4FF40073 		mov	r3, #512
  94:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 4708              		.loc 11 94 0
 4709 00ee AD4D     		ldr	r5, .L277+12
  93:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 4710              		.loc 11 93 0
 4711 00f0 0E93     		str	r3, [sp, #56]
  95:src/main.cpp  **** 
  96:src/main.cpp  ****   motorSettings SR(MOTOR_TYPE_SERVO, "servo_right", TIM4, 3);
 4712              		.loc 11 96 0
 4713 00f2 0323     		movs	r3, #3
  97:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
  98:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
  99:src/main.cpp  **** 
 100:src/main.cpp  ****   motorSettings FR(MOTOR_TYPE_DC_MOTOR, "front_right", TIM1, 1);
 4714              		.loc 11 100 0
 4715 00f4 4FF00108 		mov	r8, #1
  96:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 4716              		.loc 11 96 0
 4717 00f8 0093     		str	r3, [sp]
 4718 00fa AB4A     		ldr	r2, .L277+16
 4719 00fc A74B     		ldr	r3, .L277+4
 4720 00fe 0121     		movs	r1, #1
 4721 0100 20A8     		add	r0, sp, #128
  97:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 4722              		.loc 11 97 0
 4723 0102 4FF48079 		mov	r9, #256
  94:src/main.cpp  **** 
 4724              		.loc 11 94 0
 4725 0106 0F95     		str	r5, [sp, #60]
  96:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 4726              		.loc 11 96 0
 4727 0108 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4728              	.LVL528:
 4729              		.loc 11 100 0
 4730 010c CDF80080 		str	r8, [sp]
 4731 0110 A64B     		ldr	r3, .L277+20
 4732 0112 A74A     		ldr	r2, .L277+24
 4733 0114 0221     		movs	r1, #2
 4734 0116 38A8     		add	r0, sp, #224
 101:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 102:src/main.cpp  ****               GPIO_Pin_15, GPIOC, GPIO_Pin_0, GPIOA,
 103:src/main.cpp  ****               GPIO_Pin_8, GPIOA);
 4735              		.loc 11 103 0
 4736 0118 A64E     		ldr	r6, .L277+28
  97:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 4737              		.loc 11 97 0
 4738 011a CDF89890 		str	r9, [sp, #152]
  98:src/main.cpp  **** 
 4739              		.loc 11 98 0
 4740 011e 2795     		str	r5, [sp, #156]
 100:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 4741              		.loc 11 100 0
 4742 0120 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4743              	.LVL529:
 4744              		.loc 11 103 0
 4745 0124 A44A     		ldr	r2, .L277+32
 4746 0126 4FF40043 		mov	r3, #32768
 4747 012a 8DE80C00 		stmia	sp, {r2, r3}
 4748 012e CDF81490 		str	r9, [sp, #20]
 4749 0132 CDF80C80 		str	r8, [sp, #12]
 4750 0136 0292     		str	r2, [sp, #8]
 4751 0138 4FF48043 		mov	r3, #16384
 4752 013c 4FF40051 		mov	r1, #8192
 4753 0140 38A8     		add	r0, sp, #224
 4754 0142 0696     		str	r6, [sp, #24]
 4755 0144 0496     		str	r6, [sp, #16]
 4756 0146 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 4757              	.LVL530:
 104:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 105:src/main.cpp  ****   FR.setRegulator(KP,KI,KD,integralSaturation);
 4758              		.loc 11 105 0
 4759 014a DFF88C92 		ldr	r9, .L277+64
 4760 014e 9B4A     		ldr	r2, .L277+36
 104:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 4761              		.loc 11 104 0
 4762 0150 1823     		movs	r3, #24
 106:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 4763              		.loc 11 106 0
 4764 0152 DFF88882 		ldr	r8, .L277+68
 105:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 4765              		.loc 11 105 0
 4766 0156 1146     		mov	r1, r2
 104:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 4767              		.loc 11 104 0
 4768 0158 ADF82831 		strh	r3, [sp, #296]	@ movhi
 105:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 4769              		.loc 11 105 0
 4770 015c 38A8     		add	r0, sp, #224
 4771 015e 4FF08143 		mov	r3, #1082130432
 4772 0162 CDF80090 		str	r9, [sp]	@ float
 4773 0166 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 4774              	.LVL531:
 107:src/main.cpp  **** 
 108:src/main.cpp  ****   motorSettings FL(MOTOR_TYPE_DC_MOTOR, "front_left", TIM3, 4);
 4775              		.loc 11 108 0
 4776 016a 954B     		ldr	r3, .L277+40
 4777 016c 954A     		ldr	r2, .L277+44
 4778 016e 0221     		movs	r1, #2
 4779 0170 0097     		str	r7, [sp]
 4780 0172 50A8     		add	r0, sp, #320
 109:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 110:src/main.cpp  ****               GPIO_Pin_4, GPIOA,GPIO_Pin_10,GPIOB,
 111:src/main.cpp  ****               GPIO_Pin_1, GPIOB);
 4781              		.loc 11 111 0
 4782 0174 4FF0020A 		mov	r10, #2
 4783 0178 4FF0100B 		mov	fp, #16
 106:src/main.cpp  **** 
 4784              		.loc 11 106 0
 4785 017c CDF83C81 		str	r8, [sp, #316]	@ float
 108:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 4786              		.loc 11 108 0
 4787 0180 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4788              	.LVL532:
 4789              		.loc 11 111 0
 4790 0184 4FF48063 		mov	r3, #1024
 4791 0188 2A46     		mov	r2, r5
 4792 018a 0695     		str	r5, [sp, #24]
 4793 018c 0495     		str	r5, [sp, #16]
 4794 018e 0393     		str	r3, [sp, #12]
 4795 0190 8DE84008 		stmia	sp, {r6, fp}
 4796 0194 2023     		movs	r3, #32
 4797 0196 3946     		mov	r1, r7
 4798 0198 50A8     		add	r0, sp, #320
 4799 019a CDF814A0 		str	r10, [sp, #20]
 4800 019e 0296     		str	r6, [sp, #8]
 4801 01a0 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 4802              	.LVL533:
 112:src/main.cpp  ****   FL.encoderAddr = (0x10);
 113:src/main.cpp  ****   FL.setRegulator(KP,KI,KD,integralSaturation);
 4803              		.loc 11 113 0
 4804 01a4 854A     		ldr	r2, .L277+36
 4805 01a6 4FF08143 		mov	r3, #1082130432
 4806 01aa 1146     		mov	r1, r2
 4807 01ac 50A8     		add	r0, sp, #320
 4808 01ae CDF80090 		str	r9, [sp]	@ float
 112:src/main.cpp  ****   FL.encoderAddr = (0x10);
 4809              		.loc 11 112 0
 4810 01b2 ADF888B1 		strh	fp, [sp, #392]	@ movhi
 4811              		.loc 11 113 0
 4812 01b6 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 4813              	.LVL534:
 114:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 115:src/main.cpp  **** 
 116:src/main.cpp  ****   motorSettings RL(MOTOR_TYPE_DC_MOTOR, "rear_left", TIM2, 4);
 4814              		.loc 11 116 0
 4815 01ba 4FF08043 		mov	r3, #1073741824
 4816 01be 824A     		ldr	r2, .L277+48
 4817 01c0 5146     		mov	r1, r10
 4818 01c2 0097     		str	r7, [sp]
 4819 01c4 68A8     		add	r0, sp, #416
 114:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 4820              		.loc 11 114 0
 4821 01c6 CDF89C81 		str	r8, [sp, #412]	@ float
 4822              		.loc 11 116 0
 4823 01ca FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4824              	.LVL535:
 117:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 118:src/main.cpp  ****     GPIO_Pin_13, GPIOB, GPIO_Pin_14, GPIOB,
 119:src/main.cpp  ****     GPIO_Pin_3, GPIOA);
 4825              		.loc 11 119 0
 4826 01ce 4FF48043 		mov	r3, #16384
 4827 01d2 4FF0080B 		mov	fp, #8
 4828 01d6 0393     		str	r3, [sp, #12]
 4829 01d8 4FF40053 		mov	r3, #8192
 4830 01dc 2A46     		mov	r2, r5
 4831 01de 0495     		str	r5, [sp, #16]
 4832 01e0 0295     		str	r5, [sp, #8]
 4833 01e2 0193     		str	r3, [sp, #4]
 4834 01e4 0095     		str	r5, [sp]
 4835 01e6 4FF48053 		mov	r3, #4096
 4836 01ea 4FF40061 		mov	r1, #2048
 4837 01ee 68A8     		add	r0, sp, #416
 4838 01f0 0696     		str	r6, [sp, #24]
 4839 01f2 CDF814B0 		str	fp, [sp, #20]
 4840 01f6 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 4841              	.LVL536:
 120:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 121:src/main.cpp  ****   RL.setRegulator(KP,KI,KD,integralSaturation);
 4842              		.loc 11 121 0
 4843 01fa 704A     		ldr	r2, .L277+36
 120:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 4844              		.loc 11 120 0
 4845 01fc 1423     		movs	r3, #20
 4846              		.loc 11 121 0
 4847 01fe 1146     		mov	r1, r2
 120:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 4848              		.loc 11 120 0
 4849 0200 ADF8E831 		strh	r3, [sp, #488]	@ movhi
 4850              		.loc 11 121 0
 4851 0204 68A8     		add	r0, sp, #416
 4852 0206 4FF08143 		mov	r3, #1082130432
 4853 020a CDF80090 		str	r9, [sp]	@ float
 4854 020e FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 4855              	.LVL537:
 122:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 123:src/main.cpp  **** 
 124:src/main.cpp  ****   motorSettings RR(MOTOR_TYPE_DC_MOTOR, "rear_right", TIM1, 4);
 4856              		.loc 11 124 0
 4857 0212 664B     		ldr	r3, .L277+20
 4858 0214 6D4A     		ldr	r2, .L277+52
 4859 0216 5146     		mov	r1, r10
 4860 0218 0097     		str	r7, [sp]
 4861 021a 80A8     		add	r0, sp, #512
 122:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 4862              		.loc 11 122 0
 4863 021c CDF8FC81 		str	r8, [sp, #508]	@ float
 4864              		.loc 11 124 0
 4865 0220 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4866              	.LVL538:
 125:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 126:src/main.cpp  ****               GPIO_Pin_15, GPIOA, GPIO_Pin_3, GPIOB,
 127:src/main.cpp  ****               GPIO_Pin_11, GPIOA);
 4867              		.loc 11 127 0
 4868 0224 4FF40063 		mov	r3, #2048
 4869 0228 0593     		str	r3, [sp, #20]
 4870 022a 4FF40043 		mov	r3, #32768
 4871 022e 2A46     		mov	r2, r5
 4872 0230 0495     		str	r5, [sp, #16]
 4873 0232 0193     		str	r3, [sp, #4]
 4874 0234 4FF40041 		mov	r1, #32768
 4875 0238 4FF48053 		mov	r3, #4096
 4876 023c 80A8     		add	r0, sp, #512
 4877 023e 0696     		str	r6, [sp, #24]
 4878 0240 CDF80CB0 		str	fp, [sp, #12]
 4879 0244 0296     		str	r6, [sp, #8]
 4880 0246 0096     		str	r6, [sp]
 4881 0248 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 4882              	.LVL539:
 128:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 129:src/main.cpp  ****   RR.setRegulator(KP,KI,KD,integralSaturation);
 4883              		.loc 11 129 0
 4884 024c 5B4A     		ldr	r2, .L277+36
 128:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 4885              		.loc 11 128 0
 4886 024e 1C23     		movs	r3, #28
 4887 0250 ADF84832 		strh	r3, [sp, #584]	@ movhi
 4888              		.loc 11 129 0
 4889 0254 1146     		mov	r1, r2
 4890 0256 4FF08143 		mov	r3, #1082130432
 4891 025a 80A8     		add	r0, sp, #512
 4892 025c CDF80090 		str	r9, [sp]	@ float
 4893 0260 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 4894              	.LVL540:
 130:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 131:src/main.cpp  **** 
 132:src/main.cpp  ****   servo_left = motor::createMotor(&SL);
 4895              		.loc 11 132 0
 4896 0264 08A8     		add	r0, sp, #32
 130:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 4897              		.loc 11 130 0
 4898 0266 CDF85C82 		str	r8, [sp, #604]	@ float
 4899              		.loc 11 132 0
 4900 026a FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4901              	.LVL541:
 133:src/main.cpp  ****   if(!servo_left->motorInit()){
 4902              		.loc 11 133 0
 4903 026e 0368     		ldr	r3, [r0]
 132:src/main.cpp  ****   if(!servo_left->motorInit()){
 4904              		.loc 11 132 0
 4905 0270 C4F8EC09 		str	r0, [r4, #2540]
 4906              		.loc 11 133 0
 4907 0274 DB68     		ldr	r3, [r3, #12]
 132:src/main.cpp  ****   if(!servo_left->motorInit()){
 4908              		.loc 11 132 0
 4909 0276 564D     		ldr	r5, .L277+56
 4910              		.loc 11 133 0
 4911 0278 9847     		blx	r3
 4912              	.LVL542:
 4913 027a 80B9     		cbnz	r0, .L265
 134:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 4914              		.loc 11 134 0
 4915 027c D5F8EC09 		ldr	r0, [r5, #2540]
 4916 0280 0368     		ldr	r3, [r0]
 4917 0282 1B69     		ldr	r3, [r3, #16]
 4918 0284 9847     		blx	r3
 4919              	.LVL543:
 4920 0286 5349     		ldr	r1, .L277+60
 4921 0288 0246     		mov	r2, r0
 4922 028a 05F51F60 		add	r0, r5, #2544
 4923 028e FFF7FEFF 		bl	sprintf
 4924              	.LVL544:
 135:src/main.cpp  ****     nh.logerror(str);
 4925              		.loc 11 135 0
 4926 0292 05F51F61 		add	r1, r5, #2544
 4927 0296 05F58960 		add	r0, r5, #1096
 4928 029a FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4929              	.LVL545:
 4930              	.L265:
 136:src/main.cpp  ****   }
 137:src/main.cpp  **** 
 138:src/main.cpp  ****   servo_right = motor::createMotor(&SR);
 4931              		.loc 11 138 0
 4932 029e 20A8     		add	r0, sp, #128
 4933 02a0 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4934              	.LVL546:
 139:src/main.cpp  ****   if(!servo_right->motorInit()){
 4935              		.loc 11 139 0
 4936 02a4 0368     		ldr	r3, [r0]
 138:src/main.cpp  ****   if(!servo_right->motorInit()){
 4937              		.loc 11 138 0
 4938 02a6 C4F8880A 		str	r0, [r4, #2696]
 4939              		.loc 11 139 0
 4940 02aa DB68     		ldr	r3, [r3, #12]
 138:src/main.cpp  ****   if(!servo_right->motorInit()){
 4941              		.loc 11 138 0
 4942 02ac 484D     		ldr	r5, .L277+56
 4943              		.loc 11 139 0
 4944 02ae 9847     		blx	r3
 4945              	.LVL547:
 4946 02b0 80B9     		cbnz	r0, .L266
 140:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 4947              		.loc 11 140 0
 4948 02b2 D5F8880A 		ldr	r0, [r5, #2696]
 4949 02b6 0368     		ldr	r3, [r0]
 4950 02b8 1B69     		ldr	r3, [r3, #16]
 4951 02ba 9847     		blx	r3
 4952              	.LVL548:
 4953 02bc 4549     		ldr	r1, .L277+60
 4954 02be 0246     		mov	r2, r0
 4955 02c0 05F51F60 		add	r0, r5, #2544
 4956 02c4 FFF7FEFF 		bl	sprintf
 4957              	.LVL549:
 141:src/main.cpp  ****     nh.logerror(str);
 4958              		.loc 11 141 0
 4959 02c8 05F51F61 		add	r1, r5, #2544
 4960 02cc 05F58960 		add	r0, r5, #1096
 4961 02d0 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4962              	.LVL550:
 4963              	.L266:
 142:src/main.cpp  ****   }
 143:src/main.cpp  **** 
 144:src/main.cpp  ****   front_left = motor::createMotor(&FL);
 4964              		.loc 11 144 0
 4965 02d4 50A8     		add	r0, sp, #320
 4966 02d6 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4967              	.LVL551:
 145:src/main.cpp  ****   if(!front_left->motorInit()){
 4968              		.loc 11 145 0
 4969 02da 0368     		ldr	r3, [r0]
 144:src/main.cpp  ****   if(!front_left->motorInit()){
 4970              		.loc 11 144 0
 4971 02dc 6060     		str	r0, [r4, #4]
 4972              		.loc 11 145 0
 4973 02de DB68     		ldr	r3, [r3, #12]
 144:src/main.cpp  ****   if(!front_left->motorInit()){
 4974              		.loc 11 144 0
 4975 02e0 3B4D     		ldr	r5, .L277+56
 4976              		.loc 11 145 0
 4977 02e2 9847     		blx	r3
 4978              	.LVL552:
 4979 02e4 78B9     		cbnz	r0, .L267
 146:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 4980              		.loc 11 146 0
 4981 02e6 6868     		ldr	r0, [r5, #4]
 4982 02e8 0368     		ldr	r3, [r0]
 4983 02ea 1B69     		ldr	r3, [r3, #16]
 4984 02ec 9847     		blx	r3
 4985              	.LVL553:
 4986 02ee 3949     		ldr	r1, .L277+60
 4987 02f0 0246     		mov	r2, r0
 4988 02f2 05F51F60 		add	r0, r5, #2544
 4989 02f6 FFF7FEFF 		bl	sprintf
 4990              	.LVL554:
 147:src/main.cpp  ****     nh.logerror(str);
 4991              		.loc 11 147 0
 4992 02fa 05F51F61 		add	r1, r5, #2544
 4993 02fe 05F58960 		add	r0, r5, #1096
 4994 0302 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4995              	.LVL555:
 4996              	.L267:
 148:src/main.cpp  ****   }
 149:src/main.cpp  **** 
 150:src/main.cpp  ****   front_right = motor::createMotor(&FR);
 4997              		.loc 11 150 0
 4998 0306 38A8     		add	r0, sp, #224
 4999 0308 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5000              	.LVL556:
 151:src/main.cpp  ****   if(!front_right->motorInit()){
 5001              		.loc 11 151 0
 5002 030c 0368     		ldr	r3, [r0]
 150:src/main.cpp  ****   if(!front_right->motorInit()){
 5003              		.loc 11 150 0
 5004 030e 2060     		str	r0, [r4]
 5005              		.loc 11 151 0
 5006 0310 DB68     		ldr	r3, [r3, #12]
 150:src/main.cpp  ****   if(!front_right->motorInit()){
 5007              		.loc 11 150 0
 5008 0312 2F4D     		ldr	r5, .L277+56
 5009              		.loc 11 151 0
 5010 0314 9847     		blx	r3
 5011              	.LVL557:
 5012 0316 78B9     		cbnz	r0, .L268
 152:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 5013              		.loc 11 152 0
 5014 0318 2868     		ldr	r0, [r5]
 5015 031a 0368     		ldr	r3, [r0]
 5016 031c 1B69     		ldr	r3, [r3, #16]
 5017 031e 9847     		blx	r3
 5018              	.LVL558:
 5019 0320 2C49     		ldr	r1, .L277+60
 5020 0322 0246     		mov	r2, r0
 5021 0324 05F51F60 		add	r0, r5, #2544
 5022 0328 FFF7FEFF 		bl	sprintf
 5023              	.LVL559:
 153:src/main.cpp  ****     nh.logerror(str);
 5024              		.loc 11 153 0
 5025 032c 05F51F61 		add	r1, r5, #2544
 5026 0330 05F58960 		add	r0, r5, #1096
 5027 0334 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5028              	.LVL560:
 5029              	.L268:
 154:src/main.cpp  ****   }
 155:src/main.cpp  **** 
 156:src/main.cpp  ****   rear_left = motor::createMotor(&RL);
 5030              		.loc 11 156 0
 5031 0338 68A8     		add	r0, sp, #416
 5032 033a FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5033              	.LVL561:
 157:src/main.cpp  ****   if(!rear_left->motorInit()){
 5034              		.loc 11 157 0
 5035 033e 0368     		ldr	r3, [r0]
 156:src/main.cpp  ****   if(!rear_left->motorInit()){
 5036              		.loc 11 156 0
 5037 0340 E060     		str	r0, [r4, #12]
 5038              		.loc 11 157 0
 5039 0342 DB68     		ldr	r3, [r3, #12]
 156:src/main.cpp  ****   if(!rear_left->motorInit()){
 5040              		.loc 11 156 0
 5041 0344 224D     		ldr	r5, .L277+56
 5042              		.loc 11 157 0
 5043 0346 9847     		blx	r3
 5044              	.LVL562:
 5045 0348 78B9     		cbnz	r0, .L269
 158:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 5046              		.loc 11 158 0
 5047 034a E868     		ldr	r0, [r5, #12]
 5048 034c 0368     		ldr	r3, [r0]
 5049 034e 1B69     		ldr	r3, [r3, #16]
 5050 0350 9847     		blx	r3
 5051              	.LVL563:
 5052 0352 2049     		ldr	r1, .L277+60
 5053 0354 0246     		mov	r2, r0
 5054 0356 05F51F60 		add	r0, r5, #2544
 5055 035a FFF7FEFF 		bl	sprintf
 5056              	.LVL564:
 159:src/main.cpp  ****     nh.logerror(str);
 5057              		.loc 11 159 0
 5058 035e 05F51F61 		add	r1, r5, #2544
 5059 0362 05F58960 		add	r0, r5, #1096
 5060 0366 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5061              	.LVL565:
 5062              	.L269:
 160:src/main.cpp  ****   }
 161:src/main.cpp  **** 
 162:src/main.cpp  ****   rear_right = motor::createMotor(&RR);
 5063              		.loc 11 162 0
 5064 036a 80A8     		add	r0, sp, #512
 5065 036c FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5066              	.LVL566:
 163:src/main.cpp  ****   if(!rear_right->motorInit()){
 5067              		.loc 11 163 0
 5068 0370 0368     		ldr	r3, [r0]
 162:src/main.cpp  ****   if(!rear_right->motorInit()){
 5069              		.loc 11 162 0
 5070 0372 A060     		str	r0, [r4, #8]
 5071              		.loc 11 163 0
 5072 0374 DB68     		ldr	r3, [r3, #12]
 162:src/main.cpp  ****   if(!rear_right->motorInit()){
 5073              		.loc 11 162 0
 5074 0376 164D     		ldr	r5, .L277+56
 5075              		.loc 11 163 0
 5076 0378 9847     		blx	r3
 5077              	.LVL567:
 5078 037a A8BB     		cbnz	r0, .L270
 164:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 5079              		.loc 11 164 0
 5080 037c A868     		ldr	r0, [r5, #8]
 5081 037e 0368     		ldr	r3, [r0]
 5082 0380 1B69     		ldr	r3, [r3, #16]
 5083 0382 9847     		blx	r3
 5084              	.LVL568:
 5085 0384 1349     		ldr	r1, .L277+60
 5086 0386 0246     		mov	r2, r0
 5087 0388 05F51F60 		add	r0, r5, #2544
 5088 038c FFF7FEFF 		bl	sprintf
 5089              	.LVL569:
 165:src/main.cpp  ****     nh.logerror(str);
 5090              		.loc 11 165 0
 5091 0390 05F51F61 		add	r1, r5, #2544
 5092 0394 24E0     		b	.L278
 5093              	.L279:
 5094 0396 00BF     		.align	2
 5095              	.L277:
 5096 0398 00023000 		.word	3146240
 5097 039c 00080040 		.word	1073743872
 5098 03a0 3F020000 		.word	.LC21
 5099 03a4 000C0140 		.word	1073810432
 5100 03a8 4A020000 		.word	.LC22
 5101 03ac 002C0140 		.word	1073818624
 5102 03b0 56020000 		.word	.LC23
 5103 03b4 00080140 		.word	1073809408
 5104 03b8 00100140 		.word	1073811456
 5105 03bc 0000FA43 		.word	1140457472
 5106 03c0 00040040 		.word	1073742848
 5107 03c4 62020000 		.word	.LC24
 5108 03c8 6D020000 		.word	.LC25
 5109 03cc 77020000 		.word	.LC26
 5110 03d0 00000000 		.word	.LANCHOR1
 5111 03d4 82020000 		.word	.LC27
 5112 03d8 00401C46 		.word	1176256512
 5113 03dc 0AD7233D 		.word	1025758986
 5114              	.L278:
 5115 03e0 05F58960 		add	r0, r5, #1096
 5116 03e4 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5117              	.LVL570:
 5118              	.L270:
 166:src/main.cpp  ****   }
 167:src/main.cpp  **** 
 168:src/main.cpp  ****   
 169:src/main.cpp  **** 
 170:src/main.cpp  ****   
 171:src/main.cpp  ****   //led_set(200);
 172:src/main.cpp  **** 
 173:src/main.cpp  ****   servo_left->setReference(90);
 5119              		.loc 11 173 0
 5120 03e8 D4F8EC09 		ldr	r0, [r4, #2540]
 5121 03ec 2A49     		ldr	r1, .L280
 5122 03ee 0368     		ldr	r3, [r0]
 5123 03f0 5B69     		ldr	r3, [r3, #20]
 5124 03f2 9847     		blx	r3
 5125              	.LVL571:
 174:src/main.cpp  ****   servo_right->setReference(100);
 5126              		.loc 11 174 0
 5127 03f4 D4F8880A 		ldr	r0, [r4, #2696]
 5128 03f8 2849     		ldr	r1, .L280+4
 5129 03fa 0368     		ldr	r3, [r0]
 5130 03fc 5B69     		ldr	r3, [r3, #20]
 5131 03fe 9847     		blx	r3
 5132              	.LVL572:
 175:src/main.cpp  ****   front_right->setReference(-2);
 5133              		.loc 11 175 0
 5134 0400 2068     		ldr	r0, [r4]
 5135 0402 4FF04041 		mov	r1, #-1073741824
 5136 0406 0368     		ldr	r3, [r0]
 5137 0408 5B69     		ldr	r3, [r3, #20]
 5138 040a 9847     		blx	r3
 5139              	.LVL573:
 176:src/main.cpp  ****   front_left->setReference(0);
 5140              		.loc 11 176 0
 5141 040c 6068     		ldr	r0, [r4, #4]
 5142 040e 0021     		movs	r1, #0
 5143 0410 0368     		ldr	r3, [r0]
 5144 0412 5B69     		ldr	r3, [r3, #20]
 5145 0414 9847     		blx	r3
 5146              	.LVL574:
 177:src/main.cpp  ****   rear_right->setReference(2);
 5147              		.loc 11 177 0
 5148 0416 A068     		ldr	r0, [r4, #8]
 5149 0418 4FF08041 		mov	r1, #1073741824
 5150 041c 0368     		ldr	r3, [r0]
 5151 041e 5B69     		ldr	r3, [r3, #20]
 5152 0420 9847     		blx	r3
 5153              	.LVL575:
 178:src/main.cpp  ****   rear_left->setReference(0);
 5154              		.loc 11 178 0
 5155 0422 E068     		ldr	r0, [r4, #12]
 5156 0424 0021     		movs	r1, #0
 5157 0426 0368     		ldr	r3, [r0]
 5158 0428 5B69     		ldr	r3, [r3, #20]
 5159 042a 9847     		blx	r3
 5160              	.LVL576:
 5161              	.L271:
 179:src/main.cpp  **** 
 180:src/main.cpp  **** 
 181:src/main.cpp  **** 
 182:src/main.cpp  ****   while (1){
 183:src/main.cpp  ****     debug_toggle();
 5162              		.loc 11 183 0
 5163 042c FFF7FEFF 		bl	debug_toggle
 5164              	.LVL577:
 184:src/main.cpp  **** 
 185:src/main.cpp  ****     servo_left->update(0.1);
 5165              		.loc 11 185 0
 5166 0430 D4F8EC09 		ldr	r0, [r4, #2540]
 5167 0434 1A49     		ldr	r1, .L280+8
 5168 0436 0368     		ldr	r3, [r0]
 5169 0438 DB69     		ldr	r3, [r3, #28]
 5170 043a 9847     		blx	r3
 5171              	.LVL578:
 186:src/main.cpp  ****     servo_right->update(0.1);
 5172              		.loc 11 186 0
 5173 043c D4F8880A 		ldr	r0, [r4, #2696]
 5174 0440 1749     		ldr	r1, .L280+8
 5175 0442 0368     		ldr	r3, [r0]
 5176 0444 DB69     		ldr	r3, [r3, #28]
 5177 0446 9847     		blx	r3
 5178              	.LVL579:
 187:src/main.cpp  ****     
 188:src/main.cpp  ****     str_msg.data[0] = front_right->update(0.1);
 5179              		.loc 11 188 0
 5180 0448 2068     		ldr	r0, [r4]
 5181 044a 1549     		ldr	r1, .L280+8
 5182 044c 0368     		ldr	r3, [r0]
 5183 044e D4F84454 		ldr	r5, [r4, #1092]
 5184 0452 DB69     		ldr	r3, [r3, #28]
 5185 0454 9847     		blx	r3
 5186              	.LVL580:
 5187 0456 2860     		str	r0, [r5]	@ float
 189:src/main.cpp  ****     str_msg.data[1] = front_left->update(0.1);
 5188              		.loc 11 189 0
 5189 0458 6068     		ldr	r0, [r4, #4]
 5190 045a 1149     		ldr	r1, .L280+8
 5191 045c 0368     		ldr	r3, [r0]
 5192 045e D4F84454 		ldr	r5, [r4, #1092]
 5193 0462 DB69     		ldr	r3, [r3, #28]
 5194 0464 9847     		blx	r3
 5195              	.LVL581:
 5196 0466 6860     		str	r0, [r5, #4]	@ float
 190:src/main.cpp  ****     //str_msg.data[2] = rear_left->update(0.1);
 191:src/main.cpp  ****     str_msg.data[3] = rear_right->update(0.1);
 5197              		.loc 11 191 0
 5198 0468 A068     		ldr	r0, [r4, #8]
 5199 046a 0D49     		ldr	r1, .L280+8
 5200 046c 0368     		ldr	r3, [r0]
 5201 046e D4F84454 		ldr	r5, [r4, #1092]
 5202 0472 DB69     		ldr	r3, [r3, #28]
 5203 0474 9847     		blx	r3
 5204              	.LVL582:
 5205 0476 E860     		str	r0, [r5, #12]	@ float
 5206              	.LVL583:
 5207              	.LBB301:
 5208              	.LBB302:
 5209              		.file 17 "./lib/ros_lib/ros/publisher.h"
   1:./lib/ros_lib/ros/publisher.h **** /* 
   2:./lib/ros_lib/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/publisher.h ****  *
   4:./lib/ros_lib/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/publisher.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/publisher.h ****  *
   7:./lib/ros_lib/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/publisher.h ****  * are met:
  10:./lib/ros_lib/ros/publisher.h ****  *
  11:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/publisher.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/publisher.h ****  *
  21:./lib/ros_lib/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/publisher.h ****  */
  34:./lib/ros_lib/ros/publisher.h **** 
  35:./lib/ros_lib/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:./lib/ros_lib/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:./lib/ros_lib/ros/publisher.h **** 
  38:./lib/ros_lib/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/publisher.h **** #include "node_handle.h"
  40:./lib/ros_lib/ros/publisher.h **** 
  41:./lib/ros_lib/ros/publisher.h **** namespace ros {
  42:./lib/ros_lib/ros/publisher.h **** 
  43:./lib/ros_lib/ros/publisher.h ****   /* Generic Publisher */
  44:./lib/ros_lib/ros/publisher.h ****   class Publisher
  45:./lib/ros_lib/ros/publisher.h ****   {
  46:./lib/ros_lib/ros/publisher.h ****     public:
  47:./lib/ros_lib/ros/publisher.h ****       Publisher( const char * topic_name, Msg * msg, int endpoint=rosserial_msgs::TopicInfo::ID_PUB
  48:./lib/ros_lib/ros/publisher.h ****         topic_(topic_name), 
  49:./lib/ros_lib/ros/publisher.h ****         msg_(msg),
  50:./lib/ros_lib/ros/publisher.h ****         endpoint_(endpoint) {};
  51:./lib/ros_lib/ros/publisher.h **** 
  52:./lib/ros_lib/ros/publisher.h ****       int publish( const Msg * msg ) { return nh_->publish(id_, msg); };
 5210              		.loc 17 52 0
 5211 0478 D4F8E409 		ldr	r0, [r4, #2532]
 5212 047c 094A     		ldr	r2, .L280+12
 5213 047e 0368     		ldr	r3, [r0]
 5214 0480 D4F8E019 		ldr	r1, [r4, #2528]
 5215 0484 1B68     		ldr	r3, [r3]
 5216 0486 9847     		blx	r3
 5217              	.LVL584:
 5218              	.LBE302:
 5219              	.LBE301:
 192:src/main.cpp  **** 
 193:src/main.cpp  ****     chatter.publish( &str_msg );
 194:src/main.cpp  **** 
 195:src/main.cpp  ****     nh.spinOnce();
 5220              		.loc 11 195 0
 5221 0488 0748     		ldr	r0, .L280+16
 5222 048a FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 5223              	.LVL585:
 196:src/main.cpp  **** 
 197:src/main.cpp  ****     delay(10);
 5224              		.loc 11 197 0
 5225 048e 0A20     		movs	r0, #10
 5226 0490 FFF7FEFF 		bl	delay
 5227              	.LVL586:
 5228 0494 CAE7     		b	.L271
 5229              	.L281:
 5230 0496 00BF     		.align	2
 5231              	.L280:
 5232 0498 0000B442 		.word	1119092736
 5233 049c 0000C842 		.word	1120403456
 5234 04a0 CDCCCC3D 		.word	1036831949
 5235 04a4 18040000 		.word	.LANCHOR1+1048
 5236 04a8 48040000 		.word	.LANCHOR1+1096
 5237              		.cfi_endproc
 5238              	.LFE200:
 5239              		.fnend
 5241              		.text
 5242              		.align	1
 5243              		.global	_Z13assert_failedPhm
 5244              		.thumb
 5245              		.thumb_func
 5247              	_Z13assert_failedPhm:
 5248              		.fnstart
 5249              	.LFB201:
 198:src/main.cpp  ****   }
 199:src/main.cpp  ****   return 0;
 200:src/main.cpp  **** }
 201:src/main.cpp  **** 
 202:src/main.cpp  **** void assert_failed(uint8_t* file, uint32_t line){
 5250              		.loc 11 202 0
 5251              		.cfi_startproc
 5252              		@ args = 0, pretend = 0, frame = 152
 5253              		@ frame_needed = 0, uses_anonymous_args = 0
 5254              	.LVL587:
 5255 00bc 00B5     		push	{lr}
 5256              		.save {lr}
 5257              	.LCFI50:
 5258              		.cfi_def_cfa_offset 4
 5259              		.cfi_offset 14, -4
 5260              		.pad #156
 5261 00be A7B0     		sub	sp, sp, #156
 5262              	.LCFI51:
 5263              		.cfi_def_cfa_offset 160
 203:src/main.cpp  ****   /* User can add his own implementation to report the file name and line number,
 204:src/main.cpp  ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 205:src/main.cpp  ****   char str[150];
 206:src/main.cpp  **** 
 207:src/main.cpp  ****   sprintf(str, "Wrong parameters value: file %s on line %d\r\n", file, line);
 5264              		.loc 11 207 0
 5265 00c0 0B46     		mov	r3, r1
 5266 00c2 0246     		mov	r2, r0
 5267 00c4 0849     		ldr	r1, .L284
 5268              	.LVL588:
 5269 00c6 6846     		mov	r0, sp
 5270              	.LVL589:
 5271 00c8 FFF7FEFF 		bl	sprintf
 5272              	.LVL590:
 208:src/main.cpp  ****   nh.logerror(str);
 5273              		.loc 11 208 0
 5274 00cc 6946     		mov	r1, sp
 5275 00ce 0748     		ldr	r0, .L284+4
 5276 00d0 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5277              	.LVL591:
 5278              	.L283:
 209:src/main.cpp  ****   while (1){
 210:src/main.cpp  ****     debug_toggle();
 5279              		.loc 11 210 0
 5280 00d4 FFF7FEFF 		bl	debug_toggle
 5281              	.LVL592:
 211:src/main.cpp  ****     delay(100);
 5282              		.loc 11 211 0
 5283 00d8 6420     		movs	r0, #100
 5284 00da FFF7FEFF 		bl	delay
 5285              	.LVL593:
 212:src/main.cpp  ****     nh.spinOnce();
 5286              		.loc 11 212 0
 5287 00de 0348     		ldr	r0, .L284+4
 5288 00e0 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 5289              	.LVL594:
 5290 00e4 F6E7     		b	.L283
 5291              	.L285:
 5292 00e6 00BF     		.align	2
 5293              	.L284:
 5294 00e8 AC020000 		.word	.LC28
 5295 00ec 48040000 		.word	.LANCHOR1+1096
 5296              		.cfi_endproc
 5297              	.LFE201:
 5298              		.fnend
 5300              		.section	.text.startup
 5301              		.align	1
 5302              		.thumb
 5303              		.thumb_func
 5305              	_GLOBAL__sub_I_USART_FIFO:
 5306              		.fnstart
 5307              	.LFB239:
 213:src/main.cpp  ****   }
 214:src/main.cpp  **** }
 5308              		.loc 11 214 0
 5309              		.cfi_startproc
 5310              		@ args = 0, pretend = 0, frame = 0
 5311              		@ frame_needed = 0, uses_anonymous_args = 0
 5312              	.LVL595:
 5313              	.LBB364:
 5314              	.LBB365:
 5315              	.LBB366:
 5316              	.LBB367:
 119:./lib/ros_lib/ros/node_handle.h **** 
 5317              		.loc 13 119 0
 5318 04ac 4C4B     		ldr	r3, .L295
 5319 04ae 4D4A     		ldr	r2, .L295+4
 5320              	.LBE367:
 5321              	.LBE366:
 5322              	.LBE365:
 5323              	.LBE364:
 5324              		.loc 11 214 0
 5325 04b0 30B5     		push	{r4, r5, lr}
 5326              	.LCFI52:
 5327              		.cfi_def_cfa_offset 12
 5328              		.cfi_offset 4, -12
 5329              		.cfi_offset 5, -8
 5330              		.cfi_offset 14, -4
 5331              	.LBB473:
 5332              	.LBB472:
 5333              	.LBB385:
 5334              	.LBB384:
 119:./lib/ros_lib/ros/node_handle.h **** 
 5335              		.loc 13 119 0
 5336 04b2 C3F84824 		str	r2, [r3, #1096]
 5337              	.LVL596:
 5338              	.LBB368:
 5339              	.LBB369:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
 5340              		.loc 14 60 0
 5341 04b6 4C4A     		ldr	r2, .L295+8
 5342              	.LBE369:
 5343              	.LBE368:
 5344              	.LBB372:
 5345              	.LBB373:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 5346              		.loc 4 70 0
 5347 04b8 4C49     		ldr	r1, .L295+12
 5348              	.LBE373:
 5349              	.LBE372:
 5350              	.LBB376:
 5351              	.LBB370:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
 5352              		.loc 14 60 0
 5353 04ba C3F84C24 		str	r2, [r3, #1100]
  61:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
 5354              		.loc 14 61 0
 5355 04be 4FF4E132 		mov	r2, #115200
 5356 04c2 C3F85024 		str	r2, [r3, #1104]
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
 5357              		.loc 14 62 0
 5358 04c6 0022     		movs	r2, #0
 5359 04c8 5A61     		str	r2, [r3, #20]
 5360              	.LBE370:
 5361              	.LBE376:
 5362              	.LBB377:
 5363              	.LBB374:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 5364              		.loc 4 70 0
 5365 04ca C3F85019 		str	r1, [r3, #2384]
 5366              	.LBE374:
 5367              	.LBE377:
 5368              	.LBB378:
 5369              	.LBB371:
  63:./lib/ros_lib/ArduinoHardware.h ****     }
 5370              		.loc 14 63 0
 5371 04ce 1A61     		str	r2, [r3, #16]
 5372              	.LVL597:
 5373              	.LBE371:
 5374              	.LBE378:
 119:./lib/ros_lib/ros/node_handle.h **** 
 5375              		.loc 13 119 0
 5376 04d0 83F83C29 		strb	r2, [r3, #2364]
 5377              	.LVL598:
 5378              	.LBB379:
 5379              	.LBB375:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 5380              		.loc 4 70 0
 5381 04d4 83F85429 		strb	r2, [r3, #2388]
 5382 04d8 C3F85C29 		str	r2, [r3, #2396]
 5383 04dc 83F86029 		strb	r2, [r3, #2400]
 5384 04e0 C3F86829 		str	r2, [r3, #2408]
 5385 04e4 83F86C29 		strb	r2, [r3, #2412]
 5386 04e8 C3F87429 		str	r2, [r3, #2420]
 5387              	.LVL599:
 5388 04ec 03F65C01 		addw	r1, r3, #2140
 5389 04f0 03F50C63 		add	r3, r3, #2240
 5390              	.LVL600:
 5391              	.L287:
 5392              	.LBE375:
 5393              	.LBE379:
 5394              	.LBB380:
 122:./lib/ros_lib/ros/node_handle.h **** 
 5395              		.loc 13 122 0
 5396 04f4 41F8042F 		str	r2, [r1, #4]!
 121:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 5397              		.loc 13 121 0
 5398 04f8 8B42     		cmp	r3, r1
 5399 04fa FBD1     		bne	.L287
 5400 04fc 3C4A     		ldr	r2, .L295+16
 5401              	.LBE380:
 5402              	.LBB381:
 125:./lib/ros_lib/ros/node_handle.h **** 
 5403              		.loc 13 125 0
 5404 04fe 0021     		movs	r1, #0
 5405              	.L288:
 5406 0500 43F8041F 		str	r1, [r3, #4]!
 5407              	.LVL601:
 124:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 5408              		.loc 13 124 0
 5409 0504 9A42     		cmp	r2, r3
 5410 0506 FBD1     		bne	.L288
 5411 0508 0023     		movs	r3, #0
 5412              	.LBE381:
 5413              	.LBB382:
 128:./lib/ros_lib/ros/node_handle.h **** 
 5414              		.loc 13 128 0
 5415 050a 1946     		mov	r1, r3
 5416 050c 3948     		ldr	r0, .L295+20
 5417              	.L289:
 5418              	.LVL602:
 5419 050e C218     		adds	r2, r0, r3
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 5420              		.loc 13 127 0
 5421 0510 0133     		adds	r3, r3, #1
 5422              	.LVL603:
 5423 0512 B3F5007F 		cmp	r3, #512
 128:./lib/ros_lib/ros/node_handle.h **** 
 5424              		.loc 13 128 0
 5425 0516 1176     		strb	r1, [r2, #24]
 5426 0518 364D     		ldr	r5, .L295+20
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 5427              		.loc 13 127 0
 5428 051a F8D1     		bne	.L289
 5429 051c 0021     		movs	r1, #0
 5430              	.LBE382:
 5431              	.LBB383:
 131:./lib/ros_lib/ros/node_handle.h **** 
 5432              		.loc 13 131 0
 5433 051e 0C46     		mov	r4, r1
 5434              	.LVL604:
 5435              	.L290:
 5436 0520 6818     		adds	r0, r5, r1
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 5437              		.loc 13 130 0
 5438 0522 0131     		adds	r1, r1, #1
 5439              	.LVL605:
 5440 0524 B1F5007F 		cmp	r1, #512
 131:./lib/ros_lib/ros/node_handle.h **** 
 5441              		.loc 13 131 0
 5442 0528 2D4B     		ldr	r3, .L295
 5443 052a 4FF00002 		mov	r2, #0
 5444 052e 80F81842 		strb	r4, [r0, #536]
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 5445              		.loc 13 130 0
 5446 0532 F5D1     		bne	.L290
 5447              	.LVL606:
 5448              	.LBE383:
 5449              	.LBE384:
 5450              	.LBE385:
 5451              	.LBB386:
 5452              	.LBB387:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 5453              		.loc 12 67 0
 5454 0534 3049     		ldr	r1, .L295+24
 5455 0536 3148     		ldr	r0, .L295+28
 5456 0538 C3F87819 		str	r1, [r3, #2424]
 5457              	.LVL607:
 5458 053c C3F8B409 		str	r0, [r3, #2484]
 5459              	.LBB388:
 5460              	.LBB389:
  27:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 5461              		.loc 10 27 0
 5462 0540 2F49     		ldr	r1, .L295+32
 5463              	.LBE389:
 5464              	.LBE388:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 5465              		.loc 12 67 0
 5466 0542 0120     		movs	r0, #1
 5467 0544 C3F8B809 		str	r0, [r3, #2488]
  69:./lib/ros_lib/ros/subscriber.h ****       };
 5468              		.loc 12 69 0
 5469 0548 2E4C     		ldr	r4, .L295+36
 5470              	.LBE387:
 5471              	.LBE386:
 5472              	.LBB412:
 5473              	.LBB413:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 5474              		.loc 12 67 0
 5475 054a C3F8D409 		str	r0, [r3, #2516]
  69:./lib/ros_lib/ros/subscriber.h ****       };
 5476              		.loc 12 69 0
 5477 054e 2E48     		ldr	r0, .L295+40
 5478              	.LBE413:
 5479              	.LBE412:
 5480              	.LBB426:
 5481              	.LBB408:
 5482              	.LBB404:
 5483              	.LBB400:
  27:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 5484              		.loc 10 27 0
 5485 0550 C3F88419 		str	r1, [r3, #2436]
 5486              	.LVL608:
 5487              	.LBB390:
 5488              	.LBB391:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 5489              		.loc 9 23 0
 5490 0554 2D49     		ldr	r1, .L295+44
 5491              	.LBE391:
 5492              	.LBE390:
 5493              	.LBE400:
 5494              	.LBE404:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 5495              		.loc 12 69 0
 5496 0556 C3F88049 		str	r4, [r3, #2432]
 5497              	.LBE408:
 5498              	.LBE426:
 5499              	.LBB427:
 5500              	.LBB420:
 5501 055a C3F8C409 		str	r0, [r3, #2500]
  67:./lib/ros_lib/ros/subscriber.h ****       {
 5502              		.loc 12 67 0
 5503 055e 2C4C     		ldr	r4, .L295+48
 5504              	.LBE420:
 5505              	.LBE427:
 5506              	.LBB428:
 5507              	.LBB429:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 5508              		.loc 7 23 0
 5509 0560 2C48     		ldr	r0, .L295+52
 5510              	.LBE429:
 5511              	.LBE428:
 5512              	.LBB452:
 5513              	.LBB409:
 5514              	.LBB405:
 5515              	.LBB401:
 5516              	.LBB397:
 5517              	.LBB394:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 5518              		.loc 9 23 0
 5519 0562 C3F88819 		str	r1, [r3, #2440]
 5520 0566 2C49     		ldr	r1, .L295+56
 5521              	.LBE394:
 5522              	.LBE397:
 5523              	.LBE401:
 5524              	.LBE405:
 5525              	.LBE409:
 5526              	.LBE452:
 5527              	.LBB453:
 5528              	.LBB421:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 5529              		.loc 12 67 0
 5530 0568 C3F8BC49 		str	r4, [r3, #2492]
 5531              	.LBE421:
 5532              	.LBE453:
 5533              	.LBB454:
 5534              	.LBB446:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 5535              		.loc 7 23 0
 5536 056c C3F81804 		str	r0, [r3, #1048]
 5537              	.LBE446:
 5538              	.LBE454:
 5539              	.LBB455:
 5540              	.LBB422:
 5541              	.LBB414:
 5542              	.LBB415:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 5543              		.loc 8 18 0
 5544 0570 2A4C     		ldr	r4, .L295+60
 5545              	.LBE415:
 5546              	.LBE414:
 5547              	.LBE422:
 5548              	.LBE455:
 5549              	.LBB456:
 5550              	.LBB447:
 5551              	.LBB430:
 5552              	.LBB431:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 5553              		.loc 6 23 0
 5554 0572 2B48     		ldr	r0, .L295+64
 5555              	.LBE431:
 5556              	.LBE430:
 5557              	.LBE447:
 5558              	.LBE456:
 5559              	.LBB457:
 5560              	.LBB410:
 5561              	.LBB406:
 5562              	.LBB402:
 5563              	.LBB398:
 5564              	.LBB395:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 5565              		.loc 9 23 0
 5566 0574 C3F89819 		str	r1, [r3, #2456]
 5567              	.LBE395:
 5568              	.LBE398:
 5569              	.LBE402:
 5570              	.LBE406:
 5571              	.LBE410:
 5572              	.LBE457:
 5573              	.LBB458:
 5574              	.LBB448:
 5575              	.LBB442:
 5576              	.LBB438:
 5577              	.LBB432:
 5578              	.LBB433:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 5579              		.loc 5 22 0
 5580 0578 C3F82814 		str	r1, [r3, #1064]
 5581              	.LBE433:
 5582              	.LBE432:
 5583              	.LBE438:
 5584              	.LBE442:
 5585              	.LBE448:
 5586              	.LBE458:
 5587              	.LBB459:
 5588              	.LBB460:
  50:./lib/ros_lib/ros/publisher.h **** 
 5589              		.loc 17 50 0
 5590 057c 2949     		ldr	r1, .L295+68
 5591              	.LBE460:
 5592              	.LBE459:
 5593              	.LBB463:
 5594              	.LBB423:
 5595              	.LBB418:
 5596              	.LBB416:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 5597              		.loc 8 18 0
 5598 057e C3F8C849 		str	r4, [r3, #2504]
 5599              	.LBE416:
 5600              	.LBE418:
 5601              	.LBE423:
 5602              	.LBE463:
 5603              	.LBB464:
 5604              	.LBB449:
 5605              	.LBB443:
 5606              	.LBB439:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 5607              		.loc 6 23 0
 5608 0582 C3F81C04 		str	r0, [r3, #1052]
 5609              	.LBE439:
 5610              	.LBE443:
 5611              	.LBE449:
 5612              	.LBE464:
 5613              	.LBB465:
 5614              	.LBB424:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 5615              		.loc 12 67 0
 5616 0586 284C     		ldr	r4, .L295+72
 5617              	.LBE424:
 5618              	.LBE465:
 5619              	.LBB466:
 5620              	.LBB450:
 5621              	.LBB444:
 5622              	.LBB440:
 5623              	.LBB436:
 5624              	.LBB434:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 5625              		.loc 5 22 0
 5626 0588 2848     		ldr	r0, .L295+76
 5627              	.LBE434:
 5628              	.LBE436:
 5629              	.LBE440:
 5630              	.LBE444:
 5631              	.LBE450:
 5632              	.LBE466:
 5633              	.LBB467:
 5634              	.LBB461:
  50:./lib/ros_lib/ros/publisher.h **** 
 5635              		.loc 17 50 0
 5636 058a C3F8D819 		str	r1, [r3, #2520]
 5637 058e 03F58361 		add	r1, r3, #1048
 5638              	.LBE461:
 5639              	.LBE467:
 5640              	.LBB468:
 5641              	.LBB411:
 5642              	.LBB407:
 5643              	.LBB403:
 5644              	.LBB399:
 5645              	.LBB396:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 5646              		.loc 9 23 0
 5647 0592 C3F88C29 		str	r2, [r3, #2444]
 5648              	.LVL609:
 5649              	.LBB392:
 5650              	.LBB393:
 5651              		.loc 16 52 0
 5652 0596 C3F89029 		str	r2, [r3, #2448]
 5653 059a C3F89429 		str	r2, [r3, #2452]
 5654              	.LVL610:
 5655              	.LBE393:
 5656              	.LBE392:
 5657              	.LBE396:
 5658              	.LBE399:
  27:./lib/ros_lib/sensor_msgs/Joy.h ****     {
 5659              		.loc 10 27 0
 5660 059e 83F89C29 		strb	r2, [r3, #2460]
 5661 05a2 C3F8A429 		str	r2, [r3, #2468]
 5662 05a6 83F8A829 		strb	r2, [r3, #2472]
 5663 05aa C3F8B029 		str	r2, [r3, #2480]
 5664              	.LVL611:
 5665              	.LBE403:
 5666              	.LBE407:
 5667              	.LBE411:
 5668              	.LBE468:
 5669              	.LBB469:
 5670              	.LBB425:
 5671              	.LBB419:
 5672              	.LBB417:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 5673              		.loc 8 18 0
 5674 05ae 83F8CC29 		strb	r2, [r3, #2508]
 5675              	.LVL612:
 5676              	.LBE417:
 5677              	.LBE419:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 5678              		.loc 12 67 0
 5679 05b2 C3F8D049 		str	r4, [r3, #2512]
 5680              	.LBE425:
 5681              	.LBE469:
 5682              	.LBB470:
 5683              	.LBB451:
 5684              	.LBB445:
 5685              	.LBB441:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 5686              		.loc 6 23 0
 5687 05b6 83F82024 		strb	r2, [r3, #1056]
 5688              	.LVL613:
 5689              	.LBB437:
 5690              	.LBB435:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 5691              		.loc 5 22 0
 5692 05ba C3F82404 		str	r0, [r3, #1060]
 5693 05be C3F82C24 		str	r2, [r3, #1068]
 5694 05c2 C3F83024 		str	r2, [r3, #1072]
 5695              	.LVL614:
 5696              	.LBE435:
 5697              	.LBE437:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 5698              		.loc 6 23 0
 5699 05c6 C3F83424 		str	r2, [r3, #1076]
 5700 05ca C3F83824 		str	r2, [r3, #1080]
 5701              	.LVL615:
 5702              	.LBE441:
 5703              	.LBE445:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 5704              		.loc 7 23 0
 5705 05ce 83F83C24 		strb	r2, [r3, #1084]
 5706 05d2 C3F84424 		str	r2, [r3, #1092]
 5707              	.LVL616:
 5708              	.LBE451:
 5709              	.LBE470:
 5710              	.LBB471:
 5711              	.LBB462:
  50:./lib/ros_lib/ros/publisher.h **** 
 5712              		.loc 17 50 0
 5713 05d6 C3F8DC19 		str	r1, [r3, #2524]
 5714 05da C3F8E829 		str	r2, [r3, #2536]
 5715              	.LVL617:
 5716 05de 30BD     		pop	{r4, r5, pc}
 5717              	.L296:
 5718              		.align	2
 5719              	.L295:
 5720 05e0 00000000 		.word	.LANCHOR1
 5721 05e4 08000000 		.word	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE+8
 5722 05e8 00380140 		.word	1073821696
 5723 05ec 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 5724 05f0 24090000 		.word	.LANCHOR1+2340
 5725 05f4 48040000 		.word	.LANCHOR1+1096
 5726 05f8 08000000 		.word	_ZTVN3ros10SubscriberIN11sensor_msgs3JoyEEE+8
 5727 05fc 00000000 		.word	_Z8motor_cbRKN11sensor_msgs3JoyE
 5728 0600 08000000 		.word	_ZTVN11sensor_msgs3JoyE+8
 5729 0604 D9020000 		.word	.LC29
 5730 0608 DD020000 		.word	.LC30
 5731 060c 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 5732 0610 08000000 		.word	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE+8
 5733 0614 08000000 		.word	_ZTVN8std_msgs17Float32MultiArrayE+8
 5734 0618 3E020000 		.word	.LC20
 5735 061c 08000000 		.word	_ZTVN8std_msgs5UInt8E+8
 5736 0620 08000000 		.word	_ZTVN8std_msgs16MultiArrayLayoutE+8
 5737 0624 E1020000 		.word	.LC31
 5738 0628 00000000 		.word	_Z6led_cbRKN8std_msgs5UInt8E
 5739 062c 08000000 		.word	_ZTVN8std_msgs19MultiArrayDimensionE+8
 5740              	.LBE462:
 5741              	.LBE471:
 5742              	.LBE472:
 5743              	.LBE473:
 5744              		.cfi_endproc
 5745              	.LFE239:
 5746              		.cantunwind
 5747              		.fnend
 5749              		.section	.init_array,"aw",%init_array
 5750              		.align	2
 5751 0000 00000000 		.word	_GLOBAL__sub_I_USART_FIFO(target1)
 5752              		.weak	_ZTSN3ros3MsgE
 5753              		.section	.rodata._ZTSN3ros3MsgE,"aG",%progbits,_ZTSN3ros3MsgE,comdat
 5756              	_ZTSN3ros3MsgE:
 5757 0000 4E33726F 		.ascii	"N3ros3MsgE\000"
 5757      73334D73 
 5757      674500
 5758              		.weak	_ZTIN3ros3MsgE
 5759              		.section	.rodata._ZTIN3ros3MsgE,"aG",%progbits,_ZTIN3ros3MsgE,comdat
 5760              		.align	2
 5763              	_ZTIN3ros3MsgE:
 5764 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 5765 0004 00000000 		.word	_ZTSN3ros3MsgE
 5766              		.weak	_ZTSN8std_msgs4TimeE
 5767              		.section	.rodata._ZTSN8std_msgs4TimeE,"aG",%progbits,_ZTSN8std_msgs4TimeE,comdat
 5770              	_ZTSN8std_msgs4TimeE:
 5771 0000 4E387374 		.ascii	"N8std_msgs4TimeE\000"
 5771      645F6D73 
 5771      67733454 
 5771      696D6545 
 5771      00
 5772              		.weak	_ZTIN8std_msgs4TimeE
 5773              		.section	.rodata._ZTIN8std_msgs4TimeE,"aG",%progbits,_ZTIN8std_msgs4TimeE,comdat
 5774              		.align	2
 5777              	_ZTIN8std_msgs4TimeE:
 5778 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5779 0004 00000000 		.word	_ZTSN8std_msgs4TimeE
 5780 0008 00000000 		.word	_ZTIN3ros3MsgE
 5781              		.weak	_ZTSN14rosserial_msgs9TopicInfoE
 5782              		.section	.rodata._ZTSN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTSN14rosserial_msgs9TopicInfoE,
 5785              	_ZTSN14rosserial_msgs9TopicInfoE:
 5786 0000 4E313472 		.ascii	"N14rosserial_msgs9TopicInfoE\000"
 5786      6F737365 
 5786      7269616C 
 5786      5F6D7367 
 5786      7339546F 
 5787              		.weak	_ZTIN14rosserial_msgs9TopicInfoE
 5788              		.section	.rodata._ZTIN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTIN14rosserial_msgs9TopicInfoE,
 5789              		.align	2
 5792              	_ZTIN14rosserial_msgs9TopicInfoE:
 5793 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5794 0004 00000000 		.word	_ZTSN14rosserial_msgs9TopicInfoE
 5795 0008 00000000 		.word	_ZTIN3ros3MsgE
 5796              		.weak	_ZTSN14rosserial_msgs3LogE
 5797              		.section	.rodata._ZTSN14rosserial_msgs3LogE,"aG",%progbits,_ZTSN14rosserial_msgs3LogE,comdat
 5800              	_ZTSN14rosserial_msgs3LogE:
 5801 0000 4E313472 		.ascii	"N14rosserial_msgs3LogE\000"
 5801      6F737365 
 5801      7269616C 
 5801      5F6D7367 
 5801      73334C6F 
 5802              		.weak	_ZTIN14rosserial_msgs3LogE
 5803              		.section	.rodata._ZTIN14rosserial_msgs3LogE,"aG",%progbits,_ZTIN14rosserial_msgs3LogE,comdat
 5804              		.align	2
 5807              	_ZTIN14rosserial_msgs3LogE:
 5808 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5809 0004 00000000 		.word	_ZTSN14rosserial_msgs3LogE
 5810 0008 00000000 		.word	_ZTIN3ros3MsgE
 5811              		.weak	_ZTSN14rosserial_msgs20RequestParamResponseE
 5812              		.section	.rodata._ZTSN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTSN14rosserial_msgs
 5815              	_ZTSN14rosserial_msgs20RequestParamResponseE:
 5816 0000 4E313472 		.ascii	"N14rosserial_msgs20RequestParamResponseE\000"
 5816      6F737365 
 5816      7269616C 
 5816      5F6D7367 
 5816      73323052 
 5817              		.weak	_ZTIN14rosserial_msgs20RequestParamResponseE
 5818              		.section	.rodata._ZTIN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTIN14rosserial_msgs
 5819              		.align	2
 5822              	_ZTIN14rosserial_msgs20RequestParamResponseE:
 5823 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5824 0004 00000000 		.word	_ZTSN14rosserial_msgs20RequestParamResponseE
 5825 0008 00000000 		.word	_ZTIN3ros3MsgE
 5826              		.weak	_ZTSN3ros15NodeHandleBase_E
 5827              		.section	.rodata._ZTSN3ros15NodeHandleBase_E,"aG",%progbits,_ZTSN3ros15NodeHandleBase_E,comdat
 5830              	_ZTSN3ros15NodeHandleBase_E:
 5831 0000 4E33726F 		.ascii	"N3ros15NodeHandleBase_E\000"
 5831      7331354E 
 5831      6F646548 
 5831      616E646C 
 5831      65426173 
 5832              		.weak	_ZTIN3ros15NodeHandleBase_E
 5833              		.section	.rodata._ZTIN3ros15NodeHandleBase_E,"aG",%progbits,_ZTIN3ros15NodeHandleBase_E,comdat
 5834              		.align	2
 5837              	_ZTIN3ros15NodeHandleBase_E:
 5838 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 5839 0004 00000000 		.word	_ZTSN3ros15NodeHandleBase_E
 5840              		.weak	_ZTSN3ros11Subscriber_E
 5841              		.section	.rodata._ZTSN3ros11Subscriber_E,"aG",%progbits,_ZTSN3ros11Subscriber_E,comdat
 5844              	_ZTSN3ros11Subscriber_E:
 5845 0000 4E33726F 		.ascii	"N3ros11Subscriber_E\000"
 5845      73313153 
 5845      75627363 
 5845      72696265 
 5845      725F4500 
 5846              		.weak	_ZTIN3ros11Subscriber_E
 5847              		.section	.rodata._ZTIN3ros11Subscriber_E,"aG",%progbits,_ZTIN3ros11Subscriber_E,comdat
 5848              		.align	2
 5851              	_ZTIN3ros11Subscriber_E:
 5852 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 5853 0004 00000000 		.word	_ZTSN3ros11Subscriber_E
 5854              		.weak	_ZTSN8std_msgs19MultiArrayDimensionE
 5855              		.section	.rodata._ZTSN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTSN8std_msgs19MultiArrayDim
 5858              	_ZTSN8std_msgs19MultiArrayDimensionE:
 5859 0000 4E387374 		.ascii	"N8std_msgs19MultiArrayDimensionE\000"
 5859      645F6D73 
 5859      67733139 
 5859      4D756C74 
 5859      69417272 
 5860              		.weak	_ZTIN8std_msgs19MultiArrayDimensionE
 5861              		.section	.rodata._ZTIN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTIN8std_msgs19MultiArrayDim
 5862              		.align	2
 5865              	_ZTIN8std_msgs19MultiArrayDimensionE:
 5866 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5867 0004 00000000 		.word	_ZTSN8std_msgs19MultiArrayDimensionE
 5868 0008 00000000 		.word	_ZTIN3ros3MsgE
 5869              		.weak	_ZTSN8std_msgs16MultiArrayLayoutE
 5870              		.section	.rodata._ZTSN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTSN8std_msgs16MultiArrayLayout
 5873              	_ZTSN8std_msgs16MultiArrayLayoutE:
 5874 0000 4E387374 		.ascii	"N8std_msgs16MultiArrayLayoutE\000"
 5874      645F6D73 
 5874      67733136 
 5874      4D756C74 
 5874      69417272 
 5875              		.weak	_ZTIN8std_msgs16MultiArrayLayoutE
 5876              		.section	.rodata._ZTIN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTIN8std_msgs16MultiArrayLayout
 5877              		.align	2
 5880              	_ZTIN8std_msgs16MultiArrayLayoutE:
 5881 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5882 0004 00000000 		.word	_ZTSN8std_msgs16MultiArrayLayoutE
 5883 0008 00000000 		.word	_ZTIN3ros3MsgE
 5884              		.weak	_ZTSN8std_msgs17Float32MultiArrayE
 5885              		.section	.rodata._ZTSN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTSN8std_msgs17Float32MultiArr
 5888              	_ZTSN8std_msgs17Float32MultiArrayE:
 5889 0000 4E387374 		.ascii	"N8std_msgs17Float32MultiArrayE\000"
 5889      645F6D73 
 5889      67733137 
 5889      466C6F61 
 5889      7433324D 
 5890              		.weak	_ZTIN8std_msgs17Float32MultiArrayE
 5891              		.section	.rodata._ZTIN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTIN8std_msgs17Float32MultiArr
 5892              		.align	2
 5895              	_ZTIN8std_msgs17Float32MultiArrayE:
 5896 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5897 0004 00000000 		.word	_ZTSN8std_msgs17Float32MultiArrayE
 5898 0008 00000000 		.word	_ZTIN3ros3MsgE
 5899              		.weak	_ZTSN8std_msgs5UInt8E
 5900              		.section	.rodata._ZTSN8std_msgs5UInt8E,"aG",%progbits,_ZTSN8std_msgs5UInt8E,comdat
 5903              	_ZTSN8std_msgs5UInt8E:
 5904 0000 4E387374 		.ascii	"N8std_msgs5UInt8E\000"
 5904      645F6D73 
 5904      67733555 
 5904      496E7438 
 5904      4500
 5905              		.weak	_ZTIN8std_msgs5UInt8E
 5906              		.section	.rodata._ZTIN8std_msgs5UInt8E,"aG",%progbits,_ZTIN8std_msgs5UInt8E,comdat
 5907              		.align	2
 5910              	_ZTIN8std_msgs5UInt8E:
 5911 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5912 0004 00000000 		.word	_ZTSN8std_msgs5UInt8E
 5913 0008 00000000 		.word	_ZTIN3ros3MsgE
 5914              		.weak	_ZTSN8std_msgs6HeaderE
 5915              		.section	.rodata._ZTSN8std_msgs6HeaderE,"aG",%progbits,_ZTSN8std_msgs6HeaderE,comdat
 5918              	_ZTSN8std_msgs6HeaderE:
 5919 0000 4E387374 		.ascii	"N8std_msgs6HeaderE\000"
 5919      645F6D73 
 5919      67733648 
 5919      65616465 
 5919      724500
 5920              		.weak	_ZTIN8std_msgs6HeaderE
 5921              		.section	.rodata._ZTIN8std_msgs6HeaderE,"aG",%progbits,_ZTIN8std_msgs6HeaderE,comdat
 5922              		.align	2
 5925              	_ZTIN8std_msgs6HeaderE:
 5926 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5927 0004 00000000 		.word	_ZTSN8std_msgs6HeaderE
 5928 0008 00000000 		.word	_ZTIN3ros3MsgE
 5929              		.weak	_ZTSN11sensor_msgs3JoyE
 5930              		.section	.rodata._ZTSN11sensor_msgs3JoyE,"aG",%progbits,_ZTSN11sensor_msgs3JoyE,comdat
 5933              	_ZTSN11sensor_msgs3JoyE:
 5934 0000 4E313173 		.ascii	"N11sensor_msgs3JoyE\000"
 5934      656E736F 
 5934      725F6D73 
 5934      6773334A 
 5934      6F794500 
 5935              		.weak	_ZTIN11sensor_msgs3JoyE
 5936              		.section	.rodata._ZTIN11sensor_msgs3JoyE,"aG",%progbits,_ZTIN11sensor_msgs3JoyE,comdat
 5937              		.align	2
 5940              	_ZTIN11sensor_msgs3JoyE:
 5941 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5942 0004 00000000 		.word	_ZTSN11sensor_msgs3JoyE
 5943 0008 00000000 		.word	_ZTIN3ros3MsgE
 5944              		.weak	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5945              		.section	.rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 5948              	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 5949 0000 4E33726F 		.ascii	"N3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512"
 5949      7331314E 
 5949      6F646548 
 5949      616E646C 
 5949      655F4931 
 5950 0033 454C6935 		.ascii	"ELi512EEE\000"
 5950      31324545 
 5950      4500
 5951              		.weak	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5952              		.section	.rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 5953              		.align	2
 5956              	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 5957 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5958 0004 00000000 		.word	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5959 0008 00000000 		.word	_ZTIN3ros15NodeHandleBase_E
 5960              		.weak	_ZTSN3ros10SubscriberIN11sensor_msgs3JoyEEE
 5961              		.section	.rodata._ZTSN3ros10SubscriberIN11sensor_msgs3JoyEEE,"aG",%progbits,_ZTSN3ros10SubscriberI
 5964              	_ZTSN3ros10SubscriberIN11sensor_msgs3JoyEEE:
 5965 0000 4E33726F 		.ascii	"N3ros10SubscriberIN11sensor_msgs3JoyEEE\000"
 5965      73313053 
 5965      75627363 
 5965      72696265 
 5965      72494E31 
 5966              		.weak	_ZTIN3ros10SubscriberIN11sensor_msgs3JoyEEE
 5967              		.section	.rodata._ZTIN3ros10SubscriberIN11sensor_msgs3JoyEEE,"aG",%progbits,_ZTIN3ros10SubscriberI
 5968              		.align	2
 5971              	_ZTIN3ros10SubscriberIN11sensor_msgs3JoyEEE:
 5972 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5973 0004 00000000 		.word	_ZTSN3ros10SubscriberIN11sensor_msgs3JoyEEE
 5974 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 5975              		.weak	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 5976              		.section	.rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTSN3ros10SubscriberIN8
 5979              	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:
 5980 0000 4E33726F 		.ascii	"N3ros10SubscriberIN8std_msgs5UInt8EEE\000"
 5980      73313053 
 5980      75627363 
 5980      72696265 
 5980      72494E38 
 5981              		.weak	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 5982              		.section	.rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTIN3ros10SubscriberIN8
 5983              		.align	2
 5986              	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:
 5987 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5988 0004 00000000 		.word	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 5989 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 5990              		.weak	_ZTVN8std_msgs4TimeE
 5991              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 5992              		.align	2
 5995              	_ZTVN8std_msgs4TimeE:
 5996 0000 00000000 		.word	0
 5997 0004 00000000 		.word	_ZTIN8std_msgs4TimeE
 5998 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 5999 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 6000 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 6001 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 6002              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 6003              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 6004              		.align	2
 6007              	_ZTVN14rosserial_msgs9TopicInfoE:
 6008 0000 00000000 		.word	0
 6009 0004 00000000 		.word	_ZTIN14rosserial_msgs9TopicInfoE
 6010 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 6011 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 6012 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 6013 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 6014              		.weak	_ZTVN14rosserial_msgs3LogE
 6015              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 6016              		.align	2
 6019              	_ZTVN14rosserial_msgs3LogE:
 6020 0000 00000000 		.word	0
 6021 0004 00000000 		.word	_ZTIN14rosserial_msgs3LogE
 6022 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 6023 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 6024 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 6025 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 6026              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 6027              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 6028              		.align	2
 6031              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 6032 0000 00000000 		.word	0
 6033 0004 00000000 		.word	_ZTIN14rosserial_msgs20RequestParamResponseE
 6034 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 6035 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 6036 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 6037 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 6038              		.weak	_ZTVN8std_msgs19MultiArrayDimensionE
 6039              		.section	.rodata._ZTVN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTVN8std_msgs19MultiArrayDim
 6040              		.align	2
 6043              	_ZTVN8std_msgs19MultiArrayDimensionE:
 6044 0000 00000000 		.word	0
 6045 0004 00000000 		.word	_ZTIN8std_msgs19MultiArrayDimensionE
 6046 0008 00000000 		.word	_ZNK8std_msgs19MultiArrayDimension9serializeEPh
 6047 000c 00000000 		.word	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 6048 0010 00000000 		.word	_ZN8std_msgs19MultiArrayDimension7getTypeEv
 6049 0014 00000000 		.word	_ZN8std_msgs19MultiArrayDimension6getMD5Ev
 6050              		.weak	_ZTVN8std_msgs16MultiArrayLayoutE
 6051              		.section	.rodata._ZTVN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTVN8std_msgs16MultiArrayLayout
 6052              		.align	2
 6055              	_ZTVN8std_msgs16MultiArrayLayoutE:
 6056 0000 00000000 		.word	0
 6057 0004 00000000 		.word	_ZTIN8std_msgs16MultiArrayLayoutE
 6058 0008 00000000 		.word	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 6059 000c 00000000 		.word	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 6060 0010 00000000 		.word	_ZN8std_msgs16MultiArrayLayout7getTypeEv
 6061 0014 00000000 		.word	_ZN8std_msgs16MultiArrayLayout6getMD5Ev
 6062              		.weak	_ZTVN8std_msgs17Float32MultiArrayE
 6063              		.section	.rodata._ZTVN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTVN8std_msgs17Float32MultiArr
 6064              		.align	2
 6067              	_ZTVN8std_msgs17Float32MultiArrayE:
 6068 0000 00000000 		.word	0
 6069 0004 00000000 		.word	_ZTIN8std_msgs17Float32MultiArrayE
 6070 0008 00000000 		.word	_ZNK8std_msgs17Float32MultiArray9serializeEPh
 6071 000c 00000000 		.word	_ZN8std_msgs17Float32MultiArray11deserializeEPh
 6072 0010 00000000 		.word	_ZN8std_msgs17Float32MultiArray7getTypeEv
 6073 0014 00000000 		.word	_ZN8std_msgs17Float32MultiArray6getMD5Ev
 6074              		.weak	_ZTVN8std_msgs5UInt8E
 6075              		.section	.rodata._ZTVN8std_msgs5UInt8E,"aG",%progbits,_ZTVN8std_msgs5UInt8E,comdat
 6076              		.align	2
 6079              	_ZTVN8std_msgs5UInt8E:
 6080 0000 00000000 		.word	0
 6081 0004 00000000 		.word	_ZTIN8std_msgs5UInt8E
 6082 0008 00000000 		.word	_ZNK8std_msgs5UInt89serializeEPh
 6083 000c 00000000 		.word	_ZN8std_msgs5UInt811deserializeEPh
 6084 0010 00000000 		.word	_ZN8std_msgs5UInt87getTypeEv
 6085 0014 00000000 		.word	_ZN8std_msgs5UInt86getMD5Ev
 6086              		.weak	_ZTVN8std_msgs6HeaderE
 6087              		.section	.rodata._ZTVN8std_msgs6HeaderE,"aG",%progbits,_ZTVN8std_msgs6HeaderE,comdat
 6088              		.align	2
 6091              	_ZTVN8std_msgs6HeaderE:
 6092 0000 00000000 		.word	0
 6093 0004 00000000 		.word	_ZTIN8std_msgs6HeaderE
 6094 0008 00000000 		.word	_ZNK8std_msgs6Header9serializeEPh
 6095 000c 00000000 		.word	_ZN8std_msgs6Header11deserializeEPh
 6096 0010 00000000 		.word	_ZN8std_msgs6Header7getTypeEv
 6097 0014 00000000 		.word	_ZN8std_msgs6Header6getMD5Ev
 6098              		.weak	_ZTVN11sensor_msgs3JoyE
 6099              		.section	.rodata._ZTVN11sensor_msgs3JoyE,"aG",%progbits,_ZTVN11sensor_msgs3JoyE,comdat
 6100              		.align	2
 6103              	_ZTVN11sensor_msgs3JoyE:
 6104 0000 00000000 		.word	0
 6105 0004 00000000 		.word	_ZTIN11sensor_msgs3JoyE
 6106 0008 00000000 		.word	_ZNK11sensor_msgs3Joy9serializeEPh
 6107 000c 00000000 		.word	_ZN11sensor_msgs3Joy11deserializeEPh
 6108 0010 00000000 		.word	_ZN11sensor_msgs3Joy7getTypeEv
 6109 0014 00000000 		.word	_ZN11sensor_msgs3Joy6getMD5Ev
 6110              		.weak	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 6111              		.section	.rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 6112              		.align	2
 6115              	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 6116 0000 00000000 		.word	0
 6117 0004 00000000 		.word	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 6118 0008 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 6119 000c 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 6120 0010 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
 6121              		.weak	_ZTVN3ros10SubscriberIN11sensor_msgs3JoyEEE
 6122              		.section	.rodata._ZTVN3ros10SubscriberIN11sensor_msgs3JoyEEE,"aG",%progbits,_ZTVN3ros10SubscriberI
 6123              		.align	2
 6126              	_ZTVN3ros10SubscriberIN11sensor_msgs3JoyEEE:
 6127 0000 00000000 		.word	0
 6128 0004 00000000 		.word	_ZTIN3ros10SubscriberIN11sensor_msgs3JoyEEE
 6129 0008 00000000 		.word	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE8callbackEPh
 6130 000c 00000000 		.word	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE15getEndpointTypeEv
 6131 0010 00000000 		.word	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv
 6132 0014 00000000 		.word	_ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev
 6133              		.weak	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
 6134              		.section	.rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTVN3ros10SubscriberIN8
 6135              		.align	2
 6138              	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:
 6139 0000 00000000 		.word	0
 6140 0004 00000000 		.word	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 6141 0008 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 6142 000c 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 6143 0010 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 6144 0014 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 6145              		.global	str
 6146              		.global	hello
 6147              		.global	chatter
 6148              		.global	str_msg
 6149              		.global	led_sub
 6150              		.global	motor_sub
 6151              		.global	nh
 6152              		.global	rear_left
 6153              		.global	rear_right
 6154              		.global	front_left
 6155              		.global	front_right
 6156              		.global	servo_right
 6157              		.global	servo_left
 6158              		.global	GenerateStartStatus
 6159              		.global	NumberOfByteToReceive
 6160              		.global	RxBuffer
 6161              		.global	slaveAddress
 6162              		.global	Rx_Idx
 6163              		.global	USART_CNTOUT
 6164              		.global	USART_CNTIN
 6165              		.global	USART_FIFO
 6166              		.section	.rodata
 6167              		.set	.LANCHOR0,. + 0
 6170              	_ZN14rosserial_msgsL12REQUESTPARAME:
 6171 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 6171      65726961 
 6171      6C5F6D73 
 6171      67732F52 
 6171      65717565 
 6172              		.section	.rodata.str1.1,"aMS",%progbits,1
 6173              	.LC0:
 6174 0000 7374645F 		.ascii	"std_msgs/Time\000"
 6174      6D736773 
 6174      2F54696D 
 6174      6500
 6175              	.LC1:
 6176 000e 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 6176      36366337 
 6176      34633535 
 6176      32633331 
 6176      31666263 
 6177              	.LC2:
 6178 002f 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 6178      65726961 
 6178      6C5F6D73 
 6178      67732F54 
 6178      6F706963 
 6179              	.LC3:
 6180 0048 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 6180      31663838 
 6180      66633434 
 6180      38393266 
 6180      38633130 
 6181              	.LC4:
 6182 0069 726F7373 		.ascii	"rosserial_msgs/Log\000"
 6182      65726961 
 6182      6C5F6D73 
 6182      67732F4C 
 6182      6F6700
 6183              	.LC5:
 6184 007c 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 6184      64373331 
 6184      63323539 
 6184      33333236 
 6184      31636436 
 6185              	.LC6:
 6186 009d 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 6186      39386264 
 6186      61363539 
 6186      38313938 
 6186      36646466 
 6187              	.LC7:
 6188 00be 7374645F 		.ascii	"std_msgs/MultiArrayDimension\000"
 6188      6D736773 
 6188      2F4D756C 
 6188      74694172 
 6188      72617944 
 6189              	.LC8:
 6190 00db 34636430 		.ascii	"4cd0c83a8683deae40ecdac60e53bfa8\000"
 6190      63383361 
 6190      38363833 
 6190      64656165 
 6190      34306563 
 6191              	.LC9:
 6192 00fc 7374645F 		.ascii	"std_msgs/MultiArrayLayout\000"
 6192      6D736773 
 6192      2F4D756C 
 6192      74694172 
 6192      7261794C 
 6193              	.LC10:
 6194 0116 30666564 		.ascii	"0fed2a11c13e11c5571b4e2a995a91a3\000"
 6194      32613131 
 6194      63313365 
 6194      31316335 
 6194      35373162 
 6195              	.LC11:
 6196 0137 7374645F 		.ascii	"std_msgs/Float32MultiArray\000"
 6196      6D736773 
 6196      2F466C6F 
 6196      61743332 
 6196      4D756C74 
 6197              	.LC12:
 6198 0152 36613430 		.ascii	"6a40e0ffa6a17a503ac3f8616991b1f6\000"
 6198      65306666 
 6198      61366131 
 6198      37613530 
 6198      33616333 
 6199              	.LC13:
 6200 0173 7374645F 		.ascii	"std_msgs/UInt8\000"
 6200      6D736773 
 6200      2F55496E 
 6200      743800
 6201              	.LC14:
 6202 0182 37633831 		.ascii	"7c8164229e7d2c17eb95e9231617fdee\000"
 6202      36343232 
 6202      39653764 
 6202      32633137 
 6202      65623935 
 6203              	.LC15:
 6204 01a3 7374645F 		.ascii	"std_msgs/Header\000"
 6204      6D736773 
 6204      2F486561 
 6204      64657200 
 6205              	.LC16:
 6206 01b3 32313736 		.ascii	"2176decaecbce78abc3b96ef049fabed\000"
 6206      64656361 
 6206      65636263 
 6206      65373861 
 6206      62633362 
 6207              	.LC17:
 6208 01d4 73656E73 		.ascii	"sensor_msgs/Joy\000"
 6208      6F725F6D 
 6208      7367732F 
 6208      4A6F7900 
 6209              	.LC18:
 6210 01e4 35613965 		.ascii	"5a9ea5f83505693b71e785041e67a8bb\000"
 6210      61356638 
 6210      33353035 
 6210      36393362 
 6210      37316537 
 6211              	.LC19:
 6212 0205 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 6212      61676520 
 6212      66726F6D 
 6212      20646576 
 6212      69636520 
 6213 0238 66666572 		.ascii	"ffer.\000"
 6213      2E00
 6214              	.LC20:
 6215 023e 00       		.ascii	"\000"
 6216              	.LC21:
 6217 023f 73657276 		.ascii	"servo_left\000"
 6217      6F5F6C65 
 6217      667400
 6218              	.LC22:
 6219 024a 73657276 		.ascii	"servo_right\000"
 6219      6F5F7269 
 6219      67687400 
 6220              	.LC23:
 6221 0256 66726F6E 		.ascii	"front_right\000"
 6221      745F7269 
 6221      67687400 
 6222              	.LC24:
 6223 0262 66726F6E 		.ascii	"front_left\000"
 6223      745F6C65 
 6223      667400
 6224              	.LC25:
 6225 026d 72656172 		.ascii	"rear_left\000"
 6225      5F6C6566 
 6225      7400
 6226              	.LC26:
 6227 0277 72656172 		.ascii	"rear_right\000"
 6227      5F726967 
 6227      687400
 6228              	.LC27:
 6229 0282 556E6162 		.ascii	"Unable to initialize motor: %s - [FAIL]\015\012\000"
 6229      6C652074 
 6229      6F20696E 
 6229      69746961 
 6229      6C697A65 
 6230              	.LC28:
 6231 02ac 57726F6E 		.ascii	"Wrong parameters value: file %s on line %d\015\012\000"
 6231      67207061 
 6231      72616D65 
 6231      74657273 
 6231      2076616C 
 6232              	.LC29:
 6233 02d9 6A6F7900 		.ascii	"joy\000"
 6234              	.LC30:
 6235 02dd 6C656400 		.ascii	"led\000"
 6236              	.LC31:
 6237 02e1 656E636F 		.ascii	"encoder\000"
 6237      64657200 
 6238              		.bss
 6239              		.align	2
 6240              		.set	.LANCHOR1,. + 0
 6243              	front_right:
 6244 0000 00000000 		.space	4
 6247              	front_left:
 6248 0004 00000000 		.space	4
 6251              	rear_right:
 6252 0008 00000000 		.space	4
 6255              	rear_left:
 6256 000c 00000000 		.space	4
 6259              	USART_CNTOUT:
 6260 0010 00000000 		.space	4
 6263              	USART_CNTIN:
 6264 0014 00000000 		.space	4
 6267              	USART_FIFO:
 6268 0018 00000000 		.space	1024
 6268      00000000 
 6268      00000000 
 6268      00000000 
 6268      00000000 
 6271              	str_msg:
 6272 0418 00000000 		.space	48
 6272      00000000 
 6272      00000000 
 6272      00000000 
 6272      00000000 
 6275              	nh:
 6276 0448 00000000 		.space	1328
 6276      00000000 
 6276      00000000 
 6276      00000000 
 6276      00000000 
 6279              	motor_sub:
 6280 0978 00000000 		.space	68
 6280      00000000 
 6280      00000000 
 6280      00000000 
 6280      00000000 
 6283              	led_sub:
 6284 09bc 00000000 		.space	28
 6284      00000000 
 6284      00000000 
 6284      00000000 
 6284      00000000 
 6287              	chatter:
 6288 09d8 00000000 		.space	20
 6288      00000000 
 6288      00000000 
 6288      00000000 
 6288      00000000 
 6291              	servo_left:
 6292 09ec 00000000 		.space	4
 6295              	str:
 6296 09f0 00000000 		.space	150
 6296      00000000 
 6296      00000000 
 6296      00000000 
 6296      00000000 
 6297 0a86 0000     		.space	2
 6300              	servo_right:
 6301 0a88 00000000 		.space	4
 6304              	hello:
 6305 0a8c 00000000 		.space	25
 6305      00000000 
 6305      00000000 
 6305      00000000 
 6305      00000000 
 6308              	GenerateStartStatus:
 6309 0aa5 00       		.space	1
 6312              	NumberOfByteToReceive:
 6313 0aa6 00       		.space	1
 6316              	RxBuffer:
 6317 0aa7 00000000 		.space	4
 6320              	slaveAddress:
 6321 0aab 00       		.space	1
 6324              	Rx_Idx:
 6325 0aac 00       		.space	1
 6326              		.text
 6327              	.Letext0:
 6328              		.file 18 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 6329              		.file 19 "/media/emil/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_type
 6330              		.file 20 "/media/emil/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 6331              		.file 21 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 6332              		.file 22 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_usart.h"
 6333              		.file 23 "./inc/motorSettings.h"
 6334              		.file 24 "./lib/ros_lib/ros/duration.h"
 6335              		.file 25 "./lib/ros_lib/ros/msg.h"
 6336              		.file 26 "./lib/ros_lib/ros.h"
 6337              		.file 27 "./inc/motor.h"
 6338              		.file 28 "./inc/led.h"
 6339              		.file 29 "/media/emil/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/string.h"
 6340              		.file 30 "/media/emil/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdlib.h"
 6341              		.file 31 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 6342              		.file 32 "./inc/stm32_time.h"
 6343              		.file 33 "./inc/encoder.h"
 6344              		.file 34 "/media/emil/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdio.h"
 6345              		.file 35 "./lib/ros_lib/roberto_msgs/MotorState.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/ccZ23E8K.s:20     .text._ZNK8std_msgs4Time9serializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:25     .text._ZNK8std_msgs4Time9serializeEPh:00000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:75     .text._ZN8std_msgs4Time11deserializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:80     .text._ZN8std_msgs4Time11deserializeEPh:00000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:131    .text._ZN8std_msgs4Time7getTypeEv:00000000 $t
     /tmp/ccZ23E8K.s:136    .text._ZN8std_msgs4Time7getTypeEv:00000000 _ZN8std_msgs4Time7getTypeEv
     /tmp/ccZ23E8K.s:152    .text._ZN8std_msgs4Time7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:00000000 $d
     /tmp/ccZ23E8K.s:159    .text._ZN8std_msgs4Time6getMD5Ev:00000000 $t
     /tmp/ccZ23E8K.s:164    .text._ZN8std_msgs4Time6getMD5Ev:00000000 _ZN8std_msgs4Time6getMD5Ev
     /tmp/ccZ23E8K.s:180    .text._ZN8std_msgs4Time6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:00000000 $d
     /tmp/ccZ23E8K.s:187    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $t
     /tmp/ccZ23E8K.s:192    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
     /tmp/ccZ23E8K.s:209    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $d
     /tmp/ccZ23E8K.s:216    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $t
     /tmp/ccZ23E8K.s:221    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
     /tmp/ccZ23E8K.s:237    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $d
     /tmp/ccZ23E8K.s:244    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $t
     /tmp/ccZ23E8K.s:249    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 _ZN14rosserial_msgs3Log7getTypeEv
     /tmp/ccZ23E8K.s:266    .text._ZN14rosserial_msgs3Log7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $d
     /tmp/ccZ23E8K.s:273    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $t
     /tmp/ccZ23E8K.s:278    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 _ZN14rosserial_msgs3Log6getMD5Ev
     /tmp/ccZ23E8K.s:294    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $d
     /tmp/ccZ23E8K.s:301    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $t
     /tmp/ccZ23E8K.s:306    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
     /tmp/ccZ23E8K.s:323    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $d
     /tmp/ccZ23E8K.s:330    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $t
     /tmp/ccZ23E8K.s:335    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
     /tmp/ccZ23E8K.s:351    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $d
     /tmp/ccZ23E8K.s:358    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 $t
     /tmp/ccZ23E8K.s:363    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 _ZN8std_msgs19MultiArrayDimension7getTypeEv
     /tmp/ccZ23E8K.s:380    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 $d
     /tmp/ccZ23E8K.s:387    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 $t
     /tmp/ccZ23E8K.s:392    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 _ZN8std_msgs19MultiArrayDimension6getMD5Ev
     /tmp/ccZ23E8K.s:408    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 $d
     /tmp/ccZ23E8K.s:415    .text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:420    .text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 _ZNK8std_msgs16MultiArrayLayout9serializeEPh
.ARM.exidx.text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:513    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 $t
     /tmp/ccZ23E8K.s:518    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 _ZN8std_msgs16MultiArrayLayout7getTypeEv
     /tmp/ccZ23E8K.s:534    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 $d
     /tmp/ccZ23E8K.s:541    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 $t
     /tmp/ccZ23E8K.s:546    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 _ZN8std_msgs16MultiArrayLayout6getMD5Ev
     /tmp/ccZ23E8K.s:562    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 $d
     /tmp/ccZ23E8K.s:569    .text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:574    .text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 _ZNK8std_msgs17Float32MultiArray9serializeEPh
.ARM.exidx.text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:666    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 $t
     /tmp/ccZ23E8K.s:671    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 _ZN8std_msgs17Float32MultiArray7getTypeEv
     /tmp/ccZ23E8K.s:687    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 $d
     /tmp/ccZ23E8K.s:694    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 $t
     /tmp/ccZ23E8K.s:699    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 _ZN8std_msgs17Float32MultiArray6getMD5Ev
     /tmp/ccZ23E8K.s:715    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 $d
     /tmp/ccZ23E8K.s:722    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:727    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 _ZNK8std_msgs5UInt89serializeEPh
.ARM.exidx.text._ZNK8std_msgs5UInt89serializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:753    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:758    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 _ZN8std_msgs5UInt811deserializeEPh
.ARM.exidx.text._ZN8std_msgs5UInt811deserializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:781    .text._ZN8std_msgs5UInt87getTypeEv:00000000 $t
     /tmp/ccZ23E8K.s:786    .text._ZN8std_msgs5UInt87getTypeEv:00000000 _ZN8std_msgs5UInt87getTypeEv
     /tmp/ccZ23E8K.s:802    .text._ZN8std_msgs5UInt87getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt87getTypeEv:00000000 $d
     /tmp/ccZ23E8K.s:809    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 $t
     /tmp/ccZ23E8K.s:814    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 _ZN8std_msgs5UInt86getMD5Ev
     /tmp/ccZ23E8K.s:830    .text._ZN8std_msgs5UInt86getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt86getMD5Ev:00000000 $d
     /tmp/ccZ23E8K.s:837    .text._ZN8std_msgs6Header7getTypeEv:00000000 $t
     /tmp/ccZ23E8K.s:842    .text._ZN8std_msgs6Header7getTypeEv:00000000 _ZN8std_msgs6Header7getTypeEv
     /tmp/ccZ23E8K.s:859    .text._ZN8std_msgs6Header7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header7getTypeEv:00000000 $d
     /tmp/ccZ23E8K.s:866    .text._ZN8std_msgs6Header6getMD5Ev:00000000 $t
     /tmp/ccZ23E8K.s:871    .text._ZN8std_msgs6Header6getMD5Ev:00000000 _ZN8std_msgs6Header6getMD5Ev
     /tmp/ccZ23E8K.s:887    .text._ZN8std_msgs6Header6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header6getMD5Ev:00000000 $d
     /tmp/ccZ23E8K.s:894    .text._ZN11sensor_msgs3Joy7getTypeEv:00000000 $t
     /tmp/ccZ23E8K.s:899    .text._ZN11sensor_msgs3Joy7getTypeEv:00000000 _ZN11sensor_msgs3Joy7getTypeEv
     /tmp/ccZ23E8K.s:916    .text._ZN11sensor_msgs3Joy7getTypeEv:00000004 $d
.ARM.exidx.text._ZN11sensor_msgs3Joy7getTypeEv:00000000 $d
     /tmp/ccZ23E8K.s:923    .text._ZN11sensor_msgs3Joy6getMD5Ev:00000000 $t
     /tmp/ccZ23E8K.s:928    .text._ZN11sensor_msgs3Joy6getMD5Ev:00000000 _ZN11sensor_msgs3Joy6getMD5Ev
     /tmp/ccZ23E8K.s:944    .text._ZN11sensor_msgs3Joy6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN11sensor_msgs3Joy6getMD5Ev:00000000 $d
     /tmp/ccZ23E8K.s:952    .text:00000000 $t
     /tmp/ccZ23E8K.s:957    .text:00000000 _Z8motor_cbRKN11sensor_msgs3JoyE
     /tmp/ccZ23E8K.s:1046   .text:00000064 $d
                       .ARM.exidx:00000000 $d
     /tmp/ccZ23E8K.s:1052   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $t
     /tmp/ccZ23E8K.s:1057   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $d
     /tmp/ccZ23E8K.s:1093   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $t
     /tmp/ccZ23E8K.s:1098   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $d
     /tmp/ccZ23E8K.s:1117   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $t
     /tmp/ccZ23E8K.s:1122   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
     /tmp/ccZ23E8K.s:1138   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $d
     /tmp/ccZ23E8K.s:1145   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $t
     /tmp/ccZ23E8K.s:1150   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
     /tmp/ccZ23E8K.s:1166   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $d
     /tmp/ccZ23E8K.s:1173   .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE15getEndpointTypeEv:00000000 $t
     /tmp/ccZ23E8K.s:1178   .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN11sensor_msgs3JoyEE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE15getEndpointTypeEv:00000000 $d
     /tmp/ccZ23E8K.s:1197   .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv:00000000 $t
     /tmp/ccZ23E8K.s:1202   .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv
     /tmp/ccZ23E8K.s:1218   .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE10getMsgTypeEv:00000000 $d
     /tmp/ccZ23E8K.s:1225   .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev:00000000 $t
     /tmp/ccZ23E8K.s:1230   .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev
     /tmp/ccZ23E8K.s:1246   .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE9getMsgMD5Ev:00000000 $d
     /tmp/ccZ23E8K.s:1253   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 $t
     /tmp/ccZ23E8K.s:1258   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 $d
     /tmp/ccZ23E8K.s:1278   .text:00000068 $t
     /tmp/ccZ23E8K.s:1283   .text:00000068 _Z6led_cbRKN8std_msgs5UInt8E
     /tmp/ccZ23E8K.s:1303   .text._ZNK8std_msgs6Header9serializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:1308   .text._ZNK8std_msgs6Header9serializeEPh:00000000 _ZNK8std_msgs6Header9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6Header9serializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:1407   .text._ZNK11sensor_msgs3Joy9serializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:1412   .text._ZNK11sensor_msgs3Joy9serializeEPh:00000000 _ZNK11sensor_msgs3Joy9serializeEPh
.ARM.exidx.text._ZNK11sensor_msgs3Joy9serializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:1566   .text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:1571   .text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 _ZNK8std_msgs19MultiArrayDimension9serializeEPh
.ARM.exidx.text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:1654   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:1659   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:1872   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:1877   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:1936   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:1941   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:2076   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:2081   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:2155   .text._ZN8std_msgs6Header11deserializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:2160   .text._ZN8std_msgs6Header11deserializeEPh:00000000 _ZN8std_msgs6Header11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6Header11deserializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:2273   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:2278   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:2466   .text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:2471   .text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 _ZN8std_msgs19MultiArrayDimension11deserializeEPh
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:2573   .text._ZN11sensor_msgs3Joy11deserializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:2578   .text._ZN11sensor_msgs3Joy11deserializeEPh:00000000 _ZN11sensor_msgs3Joy11deserializeEPh
.ARM.exidx.text._ZN11sensor_msgs3Joy11deserializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:2746   .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE8callbackEPh:00000000 $t
     /tmp/ccZ23E8K.s:2751   .text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE8callbackEPh:00000000 _ZN3ros10SubscriberIN11sensor_msgs3JoyEE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN11sensor_msgs3JoyEE8callbackEPh:00000000 $d
     /tmp/ccZ23E8K.s:2795   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:2800   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:3055   .text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:3060   .text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 _ZN8std_msgs16MultiArrayLayout11deserializeEPh
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:3174   .text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 $t
     /tmp/ccZ23E8K.s:3179   .text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 _ZN8std_msgs17Float32MultiArray11deserializeEPh
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 $d
     /tmp/ccZ23E8K.s:3283   .text._ZN15ArduinoHardware4initEv:00000000 $t
     /tmp/ccZ23E8K.s:3288   .text._ZN15ArduinoHardware4initEv:00000000 _ZN15ArduinoHardware4initEv
     /tmp/ccZ23E8K.s:3406   .text._ZN15ArduinoHardware4initEv:0000008c $d
.ARM.exidx.text._ZN15ArduinoHardware4initEv:00000000 $d
     /tmp/ccZ23E8K.s:3418   .text:0000006e USART1_IRQHandler
     /tmp/ccZ23E8K.s:3481   .text:000000b4 $d
     /tmp/ccZ23E8K.s:3488   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 $t
     /tmp/ccZ23E8K.s:3493   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
     /tmp/ccZ23E8K.s:3547   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000020 $d
     /tmp/ccZ23E8K.s:6019   .rodata._ZTVN14rosserial_msgs3LogE:00000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 $d
     /tmp/ccZ23E8K.s:3553   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 $t
     /tmp/ccZ23E8K.s:3558   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
     /tmp/ccZ23E8K.s:3722   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:000000bc $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 $d
     /tmp/ccZ23E8K.s:3729   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 $t
     /tmp/ccZ23E8K.s:3734   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
     /tmp/ccZ23E8K.s:3804   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000024 $d
     /tmp/ccZ23E8K.s:5995   .rodata._ZTVN8std_msgs4TimeE:00000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 $d
     /tmp/ccZ23E8K.s:3810   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 $t
     /tmp/ccZ23E8K.s:3815   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
     /tmp/ccZ23E8K.s:3977   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:000000b4 $d
     /tmp/ccZ23E8K.s:6007   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 _ZTVN14rosserial_msgs9TopicInfoE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 $d
     /tmp/ccZ23E8K.s:3984   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 $t
     /tmp/ccZ23E8K.s:3989   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
     /tmp/ccZ23E8K.s:4122   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000074 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 $d
     /tmp/ccZ23E8K.s:4130   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 $t
     /tmp/ccZ23E8K.s:4135   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
     /tmp/ccZ23E8K.s:4497   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000208 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 $d
     /tmp/ccZ23E8K.s:4504   .text.startup:00000000 $t
     /tmp/ccZ23E8K.s:4509   .text.startup:00000000 main
     /tmp/ccZ23E8K.s:4659   .text.startup:000000a0 $d
     /tmp/ccZ23E8K.s:4667   .text.startup:000000b4 $t
     /tmp/ccZ23E8K.s:5096   .text.startup:00000398 $d
     /tmp/ccZ23E8K.s:5115   .text.startup:000003e0 $t
     /tmp/ccZ23E8K.s:5232   .text.startup:00000498 $d
          .ARM.exidx.text.startup:00000000 $d
     /tmp/ccZ23E8K.s:5242   .text:000000bc $t
     /tmp/ccZ23E8K.s:5247   .text:000000bc _Z13assert_failedPhm
     /tmp/ccZ23E8K.s:5294   .text:000000e8 $d
     /tmp/ccZ23E8K.s:5301   .text.startup:000004ac $t
     /tmp/ccZ23E8K.s:5305   .text.startup:000004ac _GLOBAL__sub_I_USART_FIFO
     /tmp/ccZ23E8K.s:5720   .text.startup:000005e0 $d
     /tmp/ccZ23E8K.s:6115   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/ccZ23E8K.s:6031   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 _ZTVN14rosserial_msgs20RequestParamResponseE
     /tmp/ccZ23E8K.s:6126   .rodata._ZTVN3ros10SubscriberIN11sensor_msgs3JoyEEE:00000000 _ZTVN3ros10SubscriberIN11sensor_msgs3JoyEEE
     /tmp/ccZ23E8K.s:6103   .rodata._ZTVN11sensor_msgs3JoyE:00000000 _ZTVN11sensor_msgs3JoyE
     /tmp/ccZ23E8K.s:6091   .rodata._ZTVN8std_msgs6HeaderE:00000000 _ZTVN8std_msgs6HeaderE
     /tmp/ccZ23E8K.s:6138   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/ccZ23E8K.s:6067   .rodata._ZTVN8std_msgs17Float32MultiArrayE:00000000 _ZTVN8std_msgs17Float32MultiArrayE
     /tmp/ccZ23E8K.s:6079   .rodata._ZTVN8std_msgs5UInt8E:00000000 _ZTVN8std_msgs5UInt8E
     /tmp/ccZ23E8K.s:6055   .rodata._ZTVN8std_msgs16MultiArrayLayoutE:00000000 _ZTVN8std_msgs16MultiArrayLayoutE
     /tmp/ccZ23E8K.s:6043   .rodata._ZTVN8std_msgs19MultiArrayDimensionE:00000000 _ZTVN8std_msgs19MultiArrayDimensionE
     /tmp/ccZ23E8K.s:5750   .init_array:00000000 $d
     /tmp/ccZ23E8K.s:5756   .rodata._ZTSN3ros3MsgE:00000000 _ZTSN3ros3MsgE
     /tmp/ccZ23E8K.s:5763   .rodata._ZTIN3ros3MsgE:00000000 _ZTIN3ros3MsgE
     /tmp/ccZ23E8K.s:5760   .rodata._ZTIN3ros3MsgE:00000000 $d
     /tmp/ccZ23E8K.s:5770   .rodata._ZTSN8std_msgs4TimeE:00000000 _ZTSN8std_msgs4TimeE
     /tmp/ccZ23E8K.s:5777   .rodata._ZTIN8std_msgs4TimeE:00000000 _ZTIN8std_msgs4TimeE
     /tmp/ccZ23E8K.s:5774   .rodata._ZTIN8std_msgs4TimeE:00000000 $d
     /tmp/ccZ23E8K.s:5785   .rodata._ZTSN14rosserial_msgs9TopicInfoE:00000000 _ZTSN14rosserial_msgs9TopicInfoE
     /tmp/ccZ23E8K.s:5792   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 _ZTIN14rosserial_msgs9TopicInfoE
     /tmp/ccZ23E8K.s:5789   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/ccZ23E8K.s:5800   .rodata._ZTSN14rosserial_msgs3LogE:00000000 _ZTSN14rosserial_msgs3LogE
     /tmp/ccZ23E8K.s:5807   .rodata._ZTIN14rosserial_msgs3LogE:00000000 _ZTIN14rosserial_msgs3LogE
     /tmp/ccZ23E8K.s:5804   .rodata._ZTIN14rosserial_msgs3LogE:00000000 $d
     /tmp/ccZ23E8K.s:5815   .rodata._ZTSN14rosserial_msgs20RequestParamResponseE:00000000 _ZTSN14rosserial_msgs20RequestParamResponseE
     /tmp/ccZ23E8K.s:5822   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 _ZTIN14rosserial_msgs20RequestParamResponseE
     /tmp/ccZ23E8K.s:5819   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/ccZ23E8K.s:5830   .rodata._ZTSN3ros15NodeHandleBase_E:00000000 _ZTSN3ros15NodeHandleBase_E
     /tmp/ccZ23E8K.s:5837   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 _ZTIN3ros15NodeHandleBase_E
     /tmp/ccZ23E8K.s:5834   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 $d
     /tmp/ccZ23E8K.s:5844   .rodata._ZTSN3ros11Subscriber_E:00000000 _ZTSN3ros11Subscriber_E
     /tmp/ccZ23E8K.s:5851   .rodata._ZTIN3ros11Subscriber_E:00000000 _ZTIN3ros11Subscriber_E
     /tmp/ccZ23E8K.s:5848   .rodata._ZTIN3ros11Subscriber_E:00000000 $d
     /tmp/ccZ23E8K.s:5858   .rodata._ZTSN8std_msgs19MultiArrayDimensionE:00000000 _ZTSN8std_msgs19MultiArrayDimensionE
     /tmp/ccZ23E8K.s:5865   .rodata._ZTIN8std_msgs19MultiArrayDimensionE:00000000 _ZTIN8std_msgs19MultiArrayDimensionE
     /tmp/ccZ23E8K.s:5862   .rodata._ZTIN8std_msgs19MultiArrayDimensionE:00000000 $d
     /tmp/ccZ23E8K.s:5873   .rodata._ZTSN8std_msgs16MultiArrayLayoutE:00000000 _ZTSN8std_msgs16MultiArrayLayoutE
     /tmp/ccZ23E8K.s:5880   .rodata._ZTIN8std_msgs16MultiArrayLayoutE:00000000 _ZTIN8std_msgs16MultiArrayLayoutE
     /tmp/ccZ23E8K.s:5877   .rodata._ZTIN8std_msgs16MultiArrayLayoutE:00000000 $d
     /tmp/ccZ23E8K.s:5888   .rodata._ZTSN8std_msgs17Float32MultiArrayE:00000000 _ZTSN8std_msgs17Float32MultiArrayE
     /tmp/ccZ23E8K.s:5895   .rodata._ZTIN8std_msgs17Float32MultiArrayE:00000000 _ZTIN8std_msgs17Float32MultiArrayE
     /tmp/ccZ23E8K.s:5892   .rodata._ZTIN8std_msgs17Float32MultiArrayE:00000000 $d
     /tmp/ccZ23E8K.s:5903   .rodata._ZTSN8std_msgs5UInt8E:00000000 _ZTSN8std_msgs5UInt8E
     /tmp/ccZ23E8K.s:5910   .rodata._ZTIN8std_msgs5UInt8E:00000000 _ZTIN8std_msgs5UInt8E
     /tmp/ccZ23E8K.s:5907   .rodata._ZTIN8std_msgs5UInt8E:00000000 $d
     /tmp/ccZ23E8K.s:5918   .rodata._ZTSN8std_msgs6HeaderE:00000000 _ZTSN8std_msgs6HeaderE
     /tmp/ccZ23E8K.s:5925   .rodata._ZTIN8std_msgs6HeaderE:00000000 _ZTIN8std_msgs6HeaderE
     /tmp/ccZ23E8K.s:5922   .rodata._ZTIN8std_msgs6HeaderE:00000000 $d
     /tmp/ccZ23E8K.s:5933   .rodata._ZTSN11sensor_msgs3JoyE:00000000 _ZTSN11sensor_msgs3JoyE
     /tmp/ccZ23E8K.s:5940   .rodata._ZTIN11sensor_msgs3JoyE:00000000 _ZTIN11sensor_msgs3JoyE
     /tmp/ccZ23E8K.s:5937   .rodata._ZTIN11sensor_msgs3JoyE:00000000 $d
     /tmp/ccZ23E8K.s:5948   .rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/ccZ23E8K.s:5956   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/ccZ23E8K.s:5953   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 $d
     /tmp/ccZ23E8K.s:5964   .rodata._ZTSN3ros10SubscriberIN11sensor_msgs3JoyEEE:00000000 _ZTSN3ros10SubscriberIN11sensor_msgs3JoyEEE
     /tmp/ccZ23E8K.s:5971   .rodata._ZTIN3ros10SubscriberIN11sensor_msgs3JoyEEE:00000000 _ZTIN3ros10SubscriberIN11sensor_msgs3JoyEEE
     /tmp/ccZ23E8K.s:5968   .rodata._ZTIN3ros10SubscriberIN11sensor_msgs3JoyEEE:00000000 $d
     /tmp/ccZ23E8K.s:5979   .rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/ccZ23E8K.s:5986   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/ccZ23E8K.s:5983   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/ccZ23E8K.s:5992   .rodata._ZTVN8std_msgs4TimeE:00000000 $d
     /tmp/ccZ23E8K.s:6004   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/ccZ23E8K.s:6016   .rodata._ZTVN14rosserial_msgs3LogE:00000000 $d
     /tmp/ccZ23E8K.s:6028   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/ccZ23E8K.s:6040   .rodata._ZTVN8std_msgs19MultiArrayDimensionE:00000000 $d
     /tmp/ccZ23E8K.s:6052   .rodata._ZTVN8std_msgs16MultiArrayLayoutE:00000000 $d
     /tmp/ccZ23E8K.s:6064   .rodata._ZTVN8std_msgs17Float32MultiArrayE:00000000 $d
     /tmp/ccZ23E8K.s:6076   .rodata._ZTVN8std_msgs5UInt8E:00000000 $d
     /tmp/ccZ23E8K.s:6088   .rodata._ZTVN8std_msgs6HeaderE:00000000 $d
     /tmp/ccZ23E8K.s:6100   .rodata._ZTVN11sensor_msgs3JoyE:00000000 $d
     /tmp/ccZ23E8K.s:6112   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 $d
     /tmp/ccZ23E8K.s:6123   .rodata._ZTVN3ros10SubscriberIN11sensor_msgs3JoyEEE:00000000 $d
     /tmp/ccZ23E8K.s:6135   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/ccZ23E8K.s:6295   .bss:000009f0 str
     /tmp/ccZ23E8K.s:6304   .bss:00000a8c hello
     /tmp/ccZ23E8K.s:6287   .bss:000009d8 chatter
     /tmp/ccZ23E8K.s:6271   .bss:00000418 str_msg
     /tmp/ccZ23E8K.s:6283   .bss:000009bc led_sub
     /tmp/ccZ23E8K.s:6279   .bss:00000978 motor_sub
     /tmp/ccZ23E8K.s:6275   .bss:00000448 nh
     /tmp/ccZ23E8K.s:6255   .bss:0000000c rear_left
     /tmp/ccZ23E8K.s:6251   .bss:00000008 rear_right
     /tmp/ccZ23E8K.s:6247   .bss:00000004 front_left
     /tmp/ccZ23E8K.s:6243   .bss:00000000 front_right
     /tmp/ccZ23E8K.s:6300   .bss:00000a88 servo_right
     /tmp/ccZ23E8K.s:6291   .bss:000009ec servo_left
     /tmp/ccZ23E8K.s:6308   .bss:00000aa5 GenerateStartStatus
     /tmp/ccZ23E8K.s:6312   .bss:00000aa6 NumberOfByteToReceive
     /tmp/ccZ23E8K.s:6316   .bss:00000aa7 RxBuffer
     /tmp/ccZ23E8K.s:6320   .bss:00000aab slaveAddress
     /tmp/ccZ23E8K.s:6324   .bss:00000aac Rx_Idx
     /tmp/ccZ23E8K.s:6259   .bss:00000010 USART_CNTOUT
     /tmp/ccZ23E8K.s:6263   .bss:00000014 USART_CNTIN
     /tmp/ccZ23E8K.s:6267   .bss:00000018 USART_FIFO
     /tmp/ccZ23E8K.s:6170   .rodata:00000000 _ZN14rosserial_msgsL12REQUESTPARAME
     /tmp/ccZ23E8K.s:6239   .bss:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_unwind_cpp_pr0
__aeabi_fadd
led_set
strlen
memcpy
realloc
RCC_APB2PeriphClockCmd
GPIO_Init
USART_Cmd
USART_Init
USART_ITConfig
USART_GetITStatus
USART_ReceiveData
USART_SendData
millis
_ZN3ros16normalizeSecNSecERmS0_
RCC_Configuration
malloc
GPIO_PinRemapConfig
I2C1_Init
SysTick_Init
DEBUG_Init
LED_Init
delay
_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
_ZN13motorSettings12setRegulatorEffff
_ZN5motor11createMotorEP13motorSettings
sprintf
debug_toggle
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
