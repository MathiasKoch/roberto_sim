   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  20              		.align	1
  21              		.weak	_ZNK8std_msgs4Time9serializeEPh
  22              		.thumb
  23              		.thumb_func
  25              	_ZNK8std_msgs4Time9serializeEPh:
  26              		.fnstart
  27              	.LFB54:
  28              		.file 1 "./lib/ros_lib/std_msgs/Time.h"
   1:./lib/ros_lib/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:./lib/ros_lib/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:./lib/ros_lib/std_msgs/Time.h **** 
   4:./lib/ros_lib/std_msgs/Time.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Time.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Time.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Time.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Time.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Time.h **** 
  10:./lib/ros_lib/std_msgs/Time.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Time.h **** {
  12:./lib/ros_lib/std_msgs/Time.h **** 
  13:./lib/ros_lib/std_msgs/Time.h ****   class Time : public ros::Msg
  14:./lib/ros_lib/std_msgs/Time.h ****   {
  15:./lib/ros_lib/std_msgs/Time.h ****     public:
  16:./lib/ros_lib/std_msgs/Time.h ****       ros::Time data;
  17:./lib/ros_lib/std_msgs/Time.h **** 
  18:./lib/ros_lib/std_msgs/Time.h ****     Time():
  19:./lib/ros_lib/std_msgs/Time.h ****       data()
  20:./lib/ros_lib/std_msgs/Time.h ****     {
  21:./lib/ros_lib/std_msgs/Time.h ****     }
  22:./lib/ros_lib/std_msgs/Time.h **** 
  23:./lib/ros_lib/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  29              		.loc 1 23 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  24:./lib/ros_lib/std_msgs/Time.h ****     {
  25:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  26:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  35              		.loc 1 26 0
  36 0000 4368     		ldr	r3, [r0, #4]
  37 0002 0B70     		strb	r3, [r1]
  27:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  38              		.loc 1 27 0
  39 0004 4368     		ldr	r3, [r0, #4]
  40 0006 1B0A     		lsrs	r3, r3, #8
  41 0008 4B70     		strb	r3, [r1, #1]
  28:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  42              		.loc 1 28 0
  43 000a C388     		ldrh	r3, [r0, #6]
  44 000c 8B70     		strb	r3, [r1, #2]
  29:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  45              		.loc 1 29 0
  46 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  47 0010 CB70     		strb	r3, [r1, #3]
  48              	.LVL1:
  30:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  31:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  49              		.loc 1 31 0
  50 0012 8368     		ldr	r3, [r0, #8]
  51 0014 0B71     		strb	r3, [r1, #4]
  32:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  52              		.loc 1 32 0
  53 0016 8368     		ldr	r3, [r0, #8]
  54 0018 1B0A     		lsrs	r3, r3, #8
  55 001a 4B71     		strb	r3, [r1, #5]
  33:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  56              		.loc 1 33 0
  57 001c 4389     		ldrh	r3, [r0, #10]
  58 001e 8B71     		strb	r3, [r1, #6]
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  59              		.loc 1 34 0
  60 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  35:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  36:./lib/ros_lib/std_msgs/Time.h ****       return offset;
  37:./lib/ros_lib/std_msgs/Time.h ****     }
  61              		.loc 1 37 0
  62 0022 0820     		movs	r0, #8
  63              	.LVL2:
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  64              		.loc 1 34 0
  65 0024 CB71     		strb	r3, [r1, #7]
  66              	.LVL3:
  67              		.loc 1 37 0
  68 0026 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE54:
  71              		.cantunwind
  72              		.fnend
  74              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  75              		.align	1
  76              		.weak	_ZN8std_msgs4Time11deserializeEPh
  77              		.thumb
  78              		.thumb_func
  80              	_ZN8std_msgs4Time11deserializeEPh:
  81              		.fnstart
  82              	.LFB55:
  38:./lib/ros_lib/std_msgs/Time.h **** 
  39:./lib/ros_lib/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  83              		.loc 1 39 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL4:
  40:./lib/ros_lib/std_msgs/Time.h ****     {
  41:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  42:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  89              		.loc 1 42 0
  90 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  91 0002 4360     		str	r3, [r0, #4]
  43:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  92              		.loc 1 43 0
  93 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  94 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  95 000a 4360     		str	r3, [r0, #4]
  44:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  96              		.loc 1 44 0
  97 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  98 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  99 0012 4360     		str	r3, [r0, #4]
  45:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 100              		.loc 1 45 0
 101 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 102 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 103 001a 4360     		str	r3, [r0, #4]
 104              	.LVL5:
  46:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  47:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 105              		.loc 1 47 0
 106 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 107 001e 8360     		str	r3, [r0, #8]
  48:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 108              		.loc 1 48 0
 109 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 110 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 111 0026 8360     		str	r3, [r0, #8]
  49:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 112              		.loc 1 49 0
 113 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 114 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 115 002e 8360     		str	r3, [r0, #8]
  50:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 116              		.loc 1 50 0
 117 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 118 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 119 0036 8360     		str	r3, [r0, #8]
 120              	.LVL6:
  51:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  52:./lib/ros_lib/std_msgs/Time.h ****      return offset;
  53:./lib/ros_lib/std_msgs/Time.h ****     }
 121              		.loc 1 53 0
 122 0038 0820     		movs	r0, #8
 123              	.LVL7:
 124 003a 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE55:
 127              		.cantunwind
 128              		.fnend
 130              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 131              		.align	1
 132              		.weak	_ZN8std_msgs4Time7getTypeEv
 133              		.thumb
 134              		.thumb_func
 136              	_ZN8std_msgs4Time7getTypeEv:
 137              		.fnstart
 138              	.LFB56:
  54:./lib/ros_lib/std_msgs/Time.h **** 
  55:./lib/ros_lib/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 139              		.loc 1 55 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144              	.LVL8:
 145              		.loc 1 55 0
 146 0000 0048     		ldr	r0, .L4
 147              	.LVL9:
 148 0002 7047     		bx	lr
 149              	.L5:
 150              		.align	2
 151              	.L4:
 152 0004 00000000 		.word	.LC0
 153              		.cfi_endproc
 154              	.LFE56:
 155              		.cantunwind
 156              		.fnend
 158              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 159              		.align	1
 160              		.weak	_ZN8std_msgs4Time6getMD5Ev
 161              		.thumb
 162              		.thumb_func
 164              	_ZN8std_msgs4Time6getMD5Ev:
 165              		.fnstart
 166              	.LFB57:
  56:./lib/ros_lib/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 167              		.loc 1 56 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL10:
 173              		.loc 1 56 0
 174 0000 0048     		ldr	r0, .L7
 175              	.LVL11:
 176 0002 7047     		bx	lr
 177              	.L8:
 178              		.align	2
 179              	.L7:
 180 0004 0E000000 		.word	.LC1
 181              		.cfi_endproc
 182              	.LFE57:
 183              		.cantunwind
 184              		.fnend
 186              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 187              		.align	1
 188              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 189              		.thumb
 190              		.thumb_func
 192              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 193              		.fnstart
 194              	.LFB63:
 195              		.file 2 "./lib/ros_lib/rosserial_msgs/TopicInfo.h"
   1:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   4:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   9:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** {
  11:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  12:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   {
  14:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  29:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     TopicInfo():
  30:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_id(0),
  31:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_name(""),
  32:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       message_type(""),
  33:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       md5sum(""),
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       buffer_size(0)
  35:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  36:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  37:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  39:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  40:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  43:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  46:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  51:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  56:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  59:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
  60:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
  61:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  62:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  68:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  69:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       return offset;
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  71:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
  73:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  74:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
  77:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  78:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
  80:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  83:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
  86:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  87:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
  89:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  92:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
  95:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  96:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
  98:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 101:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 104:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 105:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 106:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
 107:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
 108:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 109:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 110:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 111:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 112:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 113:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 115:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 116:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****      return offset;
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
 118:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 119:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 196              		.loc 2 119 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL12:
 202              		.loc 2 119 0
 203 0000 0048     		ldr	r0, .L10
 204              	.LVL13:
 205 0002 7047     		bx	lr
 206              	.L11:
 207              		.align	2
 208              	.L10:
 209 0004 2F000000 		.word	.LC2
 210              		.cfi_endproc
 211              	.LFE63:
 212              		.cantunwind
 213              		.fnend
 215              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 216              		.align	1
 217              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 218              		.thumb
 219              		.thumb_func
 221              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 222              		.fnstart
 223              	.LFB64:
 120:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 224              		.loc 2 120 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL14:
 230              		.loc 2 120 0
 231 0000 0048     		ldr	r0, .L13
 232              	.LVL15:
 233 0002 7047     		bx	lr
 234              	.L14:
 235              		.align	2
 236              	.L13:
 237 0004 48000000 		.word	.LC3
 238              		.cfi_endproc
 239              	.LFE64:
 240              		.cantunwind
 241              		.fnend
 243              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 244              		.align	1
 245              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 246              		.thumb
 247              		.thumb_func
 249              	_ZN14rosserial_msgs3Log7getTypeEv:
 250              		.fnstart
 251              	.LFB70:
 252              		.file 3 "./lib/ros_lib/rosserial_msgs/Log.h"
   1:./lib/ros_lib/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:./lib/ros_lib/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:./lib/ros_lib/rosserial_msgs/Log.h **** 
   4:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/Log.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/Log.h **** 
   9:./lib/ros_lib/rosserial_msgs/Log.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/Log.h **** {
  11:./lib/ros_lib/rosserial_msgs/Log.h **** 
  12:./lib/ros_lib/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/Log.h ****   {
  14:./lib/ros_lib/rosserial_msgs/Log.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/Log.h ****       uint8_t level;
  16:./lib/ros_lib/rosserial_msgs/Log.h ****       const char* msg;
  17:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  18:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  19:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  20:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  21:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  22:./lib/ros_lib/rosserial_msgs/Log.h **** 
  23:./lib/ros_lib/rosserial_msgs/Log.h ****     Log():
  24:./lib/ros_lib/rosserial_msgs/Log.h ****       level(0),
  25:./lib/ros_lib/rosserial_msgs/Log.h ****       msg("")
  26:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  27:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  28:./lib/ros_lib/rosserial_msgs/Log.h **** 
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  31:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  33:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  36:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  38:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  39:./lib/ros_lib/rosserial_msgs/Log.h ****       return offset;
  40:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  41:./lib/ros_lib/rosserial_msgs/Log.h **** 
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
  43:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  44:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
  46:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  47:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg;
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
  49:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  50:./lib/ros_lib/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
  51:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
  52:./lib/ros_lib/rosserial_msgs/Log.h ****       }
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
  55:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  56:./lib/ros_lib/rosserial_msgs/Log.h ****      return offset;
  57:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  58:./lib/ros_lib/rosserial_msgs/Log.h **** 
  59:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 253              		.loc 3 59 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL16:
 259              		.loc 3 59 0
 260 0000 0048     		ldr	r0, .L16
 261              	.LVL17:
 262 0002 7047     		bx	lr
 263              	.L17:
 264              		.align	2
 265              	.L16:
 266 0004 69000000 		.word	.LC4
 267              		.cfi_endproc
 268              	.LFE70:
 269              		.cantunwind
 270              		.fnend
 272              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 273              		.align	1
 274              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 275              		.thumb
 276              		.thumb_func
 278              	_ZN14rosserial_msgs3Log6getMD5Ev:
 279              		.fnstart
 280              	.LFB71:
  60:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 281              		.loc 3 60 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL18:
 287              		.loc 3 60 0
 288 0000 0048     		ldr	r0, .L19
 289              	.LVL19:
 290 0002 7047     		bx	lr
 291              	.L20:
 292              		.align	2
 293              	.L19:
 294 0004 7C000000 		.word	.LC5
 295              		.cfi_endproc
 296              	.LFE71:
 297              		.cantunwind
 298              		.fnend
 300              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 301              		.align	1
 302              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 303              		.thumb
 304              		.thumb_func
 306              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 307              		.fnstart
 308              	.LFB84:
 309              		.file 4 "./lib/ros_lib/rosserial_msgs/RequestParam.h"
   1:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   4:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <string.h>
   5:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   6:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   7:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
   8:./lib/ros_lib/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
   9:./lib/ros_lib/rosserial_msgs/RequestParam.h **** {
  10:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  11:./lib/ros_lib/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  12:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  13:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  14:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  15:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  16:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       const char* name;
  17:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  18:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamRequest():
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       name("")
  20:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  21:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  22:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  24:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  25:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  28:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  30:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  31:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  33:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  35:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  36:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  37:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  39:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  42:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  45:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  46:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  48:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  49:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
  50:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  51:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  52:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   };
  53:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  54:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  55:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  56:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  57:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  58:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  59:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  60:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  61:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float st_floats;
  62:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float * floats;
  63:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  64:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* st_strings;
  65:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* * strings;
  66:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  67:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamResponse():
  68:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length(0), ints(NULL),
  69:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length(0), floats(NULL),
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length(0), strings(NULL)
  71:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  72:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  73:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  75:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  76:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  82:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  83:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
  84:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
  85:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_intsi;
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  91:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  92:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  98:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  99:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 100:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 101:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_floatsi;
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 107:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 108:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 116:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 119:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 120:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 122:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 124:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 125:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 129:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 132:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 133:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
 134:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 135:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 136:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 137:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 138:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 139:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 140:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 142:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 144:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 148:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 151:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 152:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 153:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 154:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 155:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 156:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 157:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 158:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 161:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 163:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 170:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 172:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 175:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 178:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 180:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 181:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 183:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 184:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 310              		.loc 4 184 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL20:
 316              		.loc 4 184 0
 317 0000 0048     		ldr	r0, .L22
 318              	.LVL21:
 319 0002 7047     		bx	lr
 320              	.L23:
 321              		.align	2
 322              	.L22:
 323 0004 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE84:
 326              		.cantunwind
 327              		.fnend
 329              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 330              		.align	1
 331              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 332              		.thumb
 333              		.thumb_func
 335              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 336              		.fnstart
 337              	.LFB85:
 185:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 338              		.loc 4 185 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343              	.LVL22:
 344              		.loc 4 185 0
 345 0000 0048     		ldr	r0, .L25
 346              	.LVL23:
 347 0002 7047     		bx	lr
 348              	.L26:
 349              		.align	2
 350              	.L25:
 351 0004 9D000000 		.word	.LC6
 352              		.cfi_endproc
 353              	.LFE85:
 354              		.cantunwind
 355              		.fnend
 357              		.section	.text._ZNK8std_msgs7Float329serializeEPh,"axG",%progbits,_ZNK8std_msgs7Float329serializeE
 358              		.align	1
 359              		.weak	_ZNK8std_msgs7Float329serializeEPh
 360              		.thumb
 361              		.thumb_func
 363              	_ZNK8std_msgs7Float329serializeEPh:
 364              		.fnstart
 365              	.LFB159:
 366              		.file 5 "./lib/ros_lib/std_msgs/Float32.h"
   1:./lib/ros_lib/std_msgs/Float32.h **** #ifndef _ROS_std_msgs_Float32_h
   2:./lib/ros_lib/std_msgs/Float32.h **** #define _ROS_std_msgs_Float32_h
   3:./lib/ros_lib/std_msgs/Float32.h **** 
   4:./lib/ros_lib/std_msgs/Float32.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Float32.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Float32.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Float32.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Float32.h **** 
   9:./lib/ros_lib/std_msgs/Float32.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/Float32.h **** {
  11:./lib/ros_lib/std_msgs/Float32.h **** 
  12:./lib/ros_lib/std_msgs/Float32.h ****   class Float32 : public ros::Msg
  13:./lib/ros_lib/std_msgs/Float32.h ****   {
  14:./lib/ros_lib/std_msgs/Float32.h ****     public:
  15:./lib/ros_lib/std_msgs/Float32.h ****       float data;
  16:./lib/ros_lib/std_msgs/Float32.h **** 
  17:./lib/ros_lib/std_msgs/Float32.h ****     Float32():
  18:./lib/ros_lib/std_msgs/Float32.h ****       data(0)
  19:./lib/ros_lib/std_msgs/Float32.h ****     {
  20:./lib/ros_lib/std_msgs/Float32.h ****     }
  21:./lib/ros_lib/std_msgs/Float32.h **** 
  22:./lib/ros_lib/std_msgs/Float32.h ****     virtual int serialize(unsigned char *outbuffer) const
 367              		.loc 5 22 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372              	.LVL24:
  23:./lib/ros_lib/std_msgs/Float32.h ****     {
  24:./lib/ros_lib/std_msgs/Float32.h ****       int offset = 0;
  25:./lib/ros_lib/std_msgs/Float32.h ****       union {
  26:./lib/ros_lib/std_msgs/Float32.h ****         float real;
  27:./lib/ros_lib/std_msgs/Float32.h ****         uint32_t base;
  28:./lib/ros_lib/std_msgs/Float32.h ****       } u_data;
  29:./lib/ros_lib/std_msgs/Float32.h ****       u_data.real = this->data;
  30:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 0) = (u_data.base >> (8 * 0)) & 0xFF;
 373              		.loc 5 30 0
 374 0000 4368     		ldr	r3, [r0, #4]
  31:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 1) = (u_data.base >> (8 * 1)) & 0xFF;
  32:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 2) = (u_data.base >> (8 * 2)) & 0xFF;
  33:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 3) = (u_data.base >> (8 * 3)) & 0xFF;
  34:./lib/ros_lib/std_msgs/Float32.h ****       offset += sizeof(this->data);
  35:./lib/ros_lib/std_msgs/Float32.h ****       return offset;
  36:./lib/ros_lib/std_msgs/Float32.h ****     }
 375              		.loc 5 36 0
 376 0002 0420     		movs	r0, #4
 377              	.LVL25:
  31:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 1) = (u_data.base >> (8 * 1)) & 0xFF;
 378              		.loc 5 31 0
 379 0004 1A0A     		lsrs	r2, r3, #8
  30:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 1) = (u_data.base >> (8 * 1)) & 0xFF;
 380              		.loc 5 30 0
 381 0006 0B70     		strb	r3, [r1]
 382              	.LVL26:
  31:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 1) = (u_data.base >> (8 * 1)) & 0xFF;
 383              		.loc 5 31 0
 384 0008 4A70     		strb	r2, [r1, #1]
  32:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 3) = (u_data.base >> (8 * 3)) & 0xFF;
 385              		.loc 5 32 0
 386 000a 1A0C     		lsrs	r2, r3, #16
  33:./lib/ros_lib/std_msgs/Float32.h ****       offset += sizeof(this->data);
 387              		.loc 5 33 0
 388 000c 1B0E     		lsrs	r3, r3, #24
  32:./lib/ros_lib/std_msgs/Float32.h ****       *(outbuffer + offset + 3) = (u_data.base >> (8 * 3)) & 0xFF;
 389              		.loc 5 32 0
 390 000e 8A70     		strb	r2, [r1, #2]
  33:./lib/ros_lib/std_msgs/Float32.h ****       offset += sizeof(this->data);
 391              		.loc 5 33 0
 392 0010 CB70     		strb	r3, [r1, #3]
 393              	.LVL27:
 394              		.loc 5 36 0
 395 0012 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE159:
 398              		.cantunwind
 399              		.fnend
 401              		.section	.text._ZN8std_msgs7Float3211deserializeEPh,"axG",%progbits,_ZN8std_msgs7Float3211deserial
 402              		.align	1
 403              		.weak	_ZN8std_msgs7Float3211deserializeEPh
 404              		.thumb
 405              		.thumb_func
 407              	_ZN8std_msgs7Float3211deserializeEPh:
 408              		.fnstart
 409              	.LFB160:
  37:./lib/ros_lib/std_msgs/Float32.h **** 
  38:./lib/ros_lib/std_msgs/Float32.h ****     virtual int deserialize(unsigned char *inbuffer)
 410              		.loc 5 38 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 415              	.LVL28:
  39:./lib/ros_lib/std_msgs/Float32.h ****     {
  40:./lib/ros_lib/std_msgs/Float32.h ****       int offset = 0;
  41:./lib/ros_lib/std_msgs/Float32.h ****       union {
  42:./lib/ros_lib/std_msgs/Float32.h ****         float real;
  43:./lib/ros_lib/std_msgs/Float32.h ****         uint32_t base;
  44:./lib/ros_lib/std_msgs/Float32.h ****       } u_data;
  45:./lib/ros_lib/std_msgs/Float32.h ****       u_data.base = 0;
  46:./lib/ros_lib/std_msgs/Float32.h ****       u_data.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
  47:./lib/ros_lib/std_msgs/Float32.h ****       u_data.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  48:./lib/ros_lib/std_msgs/Float32.h ****       u_data.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  49:./lib/ros_lib/std_msgs/Float32.h ****       u_data.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  50:./lib/ros_lib/std_msgs/Float32.h ****       this->data = u_data.real;
 416              		.loc 5 50 0
 417 0000 0B68     		ldr	r3, [r1]	@ unaligned
 418 0002 4360     		str	r3, [r0, #4]	@ float
 419              	.LVL29:
  51:./lib/ros_lib/std_msgs/Float32.h ****       offset += sizeof(this->data);
  52:./lib/ros_lib/std_msgs/Float32.h ****      return offset;
  53:./lib/ros_lib/std_msgs/Float32.h ****     }
 420              		.loc 5 53 0
 421 0004 0420     		movs	r0, #4
 422              	.LVL30:
 423 0006 7047     		bx	lr
 424              		.cfi_endproc
 425              	.LFE160:
 426              		.cantunwind
 427              		.fnend
 429              		.section	.text._ZN8std_msgs7Float327getTypeEv,"axG",%progbits,_ZN8std_msgs7Float327getTypeEv,comda
 430              		.align	1
 431              		.weak	_ZN8std_msgs7Float327getTypeEv
 432              		.thumb
 433              		.thumb_func
 435              	_ZN8std_msgs7Float327getTypeEv:
 436              		.fnstart
 437              	.LFB161:
  54:./lib/ros_lib/std_msgs/Float32.h **** 
  55:./lib/ros_lib/std_msgs/Float32.h ****     const char * getType(){ return "std_msgs/Float32"; };
 438              		.loc 5 55 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 443              	.LVL31:
 444              		.loc 5 55 0
 445 0000 0048     		ldr	r0, .L30
 446              	.LVL32:
 447 0002 7047     		bx	lr
 448              	.L31:
 449              		.align	2
 450              	.L30:
 451 0004 BE000000 		.word	.LC7
 452              		.cfi_endproc
 453              	.LFE161:
 454              		.cantunwind
 455              		.fnend
 457              		.section	.text._ZN8std_msgs7Float326getMD5Ev,"axG",%progbits,_ZN8std_msgs7Float326getMD5Ev,comdat
 458              		.align	1
 459              		.weak	_ZN8std_msgs7Float326getMD5Ev
 460              		.thumb
 461              		.thumb_func
 463              	_ZN8std_msgs7Float326getMD5Ev:
 464              		.fnstart
 465              	.LFB162:
  56:./lib/ros_lib/std_msgs/Float32.h ****     const char * getMD5(){ return "73fcbf46b49191e672908e50842a83d4"; };
 466              		.loc 5 56 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471              	.LVL33:
 472              		.loc 5 56 0
 473 0000 0048     		ldr	r0, .L33
 474              	.LVL34:
 475 0002 7047     		bx	lr
 476              	.L34:
 477              		.align	2
 478              	.L33:
 479 0004 CF000000 		.word	.LC8
 480              		.cfi_endproc
 481              	.LFE162:
 482              		.cantunwind
 483              		.fnend
 485              		.section	.text._ZNK8std_msgs5UInt89serializeEPh,"axG",%progbits,_ZNK8std_msgs5UInt89serializeEPh,c
 486              		.align	1
 487              		.weak	_ZNK8std_msgs5UInt89serializeEPh
 488              		.thumb
 489              		.thumb_func
 491              	_ZNK8std_msgs5UInt89serializeEPh:
 492              		.fnstart
 493              	.LFB166:
 494              		.file 6 "./lib/ros_lib/std_msgs/UInt8.h"
   1:./lib/ros_lib/std_msgs/UInt8.h **** #ifndef _ROS_std_msgs_UInt8_h
   2:./lib/ros_lib/std_msgs/UInt8.h **** #define _ROS_std_msgs_UInt8_h
   3:./lib/ros_lib/std_msgs/UInt8.h **** 
   4:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/UInt8.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/UInt8.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/UInt8.h **** 
   9:./lib/ros_lib/std_msgs/UInt8.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/UInt8.h **** {
  11:./lib/ros_lib/std_msgs/UInt8.h **** 
  12:./lib/ros_lib/std_msgs/UInt8.h ****   class UInt8 : public ros::Msg
  13:./lib/ros_lib/std_msgs/UInt8.h ****   {
  14:./lib/ros_lib/std_msgs/UInt8.h ****     public:
  15:./lib/ros_lib/std_msgs/UInt8.h ****       uint8_t data;
  16:./lib/ros_lib/std_msgs/UInt8.h **** 
  17:./lib/ros_lib/std_msgs/UInt8.h ****     UInt8():
  18:./lib/ros_lib/std_msgs/UInt8.h ****       data(0)
  19:./lib/ros_lib/std_msgs/UInt8.h ****     {
  20:./lib/ros_lib/std_msgs/UInt8.h ****     }
  21:./lib/ros_lib/std_msgs/UInt8.h **** 
  22:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int serialize(unsigned char *outbuffer) const
 495              		.loc 6 22 0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499              		@ link register save eliminated.
 500              	.LVL35:
  23:./lib/ros_lib/std_msgs/UInt8.h ****     {
  24:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  25:./lib/ros_lib/std_msgs/UInt8.h ****       *(outbuffer + offset + 0) = (this->data >> (8 * 0)) & 0xFF;
 501              		.loc 6 25 0
 502 0000 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  26:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  27:./lib/ros_lib/std_msgs/UInt8.h ****       return offset;
  28:./lib/ros_lib/std_msgs/UInt8.h ****     }
 503              		.loc 6 28 0
 504 0002 0120     		movs	r0, #1
 505              	.LVL36:
  25:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 506              		.loc 6 25 0
 507 0004 0B70     		strb	r3, [r1]
 508              	.LVL37:
 509              		.loc 6 28 0
 510 0006 7047     		bx	lr
 511              		.cfi_endproc
 512              	.LFE166:
 513              		.cantunwind
 514              		.fnend
 516              		.section	.text._ZN8std_msgs5UInt811deserializeEPh,"axG",%progbits,_ZN8std_msgs5UInt811deserializeE
 517              		.align	1
 518              		.weak	_ZN8std_msgs5UInt811deserializeEPh
 519              		.thumb
 520              		.thumb_func
 522              	_ZN8std_msgs5UInt811deserializeEPh:
 523              		.fnstart
 524              	.LFB167:
  29:./lib/ros_lib/std_msgs/UInt8.h **** 
  30:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int deserialize(unsigned char *inbuffer)
 525              		.loc 6 30 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529              		@ link register save eliminated.
 530              	.LVL38:
  31:./lib/ros_lib/std_msgs/UInt8.h ****     {
  32:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  33:./lib/ros_lib/std_msgs/UInt8.h ****       this->data =  ((uint8_t) (*(inbuffer + offset)));
 531              		.loc 6 33 0
 532 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 533 0002 0371     		strb	r3, [r0, #4]
 534              	.LVL39:
  34:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  35:./lib/ros_lib/std_msgs/UInt8.h ****      return offset;
  36:./lib/ros_lib/std_msgs/UInt8.h ****     }
 535              		.loc 6 36 0
 536 0004 0120     		movs	r0, #1
 537              	.LVL40:
 538 0006 7047     		bx	lr
 539              		.cfi_endproc
 540              	.LFE167:
 541              		.cantunwind
 542              		.fnend
 544              		.section	.text._ZN8std_msgs5UInt87getTypeEv,"axG",%progbits,_ZN8std_msgs5UInt87getTypeEv,comdat
 545              		.align	1
 546              		.weak	_ZN8std_msgs5UInt87getTypeEv
 547              		.thumb
 548              		.thumb_func
 550              	_ZN8std_msgs5UInt87getTypeEv:
 551              		.fnstart
 552              	.LFB168:
  37:./lib/ros_lib/std_msgs/UInt8.h **** 
  38:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getType(){ return "std_msgs/UInt8"; };
 553              		.loc 6 38 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              		@ link register save eliminated.
 558              	.LVL41:
 559              		.loc 6 38 0
 560 0000 0048     		ldr	r0, .L38
 561              	.LVL42:
 562 0002 7047     		bx	lr
 563              	.L39:
 564              		.align	2
 565              	.L38:
 566 0004 F0000000 		.word	.LC9
 567              		.cfi_endproc
 568              	.LFE168:
 569              		.cantunwind
 570              		.fnend
 572              		.section	.text._ZN8std_msgs5UInt86getMD5Ev,"axG",%progbits,_ZN8std_msgs5UInt86getMD5Ev,comdat
 573              		.align	1
 574              		.weak	_ZN8std_msgs5UInt86getMD5Ev
 575              		.thumb
 576              		.thumb_func
 578              	_ZN8std_msgs5UInt86getMD5Ev:
 579              		.fnstart
 580              	.LFB169:
  39:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getMD5(){ return "7c8164229e7d2c17eb95e9231617fdee"; };
 581              		.loc 6 39 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586              	.LVL43:
 587              		.loc 6 39 0
 588 0000 0048     		ldr	r0, .L41
 589              	.LVL44:
 590 0002 7047     		bx	lr
 591              	.L42:
 592              		.align	2
 593              	.L41:
 594 0004 FF000000 		.word	.LC10
 595              		.cfi_endproc
 596              	.LFE169:
 597              		.cantunwind
 598              		.fnend
 600              		.section	.text._ZN8std_msgs6Header7getTypeEv,"axG",%progbits,_ZN8std_msgs6Header7getTypeEv,comdat
 601              		.align	1
 602              		.weak	_ZN8std_msgs6Header7getTypeEv
 603              		.thumb
 604              		.thumb_func
 606              	_ZN8std_msgs6Header7getTypeEv:
 607              		.fnstart
 608              	.LFB175:
 609              		.file 7 "./lib/ros_lib/std_msgs/Header.h"
   1:./lib/ros_lib/std_msgs/Header.h **** #ifndef _ROS_std_msgs_Header_h
   2:./lib/ros_lib/std_msgs/Header.h **** #define _ROS_std_msgs_Header_h
   3:./lib/ros_lib/std_msgs/Header.h **** 
   4:./lib/ros_lib/std_msgs/Header.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Header.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Header.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Header.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Header.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Header.h **** 
  10:./lib/ros_lib/std_msgs/Header.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Header.h **** {
  12:./lib/ros_lib/std_msgs/Header.h **** 
  13:./lib/ros_lib/std_msgs/Header.h ****   class Header : public ros::Msg
  14:./lib/ros_lib/std_msgs/Header.h ****   {
  15:./lib/ros_lib/std_msgs/Header.h ****     public:
  16:./lib/ros_lib/std_msgs/Header.h ****       uint32_t seq;
  17:./lib/ros_lib/std_msgs/Header.h ****       ros::Time stamp;
  18:./lib/ros_lib/std_msgs/Header.h ****       const char* frame_id;
  19:./lib/ros_lib/std_msgs/Header.h **** 
  20:./lib/ros_lib/std_msgs/Header.h ****     Header():
  21:./lib/ros_lib/std_msgs/Header.h ****       seq(0),
  22:./lib/ros_lib/std_msgs/Header.h ****       stamp(),
  23:./lib/ros_lib/std_msgs/Header.h ****       frame_id("")
  24:./lib/ros_lib/std_msgs/Header.h ****     {
  25:./lib/ros_lib/std_msgs/Header.h ****     }
  26:./lib/ros_lib/std_msgs/Header.h **** 
  27:./lib/ros_lib/std_msgs/Header.h ****     virtual int serialize(unsigned char *outbuffer) const
  28:./lib/ros_lib/std_msgs/Header.h ****     {
  29:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->seq >> (8 * 0)) & 0xFF;
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
  33:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
  34:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
  38:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
  39:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
  43:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
  44:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  45:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id = strlen(this->frame_id);
  46:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
  47:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  48:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, this->frame_id, length_frame_id);
  49:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  50:./lib/ros_lib/std_msgs/Header.h ****       return offset;
  51:./lib/ros_lib/std_msgs/Header.h ****     }
  52:./lib/ros_lib/std_msgs/Header.h **** 
  53:./lib/ros_lib/std_msgs/Header.h ****     virtual int deserialize(unsigned char *inbuffer)
  54:./lib/ros_lib/std_msgs/Header.h ****     {
  55:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq =  ((uint32_t) (*(inbuffer + offset)));
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  59:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  60:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  64:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  65:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  69:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  70:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  71:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id;
  72:./lib/ros_lib/std_msgs/Header.h ****       memcpy(&length_frame_id, (inbuffer + offset), sizeof(uint32_t));
  73:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  74:./lib/ros_lib/std_msgs/Header.h ****       for(unsigned int k= offset; k< offset+length_frame_id; ++k){
  75:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
  76:./lib/ros_lib/std_msgs/Header.h ****       }
  77:./lib/ros_lib/std_msgs/Header.h ****       inbuffer[offset+length_frame_id-1]=0;
  78:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
  79:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  80:./lib/ros_lib/std_msgs/Header.h ****      return offset;
  81:./lib/ros_lib/std_msgs/Header.h ****     }
  82:./lib/ros_lib/std_msgs/Header.h **** 
  83:./lib/ros_lib/std_msgs/Header.h ****     const char * getType(){ return "std_msgs/Header"; };
 610              		.loc 7 83 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 0
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614              		@ link register save eliminated.
 615              	.LVL45:
 616              		.loc 7 83 0
 617 0000 0048     		ldr	r0, .L44
 618              	.LVL46:
 619 0002 7047     		bx	lr
 620              	.L45:
 621              		.align	2
 622              	.L44:
 623 0004 20010000 		.word	.LC11
 624              		.cfi_endproc
 625              	.LFE175:
 626              		.cantunwind
 627              		.fnend
 629              		.section	.text._ZN8std_msgs6Header6getMD5Ev,"axG",%progbits,_ZN8std_msgs6Header6getMD5Ev,comdat
 630              		.align	1
 631              		.weak	_ZN8std_msgs6Header6getMD5Ev
 632              		.thumb
 633              		.thumb_func
 635              	_ZN8std_msgs6Header6getMD5Ev:
 636              		.fnstart
 637              	.LFB176:
  84:./lib/ros_lib/std_msgs/Header.h ****     const char * getMD5(){ return "2176decaecbce78abc3b96ef049fabed"; };
 638              		.loc 7 84 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              		@ link register save eliminated.
 643              	.LVL47:
 644              		.loc 7 84 0
 645 0000 0048     		ldr	r0, .L47
 646              	.LVL48:
 647 0002 7047     		bx	lr
 648              	.L48:
 649              		.align	2
 650              	.L47:
 651 0004 30010000 		.word	.LC12
 652              		.cfi_endproc
 653              	.LFE176:
 654              		.cantunwind
 655              		.fnend
 657              		.section	.text._ZN12roberto_msgs10MotorState7getTypeEv,"axG",%progbits,_ZN12roberto_msgs10MotorSta
 658              		.align	1
 659              		.weak	_ZN12roberto_msgs10MotorState7getTypeEv
 660              		.thumb
 661              		.thumb_func
 663              	_ZN12roberto_msgs10MotorState7getTypeEv:
 664              		.fnstart
 665              	.LFB182:
 666              		.file 8 "./lib/ros_lib/roberto_msgs/MotorState.h"
   1:./lib/ros_lib/roberto_msgs/MotorState.h **** #ifndef _ROS_roberto_msgs_MotorState_h
   2:./lib/ros_lib/roberto_msgs/MotorState.h **** #define _ROS_roberto_msgs_MotorState_h
   3:./lib/ros_lib/roberto_msgs/MotorState.h **** 
   4:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdint.h>
   5:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <string.h>
   6:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdlib.h>
   7:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "ros/msg.h"
   8:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "std_msgs/Header.h"
   9:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  10:./lib/ros_lib/roberto_msgs/MotorState.h **** namespace roberto_msgs
  11:./lib/ros_lib/roberto_msgs/MotorState.h **** {
  12:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  13:./lib/ros_lib/roberto_msgs/MotorState.h ****   class MotorState : public ros::Msg
  14:./lib/ros_lib/roberto_msgs/MotorState.h ****   {
  15:./lib/ros_lib/roberto_msgs/MotorState.h ****     public:
  16:./lib/ros_lib/roberto_msgs/MotorState.h ****       std_msgs::Header header;
  17:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_angle;
  18:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_velocity;
  19:./lib/ros_lib/roberto_msgs/MotorState.h ****       float speed;
  20:./lib/ros_lib/roberto_msgs/MotorState.h ****       float acceleration;
  21:./lib/ros_lib/roberto_msgs/MotorState.h ****       uint8_t mode;
  22:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_AUTO = 0 };
  23:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_PIVOT = 1 };
  24:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SPIN = 2 };
  25:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SIDEWAYS = 3 };
  26:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  27:./lib/ros_lib/roberto_msgs/MotorState.h ****     MotorState():
  28:./lib/ros_lib/roberto_msgs/MotorState.h ****       header(),
  29:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_angle(0),
  30:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_velocity(0),
  31:./lib/ros_lib/roberto_msgs/MotorState.h ****       speed(0),
  32:./lib/ros_lib/roberto_msgs/MotorState.h ****       acceleration(0),
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****       mode(0)
  34:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  35:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  36:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int serialize(unsigned char *outbuffer) const
  38:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  39:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.serialize(outbuffer + offset);
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
  46:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  47:./lib/ros_lib/roberto_msgs/MotorState.h ****       return offset;
  48:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  49:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  52:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.deserialize(inbuffer + offset);
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
  59:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  60:./lib/ros_lib/roberto_msgs/MotorState.h ****      return offset;
  61:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  62:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  63:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getType(){ return "roberto_msgs/MotorState"; };
 667              		.loc 8 63 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671              		@ link register save eliminated.
 672              	.LVL49:
 673              		.loc 8 63 0
 674 0000 0048     		ldr	r0, .L50
 675              	.LVL50:
 676 0002 7047     		bx	lr
 677              	.L51:
 678              		.align	2
 679              	.L50:
 680 0004 51010000 		.word	.LC13
 681              		.cfi_endproc
 682              	.LFE182:
 683              		.cantunwind
 684              		.fnend
 686              		.section	.text._ZN12roberto_msgs10MotorState6getMD5Ev,"axG",%progbits,_ZN12roberto_msgs10MotorStat
 687              		.align	1
 688              		.weak	_ZN12roberto_msgs10MotorState6getMD5Ev
 689              		.thumb
 690              		.thumb_func
 692              	_ZN12roberto_msgs10MotorState6getMD5Ev:
 693              		.fnstart
 694              	.LFB183:
  64:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getMD5(){ return "e8b5d1162b85151c49e02b8224796c0e"; };
 695              		.loc 8 64 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 700              	.LVL51:
 701              		.loc 8 64 0
 702 0000 0048     		ldr	r0, .L53
 703              	.LVL52:
 704 0002 7047     		bx	lr
 705              	.L54:
 706              		.align	2
 707              	.L53:
 708 0004 69010000 		.word	.LC14
 709              		.cfi_endproc
 710              	.LFE183:
 711              		.cantunwind
 712              		.fnend
 714              		.text
 715              		.align	1
 716              		.global	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 717              		.thumb
 718              		.thumb_func
 720              	_Z8motor_cbRKN12roberto_msgs10MotorStateE:
 721              		.fnstart
 722              	.LFB185:
 723              		.file 9 "src/main.cpp"
   1:src/main.cpp  **** #include <stm32f10x.h>
   2:src/main.cpp  **** 
   3:src/main.cpp  **** #include <stdio.h>
   4:src/main.cpp  **** 
   5:src/main.cpp  **** #include "motor.h"
   6:src/main.cpp  **** #include "motorSettings.h"
   7:src/main.cpp  **** #include "led.h"
   8:src/main.cpp  **** #include "pid.h"
   9:src/main.cpp  **** #include "encoder.h"
  10:src/main.cpp  **** #include "stm32_time.h"
  11:src/main.cpp  **** 
  12:src/main.cpp  **** 
  13:src/main.cpp  **** #include <ros.h>
  14:src/main.cpp  **** #include <std_msgs/String.h>
  15:src/main.cpp  **** #include <std_msgs/Float32.h>
  16:src/main.cpp  **** #include <std_msgs/UInt8.h>
  17:src/main.cpp  **** #include <roberto_msgs/MotorState.h>
  18:src/main.cpp  **** 
  19:src/main.cpp  **** 
  20:src/main.cpp  **** 
  21:src/main.cpp  **** /* Private function prototypes -----------------------------------------------*/
  22:src/main.cpp  **** 
  23:src/main.cpp  **** 
  24:src/main.cpp  **** __IO uint8_t Rx_Idx = 0x00;
  25:src/main.cpp  **** uint8_t slaveAddress;
  26:src/main.cpp  **** uint8_t RxBuffer [RXBUFFERSIZE] = {0};
  27:src/main.cpp  **** __IO uint8_t NumberOfByteToReceive = 0x00;
  28:src/main.cpp  **** __IO uint8_t GenerateStartStatus = 0x00;
  29:src/main.cpp  **** 
  30:src/main.cpp  **** 
  31:src/main.cpp  **** 
  32:src/main.cpp  **** ros::NodeHandle nh;
  33:src/main.cpp  **** 
  34:src/main.cpp  **** void led_cb( const std_msgs::UInt8& cmd_msg){
  35:src/main.cpp  ****   led_set(cmd_msg.data);
  36:src/main.cpp  **** }
  37:src/main.cpp  **** 
  38:src/main.cpp  **** 
  39:src/main.cpp  **** 
  40:src/main.cpp  **** void motor_cb( const roberto_msgs::MotorState& cmd_msg){
 724              		.loc 9 40 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 729              	.LVL53:
 730 0000 7047     		bx	lr
 731              		.cfi_endproc
 732              	.LFE185:
 733              		.cantunwind
 734              		.fnend
 736              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh,"axG",%progbits,_ZN3ros10Subscri
 737              		.align	1
 738              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 739              		.thumb
 740              		.thumb_func
 742              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:
 743              		.fnstart
 744              	.LFB216:
 745              		.file 10 "./lib/ros_lib/ros/subscriber.h"
   1:./lib/ros_lib/ros/subscriber.h **** /* 
   2:./lib/ros_lib/ros/subscriber.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/subscriber.h ****  *
   4:./lib/ros_lib/ros/subscriber.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/subscriber.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/subscriber.h ****  *
   7:./lib/ros_lib/ros/subscriber.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/subscriber.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/subscriber.h ****  * are met:
  10:./lib/ros_lib/ros/subscriber.h ****  *
  11:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/subscriber.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/subscriber.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/subscriber.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/subscriber.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/subscriber.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/subscriber.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/subscriber.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/subscriber.h ****  *
  21:./lib/ros_lib/ros/subscriber.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/subscriber.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/subscriber.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/subscriber.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/subscriber.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/subscriber.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/subscriber.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/subscriber.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/subscriber.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/subscriber.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/subscriber.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/subscriber.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/subscriber.h ****  */
  34:./lib/ros_lib/ros/subscriber.h **** 
  35:./lib/ros_lib/ros/subscriber.h **** #ifndef ROS_SUBSCRIBER_H_
  36:./lib/ros_lib/ros/subscriber.h **** #define ROS_SUBSCRIBER_H_
  37:./lib/ros_lib/ros/subscriber.h **** 
  38:./lib/ros_lib/ros/subscriber.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/subscriber.h **** 
  40:./lib/ros_lib/ros/subscriber.h **** namespace ros {
  41:./lib/ros_lib/ros/subscriber.h **** 
  42:./lib/ros_lib/ros/subscriber.h ****   /* Base class for objects subscribers. */
  43:./lib/ros_lib/ros/subscriber.h ****   class Subscriber_
  44:./lib/ros_lib/ros/subscriber.h ****   {
  45:./lib/ros_lib/ros/subscriber.h ****     public:
  46:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char *data)=0;
  47:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType()=0;
  48:./lib/ros_lib/ros/subscriber.h **** 
  49:./lib/ros_lib/ros/subscriber.h ****       // id_ is set by NodeHandle when we advertise 
  50:./lib/ros_lib/ros/subscriber.h ****       int id_;
  51:./lib/ros_lib/ros/subscriber.h **** 
  52:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType()=0;
  53:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5()=0;
  54:./lib/ros_lib/ros/subscriber.h ****       const char * topic_;
  55:./lib/ros_lib/ros/subscriber.h ****   };
  56:./lib/ros_lib/ros/subscriber.h **** 
  57:./lib/ros_lib/ros/subscriber.h **** 
  58:./lib/ros_lib/ros/subscriber.h ****   /* Actual subscriber, templated on message type. */
  59:./lib/ros_lib/ros/subscriber.h ****   template<typename MsgT>
  60:./lib/ros_lib/ros/subscriber.h ****   class Subscriber: public Subscriber_{
  61:./lib/ros_lib/ros/subscriber.h ****     public:
  62:./lib/ros_lib/ros/subscriber.h ****       typedef void(*CallbackT)(const MsgT&);
  63:./lib/ros_lib/ros/subscriber.h ****       MsgT msg;
  64:./lib/ros_lib/ros/subscriber.h **** 
  65:./lib/ros_lib/ros/subscriber.h ****       Subscriber(const char * topic_name, CallbackT cb, int endpoint=rosserial_msgs::TopicInfo::ID_
  66:./lib/ros_lib/ros/subscriber.h ****         cb_(cb),
  67:./lib/ros_lib/ros/subscriber.h ****         endpoint_(endpoint)
  68:./lib/ros_lib/ros/subscriber.h ****       {
  69:./lib/ros_lib/ros/subscriber.h ****         topic_ = topic_name;
  70:./lib/ros_lib/ros/subscriber.h ****       };
  71:./lib/ros_lib/ros/subscriber.h **** 
  72:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char* data){
 746              		.loc 10 72 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              		@ link register save eliminated.
 751              	.LVL54:
 752              	.LBB150:
 753              	.LBB151:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 754              		.loc 6 33 0
 755 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 756              	.LBE151:
 757              	.LBE150:
  73:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
  74:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 758              		.loc 10 74 0
 759 0002 0C30     		adds	r0, r0, #12
 760              	.LVL55:
 761              	.LBB153:
 762              	.LBB152:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 763              		.loc 6 33 0
 764 0004 0371     		strb	r3, [r0, #4]
 765              	.LVL56:
 766              	.LBE152:
 767              	.LBE153:
 768              		.loc 10 74 0
 769 0006 8368     		ldr	r3, [r0, #8]
 770 0008 1847     		bx	r3	@ indirect register sibling call
 771              	.LVL57:
 772              		.cfi_endproc
 773              	.LFE216:
 774              		.cantunwind
 775              		.fnend
 777              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv,"axG",%progbits,_ZN3ros10
 778              		.align	1
 779              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 780              		.thumb
 781              		.thumb_func
 783              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:
 784              		.fnstart
 785              	.LFB217:
  75:./lib/ros_lib/ros/subscriber.h ****       }
  76:./lib/ros_lib/ros/subscriber.h **** 
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType(){ return this->msg.getType(); }
  78:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
  79:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 786              		.loc 10 79 0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 790              		@ link register save eliminated.
 791              	.LVL58:
 792              		.loc 10 79 0
 793 0000 8069     		ldr	r0, [r0, #24]
 794              	.LVL59:
 795 0002 7047     		bx	lr
 796              		.cfi_endproc
 797              	.LFE217:
 798              		.cantunwind
 799              		.fnend
 801              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv,"axG",%progbits,_ZN3ros10Subsc
 802              		.align	1
 803              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 804              		.thumb
 805              		.thumb_func
 807              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:
 808              		.fnstart
 809              	.LFB218:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 810              		.loc 10 77 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 0, uses_anonymous_args = 0
 814              		@ link register save eliminated.
 815              	.LVL60:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 816              		.loc 10 77 0
 817 0000 0048     		ldr	r0, .L59
 818              	.LVL61:
 819 0002 7047     		bx	lr
 820              	.L60:
 821              		.align	2
 822              	.L59:
 823 0004 F0000000 		.word	.LC9
 824              		.cfi_endproc
 825              	.LFE218:
 826              		.cantunwind
 827              		.fnend
 829              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev,"axG",%progbits,_ZN3ros10Subscri
 830              		.align	1
 831              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 832              		.thumb
 833              		.thumb_func
 835              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:
 836              		.fnstart
 837              	.LFB219:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 838              		.loc 10 78 0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842              		@ link register save eliminated.
 843              	.LVL62:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 844              		.loc 10 78 0
 845 0000 0048     		ldr	r0, .L62
 846              	.LVL63:
 847 0002 7047     		bx	lr
 848              	.L63:
 849              		.align	2
 850              	.L62:
 851 0004 FF000000 		.word	.LC10
 852              		.cfi_endproc
 853              	.LFE219:
 854              		.cantunwind
 855              		.fnend
 857              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv,"axG",%progbit
 858              		.align	1
 859              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 860              		.thumb
 861              		.thumb_func
 863              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:
 864              		.fnstart
 865              	.LFB221:
 866              		.loc 10 79 0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 0
 869              		@ frame_needed = 0, uses_anonymous_args = 0
 870              		@ link register save eliminated.
 871              	.LVL64:
 872              		.loc 10 79 0
 873 0000 C06B     		ldr	r0, [r0, #60]
 874              	.LVL65:
 875 0002 7047     		bx	lr
 876              		.cfi_endproc
 877              	.LFE221:
 878              		.cantunwind
 879              		.fnend
 881              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv,"axG",%progbits,_ZN
 882              		.align	1
 883              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 884              		.thumb
 885              		.thumb_func
 887              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:
 888              		.fnstart
 889              	.LFB222:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 890              		.loc 10 77 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 894              		@ link register save eliminated.
 895              	.LVL66:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 896              		.loc 10 77 0
 897 0000 0048     		ldr	r0, .L66
 898              	.LVL67:
 899 0002 7047     		bx	lr
 900              	.L67:
 901              		.align	2
 902              	.L66:
 903 0004 51010000 		.word	.LC13
 904              		.cfi_endproc
 905              	.LFE222:
 906              		.cantunwind
 907              		.fnend
 909              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev,"axG",%progbits,_ZN3r
 910              		.align	1
 911              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 912              		.thumb
 913              		.thumb_func
 915              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:
 916              		.fnstart
 917              	.LFB223:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 918              		.loc 10 78 0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
 922              		@ link register save eliminated.
 923              	.LVL68:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 924              		.loc 10 78 0
 925 0000 0048     		ldr	r0, .L69
 926              	.LVL69:
 927 0002 7047     		bx	lr
 928              	.L70:
 929              		.align	2
 930              	.L69:
 931 0004 69010000 		.word	.LC14
 932              		.cfi_endproc
 933              	.LFE223:
 934              		.cantunwind
 935              		.fnend
 937              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv,"axG",%pr
 938              		.align	1
 939              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
 940              		.thumb
 941              		.thumb_func
 943              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:
 944              		.fnstart
 945              	.LFB224:
 946              		.file 11 "./lib/ros_lib/ros/node_handle.h"
   1:./lib/ros_lib/ros/node_handle.h **** /*
   2:./lib/ros_lib/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/node_handle.h ****  *
   4:./lib/ros_lib/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/node_handle.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/node_handle.h ****  *
   7:./lib/ros_lib/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/node_handle.h ****  * are met:
  10:./lib/ros_lib/ros/node_handle.h ****  *
  11:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/node_handle.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/node_handle.h ****  *
  21:./lib/ros_lib/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/node_handle.h ****  */
  34:./lib/ros_lib/ros/node_handle.h **** 
  35:./lib/ros_lib/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:./lib/ros_lib/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:./lib/ros_lib/ros/node_handle.h **** 
  38:./lib/ros_lib/ros/node_handle.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/node_handle.h **** 
  40:./lib/ros_lib/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:./lib/ros_lib/ros/node_handle.h **** 
  45:./lib/ros_lib/ros/node_handle.h **** #define SYNC_SECONDS        5
  46:./lib/ros_lib/ros/node_handle.h **** 
  47:./lib/ros_lib/ros/node_handle.h **** #define MODE_FIRST_FF       0
  48:./lib/ros_lib/ros/node_handle.h **** /*
  49:./lib/ros_lib/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  50:./lib/ros_lib/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  51:./lib/ros_lib/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  52:./lib/ros_lib/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  53:./lib/ros_lib/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  54:./lib/ros_lib/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  55:./lib/ros_lib/ros/node_handle.h ****  */
  56:./lib/ros_lib/ros/node_handle.h **** #define MODE_PROTOCOL_VER   1
  57:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER1		0xff // through groovy
  58:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER2		0xfe // in hydro
  59:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER 		PROTOCOL_VER2
  60:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_L         2
  61:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_H         3
  62:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_CHECKSUM  4   // checksum for msg size received from size L and H
  63:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_L        5   // waiting for topic id
  64:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_H        6
  65:./lib/ros_lib/ros/node_handle.h **** #define MODE_MESSAGE        7
  66:./lib/ros_lib/ros/node_handle.h **** #define MODE_MSG_CHECKSUM   8   // checksum for msg and topic id
  67:./lib/ros_lib/ros/node_handle.h **** 
  68:./lib/ros_lib/ros/node_handle.h **** 
  69:./lib/ros_lib/ros/node_handle.h **** #define MSG_TIMEOUT 20  //20 milliseconds to recieve all of message data
  70:./lib/ros_lib/ros/node_handle.h **** 
  71:./lib/ros_lib/ros/node_handle.h **** #include "msg.h"
  72:./lib/ros_lib/ros/node_handle.h **** 
  73:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  74:./lib/ros_lib/ros/node_handle.h **** 
  75:./lib/ros_lib/ros/node_handle.h ****   class NodeHandleBase_{
  76:./lib/ros_lib/ros/node_handle.h ****     public:
  77:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg* msg)=0;
  78:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce()=0;
  79:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected()=0;
  80:./lib/ros_lib/ros/node_handle.h ****     };
  81:./lib/ros_lib/ros/node_handle.h **** }
  82:./lib/ros_lib/ros/node_handle.h **** 
  83:./lib/ros_lib/ros/node_handle.h **** #include "publisher.h"
  84:./lib/ros_lib/ros/node_handle.h **** #include "subscriber.h"
  85:./lib/ros_lib/ros/node_handle.h **** #include "service_server.h"
  86:./lib/ros_lib/ros/node_handle.h **** #include "service_client.h"
  87:./lib/ros_lib/ros/node_handle.h **** 
  88:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  89:./lib/ros_lib/ros/node_handle.h **** 
  90:./lib/ros_lib/ros/node_handle.h ****   using rosserial_msgs::TopicInfo;
  91:./lib/ros_lib/ros/node_handle.h **** 
  92:./lib/ros_lib/ros/node_handle.h ****   /* Node Handle */
  93:./lib/ros_lib/ros/node_handle.h ****   template<class Hardware,
  94:./lib/ros_lib/ros/node_handle.h ****            int MAX_SUBSCRIBERS=25,
  95:./lib/ros_lib/ros/node_handle.h ****            int MAX_PUBLISHERS=25,
  96:./lib/ros_lib/ros/node_handle.h ****            int INPUT_SIZE=512,
  97:./lib/ros_lib/ros/node_handle.h ****            int OUTPUT_SIZE=512>
  98:./lib/ros_lib/ros/node_handle.h ****   class NodeHandle_ : public NodeHandleBase_
  99:./lib/ros_lib/ros/node_handle.h ****   {
 100:./lib/ros_lib/ros/node_handle.h ****     protected:
 101:./lib/ros_lib/ros/node_handle.h ****       Hardware hardware_;
 102:./lib/ros_lib/ros/node_handle.h **** 
 103:./lib/ros_lib/ros/node_handle.h ****       /* time used for syncing */
 104:./lib/ros_lib/ros/node_handle.h ****       uint32_t rt_time;
 105:./lib/ros_lib/ros/node_handle.h **** 
 106:./lib/ros_lib/ros/node_handle.h ****       /* used for computing current time */
 107:./lib/ros_lib/ros/node_handle.h ****       uint32_t sec_offset, nsec_offset;
 108:./lib/ros_lib/ros/node_handle.h **** 
 109:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_in[INPUT_SIZE];
 110:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_out[OUTPUT_SIZE];
 111:./lib/ros_lib/ros/node_handle.h **** 
 112:./lib/ros_lib/ros/node_handle.h ****       Publisher * publishers[MAX_PUBLISHERS];
 113:./lib/ros_lib/ros/node_handle.h ****       Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 114:./lib/ros_lib/ros/node_handle.h **** 
 115:./lib/ros_lib/ros/node_handle.h ****       /*
 116:./lib/ros_lib/ros/node_handle.h ****        * Setup Functions
 117:./lib/ros_lib/ros/node_handle.h ****        */
 118:./lib/ros_lib/ros/node_handle.h ****     public:
 119:./lib/ros_lib/ros/node_handle.h ****       NodeHandle_() : configured_(false) {
 120:./lib/ros_lib/ros/node_handle.h **** 
 121:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_PUBLISHERS; i++)
 122:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 123:./lib/ros_lib/ros/node_handle.h **** 
 124:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_SUBSCRIBERS; i++)
 125:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 126:./lib/ros_lib/ros/node_handle.h **** 
 127:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< INPUT_SIZE; i++)
 128:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 129:./lib/ros_lib/ros/node_handle.h **** 
 130:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< OUTPUT_SIZE; i++)
 131:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 132:./lib/ros_lib/ros/node_handle.h **** 
 133:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 134:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 135:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats_length = 0;
 136:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats = NULL;
 137:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 138:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 139:./lib/ros_lib/ros/node_handle.h ****       }
 140:./lib/ros_lib/ros/node_handle.h **** 
 141:./lib/ros_lib/ros/node_handle.h ****       Hardware* getHardware(){
 142:./lib/ros_lib/ros/node_handle.h ****         return &hardware_;
 143:./lib/ros_lib/ros/node_handle.h ****       }
 144:./lib/ros_lib/ros/node_handle.h **** 
 145:./lib/ros_lib/ros/node_handle.h ****       /* Start serial, initialize buffers */
 146:./lib/ros_lib/ros/node_handle.h ****       void initNode(){
 147:./lib/ros_lib/ros/node_handle.h ****         hardware_.init();
 148:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 149:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 150:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 151:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 152:./lib/ros_lib/ros/node_handle.h ****       };
 153:./lib/ros_lib/ros/node_handle.h **** 
 154:./lib/ros_lib/ros/node_handle.h ****       /* Start a named port, which may be network server IP, initialize buffers */
 155:./lib/ros_lib/ros/node_handle.h ****       void initNode(char *portName){
 156:./lib/ros_lib/ros/node_handle.h ****         hardware_.init(portName);
 157:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 158:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 159:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 160:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 161:./lib/ros_lib/ros/node_handle.h ****       };
 162:./lib/ros_lib/ros/node_handle.h **** 
 163:./lib/ros_lib/ros/node_handle.h ****     protected:
 164:./lib/ros_lib/ros/node_handle.h ****       //State machine variables for spinOnce
 165:./lib/ros_lib/ros/node_handle.h ****       int mode_;
 166:./lib/ros_lib/ros/node_handle.h ****       int bytes_;
 167:./lib/ros_lib/ros/node_handle.h ****       int topic_;
 168:./lib/ros_lib/ros/node_handle.h ****       int index_;
 169:./lib/ros_lib/ros/node_handle.h ****       int checksum_;
 170:./lib/ros_lib/ros/node_handle.h **** 
 171:./lib/ros_lib/ros/node_handle.h ****       bool configured_;
 172:./lib/ros_lib/ros/node_handle.h **** 
 173:./lib/ros_lib/ros/node_handle.h ****       /* used for syncing the time */
 174:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_time;
 175:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_receive_time;
 176:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_msg_timeout_time;
 177:./lib/ros_lib/ros/node_handle.h **** 
 178:./lib/ros_lib/ros/node_handle.h ****     public:
 179:./lib/ros_lib/ros/node_handle.h ****       /* This function goes in your loop() function, it handles
 180:./lib/ros_lib/ros/node_handle.h ****        *  serial input and callbacks for subscribers.
 181:./lib/ros_lib/ros/node_handle.h ****        */
 182:./lib/ros_lib/ros/node_handle.h **** 
 183:./lib/ros_lib/ros/node_handle.h **** 
 184:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce(){
 185:./lib/ros_lib/ros/node_handle.h **** 
 186:./lib/ros_lib/ros/node_handle.h ****         /* restart if timed out */
 187:./lib/ros_lib/ros/node_handle.h ****         uint32_t c_time = hardware_.time();
 188:./lib/ros_lib/ros/node_handle.h ****         if( (c_time - last_sync_receive_time) > (SYNC_SECONDS*2200) ){
 189:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 190:./lib/ros_lib/ros/node_handle.h ****          }
 191:./lib/ros_lib/ros/node_handle.h **** 
 192:./lib/ros_lib/ros/node_handle.h ****         /* reset if message has timed out */
 193:./lib/ros_lib/ros/node_handle.h ****         if ( mode_ != MODE_FIRST_FF){
 194:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 195:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 196:./lib/ros_lib/ros/node_handle.h ****           }
 197:./lib/ros_lib/ros/node_handle.h ****         }
 198:./lib/ros_lib/ros/node_handle.h **** 
 199:./lib/ros_lib/ros/node_handle.h ****         /* while available buffer, read data */
 200:./lib/ros_lib/ros/node_handle.h ****         while( true )
 201:./lib/ros_lib/ros/node_handle.h ****         {
 202:./lib/ros_lib/ros/node_handle.h ****           int data = hardware_.read();
 203:./lib/ros_lib/ros/node_handle.h ****           if( data < 0 )
 204:./lib/ros_lib/ros/node_handle.h ****             break;
 205:./lib/ros_lib/ros/node_handle.h ****           checksum_ += data;
 206:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 207:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 208:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 209:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 210:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 211:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 212:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 213:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 214:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 215:./lib/ros_lib/ros/node_handle.h ****             }
 216:./lib/ros_lib/ros/node_handle.h ****             else if( hardware_.time() - c_time > (SYNC_SECONDS)){
 217:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 218:./lib/ros_lib/ros/node_handle.h ****               configured_=false;
 219:./lib/ros_lib/ros/node_handle.h ****               return -2;
 220:./lib/ros_lib/ros/node_handle.h ****             }
 221:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_PROTOCOL_VER ){
 222:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 223:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 224:./lib/ros_lib/ros/node_handle.h ****             }else{
 225:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_FIRST_FF;
 226:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 227:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 228:./lib/ros_lib/ros/node_handle.h ****             }
 229:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_SIZE_L ){   /* bottom half of message size */
 230:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 231:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 232:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 233:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 234:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_H ){   /* top half of message size */
 235:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 236:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 237:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 238:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 239:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 240:./lib/ros_lib/ros/node_handle.h **** 	    else
 241:./lib/ros_lib/ros/node_handle.h **** 	      mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 242:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 243:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 244:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 245:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 246:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 247:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 248:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 249:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 250:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 251:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_MSG_CHECKSUM ){ /* do checksum */
 252:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 253:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 254:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 255:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 256:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 258:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 259:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 260:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 261:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 262:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 263:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 264:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 265:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 266:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 267:./lib/ros_lib/ros/node_handle.h ****               }else{
 268:./lib/ros_lib/ros/node_handle.h ****                 if(subscribers[topic_-100])
 269:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 270:./lib/ros_lib/ros/node_handle.h ****               }
 271:./lib/ros_lib/ros/node_handle.h ****             }
 272:./lib/ros_lib/ros/node_handle.h ****           }
 273:./lib/ros_lib/ros/node_handle.h ****         }
 274:./lib/ros_lib/ros/node_handle.h **** 
 275:./lib/ros_lib/ros/node_handle.h ****         /* occasionally sync time */
 276:./lib/ros_lib/ros/node_handle.h ****         if( configured_ && ((c_time-last_sync_time) > (SYNC_SECONDS*500) )){
 277:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 278:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 279:./lib/ros_lib/ros/node_handle.h ****         }
 280:./lib/ros_lib/ros/node_handle.h **** 
 281:./lib/ros_lib/ros/node_handle.h ****         return 0;
 282:./lib/ros_lib/ros/node_handle.h ****       }
 283:./lib/ros_lib/ros/node_handle.h **** 
 284:./lib/ros_lib/ros/node_handle.h **** 
 285:./lib/ros_lib/ros/node_handle.h ****       /* Are we connected to the PC? */
 286:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected() {
 947              		.loc 11 286 0
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 0
 950              		@ frame_needed = 0, uses_anonymous_args = 0
 951              		@ link register save eliminated.
 952              	.LVL70:
 287:./lib/ros_lib/ros/node_handle.h ****         return configured_;
 288:./lib/ros_lib/ros/node_handle.h ****       };
 953              		.loc 11 288 0
 954 0000 90F8F404 		ldrb	r0, [r0, #1268]	@ zero_extendqisi2
 955              	.LVL71:
 956 0004 7047     		bx	lr
 957              		.cfi_endproc
 958              	.LFE224:
 959              		.cantunwind
 960              		.fnend
 962              		.text
 963              		.align	1
 964              		.global	_Z6led_cbRKN8std_msgs5UInt8E
 965              		.thumb
 966              		.thumb_func
 968              	_Z6led_cbRKN8std_msgs5UInt8E:
 969              		.fnstart
 970              	.LFB184:
  34:src/main.cpp  ****   led_set(cmd_msg.data);
 971              		.loc 9 34 0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 0
 974              		@ frame_needed = 0, uses_anonymous_args = 0
 975              		@ link register save eliminated.
 976              	.LVL72:
  35:src/main.cpp  **** }
 977              		.loc 9 35 0
 978 0002 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 979              	.LVL73:
 980 0004 FFF7FEBF 		b	led_set
 981              	.LVL74:
 982              		.cfi_endproc
 983              	.LFE184:
 984              		.cantunwind
 985              		.fnend
 987              		.section	.text._ZNK8std_msgs6Header9serializeEPh,"axG",%progbits,_ZNK8std_msgs6Header9serializeEPh
 988              		.align	1
 989              		.weak	_ZNK8std_msgs6Header9serializeEPh
 990              		.thumb
 991              		.thumb_func
 993              	_ZNK8std_msgs6Header9serializeEPh:
 994              		.fnstart
 995              	.LFB173:
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 996              		.loc 7 27 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 8
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000              	.LVL75:
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1001              		.loc 7 30 0
 1002 0000 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1003              		.loc 7 27 0
 1004 0002 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1005              	.LCFI0:
 1006              		.cfi_def_cfa_offset 24
 1007              		.cfi_offset 4, -16
 1008              		.cfi_offset 5, -12
 1009              		.cfi_offset 6, -8
 1010              		.cfi_offset 14, -4
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1011              		.loc 7 30 0
 1012 0004 0B70     		strb	r3, [r1]
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1013              		.loc 7 31 0
 1014 0006 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1015              		.loc 7 27 0
 1016 0008 0546     		mov	r5, r0
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1017              		.loc 7 31 0
 1018 000a 1B0A     		lsrs	r3, r3, #8
 1019 000c 4B70     		strb	r3, [r1, #1]
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1020              		.loc 7 32 0
 1021 000e C388     		ldrh	r3, [r0, #6]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1022              		.loc 7 27 0
 1023 0010 0C46     		mov	r4, r1
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1024              		.loc 7 32 0
 1025 0012 8B70     		strb	r3, [r1, #2]
  33:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1026              		.loc 7 33 0
 1027 0014 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 1028 0016 CB70     		strb	r3, [r1, #3]
 1029              	.LVL76:
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 1030              		.loc 7 35 0
 1031 0018 8368     		ldr	r3, [r0, #8]
 1032 001a 0B71     		strb	r3, [r1, #4]
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 1033              		.loc 7 36 0
 1034 001c 8368     		ldr	r3, [r0, #8]
 1035 001e 1B0A     		lsrs	r3, r3, #8
 1036 0020 4B71     		strb	r3, [r1, #5]
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 1037              		.loc 7 37 0
 1038 0022 4389     		ldrh	r3, [r0, #10]
 1039 0024 8B71     		strb	r3, [r1, #6]
  38:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1040              		.loc 7 38 0
 1041 0026 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1042 0028 CB71     		strb	r3, [r1, #7]
 1043              	.LVL77:
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 1044              		.loc 7 40 0
 1045 002a C368     		ldr	r3, [r0, #12]
 1046 002c 0B72     		strb	r3, [r1, #8]
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 1047              		.loc 7 41 0
 1048 002e C368     		ldr	r3, [r0, #12]
 1049 0030 1B0A     		lsrs	r3, r3, #8
 1050 0032 4B72     		strb	r3, [r1, #9]
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 1051              		.loc 7 42 0
 1052 0034 C389     		ldrh	r3, [r0, #14]
 1053 0036 8B72     		strb	r3, [r1, #10]
  43:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1054              		.loc 7 43 0
 1055 0038 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 1056 003a CB72     		strb	r3, [r1, #11]
 1057              	.LVL78:
  45:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 1058              		.loc 7 45 0
 1059 003c 0069     		ldr	r0, [r0, #16]
 1060              	.LVL79:
 1061 003e FFF7FEFF 		bl	strlen
 1062              	.LVL80:
 1063 0042 0646     		mov	r6, r0
 1064 0044 02AB     		add	r3, sp, #8
 1065 0046 43F8040D 		str	r0, [r3, #-4]!
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1066              		.loc 7 46 0
 1067 004a 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1068              		.loc 7 48 0
 1069 004c 3246     		mov	r2, r6
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1070              		.loc 7 46 0
 1071 004e E060     		str	r0, [r4, #12]	@ unaligned
 1072              	.LVL81:
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1073              		.loc 7 48 0
 1074 0050 2969     		ldr	r1, [r5, #16]
 1075 0052 04F11000 		add	r0, r4, #16
 1076 0056 FFF7FEFF 		bl	memcpy
 1077              	.LVL82:
  51:./lib/ros_lib/std_msgs/Header.h **** 
 1078              		.loc 7 51 0
 1079 005a 06F11000 		add	r0, r6, #16
 1080              	.LVL83:
 1081 005e 02B0     		add	sp, sp, #8
 1082              	.LCFI1:
 1083              		.cfi_def_cfa_offset 16
 1084              		@ sp needed
 1085 0060 70BD     		pop	{r4, r5, r6, pc}
 1086              		.cfi_endproc
 1087              	.LFE173:
 1088              		.cantunwind
 1089              		.fnend
 1091              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 1092              		.align	1
 1093              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1094              		.thumb
 1095              		.thumb_func
 1097              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1098              		.fnstart
 1099              	.LFB82:
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1100              		.loc 4 74 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 8
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              	.LVL84:
 1105 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 1106              	.LCFI2:
 1107              		.cfi_def_cfa_offset 40
 1108              		.cfi_offset 4, -28
 1109              		.cfi_offset 5, -24
 1110              		.cfi_offset 6, -20
 1111              		.cfi_offset 7, -16
 1112              		.cfi_offset 8, -12
 1113              		.cfi_offset 9, -8
 1114              		.cfi_offset 14, -4
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1115              		.loc 4 77 0
 1116 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1117              		.loc 4 74 0
 1118 0006 0746     		mov	r7, r0
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1119              		.loc 4 77 0
 1120 0008 0B70     		strb	r3, [r1]
 1121              	.LVL85:
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1122              		.loc 4 78 0
 1123 000a 0023     		movs	r3, #0
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1124              		.loc 4 80 0
 1125 000c 1A46     		mov	r2, r3
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1126              		.loc 4 74 0
 1127 000e 0C46     		mov	r4, r1
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1128              		.loc 4 78 0
 1129 0010 4B70     		strb	r3, [r1, #1]
 1130              	.LVL86:
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1131              		.loc 4 79 0
 1132 0012 8B70     		strb	r3, [r1, #2]
 1133              	.LVL87:
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1134              		.loc 4 80 0
 1135 0014 CB70     		strb	r3, [r1, #3]
 1136              	.LVL88:
 1137 0016 0431     		adds	r1, r1, #4
 1138              	.LVL89:
 1139              	.L76:
 1140              	.LBB154:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1141              		.loc 4 81 0 discriminator 3
 1142 0018 3D79     		ldrb	r5, [r7, #4]	@ zero_extendqisi2
 1143 001a 501C     		adds	r0, r2, #1
 1144 001c D2B2     		uxtb	r2, r2
 1145 001e 9542     		cmp	r5, r2
 1146 0020 A1EB0403 		sub	r3, r1, r4
 1147              	.LVL90:
 1148 0024 01F10401 		add	r1, r1, #4
 1149 0028 0FD9     		bls	.L75
 1150              	.LBB155:
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1151              		.loc 4 86 0 discriminator 2
 1152 002a FB68     		ldr	r3, [r7, #12]
 1153              	.LVL91:
 1154 002c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1155              	.LVL92:
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1156              		.loc 4 88 0 discriminator 2
 1157 0030 1A0A     		lsrs	r2, r3, #8
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1158              		.loc 4 87 0 discriminator 2
 1159 0032 01F8043C 		strb	r3, [r1, #-4]
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1160              		.loc 4 88 0 discriminator 2
 1161 0036 01F8032C 		strb	r2, [r1, #-3]
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1162              		.loc 4 89 0 discriminator 2
 1163 003a 1A0C     		lsrs	r2, r3, #16
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1164              		.loc 4 90 0 discriminator 2
 1165 003c 1B0E     		lsrs	r3, r3, #24
 1166              	.LVL93:
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1167              		.loc 4 89 0 discriminator 2
 1168 003e 01F8022C 		strb	r2, [r1, #-2]
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1169              		.loc 4 90 0 discriminator 2
 1170 0042 01F8013C 		strb	r3, [r1, #-1]
 1171              	.LVL94:
 1172              	.LBE155:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1173              		.loc 4 81 0 discriminator 2
 1174 0046 0246     		mov	r2, r0
 1175 0048 E6E7     		b	.L76
 1176              	.LVL95:
 1177              	.L75:
 1178              	.LBE154:
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1179              		.loc 4 93 0
 1180 004a 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1181              		.loc 4 94 0
 1182 004c E118     		adds	r1, r4, r3
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1183              		.loc 4 93 0
 1184 004e E254     		strb	r2, [r4, r3]
 1185              	.LVL96:
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1186              		.loc 4 94 0
 1187 0050 0022     		movs	r2, #0
 1188 0052 0433     		adds	r3, r3, #4
 1189              	.LVL97:
 1190 0054 4A70     		strb	r2, [r1, #1]
 1191              	.LVL98:
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1192              		.loc 4 95 0
 1193 0056 8A70     		strb	r2, [r1, #2]
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1194              		.loc 4 96 0
 1195 0058 CA70     		strb	r2, [r1, #3]
 1196              	.LVL99:
 1197 005a 2344     		add	r3, r3, r4
 1198              	.LVL100:
 1199              	.L78:
 1200              	.LBB156:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1201              		.loc 4 97 0 discriminator 3
 1202 005c 387C     		ldrb	r0, [r7, #16]	@ zero_extendqisi2
 1203 005e 511C     		adds	r1, r2, #1
 1204 0060 D2B2     		uxtb	r2, r2
 1205 0062 9042     		cmp	r0, r2
 1206 0064 A3EB0406 		sub	r6, r3, r4
 1207              	.LVL101:
 1208 0068 03F10403 		add	r3, r3, #4
 1209 006c 0FD9     		bls	.L77
 1210              	.LBB157:
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1211              		.loc 4 102 0 discriminator 2
 1212 006e B869     		ldr	r0, [r7, #24]
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1213              		.loc 4 103 0 discriminator 2
 1214 0070 50F82220 		ldr	r2, [r0, r2, lsl #2]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1215              		.loc 4 104 0 discriminator 2
 1216 0074 100A     		lsrs	r0, r2, #8
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1217              		.loc 4 103 0 discriminator 2
 1218 0076 03F8042C 		strb	r2, [r3, #-4]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1219              		.loc 4 104 0 discriminator 2
 1220 007a 03F8030C 		strb	r0, [r3, #-3]
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1221              		.loc 4 105 0 discriminator 2
 1222 007e 100C     		lsrs	r0, r2, #16
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1223              		.loc 4 106 0 discriminator 2
 1224 0080 120E     		lsrs	r2, r2, #24
 1225 0082 03F8012C 		strb	r2, [r3, #-1]
 1226              	.LVL102:
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1227              		.loc 4 105 0 discriminator 2
 1228 0086 03F8020C 		strb	r0, [r3, #-2]
 1229              	.LBE157:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1230              		.loc 4 97 0 discriminator 2
 1231 008a 0A46     		mov	r2, r1
 1232 008c E6E7     		b	.L78
 1233              	.LVL103:
 1234              	.L77:
 1235              	.LBE156:
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1236              		.loc 4 109 0
 1237 008e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1238              		.loc 4 110 0
 1239 0090 A219     		adds	r2, r4, r6
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1240              		.loc 4 109 0
 1241 0092 A355     		strb	r3, [r4, r6]
 1242              	.LVL104:
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1243              		.loc 4 110 0
 1244 0094 0023     		movs	r3, #0
 1245 0096 5370     		strb	r3, [r2, #1]
 1246              	.LVL105:
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1247              		.loc 4 111 0
 1248 0098 9370     		strb	r3, [r2, #2]
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1249              		.loc 4 112 0
 1250 009a 0436     		adds	r6, r6, #4
 1251              	.LVL106:
 1252 009c D370     		strb	r3, [r2, #3]
 1253              	.LVL107:
 1254              	.L80:
 1255              	.LBB158:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1256              		.loc 4 113 0 discriminator 3
 1257 009e 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 1258 00a0 DDB2     		uxtb	r5, r3
 1259 00a2 AA42     		cmp	r2, r5
 1260 00a4 03F10109 		add	r9, r3, #1
 1261 00a8 15D9     		bls	.L79
 1262              	.LBB159:
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1263              		.loc 4 114 0 discriminator 2
 1264 00aa 7B6A     		ldr	r3, [r7, #36]
 1265              	.LVL108:
 1266 00ac 53F82500 		ldr	r0, [r3, r5, lsl #2]
 1267 00b0 FFF7FEFF 		bl	strlen
 1268              	.LVL109:
 1269 00b4 8046     		mov	r8, r0
 1270 00b6 02AB     		add	r3, sp, #8
 1271 00b8 43F8040D 		str	r0, [r3, #-4]!
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1272              		.loc 4 115 0 discriminator 2
 1273 00bc 1868     		ldr	r0, [r3]	@ unaligned
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1274              		.loc 4 117 0 discriminator 2
 1275 00be 4246     		mov	r2, r8
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1276              		.loc 4 115 0 discriminator 2
 1277 00c0 A051     		str	r0, [r4, r6]	@ unaligned
 1278              	.LVL110:
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1279              		.loc 4 117 0 discriminator 2
 1280 00c2 7B6A     		ldr	r3, [r7, #36]
 1281 00c4 0436     		adds	r6, r6, #4
 1282              	.LVL111:
 1283 00c6 53F82510 		ldr	r1, [r3, r5, lsl #2]
 1284 00ca A019     		adds	r0, r4, r6
 1285 00cc FFF7FEFF 		bl	memcpy
 1286              	.LVL112:
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 1287              		.loc 4 118 0 discriminator 2
 1288 00d0 4644     		add	r6, r6, r8
 1289              	.LVL113:
 1290              	.LBE159:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1291              		.loc 4 113 0 discriminator 2
 1292 00d2 4B46     		mov	r3, r9
 1293 00d4 E3E7     		b	.L80
 1294              	.LVL114:
 1295              	.L79:
 1296              	.LBE158:
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 1297              		.loc 4 121 0
 1298 00d6 3046     		mov	r0, r6
 1299 00d8 03B0     		add	sp, sp, #12
 1300              	.LCFI3:
 1301              		.cfi_def_cfa_offset 28
 1302              		@ sp needed
 1303 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1304              		.cfi_endproc
 1305              	.LFE82:
 1306              		.cantunwind
 1307              		.fnend
 1309              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 1310              		.align	1
 1311              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1312              		.thumb
 1313              		.thumb_func
 1315              	_ZNK14rosserial_msgs3Log9serializeEPh:
 1316              		.fnstart
 1317              	.LFB68:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1318              		.loc 3 29 0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 8
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
 1322              	.LVL115:
 1323 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1324              	.LCFI4:
 1325              		.cfi_def_cfa_offset 24
 1326              		.cfi_offset 4, -16
 1327              		.cfi_offset 5, -12
 1328              		.cfi_offset 6, -8
 1329              		.cfi_offset 14, -4
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1330              		.loc 3 32 0
 1331 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1332              		.loc 3 29 0
 1333 0004 0646     		mov	r6, r0
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1334              		.loc 3 32 0
 1335 0006 0B70     		strb	r3, [r1]
 1336              	.LVL116:
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1337              		.loc 3 34 0
 1338 0008 8068     		ldr	r0, [r0, #8]
 1339              	.LVL117:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1340              		.loc 3 29 0
 1341 000a 0D46     		mov	r5, r1
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1342              		.loc 3 34 0
 1343 000c FFF7FEFF 		bl	strlen
 1344              	.LVL118:
 1345 0010 0446     		mov	r4, r0
 1346 0012 02AB     		add	r3, sp, #8
 1347 0014 43F8040D 		str	r0, [r3, #-4]!
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1348              		.loc 3 35 0
 1349 0018 1868     		ldr	r0, [r3]	@ unaligned
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1350              		.loc 3 37 0
 1351 001a 2246     		mov	r2, r4
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1352              		.loc 3 35 0
 1353 001c C5F80100 		str	r0, [r5, #1]	@ unaligned
 1354              	.LVL119:
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1355              		.loc 3 37 0
 1356 0020 B168     		ldr	r1, [r6, #8]
 1357 0022 681D     		adds	r0, r5, #5
 1358 0024 FFF7FEFF 		bl	memcpy
 1359              	.LVL120:
  40:./lib/ros_lib/rosserial_msgs/Log.h **** 
 1360              		.loc 3 40 0
 1361 0028 601D     		adds	r0, r4, #5
 1362              	.LVL121:
 1363 002a 02B0     		add	sp, sp, #8
 1364              	.LCFI5:
 1365              		.cfi_def_cfa_offset 16
 1366              		@ sp needed
 1367 002c 70BD     		pop	{r4, r5, r6, pc}
 1368              		.cfi_endproc
 1369              	.LFE68:
 1370              		.cantunwind
 1371              		.fnend
 1373              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 1374              		.align	1
 1375              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 1376              		.thumb
 1377              		.thumb_func
 1379              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 1380              		.fnstart
 1381              	.LFB61:
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1382              		.loc 2 38 0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 16
 1385              		@ frame_needed = 0, uses_anonymous_args = 0
 1386              	.LVL122:
 1387 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 1388              	.LCFI6:
 1389              		.cfi_def_cfa_offset 40
 1390              		.cfi_offset 4, -24
 1391              		.cfi_offset 5, -20
 1392              		.cfi_offset 6, -16
 1393              		.cfi_offset 7, -12
 1394              		.cfi_offset 8, -8
 1395              		.cfi_offset 14, -4
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1396              		.loc 2 41 0
 1397 0004 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1398              		.loc 2 38 0
 1399 0006 0646     		mov	r6, r0
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1400              		.loc 2 41 0
 1401 0008 0B70     		strb	r3, [r1]
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1402              		.loc 2 42 0
 1403 000a 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1404              		.loc 2 38 0
 1405 000c 0D46     		mov	r5, r1
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1406              		.loc 2 42 0
 1407 000e 1B0A     		lsrs	r3, r3, #8
 1408 0010 4B70     		strb	r3, [r1, #1]
 1409              	.LVL123:
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1410              		.loc 2 44 0
 1411 0012 8068     		ldr	r0, [r0, #8]
 1412              	.LVL124:
 1413 0014 FFF7FEFF 		bl	strlen
 1414              	.LVL125:
 1415 0018 0446     		mov	r4, r0
 1416 001a 04AB     		add	r3, sp, #16
 1417 001c 43F80C0D 		str	r0, [r3, #-12]!
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1418              		.loc 2 45 0
 1419 0020 1868     		ldr	r0, [r3]	@ unaligned
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1420              		.loc 2 47 0
 1421 0022 2246     		mov	r2, r4
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1422              		.loc 2 45 0
 1423 0024 C5F80200 		str	r0, [r5, #2]	@ unaligned
 1424              	.LVL126:
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1425              		.loc 2 47 0
 1426 0028 B168     		ldr	r1, [r6, #8]
 1427 002a A81D     		adds	r0, r5, #6
 1428 002c FFF7FEFF 		bl	memcpy
 1429              	.LVL127:
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 1430              		.loc 2 49 0
 1431 0030 F068     		ldr	r0, [r6, #12]
 1432 0032 FFF7FEFF 		bl	strlen
 1433              	.LVL128:
 1434 0036 0746     		mov	r7, r0
 1435 0038 04AB     		add	r3, sp, #16
 1436 003a 43F8080D 		str	r0, [r3, #-8]!
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1437              		.loc 2 50 0
 1438 003e 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 1439              		.loc 2 48 0
 1440 0040 04F10608 		add	r8, r4, #6
 1441              	.LVL129:
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1442              		.loc 2 50 0
 1443 0044 45F80800 		str	r0, [r5, r8]	@ unaligned
 1444              	.LVL130:
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1445              		.loc 2 52 0
 1446 0048 0A34     		adds	r4, r4, #10
 1447 004a 3A46     		mov	r2, r7
 1448 004c F168     		ldr	r1, [r6, #12]
 1449 004e 2819     		adds	r0, r5, r4
 1450 0050 FFF7FEFF 		bl	memcpy
 1451              	.LVL131:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1452              		.loc 2 54 0
 1453 0054 3069     		ldr	r0, [r6, #16]
 1454 0056 FFF7FEFF 		bl	strlen
 1455              	.LVL132:
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 1456              		.loc 2 53 0
 1457 005a 3C44     		add	r4, r4, r7
 1458              	.LVL133:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1459              		.loc 2 54 0
 1460 005c 0746     		mov	r7, r0
 1461 005e 04AB     		add	r3, sp, #16
 1462 0060 43F8040D 		str	r0, [r3, #-4]!
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1463              		.loc 2 55 0
 1464 0064 1868     		ldr	r0, [r3]	@ unaligned
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1465              		.loc 2 57 0
 1466 0066 3A46     		mov	r2, r7
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1467              		.loc 2 55 0
 1468 0068 2851     		str	r0, [r5, r4]	@ unaligned
 1469              	.LVL134:
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1470              		.loc 2 57 0
 1471 006a 0434     		adds	r4, r4, #4
 1472              	.LVL135:
 1473 006c 2819     		adds	r0, r5, r4
 1474 006e 3169     		ldr	r1, [r6, #16]
 1475 0070 FFF7FEFF 		bl	memcpy
 1476              	.LVL136:
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 1477              		.loc 2 63 0
 1478 0074 7369     		ldr	r3, [r6, #20]
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 1479              		.loc 2 58 0
 1480 0076 3819     		adds	r0, r7, r4
 1481              	.LVL137:
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 1482              		.loc 2 64 0
 1483 0078 2B54     		strb	r3, [r5, r0]
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 1484              		.loc 2 65 0
 1485 007a 1A0A     		lsrs	r2, r3, #8
 1486 007c 0544     		add	r5, r5, r0
 1487              	.LVL138:
 1488 007e 6A70     		strb	r2, [r5, #1]
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1489              		.loc 2 70 0
 1490 0080 0430     		adds	r0, r0, #4
 1491              	.LVL139:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1492              		.loc 2 66 0
 1493 0082 1A0C     		lsrs	r2, r3, #16
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1494              		.loc 2 67 0
 1495 0084 1B0E     		lsrs	r3, r3, #24
 1496              	.LVL140:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1497              		.loc 2 66 0
 1498 0086 AA70     		strb	r2, [r5, #2]
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1499              		.loc 2 67 0
 1500 0088 EB70     		strb	r3, [r5, #3]
 1501              	.LVL141:
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1502              		.loc 2 70 0
 1503 008a 04B0     		add	sp, sp, #16
 1504              	.LCFI7:
 1505              		.cfi_def_cfa_offset 24
 1506              		@ sp needed
 1507 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1508              		.cfi_endproc
 1509              	.LFE61:
 1510              		.cantunwind
 1511              		.fnend
 1513              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
 1514              		.align	1
 1515              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 1516              		.thumb
 1517              		.thumb_func
 1519              	_ZN14rosserial_msgs3Log11deserializeEPh:
 1520              		.fnstart
 1521              	.LFB69:
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1522              		.loc 3 42 0
 1523              		.cfi_startproc
 1524              		@ args = 0, pretend = 0, frame = 8
 1525              		@ frame_needed = 0, uses_anonymous_args = 0
 1526              	.LVL142:
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1527              		.loc 3 45 0
 1528 0000 0B46     		mov	r3, r1
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1529              		.loc 3 42 0
 1530 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1531              	.LCFI8:
 1532              		.cfi_def_cfa_offset 24
 1533              		.cfi_offset 4, -12
 1534              		.cfi_offset 5, -8
 1535              		.cfi_offset 14, -4
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1536              		.loc 3 45 0
 1537 0004 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1538              		.loc 3 42 0
 1539 0008 0446     		mov	r4, r0
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1540              		.loc 3 45 0
 1541 000a 0271     		strb	r2, [r0, #4]
 1542              	.LVL143:
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1543              		.loc 3 48 0
 1544 000c 1868     		ldr	r0, [r3]	@ unaligned
 1545              	.LVL144:
 1546 000e 4A1D     		adds	r2, r1, #5
 1547 0010 0190     		str	r0, [sp, #4]	@ unaligned
 1548              	.LVL145:
 1549              	.LBB160:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1550              		.loc 3 50 0
 1551 0012 019B     		ldr	r3, [sp, #4]
 1552 0014 581D     		adds	r0, r3, #5
 1553              	.LVL146:
 1554              	.L86:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1555              		.loc 3 50 0 is_stmt 0 discriminator 3
 1556 0016 551A     		subs	r5, r2, r1
 1557              	.LVL147:
 1558 0018 A842     		cmp	r0, r5
 1559 001a 04D9     		bls	.L85
  51:./lib/ros_lib/rosserial_msgs/Log.h ****       }
 1560              		.loc 3 51 0 is_stmt 1 discriminator 2
 1561 001c 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 1562              	.LVL148:
 1563 0020 02F8025C 		strb	r5, [r2, #-2]
 1564              	.LVL149:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 1565              		.loc 3 50 0 discriminator 2
 1566 0024 F7E7     		b	.L86
 1567              	.LVL150:
 1568              	.L85:
 1569              	.LBE160:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 1570              		.loc 3 53 0
 1571 0026 0B44     		add	r3, r3, r1
 1572 0028 0022     		movs	r2, #0
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1573              		.loc 3 54 0
 1574 002a 0431     		adds	r1, r1, #4
 1575              	.LVL151:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 1576              		.loc 3 53 0
 1577 002c 1A71     		strb	r2, [r3, #4]
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1578              		.loc 3 54 0
 1579 002e A160     		str	r1, [r4, #8]
 1580              	.LVL152:
  57:./lib/ros_lib/rosserial_msgs/Log.h **** 
 1581              		.loc 3 57 0
 1582 0030 03B0     		add	sp, sp, #12
 1583              	.LCFI9:
 1584              		.cfi_def_cfa_offset 12
 1585              		@ sp needed
 1586 0032 30BD     		pop	{r4, r5, pc}
 1587              		.cfi_endproc
 1588              	.LFE69:
 1589              		.cantunwind
 1590              		.fnend
 1592              		.section	.text._ZN8std_msgs6Header11deserializeEPh,"axG",%progbits,_ZN8std_msgs6Header11deserializ
 1593              		.align	1
 1594              		.weak	_ZN8std_msgs6Header11deserializeEPh
 1595              		.thumb
 1596              		.thumb_func
 1598              	_ZN8std_msgs6Header11deserializeEPh:
 1599              		.fnstart
 1600              	.LFB174:
  53:./lib/ros_lib/std_msgs/Header.h ****     {
 1601              		.loc 7 53 0
 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 8
 1604              		@ frame_needed = 0, uses_anonymous_args = 0
 1605              	.LVL153:
 1606 0000 0346     		mov	r3, r0
 1607 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1608              	.LCFI10:
 1609              		.cfi_def_cfa_offset 24
 1610              		.cfi_offset 4, -12
 1611              		.cfi_offset 5, -8
 1612              		.cfi_offset 14, -4
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1613              		.loc 7 56 0
 1614 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1615 0006 01F11004 		add	r4, r1, #16
 1616 000a 4260     		str	r2, [r0, #4]
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1617              		.loc 7 57 0
 1618 000c 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 1619              	.LVL154:
 1620 000e 42EA0022 		orr	r2, r2, r0, lsl #8
 1621 0012 5A60     		str	r2, [r3, #4]
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1622              		.loc 7 58 0
 1623 0014 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 1624 0016 42EA0042 		orr	r2, r2, r0, lsl #16
 1625 001a 5A60     		str	r2, [r3, #4]
  59:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1626              		.loc 7 59 0
 1627 001c C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 1628 001e 42EA0062 		orr	r2, r2, r0, lsl #24
 1629 0022 5A60     		str	r2, [r3, #4]
 1630              	.LVL155:
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1631              		.loc 7 61 0
 1632 0024 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 1633 0026 9A60     		str	r2, [r3, #8]
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1634              		.loc 7 62 0
 1635 0028 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 1636 002a 42EA0022 		orr	r2, r2, r0, lsl #8
 1637 002e 9A60     		str	r2, [r3, #8]
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1638              		.loc 7 63 0
 1639 0030 8879     		ldrb	r0, [r1, #6]	@ zero_extendqisi2
 1640 0032 42EA0042 		orr	r2, r2, r0, lsl #16
 1641 0036 9A60     		str	r2, [r3, #8]
  64:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1642              		.loc 7 64 0
 1643 0038 C879     		ldrb	r0, [r1, #7]	@ zero_extendqisi2
 1644 003a 42EA0062 		orr	r2, r2, r0, lsl #24
 1645 003e 9A60     		str	r2, [r3, #8]
 1646              	.LVL156:
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1647              		.loc 7 66 0
 1648 0040 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 1649 0042 DA60     		str	r2, [r3, #12]
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1650              		.loc 7 67 0
 1651 0044 487A     		ldrb	r0, [r1, #9]	@ zero_extendqisi2
 1652 0046 42EA0022 		orr	r2, r2, r0, lsl #8
 1653 004a DA60     		str	r2, [r3, #12]
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1654              		.loc 7 68 0
 1655 004c 887A     		ldrb	r0, [r1, #10]	@ zero_extendqisi2
 1656 004e 42EA0042 		orr	r2, r2, r0, lsl #16
 1657 0052 DA60     		str	r2, [r3, #12]
  69:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1658              		.loc 7 69 0
 1659 0054 C87A     		ldrb	r0, [r1, #11]	@ zero_extendqisi2
 1660 0056 42EA0062 		orr	r2, r2, r0, lsl #24
 1661 005a DA60     		str	r2, [r3, #12]
 1662              	.LVL157:
  72:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1663              		.loc 7 72 0
 1664 005c C868     		ldr	r0, [r1, #12]	@ unaligned
 1665 005e 0190     		str	r0, [sp, #4]	@ unaligned
 1666              	.LVL158:
 1667              	.LBB161:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1668              		.loc 7 74 0
 1669 0060 019A     		ldr	r2, [sp, #4]
 1670 0062 02F11000 		add	r0, r2, #16
 1671              	.LVL159:
 1672              	.L90:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1673              		.loc 7 74 0 is_stmt 0 discriminator 3
 1674 0066 651A     		subs	r5, r4, r1
 1675              	.LVL160:
 1676 0068 A842     		cmp	r0, r5
 1677 006a 04D9     		bls	.L89
  75:./lib/ros_lib/std_msgs/Header.h ****       }
 1678              		.loc 7 75 0 is_stmt 1 discriminator 2
 1679 006c 14F8015B 		ldrb	r5, [r4], #1	@ zero_extendqisi2
 1680              	.LVL161:
 1681 0070 04F8025C 		strb	r5, [r4, #-2]
 1682              	.LVL162:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1683              		.loc 7 74 0 discriminator 2
 1684 0074 F7E7     		b	.L90
 1685              	.LVL163:
 1686              	.L89:
 1687              	.LBE161:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 1688              		.loc 7 77 0
 1689 0076 0A44     		add	r2, r2, r1
 1690 0078 0024     		movs	r4, #0
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1691              		.loc 7 78 0
 1692 007a 0F31     		adds	r1, r1, #15
 1693              	.LVL164:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 1694              		.loc 7 77 0
 1695 007c D473     		strb	r4, [r2, #15]
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1696              		.loc 7 78 0
 1697 007e 1961     		str	r1, [r3, #16]
 1698              	.LVL165:
  81:./lib/ros_lib/std_msgs/Header.h **** 
 1699              		.loc 7 81 0
 1700 0080 03B0     		add	sp, sp, #12
 1701              	.LCFI11:
 1702              		.cfi_def_cfa_offset 12
 1703              		@ sp needed
 1704 0082 30BD     		pop	{r4, r5, pc}
 1705              		.cfi_endproc
 1706              	.LFE174:
 1707              		.cantunwind
 1708              		.fnend
 1710              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 1711              		.align	1
 1712              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 1713              		.thumb
 1714              		.thumb_func
 1716              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 1717              		.fnstart
 1718              	.LFB62:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1719              		.loc 2 72 0
 1720              		.cfi_startproc
 1721              		@ args = 0, pretend = 0, frame = 16
 1722              		@ frame_needed = 0, uses_anonymous_args = 0
 1723              	.LVL166:
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1724              		.loc 2 75 0
 1725 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1726              		.loc 2 72 0
 1727 0002 30B5     		push	{r4, r5, lr}
 1728              	.LCFI12:
 1729              		.cfi_def_cfa_offset 12
 1730              		.cfi_offset 4, -12
 1731              		.cfi_offset 5, -8
 1732              		.cfi_offset 14, -4
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1733              		.loc 2 75 0
 1734 0004 8380     		strh	r3, [r0, #4]	@ movhi
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1735              		.loc 2 76 0
 1736 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1737              		.loc 2 72 0
 1738 0008 0446     		mov	r4, r0
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1739              		.loc 2 76 0
 1740 000a 43EA0223 		orr	r3, r3, r2, lsl #8
 1741 000e 8380     		strh	r3, [r0, #4]	@ movhi
 1742              	.LVL167:
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1743              		.loc 2 79 0
 1744 0010 D1F80200 		ldr	r0, [r1, #2]	@ unaligned
 1745              	.LVL168:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1746              		.loc 2 72 0
 1747 0014 85B0     		sub	sp, sp, #20
 1748              	.LCFI13:
 1749              		.cfi_def_cfa_offset 32
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1750              		.loc 2 79 0
 1751 0016 0190     		str	r0, [sp, #4]	@ unaligned
 1752              	.LVL169:
 1753              	.LBB162:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1754              		.loc 2 81 0
 1755 0018 019D     		ldr	r5, [sp, #4]
 1756 001a 8A1D     		adds	r2, r1, #6
 1757 001c AB1D     		adds	r3, r5, #6
 1758              	.LVL170:
 1759              	.L94:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1760              		.loc 2 81 0 is_stmt 0 discriminator 3
 1761 001e 501A     		subs	r0, r2, r1
 1762              	.LVL171:
 1763 0020 8342     		cmp	r3, r0
 1764 0022 04D9     		bls	.L93
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 1765              		.loc 2 82 0 is_stmt 1 discriminator 2
 1766 0024 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 1767              	.LVL172:
 1768 0028 02F8020C 		strb	r0, [r2, #-2]
 1769              	.LVL173:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1770              		.loc 2 81 0 discriminator 2
 1771 002c F7E7     		b	.L94
 1772              	.LVL174:
 1773              	.L93:
 1774              	.LBE162:
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 1775              		.loc 2 84 0
 1776 002e 4A19     		adds	r2, r1, r5
 1777 0030 0020     		movs	r0, #0
 1778              	.LVL175:
 1779 0032 5071     		strb	r0, [r2, #5]
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1780              		.loc 2 85 0
 1781 0034 4A1D     		adds	r2, r1, #5
 1782 0036 A260     		str	r2, [r4, #8]
 1783              	.LVL176:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1784              		.loc 2 88 0
 1785 0038 C858     		ldr	r0, [r1, r3]	@ unaligned
 1786              	.LBB163:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1787              		.loc 2 90 0
 1788 003a 1A1D     		adds	r2, r3, #4
 1789              	.LBE163:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1790              		.loc 2 88 0
 1791 003c 0290     		str	r0, [sp, #8]	@ unaligned
 1792              	.LVL177:
 1793              	.LBB164:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1794              		.loc 2 90 0
 1795 003e 029B     		ldr	r3, [sp, #8]
 1796 0040 05F10A00 		add	r0, r5, #10
 1797 0044 1344     		add	r3, r3, r2
 1798 0046 0844     		add	r0, r0, r1
 1799              	.LVL178:
 1800              	.L96:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1801              		.loc 2 90 0 is_stmt 0 discriminator 3
 1802 0048 451A     		subs	r5, r0, r1
 1803              	.LVL179:
 1804 004a AB42     		cmp	r3, r5
 1805 004c 04D9     		bls	.L95
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 1806              		.loc 2 91 0 is_stmt 1 discriminator 2
 1807 004e 10F8015B 		ldrb	r5, [r0], #1	@ zero_extendqisi2
 1808              	.LVL180:
 1809 0052 00F8025C 		strb	r5, [r0, #-2]
 1810              	.LVL181:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1811              		.loc 2 90 0 discriminator 2
 1812 0056 F7E7     		b	.L96
 1813              	.LVL182:
 1814              	.L95:
 1815              	.LBE164:
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1816              		.loc 2 94 0
 1817 0058 013A     		subs	r2, r2, #1
 1818              	.LVL183:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 1819              		.loc 2 93 0
 1820 005a C818     		adds	r0, r1, r3
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1821              		.loc 2 94 0
 1822 005c 0A44     		add	r2, r2, r1
 1823              	.LVL184:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 1824              		.loc 2 93 0
 1825 005e 0025     		movs	r5, #0
 1826              	.LVL185:
 1827 0060 00F8015C 		strb	r5, [r0, #-1]
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1828              		.loc 2 94 0
 1829 0064 E260     		str	r2, [r4, #12]
 1830              	.LVL186:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1831              		.loc 2 97 0
 1832 0066 0068     		ldr	r0, [r0]	@ unaligned
 1833              	.LBB165:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1834              		.loc 2 99 0
 1835 0068 0433     		adds	r3, r3, #4
 1836              	.LVL187:
 1837              	.LBE165:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1838              		.loc 2 97 0
 1839 006a 0390     		str	r0, [sp, #12]	@ unaligned
 1840              	.LVL188:
 1841              	.LBB166:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1842              		.loc 2 99 0
 1843 006c 0398     		ldr	r0, [sp, #12]
 1844 006e CA18     		adds	r2, r1, r3
 1845 0070 1844     		add	r0, r0, r3
 1846              	.LVL189:
 1847              	.L98:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1848              		.loc 2 99 0 is_stmt 0 discriminator 3
 1849 0072 551A     		subs	r5, r2, r1
 1850              	.LVL190:
 1851 0074 A842     		cmp	r0, r5
 1852 0076 04D9     		bls	.L97
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 1853              		.loc 2 100 0 is_stmt 1 discriminator 2
 1854 0078 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 1855              	.LVL191:
 1856 007c 02F8025C 		strb	r5, [r2, #-2]
 1857              	.LVL192:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 1858              		.loc 2 99 0 discriminator 2
 1859 0080 F7E7     		b	.L98
 1860              	.LVL193:
 1861              	.L97:
 1862              	.LBE166:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1863              		.loc 2 103 0
 1864 0082 013B     		subs	r3, r3, #1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 1865              		.loc 2 102 0
 1866 0084 0D18     		adds	r5, r1, r0
 1867              	.LVL194:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1868              		.loc 2 103 0
 1869 0086 0B44     		add	r3, r3, r1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 1870              		.loc 2 102 0
 1871 0088 0022     		movs	r2, #0
 1872              	.LVL195:
 1873 008a 05F8012C 		strb	r2, [r5, #-1]
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1874              		.loc 2 103 0
 1875 008e 2361     		str	r3, [r4, #16]
 1876              	.LVL196:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1877              		.loc 2 114 0
 1878 0090 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 1879 0092 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 1880 0094 1B04     		lsls	r3, r3, #16
 1881 0096 43EA0223 		orr	r3, r3, r2, lsl #8
 1882 009a 0A5C     		ldrb	r2, [r1, r0]	@ zero_extendqisi2
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1883              		.loc 2 117 0
 1884 009c 0430     		adds	r0, r0, #4
 1885              	.LVL197:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1886              		.loc 2 114 0
 1887 009e 1343     		orrs	r3, r3, r2
 1888 00a0 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 1889 00a2 43EA0263 		orr	r3, r3, r2, lsl #24
 1890 00a6 6361     		str	r3, [r4, #20]
 1891              	.LVL198:
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1892              		.loc 2 117 0
 1893 00a8 05B0     		add	sp, sp, #20
 1894              	.LCFI14:
 1895              		.cfi_def_cfa_offset 12
 1896              		@ sp needed
 1897 00aa 30BD     		pop	{r4, r5, pc}
 1898              		.cfi_endproc
 1899              	.LFE62:
 1900              		.cantunwind
 1901              		.fnend
 1903              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 1904              		.align	1
 1905              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 1906              		.thumb
 1907              		.thumb_func
 1909              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 1910              		.fnstart
 1911              	.LFB83:
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1912              		.loc 4 123 0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 8
 1915              		@ frame_needed = 0, uses_anonymous_args = 0
 1916              	.LVL199:
 1917 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1918              	.LCFI15:
 1919              		.cfi_def_cfa_offset 32
 1920              		.cfi_offset 4, -20
 1921              		.cfi_offset 5, -16
 1922              		.cfi_offset 6, -12
 1923              		.cfi_offset 7, -8
 1924              		.cfi_offset 14, -4
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 1925              		.loc 4 126 0
 1926 0002 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 1927              	.LVL200:
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 1928              		.loc 4 127 0
 1929 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1930              		.loc 4 123 0
 1931 0006 0446     		mov	r4, r0
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 1932              		.loc 4 127 0
 1933 0008 AB42     		cmp	r3, r5
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1934              		.loc 4 123 0
 1935 000a 0E46     		mov	r6, r1
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 1936              		.loc 4 127 0
 1937 000c 04D2     		bcs	.L103
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 1938              		.loc 4 128 0
 1939 000e A900     		lsls	r1, r5, #2
 1940              	.LVL201:
 1941 0010 C068     		ldr	r0, [r0, #12]
 1942              	.LVL202:
 1943 0012 FFF7FEFF 		bl	realloc
 1944              	.LVL203:
 1945 0016 E060     		str	r0, [r4, #12]
 1946              	.L103:
 1947              	.LVL204:
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1948              		.loc 4 130 0
 1949 0018 2571     		strb	r5, [r4, #4]
 1950              	.LVL205:
 1951 001a 321D     		adds	r2, r6, #4
 1952 001c 0021     		movs	r1, #0
 1953              	.LVL206:
 1954              	.L105:
 1955              	.LBB167:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1956              		.loc 4 131 0 discriminator 3
 1957 001e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1958 0020 4F1C     		adds	r7, r1, #1
 1959 0022 C9B2     		uxtb	r1, r1
 1960 0024 8B42     		cmp	r3, r1
 1961 0026 A2EB0605 		sub	r5, r2, r6
 1962              	.LVL207:
 1963 002a 02F10402 		add	r2, r2, #4
 1964 002e 14D9     		bls	.L104
 1965              	.LVL208:
 1966              	.LBB168:
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 1967              		.loc 4 141 0 discriminator 2
 1968 0030 12F8023C 		ldrb	r3, [r2, #-2]	@ zero_extendqisi2
 1969              	.LVL209:
 1970 0034 12F8030C 		ldrb	r0, [r2, #-3]	@ zero_extendqisi2
 1971              	.LVL210:
 1972 0038 1B04     		lsls	r3, r3, #16
 1973              	.LVL211:
 1974 003a 43EA0023 		orr	r3, r3, r0, lsl #8
 1975 003e 12F8040C 		ldrb	r0, [r2, #-4]	@ zero_extendqisi2
 1976              	.LVL212:
 1977 0042 0343     		orrs	r3, r3, r0
 1978 0044 12F8010C 		ldrb	r0, [r2, #-1]	@ zero_extendqisi2
 1979 0048 43EA0063 		orr	r3, r3, r0, lsl #24
 1980 004c A360     		str	r3, [r4, #8]
 1981              	.LVL213:
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 1982              		.loc 4 143 0 discriminator 2
 1983 004e A068     		ldr	r0, [r4, #8]	@ unaligned
 1984 0050 E368     		ldr	r3, [r4, #12]
 1985 0052 43F82100 		str	r0, [r3, r1, lsl #2]	@ unaligned
 1986              	.LVL214:
 1987              	.LBE168:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1988              		.loc 4 131 0 discriminator 2
 1989 0056 3946     		mov	r1, r7
 1990 0058 E1E7     		b	.L105
 1991              	.LVL215:
 1992              	.L104:
 1993              	.LBE167:
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 1994              		.loc 4 145 0
 1995 005a 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 1996              	.LVL216:
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 1997              		.loc 4 146 0
 1998 005c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1999 005e BB42     		cmp	r3, r7
 2000 0060 04D2     		bcs	.L106
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2001              		.loc 4 147 0
 2002 0062 B900     		lsls	r1, r7, #2
 2003 0064 A069     		ldr	r0, [r4, #24]
 2004 0066 FFF7FEFF 		bl	realloc
 2005              	.LVL217:
 2006 006a A061     		str	r0, [r4, #24]
 2007              	.L106:
 2008              	.LVL218:
 2009 006c 2B1D     		adds	r3, r5, #4
 2010              	.LVL219:
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 2011              		.loc 4 149 0
 2012 006e 2774     		strb	r7, [r4, #16]
 2013              	.LVL220:
 2014 0070 3344     		add	r3, r3, r6
 2015              	.LVL221:
 2016 0072 0022     		movs	r2, #0
 2017              	.LVL222:
 2018              	.L108:
 2019              	.LBB169:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2020              		.loc 4 150 0 discriminator 3
 2021 0074 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 2022 0076 571C     		adds	r7, r2, #1
 2023 0078 D2B2     		uxtb	r2, r2
 2024 007a 9142     		cmp	r1, r2
 2025 007c A3EB0605 		sub	r5, r3, r6
 2026              	.LVL223:
 2027 0080 03F10403 		add	r3, r3, #4
 2028 0084 14D9     		bls	.L107
 2029              	.LVL224:
 2030              	.LBB170:
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 2031              		.loc 4 159 0 discriminator 2
 2032 0086 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 2033 008a 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2034 008e 0904     		lsls	r1, r1, #16
 2035              	.LVL225:
 2036 0090 41EA0021 		orr	r1, r1, r0, lsl #8
 2037              	.LVL226:
 2038 0094 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2039 0098 0143     		orrs	r1, r1, r0
 2040 009a 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2041              	.LVL227:
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 2042              		.loc 4 160 0 discriminator 2
 2043 009e 41EA0061 		orr	r1, r1, r0, lsl #24
 2044 00a2 6161     		str	r1, [r4, #20]	@ float
 2045              	.LVL228:
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2046              		.loc 4 162 0 discriminator 2
 2047 00a4 6069     		ldr	r0, [r4, #20]	@ unaligned
 2048 00a6 A169     		ldr	r1, [r4, #24]
 2049 00a8 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 2050              	.LVL229:
 2051              	.LBE170:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2052              		.loc 4 150 0 discriminator 2
 2053 00ac 3A46     		mov	r2, r7
 2054 00ae E1E7     		b	.L108
 2055              	.LVL230:
 2056              	.L107:
 2057              	.LBE169:
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 2058              		.loc 4 164 0
 2059 00b0 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2060              	.LVL231:
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 2061              		.loc 4 165 0
 2062 00b2 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 2063 00b4 BB42     		cmp	r3, r7
 2064 00b6 04D2     		bcs	.L109
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2065              		.loc 4 166 0
 2066 00b8 B900     		lsls	r1, r7, #2
 2067 00ba 606A     		ldr	r0, [r4, #36]
 2068 00bc FFF7FEFF 		bl	realloc
 2069              	.LVL232:
 2070 00c0 6062     		str	r0, [r4, #36]
 2071              	.L109:
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 2072              		.loc 4 167 0
 2073 00c2 2B1D     		adds	r3, r5, #4
 2074              	.LVL233:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2075              		.loc 4 168 0
 2076 00c4 0025     		movs	r5, #0
 2077              	.LBB171:
 2078              	.LBB172:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2079              		.loc 4 176 0
 2080 00c6 AE46     		mov	lr, r5
 2081              	.LBE172:
 2082              	.LBE171:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2083              		.loc 4 168 0
 2084 00c8 2777     		strb	r7, [r4, #28]
 2085              	.LVL234:
 2086              	.L113:
 2087              	.LBB176:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2088              		.loc 4 169 0 discriminator 1
 2089 00ca 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 2090 00cc EFB2     		uxtb	r7, r5
 2091 00ce BA42     		cmp	r2, r7
 2092 00d0 19D9     		bls	.L110
 2093              	.LBB175:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2094              		.loc 4 171 0
 2095 00d2 F058     		ldr	r0, [r6, r3]	@ unaligned
 2096              	.LBB173:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2097              		.loc 4 173 0
 2098 00d4 1A1D     		adds	r2, r3, #4
 2099              	.LBE173:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2100              		.loc 4 171 0
 2101 00d6 0190     		str	r0, [sp, #4]	@ unaligned
 2102              	.LVL235:
 2103              	.LBB174:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2104              		.loc 4 173 0
 2105 00d8 019B     		ldr	r3, [sp, #4]
 2106 00da B118     		adds	r1, r6, r2
 2107 00dc 1344     		add	r3, r3, r2
 2108              	.LVL236:
 2109              	.L112:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2110              		.loc 4 173 0 is_stmt 0 discriminator 3
 2111 00de 881B     		subs	r0, r1, r6
 2112              	.LVL237:
 2113 00e0 8342     		cmp	r3, r0
 2114 00e2 04D9     		bls	.L111
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2115              		.loc 4 174 0 is_stmt 1 discriminator 2
 2116 00e4 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 2117              	.LVL238:
 2118 00e8 01F8020C 		strb	r0, [r1, #-2]
 2119              	.LVL239:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2120              		.loc 4 173 0 discriminator 2
 2121 00ec F7E7     		b	.L112
 2122              	.LVL240:
 2123              	.L111:
 2124              	.LBE174:
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2125              		.loc 4 177 0 discriminator 2
 2126 00ee 013A     		subs	r2, r2, #1
 2127              	.LVL241:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2128              		.loc 4 176 0 discriminator 2
 2129 00f0 F118     		adds	r1, r6, r3
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2130              		.loc 4 177 0 discriminator 2
 2131 00f2 3244     		add	r2, r2, r6
 2132              	.LVL242:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2133              		.loc 4 176 0 discriminator 2
 2134 00f4 01F801EC 		strb	lr, [r1, #-1]
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2135              		.loc 4 177 0 discriminator 2
 2136 00f8 2262     		str	r2, [r4, #32]
 2137              	.LVL243:
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2138              		.loc 4 179 0 discriminator 2
 2139 00fa 216A     		ldr	r1, [r4, #32]	@ unaligned
 2140 00fc 626A     		ldr	r2, [r4, #36]
 2141 00fe 0135     		adds	r5, r5, #1
 2142              	.LVL244:
 2143 0100 42F82710 		str	r1, [r2, r7, lsl #2]	@ unaligned
 2144              	.LVL245:
 2145              	.LBE175:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2146              		.loc 4 169 0 discriminator 2
 2147 0104 E1E7     		b	.L113
 2148              	.LVL246:
 2149              	.L110:
 2150              	.LBE176:
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2151              		.loc 4 182 0
 2152 0106 1846     		mov	r0, r3
 2153 0108 03B0     		add	sp, sp, #12
 2154              	.LCFI16:
 2155              		.cfi_def_cfa_offset 20
 2156              		@ sp needed
 2157 010a F0BD     		pop	{r4, r5, r6, r7, pc}
 2158              		.cfi_endproc
 2159              	.LFE83:
 2160              		.cantunwind
 2161              		.fnend
 2163              		.global	__aeabi_fcmplt
 2164              		.section	.text._ZN3ros3Msg19serializeAvrFloat64EPhf,"axG",%progbits,_ZN3ros3Msg19serializeAvrFloat
 2165              		.align	1
 2166              		.weak	_ZN3ros3Msg19serializeAvrFloat64EPhf
 2167              		.thumb
 2168              		.thumb_func
 2170              	_ZN3ros3Msg19serializeAvrFloat64EPhf:
 2171              		.fnstart
 2172              	.LFB29:
 2173              		.file 12 "./lib/ros_lib/ros/msg.h"
   1:./lib/ros_lib/ros/msg.h **** /* 
   2:./lib/ros_lib/ros/msg.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/msg.h ****  *
   4:./lib/ros_lib/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/msg.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/msg.h ****  *
   7:./lib/ros_lib/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/msg.h ****  * are met:
  10:./lib/ros_lib/ros/msg.h ****  *
  11:./lib/ros_lib/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/msg.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/msg.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/msg.h ****  *
  21:./lib/ros_lib/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/msg.h ****  */
  34:./lib/ros_lib/ros/msg.h **** 
  35:./lib/ros_lib/ros/msg.h **** #ifndef _ROS_MSG_H_
  36:./lib/ros_lib/ros/msg.h **** #define _ROS_MSG_H_
  37:./lib/ros_lib/ros/msg.h **** 
  38:./lib/ros_lib/ros/msg.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/msg.h **** 
  40:./lib/ros_lib/ros/msg.h **** namespace ros {
  41:./lib/ros_lib/ros/msg.h **** 
  42:./lib/ros_lib/ros/msg.h **** /* Base Message Type */
  43:./lib/ros_lib/ros/msg.h **** class Msg
  44:./lib/ros_lib/ros/msg.h **** {
  45:./lib/ros_lib/ros/msg.h **** public:
  46:./lib/ros_lib/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  47:./lib/ros_lib/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  48:./lib/ros_lib/ros/msg.h ****   virtual const char * getType() = 0;
  49:./lib/ros_lib/ros/msg.h ****   virtual const char * getMD5() = 0;
  50:./lib/ros_lib/ros/msg.h **** 
  51:./lib/ros_lib/ros/msg.h ****   /**
  52:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  53:./lib/ros_lib/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  54:./lib/ros_lib/ros/msg.h ****    *        fields, despite AVV having no native support for double.
  55:./lib/ros_lib/ros/msg.h ****    *
  56:./lib/ros_lib/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  57:./lib/ros_lib/ros/msg.h ****    * @param[in] f value to serialize.
  58:./lib/ros_lib/ros/msg.h ****    *
  59:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  60:./lib/ros_lib/ros/msg.h ****    *
  61:./lib/ros_lib/ros/msg.h ****    */
  62:./lib/ros_lib/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
 2174              		.loc 12 62 0
 2175              		.cfi_startproc
 2176              		@ args = 0, pretend = 0, frame = 0
 2177              		@ frame_needed = 0, uses_anonymous_args = 0
 2178              	.LVL247:
 2179 0000 38B5     		push	{r3, r4, r5, lr}
 2180              	.LCFI17:
 2181              		.cfi_def_cfa_offset 16
 2182              		.cfi_offset 3, -16
 2183              		.cfi_offset 4, -12
 2184              		.cfi_offset 5, -8
 2185              		.cfi_offset 14, -4
  63:./lib/ros_lib/ros/msg.h ****   {
  64:./lib/ros_lib/ros/msg.h ****     const int32_t* val = (int32_t*) &f;
  65:./lib/ros_lib/ros/msg.h ****     int32_t exp = ((*val >> 23) & 255);
 2186              		.loc 12 65 0
 2187 0002 C1F3C753 		ubfx	r3, r1, #23, #8
 2188              	.LVL248:
  62:./lib/ros_lib/ros/msg.h ****   {
 2189              		.loc 12 62 0
 2190 0006 0546     		mov	r5, r0
 2191              		.loc 12 65 0
 2192 0008 0A46     		mov	r2, r1
  62:./lib/ros_lib/ros/msg.h ****   {
 2193              		.loc 12 62 0
 2194 000a 0846     		mov	r0, r1
 2195              	.LVL249:
  66:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 2196              		.loc 12 66 0
 2197 000c 0BB1     		cbz	r3, .L116
  67:./lib/ros_lib/ros/msg.h ****     {
  68:./lib/ros_lib/ros/msg.h ****       exp += 1023 - 127;
 2198              		.loc 12 68 0
 2199 000e 03F56073 		add	r3, r3, #896
 2200              	.LVL250:
 2201              	.L116:
  69:./lib/ros_lib/ros/msg.h ****     }
  70:./lib/ros_lib/ros/msg.h **** 
  71:./lib/ros_lib/ros/msg.h ****     int32_t sig = *val;
  72:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 2202              		.loc 12 72 0
 2203 0012 0021     		movs	r1, #0
 2204              	.LVL251:
 2205 0014 2970     		strb	r1, [r5]
 2206              	.LVL252:
  73:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 2207              		.loc 12 73 0
 2208 0016 6970     		strb	r1, [r5, #1]
 2209              	.LVL253:
  74:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 2210              		.loc 12 74 0
 2211 0018 A970     		strb	r1, [r5, #2]
 2212              	.LVL254:
  75:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 2213              		.loc 12 75 0
 2214 001a 5101     		lsls	r1, r2, #5
 2215 001c E970     		strb	r1, [r5, #3]
 2216              	.LVL255:
  76:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 2217              		.loc 12 76 0
 2218 001e D110     		asrs	r1, r2, #3
 2219 0020 2971     		strb	r1, [r5, #4]
 2220              	.LVL256:
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 2221              		.loc 12 77 0
 2222 0022 D112     		asrs	r1, r2, #11
  78:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 2223              		.loc 12 78 0
 2224 0024 C2F3C342 		ubfx	r2, r2, #19, #4
 2225 0028 42EA0312 		orr	r2, r2, r3, lsl #4
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 2226              		.loc 12 77 0
 2227 002c 6971     		strb	r1, [r5, #5]
 2228              	.LVL257:
 2229              		.loc 12 78 0
 2230 002e AA71     		strb	r2, [r5, #6]
 2231              	.LVL258:
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
  80:./lib/ros_lib/ros/msg.h **** 
  81:./lib/ros_lib/ros/msg.h ****     // Mark negative bit as necessary.
  82:./lib/ros_lib/ros/msg.h ****     if (f < 0)
 2232              		.loc 12 82 0
 2233 0030 0021     		movs	r1, #0
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 2234              		.loc 12 79 0
 2235 0032 C3F30714 		ubfx	r4, r3, #4, #8
 2236              		.loc 12 82 0
 2237 0036 FFF7FEFF 		bl	__aeabi_fcmplt
 2238              	.LVL259:
 2239 003a 08B9     		cbnz	r0, .L117
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 2240              		.loc 12 79 0
 2241 003c EC71     		strb	r4, [r5, #7]
 2242 003e 02E0     		b	.L118
 2243              	.L117:
  83:./lib/ros_lib/ros/msg.h ****     {
  84:./lib/ros_lib/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
 2244              		.loc 12 84 0
 2245 0040 64F07F03 		orn	r3, r4, #127
 2246 0044 EB71     		strb	r3, [r5, #7]
 2247              	.L118:
  85:./lib/ros_lib/ros/msg.h ****     }
  86:./lib/ros_lib/ros/msg.h **** 
  87:./lib/ros_lib/ros/msg.h ****     return 8;
  88:./lib/ros_lib/ros/msg.h ****   }
 2248              		.loc 12 88 0
 2249 0046 0820     		movs	r0, #8
 2250 0048 38BD     		pop	{r3, r4, r5, pc}
 2251              		.cfi_endproc
 2252              	.LFE29:
 2253              		.cantunwind
 2254              		.fnend
 2256              		.section	.text._ZNK12roberto_msgs10MotorState9serializeEPh,"axG",%progbits,_ZNK12roberto_msgs10Mot
 2257              		.align	1
 2258              		.weak	_ZNK12roberto_msgs10MotorState9serializeEPh
 2259              		.thumb
 2260              		.thumb_func
 2262              	_ZNK12roberto_msgs10MotorState9serializeEPh:
 2263              		.fnstart
 2264              	.LFB180:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 2265              		.loc 8 37 0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 2269              	.LVL260:
 2270 0000 70B5     		push	{r4, r5, r6, lr}
 2271              	.LCFI18:
 2272              		.cfi_def_cfa_offset 16
 2273              		.cfi_offset 4, -16
 2274              		.cfi_offset 5, -12
 2275              		.cfi_offset 6, -8
 2276              		.cfi_offset 14, -4
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 2277              		.loc 8 37 0
 2278 0002 0546     		mov	r5, r0
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 2279              		.loc 8 40 0
 2280 0004 0430     		adds	r0, r0, #4
 2281              	.LVL261:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 2282              		.loc 8 37 0
 2283 0006 0E46     		mov	r6, r1
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 2284              		.loc 8 40 0
 2285 0008 FFF7FEFF 		bl	_ZNK8std_msgs6Header9serializeEPh
 2286              	.LVL262:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 2287              		.loc 8 41 0
 2288 000c A969     		ldr	r1, [r5, #24]	@ float
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 2289              		.loc 8 40 0
 2290 000e 0446     		mov	r4, r0
 2291              	.LVL263:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 2292              		.loc 8 41 0
 2293 0010 3018     		adds	r0, r6, r0
 2294              	.LVL264:
 2295 0012 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 2296              	.LVL265:
 2297 0016 0444     		add	r4, r4, r0
 2298              	.LVL266:
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
 2299              		.loc 8 42 0
 2300 0018 E969     		ldr	r1, [r5, #28]	@ float
 2301 001a 3019     		adds	r0, r6, r4
 2302 001c FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 2303              	.LVL267:
 2304 0020 0444     		add	r4, r4, r0
 2305              	.LVL268:
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
 2306              		.loc 8 43 0
 2307 0022 296A     		ldr	r1, [r5, #32]	@ float
 2308 0024 3019     		adds	r0, r6, r4
 2309 0026 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 2310              	.LVL269:
 2311 002a 0444     		add	r4, r4, r0
 2312              	.LVL270:
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
 2313              		.loc 8 44 0
 2314 002c 696A     		ldr	r1, [r5, #36]	@ float
 2315 002e 3019     		adds	r0, r6, r4
 2316 0030 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 2317              	.LVL271:
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 2318              		.loc 8 45 0
 2319 0034 95F82830 		ldrb	r3, [r5, #40]	@ zero_extendqisi2
 2320 0038 2044     		add	r0, r0, r4
 2321              	.LVL272:
 2322 003a 3354     		strb	r3, [r6, r0]
 2323              	.LVL273:
  48:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 2324              		.loc 8 48 0
 2325 003c 0130     		adds	r0, r0, #1
 2326              	.LVL274:
 2327 003e 70BD     		pop	{r4, r5, r6, pc}
 2328              		.cfi_endproc
 2329              	.LFE180:
 2330              		.cantunwind
 2331              		.fnend
 2333              		.section	.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf,"axG",%progbits,_ZN3ros3Msg21deserializeAv
 2334              		.align	1
 2335              		.weak	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 2336              		.thumb
 2337              		.thumb_func
 2339              	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf:
 2340              		.fnstart
 2341              	.LFB30:
  89:./lib/ros_lib/ros/msg.h **** 
  90:./lib/ros_lib/ros/msg.h ****   /**
  91:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
  92:./lib/ros_lib/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
  93:./lib/ros_lib/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
  94:./lib/ros_lib/ros/msg.h ****    *
  95:./lib/ros_lib/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
  96:./lib/ros_lib/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
  97:./lib/ros_lib/ros/msg.h ****    *
  98:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  99:./lib/ros_lib/ros/msg.h ****    */
 100:./lib/ros_lib/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 2342              		.loc 12 100 0
 2343              		.cfi_startproc
 2344              		@ args = 0, pretend = 0, frame = 0
 2345              		@ frame_needed = 0, uses_anonymous_args = 0
 2346              	.LVL275:
 2347 0000 30B5     		push	{r4, r5, lr}
 2348              	.LCFI19:
 2349              		.cfi_def_cfa_offset 12
 2350              		.cfi_offset 4, -12
 2351              		.cfi_offset 5, -8
 2352              		.cfi_offset 14, -4
 101:./lib/ros_lib/ros/msg.h ****   {
 102:./lib/ros_lib/ros/msg.h ****     uint32_t* val = (uint32_t*)f;
 103:./lib/ros_lib/ros/msg.h ****     inbuffer += 3;
 104:./lib/ros_lib/ros/msg.h **** 
 105:./lib/ros_lib/ros/msg.h ****     // Copy truncated mantissa.
 106:./lib/ros_lib/ros/msg.h ****     *val = ((uint32_t)(*(inbuffer++)) >> 5 & 0x07);
 2353              		.loc 12 106 0
 2354 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 2355 0004 5B09     		lsrs	r3, r3, #5
 2356 0006 0B60     		str	r3, [r1]
 2357              	.LVL276:
 107:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 2358              		.loc 12 107 0
 2359 0008 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 2360 000a 43EAC203 		orr	r3, r3, r2, lsl #3
 2361 000e 0B60     		str	r3, [r1]
 2362              	.LVL277:
 108:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 2363              		.loc 12 108 0
 2364 0010 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 2365 0012 43EAC222 		orr	r2, r3, r2, lsl #11
 2366 0016 0A60     		str	r2, [r1]
 109:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 2367              		.loc 12 109 0
 2368 0018 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 2369 001a DB04     		lsls	r3, r3, #19
 2370 001c 03F4F003 		and	r3, r3, #7864320
 2371 0020 1343     		orrs	r3, r3, r2
 2372 0022 0B60     		str	r3, [r1]
 2373              	.LVL278:
 110:./lib/ros_lib/ros/msg.h **** 
 111:./lib/ros_lib/ros/msg.h ****     // Copy truncated exponent.
 112:./lib/ros_lib/ros/msg.h ****     uint32_t exp = ((uint32_t)(*(inbuffer++)) & 0xf0)>>4;
 113:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 2374              		.loc 12 113 0
 2375 0024 C479     		ldrb	r4, [r0, #7]	@ zero_extendqisi2
 112:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 2376              		.loc 12 112 0
 2377 0026 8579     		ldrb	r5, [r0, #6]	@ zero_extendqisi2
 2378              	.LVL279:
 2379              		.loc 12 113 0
 2380 0028 2401     		lsls	r4, r4, #4
 2381 002a 04F4FE62 		and	r2, r4, #2032
 2382              	.LVL280:
 114:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 2383              		.loc 12 114 0
 2384 002e 52EA1512 		orrs	r2, r2, r5, lsr #4
 2385              	.LVL281:
 115:./lib/ros_lib/ros/msg.h ****     {
 116:./lib/ros_lib/ros/msg.h ****       *val |= ((exp) - 1023 + 127) << 23;
 2386              		.loc 12 116 0
 2387 0032 1EBF     		ittt	ne
 2388 0034 A2F56072 		subne	r2, r2, #896
 2389              	.LVL282:
 2390 0038 43EAC253 		orrne	r3, r3, r2, lsl #23
 2391 003c 0B60     		strne	r3, [r1]
 2392              	.LVL283:
 117:./lib/ros_lib/ros/msg.h ****     }  
 118:./lib/ros_lib/ros/msg.h **** 
 119:./lib/ros_lib/ros/msg.h ****     // Copy negative sign.
 120:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0x80) << 24;
 2393              		.loc 12 120 0
 2394 003e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 121:./lib/ros_lib/ros/msg.h **** 
 122:./lib/ros_lib/ros/msg.h ****     return 8;
 123:./lib/ros_lib/ros/msg.h ****   }
 2395              		.loc 12 123 0
 2396 0040 0820     		movs	r0, #8
 2397              	.LVL284:
 120:./lib/ros_lib/ros/msg.h **** 
 2398              		.loc 12 120 0
 2399 0042 23F07F02 		bic	r2, r3, #127
 2400 0046 0B68     		ldr	r3, [r1]
 2401 0048 43EA0263 		orr	r3, r3, r2, lsl #24
 2402 004c 0B60     		str	r3, [r1]
 2403              		.loc 12 123 0
 2404 004e 30BD     		pop	{r4, r5, pc}
 2405              		.cfi_endproc
 2406              	.LFE30:
 2407              		.cantunwind
 2408              		.fnend
 2410              		.section	.text._ZN12roberto_msgs10MotorState11deserializeEPh,"axG",%progbits,_ZN12roberto_msgs10Mo
 2411              		.align	1
 2412              		.weak	_ZN12roberto_msgs10MotorState11deserializeEPh
 2413              		.thumb
 2414              		.thumb_func
 2416              	_ZN12roberto_msgs10MotorState11deserializeEPh:
 2417              		.fnstart
 2418              	.LFB181:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 2419              		.loc 8 50 0
 2420              		.cfi_startproc
 2421              		@ args = 0, pretend = 0, frame = 0
 2422              		@ frame_needed = 0, uses_anonymous_args = 0
 2423              	.LVL285:
 2424 0000 70B5     		push	{r4, r5, r6, lr}
 2425              	.LCFI20:
 2426              		.cfi_def_cfa_offset 16
 2427              		.cfi_offset 4, -16
 2428              		.cfi_offset 5, -12
 2429              		.cfi_offset 6, -8
 2430              		.cfi_offset 14, -4
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 2431              		.loc 8 50 0
 2432 0002 0546     		mov	r5, r0
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 2433              		.loc 8 53 0
 2434 0004 0430     		adds	r0, r0, #4
 2435              	.LVL286:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 2436              		.loc 8 50 0
 2437 0006 0E46     		mov	r6, r1
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 2438              		.loc 8 53 0
 2439 0008 FFF7FEFF 		bl	_ZN8std_msgs6Header11deserializeEPh
 2440              	.LVL287:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 2441              		.loc 8 54 0
 2442 000c 05F11801 		add	r1, r5, #24
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 2443              		.loc 8 53 0
 2444 0010 0446     		mov	r4, r0
 2445              	.LVL288:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 2446              		.loc 8 54 0
 2447 0012 3018     		adds	r0, r6, r0
 2448              	.LVL289:
 2449 0014 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 2450              	.LVL290:
 2451 0018 0444     		add	r4, r4, r0
 2452              	.LVL291:
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
 2453              		.loc 8 55 0
 2454 001a 05F11C01 		add	r1, r5, #28
 2455 001e 3019     		adds	r0, r6, r4
 2456 0020 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 2457              	.LVL292:
 2458 0024 0444     		add	r4, r4, r0
 2459              	.LVL293:
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
 2460              		.loc 8 56 0
 2461 0026 05F12001 		add	r1, r5, #32
 2462 002a 3019     		adds	r0, r6, r4
 2463 002c FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 2464              	.LVL294:
 2465 0030 0444     		add	r4, r4, r0
 2466              	.LVL295:
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
 2467              		.loc 8 57 0
 2468 0032 05F12401 		add	r1, r5, #36
 2469 0036 3019     		adds	r0, r6, r4
 2470 0038 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 2471              	.LVL296:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 2472              		.loc 8 58 0
 2473 003c 2044     		add	r0, r0, r4
 2474              	.LVL297:
 2475 003e 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 2476              		.loc 8 61 0
 2477 0040 0130     		adds	r0, r0, #1
 2478              	.LVL298:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 2479              		.loc 8 58 0
 2480 0042 85F82830 		strb	r3, [r5, #40]
 2481              	.LVL299:
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 2482              		.loc 8 61 0
 2483 0046 70BD     		pop	{r4, r5, r6, pc}
 2484              		.cfi_endproc
 2485              	.LFE181:
 2486              		.cantunwind
 2487              		.fnend
 2489              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh,"axG",%progbits,_ZN3r
 2490              		.align	1
 2491              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 2492              		.thumb
 2493              		.thumb_func
 2495              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:
 2496              		.fnstart
 2497              	.LFB220:
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 2498              		.loc 10 72 0
 2499              		.cfi_startproc
 2500              		@ args = 0, pretend = 0, frame = 0
 2501              		@ frame_needed = 0, uses_anonymous_args = 0
 2502              	.LVL300:
 2503 0000 70B5     		push	{r4, r5, r6, lr}
 2504              	.LCFI21:
 2505              		.cfi_def_cfa_offset 16
 2506              		.cfi_offset 4, -16
 2507              		.cfi_offset 5, -12
 2508              		.cfi_offset 6, -8
 2509              		.cfi_offset 14, -4
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 2510              		.loc 10 72 0
 2511 0002 0546     		mov	r5, r0
  73:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 2512              		.loc 10 73 0
 2513 0004 00F10C04 		add	r4, r0, #12
 2514 0008 2046     		mov	r0, r4
 2515              	.LVL301:
 2516 000a FFF7FEFF 		bl	_ZN12roberto_msgs10MotorState11deserializeEPh
 2517              	.LVL302:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 2518              		.loc 10 74 0
 2519 000e AB6B     		ldr	r3, [r5, #56]
 2520 0010 2046     		mov	r0, r4
  75:./lib/ros_lib/ros/subscriber.h **** 
 2521              		.loc 10 75 0
 2522 0012 BDE87040 		pop	{r4, r5, r6, lr}
 2523              	.LCFI22:
 2524              		.cfi_restore 14
 2525              		.cfi_restore 6
 2526              		.cfi_restore 5
 2527              		.cfi_restore 4
 2528              		.cfi_def_cfa_offset 0
 2529              	.LVL303:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 2530              		.loc 10 74 0
 2531 0016 1847     		bx	r3	@ indirect register sibling call
 2532              	.LVL304:
 2533              		.cfi_endproc
 2534              	.LFE220:
 2535              		.cantunwind
 2536              		.fnend
 2538              		.section	.text._ZN15ArduinoHardware4initEv,"axG",%progbits,_ZN15ArduinoHardware4initEv,comdat
 2539              		.align	1
 2540              		.weak	_ZN15ArduinoHardware4initEv
 2541              		.thumb
 2542              		.thumb_func
 2544              	_ZN15ArduinoHardware4initEv:
 2545              		.fnstart
 2546              	.LFB144:
 2547              		.file 13 "./lib/ros_lib/ArduinoHardware.h"
   1:./lib/ros_lib/ArduinoHardware.h **** /* 
   2:./lib/ros_lib/ArduinoHardware.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ArduinoHardware.h ****  *
   4:./lib/ros_lib/ArduinoHardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ArduinoHardware.h ****  * All rights reserved.
   6:./lib/ros_lib/ArduinoHardware.h ****  *
   7:./lib/ros_lib/ArduinoHardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ArduinoHardware.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ArduinoHardware.h ****  * are met:
  10:./lib/ros_lib/ArduinoHardware.h ****  *
  11:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ArduinoHardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ArduinoHardware.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ArduinoHardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ArduinoHardware.h ****  *    with the distribution.
  17:./lib/ros_lib/ArduinoHardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ArduinoHardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ArduinoHardware.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ArduinoHardware.h ****  *
  21:./lib/ros_lib/ArduinoHardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ArduinoHardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ArduinoHardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ArduinoHardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ArduinoHardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ArduinoHardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ArduinoHardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ArduinoHardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ArduinoHardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ArduinoHardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ArduinoHardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ArduinoHardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ArduinoHardware.h ****  */
  34:./lib/ros_lib/ArduinoHardware.h **** 
  35:./lib/ros_lib/ArduinoHardware.h **** #ifndef ROS_ARDUINO_HARDWARE_H_
  36:./lib/ros_lib/ArduinoHardware.h **** #define ROS_ARDUINO_HARDWARE_H_
  37:./lib/ros_lib/ArduinoHardware.h **** 
  38:./lib/ros_lib/ArduinoHardware.h **** #include "stm32f10x.h"
  39:./lib/ros_lib/ArduinoHardware.h **** #include "stm32_time.h"
  40:./lib/ros_lib/ArduinoHardware.h **** #include "led.h"
  41:./lib/ros_lib/ArduinoHardware.h **** 
  42:./lib/ros_lib/ArduinoHardware.h **** #define BUFFER_SIZE 512
  43:./lib/ros_lib/ArduinoHardware.h **** 
  44:./lib/ros_lib/ArduinoHardware.h **** 
  45:./lib/ros_lib/ArduinoHardware.h **** volatile uint16_t USART_FIFO[BUFFER_SIZE];
  46:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTIN;
  47:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTOUT;
  48:./lib/ros_lib/ArduinoHardware.h **** 
  49:./lib/ros_lib/ArduinoHardware.h **** class ArduinoHardware {
  50:./lib/ros_lib/ArduinoHardware.h ****   public:
  51:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(USART_TypeDef* io , long baud= 115200){
  52:./lib/ros_lib/ArduinoHardware.h ****       iostream = io;
  53:./lib/ros_lib/ArduinoHardware.h ****       baud_ = baud;
  54:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  55:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  56:./lib/ros_lib/ArduinoHardware.h ****     }
  57:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware()
  58:./lib/ros_lib/ArduinoHardware.h ****     {
  59:./lib/ros_lib/ArduinoHardware.h ****       /* Leonardo support */
  60:./lib/ros_lib/ArduinoHardware.h ****       iostream = USART1;
  61:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  63:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  64:./lib/ros_lib/ArduinoHardware.h ****     }
  65:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(ArduinoHardware& h){
  66:./lib/ros_lib/ArduinoHardware.h ****       this->iostream = iostream;
  67:./lib/ros_lib/ArduinoHardware.h ****       this->baud_ = h.baud_;
  68:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  69:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  70:./lib/ros_lib/ArduinoHardware.h ****     }
  71:./lib/ros_lib/ArduinoHardware.h ****   
  72:./lib/ros_lib/ArduinoHardware.h ****     void setBaud(long baud){
  73:./lib/ros_lib/ArduinoHardware.h ****       this->baud_= baud;
  74:./lib/ros_lib/ArduinoHardware.h ****     }
  75:./lib/ros_lib/ArduinoHardware.h ****   
  76:./lib/ros_lib/ArduinoHardware.h ****     int getBaud(){return baud_;}
  77:./lib/ros_lib/ArduinoHardware.h **** 
  78:./lib/ros_lib/ArduinoHardware.h ****     void init(){
 2548              		.loc 13 78 0
 2549              		.cfi_startproc
 2550              		@ args = 0, pretend = 0, frame = 24
 2551              		@ frame_needed = 0, uses_anonymous_args = 0
 2552              	.LVL305:
 2553 0000 70B5     		push	{r4, r5, r6, lr}
 2554              		.save {r4, r5, r6, lr}
 2555              	.LCFI23:
 2556              		.cfi_def_cfa_offset 16
 2557              		.cfi_offset 4, -16
 2558              		.cfi_offset 5, -12
 2559              		.cfi_offset 6, -8
 2560              		.cfi_offset 14, -4
 2561 0002 0446     		mov	r4, r0
 2562              		.pad #24
 2563 0004 86B0     		sub	sp, sp, #24
 2564              	.LCFI24:
 2565              		.cfi_def_cfa_offset 40
  79:./lib/ros_lib/ArduinoHardware.h ****       USART_InitTypeDef usart1_init_struct;
  80:./lib/ros_lib/ArduinoHardware.h ****       /* Bit configuration structure for GPIOA PIN9 and PIN10 */
  81:./lib/ros_lib/ArduinoHardware.h ****       GPIO_InitTypeDef gpioa_init_struct;
  82:./lib/ros_lib/ArduinoHardware.h **** 
  83:./lib/ros_lib/ArduinoHardware.h ****       /* Enalbe clock for USART1, AFIO and GPIOA */
  84:./lib/ros_lib/ArduinoHardware.h ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2Periph_AFIO | 
  85:./lib/ros_lib/ArduinoHardware.h ****                            RCC_APB2Periph_GPIOA, ENABLE);
  86:./lib/ros_lib/ArduinoHardware.h ****                             
  87:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Tx */
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_9;
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  90:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
  91:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 2566              		.loc 13 91 0
 2567 0006 214D     		ldr	r5, .L131
  85:./lib/ros_lib/ArduinoHardware.h ****                             
 2568              		.loc 13 85 0
 2569 0008 0121     		movs	r1, #1
 2570 000a 44F20500 		movw	r0, #16389
 2571              	.LVL306:
 2572 000e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 2573              	.LVL307:
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 2574              		.loc 13 88 0
 2575 0012 4FF40073 		mov	r3, #512
 2576 0016 ADF80430 		strh	r3, [sp, #4]	@ movhi
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 2577              		.loc 13 89 0
 2578 001a 0326     		movs	r6, #3
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 2579              		.loc 13 90 0
 2580 001c 1823     		movs	r3, #24
 2581              		.loc 13 91 0
 2582 001e 01A9     		add	r1, sp, #4
 2583 0020 2846     		mov	r0, r5
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 2584              		.loc 13 90 0
 2585 0022 8DF80730 		strb	r3, [sp, #7]
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 2586              		.loc 13 89 0
 2587 0026 8DF80660 		strb	r6, [sp, #6]
 2588              		.loc 13 91 0
 2589 002a FFF7FEFF 		bl	GPIO_Init
 2590              	.LVL308:
  92:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
  93:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_10;
 2591              		.loc 13 93 0
 2592 002e 4FF48063 		mov	r3, #1024
 2593 0032 ADF80430 		strh	r3, [sp, #4]	@ movhi
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  95:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 2594              		.loc 13 95 0
 2595 0036 0423     		movs	r3, #4
  96:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 2596              		.loc 13 96 0
 2597 0038 0DEB0301 		add	r1, sp, r3
 2598 003c 2846     		mov	r0, r5
  95:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 2599              		.loc 13 95 0
 2600 003e 8DF80730 		strb	r3, [sp, #7]
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 2601              		.loc 13 94 0
 2602 0042 8DF80660 		strb	r6, [sp, #6]
 2603              		.loc 13 96 0
 2604 0046 FFF7FEFF 		bl	GPIO_Init
 2605              	.LVL309:
  97:./lib/ros_lib/ArduinoHardware.h **** 
  98:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 */
  99:./lib/ros_lib/ArduinoHardware.h ****       USART_Cmd(iostream, ENABLE);  
 2606              		.loc 13 99 0
 2607 004a 2068     		ldr	r0, [r4]
 2608 004c 0121     		movs	r1, #1
 2609 004e FFF7FEFF 		bl	USART_Cmd
 2610              	.LVL310:
 100:./lib/ros_lib/ArduinoHardware.h ****       /* Baud rate 115200, 8-bit data, One stop bit
 101:./lib/ros_lib/ArduinoHardware.h ****       * No parity, Do both Rx and Tx, No HW flow control
 102:./lib/ros_lib/ArduinoHardware.h ****       */
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_BaudRate = baud_;   
 2611              		.loc 13 103 0
 2612 0052 6368     		ldr	r3, [r4, #4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 2613              		.loc 13 107 0
 2614 0054 0C22     		movs	r2, #12
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 2615              		.loc 13 103 0
 2616 0056 0293     		str	r3, [sp, #8]
 108:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 109:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 110:./lib/ros_lib/ArduinoHardware.h ****       USART_Init(iostream, &usart1_init_struct);
 2617              		.loc 13 110 0
 2618 0058 02A9     		add	r1, sp, #8
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 2619              		.loc 13 104 0
 2620 005a 0023     		movs	r3, #0
 2621              		.loc 13 110 0
 2622 005c 2068     		ldr	r0, [r4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 2623              		.loc 13 104 0
 2624 005e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 2625              		.loc 13 105 0
 2626 0062 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 2627              		.loc 13 106 0
 2628 0066 ADF81030 		strh	r3, [sp, #16]	@ movhi
 108:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 2629              		.loc 13 108 0
 2630 006a ADF81430 		strh	r3, [sp, #20]	@ movhi
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 2631              		.loc 13 107 0
 2632 006e ADF81220 		strh	r2, [sp, #18]	@ movhi
 2633              		.loc 13 110 0
 2634 0072 FFF7FEFF 		bl	USART_Init
 2635              	.LVL311:
 111:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 112:./lib/ros_lib/ArduinoHardware.h ****       USART_ITConfig(iostream, USART_IT_RXNE, ENABLE);
 2636              		.loc 13 112 0
 2637 0076 0122     		movs	r2, #1
 2638 0078 40F22551 		movw	r1, #1317
 2639 007c 2068     		ldr	r0, [r4]
 2640 007e FFF7FEFF 		bl	USART_ITConfig
 2641              	.LVL312:
 2642              	.LBB177:
 2643              	.LBB178:
 2644              		.file 14 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
   1:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**************************************************************************//**
   2:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @file     core_cm3.h
   3:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @version  V1.30
   5:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @date     30. October 2009
   6:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
   7:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @note
   8:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  10:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  11:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  15:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  16:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  22:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
  23:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  24:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CORE_H__
  26:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  27:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  29:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 10: \n
  31:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  34:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 530: \n
  35:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     return(__regBasePri); \n
  36:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * . 
  38:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 550: \n
  39:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  42:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 754: \n
  43:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  46:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 750: \n
  47:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  50:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 528: \n
  51:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  54:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 751: \n
  55:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  58:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  60:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  61:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  62:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -save */
  63:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e10  */
  64:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e530 */
  65:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e550 */
  66:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e754 */
  67:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e750 */
  68:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e528 */
  69:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e751 */
  70:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  71:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  72:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - CMSIS version number
  75:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
  78:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  79:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  80:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
  81:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  extern "C" {
  82:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif 
  83:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  84:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  88:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  90:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  92:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__ICCARM__)
  93:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
  95:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  96:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  97:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * IO definitions
 106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
 111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                 Register Abstraction
 122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  @{
 125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
 126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }  NVIC_Type;                                               
 148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SCB_Type;                                                
 177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                                      
 314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for SysTick
 363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SysTick_Type;
 372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  union  
 413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   {
 414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } ITM_Type;                                                
 445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 505:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0;
 506:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 510:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1;
 511:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 512:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } InterruptType_Type;
 513:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 514:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 518:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 522:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 525:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 529:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 530:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 534:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 535:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 536:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 537:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } MPU_Type;                                                
 549:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 550:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Type Register */
 551:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 554:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 557:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 560:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Control Register */
 561:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 564:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 567:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 570:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Number Register */
 571:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 574:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Base Address Register */
 575:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 578:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 581:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 584:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 588:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 591:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 594:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 597:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 600:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 603:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 606:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 609:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 612:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 614:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 615:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 616:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 619:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 620:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 621:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 622:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } CoreDebug_Type;
 627:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 628:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 632:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 635:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 638:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 641:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 644:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 647:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 650:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 653:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 656:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 659:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 662:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 665:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 669:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 672:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 676:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 679:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 682:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 685:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 688:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 691:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 694:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 697:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 700:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 703:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 706:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 709:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 713:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 714:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 722:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 729:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 733:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 734:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 736:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 737:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 738:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 740:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 741:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 745:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 749:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 753:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 757:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 758:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 759:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 760:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 762:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ARM armcc specific functions */
 764:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 765:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 768:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                             __nop
 769:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFI                             __wfi
 770:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFE                             __wfe
 771:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __SEV                             __sev
 772:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __REV                             __rev
 776:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __RBIT                            __rbit
 777:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 784:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 785:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 790:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 791:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 792:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 794:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
 795:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 796:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
 797:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 798:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 800:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 801:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 803:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 805:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 808:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 810:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 811:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 813:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
 814:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 815:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
 817:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 818:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 820:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 821:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 823:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 825:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 828:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 830:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 831:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 833:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 834:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 835:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 836:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 838:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 840:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 841:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 843:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 844:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 845:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 846:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 848:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 850:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 851:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 853:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 854:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 856:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 858:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __CLREX(void);
 859:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 860:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 861:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 863:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 864:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 865:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 866:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 867:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 869:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 870:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 872:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 873:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 874:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 875:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 876:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 878:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 879:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 881:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 882:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 883:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 885:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 887:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 888:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 890:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   priMask  PriMask
 891:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 892:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 894:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 896:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 897:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 899:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 900:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 901:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 902:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 903:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 905:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 906:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 908:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask faultMask value
 909:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 910:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
 911:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 912:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 914:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 915:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
 916:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
 917:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
 918:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 919:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
 920:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 921:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 923:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 924:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
 925:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 926:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
 927:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 928:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
 929:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 930:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 932:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 934:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 935:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 937:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 939:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CLREX                           __clrex
 940:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 941:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 942:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 944:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 945:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 946:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 947:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 948:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 950:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regBasePri);
 952:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 953:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 954:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 955:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 957:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 958:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 959:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 960:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 961:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 963:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 966:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 967:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 968:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 970:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 971:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 972:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 974:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 976:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regPriMask);
 978:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 979:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 980:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 981:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 983:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
 984:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 985:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 987:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 989:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regPriMask = (priMask);
 991:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 992:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 993:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 994:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 996:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 997:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 998:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 999:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1000:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1002:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regFaultMask);
1004:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1005:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1006:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1007:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1009:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1011:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1012:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1013:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1015:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1018:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1019:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1020:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1021:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1022:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
1023:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1024:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1025:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1026:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1028:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regControl);
1030:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1031:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1032:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1033:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1034:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1035:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1036:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1037:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1038:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1039:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1041:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regControl = control;
1043:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1044:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1045:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1047:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1048:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1049:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* IAR iccarm specific functions */
1051:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1052:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1055:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1058:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1064:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1076:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1077:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1078:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1080:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1081:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1082:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1083:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1084:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1086:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1087:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1089:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1091:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1094:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1096:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1097:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1099:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* GNU gcc specific functions */
1203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
1261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
1263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
1265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
1270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
1272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
1274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
1281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
1290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
1299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
1301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** * 
1316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** *  @return Control value
1317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in integer value
1338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* TASKING carm specific functions */
1437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*
1439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Including the CMSIS ones.
1442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
1445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   Core  Function Interface containing:
1449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core NVIC Functions
1450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core SysTick Functions
1451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core Reset Functions
1452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
1453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@{*/
1454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t reg_value;
1471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   
1473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return priority grouping field 
1485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 2645              		.loc 14 1504 0
 2646 0082 034B     		ldr	r3, .L131+4
 2647 0084 2022     		movs	r2, #32
 2648 0086 5A60     		str	r2, [r3, #4]
 2649              	.LVL313:
 2650              	.LBE178:
 2651              	.LBE177:
 113:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 global interrupt */
 114:./lib/ros_lib/ArduinoHardware.h ****       NVIC_EnableIRQ(USART1_IRQn);
 115:./lib/ros_lib/ArduinoHardware.h ****     }
 2652              		.loc 13 115 0
 2653 0088 06B0     		add	sp, sp, #24
 2654              	.LCFI25:
 2655              		.cfi_def_cfa_offset 16
 2656              		@ sp needed
 2657 008a 70BD     		pop	{r4, r5, r6, pc}
 2658              	.LVL314:
 2659              	.L132:
 2660              		.align	2
 2661              	.L131:
 2662 008c 00080140 		.word	1073809408
 2663 0090 00E100E0 		.word	-536813312
 2664              		.cfi_endproc
 2665              	.LFE144:
 2666              		.fnend
 2668              		.text
 2669              		.align	1
 2670              		.global	USART1_IRQHandler
 2671              		.thumb
 2672              		.thumb_func
 2674              	USART1_IRQHandler:
 2675              		.fnstart
 2676              	.LFB148:
 116:./lib/ros_lib/ArduinoHardware.h **** 
 117:./lib/ros_lib/ArduinoHardware.h ****     int read(){
 118:./lib/ros_lib/ArduinoHardware.h ****       if(USART_CNTIN == USART_CNTOUT)
 119:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 120:./lib/ros_lib/ArduinoHardware.h ****       
 121:./lib/ros_lib/ArduinoHardware.h ****       int returnVal = USART_FIFO[USART_CNTOUT];
 122:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 123:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 124:./lib/ros_lib/ArduinoHardware.h ****     }
 125:./lib/ros_lib/ArduinoHardware.h **** 
 126:./lib/ros_lib/ArduinoHardware.h ****     void write(uint8_t* data, int length){
 127:./lib/ros_lib/ArduinoHardware.h ****       for(int i=0; i<length; i++){
 128:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 129:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 130:./lib/ros_lib/ArduinoHardware.h ****       }
 131:./lib/ros_lib/ArduinoHardware.h ****     }
 132:./lib/ros_lib/ArduinoHardware.h **** 
 133:./lib/ros_lib/ArduinoHardware.h ****     uint32_t time(){
 134:./lib/ros_lib/ArduinoHardware.h ****       return millis();
 135:./lib/ros_lib/ArduinoHardware.h ****     }
 136:./lib/ros_lib/ArduinoHardware.h **** 
 137:./lib/ros_lib/ArduinoHardware.h ****   protected:
 138:./lib/ros_lib/ArduinoHardware.h ****     USART_TypeDef* iostream;
 139:./lib/ros_lib/ArduinoHardware.h ****     long baud_;
 140:./lib/ros_lib/ArduinoHardware.h **** 
 141:./lib/ros_lib/ArduinoHardware.h **** };
 142:./lib/ros_lib/ArduinoHardware.h **** 
 143:./lib/ros_lib/ArduinoHardware.h **** 
 144:./lib/ros_lib/ArduinoHardware.h **** 
 145:./lib/ros_lib/ArduinoHardware.h **** extern "C"{
 146:./lib/ros_lib/ArduinoHardware.h ****   void USART1_IRQHandler(void){
 2677              		.loc 13 146 0
 2678              		.cfi_startproc
 2679              		@ args = 0, pretend = 0, frame = 0
 2680              		@ frame_needed = 0, uses_anonymous_args = 0
 2681 0008 38B5     		push	{r3, r4, r5, lr}
 2682              		.save {r3, r4, r5, lr}
 2683              	.LCFI26:
 2684              		.cfi_def_cfa_offset 16
 2685              		.cfi_offset 3, -16
 2686              		.cfi_offset 4, -12
 2687              		.cfi_offset 5, -8
 2688              		.cfi_offset 14, -4
 147:./lib/ros_lib/ArduinoHardware.h **** 
 148:./lib/ros_lib/ArduinoHardware.h ****     if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET 
 2689              		.loc 13 148 0
 2690 000a 40F22551 		movw	r1, #1317
 2691 000e 0F48     		ldr	r0, .L140
 2692 0010 FFF7FEFF 		bl	USART_GetITStatus
 2693              	.LVL315:
 149:./lib/ros_lib/ArduinoHardware.h ****       && USART_CNTIN != (( USART_CNTOUT - 1 + BUFFER_SIZE) % BUFFER_SIZE)){
 2694              		.loc 13 149 0
 2695 0014 40B1     		cbz	r0, .L134
 2696              		.loc 13 149 0 is_stmt 0 discriminator 1
 2697 0016 0E4C     		ldr	r4, .L140+4
 2698 0018 2368     		ldr	r3, [r4]
 2699 001a 6268     		ldr	r2, [r4, #4]
 2700 001c 03F2FF13 		addw	r3, r3, #511
 2701 0020 C3F30803 		ubfx	r3, r3, #0, #9
 2702 0024 9342     		cmp	r3, r2
 2703 0026 04D1     		bne	.L135
 2704              	.L134:
 150:./lib/ros_lib/ArduinoHardware.h **** 
 151:./lib/ros_lib/ArduinoHardware.h ****       USART_FIFO[USART_CNTIN] = USART_ReceiveData(USART1);
 152:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 153:./lib/ros_lib/ArduinoHardware.h ****     }else{
 154:./lib/ros_lib/ArduinoHardware.h ****       // Should NEVER reach this point!
 155:./lib/ros_lib/ArduinoHardware.h ****       (void)USART_ReceiveData(USART1);  // Clear inerrupt flag by reading byte
 156:./lib/ros_lib/ArduinoHardware.h ****     }
 157:./lib/ros_lib/ArduinoHardware.h ****   }   
 2705              		.loc 13 157 0 is_stmt 1
 2706 0028 BDE83840 		pop	{r3, r4, r5, lr}
 2707              	.LCFI27:
 2708              		.cfi_remember_state
 2709              		.cfi_restore 14
 2710              		.cfi_restore 5
 2711              		.cfi_restore 4
 2712              		.cfi_restore 3
 2713              		.cfi_def_cfa_offset 0
 155:./lib/ros_lib/ArduinoHardware.h ****     }
 2714              		.loc 13 155 0
 2715 002c 0748     		ldr	r0, .L140
 2716 002e FFF7FEBF 		b	USART_ReceiveData
 2717              	.LVL316:
 2718              	.L135:
 2719              	.LCFI28:
 2720              		.cfi_restore_state
 151:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 2721              		.loc 13 151 0
 2722 0032 0648     		ldr	r0, .L140
 2723 0034 6568     		ldr	r5, [r4, #4]
 2724 0036 FFF7FEFF 		bl	USART_ReceiveData
 2725              	.LVL317:
 2726 003a 04EB4505 		add	r5, r4, r5, lsl #1
 2727 003e 2881     		strh	r0, [r5, #8]	@ movhi
 152:./lib/ros_lib/ArduinoHardware.h ****     }else{
 2728              		.loc 13 152 0
 2729 0040 6368     		ldr	r3, [r4, #4]
 2730 0042 0133     		adds	r3, r3, #1
 2731 0044 C3F30803 		ubfx	r3, r3, #0, #9
 2732 0048 6360     		str	r3, [r4, #4]
 2733 004a 38BD     		pop	{r3, r4, r5, pc}
 2734              	.L141:
 2735              		.align	2
 2736              	.L140:
 2737 004c 00380140 		.word	1073821696
 2738 0050 00000000 		.word	.LANCHOR1
 2739              		.cfi_endproc
 2740              	.LFE148:
 2741              		.fnend
 2743              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc,"axG",%p
 2744              		.align	1
 2745              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 2746              		.thumb
 2747              		.thumb_func
 2749              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:
 2750              		.fnstart
 2751              	.LFB207:
 289:./lib/ros_lib/ros/node_handle.h **** 
 290:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 291:./lib/ros_lib/ros/node_handle.h ****        * Time functions
 292:./lib/ros_lib/ros/node_handle.h ****        */
 293:./lib/ros_lib/ros/node_handle.h **** 
 294:./lib/ros_lib/ros/node_handle.h ****       void requestSyncTime()
 295:./lib/ros_lib/ros/node_handle.h ****       {
 296:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 297:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_TIME, &t);
 298:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 299:./lib/ros_lib/ros/node_handle.h ****       }
 300:./lib/ros_lib/ros/node_handle.h **** 
 301:./lib/ros_lib/ros/node_handle.h ****       void syncTime(uint8_t * data)
 302:./lib/ros_lib/ros/node_handle.h ****       {
 303:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 304:./lib/ros_lib/ros/node_handle.h ****         uint32_t offset = hardware_.time() - rt_time;
 305:./lib/ros_lib/ros/node_handle.h **** 
 306:./lib/ros_lib/ros/node_handle.h ****         t.deserialize(data);
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 308:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 309:./lib/ros_lib/ros/node_handle.h **** 
 310:./lib/ros_lib/ros/node_handle.h ****         this->setNow(t.data);
 311:./lib/ros_lib/ros/node_handle.h ****         last_sync_receive_time = hardware_.time();
 312:./lib/ros_lib/ros/node_handle.h ****       }
 313:./lib/ros_lib/ros/node_handle.h **** 
 314:./lib/ros_lib/ros/node_handle.h ****       Time now()
 315:./lib/ros_lib/ros/node_handle.h ****       {
 316:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 317:./lib/ros_lib/ros/node_handle.h ****         Time current_time;
 318:./lib/ros_lib/ros/node_handle.h ****         current_time.sec = ms/1000 + sec_offset;
 319:./lib/ros_lib/ros/node_handle.h ****         current_time.nsec = (ms%1000)*1000000UL + nsec_offset;
 320:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(current_time.sec, current_time.nsec);
 321:./lib/ros_lib/ros/node_handle.h ****         return current_time;
 322:./lib/ros_lib/ros/node_handle.h ****       }
 323:./lib/ros_lib/ros/node_handle.h **** 
 324:./lib/ros_lib/ros/node_handle.h ****       void setNow( Time & new_now )
 325:./lib/ros_lib/ros/node_handle.h ****       {
 326:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 327:./lib/ros_lib/ros/node_handle.h ****         sec_offset = new_now.sec - ms/1000 - 1;
 328:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 329:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 330:./lib/ros_lib/ros/node_handle.h ****       }
 331:./lib/ros_lib/ros/node_handle.h **** 
 332:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 333:./lib/ros_lib/ros/node_handle.h ****        * Topic Management
 334:./lib/ros_lib/ros/node_handle.h ****        */
 335:./lib/ros_lib/ros/node_handle.h **** 
 336:./lib/ros_lib/ros/node_handle.h ****       /* Register a new publisher */
 337:./lib/ros_lib/ros/node_handle.h ****       bool advertise(Publisher & p)
 338:./lib/ros_lib/ros/node_handle.h ****       {
 339:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_PUBLISHERS; i++){
 340:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 341:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 342:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 343:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 344:./lib/ros_lib/ros/node_handle.h ****             return true;
 345:./lib/ros_lib/ros/node_handle.h ****           }
 346:./lib/ros_lib/ros/node_handle.h ****         }
 347:./lib/ros_lib/ros/node_handle.h ****         return false;
 348:./lib/ros_lib/ros/node_handle.h ****       }
 349:./lib/ros_lib/ros/node_handle.h **** 
 350:./lib/ros_lib/ros/node_handle.h ****       /* Register a new subscriber */
 351:./lib/ros_lib/ros/node_handle.h ****       template<typename MsgT>
 352:./lib/ros_lib/ros/node_handle.h ****       bool subscribe(Subscriber< MsgT> & s){
 353:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 354:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 355:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 356:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 357:./lib/ros_lib/ros/node_handle.h ****             return true;
 358:./lib/ros_lib/ros/node_handle.h ****           }
 359:./lib/ros_lib/ros/node_handle.h ****         }
 360:./lib/ros_lib/ros/node_handle.h ****         return false;
 361:./lib/ros_lib/ros/node_handle.h ****       }
 362:./lib/ros_lib/ros/node_handle.h **** 
 363:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Server */
 364:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 365:./lib/ros_lib/ros/node_handle.h ****       bool advertiseService(ServiceServer<MReq,MRes>& srv){
 366:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 367:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 368:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 369:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 370:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 371:./lib/ros_lib/ros/node_handle.h ****             return v;
 372:./lib/ros_lib/ros/node_handle.h ****           }
 373:./lib/ros_lib/ros/node_handle.h ****         }
 374:./lib/ros_lib/ros/node_handle.h ****         return false;
 375:./lib/ros_lib/ros/node_handle.h ****       }
 376:./lib/ros_lib/ros/node_handle.h **** 
 377:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Client */
 378:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 379:./lib/ros_lib/ros/node_handle.h ****       bool serviceClient(ServiceClient<MReq, MRes>& srv){
 380:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 381:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 382:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 383:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 384:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 385:./lib/ros_lib/ros/node_handle.h ****             return v;
 386:./lib/ros_lib/ros/node_handle.h ****           }
 387:./lib/ros_lib/ros/node_handle.h ****         }
 388:./lib/ros_lib/ros/node_handle.h ****         return false;
 389:./lib/ros_lib/ros/node_handle.h ****       }
 390:./lib/ros_lib/ros/node_handle.h **** 
 391:./lib/ros_lib/ros/node_handle.h ****       void negotiateTopics()
 392:./lib/ros_lib/ros/node_handle.h ****       {
 393:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::TopicInfo ti;
 394:./lib/ros_lib/ros/node_handle.h ****         int i;
 395:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_PUBLISHERS; i++)
 396:./lib/ros_lib/ros/node_handle.h ****         {
 397:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] != 0) // non-empty slot
 398:./lib/ros_lib/ros/node_handle.h ****           {
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = publishers[i]->id_;
 400:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 401:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 402:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 403:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 404:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 405:./lib/ros_lib/ros/node_handle.h ****           }
 406:./lib/ros_lib/ros/node_handle.h ****         }
 407:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_SUBSCRIBERS; i++)
 408:./lib/ros_lib/ros/node_handle.h ****         {
 409:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] != 0) // non-empty slot
 410:./lib/ros_lib/ros/node_handle.h ****           {
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = subscribers[i]->id_;
 412:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 413:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 414:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 415:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 416:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 417:./lib/ros_lib/ros/node_handle.h ****           }
 418:./lib/ros_lib/ros/node_handle.h ****         }
 419:./lib/ros_lib/ros/node_handle.h ****         configured_ = true;
 420:./lib/ros_lib/ros/node_handle.h ****       }
 421:./lib/ros_lib/ros/node_handle.h **** 
 422:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg * msg)
 423:./lib/ros_lib/ros/node_handle.h ****       {
 424:./lib/ros_lib/ros/node_handle.h ****         if(id >= 100 && !configured_)
 425:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 426:./lib/ros_lib/ros/node_handle.h **** 
 427:./lib/ros_lib/ros/node_handle.h ****         /* serialize message */
 428:./lib/ros_lib/ros/node_handle.h ****         uint16_t l = msg->serialize(message_out+7);
 429:./lib/ros_lib/ros/node_handle.h **** 
 430:./lib/ros_lib/ros/node_handle.h ****         /* setup the header */
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[0] = 0xff;
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 435:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 437:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 438:./lib/ros_lib/ros/node_handle.h **** 
 439:./lib/ros_lib/ros/node_handle.h ****         /* calculate checksum */
 440:./lib/ros_lib/ros/node_handle.h ****         int chk = 0;
 441:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 442:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 443:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 444:./lib/ros_lib/ros/node_handle.h ****         message_out[l++] = 255 - (chk%256);
 445:./lib/ros_lib/ros/node_handle.h **** 
 446:./lib/ros_lib/ros/node_handle.h ****         if( l <= OUTPUT_SIZE ){
 447:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 448:./lib/ros_lib/ros/node_handle.h ****           return l;
 449:./lib/ros_lib/ros/node_handle.h ****         }else{
 450:./lib/ros_lib/ros/node_handle.h ****           logerror("Message from device dropped: message larger than buffer.");
 451:./lib/ros_lib/ros/node_handle.h ****           return -1;
 452:./lib/ros_lib/ros/node_handle.h ****         }
 453:./lib/ros_lib/ros/node_handle.h ****       }
 454:./lib/ros_lib/ros/node_handle.h **** 
 455:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 456:./lib/ros_lib/ros/node_handle.h ****        * Logging
 457:./lib/ros_lib/ros/node_handle.h ****        */
 458:./lib/ros_lib/ros/node_handle.h **** 
 459:./lib/ros_lib/ros/node_handle.h ****     private:
 460:./lib/ros_lib/ros/node_handle.h ****       void log(char byte, const char * msg){
 461:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::Log l;
 462:./lib/ros_lib/ros/node_handle.h ****         l.level= byte;
 463:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 464:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 465:./lib/ros_lib/ros/node_handle.h ****       }
 466:./lib/ros_lib/ros/node_handle.h **** 
 467:./lib/ros_lib/ros/node_handle.h ****     public:
 468:./lib/ros_lib/ros/node_handle.h ****       void logdebug(const char* msg){
 469:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ROSDEBUG, msg);
 470:./lib/ros_lib/ros/node_handle.h ****       }
 471:./lib/ros_lib/ros/node_handle.h ****       void loginfo(const char * msg){
 472:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::INFO, msg);
 473:./lib/ros_lib/ros/node_handle.h ****       }
 474:./lib/ros_lib/ros/node_handle.h ****       void logwarn(const char *msg){
 475:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::WARN, msg);
 476:./lib/ros_lib/ros/node_handle.h ****       }
 477:./lib/ros_lib/ros/node_handle.h ****       void logerror(const char*msg){
 2752              		.loc 11 477 0
 2753              		.cfi_startproc
 2754              		@ args = 0, pretend = 0, frame = 16
 2755              		@ frame_needed = 0, uses_anonymous_args = 0
 2756              	.LVL318:
 2757 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 2758              		.save {lr}
 2759              		.pad #20
 2760              	.LCFI29:
 2761              		.cfi_def_cfa_offset 24
 2762              		.cfi_offset 14, -4
 2763              	.LVL319:
 2764              	.LBB185:
 2765              	.LBB186:
 2766              	.LBB187:
 2767              	.LBB188:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2768              		.loc 3 25 0
 2769 0002 074B     		ldr	r3, .L143
 2770              	.LBE188:
 2771              	.LBE187:
 463:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 2772              		.loc 11 463 0
 2773 0004 0391     		str	r1, [sp, #12]
 2774              	.LBB190:
 2775              	.LBB189:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2776              		.loc 3 25 0
 2777 0006 0193     		str	r3, [sp, #4]
 2778              	.LVL320:
 2779              	.LBE189:
 2780              	.LBE190:
 462:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 2781              		.loc 11 462 0
 2782 0008 0323     		movs	r3, #3
 2783 000a 8DF80830 		strb	r3, [sp, #8]
 464:./lib/ros_lib/ros/node_handle.h ****       }
 2784              		.loc 11 464 0
 2785 000e 0368     		ldr	r3, [r0]
 2786 0010 01AA     		add	r2, sp, #4
 2787 0012 1B68     		ldr	r3, [r3]
 2788 0014 0721     		movs	r1, #7
 2789              	.LVL321:
 2790 0016 9847     		blx	r3
 2791              	.LVL322:
 2792              	.LBE186:
 2793              	.LBE185:
 478:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ERROR, msg);
 479:./lib/ros_lib/ros/node_handle.h ****       }
 2794              		.loc 11 479 0
 2795 0018 05B0     		add	sp, sp, #20
 2796              	.LCFI30:
 2797              		.cfi_def_cfa_offset 4
 2798              		@ sp needed
 2799 001a 5DF804FB 		ldr	pc, [sp], #4
 2800              	.L144:
 2801 001e 00BF     		.align	2
 2802              	.L143:
 2803 0020 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 2804              		.cfi_endproc
 2805              	.LFE207:
 2806              		.fnend
 2808              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE,"
 2809              		.align	1
 2810              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 2811              		.thumb
 2812              		.thumb_func
 2814              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:
 2815              		.fnstart
 2816              	.LFB213:
 422:./lib/ros_lib/ros/node_handle.h ****       {
 2817              		.loc 11 422 0
 2818              		.cfi_startproc
 2819              		@ args = 0, pretend = 0, frame = 0
 2820              		@ frame_needed = 0, uses_anonymous_args = 0
 2821              	.LVL323:
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 2822              		.loc 11 424 0
 2823 0000 6329     		cmp	r1, #99
 422:./lib/ros_lib/ros/node_handle.h ****       {
 2824              		.loc 11 422 0
 2825 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2826              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 2827              	.LCFI31:
 2828              		.cfi_def_cfa_offset 32
 2829              		.cfi_offset 3, -32
 2830              		.cfi_offset 4, -28
 2831              		.cfi_offset 5, -24
 2832              		.cfi_offset 6, -20
 2833              		.cfi_offset 7, -16
 2834              		.cfi_offset 8, -12
 2835              		.cfi_offset 9, -8
 2836              		.cfi_offset 14, -4
 422:./lib/ros_lib/ros/node_handle.h ****       {
 2837              		.loc 11 422 0
 2838 0006 0446     		mov	r4, r0
 2839 0008 0E46     		mov	r6, r1
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 2840              		.loc 11 424 0
 2841 000a 03DD     		ble	.L146
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 2842              		.loc 11 424 0 is_stmt 0 discriminator 1
 2843 000c 90F8F454 		ldrb	r5, [r0, #1268]	@ zero_extendqisi2
 2844 0010 002D     		cmp	r5, #0
 2845 0012 4FD0     		beq	.L147
 2846              	.L146:
 428:./lib/ros_lib/ros/node_handle.h **** 
 2847              		.loc 11 428 0 is_stmt 1
 2848 0014 1368     		ldr	r3, [r2]
 2849 0016 04F21F21 		addw	r1, r4, #543
 2850              	.LVL324:
 2851 001a 1B68     		ldr	r3, [r3]
 2852 001c 1046     		mov	r0, r2
 2853              	.LVL325:
 2854 001e 9847     		blx	r3
 2855              	.LVL326:
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 2856              		.loc 11 431 0
 2857 0020 FF22     		movs	r2, #255
 2858 0022 84F81822 		strb	r2, [r4, #536]
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 2859              		.loc 11 432 0
 2860 0026 FE22     		movs	r2, #254
 428:./lib/ros_lib/ros/node_handle.h **** 
 2861              		.loc 11 428 0
 2862 0028 83B2     		uxth	r3, r0
 2863              	.LVL327:
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 2864              		.loc 11 432 0
 2865 002a 84F81922 		strb	r2, [r4, #537]
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 2866              		.loc 11 433 0
 2867 002e C2B2     		uxtb	r2, r0
 434:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 2868              		.loc 11 434 0
 2869 0030 C0F30720 		ubfx	r0, r0, #8, #8
 2870 0034 84F81B02 		strb	r0, [r4, #539]
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 2871              		.loc 11 435 0
 2872 0038 1044     		add	r0, r0, r2
 2873 003a C043     		mvns	r0, r0
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 2874              		.loc 11 436 0
 2875 003c 84F81D62 		strb	r6, [r4, #541]
 437:./lib/ros_lib/ros/node_handle.h **** 
 2876              		.loc 11 437 0
 2877 0040 46F30726 		sbfx	r6, r6, #8, #8
 2878              	.LVL328:
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 2879              		.loc 11 433 0
 2880 0044 84F81A22 		strb	r2, [r4, #538]
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 2881              		.loc 11 435 0
 2882 0048 84F81C02 		strb	r0, [r4, #540]
 437:./lib/ros_lib/ros/node_handle.h **** 
 2883              		.loc 11 437 0
 2884 004c 84F81E62 		strb	r6, [r4, #542]
 2885              	.LVL329:
 2886 0050 04F50770 		add	r0, r4, #540
 2887              	.LBB195:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 2888              		.loc 11 441 0
 2889 0054 0521     		movs	r1, #5
 2890              	.LBE195:
 440:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 2891              		.loc 11 440 0
 2892 0056 0022     		movs	r2, #0
 2893              	.LBB196:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 2894              		.loc 11 441 0
 2895 0058 9E1D     		adds	r6, r3, #6
 2896              	.LVL330:
 2897              	.L149:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 2898              		.loc 11 441 0 is_stmt 0 discriminator 3
 2899 005a B142     		cmp	r1, r6
 2900 005c 04DC     		bgt	.L148
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 2901              		.loc 11 442 0 is_stmt 1 discriminator 2
 2902 005e 10F8015F 		ldrb	r5, [r0, #1]!	@ zero_extendqisi2
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 2903              		.loc 11 441 0 discriminator 2
 2904 0062 0131     		adds	r1, r1, #1
 2905              	.LVL331:
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 2906              		.loc 11 442 0 discriminator 2
 2907 0064 2A44     		add	r2, r2, r5
 2908              	.LVL332:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 2909              		.loc 11 441 0 discriminator 2
 2910 0066 F8E7     		b	.L149
 2911              	.L148:
 2912              	.LVL333:
 2913              	.LBE196:
 444:./lib/ros_lib/ros/node_handle.h **** 
 2914              		.loc 11 444 0
 2915 0068 D243     		mvns	r2, r2
 2916              	.LVL334:
 2917 006a 03F10806 		add	r6, r3, #8
 2918 006e 0733     		adds	r3, r3, #7
 2919              	.LVL335:
 2920 0070 B6B2     		uxth	r6, r6
 2921              	.LVL336:
 2922 0072 9BB2     		uxth	r3, r3
 2923 0074 2344     		add	r3, r3, r4
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 2924              		.loc 11 446 0
 2925 0076 B6F5007F 		cmp	r6, #512
 444:./lib/ros_lib/ros/node_handle.h **** 
 2926              		.loc 11 444 0
 2927 007a 83F81822 		strb	r2, [r3, #536]
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 2928              		.loc 11 446 0
 2929 007e 13D8     		bhi	.L150
 447:./lib/ros_lib/ros/node_handle.h ****           return l;
 2930              		.loc 11 447 0
 2931 0080 04F50678 		add	r8, r4, #536
 2932 0084 3546     		mov	r5, r6
 2933              	.LVL337:
 2934 0086 4746     		mov	r7, r8
 2935              	.LBB197:
 2936              	.LBB198:
 128:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 2937              		.loc 13 128 0
 2938 0088 DFF83490 		ldr	r9, .L157+4
 2939              	.LVL338:
 2940              	.L152:
 127:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 2941              		.loc 13 127 0
 2942 008c C8EB0703 		rsb	r3, r8, r7
 2943 0090 9E42     		cmp	r6, r3
 2944 0092 0FDD     		ble	.L147
 2945              	.L155:
 128:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 2946              		.loc 13 128 0
 2947 0094 B9F80030 		ldrh	r3, [r9]
 2948 0098 5B06     		lsls	r3, r3, #25
 2949 009a FBD5     		bpl	.L155
 129:./lib/ros_lib/ArduinoHardware.h ****       }
 2950              		.loc 13 129 0
 2951 009c 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 2952              	.LVL339:
 2953 00a0 6068     		ldr	r0, [r4, #4]
 2954 00a2 FFF7FEFF 		bl	USART_SendData
 2955              	.LVL340:
 2956 00a6 F1E7     		b	.L152
 2957              	.LVL341:
 2958              	.L150:
 2959              	.LBE198:
 2960              	.LBE197:
 450:./lib/ros_lib/ros/node_handle.h ****           return -1;
 2961              		.loc 11 450 0
 2962 00a8 0449     		ldr	r1, .L157
 2963              	.LVL342:
 2964 00aa 2046     		mov	r0, r4
 2965 00ac FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 2966              	.LVL343:
 451:./lib/ros_lib/ros/node_handle.h ****         }
 2967              		.loc 11 451 0
 2968 00b0 4FF0FF35 		mov	r5, #-1
 2969              	.LVL344:
 2970              	.L147:
 453:./lib/ros_lib/ros/node_handle.h **** 
 2971              		.loc 11 453 0
 2972 00b4 2846     		mov	r0, r5
 2973 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2974              	.LVL345:
 2975              	.L158:
 2976 00ba 00BF     		.align	2
 2977              	.L157:
 2978 00bc 8A010000 		.word	.LC15
 2979 00c0 00380140 		.word	1073821696
 2980              		.cfi_endproc
 2981              	.LFE213:
 2982              		.fnend
 2984              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv,"a
 2985              		.align	1
 2986              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 2987              		.thumb
 2988              		.thumb_func
 2990              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:
 2991              		.fnstart
 2992              	.LFB210:
 294:./lib/ros_lib/ros/node_handle.h ****       {
 2993              		.loc 11 294 0
 2994              		.cfi_startproc
 2995              		@ args = 0, pretend = 0, frame = 16
 2996              		@ frame_needed = 0, uses_anonymous_args = 0
 2997              	.LVL346:
 2998 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 2999              		.save {r4, lr}
 3000              		.pad #16
 3001              	.LCFI32:
 3002              		.cfi_def_cfa_offset 24
 3003              		.cfi_offset 4, -8
 3004              		.cfi_offset 14, -4
 3005              	.LVL347:
 3006              	.LBB199:
 3007              	.LBB200:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 3008              		.loc 1 19 0
 3009 0002 084B     		ldr	r3, .L160
 3010              	.LBE200:
 3011              	.LBE199:
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 3012              		.loc 11 297 0
 3013 0004 01AA     		add	r2, sp, #4
 3014              	.LVL348:
 3015              	.LBB204:
 3016              	.LBB203:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 3017              		.loc 1 19 0
 3018 0006 0193     		str	r3, [sp, #4]
 3019              	.LVL349:
 3020              	.LBB201:
 3021              	.LBB202:
 3022              		.file 15 "./lib/ros_lib/ros/time.h"
   1:./lib/ros_lib/ros/time.h **** /*
   2:./lib/ros_lib/ros/time.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/time.h ****  *
   4:./lib/ros_lib/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/time.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/time.h ****  *
   7:./lib/ros_lib/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/time.h ****  * are met:
  10:./lib/ros_lib/ros/time.h ****  *
  11:./lib/ros_lib/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/time.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/time.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/time.h ****  *
  21:./lib/ros_lib/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/time.h ****  */
  34:./lib/ros_lib/ros/time.h **** 
  35:./lib/ros_lib/ros/time.h **** #ifndef ROS_TIME_H_
  36:./lib/ros_lib/ros/time.h **** #define ROS_TIME_H_
  37:./lib/ros_lib/ros/time.h **** 
  38:./lib/ros_lib/ros/time.h **** #include <math.h>
  39:./lib/ros_lib/ros/time.h **** #include <stdint.h>
  40:./lib/ros_lib/ros/time.h **** 
  41:./lib/ros_lib/ros/time.h **** #include "ros/duration.h"
  42:./lib/ros_lib/ros/time.h **** 
  43:./lib/ros_lib/ros/time.h **** namespace ros
  44:./lib/ros_lib/ros/time.h **** {
  45:./lib/ros_lib/ros/time.h ****   void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  46:./lib/ros_lib/ros/time.h **** 
  47:./lib/ros_lib/ros/time.h ****   class Time
  48:./lib/ros_lib/ros/time.h ****   {
  49:./lib/ros_lib/ros/time.h ****     public:
  50:./lib/ros_lib/ros/time.h ****       uint32_t sec, nsec;
  51:./lib/ros_lib/ros/time.h **** 
  52:./lib/ros_lib/ros/time.h ****       Time() : sec(0), nsec(0) {}
 3023              		.loc 15 52 0
 3024 0008 0023     		movs	r3, #0
 3025 000a 0293     		str	r3, [sp, #8]
 3026 000c 0393     		str	r3, [sp, #12]
 3027              	.LVL350:
 3028              	.LBE202:
 3029              	.LBE201:
 3030              	.LBE203:
 3031              	.LBE204:
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 3032              		.loc 11 297 0
 3033 000e 0368     		ldr	r3, [r0]
 3034 0010 0A21     		movs	r1, #10
 3035 0012 1B68     		ldr	r3, [r3]
 294:./lib/ros_lib/ros/node_handle.h ****       {
 3036              		.loc 11 294 0
 3037 0014 0446     		mov	r4, r0
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 3038              		.loc 11 297 0
 3039 0016 9847     		blx	r3
 3040              	.LVL351:
 3041              	.LBB205:
 3042              	.LBB206:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3043              		.loc 13 134 0
 3044 0018 FFF7FEFF 		bl	millis
 3045              	.LVL352:
 3046              	.LBE206:
 3047              	.LBE205:
 298:./lib/ros_lib/ros/node_handle.h ****       }
 3048              		.loc 11 298 0
 3049 001c E060     		str	r0, [r4, #12]
 299:./lib/ros_lib/ros/node_handle.h **** 
 3050              		.loc 11 299 0
 3051 001e 04B0     		add	sp, sp, #16
 3052              	.LCFI33:
 3053              		.cfi_def_cfa_offset 8
 3054              		@ sp needed
 3055 0020 10BD     		pop	{r4, pc}
 3056              	.LVL353:
 3057              	.L161:
 3058 0022 00BF     		.align	2
 3059              	.L160:
 3060 0024 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 3061              		.cfi_endproc
 3062              	.LFE210:
 3063              		.fnend
 3065              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv,"a
 3066              		.align	1
 3067              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 3068              		.thumb
 3069              		.thumb_func
 3071              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:
 3072              		.fnstart
 3073              	.LFB211:
 391:./lib/ros_lib/ros/node_handle.h ****       {
 3074              		.loc 11 391 0
 3075              		.cfi_startproc
 3076              		@ args = 0, pretend = 0, frame = 24
 3077              		@ frame_needed = 0, uses_anonymous_args = 0
 3078              	.LVL354:
 3079 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3080              		.save {r4, r5, r6, r7, r8, lr}
 3081              	.LCFI34:
 3082              		.cfi_def_cfa_offset 24
 3083              		.cfi_offset 4, -24
 3084              		.cfi_offset 5, -20
 3085              		.cfi_offset 6, -16
 3086              		.cfi_offset 7, -12
 3087              		.cfi_offset 8, -8
 3088              		.cfi_offset 14, -4
 3089 0004 0446     		mov	r4, r0
 3090              	.LBB212:
 3091              	.LBB213:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 3092              		.loc 2 34 0
 3093 0006 2B4B     		ldr	r3, .L175
 3094              	.LBE213:
 3095              	.LBE212:
 391:./lib/ros_lib/ros/node_handle.h ****       {
 3096              		.loc 11 391 0
 3097              		.pad #24
 3098 0008 86B0     		sub	sp, sp, #24
 3099              	.LCFI35:
 3100              		.cfi_def_cfa_offset 48
 3101              	.LVL355:
 3102              	.LBB215:
 3103              	.LBB214:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 3104              		.loc 2 34 0
 3105 000a 0093     		str	r3, [sp]
 3106 000c 2A4B     		ldr	r3, .L175+4
 3107 000e 0022     		movs	r2, #0
 3108 0010 ADF80420 		strh	r2, [sp, #4]	@ movhi
 3109 0014 0293     		str	r3, [sp, #8]
 3110 0016 0393     		str	r3, [sp, #12]
 3111 0018 0493     		str	r3, [sp, #16]
 3112 001a 0592     		str	r2, [sp, #20]
 3113              	.LVL356:
 3114 001c 00F21446 		addw	r6, r0, #1044
 3115 0020 00F58F65 		add	r5, r0, #1144
 3116              	.LBE214:
 3117              	.LBE215:
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 3118              		.loc 11 403 0
 3119 0024 4FF40077 		mov	r7, #512
 3120              	.LVL357:
 3121              	.L164:
 397:./lib/ros_lib/ros/node_handle.h ****           {
 3122              		.loc 11 397 0
 3123 0028 56F8043F 		ldr	r3, [r6, #4]!
 3124 002c BBB1     		cbz	r3, .L163
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 3125              		.loc 11 399 0
 3126 002e 9A68     		ldr	r2, [r3, #8]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3127              		.loc 11 401 0
 3128 0030 5868     		ldr	r0, [r3, #4]
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 3129              		.loc 11 399 0
 3130 0032 ADF80420 		strh	r2, [sp, #4]	@ movhi
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 3131              		.loc 11 400 0
 3132 0036 1A68     		ldr	r2, [r3]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3133              		.loc 11 401 0
 3134 0038 0368     		ldr	r3, [r0]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 3135              		.loc 11 400 0
 3136 003a 0292     		str	r2, [sp, #8]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3137              		.loc 11 401 0
 3138 003c 9B68     		ldr	r3, [r3, #8]
 3139 003e 9847     		blx	r3
 3140              	.LVL358:
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 3141              		.loc 11 402 0
 3142 0040 3368     		ldr	r3, [r6]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 3143              		.loc 11 401 0
 3144 0042 0390     		str	r0, [sp, #12]
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 3145              		.loc 11 402 0
 3146 0044 5868     		ldr	r0, [r3, #4]
 3147 0046 0368     		ldr	r3, [r0]
 3148 0048 DB68     		ldr	r3, [r3, #12]
 3149 004a 9847     		blx	r3
 3150              	.LVL359:
 3151 004c 3168     		ldr	r1, [r6]
 404:./lib/ros_lib/ros/node_handle.h ****           }
 3152              		.loc 11 404 0
 3153 004e 2368     		ldr	r3, [r4]
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 3154              		.loc 11 402 0
 3155 0050 0490     		str	r0, [sp, #16]
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 3156              		.loc 11 403 0
 3157 0052 0597     		str	r7, [sp, #20]
 3158              	.LVL360:
 404:./lib/ros_lib/ros/node_handle.h ****           }
 3159              		.loc 11 404 0
 3160 0054 1B68     		ldr	r3, [r3]
 3161 0056 6A46     		mov	r2, sp
 3162 0058 0969     		ldr	r1, [r1, #16]
 3163              	.LVL361:
 3164 005a 2046     		mov	r0, r4
 3165 005c 9847     		blx	r3
 3166              	.LVL362:
 3167              	.L163:
 395:./lib/ros_lib/ros/node_handle.h ****         {
 3168              		.loc 11 395 0 discriminator 2
 3169 005e AE42     		cmp	r6, r5
 3170 0060 E2D1     		bne	.L164
 3171 0062 04F2DC46 		addw	r6, r4, #1244
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 3172              		.loc 11 415 0
 3173 0066 4FF40077 		mov	r7, #512
 3174              	.L166:
 409:./lib/ros_lib/ros/node_handle.h ****           {
 3175              		.loc 11 409 0
 3176 006a 55F8040F 		ldr	r0, [r5, #4]!
 3177 006e C8B1     		cbz	r0, .L165
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 3178              		.loc 11 411 0
 3179 0070 4368     		ldr	r3, [r0, #4]
 3180 0072 ADF80430 		strh	r3, [sp, #4]	@ movhi
 412:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 3181              		.loc 11 412 0
 3182 0076 8368     		ldr	r3, [r0, #8]
 3183 0078 0293     		str	r3, [sp, #8]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 3184              		.loc 11 413 0
 3185 007a 0368     		ldr	r3, [r0]
 3186 007c 9B68     		ldr	r3, [r3, #8]
 3187 007e 9847     		blx	r3
 3188              	.LVL363:
 3189 0080 0390     		str	r0, [sp, #12]
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 3190              		.loc 11 414 0
 3191 0082 2868     		ldr	r0, [r5]
 3192 0084 0368     		ldr	r3, [r0]
 3193 0086 DB68     		ldr	r3, [r3, #12]
 3194 0088 9847     		blx	r3
 3195              	.LVL364:
 416:./lib/ros_lib/ros/node_handle.h ****           }
 3196              		.loc 11 416 0
 3197 008a 2368     		ldr	r3, [r4]
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 3198              		.loc 11 414 0
 3199 008c 0490     		str	r0, [sp, #16]
 416:./lib/ros_lib/ros/node_handle.h ****           }
 3200              		.loc 11 416 0
 3201 008e 2868     		ldr	r0, [r5]
 3202 0090 D3F80080 		ldr	r8, [r3]
 3203 0094 0368     		ldr	r3, [r0]
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 3204              		.loc 11 415 0
 3205 0096 0597     		str	r7, [sp, #20]
 416:./lib/ros_lib/ros/node_handle.h ****           }
 3206              		.loc 11 416 0
 3207 0098 5B68     		ldr	r3, [r3, #4]
 3208 009a 9847     		blx	r3
 3209              	.LVL365:
 3210 009c 6A46     		mov	r2, sp
 3211 009e 0146     		mov	r1, r0
 3212 00a0 2046     		mov	r0, r4
 3213 00a2 C047     		blx	r8
 3214              	.LVL366:
 3215              	.L165:
 407:./lib/ros_lib/ros/node_handle.h ****         {
 3216              		.loc 11 407 0 discriminator 2
 3217 00a4 AE42     		cmp	r6, r5
 3218 00a6 E0D1     		bne	.L166
 419:./lib/ros_lib/ros/node_handle.h ****       }
 3219              		.loc 11 419 0
 3220 00a8 0123     		movs	r3, #1
 3221 00aa 84F8F434 		strb	r3, [r4, #1268]
 420:./lib/ros_lib/ros/node_handle.h **** 
 3222              		.loc 11 420 0
 3223 00ae 06B0     		add	sp, sp, #24
 3224              	.LCFI36:
 3225              		.cfi_def_cfa_offset 24
 3226              	.LVL367:
 3227              		@ sp needed
 3228 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3229              	.LVL368:
 3230              	.L176:
 3231              		.align	2
 3232              	.L175:
 3233 00b4 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 3234 00b8 C3010000 		.word	.LC16
 3235              		.cfi_endproc
 3236              	.LFE211:
 3237              		.fnend
 3239              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh,"axG",%pr
 3240              		.align	1
 3241              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 3242              		.thumb
 3243              		.thumb_func
 3245              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:
 3246              		.fnstart
 3247              	.LFB212:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 3248              		.loc 11 301 0
 3249              		.cfi_startproc
 3250              		@ args = 0, pretend = 0, frame = 16
 3251              		@ frame_needed = 0, uses_anonymous_args = 0
 3252              	.LVL369:
 3253 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 3254              		.save {r4, r5, r6, lr}
 3255              		.pad #16
 3256              	.LCFI37:
 3257              		.cfi_def_cfa_offset 32
 3258              		.cfi_offset 4, -16
 3259              		.cfi_offset 5, -12
 3260              		.cfi_offset 6, -8
 3261              		.cfi_offset 14, -4
 3262              	.LVL370:
 3263              	.LBB230:
 3264              	.LBB231:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 3265              		.loc 1 19 0
 3266 0002 1C4B     		ldr	r3, .L178
 3267              	.LBE231:
 3268              	.LBE230:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 3269              		.loc 11 301 0
 3270 0004 0446     		mov	r4, r0
 3271              	.LBB235:
 3272              	.LBB234:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 3273              		.loc 1 19 0
 3274 0006 0193     		str	r3, [sp, #4]
 3275              	.LVL371:
 3276              	.LBB232:
 3277              	.LBB233:
 3278              		.loc 15 52 0
 3279 0008 0023     		movs	r3, #0
 3280 000a 0293     		str	r3, [sp, #8]
 3281 000c 0393     		str	r3, [sp, #12]
 3282              	.LVL372:
 3283              	.LBE233:
 3284              	.LBE232:
 3285              	.LBE234:
 3286              	.LBE235:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 3287              		.loc 11 301 0
 3288 000e 0D46     		mov	r5, r1
 3289              	.LBB236:
 3290              	.LBB237:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3291              		.loc 13 134 0
 3292 0010 FFF7FEFF 		bl	millis
 3293              	.LVL373:
 3294              	.LBE237:
 3295              	.LBE236:
 304:./lib/ros_lib/ros/node_handle.h **** 
 3296              		.loc 11 304 0
 3297 0014 E268     		ldr	r2, [r4, #12]
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 3298              		.loc 11 306 0
 3299 0016 2946     		mov	r1, r5
 304:./lib/ros_lib/ros/node_handle.h **** 
 3300              		.loc 11 304 0
 3301 0018 861A     		subs	r6, r0, r2
 3302              	.LVL374:
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 3303              		.loc 11 307 0
 3304 001a 4FF47A75 		mov	r5, #1000
 3305              	.LVL375:
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 3306              		.loc 11 306 0
 3307 001e 01A8     		add	r0, sp, #4
 3308 0020 FFF7FEFF 		bl	_ZN8std_msgs4Time11deserializeEPh
 3309              	.LVL376:
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 3310              		.loc 11 307 0
 3311 0024 B6FBF5F2 		udiv	r2, r6, r5
 3312 0028 029B     		ldr	r3, [sp, #8]
 3313 002a 1344     		add	r3, r3, r2
 308:./lib/ros_lib/ros/node_handle.h **** 
 3314              		.loc 11 308 0
 3315 002c 05FB1262 		mls	r2, r5, r2, r6
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 3316              		.loc 11 307 0
 3317 0030 0293     		str	r3, [sp, #8]
 308:./lib/ros_lib/ros/node_handle.h **** 
 3318              		.loc 11 308 0
 3319 0032 114E     		ldr	r6, .L178+4
 3320              	.LVL377:
 3321 0034 039B     		ldr	r3, [sp, #12]
 3322 0036 06FB0232 		mla	r2, r6, r2, r3
 3323 003a 0392     		str	r2, [sp, #12]
 3324              	.LVL378:
 3325              	.LBB238:
 3326              	.LBB239:
 3327              	.LBB240:
 3328              	.LBB241:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3329              		.loc 13 134 0
 3330 003c FFF7FEFF 		bl	millis
 3331              	.LVL379:
 3332              	.LBE241:
 3333              	.LBE240:
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 3334              		.loc 11 327 0
 3335 0040 B0FBF5F3 		udiv	r3, r0, r5
 3336 0044 029A     		ldr	r2, [sp, #8]
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 3337              		.loc 11 328 0
 3338 0046 0399     		ldr	r1, [sp, #12]
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 3339              		.loc 11 327 0
 3340 0048 013A     		subs	r2, r2, #1
 3341 004a D21A     		subs	r2, r2, r3
 3342 004c 2261     		str	r2, [r4, #16]
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 3343              		.loc 11 328 0
 3344 004e 0B4A     		ldr	r2, .L178+8
 3345 0050 05FB1300 		mls	r0, r5, r3, r0
 3346              	.LVL380:
 3347 0054 0A44     		add	r2, r2, r1
 3348 0056 2146     		mov	r1, r4
 3349 0058 06FB1023 		mls	r3, r6, r0, r2
 329:./lib/ros_lib/ros/node_handle.h ****       }
 3350              		.loc 11 329 0
 3351 005c 04F11000 		add	r0, r4, #16
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 3352              		.loc 11 328 0
 3353 0060 41F8143F 		str	r3, [r1, #20]!
 329:./lib/ros_lib/ros/node_handle.h ****       }
 3354              		.loc 11 329 0
 3355 0064 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 3356              	.LVL381:
 3357              	.LBE239:
 3358              	.LBE238:
 3359              	.LBB242:
 3360              	.LBB243:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3361              		.loc 13 134 0
 3362 0068 FFF7FEFF 		bl	millis
 3363              	.LVL382:
 3364              	.LBE243:
 3365              	.LBE242:
 311:./lib/ros_lib/ros/node_handle.h ****       }
 3366              		.loc 11 311 0
 3367 006c C4F8FC04 		str	r0, [r4, #1276]
 312:./lib/ros_lib/ros/node_handle.h **** 
 3368              		.loc 11 312 0
 3369 0070 04B0     		add	sp, sp, #16
 3370              	.LCFI38:
 3371              		.cfi_def_cfa_offset 16
 3372              		@ sp needed
 3373 0072 70BD     		pop	{r4, r5, r6, pc}
 3374              	.LVL383:
 3375              	.L179:
 3376              		.align	2
 3377              	.L178:
 3378 0074 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 3379 0078 40420F00 		.word	1000000
 3380 007c 00CA9A3B 		.word	1000000000
 3381              		.cfi_endproc
 3382              	.LFE212:
 3383              		.fnend
 3385              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv,"axG",%pro
 3386              		.align	1
 3387              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 3388              		.thumb
 3389              		.thumb_func
 3391              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:
 3392              		.fnstart
 3393              	.LFB208:
 184:./lib/ros_lib/ros/node_handle.h **** 
 3394              		.loc 11 184 0
 3395              		.cfi_startproc
 3396              		@ args = 0, pretend = 0, frame = 0
 3397              		@ frame_needed = 0, uses_anonymous_args = 0
 3398              	.LVL384:
 3399 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3400              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 3401              	.LCFI39:
 3402              		.cfi_def_cfa_offset 32
 3403              		.cfi_offset 3, -32
 3404              		.cfi_offset 4, -28
 3405              		.cfi_offset 5, -24
 3406              		.cfi_offset 6, -20
 3407              		.cfi_offset 7, -16
 3408              		.cfi_offset 8, -12
 3409              		.cfi_offset 9, -8
 3410              		.cfi_offset 14, -4
 184:./lib/ros_lib/ros/node_handle.h **** 
 3411              		.loc 11 184 0
 3412 0004 0446     		mov	r4, r0
 3413              	.LVL385:
 3414              	.LBB251:
 3415              	.LBB252:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3416              		.loc 13 134 0
 3417 0006 FFF7FEFF 		bl	millis
 3418              	.LVL386:
 3419              	.LBE252:
 3420              	.LBE251:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 3421              		.loc 11 188 0
 3422 000a 42F6F822 		movw	r2, #11000
 3423 000e D4F8FC34 		ldr	r3, [r4, #1276]
 3424              	.LBB254:
 3425              	.LBB253:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3426              		.loc 13 134 0
 3427 0012 0646     		mov	r6, r0
 3428              	.LVL387:
 3429              	.LBE253:
 3430              	.LBE254:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 3431              		.loc 11 188 0
 3432 0014 C31A     		subs	r3, r0, r3
 3433 0016 9342     		cmp	r3, r2
 189:./lib/ros_lib/ros/node_handle.h ****          }
 3434              		.loc 11 189 0
 3435 0018 84BF     		itt	hi
 3436 001a 0023     		movhi	r3, #0
 3437 001c 84F8F434 		strbhi	r3, [r4, #1268]
 193:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 3438              		.loc 11 193 0
 3439 0020 D4F8E034 		ldr	r3, [r4, #1248]
 3440 0024 33B1     		cbz	r3, .L182
 194:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 3441              		.loc 11 194 0
 3442 0026 D4F80035 		ldr	r3, [r4, #1280]
 3443 002a 8342     		cmp	r3, r0
 195:./lib/ros_lib/ros/node_handle.h ****           }
 3444              		.loc 11 195 0
 3445 002c 3CBF     		itt	cc
 3446 002e 0023     		movcc	r3, #0
 3447 0030 C4F8E034 		strcc	r3, [r4, #1248]
 3448              	.L182:
 3449              	.LBB255:
 3450              	.LBB256:
 3451              	.LBB257:
 118:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 3452              		.loc 13 118 0
 3453 0034 744F     		ldr	r7, .L222
 3454              	.LBE257:
 3455              	.LBE256:
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 3456              		.loc 11 252 0
 3457 0036 4FF00008 		mov	r8, #0
 269:./lib/ros_lib/ros/node_handle.h ****               }
 3458              		.loc 11 269 0
 3459 003a 04F11809 		add	r9, r4, #24
 3460              	.LVL388:
 3461              	.L183:
 3462              	.LBB260:
 3463              	.LBB258:
 118:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 3464              		.loc 13 118 0
 3465 003e 7A68     		ldr	r2, [r7, #4]
 3466 0040 3B68     		ldr	r3, [r7]
 3467 0042 9A42     		cmp	r2, r3
 3468 0044 00F0CC80 		beq	.L184
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 3469              		.loc 13 121 0
 3470 0048 3B68     		ldr	r3, [r7]
 3471              	.LBE258:
 3472              	.LBE260:
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 3473              		.loc 11 206 0
 3474 004a D4F8E054 		ldr	r5, [r4, #1248]
 3475              	.LBB261:
 3476              	.LBB259:
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 3477              		.loc 13 121 0
 3478 004e 07EB4303 		add	r3, r7, r3, lsl #1
 3479 0052 1B89     		ldrh	r3, [r3, #8]
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 3480              		.loc 13 122 0
 3481 0054 3A68     		ldr	r2, [r7]
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 3482              		.loc 13 121 0
 3483 0056 9BB2     		uxth	r3, r3
 3484              	.LVL389:
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 3485              		.loc 13 122 0
 3486 0058 0132     		adds	r2, r2, #1
 3487 005a C2F30802 		ubfx	r2, r2, #0, #9
 3488 005e 3A60     		str	r2, [r7]
 3489              	.LVL390:
 3490              	.LBE259:
 3491              	.LBE261:
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 3492              		.loc 11 205 0
 3493 0060 D4F8F024 		ldr	r2, [r4, #1264]
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 3494              		.loc 11 206 0
 3495 0064 072D     		cmp	r5, #7
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 3496              		.loc 11 205 0
 3497 0066 1A44     		add	r2, r2, r3
 3498 0068 C4F8F024 		str	r2, [r4, #1264]
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 3499              		.loc 11 206 0
 3500 006c 0FD1     		bne	.L185
 207:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 3501              		.loc 11 207 0
 3502 006e D4F8EC24 		ldr	r2, [r4, #1260]
 3503 0072 511C     		adds	r1, r2, #1
 3504 0074 2244     		add	r2, r2, r4
 3505 0076 C4F8EC14 		str	r1, [r4, #1260]
 3506 007a 1376     		strb	r3, [r2, #24]
 208:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 3507              		.loc 11 208 0
 3508 007c D4F8E434 		ldr	r3, [r4, #1252]
 3509 0080 013B     		subs	r3, r3, #1
 3510 0082 C4F8E434 		str	r3, [r4, #1252]
 3511              	.L220:
 209:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 3512              		.loc 11 209 0
 3513 0086 002B     		cmp	r3, #0
 3514 0088 D9D1     		bne	.L183
 210:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 3515              		.loc 11 210 0
 3516 008a 0823     		movs	r3, #8
 3517 008c 1AE0     		b	.L218
 3518              	.L185:
 211:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 3519              		.loc 11 211 0
 3520 008e A5B9     		cbnz	r5, .L188
 212:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 3521              		.loc 11 212 0
 3522 0090 FF2B     		cmp	r3, #255
 3523 0092 07D1     		bne	.L189
 213:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 3524              		.loc 11 213 0
 3525 0094 0123     		movs	r3, #1
 3526 0096 C4F8E034 		str	r3, [r4, #1248]
 214:./lib/ros_lib/ros/node_handle.h ****             }
 3527              		.loc 11 214 0
 3528 009a 06F11403 		add	r3, r6, #20
 3529 009e C4F80035 		str	r3, [r4, #1280]
 3530 00a2 CCE7     		b	.L183
 3531              	.L189:
 3532              	.LVL391:
 3533              	.LBB262:
 3534              	.LBB263:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 3535              		.loc 13 134 0
 3536 00a4 FFF7FEFF 		bl	millis
 3537              	.LVL392:
 3538              	.LBE263:
 3539              	.LBE262:
 216:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 3540              		.loc 11 216 0
 3541 00a8 801B     		subs	r0, r0, r6
 3542 00aa 0528     		cmp	r0, #5
 3543 00ac C7D9     		bls	.L183
 218:./lib/ros_lib/ros/node_handle.h ****               return -2;
 3544              		.loc 11 218 0
 3545 00ae 84F8F454 		strb	r5, [r4, #1268]
 219:./lib/ros_lib/ros/node_handle.h ****             }
 3546              		.loc 11 219 0
 3547 00b2 6FF00100 		mvn	r0, #1
 3548 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3549              	.LVL393:
 3550              	.L188:
 221:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 3551              		.loc 11 221 0
 3552 00ba 012D     		cmp	r5, #1
 3553 00bc 0FD1     		bne	.L191
 222:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 3554              		.loc 11 222 0
 3555 00be FE2B     		cmp	r3, #254
 3556 00c0 03D1     		bne	.L192
 223:./lib/ros_lib/ros/node_handle.h ****             }else{
 3557              		.loc 11 223 0
 3558 00c2 0223     		movs	r3, #2
 3559              	.L218:
 3560 00c4 C4F8E034 		str	r3, [r4, #1248]
 3561 00c8 B9E7     		b	.L183
 3562              	.L192:
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 3563              		.loc 11 226 0
 3564 00ca 94F8F434 		ldrb	r3, [r4, #1268]	@ zero_extendqisi2
 225:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 3565              		.loc 11 225 0
 3566 00ce C4F8E084 		str	r8, [r4, #1248]
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 3567              		.loc 11 226 0
 3568 00d2 002B     		cmp	r3, #0
 3569 00d4 B3D1     		bne	.L183
 227:./lib/ros_lib/ros/node_handle.h ****             }
 3570              		.loc 11 227 0
 3571 00d6 2046     		mov	r0, r4
 3572 00d8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 3573              	.LVL394:
 3574 00dc AFE7     		b	.L183
 3575              	.L191:
 229:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 3576              		.loc 11 229 0
 3577 00de 022D     		cmp	r5, #2
 3578 00e0 05D1     		bne	.L193
 230:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 3579              		.loc 11 230 0
 3580 00e2 C4F8E434 		str	r3, [r4, #1252]
 231:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 3581              		.loc 11 231 0
 3582 00e6 C4F8EC84 		str	r8, [r4, #1260]
 232:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 3583              		.loc 11 232 0
 3584 00ea 0322     		movs	r2, #3
 3585 00ec 20E0     		b	.L219
 3586              	.L193:
 234:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 3587              		.loc 11 234 0
 3588 00ee 032D     		cmp	r5, #3
 3589 00f0 07D1     		bne	.L194
 235:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 3590              		.loc 11 235 0
 3591 00f2 D4F8E424 		ldr	r2, [r4, #1252]
 3592 00f6 02EB0323 		add	r3, r2, r3, lsl #8
 3593 00fa C4F8E434 		str	r3, [r4, #1252]
 236:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 3594              		.loc 11 236 0
 3595 00fe 0423     		movs	r3, #4
 3596 0100 E0E7     		b	.L218
 3597              	.L194:
 237:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 3598              		.loc 11 237 0
 3599 0102 042D     		cmp	r5, #4
 3600 0104 0FD1     		bne	.L195
 238:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 3601              		.loc 11 238 0
 3602 0106 414B     		ldr	r3, .L222+4
 3603 0108 1340     		ands	r3, r3, r2
 3604 010a 002B     		cmp	r3, #0
 3605 010c BEBF     		ittt	lt
 3606 010e 03F1FF33 		addlt	r3, r3, #-1
 3607 0112 63F0FF03 		ornlt	r3, r3, #255
 3608 0116 0133     		addlt	r3, r3, #1
 3609 0118 FF2B     		cmp	r3, #255
 3610 011a 01D1     		bne	.L196
 239:./lib/ros_lib/ros/node_handle.h **** 	    else
 3611              		.loc 11 239 0
 3612 011c 0523     		movs	r3, #5
 3613 011e D1E7     		b	.L218
 3614              	.L196:
 241:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 3615              		.loc 11 241 0
 3616 0120 C4F8E084 		str	r8, [r4, #1248]
 3617 0124 8BE7     		b	.L183
 3618              	.L195:
 242:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 3619              		.loc 11 242 0
 3620 0126 052D     		cmp	r5, #5
 3621 0128 07D1     		bne	.L198
 243:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 3622              		.loc 11 243 0
 3623 012a C4F8E834 		str	r3, [r4, #1256]
 244:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 3624              		.loc 11 244 0
 3625 012e 0622     		movs	r2, #6
 3626              	.L219:
 3627 0130 C4F8E024 		str	r2, [r4, #1248]
 245:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 3628              		.loc 11 245 0
 3629 0134 C4F8F034 		str	r3, [r4, #1264]
 3630 0138 81E7     		b	.L183
 3631              	.L198:
 246:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 3632              		.loc 11 246 0
 3633 013a 062D     		cmp	r5, #6
 3634 013c 0BD1     		bne	.L199
 247:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 3635              		.loc 11 247 0
 3636 013e D4F8E824 		ldr	r2, [r4, #1256]
 3637 0142 02EB0323 		add	r3, r2, r3, lsl #8
 3638 0146 C4F8E834 		str	r3, [r4, #1256]
 248:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 3639              		.loc 11 248 0
 3640 014a 0723     		movs	r3, #7
 3641 014c C4F8E034 		str	r3, [r4, #1248]
 249:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 3642              		.loc 11 249 0
 3643 0150 D4F8E434 		ldr	r3, [r4, #1252]
 3644 0154 97E7     		b	.L220
 3645              	.L199:
 251:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 3646              		.loc 11 251 0
 3647 0156 082D     		cmp	r5, #8
 3648 0158 7FF471AF 		bne	.L183
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 3649              		.loc 11 253 0
 3650 015c 2B4B     		ldr	r3, .L222+4
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 3651              		.loc 11 252 0
 3652 015e C4F8E084 		str	r8, [r4, #1248]
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 3653              		.loc 11 253 0
 3654 0162 1340     		ands	r3, r3, r2
 3655 0164 002B     		cmp	r3, #0
 3656 0166 BEBF     		ittt	lt
 3657 0168 03F1FF33 		addlt	r3, r3, #-1
 3658 016c 63F0FF03 		ornlt	r3, r3, #255
 3659 0170 0133     		addlt	r3, r3, #1
 3660 0172 FF2B     		cmp	r3, #255
 3661 0174 7FF463AF 		bne	.L183
 254:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 3662              		.loc 11 254 0
 3663 0178 D4F8E834 		ldr	r3, [r4, #1256]
 3664 017c 6BB9     		cbnz	r3, .L202
 255:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 3665              		.loc 11 255 0
 3666 017e 2046     		mov	r0, r4
 3667 0180 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 3668              	.LVL395:
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 3669              		.loc 11 256 0
 3670 0184 2046     		mov	r0, r4
 3671 0186 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 3672              	.LVL396:
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 3673              		.loc 11 257 0
 3674 018a C4F8F864 		str	r6, [r4, #1272]
 258:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 3675              		.loc 11 258 0
 3676 018e C4F8FC64 		str	r6, [r4, #1276]
 259:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 3677              		.loc 11 259 0
 3678 0192 4FF0FF30 		mov	r0, #-1
 3679 0196 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3680              	.LVL397:
 3681              	.L202:
 260:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 3682              		.loc 11 260 0
 3683 019a 0A2B     		cmp	r3, #10
 3684 019c 04D1     		bne	.L203
 261:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 3685              		.loc 11 261 0
 3686 019e 4946     		mov	r1, r9
 3687 01a0 2046     		mov	r0, r4
 3688 01a2 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 3689              	.LVL398:
 3690 01a6 4AE7     		b	.L183
 3691              	.L203:
 262:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 3692              		.loc 11 262 0
 3693 01a8 062B     		cmp	r3, #6
 3694 01aa 08D1     		bne	.L204
 263:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 3695              		.loc 11 263 0
 3696 01ac 4946     		mov	r1, r9
 3697 01ae 04F5A160 		add	r0, r4, #1288
 3698 01b2 FFF7FEFF 		bl	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 3699              	.LVL399:
 264:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 3700              		.loc 11 264 0
 3701 01b6 0123     		movs	r3, #1
 3702 01b8 84F80435 		strb	r3, [r4, #1284]
 3703 01bc 3FE7     		b	.L183
 3704              	.L204:
 265:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 3705              		.loc 11 265 0
 3706 01be 0B2B     		cmp	r3, #11
 3707 01c0 02D1     		bne	.L205
 266:./lib/ros_lib/ros/node_handle.h ****               }else{
 3708              		.loc 11 266 0
 3709 01c2 84F8F484 		strb	r8, [r4, #1268]
 3710 01c6 3AE7     		b	.L183
 3711              	.L205:
 268:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 3712              		.loc 11 268 0
 3713 01c8 04EB8303 		add	r3, r4, r3, lsl #2
 3714 01cc D3F8EC02 		ldr	r0, [r3, #748]
 3715 01d0 0028     		cmp	r0, #0
 3716 01d2 3FF434AF 		beq	.L183
 269:./lib/ros_lib/ros/node_handle.h ****               }
 3717              		.loc 11 269 0
 3718 01d6 0368     		ldr	r3, [r0]
 3719 01d8 4946     		mov	r1, r9
 3720 01da 1B68     		ldr	r3, [r3]
 3721 01dc 9847     		blx	r3
 3722              	.LVL400:
 3723 01de 2EE7     		b	.L183
 3724              	.L184:
 3725              	.LBE255:
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 3726              		.loc 11 276 0
 3727 01e0 94F8F404 		ldrb	r0, [r4, #1268]	@ zero_extendqisi2
 3728 01e4 70B1     		cbz	r0, .L221
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 3729              		.loc 11 276 0 is_stmt 0 discriminator 1
 3730 01e6 40F6C412 		movw	r2, #2500
 3731 01ea D4F8F834 		ldr	r3, [r4, #1272]
 3732 01ee F31A     		subs	r3, r6, r3
 3733 01f0 9342     		cmp	r3, r2
 3734 01f2 04D9     		bls	.L207
 277:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 3735              		.loc 11 277 0 is_stmt 1
 3736 01f4 2046     		mov	r0, r4
 3737 01f6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 3738              	.LVL401:
 278:./lib/ros_lib/ros/node_handle.h ****         }
 3739              		.loc 11 278 0
 3740 01fa C4F8F864 		str	r6, [r4, #1272]
 3741              	.L207:
 281:./lib/ros_lib/ros/node_handle.h ****       }
 3742              		.loc 11 281 0
 3743 01fe 0020     		movs	r0, #0
 3744 0200 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3745              	.LVL402:
 3746              	.L221:
 282:./lib/ros_lib/ros/node_handle.h **** 
 3747              		.loc 11 282 0
 3748 0204 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3749              	.LVL403:
 3750              	.L223:
 3751              		.align	2
 3752              	.L222:
 3753 0208 00000000 		.word	.LANCHOR1
 3754 020c FF000080 		.word	-2147483393
 3755              		.cfi_endproc
 3756              	.LFE208:
 3757              		.fnend
 3759              		.section	.text.startup,"ax",%progbits
 3760              		.align	1
 3761              		.global	main
 3762              		.thumb
 3763              		.thumb_func
 3765              	main:
 3766              		.fnstart
 3767              	.LFB186:
  41:src/main.cpp  **** 
  42:src/main.cpp  **** }
  43:src/main.cpp  **** 
  44:src/main.cpp  **** 
  45:src/main.cpp  **** ros::Subscriber<roberto_msgs::MotorState> motor_sub("motor", &motor_cb);
  46:src/main.cpp  **** ros::Subscriber<std_msgs::UInt8> led_sub("led", &led_cb);
  47:src/main.cpp  **** 
  48:src/main.cpp  **** std_msgs::Float32 str_msg;
  49:src/main.cpp  **** ros::Publisher chatter("encoder", &str_msg);
  50:src/main.cpp  **** 
  51:src/main.cpp  **** char hello[25];
  52:src/main.cpp  **** char str[150];
  53:src/main.cpp  **** 
  54:src/main.cpp  **** 
  55:src/main.cpp  **** int main(){
 3768              		.loc 9 55 0
 3769              		.cfi_startproc
 3770              		@ args = 0, pretend = 0, frame = 576
 3771              		@ frame_needed = 0, uses_anonymous_args = 0
 3772 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3773              		.save {r4, r5, r6, r7, r8, r9, r10, lr}
 3774              	.LCFI40:
 3775              		.cfi_def_cfa_offset 32
 3776              		.cfi_offset 4, -32
 3777              		.cfi_offset 5, -28
 3778              		.cfi_offset 6, -24
 3779              		.cfi_offset 7, -20
 3780              		.cfi_offset 8, -16
 3781              		.cfi_offset 9, -12
 3782              		.cfi_offset 10, -8
 3783              		.cfi_offset 14, -4
 3784              	.LBB278:
 3785              	.LBB279:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 3786              		.loc 11 147 0
 3787 0004 224C     		ldr	r4, .L244
 3788              	.LBE279:
 3789              	.LBE278:
 3790              		.loc 9 55 0
 3791              		.pad #608
 3792 0006 ADF5187D 		sub	sp, sp, #608
 3793              	.LCFI41:
 3794              		.cfi_def_cfa_offset 640
  56:src/main.cpp  ****   /* System Clocks Configuration */
  57:src/main.cpp  ****   RCC_Configuration();
 3795              		.loc 9 57 0
 3796 000a FFF7FEFF 		bl	RCC_Configuration
 3797              	.LVL404:
 3798              	.LBB281:
 3799              	.LBB280:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 3800              		.loc 11 147 0
 3801 000e 04F20C40 		addw	r0, r4, #1036
 3802 0012 FFF7FEFF 		bl	_ZN15ArduinoHardware4initEv
 3803              	.LVL405:
 3804 0016 04F50862 		add	r2, r4, #2176
 151:./lib/ros_lib/ros/node_handle.h ****       };
 3805              		.loc 11 151 0
 3806 001a 1146     		mov	r1, r2
 148:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 3807              		.loc 11 148 0
 3808 001c 0023     		movs	r3, #0
 3809 001e C4F8E838 		str	r3, [r4, #2280]
 149:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 3810              		.loc 11 149 0
 3811 0022 C4F8EC38 		str	r3, [r4, #2284]
 150:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 3812              		.loc 11 150 0
 3813 0026 C4F8F438 		str	r3, [r4, #2292]
 151:./lib/ros_lib/ros/node_handle.h ****       };
 3814              		.loc 11 151 0
 3815 002a C4F8F038 		str	r3, [r4, #2288]
 3816              	.LVL406:
 3817              	.L227:
 3818              	.LBE280:
 3819              	.LBE281:
 3820              	.LBB282:
 3821              	.LBB283:
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 3822              		.loc 11 354 0
 3823 002e 51F8040F 		ldr	r0, [r1, #4]!
 3824 0032 40B9     		cbnz	r0, .L225
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 3825              		.loc 11 355 0
 3826 0034 1748     		ldr	r0, .L244+4
 3827 0036 04EB8301 		add	r1, r4, r3, lsl #2
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 3828              		.loc 11 356 0
 3829 003a 6433     		adds	r3, r3, #100
 3830              	.LVL407:
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 3831              		.loc 11 355 0
 3832 003c C1F88408 		str	r0, [r1, #2180]
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 3833              		.loc 11 356 0
 3834 0040 C4F83C39 		str	r3, [r4, #2364]
 3835 0044 02E0     		b	.L226
 3836              	.LVL408:
 3837              	.L225:
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 3838              		.loc 11 353 0
 3839 0046 0133     		adds	r3, r3, #1
 3840              	.LVL409:
 3841 0048 192B     		cmp	r3, #25
 3842 004a F0D1     		bne	.L227
 3843              	.LVL410:
 3844              	.L226:
 3845              	.LBE283:
 3846              	.LBE282:
 3847              	.LBB284:
 3848              	.LBB285:
 3849 004c 0023     		movs	r3, #0
 3850              	.LVL411:
 3851              	.L230:
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 3852              		.loc 11 354 0
 3853 004e 52F8041F 		ldr	r1, [r2, #4]!
 3854 0052 41B9     		cbnz	r1, .L228
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 3855              		.loc 11 355 0
 3856 0054 1049     		ldr	r1, .L244+8
 3857 0056 04EB8302 		add	r2, r4, r3, lsl #2
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 3858              		.loc 11 356 0
 3859 005a 6433     		adds	r3, r3, #100
 3860              	.LVL412:
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 3861              		.loc 11 355 0
 3862 005c C2F88418 		str	r1, [r2, #2180]
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 3863              		.loc 11 356 0
 3864 0060 C4F87C39 		str	r3, [r4, #2428]
 3865 0064 02E0     		b	.L229
 3866              	.LVL413:
 3867              	.L228:
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 3868              		.loc 11 353 0
 3869 0066 0133     		adds	r3, r3, #1
 3870              	.LVL414:
 3871 0068 192B     		cmp	r3, #25
 3872 006a F0D1     		bne	.L230
 3873              	.LVL415:
 3874              	.L229:
 3875 006c 0B4A     		ldr	r2, .L244+12
 3876              	.LBE285:
 3877              	.LBE284:
 3878              	.LBB286:
 3879              	.LBB287:
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 3880              		.loc 11 339 0
 3881 006e 0023     		movs	r3, #0
 3882              	.LVL416:
 3883              	.L233:
 340:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 3884              		.loc 11 340 0
 3885 0070 52F8041F 		ldr	r1, [r2, #4]!
 3886 0074 B1B9     		cbnz	r1, .L231
 341:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 3887              		.loc 11 341 0
 3888 0076 0A4A     		ldr	r2, .L244+16
 3889 0078 04EB8301 		add	r1, r4, r3, lsl #2
 3890 007c C1F82028 		str	r2, [r1, #2080]
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 3891              		.loc 11 342 0
 3892 0080 7D33     		adds	r3, r3, #125
 3893              	.LVL417:
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 3894              		.loc 11 343 0
 3895 0082 A2F28C52 		subw	r2, r2, #1420
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 3896              		.loc 11 342 0
 3897 0086 C4F89C39 		str	r3, [r4, #2460]
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 3898              		.loc 11 343 0
 3899 008a C4F8A029 		str	r2, [r4, #2464]
 3900 008e 0CE0     		b	.L232
 3901              	.L245:
 3902              		.align	2
 3903              	.L244:
 3904 0090 00000000 		.word	.LANCHOR1
 3905 0094 38090000 		.word	.LANCHOR1+2360
 3906 0098 78090000 		.word	.LANCHOR1+2424
 3907 009c 1C080000 		.word	.LANCHOR1+2076
 3908 00a0 94090000 		.word	.LANCHOR1+2452
 3909              	.LVL418:
 3910              	.L231:
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 3911              		.loc 11 339 0
 3912 00a4 0133     		adds	r3, r3, #1
 3913              	.LVL419:
 3914 00a6 192B     		cmp	r3, #25
 3915 00a8 E2D1     		bne	.L233
 3916              	.LVL420:
 3917              	.L232:
 3918              	.LBE287:
 3919              	.LBE286:
  58:src/main.cpp  **** 
  59:src/main.cpp  ****   nh.initNode();
  60:src/main.cpp  ****   nh.subscribe(motor_sub);
  61:src/main.cpp  ****   nh.subscribe(led_sub);
  62:src/main.cpp  ****   nh.advertise(chatter);
  63:src/main.cpp  **** 
  64:src/main.cpp  ****   GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
 3920              		.loc 9 64 0
 3921 00aa 0121     		movs	r1, #1
 3922 00ac AA48     		ldr	r0, .L246
 3923 00ae FFF7FEFF 		bl	GPIO_PinRemapConfig
 3924              	.LVL421:
  65:src/main.cpp  ****   I2C1_Init();
  66:src/main.cpp  ****   SysTick_Init();
  67:src/main.cpp  ****   DEBUG_Init();
  68:src/main.cpp  ****   LED_Init();
  69:src/main.cpp  **** 
  70:src/main.cpp  ****   delay(1000);
  71:src/main.cpp  **** 
  72:src/main.cpp  ****   motorSettings SL(MOTOR_TYPE_SERVO, "servo_left", TIM4, 4);
 3925              		.loc 9 72 0
 3926 00b2 0427     		movs	r7, #4
  65:src/main.cpp  ****   I2C1_Init();
 3927              		.loc 9 65 0
 3928 00b4 FFF7FEFF 		bl	I2C1_Init
 3929              	.LVL422:
  66:src/main.cpp  ****   DEBUG_Init();
 3930              		.loc 9 66 0
 3931 00b8 FFF7FEFF 		bl	SysTick_Init
 3932              	.LVL423:
  67:src/main.cpp  ****   LED_Init();
 3933              		.loc 9 67 0
 3934 00bc FFF7FEFF 		bl	DEBUG_Init
 3935              	.LVL424:
  68:src/main.cpp  **** 
 3936              		.loc 9 68 0
 3937 00c0 FFF7FEFF 		bl	LED_Init
 3938              	.LVL425:
  70:src/main.cpp  **** 
 3939              		.loc 9 70 0
 3940 00c4 4FF47A70 		mov	r0, #1000
 3941 00c8 FFF7FEFF 		bl	delay
 3942              	.LVL426:
 3943              		.loc 9 72 0
 3944 00cc 0097     		str	r7, [sp]
 3945 00ce A34B     		ldr	r3, .L246+4
 3946 00d0 A34A     		ldr	r2, .L246+8
 3947 00d2 0121     		movs	r1, #1
 3948 00d4 08A8     		add	r0, sp, #32
 3949 00d6 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 3950              	.LVL427:
  73:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 3951              		.loc 9 73 0
 3952 00da 4FF40073 		mov	r3, #512
  74:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 3953              		.loc 9 74 0
 3954 00de A14D     		ldr	r5, .L246+12
  73:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 3955              		.loc 9 73 0
 3956 00e0 0E93     		str	r3, [sp, #56]
  75:src/main.cpp  **** 
  76:src/main.cpp  ****   motorSettings SR(MOTOR_TYPE_SERVO, "servo_right", TIM4, 3);
 3957              		.loc 9 76 0
 3958 00e2 0323     		movs	r3, #3
  77:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
  78:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
  79:src/main.cpp  **** 
  80:src/main.cpp  ****   motorSettings FR(MOTOR_TYPE_DC_MOTOR, "front_right", TIM1, 1);
 3959              		.loc 9 80 0
 3960 00e4 4FF00108 		mov	r8, #1
  76:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 3961              		.loc 9 76 0
 3962 00e8 0093     		str	r3, [sp]
 3963 00ea 9F4A     		ldr	r2, .L246+16
 3964 00ec 9B4B     		ldr	r3, .L246+4
 3965 00ee 0121     		movs	r1, #1
 3966 00f0 20A8     		add	r0, sp, #128
  77:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 3967              		.loc 9 77 0
 3968 00f2 4FF48079 		mov	r9, #256
  74:src/main.cpp  **** 
 3969              		.loc 9 74 0
 3970 00f6 0F95     		str	r5, [sp, #60]
  76:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 3971              		.loc 9 76 0
 3972 00f8 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 3973              	.LVL428:
 3974              		.loc 9 80 0
 3975 00fc CDF80080 		str	r8, [sp]
 3976 0100 9A4B     		ldr	r3, .L246+20
 3977 0102 9B4A     		ldr	r2, .L246+24
 3978 0104 0221     		movs	r1, #2
 3979 0106 38A8     		add	r0, sp, #224
  81:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
  82:src/main.cpp  ****               GPIO_Pin_15, GPIOC, GPIO_Pin_0, GPIOA,
  83:src/main.cpp  ****               GPIO_Pin_8, GPIOA);
 3980              		.loc 9 83 0
 3981 0108 9A4E     		ldr	r6, .L246+28
  77:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 3982              		.loc 9 77 0
 3983 010a CDF89890 		str	r9, [sp, #152]
  78:src/main.cpp  **** 
 3984              		.loc 9 78 0
 3985 010e 2795     		str	r5, [sp, #156]
  80:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 3986              		.loc 9 80 0
 3987 0110 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 3988              	.LVL429:
 3989              		.loc 9 83 0
 3990 0114 984A     		ldr	r2, .L246+32
 3991 0116 CDF80C80 		str	r8, [sp, #12]
 3992 011a 4FF40048 		mov	r8, #32768
 3993 011e CDF81490 		str	r9, [sp, #20]
 3994 0122 0292     		str	r2, [sp, #8]
 3995 0124 8DE80401 		stmia	sp, {r2, r8}
 3996 0128 4FF48043 		mov	r3, #16384
 3997 012c 4FF40051 		mov	r1, #8192
 3998 0130 38A8     		add	r0, sp, #224
 3999 0132 0696     		str	r6, [sp, #24]
 4000 0134 0496     		str	r6, [sp, #16]
 4001 0136 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 4002              	.LVL430:
  84:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 4003              		.loc 9 84 0
 4004 013a 1823     		movs	r3, #24
  85:src/main.cpp  ****   FR.setRegulator(5000,5000,2,100000);
 4005              		.loc 9 85 0
 4006 013c 8F4A     		ldr	r2, .L246+36
  84:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 4007              		.loc 9 84 0
 4008 013e ADF82831 		strh	r3, [sp, #296]	@ movhi
 4009              		.loc 9 85 0
 4010 0142 8F4B     		ldr	r3, .L246+40
 4011 0144 1146     		mov	r1, r2
 4012 0146 0093     		str	r3, [sp]	@ float
 4013 0148 38A8     		add	r0, sp, #224
 4014 014a 4FF08043 		mov	r3, #1073741824
 4015 014e FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 4016              	.LVL431:
  86:src/main.cpp  ****   FR.wheelRadius = 0.04;
 4017              		.loc 9 86 0
 4018 0152 8C4B     		ldr	r3, .L246+44
  87:src/main.cpp  **** 
  88:src/main.cpp  ****   motorSettings FL(MOTOR_TYPE_DC_MOTOR, "front_left", TIM3, 4);
 4019              		.loc 9 88 0
 4020 0154 0097     		str	r7, [sp]
  86:src/main.cpp  ****   FR.wheelRadius = 0.04;
 4021              		.loc 9 86 0
 4022 0156 4F93     		str	r3, [sp, #316]	@ float
 4023              		.loc 9 88 0
 4024 0158 8B4A     		ldr	r2, .L246+48
 4025 015a 8C4B     		ldr	r3, .L246+52
 4026 015c 0221     		movs	r1, #2
 4027 015e 50A8     		add	r0, sp, #320
 4028 0160 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4029              	.LVL432:
  89:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
  90:src/main.cpp  ****               GPIO_Pin_4, GPIOA,GPIO_Pin_10,GPIOB,
  91:src/main.cpp  ****               GPIO_Pin_1, GPIOB);
 4030              		.loc 9 91 0
 4031 0164 4FF00209 		mov	r9, #2
 4032 0168 4FF0100A 		mov	r10, #16
 4033 016c 4FF48063 		mov	r3, #1024
 4034 0170 3946     		mov	r1, r7
 4035 0172 0393     		str	r3, [sp, #12]
 4036 0174 8DE84004 		stmia	sp, {r6, r10}
 4037 0178 2023     		movs	r3, #32
 4038 017a 2A46     		mov	r2, r5
 4039 017c 50A8     		add	r0, sp, #320
 4040 017e 0695     		str	r5, [sp, #24]
 4041 0180 CDF81490 		str	r9, [sp, #20]
 4042 0184 0495     		str	r5, [sp, #16]
 4043 0186 0296     		str	r6, [sp, #8]
 4044 0188 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 4045              	.LVL433:
  92:src/main.cpp  ****   FL.encoderAddr = (0x10);
  93:src/main.cpp  **** 
  94:src/main.cpp  ****   motorSettings RL(MOTOR_TYPE_DC_MOTOR, "rear_left", TIM2, 4);
 4046              		.loc 9 94 0
 4047 018c 0097     		str	r7, [sp]
 4048 018e 4FF08043 		mov	r3, #1073741824
 4049 0192 7F4A     		ldr	r2, .L246+56
 4050 0194 4946     		mov	r1, r9
 4051 0196 68A8     		add	r0, sp, #416
  92:src/main.cpp  ****   FL.encoderAddr = (0x10);
 4052              		.loc 9 92 0
 4053 0198 ADF888A1 		strh	r10, [sp, #392]	@ movhi
 4054              		.loc 9 94 0
 4055 019c FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4056              	.LVL434:
  95:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
  96:src/main.cpp  ****     GPIO_Pin_13, GPIOB, GPIO_Pin_14, GPIOB,
  97:src/main.cpp  ****     GPIO_Pin_3, GPIOA);
 4057              		.loc 9 97 0
 4058 01a0 4FF48043 		mov	r3, #16384
 4059 01a4 4FF0080A 		mov	r10, #8
 4060 01a8 0393     		str	r3, [sp, #12]
 4061 01aa 4FF40053 		mov	r3, #8192
 4062 01ae 0193     		str	r3, [sp, #4]
 4063 01b0 2A46     		mov	r2, r5
 4064 01b2 4FF48053 		mov	r3, #4096
 4065 01b6 4FF40061 		mov	r1, #2048
 4066 01ba 68A8     		add	r0, sp, #416
 4067 01bc 0696     		str	r6, [sp, #24]
 4068 01be CDF814A0 		str	r10, [sp, #20]
 4069 01c2 0495     		str	r5, [sp, #16]
 4070 01c4 0295     		str	r5, [sp, #8]
 4071 01c6 0095     		str	r5, [sp]
 4072 01c8 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 4073              	.LVL435:
  98:src/main.cpp  **** 
  99:src/main.cpp  ****   motorSettings RR(MOTOR_TYPE_DC_MOTOR, "rear_right", TIM1, 4);
 4074              		.loc 9 99 0
 4075 01cc 0097     		str	r7, [sp]
 4076 01ce 674B     		ldr	r3, .L246+20
 4077 01d0 704A     		ldr	r2, .L246+60
 4078 01d2 4946     		mov	r1, r9
 4079 01d4 80A8     		add	r0, sp, #512
 4080 01d6 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 4081              	.LVL436:
 100:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 101:src/main.cpp  ****               GPIO_Pin_15, GPIOA, GPIO_Pin_3, GPIOB,
 102:src/main.cpp  ****               GPIO_Pin_11, GPIOA);
 4082              		.loc 9 102 0
 4083 01da 4FF40063 		mov	r3, #2048
 4084 01de 0593     		str	r3, [sp, #20]
 4085 01e0 2A46     		mov	r2, r5
 4086 01e2 4FF48053 		mov	r3, #4096
 4087 01e6 4146     		mov	r1, r8
 4088 01e8 80A8     		add	r0, sp, #512
 4089 01ea 0696     		str	r6, [sp, #24]
 4090 01ec 0495     		str	r5, [sp, #16]
 4091 01ee CDF80CA0 		str	r10, [sp, #12]
 4092 01f2 0296     		str	r6, [sp, #8]
 4093 01f4 8DE84001 		stmia	sp, {r6, r8}
 4094 01f8 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 4095              	.LVL437:
 103:src/main.cpp  **** 
 104:src/main.cpp  ****   motor *servo_left = motor::createMotor(&SL);
 4096              		.loc 9 104 0
 4097 01fc 08A8     		add	r0, sp, #32
 4098 01fe FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4099              	.LVL438:
 105:src/main.cpp  ****   if(!servo_left->motorInit()){
 4100              		.loc 9 105 0
 4101 0202 0368     		ldr	r3, [r0]
 104:src/main.cpp  ****   if(!servo_left->motorInit()){
 4102              		.loc 9 104 0
 4103 0204 0746     		mov	r7, r0
 4104              	.LVL439:
 4105              		.loc 9 105 0
 4106 0206 DB68     		ldr	r3, [r3, #12]
 4107 0208 9847     		blx	r3
 4108              	.LVL440:
 4109 020a 68B9     		cbnz	r0, .L234
 106:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 4110              		.loc 9 106 0
 4111 020c 3B68     		ldr	r3, [r7]
 4112 020e 3846     		mov	r0, r7
 4113 0210 1B69     		ldr	r3, [r3, #16]
 4114 0212 9847     		blx	r3
 4115              	.LVL441:
 4116 0214 6049     		ldr	r1, .L246+64
 4117 0216 0246     		mov	r2, r0
 4118 0218 6048     		ldr	r0, .L246+68
 4119 021a FFF7FEFF 		bl	sprintf
 4120              	.LVL442:
 107:src/main.cpp  ****     nh.logerror(str);
 4121              		.loc 9 107 0
 4122 021e 5F49     		ldr	r1, .L246+68
 4123 0220 A1F5B460 		sub	r0, r1, #1440
 4124 0224 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4125              	.LVL443:
 4126              	.L234:
 108:src/main.cpp  ****   }
 109:src/main.cpp  **** 
 110:src/main.cpp  ****   motor *servo_right = motor::createMotor(&SR);
 4127              		.loc 9 110 0
 4128 0228 20A8     		add	r0, sp, #128
 4129 022a FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4130              	.LVL444:
 111:src/main.cpp  ****   if(!servo_right->motorInit()){
 4131              		.loc 9 111 0
 4132 022e 0368     		ldr	r3, [r0]
 110:src/main.cpp  ****   if(!servo_right->motorInit()){
 4133              		.loc 9 110 0
 4134 0230 0646     		mov	r6, r0
 4135              	.LVL445:
 4136              		.loc 9 111 0
 4137 0232 DB68     		ldr	r3, [r3, #12]
 4138 0234 9847     		blx	r3
 4139              	.LVL446:
 4140 0236 68B9     		cbnz	r0, .L235
 112:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 4141              		.loc 9 112 0
 4142 0238 3368     		ldr	r3, [r6]
 4143 023a 3046     		mov	r0, r6
 4144 023c 1B69     		ldr	r3, [r3, #16]
 4145 023e 9847     		blx	r3
 4146              	.LVL447:
 4147 0240 5549     		ldr	r1, .L246+64
 4148 0242 0246     		mov	r2, r0
 4149 0244 5548     		ldr	r0, .L246+68
 4150 0246 FFF7FEFF 		bl	sprintf
 4151              	.LVL448:
 113:src/main.cpp  ****     nh.logerror(str);
 4152              		.loc 9 113 0
 4153 024a 5449     		ldr	r1, .L246+68
 4154 024c A1F5B460 		sub	r0, r1, #1440
 4155 0250 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4156              	.LVL449:
 4157              	.L235:
 114:src/main.cpp  ****   }
 115:src/main.cpp  **** 
 116:src/main.cpp  ****   motor *front_left = motor::createMotor(&FL);
 4158              		.loc 9 116 0
 4159 0254 50A8     		add	r0, sp, #320
 4160 0256 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4161              	.LVL450:
 117:src/main.cpp  ****   if(!front_left->motorInit()){
 4162              		.loc 9 117 0
 4163 025a 0368     		ldr	r3, [r0]
 116:src/main.cpp  ****   if(!front_left->motorInit()){
 4164              		.loc 9 116 0
 4165 025c 0546     		mov	r5, r0
 4166              	.LVL451:
 4167              		.loc 9 117 0
 4168 025e DB68     		ldr	r3, [r3, #12]
 4169 0260 9847     		blx	r3
 4170              	.LVL452:
 4171 0262 68B9     		cbnz	r0, .L236
 118:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 4172              		.loc 9 118 0
 4173 0264 2B68     		ldr	r3, [r5]
 4174 0266 2846     		mov	r0, r5
 4175 0268 1B69     		ldr	r3, [r3, #16]
 4176 026a 9847     		blx	r3
 4177              	.LVL453:
 4178 026c 4A49     		ldr	r1, .L246+64
 4179 026e 0246     		mov	r2, r0
 4180 0270 4A48     		ldr	r0, .L246+68
 4181 0272 FFF7FEFF 		bl	sprintf
 4182              	.LVL454:
 119:src/main.cpp  ****     nh.logerror(str);
 4183              		.loc 9 119 0
 4184 0276 4949     		ldr	r1, .L246+68
 4185 0278 A1F5B460 		sub	r0, r1, #1440
 4186 027c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4187              	.LVL455:
 4188              	.L236:
 120:src/main.cpp  ****   }
 121:src/main.cpp  **** 
 122:src/main.cpp  ****   motor *front_right = motor::createMotor(&FR);
 4189              		.loc 9 122 0
 4190 0280 38A8     		add	r0, sp, #224
 4191 0282 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4192              	.LVL456:
 123:src/main.cpp  ****   if(!front_right->motorInit()){
 4193              		.loc 9 123 0
 4194 0286 0368     		ldr	r3, [r0]
 122:src/main.cpp  ****   if(!front_right->motorInit()){
 4195              		.loc 9 122 0
 4196 0288 0546     		mov	r5, r0
 4197              	.LVL457:
 4198              		.loc 9 123 0
 4199 028a DB68     		ldr	r3, [r3, #12]
 4200 028c 9847     		blx	r3
 4201              	.LVL458:
 4202 028e 68B9     		cbnz	r0, .L237
 124:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 4203              		.loc 9 124 0
 4204 0290 2B68     		ldr	r3, [r5]
 4205 0292 2846     		mov	r0, r5
 4206 0294 1B69     		ldr	r3, [r3, #16]
 4207 0296 9847     		blx	r3
 4208              	.LVL459:
 4209 0298 3F49     		ldr	r1, .L246+64
 4210 029a 0246     		mov	r2, r0
 4211 029c 3F48     		ldr	r0, .L246+68
 4212 029e FFF7FEFF 		bl	sprintf
 4213              	.LVL460:
 125:src/main.cpp  ****     nh.logerror(str);
 4214              		.loc 9 125 0
 4215 02a2 3E49     		ldr	r1, .L246+68
 4216 02a4 A1F5B460 		sub	r0, r1, #1440
 4217 02a8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4218              	.LVL461:
 4219              	.L237:
 126:src/main.cpp  ****   }
 127:src/main.cpp  **** 
 128:src/main.cpp  ****   motor *rear_left = motor::createMotor(&RL);
 4220              		.loc 9 128 0
 4221 02ac 68A8     		add	r0, sp, #416
 4222 02ae FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4223              	.LVL462:
 129:src/main.cpp  ****   if(!rear_left->motorInit()){
 4224              		.loc 9 129 0
 4225 02b2 0368     		ldr	r3, [r0]
 128:src/main.cpp  ****   if(!rear_left->motorInit()){
 4226              		.loc 9 128 0
 4227 02b4 8046     		mov	r8, r0
 4228              	.LVL463:
 4229              		.loc 9 129 0
 4230 02b6 DB68     		ldr	r3, [r3, #12]
 4231 02b8 9847     		blx	r3
 4232              	.LVL464:
 4233 02ba 70B9     		cbnz	r0, .L238
 130:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 4234              		.loc 9 130 0
 4235 02bc D8F80030 		ldr	r3, [r8]
 4236 02c0 4046     		mov	r0, r8
 4237 02c2 1B69     		ldr	r3, [r3, #16]
 4238 02c4 9847     		blx	r3
 4239              	.LVL465:
 4240 02c6 3449     		ldr	r1, .L246+64
 4241 02c8 0246     		mov	r2, r0
 4242 02ca 3448     		ldr	r0, .L246+68
 4243 02cc FFF7FEFF 		bl	sprintf
 4244              	.LVL466:
 131:src/main.cpp  ****     nh.logerror(str);
 4245              		.loc 9 131 0
 4246 02d0 3249     		ldr	r1, .L246+68
 4247 02d2 A1F5B460 		sub	r0, r1, #1440
 4248 02d6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4249              	.LVL467:
 4250              	.L238:
 132:src/main.cpp  ****   }
 133:src/main.cpp  **** 
 134:src/main.cpp  ****   motor *rear_right = motor::createMotor(&RR);
 4251              		.loc 9 134 0
 4252 02da 80A8     		add	r0, sp, #512
 4253 02dc FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 4254              	.LVL468:
 135:src/main.cpp  ****   if(!rear_right->motorInit()){
 4255              		.loc 9 135 0
 4256 02e0 0368     		ldr	r3, [r0]
 134:src/main.cpp  ****   if(!rear_right->motorInit()){
 4257              		.loc 9 134 0
 4258 02e2 8046     		mov	r8, r0
 4259              	.LVL469:
 4260              		.loc 9 135 0
 4261 02e4 DB68     		ldr	r3, [r3, #12]
 4262 02e6 9847     		blx	r3
 4263              	.LVL470:
 4264 02e8 70B9     		cbnz	r0, .L239
 136:src/main.cpp  ****     sprintf(str, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 4265              		.loc 9 136 0
 4266 02ea D8F80030 		ldr	r3, [r8]
 4267 02ee 4046     		mov	r0, r8
 4268 02f0 1B69     		ldr	r3, [r3, #16]
 4269 02f2 9847     		blx	r3
 4270              	.LVL471:
 4271 02f4 2849     		ldr	r1, .L246+64
 4272 02f6 0246     		mov	r2, r0
 4273 02f8 2848     		ldr	r0, .L246+68
 4274 02fa FFF7FEFF 		bl	sprintf
 4275              	.LVL472:
 137:src/main.cpp  ****     nh.logerror(str);
 4276              		.loc 9 137 0
 4277 02fe 2749     		ldr	r1, .L246+68
 4278 0300 A1F5B460 		sub	r0, r1, #1440
 4279 0304 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4280              	.LVL473:
 4281              	.L239:
 138:src/main.cpp  ****   }
 139:src/main.cpp  **** 
 140:src/main.cpp  ****   servo_left->setReference(90);
 4282              		.loc 9 140 0
 4283 0308 3B68     		ldr	r3, [r7]
 4284 030a 2549     		ldr	r1, .L246+72
 4285 030c 5B69     		ldr	r3, [r3, #20]
 4286 030e 3846     		mov	r0, r7
 4287 0310 9847     		blx	r3
 4288              	.LVL474:
 141:src/main.cpp  ****   servo_right->setReference(100);
 4289              		.loc 9 141 0
 4290 0312 3368     		ldr	r3, [r6]
 4291 0314 2349     		ldr	r1, .L246+76
 4292 0316 5B69     		ldr	r3, [r3, #20]
 4293 0318 3046     		mov	r0, r6
 4294 031a 9847     		blx	r3
 4295              	.LVL475:
 4296              	.L240:
 4297              	.LBB288:
 142:src/main.cpp  **** 
 143:src/main.cpp  ****   //servo_left->update(1);
 144:src/main.cpp  ****   //servo_right->update(1);
 145:src/main.cpp  ****   //rear_right->update(1);
 146:src/main.cpp  ****   //rear_left->update(1);
 147:src/main.cpp  ****   //front_left->update(1);
 148:src/main.cpp  ****   //front_right->update(1);
 149:src/main.cpp  **** 
 150:src/main.cpp  ****  
 151:src/main.cpp  ****   /*int16_t speed = 0;*/
 152:src/main.cpp  **** 
 153:src/main.cpp  ****   
 154:src/main.cpp  ****   //led_set(200);
 155:src/main.cpp  **** 
 156:src/main.cpp  **** 
 157:src/main.cpp  **** 
 158:src/main.cpp  ****   while (1){
 159:src/main.cpp  ****     debug_toggle();
 4298              		.loc 9 159 0
 4299 031c FFF7FEFF 		bl	debug_toggle
 4300              	.LVL476:
 160:src/main.cpp  **** 
 161:src/main.cpp  ****     front_right->setReference(2);
 4301              		.loc 9 161 0
 4302 0320 2B68     		ldr	r3, [r5]
 4303 0322 2846     		mov	r0, r5
 4304 0324 5B69     		ldr	r3, [r3, #20]
 4305 0326 4FF08041 		mov	r1, #1073741824
 4306 032a 9847     		blx	r3
 4307              	.LVL477:
 162:src/main.cpp  ****     float s_ = front_right->update(0.1);
 4308              		.loc 9 162 0
 4309 032c 2B68     		ldr	r3, [r5]
 4310 032e 1E49     		ldr	r1, .L246+80
 4311 0330 DB69     		ldr	r3, [r3, #28]
 4312 0332 2846     		mov	r0, r5
 4313 0334 9847     		blx	r3
 4314              	.LVL478:
 163:src/main.cpp  **** 
 164:src/main.cpp  ****     //printf(hello, "Speed is: %d", (int)s_);
 165:src/main.cpp  ****     str_msg.data = s_;
 4315              		.loc 9 165 0
 4316 0336 C4F8440A 		str	r0, [r4, #2628]	@ float
 4317              	.LVL479:
 4318              	.LBB289:
 4319              	.LBB290:
 4320              		.file 16 "./lib/ros_lib/ros/publisher.h"
   1:./lib/ros_lib/ros/publisher.h **** /* 
   2:./lib/ros_lib/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/publisher.h ****  *
   4:./lib/ros_lib/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/publisher.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/publisher.h ****  *
   7:./lib/ros_lib/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/publisher.h ****  * are met:
  10:./lib/ros_lib/ros/publisher.h ****  *
  11:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/publisher.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/publisher.h ****  *
  21:./lib/ros_lib/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/publisher.h ****  */
  34:./lib/ros_lib/ros/publisher.h **** 
  35:./lib/ros_lib/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:./lib/ros_lib/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:./lib/ros_lib/ros/publisher.h **** 
  38:./lib/ros_lib/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/publisher.h **** #include "node_handle.h"
  40:./lib/ros_lib/ros/publisher.h **** 
  41:./lib/ros_lib/ros/publisher.h **** namespace ros {
  42:./lib/ros_lib/ros/publisher.h **** 
  43:./lib/ros_lib/ros/publisher.h ****   /* Generic Publisher */
  44:./lib/ros_lib/ros/publisher.h ****   class Publisher
  45:./lib/ros_lib/ros/publisher.h ****   {
  46:./lib/ros_lib/ros/publisher.h ****     public:
  47:./lib/ros_lib/ros/publisher.h ****       Publisher( const char * topic_name, Msg * msg, int endpoint=rosserial_msgs::TopicInfo::ID_PUB
  48:./lib/ros_lib/ros/publisher.h ****         topic_(topic_name), 
  49:./lib/ros_lib/ros/publisher.h ****         msg_(msg),
  50:./lib/ros_lib/ros/publisher.h ****         endpoint_(endpoint) {};
  51:./lib/ros_lib/ros/publisher.h **** 
  52:./lib/ros_lib/ros/publisher.h ****       int publish( const Msg * msg ) { return nh_->publish(id_, msg); };
 4321              		.loc 16 52 0
 4322 033a D4F8A009 		ldr	r0, [r4, #2464]
 4323              	.LVL480:
 4324 033e 1B4A     		ldr	r2, .L246+84
 4325 0340 0368     		ldr	r3, [r0]
 4326 0342 D4F89C19 		ldr	r1, [r4, #2460]
 4327 0346 1B68     		ldr	r3, [r3]
 4328 0348 9847     		blx	r3
 4329              	.LVL481:
 4330              	.LBE290:
 4331              	.LBE289:
 166:src/main.cpp  ****     chatter.publish( &str_msg );
 167:src/main.cpp  **** 
 168:src/main.cpp  ****     nh.spinOnce();
 4332              		.loc 9 168 0
 4333 034a 1948     		ldr	r0, .L246+88
 4334 034c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 4335              	.LVL482:
 169:src/main.cpp  **** 
 170:src/main.cpp  ****     delay(10);
 4336              		.loc 9 170 0
 4337 0350 0A20     		movs	r0, #10
 4338 0352 FFF7FEFF 		bl	delay
 4339              	.LVL483:
 4340 0356 E1E7     		b	.L240
 4341              	.L247:
 4342              		.align	2
 4343              	.L246:
 4344 0358 00023000 		.word	3146240
 4345 035c 00080040 		.word	1073743872
 4346 0360 C4010000 		.word	.LC17
 4347 0364 000C0140 		.word	1073810432
 4348 0368 CF010000 		.word	.LC18
 4349 036c 002C0140 		.word	1073818624
 4350 0370 DB010000 		.word	.LC19
 4351 0374 00080140 		.word	1073809408
 4352 0378 00100140 		.word	1073811456
 4353 037c 00409C45 		.word	1167867904
 4354 0380 0050C347 		.word	1203982336
 4355 0384 0AD7233D 		.word	1025758986
 4356 0388 E7010000 		.word	.LC20
 4357 038c 00040040 		.word	1073742848
 4358 0390 F2010000 		.word	.LC21
 4359 0394 FC010000 		.word	.LC22
 4360 0398 07020000 		.word	.LC23
 4361 039c A8090000 		.word	.LANCHOR1+2472
 4362 03a0 0000B442 		.word	1119092736
 4363 03a4 0000C842 		.word	1120403456
 4364 03a8 CDCCCC3D 		.word	1036831949
 4365 03ac 400A0000 		.word	.LANCHOR1+2624
 4366 03b0 08040000 		.word	.LANCHOR1+1032
 4367              	.LBE288:
 4368              		.cfi_endproc
 4369              	.LFE186:
 4370              		.fnend
 4372              		.text
 4373              		.align	1
 4374              		.global	_Z13assert_failedPhm
 4375              		.thumb
 4376              		.thumb_func
 4378              	_Z13assert_failedPhm:
 4379              		.fnstart
 4380              	.LFB187:
 171:src/main.cpp  ****   }
 172:src/main.cpp  ****   return 0;
 173:src/main.cpp  **** }
 174:src/main.cpp  **** 
 175:src/main.cpp  **** void assert_failed(uint8_t* file, uint32_t line){
 4381              		.loc 9 175 0
 4382              		.cfi_startproc
 4383              		@ args = 0, pretend = 0, frame = 152
 4384              		@ frame_needed = 0, uses_anonymous_args = 0
 4385              	.LVL484:
 4386 0054 00B5     		push	{lr}
 4387              		.save {lr}
 4388              	.LCFI42:
 4389              		.cfi_def_cfa_offset 4
 4390              		.cfi_offset 14, -4
 4391              		.pad #156
 4392 0056 A7B0     		sub	sp, sp, #156
 4393              	.LCFI43:
 4394              		.cfi_def_cfa_offset 160
 176:src/main.cpp  ****   /* User can add his own implementation to report the file name and line number,
 177:src/main.cpp  ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 178:src/main.cpp  ****   char str[150];
 179:src/main.cpp  **** 
 180:src/main.cpp  ****   sprintf(str, "Wrong parameters value: file %s on line %d\r\n", file, line);
 4395              		.loc 9 180 0
 4396 0058 0B46     		mov	r3, r1
 4397 005a 0246     		mov	r2, r0
 4398 005c 0849     		ldr	r1, .L250
 4399              	.LVL485:
 4400 005e 6846     		mov	r0, sp
 4401              	.LVL486:
 4402 0060 FFF7FEFF 		bl	sprintf
 4403              	.LVL487:
 181:src/main.cpp  ****   nh.logerror(str);
 4404              		.loc 9 181 0
 4405 0064 6946     		mov	r1, sp
 4406 0066 0748     		ldr	r0, .L250+4
 4407 0068 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4408              	.LVL488:
 4409              	.L249:
 182:src/main.cpp  ****   while (1){
 183:src/main.cpp  ****     debug_toggle();
 4410              		.loc 9 183 0
 4411 006c FFF7FEFF 		bl	debug_toggle
 4412              	.LVL489:
 184:src/main.cpp  ****     delay(100);
 4413              		.loc 9 184 0
 4414 0070 6420     		movs	r0, #100
 4415 0072 FFF7FEFF 		bl	delay
 4416              	.LVL490:
 185:src/main.cpp  ****     nh.spinOnce();
 4417              		.loc 9 185 0
 4418 0076 0348     		ldr	r0, .L250+4
 4419 0078 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 4420              	.LVL491:
 4421 007c F6E7     		b	.L249
 4422              	.L251:
 4423 007e 00BF     		.align	2
 4424              	.L250:
 4425 0080 31020000 		.word	.LC24
 4426 0084 08040000 		.word	.LANCHOR1+1032
 4427              		.cfi_endproc
 4428              	.LFE187:
 4429              		.fnend
 4431              		.section	.text.startup
 4432              		.align	1
 4433              		.thumb
 4434              		.thumb_func
 4436              	_GLOBAL__sub_I_USART_FIFO:
 4437              		.fnstart
 4438              	.LFB225:
 186:src/main.cpp  ****   }
 187:src/main.cpp  **** }
 4439              		.loc 9 187 0
 4440              		.cfi_startproc
 4441              		@ args = 0, pretend = 0, frame = 0
 4442              		@ frame_needed = 0, uses_anonymous_args = 0
 4443              	.LVL492:
 4444              	.LBB341:
 4445              	.LBB342:
 4446              	.LBB343:
 4447              	.LBB344:
 119:./lib/ros_lib/ros/node_handle.h **** 
 4448              		.loc 11 119 0
 4449 03b4 444B     		ldr	r3, .L261
 4450 03b6 454A     		ldr	r2, .L261+4
 4451              	.LBE344:
 4452              	.LBE343:
 4453              	.LBE342:
 4454              	.LBE341:
 4455              		.loc 9 187 0
 4456 03b8 30B5     		push	{r4, r5, lr}
 4457              	.LCFI44:
 4458              		.cfi_def_cfa_offset 12
 4459              		.cfi_offset 4, -12
 4460              		.cfi_offset 5, -8
 4461              		.cfi_offset 14, -4
 4462              	.LBB434:
 4463              	.LBB433:
 4464              	.LBB362:
 4465              	.LBB361:
 119:./lib/ros_lib/ros/node_handle.h **** 
 4466              		.loc 11 119 0
 4467 03ba C3F80824 		str	r2, [r3, #1032]
 4468              	.LVL493:
 4469              	.LBB345:
 4470              	.LBB346:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
 4471              		.loc 13 60 0
 4472 03be 444A     		ldr	r2, .L261+8
 4473              	.LBE346:
 4474              	.LBE345:
 4475              	.LBB349:
 4476              	.LBB350:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 4477              		.loc 4 70 0
 4478 03c0 4449     		ldr	r1, .L261+12
 4479              	.LBE350:
 4480              	.LBE349:
 4481              	.LBB353:
 4482              	.LBB347:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
 4483              		.loc 13 60 0
 4484 03c2 C3F80C24 		str	r2, [r3, #1036]
  61:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
 4485              		.loc 13 61 0
 4486 03c6 4FF4E132 		mov	r2, #115200
 4487 03ca C3F81024 		str	r2, [r3, #1040]
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
 4488              		.loc 13 62 0
 4489 03ce 0022     		movs	r2, #0
 4490 03d0 5A60     		str	r2, [r3, #4]
 4491              	.LBE347:
 4492              	.LBE353:
 4493              	.LBB354:
 4494              	.LBB351:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 4495              		.loc 4 70 0
 4496 03d2 C3F81019 		str	r1, [r3, #2320]
 4497              	.LBE351:
 4498              	.LBE354:
 4499              	.LBB355:
 4500              	.LBB348:
  63:./lib/ros_lib/ArduinoHardware.h ****     }
 4501              		.loc 13 63 0
 4502 03d6 1A60     		str	r2, [r3]
 4503              	.LVL494:
 4504              	.LBE348:
 4505              	.LBE355:
 119:./lib/ros_lib/ros/node_handle.h **** 
 4506              		.loc 11 119 0
 4507 03d8 83F8FC28 		strb	r2, [r3, #2300]
 4508              	.LVL495:
 4509              	.LBB356:
 4510              	.LBB352:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 4511              		.loc 4 70 0
 4512 03dc 83F81429 		strb	r2, [r3, #2324]
 4513 03e0 C3F81C29 		str	r2, [r3, #2332]
 4514 03e4 83F82029 		strb	r2, [r3, #2336]
 4515 03e8 C3F82829 		str	r2, [r3, #2344]
 4516 03ec 83F82C29 		strb	r2, [r3, #2348]
 4517 03f0 C3F83429 		str	r2, [r3, #2356]
 4518              	.LVL496:
 4519 03f4 03F61C01 		addw	r1, r3, #2076
 4520 03f8 03F50863 		add	r3, r3, #2176
 4521              	.LVL497:
 4522              	.L253:
 4523              	.LBE352:
 4524              	.LBE356:
 4525              	.LBB357:
 122:./lib/ros_lib/ros/node_handle.h **** 
 4526              		.loc 11 122 0
 4527 03fc 41F8042F 		str	r2, [r1, #4]!
 121:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 4528              		.loc 11 121 0
 4529 0400 8B42     		cmp	r3, r1
 4530 0402 FBD1     		bne	.L253
 4531 0404 344A     		ldr	r2, .L261+16
 4532              	.LBE357:
 4533              	.LBB358:
 125:./lib/ros_lib/ros/node_handle.h **** 
 4534              		.loc 11 125 0
 4535 0406 0021     		movs	r1, #0
 4536              	.L254:
 4537 0408 43F8041F 		str	r1, [r3, #4]!
 4538              	.LVL498:
 124:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 4539              		.loc 11 124 0
 4540 040c 9A42     		cmp	r2, r3
 4541 040e FBD1     		bne	.L254
 4542 0410 0023     		movs	r3, #0
 4543              	.LBE358:
 4544              	.LBB359:
 128:./lib/ros_lib/ros/node_handle.h **** 
 4545              		.loc 11 128 0
 4546 0412 1946     		mov	r1, r3
 4547 0414 3148     		ldr	r0, .L261+20
 4548              	.L255:
 4549              	.LVL499:
 4550 0416 C218     		adds	r2, r0, r3
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 4551              		.loc 11 127 0
 4552 0418 0133     		adds	r3, r3, #1
 4553              	.LVL500:
 4554 041a B3F5007F 		cmp	r3, #512
 128:./lib/ros_lib/ros/node_handle.h **** 
 4555              		.loc 11 128 0
 4556 041e 1176     		strb	r1, [r2, #24]
 4557 0420 2E4D     		ldr	r5, .L261+20
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 4558              		.loc 11 127 0
 4559 0422 F8D1     		bne	.L255
 4560 0424 0021     		movs	r1, #0
 4561              	.LBE359:
 4562              	.LBB360:
 131:./lib/ros_lib/ros/node_handle.h **** 
 4563              		.loc 11 131 0
 4564 0426 0C46     		mov	r4, r1
 4565              	.LVL501:
 4566              	.L256:
 4567 0428 6818     		adds	r0, r5, r1
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 4568              		.loc 11 130 0
 4569 042a 0131     		adds	r1, r1, #1
 4570              	.LVL502:
 4571 042c B1F5007F 		cmp	r1, #512
 131:./lib/ros_lib/ros/node_handle.h **** 
 4572              		.loc 11 131 0
 4573 0430 254B     		ldr	r3, .L261
 4574 0432 4FF00002 		mov	r2, #0
 4575 0436 80F81842 		strb	r4, [r0, #536]
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 4576              		.loc 11 130 0
 4577 043a F5D1     		bne	.L256
 4578              	.LVL503:
 4579              	.LBE360:
 4580              	.LBE361:
 4581              	.LBE362:
 4582              	.LBB363:
 4583              	.LBB364:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4584              		.loc 10 67 0
 4585 043c 2849     		ldr	r1, .L261+24
  69:./lib/ros_lib/ros/subscriber.h ****       };
 4586              		.loc 10 69 0
 4587 043e 294C     		ldr	r4, .L261+28
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4588              		.loc 10 67 0
 4589 0440 C3F83819 		str	r1, [r3, #2360]
 4590              	.LVL504:
 4591              	.LBB365:
 4592              	.LBB366:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 4593              		.loc 8 33 0
 4594 0444 2849     		ldr	r1, .L261+32
 4595              	.LBE366:
 4596              	.LBE365:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4597              		.loc 10 67 0
 4598 0446 2948     		ldr	r0, .L261+36
 4599              	.LBB387:
 4600              	.LBB379:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 4601              		.loc 8 33 0
 4602 0448 C3F84419 		str	r1, [r3, #2372]
 4603              	.LVL505:
 4604              	.LBB367:
 4605              	.LBB368:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 4606              		.loc 7 23 0
 4607 044c 2849     		ldr	r1, .L261+40
 4608              	.LBE368:
 4609              	.LBE367:
 4610              	.LBE379:
 4611              	.LBE387:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 4612              		.loc 10 69 0
 4613 044e C3F84049 		str	r4, [r3, #2368]
 4614              	.LBB388:
 4615              	.LBB380:
 4616              	.LBB375:
 4617              	.LBB371:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 4618              		.loc 7 23 0
 4619 0452 C3F84819 		str	r1, [r3, #2376]
 4620              	.LBE371:
 4621              	.LBE375:
 4622              	.LBE380:
 4623              	.LBE388:
 4624              	.LBE364:
 4625              	.LBE363:
 4626              	.LBB399:
 4627              	.LBB400:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4628              		.loc 10 67 0
 4629 0456 274C     		ldr	r4, .L261+44
 4630              	.LBE400:
 4631              	.LBE399:
 4632              	.LBB411:
 4633              	.LBB395:
 4634              	.LBB389:
 4635              	.LBB381:
 4636              	.LBB376:
 4637              	.LBB372:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 4638              		.loc 7 23 0
 4639 0458 2749     		ldr	r1, .L261+48
 4640              	.LBE372:
 4641              	.LBE376:
 4642              	.LBE381:
 4643              	.LBE389:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4644              		.loc 10 67 0
 4645 045a C3F87009 		str	r0, [r3, #2416]
 4646 045e 0120     		movs	r0, #1
 4647              	.LBB390:
 4648              	.LBB382:
 4649              	.LBB377:
 4650              	.LBB373:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 4651              		.loc 7 23 0
 4652 0460 C3F85819 		str	r1, [r3, #2392]
 4653              	.LBE373:
 4654              	.LBE377:
 4655              	.LBE382:
 4656              	.LBE390:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4657              		.loc 10 67 0
 4658 0464 C3F87409 		str	r0, [r3, #2420]
 4659              	.LBB391:
 4660              	.LBB383:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 4661              		.loc 8 33 0
 4662 0468 0021     		movs	r1, #0
 4663              	.LBE383:
 4664              	.LBE391:
 4665              	.LBE395:
 4666              	.LBE411:
 4667              	.LBB412:
 4668              	.LBB407:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4669              		.loc 10 67 0
 4670 046a C3F87849 		str	r4, [r3, #2424]
 4671 046e C3F89009 		str	r0, [r3, #2448]
 4672              	.LBB401:
 4673              	.LBB402:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 4674              		.loc 6 18 0
 4675 0472 224C     		ldr	r4, .L261+52
 4676              	.LBE402:
 4677              	.LBE401:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 4678              		.loc 10 69 0
 4679 0474 2248     		ldr	r0, .L261+56
 4680              	.LBE407:
 4681              	.LBE412:
 4682              	.LBB413:
 4683              	.LBB396:
 4684              	.LBB392:
 4685              	.LBB384:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 4686              		.loc 8 33 0
 4687 0476 C3F85C19 		str	r1, [r3, #2396]	@ float
 4688 047a C3F86019 		str	r1, [r3, #2400]	@ float
 4689 047e C3F86419 		str	r1, [r3, #2404]	@ float
 4690 0482 C3F86819 		str	r1, [r3, #2408]	@ float
 4691              	.LBE384:
 4692              	.LBE392:
 4693              	.LBE396:
 4694              	.LBE413:
 4695              	.LBB414:
 4696              	.LBB415:
  18:./lib/ros_lib/std_msgs/Float32.h ****     {
 4697              		.loc 5 18 0
 4698 0486 C3F8441A 		str	r1, [r3, #2628]	@ float
 4699              	.LBE415:
 4700              	.LBE414:
 4701              	.LBB418:
 4702              	.LBB419:
  50:./lib/ros_lib/ros/publisher.h **** 
 4703              		.loc 16 50 0
 4704 048a 1E49     		ldr	r1, .L261+60
 4705              	.LBE419:
 4706              	.LBE418:
 4707              	.LBB423:
 4708              	.LBB408:
 4709              	.LBB405:
 4710              	.LBB403:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 4711              		.loc 6 18 0
 4712 048c C3F88449 		str	r4, [r3, #2436]
 4713              	.LBE403:
 4714              	.LBE405:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 4715              		.loc 10 69 0
 4716 0490 C3F88009 		str	r0, [r3, #2432]
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4717              		.loc 10 67 0
 4718 0494 1C4C     		ldr	r4, .L261+64
 4719              	.LBE408:
 4720              	.LBE423:
 4721              	.LBB424:
 4722              	.LBB416:
  18:./lib/ros_lib/std_msgs/Float32.h ****     {
 4723              		.loc 5 18 0
 4724 0496 1D48     		ldr	r0, .L261+68
 4725              	.LBE416:
 4726              	.LBE424:
 4727              	.LBB425:
 4728              	.LBB420:
  50:./lib/ros_lib/ros/publisher.h **** 
 4729              		.loc 16 50 0
 4730 0498 C3F89419 		str	r1, [r3, #2452]
 4731              	.LBE420:
 4732              	.LBE425:
 4733              	.LBB426:
 4734              	.LBB397:
 4735              	.LBB393:
 4736              	.LBB385:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 4737              		.loc 8 33 0
 4738 049c 83F86C29 		strb	r2, [r3, #2412]
 4739              	.LBE385:
 4740              	.LBE393:
 4741              	.LBE397:
 4742              	.LBE426:
 4743              	.LBB427:
 4744              	.LBB421:
  50:./lib/ros_lib/ros/publisher.h **** 
 4745              		.loc 16 50 0
 4746 04a0 03F52461 		add	r1, r3, #2624
 4747              	.LBE421:
 4748              	.LBE427:
 4749              	.LBB428:
 4750              	.LBB409:
 4751              	.LBB406:
 4752              	.LBB404:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 4753              		.loc 6 18 0
 4754 04a4 83F88829 		strb	r2, [r3, #2440]
 4755              	.LBE404:
 4756              	.LBE406:
 4757              	.LBE409:
 4758              	.LBE428:
 4759              	.LBB429:
 4760              	.LBB398:
 4761              	.LBB394:
 4762              	.LBB386:
 4763              	.LBB378:
 4764              	.LBB374:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 4765              		.loc 7 23 0
 4766 04a8 C3F84C29 		str	r2, [r3, #2380]
 4767              	.LVL506:
 4768              	.LBB369:
 4769              	.LBB370:
 4770              		.loc 15 52 0
 4771 04ac C3F85029 		str	r2, [r3, #2384]
 4772 04b0 C3F85429 		str	r2, [r3, #2388]
 4773              	.LVL507:
 4774              	.LBE370:
 4775              	.LBE369:
 4776              	.LBE374:
 4777              	.LBE378:
 4778              	.LBE386:
 4779              	.LBE394:
 4780              	.LBE398:
 4781              	.LBE429:
 4782              	.LBB430:
 4783              	.LBB410:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 4784              		.loc 10 67 0
 4785 04b4 C3F88C49 		str	r4, [r3, #2444]
 4786              	.LBE410:
 4787              	.LBE430:
 4788              	.LBB431:
 4789              	.LBB417:
  18:./lib/ros_lib/std_msgs/Float32.h ****     {
 4790              		.loc 5 18 0
 4791 04b8 C3F8400A 		str	r0, [r3, #2624]
 4792              	.LBE417:
 4793              	.LBE431:
 4794              	.LBB432:
 4795              	.LBB422:
  50:./lib/ros_lib/ros/publisher.h **** 
 4796              		.loc 16 50 0
 4797 04bc C3F89819 		str	r1, [r3, #2456]
 4798 04c0 C3F8A429 		str	r2, [r3, #2468]
 4799              	.LVL508:
 4800 04c4 30BD     		pop	{r4, r5, pc}
 4801              	.L262:
 4802 04c6 00BF     		.align	2
 4803              	.L261:
 4804 04c8 00000000 		.word	.LANCHOR1
 4805 04cc 08000000 		.word	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE+8
 4806 04d0 00380140 		.word	1073821696
 4807 04d4 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 4808 04d8 E4080000 		.word	.LANCHOR1+2276
 4809 04dc 08040000 		.word	.LANCHOR1+1032
 4810 04e0 08000000 		.word	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE+8
 4811 04e4 5E020000 		.word	.LC25
 4812 04e8 08000000 		.word	_ZTVN12roberto_msgs10MotorStateE+8
 4813 04ec 00000000 		.word	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 4814 04f0 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 4815 04f4 08000000 		.word	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE+8
 4816 04f8 C3010000 		.word	.LC16
 4817 04fc 08000000 		.word	_ZTVN8std_msgs5UInt8E+8
 4818 0500 64020000 		.word	.LC26
 4819 0504 68020000 		.word	.LC27
 4820 0508 00000000 		.word	_Z6led_cbRKN8std_msgs5UInt8E
 4821 050c 08000000 		.word	_ZTVN8std_msgs7Float32E+8
 4822              	.LBE422:
 4823              	.LBE432:
 4824              	.LBE433:
 4825              	.LBE434:
 4826              		.cfi_endproc
 4827              	.LFE225:
 4828              		.cantunwind
 4829              		.fnend
 4831              		.section	.init_array,"aw",%init_array
 4832              		.align	2
 4833 0000 00000000 		.word	_GLOBAL__sub_I_USART_FIFO(target1)
 4834              		.weak	_ZTSN3ros3MsgE
 4835              		.section	.rodata._ZTSN3ros3MsgE,"aG",%progbits,_ZTSN3ros3MsgE,comdat
 4838              	_ZTSN3ros3MsgE:
 4839 0000 4E33726F 		.ascii	"N3ros3MsgE\000"
 4839      73334D73 
 4839      674500
 4840              		.weak	_ZTIN3ros3MsgE
 4841              		.section	.rodata._ZTIN3ros3MsgE,"aG",%progbits,_ZTIN3ros3MsgE,comdat
 4842              		.align	2
 4845              	_ZTIN3ros3MsgE:
 4846 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 4847 0004 00000000 		.word	_ZTSN3ros3MsgE
 4848              		.weak	_ZTSN8std_msgs4TimeE
 4849              		.section	.rodata._ZTSN8std_msgs4TimeE,"aG",%progbits,_ZTSN8std_msgs4TimeE,comdat
 4852              	_ZTSN8std_msgs4TimeE:
 4853 0000 4E387374 		.ascii	"N8std_msgs4TimeE\000"
 4853      645F6D73 
 4853      67733454 
 4853      696D6545 
 4853      00
 4854              		.weak	_ZTIN8std_msgs4TimeE
 4855              		.section	.rodata._ZTIN8std_msgs4TimeE,"aG",%progbits,_ZTIN8std_msgs4TimeE,comdat
 4856              		.align	2
 4859              	_ZTIN8std_msgs4TimeE:
 4860 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 4861 0004 00000000 		.word	_ZTSN8std_msgs4TimeE
 4862 0008 00000000 		.word	_ZTIN3ros3MsgE
 4863              		.weak	_ZTSN14rosserial_msgs9TopicInfoE
 4864              		.section	.rodata._ZTSN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTSN14rosserial_msgs9TopicInfoE,
 4867              	_ZTSN14rosserial_msgs9TopicInfoE:
 4868 0000 4E313472 		.ascii	"N14rosserial_msgs9TopicInfoE\000"
 4868      6F737365 
 4868      7269616C 
 4868      5F6D7367 
 4868      7339546F 
 4869              		.weak	_ZTIN14rosserial_msgs9TopicInfoE
 4870              		.section	.rodata._ZTIN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTIN14rosserial_msgs9TopicInfoE,
 4871              		.align	2
 4874              	_ZTIN14rosserial_msgs9TopicInfoE:
 4875 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 4876 0004 00000000 		.word	_ZTSN14rosserial_msgs9TopicInfoE
 4877 0008 00000000 		.word	_ZTIN3ros3MsgE
 4878              		.weak	_ZTSN14rosserial_msgs3LogE
 4879              		.section	.rodata._ZTSN14rosserial_msgs3LogE,"aG",%progbits,_ZTSN14rosserial_msgs3LogE,comdat
 4882              	_ZTSN14rosserial_msgs3LogE:
 4883 0000 4E313472 		.ascii	"N14rosserial_msgs3LogE\000"
 4883      6F737365 
 4883      7269616C 
 4883      5F6D7367 
 4883      73334C6F 
 4884              		.weak	_ZTIN14rosserial_msgs3LogE
 4885              		.section	.rodata._ZTIN14rosserial_msgs3LogE,"aG",%progbits,_ZTIN14rosserial_msgs3LogE,comdat
 4886              		.align	2
 4889              	_ZTIN14rosserial_msgs3LogE:
 4890 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 4891 0004 00000000 		.word	_ZTSN14rosserial_msgs3LogE
 4892 0008 00000000 		.word	_ZTIN3ros3MsgE
 4893              		.weak	_ZTSN14rosserial_msgs20RequestParamResponseE
 4894              		.section	.rodata._ZTSN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTSN14rosserial_msgs
 4897              	_ZTSN14rosserial_msgs20RequestParamResponseE:
 4898 0000 4E313472 		.ascii	"N14rosserial_msgs20RequestParamResponseE\000"
 4898      6F737365 
 4898      7269616C 
 4898      5F6D7367 
 4898      73323052 
 4899              		.weak	_ZTIN14rosserial_msgs20RequestParamResponseE
 4900              		.section	.rodata._ZTIN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTIN14rosserial_msgs
 4901              		.align	2
 4904              	_ZTIN14rosserial_msgs20RequestParamResponseE:
 4905 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 4906 0004 00000000 		.word	_ZTSN14rosserial_msgs20RequestParamResponseE
 4907 0008 00000000 		.word	_ZTIN3ros3MsgE
 4908              		.weak	_ZTSN3ros15NodeHandleBase_E
 4909              		.section	.rodata._ZTSN3ros15NodeHandleBase_E,"aG",%progbits,_ZTSN3ros15NodeHandleBase_E,comdat
 4912              	_ZTSN3ros15NodeHandleBase_E:
 4913 0000 4E33726F 		.ascii	"N3ros15NodeHandleBase_E\000"
 4913      7331354E 
 4913      6F646548 
 4913      616E646C 
 4913      65426173 
 4914              		.weak	_ZTIN3ros15NodeHandleBase_E
 4915              		.section	.rodata._ZTIN3ros15NodeHandleBase_E,"aG",%progbits,_ZTIN3ros15NodeHandleBase_E,comdat
 4916              		.align	2
 4919              	_ZTIN3ros15NodeHandleBase_E:
 4920 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 4921 0004 00000000 		.word	_ZTSN3ros15NodeHandleBase_E
 4922              		.weak	_ZTSN3ros11Subscriber_E
 4923              		.section	.rodata._ZTSN3ros11Subscriber_E,"aG",%progbits,_ZTSN3ros11Subscriber_E,comdat
 4926              	_ZTSN3ros11Subscriber_E:
 4927 0000 4E33726F 		.ascii	"N3ros11Subscriber_E\000"
 4927      73313153 
 4927      75627363 
 4927      72696265 
 4927      725F4500 
 4928              		.weak	_ZTIN3ros11Subscriber_E
 4929              		.section	.rodata._ZTIN3ros11Subscriber_E,"aG",%progbits,_ZTIN3ros11Subscriber_E,comdat
 4930              		.align	2
 4933              	_ZTIN3ros11Subscriber_E:
 4934 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 4935 0004 00000000 		.word	_ZTSN3ros11Subscriber_E
 4936              		.weak	_ZTSN8std_msgs7Float32E
 4937              		.section	.rodata._ZTSN8std_msgs7Float32E,"aG",%progbits,_ZTSN8std_msgs7Float32E,comdat
 4940              	_ZTSN8std_msgs7Float32E:
 4941 0000 4E387374 		.ascii	"N8std_msgs7Float32E\000"
 4941      645F6D73 
 4941      67733746 
 4941      6C6F6174 
 4941      33324500 
 4942              		.weak	_ZTIN8std_msgs7Float32E
 4943              		.section	.rodata._ZTIN8std_msgs7Float32E,"aG",%progbits,_ZTIN8std_msgs7Float32E,comdat
 4944              		.align	2
 4947              	_ZTIN8std_msgs7Float32E:
 4948 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 4949 0004 00000000 		.word	_ZTSN8std_msgs7Float32E
 4950 0008 00000000 		.word	_ZTIN3ros3MsgE
 4951              		.weak	_ZTSN8std_msgs5UInt8E
 4952              		.section	.rodata._ZTSN8std_msgs5UInt8E,"aG",%progbits,_ZTSN8std_msgs5UInt8E,comdat
 4955              	_ZTSN8std_msgs5UInt8E:
 4956 0000 4E387374 		.ascii	"N8std_msgs5UInt8E\000"
 4956      645F6D73 
 4956      67733555 
 4956      496E7438 
 4956      4500
 4957              		.weak	_ZTIN8std_msgs5UInt8E
 4958              		.section	.rodata._ZTIN8std_msgs5UInt8E,"aG",%progbits,_ZTIN8std_msgs5UInt8E,comdat
 4959              		.align	2
 4962              	_ZTIN8std_msgs5UInt8E:
 4963 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 4964 0004 00000000 		.word	_ZTSN8std_msgs5UInt8E
 4965 0008 00000000 		.word	_ZTIN3ros3MsgE
 4966              		.weak	_ZTSN8std_msgs6HeaderE
 4967              		.section	.rodata._ZTSN8std_msgs6HeaderE,"aG",%progbits,_ZTSN8std_msgs6HeaderE,comdat
 4970              	_ZTSN8std_msgs6HeaderE:
 4971 0000 4E387374 		.ascii	"N8std_msgs6HeaderE\000"
 4971      645F6D73 
 4971      67733648 
 4971      65616465 
 4971      724500
 4972              		.weak	_ZTIN8std_msgs6HeaderE
 4973              		.section	.rodata._ZTIN8std_msgs6HeaderE,"aG",%progbits,_ZTIN8std_msgs6HeaderE,comdat
 4974              		.align	2
 4977              	_ZTIN8std_msgs6HeaderE:
 4978 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 4979 0004 00000000 		.word	_ZTSN8std_msgs6HeaderE
 4980 0008 00000000 		.word	_ZTIN3ros3MsgE
 4981              		.weak	_ZTSN12roberto_msgs10MotorStateE
 4982              		.section	.rodata._ZTSN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTSN12roberto_msgs10MotorStateE,
 4985              	_ZTSN12roberto_msgs10MotorStateE:
 4986 0000 4E313272 		.ascii	"N12roberto_msgs10MotorStateE\000"
 4986      6F626572 
 4986      746F5F6D 
 4986      73677331 
 4986      304D6F74 
 4987              		.weak	_ZTIN12roberto_msgs10MotorStateE
 4988              		.section	.rodata._ZTIN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTIN12roberto_msgs10MotorStateE,
 4989              		.align	2
 4992              	_ZTIN12roberto_msgs10MotorStateE:
 4993 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 4994 0004 00000000 		.word	_ZTSN12roberto_msgs10MotorStateE
 4995 0008 00000000 		.word	_ZTIN3ros3MsgE
 4996              		.weak	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 4997              		.section	.rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 5000              	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 5001 0000 4E33726F 		.ascii	"N3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512"
 5001      7331314E 
 5001      6F646548 
 5001      616E646C 
 5001      655F4931 
 5002 0033 454C6935 		.ascii	"ELi512EEE\000"
 5002      31324545 
 5002      4500
 5003              		.weak	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5004              		.section	.rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 5005              		.align	2
 5008              	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 5009 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5010 0004 00000000 		.word	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5011 0008 00000000 		.word	_ZTIN3ros15NodeHandleBase_E
 5012              		.weak	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 5013              		.section	.rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTSN3ros10Su
 5016              	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 5017 0000 4E33726F 		.ascii	"N3ros10SubscriberIN12roberto_msgs10MotorStateEEE\000"
 5017      73313053 
 5017      75627363 
 5017      72696265 
 5017      72494E31 
 5018              		.weak	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 5019              		.section	.rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTIN3ros10Su
 5020              		.align	2
 5023              	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 5024 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5025 0004 00000000 		.word	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 5026 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 5027              		.weak	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 5028              		.section	.rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTSN3ros10SubscriberIN8
 5031              	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:
 5032 0000 4E33726F 		.ascii	"N3ros10SubscriberIN8std_msgs5UInt8EEE\000"
 5032      73313053 
 5032      75627363 
 5032      72696265 
 5032      72494E38 
 5033              		.weak	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 5034              		.section	.rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTIN3ros10SubscriberIN8
 5035              		.align	2
 5038              	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:
 5039 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 5040 0004 00000000 		.word	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 5041 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 5042              		.weak	_ZTVN8std_msgs4TimeE
 5043              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 5044              		.align	2
 5047              	_ZTVN8std_msgs4TimeE:
 5048 0000 00000000 		.word	0
 5049 0004 00000000 		.word	_ZTIN8std_msgs4TimeE
 5050 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 5051 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 5052 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 5053 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 5054              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 5055              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 5056              		.align	2
 5059              	_ZTVN14rosserial_msgs9TopicInfoE:
 5060 0000 00000000 		.word	0
 5061 0004 00000000 		.word	_ZTIN14rosserial_msgs9TopicInfoE
 5062 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 5063 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 5064 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 5065 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 5066              		.weak	_ZTVN14rosserial_msgs3LogE
 5067              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 5068              		.align	2
 5071              	_ZTVN14rosserial_msgs3LogE:
 5072 0000 00000000 		.word	0
 5073 0004 00000000 		.word	_ZTIN14rosserial_msgs3LogE
 5074 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 5075 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 5076 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 5077 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 5078              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 5079              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 5080              		.align	2
 5083              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 5084 0000 00000000 		.word	0
 5085 0004 00000000 		.word	_ZTIN14rosserial_msgs20RequestParamResponseE
 5086 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 5087 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 5088 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 5089 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 5090              		.weak	_ZTVN8std_msgs7Float32E
 5091              		.section	.rodata._ZTVN8std_msgs7Float32E,"aG",%progbits,_ZTVN8std_msgs7Float32E,comdat
 5092              		.align	2
 5095              	_ZTVN8std_msgs7Float32E:
 5096 0000 00000000 		.word	0
 5097 0004 00000000 		.word	_ZTIN8std_msgs7Float32E
 5098 0008 00000000 		.word	_ZNK8std_msgs7Float329serializeEPh
 5099 000c 00000000 		.word	_ZN8std_msgs7Float3211deserializeEPh
 5100 0010 00000000 		.word	_ZN8std_msgs7Float327getTypeEv
 5101 0014 00000000 		.word	_ZN8std_msgs7Float326getMD5Ev
 5102              		.weak	_ZTVN8std_msgs5UInt8E
 5103              		.section	.rodata._ZTVN8std_msgs5UInt8E,"aG",%progbits,_ZTVN8std_msgs5UInt8E,comdat
 5104              		.align	2
 5107              	_ZTVN8std_msgs5UInt8E:
 5108 0000 00000000 		.word	0
 5109 0004 00000000 		.word	_ZTIN8std_msgs5UInt8E
 5110 0008 00000000 		.word	_ZNK8std_msgs5UInt89serializeEPh
 5111 000c 00000000 		.word	_ZN8std_msgs5UInt811deserializeEPh
 5112 0010 00000000 		.word	_ZN8std_msgs5UInt87getTypeEv
 5113 0014 00000000 		.word	_ZN8std_msgs5UInt86getMD5Ev
 5114              		.weak	_ZTVN8std_msgs6HeaderE
 5115              		.section	.rodata._ZTVN8std_msgs6HeaderE,"aG",%progbits,_ZTVN8std_msgs6HeaderE,comdat
 5116              		.align	2
 5119              	_ZTVN8std_msgs6HeaderE:
 5120 0000 00000000 		.word	0
 5121 0004 00000000 		.word	_ZTIN8std_msgs6HeaderE
 5122 0008 00000000 		.word	_ZNK8std_msgs6Header9serializeEPh
 5123 000c 00000000 		.word	_ZN8std_msgs6Header11deserializeEPh
 5124 0010 00000000 		.word	_ZN8std_msgs6Header7getTypeEv
 5125 0014 00000000 		.word	_ZN8std_msgs6Header6getMD5Ev
 5126              		.weak	_ZTVN12roberto_msgs10MotorStateE
 5127              		.section	.rodata._ZTVN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTVN12roberto_msgs10MotorStateE,
 5128              		.align	2
 5131              	_ZTVN12roberto_msgs10MotorStateE:
 5132 0000 00000000 		.word	0
 5133 0004 00000000 		.word	_ZTIN12roberto_msgs10MotorStateE
 5134 0008 00000000 		.word	_ZNK12roberto_msgs10MotorState9serializeEPh
 5135 000c 00000000 		.word	_ZN12roberto_msgs10MotorState11deserializeEPh
 5136 0010 00000000 		.word	_ZN12roberto_msgs10MotorState7getTypeEv
 5137 0014 00000000 		.word	_ZN12roberto_msgs10MotorState6getMD5Ev
 5138              		.weak	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5139              		.section	.rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 5140              		.align	2
 5143              	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 5144 0000 00000000 		.word	0
 5145 0004 00000000 		.word	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 5146 0008 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 5147 000c 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 5148 0010 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
 5149              		.weak	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 5150              		.section	.rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTVN3ros10Su
 5151              		.align	2
 5154              	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 5155 0000 00000000 		.word	0
 5156 0004 00000000 		.word	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 5157 0008 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 5158 000c 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 5159 0010 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 5160 0014 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 5161              		.weak	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
 5162              		.section	.rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTVN3ros10SubscriberIN8
 5163              		.align	2
 5166              	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:
 5167 0000 00000000 		.word	0
 5168 0004 00000000 		.word	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 5169 0008 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 5170 000c 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 5171 0010 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 5172 0014 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 5173              		.global	str
 5174              		.global	hello
 5175              		.global	chatter
 5176              		.global	str_msg
 5177              		.global	led_sub
 5178              		.global	motor_sub
 5179              		.global	nh
 5180              		.global	GenerateStartStatus
 5181              		.global	NumberOfByteToReceive
 5182              		.global	RxBuffer
 5183              		.global	slaveAddress
 5184              		.global	Rx_Idx
 5185              		.global	USART_CNTOUT
 5186              		.global	USART_CNTIN
 5187              		.global	USART_FIFO
 5188              		.section	.rodata
 5189              		.set	.LANCHOR0,. + 0
 5192              	_ZN14rosserial_msgsL12REQUESTPARAME:
 5193 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 5193      65726961 
 5193      6C5F6D73 
 5193      67732F52 
 5193      65717565 
 5194              		.section	.rodata.str1.1,"aMS",%progbits,1
 5195              	.LC0:
 5196 0000 7374645F 		.ascii	"std_msgs/Time\000"
 5196      6D736773 
 5196      2F54696D 
 5196      6500
 5197              	.LC1:
 5198 000e 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 5198      36366337 
 5198      34633535 
 5198      32633331 
 5198      31666263 
 5199              	.LC2:
 5200 002f 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 5200      65726961 
 5200      6C5F6D73 
 5200      67732F54 
 5200      6F706963 
 5201              	.LC3:
 5202 0048 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 5202      31663838 
 5202      66633434 
 5202      38393266 
 5202      38633130 
 5203              	.LC4:
 5204 0069 726F7373 		.ascii	"rosserial_msgs/Log\000"
 5204      65726961 
 5204      6C5F6D73 
 5204      67732F4C 
 5204      6F6700
 5205              	.LC5:
 5206 007c 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 5206      64373331 
 5206      63323539 
 5206      33333236 
 5206      31636436 
 5207              	.LC6:
 5208 009d 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 5208      39386264 
 5208      61363539 
 5208      38313938 
 5208      36646466 
 5209              	.LC7:
 5210 00be 7374645F 		.ascii	"std_msgs/Float32\000"
 5210      6D736773 
 5210      2F466C6F 
 5210      61743332 
 5210      00
 5211              	.LC8:
 5212 00cf 37336663 		.ascii	"73fcbf46b49191e672908e50842a83d4\000"
 5212      62663436 
 5212      62343931 
 5212      39316536 
 5212      37323930 
 5213              	.LC9:
 5214 00f0 7374645F 		.ascii	"std_msgs/UInt8\000"
 5214      6D736773 
 5214      2F55496E 
 5214      743800
 5215              	.LC10:
 5216 00ff 37633831 		.ascii	"7c8164229e7d2c17eb95e9231617fdee\000"
 5216      36343232 
 5216      39653764 
 5216      32633137 
 5216      65623935 
 5217              	.LC11:
 5218 0120 7374645F 		.ascii	"std_msgs/Header\000"
 5218      6D736773 
 5218      2F486561 
 5218      64657200 
 5219              	.LC12:
 5220 0130 32313736 		.ascii	"2176decaecbce78abc3b96ef049fabed\000"
 5220      64656361 
 5220      65636263 
 5220      65373861 
 5220      62633362 
 5221              	.LC13:
 5222 0151 726F6265 		.ascii	"roberto_msgs/MotorState\000"
 5222      72746F5F 
 5222      6D736773 
 5222      2F4D6F74 
 5222      6F725374 
 5223              	.LC14:
 5224 0169 65386235 		.ascii	"e8b5d1162b85151c49e02b8224796c0e\000"
 5224      64313136 
 5224      32623835 
 5224      31353163 
 5224      34396530 
 5225              	.LC15:
 5226 018a 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 5226      61676520 
 5226      66726F6D 
 5226      20646576 
 5226      69636520 
 5227 01bd 66666572 		.ascii	"ffer.\000"
 5227      2E00
 5228              	.LC16:
 5229 01c3 00       		.ascii	"\000"
 5230              	.LC17:
 5231 01c4 73657276 		.ascii	"servo_left\000"
 5231      6F5F6C65 
 5231      667400
 5232              	.LC18:
 5233 01cf 73657276 		.ascii	"servo_right\000"
 5233      6F5F7269 
 5233      67687400 
 5234              	.LC19:
 5235 01db 66726F6E 		.ascii	"front_right\000"
 5235      745F7269 
 5235      67687400 
 5236              	.LC20:
 5237 01e7 66726F6E 		.ascii	"front_left\000"
 5237      745F6C65 
 5237      667400
 5238              	.LC21:
 5239 01f2 72656172 		.ascii	"rear_left\000"
 5239      5F6C6566 
 5239      7400
 5240              	.LC22:
 5241 01fc 72656172 		.ascii	"rear_right\000"
 5241      5F726967 
 5241      687400
 5242              	.LC23:
 5243 0207 556E6162 		.ascii	"Unable to initialize motor: %s - [FAIL]\015\012\000"
 5243      6C652074 
 5243      6F20696E 
 5243      69746961 
 5243      6C697A65 
 5244              	.LC24:
 5245 0231 57726F6E 		.ascii	"Wrong parameters value: file %s on line %d\015\012\000"
 5245      67207061 
 5245      72616D65 
 5245      74657273 
 5245      2076616C 
 5246              	.LC25:
 5247 025e 6D6F746F 		.ascii	"motor\000"
 5247      7200
 5248              	.LC26:
 5249 0264 6C656400 		.ascii	"led\000"
 5250              	.LC27:
 5251 0268 656E636F 		.ascii	"encoder\000"
 5251      64657200 
 5252              		.bss
 5253              		.align	2
 5254              		.set	.LANCHOR1,. + 0
 5257              	USART_CNTOUT:
 5258 0000 00000000 		.space	4
 5261              	USART_CNTIN:
 5262 0004 00000000 		.space	4
 5265              	USART_FIFO:
 5266 0008 00000000 		.space	1024
 5266      00000000 
 5266      00000000 
 5266      00000000 
 5266      00000000 
 5269              	nh:
 5270 0408 00000000 		.space	1328
 5270      00000000 
 5270      00000000 
 5270      00000000 
 5270      00000000 
 5273              	motor_sub:
 5274 0938 00000000 		.space	64
 5274      00000000 
 5274      00000000 
 5274      00000000 
 5274      00000000 
 5277              	led_sub:
 5278 0978 00000000 		.space	28
 5278      00000000 
 5278      00000000 
 5278      00000000 
 5278      00000000 
 5281              	chatter:
 5282 0994 00000000 		.space	20
 5282      00000000 
 5282      00000000 
 5282      00000000 
 5282      00000000 
 5285              	str:
 5286 09a8 00000000 		.space	150
 5286      00000000 
 5286      00000000 
 5286      00000000 
 5286      00000000 
 5287 0a3e 0000     		.space	2
 5290              	str_msg:
 5291 0a40 00000000 		.space	8
 5291      00000000 
 5294              	hello:
 5295 0a48 00000000 		.space	25
 5295      00000000 
 5295      00000000 
 5295      00000000 
 5295      00000000 
 5298              	GenerateStartStatus:
 5299 0a61 00       		.space	1
 5302              	NumberOfByteToReceive:
 5303 0a62 00       		.space	1
 5306              	RxBuffer:
 5307 0a63 00000000 		.space	4
 5310              	slaveAddress:
 5311 0a67 00       		.space	1
 5314              	Rx_Idx:
 5315 0a68 00       		.space	1
 5316              		.text
 5317              	.Letext0:
 5318              		.file 17 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 5319              		.file 18 "/media/emil/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_type
 5320              		.file 19 "/media/emil/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 5321              		.file 20 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 5322              		.file 21 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_usart.h"
 5323              		.file 22 "./inc/motorSettings.h"
 5324              		.file 23 "./lib/ros_lib/ros/duration.h"
 5325              		.file 24 "./lib/ros_lib/ros.h"
 5326              		.file 25 "./inc/motor.h"
 5327              		.file 26 "./inc/led.h"
 5328              		.file 27 "/media/emil/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/string.h"
 5329              		.file 28 "/media/emil/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdlib.h"
 5330              		.file 29 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 5331              		.file 30 "./inc/stm32_time.h"
 5332              		.file 31 "./inc/encoder.h"
 5333              		.file 32 "/media/emil/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdio.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/ccndFY1f.s:20     .text._ZNK8std_msgs4Time9serializeEPh:00000000 $t
     /tmp/ccndFY1f.s:25     .text._ZNK8std_msgs4Time9serializeEPh:00000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:00000000 $d
     /tmp/ccndFY1f.s:75     .text._ZN8std_msgs4Time11deserializeEPh:00000000 $t
     /tmp/ccndFY1f.s:80     .text._ZN8std_msgs4Time11deserializeEPh:00000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:00000000 $d
     /tmp/ccndFY1f.s:131    .text._ZN8std_msgs4Time7getTypeEv:00000000 $t
     /tmp/ccndFY1f.s:136    .text._ZN8std_msgs4Time7getTypeEv:00000000 _ZN8std_msgs4Time7getTypeEv
     /tmp/ccndFY1f.s:152    .text._ZN8std_msgs4Time7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:00000000 $d
     /tmp/ccndFY1f.s:159    .text._ZN8std_msgs4Time6getMD5Ev:00000000 $t
     /tmp/ccndFY1f.s:164    .text._ZN8std_msgs4Time6getMD5Ev:00000000 _ZN8std_msgs4Time6getMD5Ev
     /tmp/ccndFY1f.s:180    .text._ZN8std_msgs4Time6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:00000000 $d
     /tmp/ccndFY1f.s:187    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $t
     /tmp/ccndFY1f.s:192    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
     /tmp/ccndFY1f.s:209    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $d
     /tmp/ccndFY1f.s:216    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $t
     /tmp/ccndFY1f.s:221    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
     /tmp/ccndFY1f.s:237    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $d
     /tmp/ccndFY1f.s:244    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $t
     /tmp/ccndFY1f.s:249    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 _ZN14rosserial_msgs3Log7getTypeEv
     /tmp/ccndFY1f.s:266    .text._ZN14rosserial_msgs3Log7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $d
     /tmp/ccndFY1f.s:273    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $t
     /tmp/ccndFY1f.s:278    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 _ZN14rosserial_msgs3Log6getMD5Ev
     /tmp/ccndFY1f.s:294    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $d
     /tmp/ccndFY1f.s:301    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $t
     /tmp/ccndFY1f.s:306    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
     /tmp/ccndFY1f.s:323    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $d
     /tmp/ccndFY1f.s:330    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $t
     /tmp/ccndFY1f.s:335    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
     /tmp/ccndFY1f.s:351    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $d
     /tmp/ccndFY1f.s:358    .text._ZNK8std_msgs7Float329serializeEPh:00000000 $t
     /tmp/ccndFY1f.s:363    .text._ZNK8std_msgs7Float329serializeEPh:00000000 _ZNK8std_msgs7Float329serializeEPh
.ARM.exidx.text._ZNK8std_msgs7Float329serializeEPh:00000000 $d
     /tmp/ccndFY1f.s:402    .text._ZN8std_msgs7Float3211deserializeEPh:00000000 $t
     /tmp/ccndFY1f.s:407    .text._ZN8std_msgs7Float3211deserializeEPh:00000000 _ZN8std_msgs7Float3211deserializeEPh
.ARM.exidx.text._ZN8std_msgs7Float3211deserializeEPh:00000000 $d
     /tmp/ccndFY1f.s:430    .text._ZN8std_msgs7Float327getTypeEv:00000000 $t
     /tmp/ccndFY1f.s:435    .text._ZN8std_msgs7Float327getTypeEv:00000000 _ZN8std_msgs7Float327getTypeEv
     /tmp/ccndFY1f.s:451    .text._ZN8std_msgs7Float327getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs7Float327getTypeEv:00000000 $d
     /tmp/ccndFY1f.s:458    .text._ZN8std_msgs7Float326getMD5Ev:00000000 $t
     /tmp/ccndFY1f.s:463    .text._ZN8std_msgs7Float326getMD5Ev:00000000 _ZN8std_msgs7Float326getMD5Ev
     /tmp/ccndFY1f.s:479    .text._ZN8std_msgs7Float326getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs7Float326getMD5Ev:00000000 $d
     /tmp/ccndFY1f.s:486    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 $t
     /tmp/ccndFY1f.s:491    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 _ZNK8std_msgs5UInt89serializeEPh
.ARM.exidx.text._ZNK8std_msgs5UInt89serializeEPh:00000000 $d
     /tmp/ccndFY1f.s:517    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 $t
     /tmp/ccndFY1f.s:522    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 _ZN8std_msgs5UInt811deserializeEPh
.ARM.exidx.text._ZN8std_msgs5UInt811deserializeEPh:00000000 $d
     /tmp/ccndFY1f.s:545    .text._ZN8std_msgs5UInt87getTypeEv:00000000 $t
     /tmp/ccndFY1f.s:550    .text._ZN8std_msgs5UInt87getTypeEv:00000000 _ZN8std_msgs5UInt87getTypeEv
     /tmp/ccndFY1f.s:566    .text._ZN8std_msgs5UInt87getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt87getTypeEv:00000000 $d
     /tmp/ccndFY1f.s:573    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 $t
     /tmp/ccndFY1f.s:578    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 _ZN8std_msgs5UInt86getMD5Ev
     /tmp/ccndFY1f.s:594    .text._ZN8std_msgs5UInt86getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt86getMD5Ev:00000000 $d
     /tmp/ccndFY1f.s:601    .text._ZN8std_msgs6Header7getTypeEv:00000000 $t
     /tmp/ccndFY1f.s:606    .text._ZN8std_msgs6Header7getTypeEv:00000000 _ZN8std_msgs6Header7getTypeEv
     /tmp/ccndFY1f.s:623    .text._ZN8std_msgs6Header7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header7getTypeEv:00000000 $d
     /tmp/ccndFY1f.s:630    .text._ZN8std_msgs6Header6getMD5Ev:00000000 $t
     /tmp/ccndFY1f.s:635    .text._ZN8std_msgs6Header6getMD5Ev:00000000 _ZN8std_msgs6Header6getMD5Ev
     /tmp/ccndFY1f.s:651    .text._ZN8std_msgs6Header6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header6getMD5Ev:00000000 $d
     /tmp/ccndFY1f.s:658    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $t
     /tmp/ccndFY1f.s:663    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 _ZN12roberto_msgs10MotorState7getTypeEv
     /tmp/ccndFY1f.s:680    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $d
     /tmp/ccndFY1f.s:687    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $t
     /tmp/ccndFY1f.s:692    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 _ZN12roberto_msgs10MotorState6getMD5Ev
     /tmp/ccndFY1f.s:708    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $d
     /tmp/ccndFY1f.s:715    .text:00000000 $t
     /tmp/ccndFY1f.s:720    .text:00000000 _Z8motor_cbRKN12roberto_msgs10MotorStateE
                       .ARM.exidx:00000000 $d
     /tmp/ccndFY1f.s:737    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $t
     /tmp/ccndFY1f.s:742    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $d
     /tmp/ccndFY1f.s:778    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $t
     /tmp/ccndFY1f.s:783    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $d
     /tmp/ccndFY1f.s:802    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $t
     /tmp/ccndFY1f.s:807    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
     /tmp/ccndFY1f.s:823    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $d
     /tmp/ccndFY1f.s:830    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $t
     /tmp/ccndFY1f.s:835    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
     /tmp/ccndFY1f.s:851    .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $d
     /tmp/ccndFY1f.s:858    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $t
     /tmp/ccndFY1f.s:863    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $d
     /tmp/ccndFY1f.s:882    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $t
     /tmp/ccndFY1f.s:887    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
     /tmp/ccndFY1f.s:903    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $d
     /tmp/ccndFY1f.s:910    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $t
     /tmp/ccndFY1f.s:915    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
     /tmp/ccndFY1f.s:931    .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $d
     /tmp/ccndFY1f.s:938    .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 $t
     /tmp/ccndFY1f.s:943    .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 $d
     /tmp/ccndFY1f.s:968    .text:00000002 _Z6led_cbRKN8std_msgs5UInt8E
     /tmp/ccndFY1f.s:988    .text._ZNK8std_msgs6Header9serializeEPh:00000000 $t
     /tmp/ccndFY1f.s:993    .text._ZNK8std_msgs6Header9serializeEPh:00000000 _ZNK8std_msgs6Header9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6Header9serializeEPh:00000000 $d
     /tmp/ccndFY1f.s:1092   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $t
     /tmp/ccndFY1f.s:1097   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $d
     /tmp/ccndFY1f.s:1310   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $t
     /tmp/ccndFY1f.s:1315   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $d
     /tmp/ccndFY1f.s:1374   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $t
     /tmp/ccndFY1f.s:1379   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $d
     /tmp/ccndFY1f.s:1514   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $t
     /tmp/ccndFY1f.s:1519   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $d
     /tmp/ccndFY1f.s:1593   .text._ZN8std_msgs6Header11deserializeEPh:00000000 $t
     /tmp/ccndFY1f.s:1598   .text._ZN8std_msgs6Header11deserializeEPh:00000000 _ZN8std_msgs6Header11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6Header11deserializeEPh:00000000 $d
     /tmp/ccndFY1f.s:1711   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $t
     /tmp/ccndFY1f.s:1716   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $d
     /tmp/ccndFY1f.s:1904   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $t
     /tmp/ccndFY1f.s:1909   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $d
     /tmp/ccndFY1f.s:2165   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $t
     /tmp/ccndFY1f.s:2170   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 _ZN3ros3Msg19serializeAvrFloat64EPhf
.ARM.exidx.text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $d
     /tmp/ccndFY1f.s:2257   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $t
     /tmp/ccndFY1f.s:2262   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 _ZNK12roberto_msgs10MotorState9serializeEPh
.ARM.exidx.text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $d
     /tmp/ccndFY1f.s:2334   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $t
     /tmp/ccndFY1f.s:2339   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 _ZN3ros3Msg21deserializeAvrFloat64EPKhPf
.ARM.exidx.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $d
     /tmp/ccndFY1f.s:2411   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $t
     /tmp/ccndFY1f.s:2416   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 _ZN12roberto_msgs10MotorState11deserializeEPh
.ARM.exidx.text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $d
     /tmp/ccndFY1f.s:2490   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $t
     /tmp/ccndFY1f.s:2495   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $d
     /tmp/ccndFY1f.s:2539   .text._ZN15ArduinoHardware4initEv:00000000 $t
     /tmp/ccndFY1f.s:2544   .text._ZN15ArduinoHardware4initEv:00000000 _ZN15ArduinoHardware4initEv
     /tmp/ccndFY1f.s:2662   .text._ZN15ArduinoHardware4initEv:0000008c $d
.ARM.exidx.text._ZN15ArduinoHardware4initEv:00000000 $d
     /tmp/ccndFY1f.s:2674   .text:00000008 USART1_IRQHandler
     /tmp/ccndFY1f.s:2737   .text:0000004c $d
     /tmp/ccndFY1f.s:2744   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 $t
     /tmp/ccndFY1f.s:2749   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
     /tmp/ccndFY1f.s:2803   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000020 $d
     /tmp/ccndFY1f.s:5071   .rodata._ZTVN14rosserial_msgs3LogE:00000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 $d
     /tmp/ccndFY1f.s:2809   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 $t
     /tmp/ccndFY1f.s:2814   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
     /tmp/ccndFY1f.s:2978   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:000000bc $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 $d
     /tmp/ccndFY1f.s:2985   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 $t
     /tmp/ccndFY1f.s:2990   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
     /tmp/ccndFY1f.s:3060   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000024 $d
     /tmp/ccndFY1f.s:5047   .rodata._ZTVN8std_msgs4TimeE:00000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 $d
     /tmp/ccndFY1f.s:3066   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 $t
     /tmp/ccndFY1f.s:3071   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
     /tmp/ccndFY1f.s:3233   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:000000b4 $d
     /tmp/ccndFY1f.s:5059   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 _ZTVN14rosserial_msgs9TopicInfoE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 $d
     /tmp/ccndFY1f.s:3240   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 $t
     /tmp/ccndFY1f.s:3245   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
     /tmp/ccndFY1f.s:3378   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000074 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 $d
     /tmp/ccndFY1f.s:3386   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 $t
     /tmp/ccndFY1f.s:3391   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
     /tmp/ccndFY1f.s:3753   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000208 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 $d
     /tmp/ccndFY1f.s:3760   .text.startup:00000000 $t
     /tmp/ccndFY1f.s:3765   .text.startup:00000000 main
     /tmp/ccndFY1f.s:3904   .text.startup:00000090 $d
     /tmp/ccndFY1f.s:3912   .text.startup:000000a4 $t
     /tmp/ccndFY1f.s:4344   .text.startup:00000358 $d
          .ARM.exidx.text.startup:00000000 $d
     /tmp/ccndFY1f.s:4373   .text:00000054 $t
     /tmp/ccndFY1f.s:4378   .text:00000054 _Z13assert_failedPhm
     /tmp/ccndFY1f.s:4425   .text:00000080 $d
     /tmp/ccndFY1f.s:4432   .text.startup:000003b4 $t
     /tmp/ccndFY1f.s:4436   .text.startup:000003b4 _GLOBAL__sub_I_USART_FIFO
     /tmp/ccndFY1f.s:4804   .text.startup:000004c8 $d
     /tmp/ccndFY1f.s:5143   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/ccndFY1f.s:5083   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 _ZTVN14rosserial_msgs20RequestParamResponseE
     /tmp/ccndFY1f.s:5154   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccndFY1f.s:5131   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 _ZTVN12roberto_msgs10MotorStateE
     /tmp/ccndFY1f.s:5119   .rodata._ZTVN8std_msgs6HeaderE:00000000 _ZTVN8std_msgs6HeaderE
     /tmp/ccndFY1f.s:5166   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/ccndFY1f.s:5107   .rodata._ZTVN8std_msgs5UInt8E:00000000 _ZTVN8std_msgs5UInt8E
     /tmp/ccndFY1f.s:5095   .rodata._ZTVN8std_msgs7Float32E:00000000 _ZTVN8std_msgs7Float32E
     /tmp/ccndFY1f.s:4832   .init_array:00000000 $d
     /tmp/ccndFY1f.s:4838   .rodata._ZTSN3ros3MsgE:00000000 _ZTSN3ros3MsgE
     /tmp/ccndFY1f.s:4845   .rodata._ZTIN3ros3MsgE:00000000 _ZTIN3ros3MsgE
     /tmp/ccndFY1f.s:4842   .rodata._ZTIN3ros3MsgE:00000000 $d
     /tmp/ccndFY1f.s:4852   .rodata._ZTSN8std_msgs4TimeE:00000000 _ZTSN8std_msgs4TimeE
     /tmp/ccndFY1f.s:4859   .rodata._ZTIN8std_msgs4TimeE:00000000 _ZTIN8std_msgs4TimeE
     /tmp/ccndFY1f.s:4856   .rodata._ZTIN8std_msgs4TimeE:00000000 $d
     /tmp/ccndFY1f.s:4867   .rodata._ZTSN14rosserial_msgs9TopicInfoE:00000000 _ZTSN14rosserial_msgs9TopicInfoE
     /tmp/ccndFY1f.s:4874   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 _ZTIN14rosserial_msgs9TopicInfoE
     /tmp/ccndFY1f.s:4871   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/ccndFY1f.s:4882   .rodata._ZTSN14rosserial_msgs3LogE:00000000 _ZTSN14rosserial_msgs3LogE
     /tmp/ccndFY1f.s:4889   .rodata._ZTIN14rosserial_msgs3LogE:00000000 _ZTIN14rosserial_msgs3LogE
     /tmp/ccndFY1f.s:4886   .rodata._ZTIN14rosserial_msgs3LogE:00000000 $d
     /tmp/ccndFY1f.s:4897   .rodata._ZTSN14rosserial_msgs20RequestParamResponseE:00000000 _ZTSN14rosserial_msgs20RequestParamResponseE
     /tmp/ccndFY1f.s:4904   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 _ZTIN14rosserial_msgs20RequestParamResponseE
     /tmp/ccndFY1f.s:4901   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/ccndFY1f.s:4912   .rodata._ZTSN3ros15NodeHandleBase_E:00000000 _ZTSN3ros15NodeHandleBase_E
     /tmp/ccndFY1f.s:4919   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 _ZTIN3ros15NodeHandleBase_E
     /tmp/ccndFY1f.s:4916   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 $d
     /tmp/ccndFY1f.s:4926   .rodata._ZTSN3ros11Subscriber_E:00000000 _ZTSN3ros11Subscriber_E
     /tmp/ccndFY1f.s:4933   .rodata._ZTIN3ros11Subscriber_E:00000000 _ZTIN3ros11Subscriber_E
     /tmp/ccndFY1f.s:4930   .rodata._ZTIN3ros11Subscriber_E:00000000 $d
     /tmp/ccndFY1f.s:4940   .rodata._ZTSN8std_msgs7Float32E:00000000 _ZTSN8std_msgs7Float32E
     /tmp/ccndFY1f.s:4947   .rodata._ZTIN8std_msgs7Float32E:00000000 _ZTIN8std_msgs7Float32E
     /tmp/ccndFY1f.s:4944   .rodata._ZTIN8std_msgs7Float32E:00000000 $d
     /tmp/ccndFY1f.s:4955   .rodata._ZTSN8std_msgs5UInt8E:00000000 _ZTSN8std_msgs5UInt8E
     /tmp/ccndFY1f.s:4962   .rodata._ZTIN8std_msgs5UInt8E:00000000 _ZTIN8std_msgs5UInt8E
     /tmp/ccndFY1f.s:4959   .rodata._ZTIN8std_msgs5UInt8E:00000000 $d
     /tmp/ccndFY1f.s:4970   .rodata._ZTSN8std_msgs6HeaderE:00000000 _ZTSN8std_msgs6HeaderE
     /tmp/ccndFY1f.s:4977   .rodata._ZTIN8std_msgs6HeaderE:00000000 _ZTIN8std_msgs6HeaderE
     /tmp/ccndFY1f.s:4974   .rodata._ZTIN8std_msgs6HeaderE:00000000 $d
     /tmp/ccndFY1f.s:4985   .rodata._ZTSN12roberto_msgs10MotorStateE:00000000 _ZTSN12roberto_msgs10MotorStateE
     /tmp/ccndFY1f.s:4992   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 _ZTIN12roberto_msgs10MotorStateE
     /tmp/ccndFY1f.s:4989   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/ccndFY1f.s:5000   .rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/ccndFY1f.s:5008   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/ccndFY1f.s:5005   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 $d
     /tmp/ccndFY1f.s:5016   .rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccndFY1f.s:5023   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccndFY1f.s:5020   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/ccndFY1f.s:5031   .rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/ccndFY1f.s:5038   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/ccndFY1f.s:5035   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/ccndFY1f.s:5044   .rodata._ZTVN8std_msgs4TimeE:00000000 $d
     /tmp/ccndFY1f.s:5056   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/ccndFY1f.s:5068   .rodata._ZTVN14rosserial_msgs3LogE:00000000 $d
     /tmp/ccndFY1f.s:5080   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/ccndFY1f.s:5092   .rodata._ZTVN8std_msgs7Float32E:00000000 $d
     /tmp/ccndFY1f.s:5104   .rodata._ZTVN8std_msgs5UInt8E:00000000 $d
     /tmp/ccndFY1f.s:5116   .rodata._ZTVN8std_msgs6HeaderE:00000000 $d
     /tmp/ccndFY1f.s:5128   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/ccndFY1f.s:5140   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 $d
     /tmp/ccndFY1f.s:5151   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/ccndFY1f.s:5163   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/ccndFY1f.s:5285   .bss:000009a8 str
     /tmp/ccndFY1f.s:5294   .bss:00000a48 hello
     /tmp/ccndFY1f.s:5281   .bss:00000994 chatter
     /tmp/ccndFY1f.s:5290   .bss:00000a40 str_msg
     /tmp/ccndFY1f.s:5277   .bss:00000978 led_sub
     /tmp/ccndFY1f.s:5273   .bss:00000938 motor_sub
     /tmp/ccndFY1f.s:5269   .bss:00000408 nh
     /tmp/ccndFY1f.s:5298   .bss:00000a61 GenerateStartStatus
     /tmp/ccndFY1f.s:5302   .bss:00000a62 NumberOfByteToReceive
     /tmp/ccndFY1f.s:5306   .bss:00000a63 RxBuffer
     /tmp/ccndFY1f.s:5310   .bss:00000a67 slaveAddress
     /tmp/ccndFY1f.s:5314   .bss:00000a68 Rx_Idx
     /tmp/ccndFY1f.s:5257   .bss:00000000 USART_CNTOUT
     /tmp/ccndFY1f.s:5261   .bss:00000004 USART_CNTIN
     /tmp/ccndFY1f.s:5265   .bss:00000008 USART_FIFO
     /tmp/ccndFY1f.s:5192   .rodata:00000000 _ZN14rosserial_msgsL12REQUESTPARAME
     /tmp/ccndFY1f.s:5253   .bss:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
led_set
strlen
memcpy
realloc
__aeabi_fcmplt
RCC_APB2PeriphClockCmd
GPIO_Init
USART_Cmd
USART_Init
USART_ITConfig
__aeabi_unwind_cpp_pr0
USART_GetITStatus
USART_ReceiveData
USART_SendData
millis
_ZN3ros16normalizeSecNSecERmS0_
RCC_Configuration
GPIO_PinRemapConfig
I2C1_Init
SysTick_Init
DEBUG_Init
LED_Init
delay
_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
_ZN13motorSettings12setRegulatorEffff
_ZN5motor11createMotorEP13motorSettings
sprintf
debug_toggle
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
