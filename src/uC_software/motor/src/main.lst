   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  20              		.align	1
  21              		.weak	_ZNK8std_msgs4Time9serializeEPh
  22              		.thumb
  23              		.thumb_func
  25              	_ZNK8std_msgs4Time9serializeEPh:
  26              		.fnstart
  27              	.LFB54:
  28              		.file 1 "./lib/ros_lib/std_msgs/Time.h"
   1:./lib/ros_lib/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:./lib/ros_lib/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:./lib/ros_lib/std_msgs/Time.h **** 
   4:./lib/ros_lib/std_msgs/Time.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Time.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Time.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Time.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Time.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Time.h **** 
  10:./lib/ros_lib/std_msgs/Time.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Time.h **** {
  12:./lib/ros_lib/std_msgs/Time.h **** 
  13:./lib/ros_lib/std_msgs/Time.h ****   class Time : public ros::Msg
  14:./lib/ros_lib/std_msgs/Time.h ****   {
  15:./lib/ros_lib/std_msgs/Time.h ****     public:
  16:./lib/ros_lib/std_msgs/Time.h ****       ros::Time data;
  17:./lib/ros_lib/std_msgs/Time.h **** 
  18:./lib/ros_lib/std_msgs/Time.h ****     Time():
  19:./lib/ros_lib/std_msgs/Time.h ****       data()
  20:./lib/ros_lib/std_msgs/Time.h ****     {
  21:./lib/ros_lib/std_msgs/Time.h ****     }
  22:./lib/ros_lib/std_msgs/Time.h **** 
  23:./lib/ros_lib/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  29              		.loc 1 23 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  24:./lib/ros_lib/std_msgs/Time.h ****     {
  25:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  26:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  35              		.loc 1 26 0
  36 0000 4368     		ldr	r3, [r0, #4]
  37 0002 0B70     		strb	r3, [r1]
  27:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  38              		.loc 1 27 0
  39 0004 4368     		ldr	r3, [r0, #4]
  40 0006 1B0A     		lsrs	r3, r3, #8
  41 0008 4B70     		strb	r3, [r1, #1]
  28:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  42              		.loc 1 28 0
  43 000a C388     		ldrh	r3, [r0, #6]
  44 000c 8B70     		strb	r3, [r1, #2]
  29:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  45              		.loc 1 29 0
  46 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  47 0010 CB70     		strb	r3, [r1, #3]
  48              	.LVL1:
  30:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  31:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  49              		.loc 1 31 0
  50 0012 8368     		ldr	r3, [r0, #8]
  51 0014 0B71     		strb	r3, [r1, #4]
  32:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  52              		.loc 1 32 0
  53 0016 8368     		ldr	r3, [r0, #8]
  54 0018 1B0A     		lsrs	r3, r3, #8
  55 001a 4B71     		strb	r3, [r1, #5]
  33:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  56              		.loc 1 33 0
  57 001c 4389     		ldrh	r3, [r0, #10]
  58 001e 8B71     		strb	r3, [r1, #6]
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  59              		.loc 1 34 0
  60 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  35:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  36:./lib/ros_lib/std_msgs/Time.h ****       return offset;
  37:./lib/ros_lib/std_msgs/Time.h ****     }
  61              		.loc 1 37 0
  62 0022 0820     		movs	r0, #8
  63              	.LVL2:
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  64              		.loc 1 34 0
  65 0024 CB71     		strb	r3, [r1, #7]
  66              	.LVL3:
  67              		.loc 1 37 0
  68 0026 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE54:
  71              		.cantunwind
  72              		.fnend
  74              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  75              		.align	1
  76              		.weak	_ZN8std_msgs4Time11deserializeEPh
  77              		.thumb
  78              		.thumb_func
  80              	_ZN8std_msgs4Time11deserializeEPh:
  81              		.fnstart
  82              	.LFB55:
  38:./lib/ros_lib/std_msgs/Time.h **** 
  39:./lib/ros_lib/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  83              		.loc 1 39 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL4:
  40:./lib/ros_lib/std_msgs/Time.h ****     {
  41:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  42:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  89              		.loc 1 42 0
  90 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  91 0002 4360     		str	r3, [r0, #4]
  43:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  92              		.loc 1 43 0
  93 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  94 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  95 000a 4360     		str	r3, [r0, #4]
  44:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  96              		.loc 1 44 0
  97 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  98 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  99 0012 4360     		str	r3, [r0, #4]
  45:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 100              		.loc 1 45 0
 101 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 102 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 103 001a 4360     		str	r3, [r0, #4]
 104              	.LVL5:
  46:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  47:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 105              		.loc 1 47 0
 106 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 107 001e 8360     		str	r3, [r0, #8]
  48:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 108              		.loc 1 48 0
 109 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 110 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 111 0026 8360     		str	r3, [r0, #8]
  49:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 112              		.loc 1 49 0
 113 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 114 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 115 002e 8360     		str	r3, [r0, #8]
  50:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 116              		.loc 1 50 0
 117 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 118 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 119 0036 8360     		str	r3, [r0, #8]
 120              	.LVL6:
  51:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  52:./lib/ros_lib/std_msgs/Time.h ****      return offset;
  53:./lib/ros_lib/std_msgs/Time.h ****     }
 121              		.loc 1 53 0
 122 0038 0820     		movs	r0, #8
 123              	.LVL7:
 124 003a 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE55:
 127              		.cantunwind
 128              		.fnend
 130              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 131              		.align	1
 132              		.weak	_ZN8std_msgs4Time7getTypeEv
 133              		.thumb
 134              		.thumb_func
 136              	_ZN8std_msgs4Time7getTypeEv:
 137              		.fnstart
 138              	.LFB56:
  54:./lib/ros_lib/std_msgs/Time.h **** 
  55:./lib/ros_lib/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 139              		.loc 1 55 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144              	.LVL8:
 145              		.loc 1 55 0
 146 0000 0048     		ldr	r0, .L4
 147              	.LVL9:
 148 0002 7047     		bx	lr
 149              	.L5:
 150              		.align	2
 151              	.L4:
 152 0004 00000000 		.word	.LC0
 153              		.cfi_endproc
 154              	.LFE56:
 155              		.cantunwind
 156              		.fnend
 158              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 159              		.align	1
 160              		.weak	_ZN8std_msgs4Time6getMD5Ev
 161              		.thumb
 162              		.thumb_func
 164              	_ZN8std_msgs4Time6getMD5Ev:
 165              		.fnstart
 166              	.LFB57:
  56:./lib/ros_lib/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 167              		.loc 1 56 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL10:
 173              		.loc 1 56 0
 174 0000 0048     		ldr	r0, .L7
 175              	.LVL11:
 176 0002 7047     		bx	lr
 177              	.L8:
 178              		.align	2
 179              	.L7:
 180 0004 0E000000 		.word	.LC1
 181              		.cfi_endproc
 182              	.LFE57:
 183              		.cantunwind
 184              		.fnend
 186              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 187              		.align	1
 188              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 189              		.thumb
 190              		.thumb_func
 192              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 193              		.fnstart
 194              	.LFB63:
 195              		.file 2 "./lib/ros_lib/rosserial_msgs/TopicInfo.h"
   1:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   4:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   9:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** {
  11:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  12:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   {
  14:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  29:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     TopicInfo():
  30:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_id(0),
  31:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_name(""),
  32:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       message_type(""),
  33:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       md5sum(""),
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       buffer_size(0)
  35:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  36:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  37:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  39:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  40:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  43:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  46:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  51:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  56:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  59:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
  60:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
  61:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  62:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  68:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  69:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       return offset;
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  71:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
  73:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  74:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
  77:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  78:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
  80:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  83:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
  86:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  87:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
  89:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  92:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
  95:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  96:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
  98:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 101:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 104:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 105:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 106:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
 107:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
 108:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 109:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 110:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 111:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 112:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 113:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 115:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 116:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****      return offset;
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
 118:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 119:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 196              		.loc 2 119 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL12:
 202              		.loc 2 119 0
 203 0000 0048     		ldr	r0, .L10
 204              	.LVL13:
 205 0002 7047     		bx	lr
 206              	.L11:
 207              		.align	2
 208              	.L10:
 209 0004 2F000000 		.word	.LC2
 210              		.cfi_endproc
 211              	.LFE63:
 212              		.cantunwind
 213              		.fnend
 215              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 216              		.align	1
 217              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 218              		.thumb
 219              		.thumb_func
 221              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 222              		.fnstart
 223              	.LFB64:
 120:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 224              		.loc 2 120 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL14:
 230              		.loc 2 120 0
 231 0000 0048     		ldr	r0, .L13
 232              	.LVL15:
 233 0002 7047     		bx	lr
 234              	.L14:
 235              		.align	2
 236              	.L13:
 237 0004 48000000 		.word	.LC3
 238              		.cfi_endproc
 239              	.LFE64:
 240              		.cantunwind
 241              		.fnend
 243              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 244              		.align	1
 245              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 246              		.thumb
 247              		.thumb_func
 249              	_ZN14rosserial_msgs3Log7getTypeEv:
 250              		.fnstart
 251              	.LFB70:
 252              		.file 3 "./lib/ros_lib/rosserial_msgs/Log.h"
   1:./lib/ros_lib/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:./lib/ros_lib/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:./lib/ros_lib/rosserial_msgs/Log.h **** 
   4:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/Log.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/Log.h **** 
   9:./lib/ros_lib/rosserial_msgs/Log.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/Log.h **** {
  11:./lib/ros_lib/rosserial_msgs/Log.h **** 
  12:./lib/ros_lib/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/Log.h ****   {
  14:./lib/ros_lib/rosserial_msgs/Log.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/Log.h ****       uint8_t level;
  16:./lib/ros_lib/rosserial_msgs/Log.h ****       const char* msg;
  17:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  18:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  19:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  20:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  21:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  22:./lib/ros_lib/rosserial_msgs/Log.h **** 
  23:./lib/ros_lib/rosserial_msgs/Log.h ****     Log():
  24:./lib/ros_lib/rosserial_msgs/Log.h ****       level(0),
  25:./lib/ros_lib/rosserial_msgs/Log.h ****       msg("")
  26:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  27:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  28:./lib/ros_lib/rosserial_msgs/Log.h **** 
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  31:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  33:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  36:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  38:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  39:./lib/ros_lib/rosserial_msgs/Log.h ****       return offset;
  40:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  41:./lib/ros_lib/rosserial_msgs/Log.h **** 
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
  43:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  44:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
  46:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  47:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg;
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
  49:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  50:./lib/ros_lib/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
  51:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
  52:./lib/ros_lib/rosserial_msgs/Log.h ****       }
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
  55:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  56:./lib/ros_lib/rosserial_msgs/Log.h ****      return offset;
  57:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  58:./lib/ros_lib/rosserial_msgs/Log.h **** 
  59:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 253              		.loc 3 59 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL16:
 259              		.loc 3 59 0
 260 0000 0048     		ldr	r0, .L16
 261              	.LVL17:
 262 0002 7047     		bx	lr
 263              	.L17:
 264              		.align	2
 265              	.L16:
 266 0004 69000000 		.word	.LC4
 267              		.cfi_endproc
 268              	.LFE70:
 269              		.cantunwind
 270              		.fnend
 272              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 273              		.align	1
 274              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 275              		.thumb
 276              		.thumb_func
 278              	_ZN14rosserial_msgs3Log6getMD5Ev:
 279              		.fnstart
 280              	.LFB71:
  60:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 281              		.loc 3 60 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL18:
 287              		.loc 3 60 0
 288 0000 0048     		ldr	r0, .L19
 289              	.LVL19:
 290 0002 7047     		bx	lr
 291              	.L20:
 292              		.align	2
 293              	.L19:
 294 0004 7C000000 		.word	.LC5
 295              		.cfi_endproc
 296              	.LFE71:
 297              		.cantunwind
 298              		.fnend
 300              		.section	.text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv,"axG",%progbits,_ZN14rosserial_m
 301              		.align	1
 302              		.weak	_ZN14rosserial_msgs19RequestParamRequest7getTypeEv
 303              		.thumb
 304              		.thumb_func
 306              	_ZN14rosserial_msgs19RequestParamRequest7getTypeEv:
 307              		.fnstart
 308              	.LFB77:
 309              		.file 4 "./lib/ros_lib/rosserial_msgs/RequestParam.h"
   1:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   4:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <string.h>
   5:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   6:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   7:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
   8:./lib/ros_lib/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
   9:./lib/ros_lib/rosserial_msgs/RequestParam.h **** {
  10:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  11:./lib/ros_lib/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  12:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  13:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  14:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  15:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  16:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       const char* name;
  17:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  18:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamRequest():
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       name("")
  20:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  21:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  22:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  24:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  25:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  28:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  30:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  31:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  33:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  35:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  36:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  37:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  39:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  42:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  45:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  46:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  48:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  49:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 310              		.loc 4 49 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL20:
 316              		.loc 4 49 0
 317 0000 0048     		ldr	r0, .L22
 318              	.LVL21:
 319 0002 7047     		bx	lr
 320              	.L23:
 321              		.align	2
 322              	.L22:
 323 0004 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE77:
 326              		.cantunwind
 327              		.fnend
 329              		.section	.text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev,"axG",%progbits,_ZN14rosserial_ms
 330              		.align	1
 331              		.weak	_ZN14rosserial_msgs19RequestParamRequest6getMD5Ev
 332              		.thumb
 333              		.thumb_func
 335              	_ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:
 336              		.fnstart
 337              	.LFB78:
  50:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
 338              		.loc 4 50 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343              	.LVL22:
 344              		.loc 4 50 0
 345 0000 0048     		ldr	r0, .L25
 346              	.LVL23:
 347 0002 7047     		bx	lr
 348              	.L26:
 349              		.align	2
 350              	.L25:
 351 0004 9D000000 		.word	.LC6
 352              		.cfi_endproc
 353              	.LFE78:
 354              		.cantunwind
 355              		.fnend
 357              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 358              		.align	1
 359              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 360              		.thumb
 361              		.thumb_func
 363              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 364              		.fnstart
 365              	.LFB84:
  51:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  52:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   };
  53:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  54:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  55:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  56:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  57:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  58:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  59:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  60:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  61:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float st_floats;
  62:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float * floats;
  63:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  64:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* st_strings;
  65:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* * strings;
  66:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  67:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamResponse():
  68:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length(0), ints(NULL),
  69:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length(0), floats(NULL),
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length(0), strings(NULL)
  71:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  72:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  73:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  75:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  76:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  82:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  83:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
  84:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
  85:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_intsi;
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  91:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  92:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  98:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  99:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 100:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 101:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_floatsi;
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 107:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 108:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 116:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 119:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 120:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 122:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 124:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 125:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 129:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 132:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 133:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
 134:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 135:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 136:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 137:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 138:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 139:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 140:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 142:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 144:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 148:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 151:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 152:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 153:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 154:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 155:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 156:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 157:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 158:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 161:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 163:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 170:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 172:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 175:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 178:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 180:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 181:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 183:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 184:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 366              		.loc 4 184 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371              	.LVL24:
 372              		.loc 4 184 0
 373 0000 0048     		ldr	r0, .L28
 374              	.LVL25:
 375 0002 7047     		bx	lr
 376              	.L29:
 377              		.align	2
 378              	.L28:
 379 0004 00000000 		.word	.LANCHOR0
 380              		.cfi_endproc
 381              	.LFE84:
 382              		.cantunwind
 383              		.fnend
 385              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 386              		.align	1
 387              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 388              		.thumb
 389              		.thumb_func
 391              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 392              		.fnstart
 393              	.LFB85:
 185:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 394              		.loc 4 185 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 399              	.LVL26:
 400              		.loc 4 185 0
 401 0000 0048     		ldr	r0, .L31
 402              	.LVL27:
 403 0002 7047     		bx	lr
 404              	.L32:
 405              		.align	2
 406              	.L31:
 407 0004 BE000000 		.word	.LC7
 408              		.cfi_endproc
 409              	.LFE85:
 410              		.cantunwind
 411              		.fnend
 413              		.section	.text._ZN8std_msgs19MultiArrayDimension7getTypeEv,"axG",%progbits,_ZN8std_msgs19MultiArra
 414              		.align	1
 415              		.weak	_ZN8std_msgs19MultiArrayDimension7getTypeEv
 416              		.thumb
 417              		.thumb_func
 419              	_ZN8std_msgs19MultiArrayDimension7getTypeEv:
 420              		.fnstart
 421              	.LFB154:
 422              		.file 5 "./lib/ros_lib/std_msgs/MultiArrayDimension.h"
   1:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #ifndef _ROS_std_msgs_MultiArrayDimension_h
   2:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #define _ROS_std_msgs_MultiArrayDimension_h
   3:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
   4:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
   9:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** {
  11:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  12:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****   class MultiArrayDimension : public ros::Msg
  13:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****   {
  14:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     public:
  15:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       const char* label;
  16:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t size;
  17:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t stride;
  18:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  19:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     MultiArrayDimension():
  20:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       label(""),
  21:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       size(0),
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       stride(0)
  23:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  24:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  25:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     virtual int serialize(unsigned char *outbuffer) const
  27:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  28:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       int offset = 0;
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t length_label = strlen(this->label);
  30:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
  31:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
  32:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, this->label, length_label);
  33:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
  34:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 0) = (this->size >> (8 * 0)) & 0xFF;
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->size >> (8 * 1)) & 0xFF;
  36:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
  37:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->size >> (8 * 3)) & 0xFF;
  38:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
  39:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 0) = (this->stride >> (8 * 0)) & 0xFF;
  40:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->stride >> (8 * 1)) & 0xFF;
  41:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->stride >> (8 * 2)) & 0xFF;
  42:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->stride >> (8 * 3)) & 0xFF;
  43:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
  44:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       return offset;
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  46:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     virtual int deserialize(unsigned char *inbuffer)
  48:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  49:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       int offset = 0;
  50:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t length_label;
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(&length_label, (inbuffer + offset), sizeof(uint32_t));
  52:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       for(unsigned int k= offset; k< offset+length_label; ++k){
  54:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
  55:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       }
  56:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       inbuffer[offset+length_label-1]=0;
  57:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->label = (char *)(inbuffer + offset-1);
  58:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size =  ((uint32_t) (*(inbuffer + offset)));
  60:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  61:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  62:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  63:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
  64:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride =  ((uint32_t) (*(inbuffer + offset)));
  65:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  66:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  67:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  68:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
  69:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****      return offset;
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  71:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  72:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     const char * getType(){ return "std_msgs/MultiArrayDimension"; };
 423              		.loc 5 72 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 428              	.LVL28:
 429              		.loc 5 72 0
 430 0000 0048     		ldr	r0, .L34
 431              	.LVL29:
 432 0002 7047     		bx	lr
 433              	.L35:
 434              		.align	2
 435              	.L34:
 436 0004 DF000000 		.word	.LC8
 437              		.cfi_endproc
 438              	.LFE154:
 439              		.cantunwind
 440              		.fnend
 442              		.section	.text._ZN8std_msgs19MultiArrayDimension6getMD5Ev,"axG",%progbits,_ZN8std_msgs19MultiArray
 443              		.align	1
 444              		.weak	_ZN8std_msgs19MultiArrayDimension6getMD5Ev
 445              		.thumb
 446              		.thumb_func
 448              	_ZN8std_msgs19MultiArrayDimension6getMD5Ev:
 449              		.fnstart
 450              	.LFB155:
  73:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     const char * getMD5(){ return "4cd0c83a8683deae40ecdac60e53bfa8"; };
 451              		.loc 5 73 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              		@ link register save eliminated.
 456              	.LVL30:
 457              		.loc 5 73 0
 458 0000 0048     		ldr	r0, .L37
 459              	.LVL31:
 460 0002 7047     		bx	lr
 461              	.L38:
 462              		.align	2
 463              	.L37:
 464 0004 FC000000 		.word	.LC9
 465              		.cfi_endproc
 466              	.LFE155:
 467              		.cantunwind
 468              		.fnend
 470              		.section	.text._ZNK8std_msgs16MultiArrayLayout9serializeEPh,"axG",%progbits,_ZNK8std_msgs16MultiAr
 471              		.align	1
 472              		.weak	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 473              		.thumb
 474              		.thumb_func
 476              	_ZNK8std_msgs16MultiArrayLayout9serializeEPh:
 477              		.fnstart
 478              	.LFB159:
 479              		.file 6 "./lib/ros_lib/std_msgs/MultiArrayLayout.h"
   1:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #ifndef _ROS_std_msgs_MultiArrayLayout_h
   2:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #define _ROS_std_msgs_MultiArrayLayout_h
   3:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
   4:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include "std_msgs/MultiArrayDimension.h"
   9:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  10:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** {
  12:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  13:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****   class MultiArrayLayout : public ros::Msg
  14:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****   {
  15:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     public:
  16:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint8_t dim_length;
  17:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       std_msgs::MultiArrayDimension st_dim;
  18:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       std_msgs::MultiArrayDimension * dim;
  19:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint32_t data_offset;
  20:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  21:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     MultiArrayLayout():
  22:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length(0), dim(NULL),
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       data_offset(0)
  24:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  25:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
  26:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  27:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     virtual int serialize(unsigned char *outbuffer) const
 480              		.loc 6 27 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              	.LVL32:
 485 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 486              		.save {r3, r4, r5, r6, r7, lr}
 487              	.LCFI0:
 488              		.cfi_def_cfa_offset 24
 489              		.cfi_offset 3, -24
 490              		.cfi_offset 4, -20
 491              		.cfi_offset 5, -16
 492              		.cfi_offset 6, -12
 493              		.cfi_offset 7, -8
 494              		.cfi_offset 14, -4
 495              		.loc 6 27 0
 496 0002 0D46     		mov	r5, r1
  28:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  29:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = dim_length;
 497              		.loc 6 30 0
 498 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  27:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 499              		.loc 6 27 0
 500 0006 0446     		mov	r4, r0
  31:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 501              		.loc 6 31 0
 502 0008 0020     		movs	r0, #0
 503              	.LVL33:
  30:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 504              		.loc 6 30 0
 505 000a 0B70     		strb	r3, [r1]
 506              	.LVL34:
 507              		.loc 6 31 0
 508 000c 4870     		strb	r0, [r1, #1]
 509              	.LVL35:
  32:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 510              		.loc 6 32 0
 511 000e 8870     		strb	r0, [r1, #2]
 512              	.LVL36:
  33:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 513              		.loc 6 33 0
 514 0010 C870     		strb	r0, [r1, #3]
 515              	.LVL37:
 516 0012 0426     		movs	r6, #4
 517              	.LVL38:
 518              	.L41:
 519              	.LBB186:
  34:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 520              		.loc 6 34 0 discriminator 3
 521 0014 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 522 0016 471C     		adds	r7, r0, #1
 523 0018 C0B2     		uxtb	r0, r0
 524 001a 8342     		cmp	r3, r0
 525 001c 05EB0601 		add	r1, r5, r6
 526 0020 08D9     		bls	.L40
  35:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->dim[i].serialize(outbuffer + offset);
 527              		.loc 6 35 0 discriminator 2
 528 0022 A369     		ldr	r3, [r4, #24]
 529 0024 0001     		lsls	r0, r0, #4
 530              	.LVL39:
 531 0026 1A58     		ldr	r2, [r3, r0]
 532 0028 1844     		add	r0, r0, r3
 533 002a 1268     		ldr	r2, [r2]
 534 002c 9047     		blx	r2
 535              	.LVL40:
 536 002e 0644     		add	r6, r6, r0
 537              	.LVL41:
  34:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 538              		.loc 6 34 0 discriminator 2
 539 0030 3846     		mov	r0, r7
 540 0032 EFE7     		b	.L41
 541              	.LVL42:
 542              	.L40:
 543              	.LBE186:
  36:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
  37:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 0) = (this->data_offset >> (8 * 0)) & 0xFF;
 544              		.loc 6 37 0
 545 0034 E369     		ldr	r3, [r4, #28]
  38:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
  39:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 2) = (this->data_offset >> (8 * 2)) & 0xFF;
  40:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 3) = (this->data_offset >> (8 * 3)) & 0xFF;
  41:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
  42:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       return offset;
  43:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
 546              		.loc 6 43 0
 547 0036 301D     		adds	r0, r6, #4
 548              	.LVL43:
  37:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
 549              		.loc 6 37 0
 550 0038 AB55     		strb	r3, [r5, r6]
  38:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
 551              		.loc 6 38 0
 552 003a E369     		ldr	r3, [r4, #28]
 553 003c 1B0A     		lsrs	r3, r3, #8
 554 003e 4B70     		strb	r3, [r1, #1]
  39:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 3) = (this->data_offset >> (8 * 3)) & 0xFF;
 555              		.loc 6 39 0
 556 0040 E38B     		ldrh	r3, [r4, #30]
 557 0042 8B70     		strb	r3, [r1, #2]
  40:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
 558              		.loc 6 40 0
 559 0044 E37F     		ldrb	r3, [r4, #31]	@ zero_extendqisi2
 560 0046 CB70     		strb	r3, [r1, #3]
 561              	.LVL44:
 562              		.loc 6 43 0
 563 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 564              		.cfi_endproc
 565              	.LFE159:
 566              		.fnend
 568              		.section	.text._ZN8std_msgs16MultiArrayLayout7getTypeEv,"axG",%progbits,_ZN8std_msgs16MultiArrayLa
 569              		.align	1
 570              		.weak	_ZN8std_msgs16MultiArrayLayout7getTypeEv
 571              		.thumb
 572              		.thumb_func
 574              	_ZN8std_msgs16MultiArrayLayout7getTypeEv:
 575              		.fnstart
 576              	.LFB161:
  44:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     virtual int deserialize(unsigned char *inbuffer)
  46:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  47:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       int offset = 0;
  48:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint8_t dim_lengthT = *(inbuffer + offset++);
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       if(dim_lengthT > dim_length)
  50:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
  51:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += 3;
  52:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length = dim_lengthT;
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
  56:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset =  ((uint32_t) (*(inbuffer + offset)));
  58:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  59:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  60:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  61:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
  62:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****      return offset;
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
  64:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  65:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     const char * getType(){ return "std_msgs/MultiArrayLayout"; };
 577              		.loc 6 65 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 582              	.LVL45:
 583              		.loc 6 65 0
 584 0000 0048     		ldr	r0, .L44
 585              	.LVL46:
 586 0002 7047     		bx	lr
 587              	.L45:
 588              		.align	2
 589              	.L44:
 590 0004 1D010000 		.word	.LC10
 591              		.cfi_endproc
 592              	.LFE161:
 593              		.cantunwind
 594              		.fnend
 596              		.section	.text._ZN8std_msgs16MultiArrayLayout6getMD5Ev,"axG",%progbits,_ZN8std_msgs16MultiArrayLay
 597              		.align	1
 598              		.weak	_ZN8std_msgs16MultiArrayLayout6getMD5Ev
 599              		.thumb
 600              		.thumb_func
 602              	_ZN8std_msgs16MultiArrayLayout6getMD5Ev:
 603              		.fnstart
 604              	.LFB162:
  66:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     const char * getMD5(){ return "0fed2a11c13e11c5571b4e2a995a91a3"; };
 605              		.loc 6 66 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              		@ link register save eliminated.
 610              	.LVL47:
 611              		.loc 6 66 0
 612 0000 0048     		ldr	r0, .L47
 613              	.LVL48:
 614 0002 7047     		bx	lr
 615              	.L48:
 616              		.align	2
 617              	.L47:
 618 0004 37010000 		.word	.LC11
 619              		.cfi_endproc
 620              	.LFE162:
 621              		.cantunwind
 622              		.fnend
 624              		.section	.text._ZNK8std_msgs17Float32MultiArray9serializeEPh,"axG",%progbits,_ZNK8std_msgs17Float3
 625              		.align	1
 626              		.weak	_ZNK8std_msgs17Float32MultiArray9serializeEPh
 627              		.thumb
 628              		.thumb_func
 630              	_ZNK8std_msgs17Float32MultiArray9serializeEPh:
 631              		.fnstart
 632              	.LFB166:
 633              		.file 7 "./lib/ros_lib/std_msgs/Float32MultiArray.h"
   1:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #ifndef _ROS_std_msgs_Float32MultiArray_h
   2:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #define _ROS_std_msgs_Float32MultiArray_h
   3:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
   4:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include "std_msgs/MultiArrayLayout.h"
   9:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  10:./lib/ros_lib/std_msgs/Float32MultiArray.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Float32MultiArray.h **** {
  12:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  13:./lib/ros_lib/std_msgs/Float32MultiArray.h ****   class Float32MultiArray : public ros::Msg
  14:./lib/ros_lib/std_msgs/Float32MultiArray.h ****   {
  15:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     public:
  16:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       std_msgs::MultiArrayLayout layout;
  17:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_length;
  18:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       float st_data;
  19:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       float * data;
  20:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  21:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     Float32MultiArray():
  22:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       layout(),
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       data_length(0), data(NULL)
  24:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  25:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
  26:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  27:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     virtual int serialize(unsigned char *outbuffer) const
 634              		.loc 7 27 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              	.LVL49:
 639 0000 70B5     		push	{r4, r5, r6, lr}
 640              		.save {r4, r5, r6, lr}
 641              	.LCFI1:
 642              		.cfi_def_cfa_offset 16
 643              		.cfi_offset 4, -16
 644              		.cfi_offset 5, -12
 645              		.cfi_offset 6, -8
 646              		.cfi_offset 14, -4
 647              		.loc 7 27 0
 648 0002 0446     		mov	r4, r0
  28:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  29:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += this->layout.serialize(outbuffer + offset);
 649              		.loc 7 30 0
 650 0004 0430     		adds	r0, r0, #4
 651              	.LVL50:
  27:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 652              		.loc 7 27 0
 653 0006 0D46     		mov	r5, r1
 654              		.loc 7 30 0
 655 0008 FFF7FEFF 		bl	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 656              	.LVL51:
  31:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = data_length;
 657              		.loc 7 31 0
 658 000c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
  32:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 659              		.loc 7 32 0
 660 0010 0022     		movs	r2, #0
  31:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = data_length;
 661              		.loc 7 31 0
 662 0012 2B54     		strb	r3, [r5, r0]
 663              	.LVL52:
 664              		.loc 7 32 0
 665 0014 2B18     		adds	r3, r5, r0
 666 0016 0430     		adds	r0, r0, #4
 667              	.LVL53:
 668 0018 5A70     		strb	r2, [r3, #1]
 669              	.LVL54:
  33:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 670              		.loc 7 33 0
 671 001a 9A70     		strb	r2, [r3, #2]
  34:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 672              		.loc 7 34 0
 673 001c DA70     		strb	r2, [r3, #3]
 674              	.LVL55:
 675 001e 2B18     		adds	r3, r5, r0
 676              	.LVL56:
 677              	.L51:
 678              	.LBB187:
  35:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
 679              		.loc 7 35 0 discriminator 3
 680 0020 94F82460 		ldrb	r6, [r4, #36]	@ zero_extendqisi2
 681 0024 511C     		adds	r1, r2, #1
 682 0026 D2B2     		uxtb	r2, r2
 683 0028 9642     		cmp	r6, r2
 684 002a A3EB0500 		sub	r0, r3, r5
 685              	.LVL57:
 686 002e 03F10403 		add	r3, r3, #4
 687 0032 0FD9     		bls	.L50
 688              	.LBB188:
  36:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
  37:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         float real;
  38:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         uint32_t base;
  39:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       } u_datai;
  40:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_datai.real = this->data[i];
 689              		.loc 7 40 0 discriminator 2
 690 0034 E06A     		ldr	r0, [r4, #44]
 691              	.LVL58:
  41:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 0) = (u_datai.base >> (8 * 0)) & 0xFF;
 692              		.loc 7 41 0 discriminator 2
 693 0036 50F82220 		ldr	r2, [r0, r2, lsl #2]
  42:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 1) = (u_datai.base >> (8 * 1)) & 0xFF;
 694              		.loc 7 42 0 discriminator 2
 695 003a 100A     		lsrs	r0, r2, #8
  41:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 0) = (u_datai.base >> (8 * 0)) & 0xFF;
 696              		.loc 7 41 0 discriminator 2
 697 003c 03F8042C 		strb	r2, [r3, #-4]
 698              		.loc 7 42 0 discriminator 2
 699 0040 03F8030C 		strb	r0, [r3, #-3]
  43:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 2) = (u_datai.base >> (8 * 2)) & 0xFF;
 700              		.loc 7 43 0 discriminator 2
 701 0044 100C     		lsrs	r0, r2, #16
  44:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 3) = (u_datai.base >> (8 * 3)) & 0xFF;
 702              		.loc 7 44 0 discriminator 2
 703 0046 120E     		lsrs	r2, r2, #24
 704 0048 03F8012C 		strb	r2, [r3, #-1]
 705              	.LVL59:
  43:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 2) = (u_datai.base >> (8 * 2)) & 0xFF;
 706              		.loc 7 43 0 discriminator 2
 707 004c 03F8020C 		strb	r0, [r3, #-2]
 708              	.LBE188:
  35:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 709              		.loc 7 35 0 discriminator 2
 710 0050 0A46     		mov	r2, r1
 711 0052 E5E7     		b	.L51
 712              	.LVL60:
 713              	.L50:
 714              	.LBE187:
  45:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->data[i]);
  46:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
  47:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       return offset;
  48:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
 715              		.loc 7 48 0
 716 0054 70BD     		pop	{r4, r5, r6, pc}
 717              		.cfi_endproc
 718              	.LFE166:
 719              		.fnend
 721              		.section	.text._ZN8std_msgs17Float32MultiArray7getTypeEv,"axG",%progbits,_ZN8std_msgs17Float32Mult
 722              		.align	1
 723              		.weak	_ZN8std_msgs17Float32MultiArray7getTypeEv
 724              		.thumb
 725              		.thumb_func
 727              	_ZN8std_msgs17Float32MultiArray7getTypeEv:
 728              		.fnstart
 729              	.LFB168:
  49:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  52:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       int offset = 0;
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += this->layout.deserialize(inbuffer + offset);
  54:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       if(data_lengthT > data_length)
  56:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
  57:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += 3;
  58:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       data_length = data_lengthT;
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
  60:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
  61:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         float real;
  62:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         uint32_t base;
  63:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       } u_st_data;
  64:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base = 0;
  65:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
  66:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  67:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  68:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  69:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       this->st_data = u_st_data.real;
  70:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->st_data);
  71:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         memcpy( &(this->data[i]), &(this->st_data), sizeof(float));
  72:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
  73:./lib/ros_lib/std_msgs/Float32MultiArray.h ****      return offset;
  74:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
  75:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  76:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     const char * getType(){ return "std_msgs/Float32MultiArray"; };
 730              		.loc 7 76 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              		@ link register save eliminated.
 735              	.LVL61:
 736              		.loc 7 76 0
 737 0000 0048     		ldr	r0, .L53
 738              	.LVL62:
 739 0002 7047     		bx	lr
 740              	.L54:
 741              		.align	2
 742              	.L53:
 743 0004 58010000 		.word	.LC12
 744              		.cfi_endproc
 745              	.LFE168:
 746              		.cantunwind
 747              		.fnend
 749              		.section	.text._ZN8std_msgs17Float32MultiArray6getMD5Ev,"axG",%progbits,_ZN8std_msgs17Float32Multi
 750              		.align	1
 751              		.weak	_ZN8std_msgs17Float32MultiArray6getMD5Ev
 752              		.thumb
 753              		.thumb_func
 755              	_ZN8std_msgs17Float32MultiArray6getMD5Ev:
 756              		.fnstart
 757              	.LFB169:
  77:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     const char * getMD5(){ return "6a40e0ffa6a17a503ac3f8616991b1f6"; };
 758              		.loc 7 77 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 763              	.LVL63:
 764              		.loc 7 77 0
 765 0000 0048     		ldr	r0, .L56
 766              	.LVL64:
 767 0002 7047     		bx	lr
 768              	.L57:
 769              		.align	2
 770              	.L56:
 771 0004 73010000 		.word	.LC13
 772              		.cfi_endproc
 773              	.LFE169:
 774              		.cantunwind
 775              		.fnend
 777              		.section	.text._ZNK8std_msgs5UInt89serializeEPh,"axG",%progbits,_ZNK8std_msgs5UInt89serializeEPh,c
 778              		.align	1
 779              		.weak	_ZNK8std_msgs5UInt89serializeEPh
 780              		.thumb
 781              		.thumb_func
 783              	_ZNK8std_msgs5UInt89serializeEPh:
 784              		.fnstart
 785              	.LFB173:
 786              		.file 8 "./lib/ros_lib/std_msgs/UInt8.h"
   1:./lib/ros_lib/std_msgs/UInt8.h **** #ifndef _ROS_std_msgs_UInt8_h
   2:./lib/ros_lib/std_msgs/UInt8.h **** #define _ROS_std_msgs_UInt8_h
   3:./lib/ros_lib/std_msgs/UInt8.h **** 
   4:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/UInt8.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/UInt8.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/UInt8.h **** 
   9:./lib/ros_lib/std_msgs/UInt8.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/UInt8.h **** {
  11:./lib/ros_lib/std_msgs/UInt8.h **** 
  12:./lib/ros_lib/std_msgs/UInt8.h ****   class UInt8 : public ros::Msg
  13:./lib/ros_lib/std_msgs/UInt8.h ****   {
  14:./lib/ros_lib/std_msgs/UInt8.h ****     public:
  15:./lib/ros_lib/std_msgs/UInt8.h ****       uint8_t data;
  16:./lib/ros_lib/std_msgs/UInt8.h **** 
  17:./lib/ros_lib/std_msgs/UInt8.h ****     UInt8():
  18:./lib/ros_lib/std_msgs/UInt8.h ****       data(0)
  19:./lib/ros_lib/std_msgs/UInt8.h ****     {
  20:./lib/ros_lib/std_msgs/UInt8.h ****     }
  21:./lib/ros_lib/std_msgs/UInt8.h **** 
  22:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int serialize(unsigned char *outbuffer) const
 787              		.loc 8 22 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791              		@ link register save eliminated.
 792              	.LVL65:
  23:./lib/ros_lib/std_msgs/UInt8.h ****     {
  24:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  25:./lib/ros_lib/std_msgs/UInt8.h ****       *(outbuffer + offset + 0) = (this->data >> (8 * 0)) & 0xFF;
 793              		.loc 8 25 0
 794 0000 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  26:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  27:./lib/ros_lib/std_msgs/UInt8.h ****       return offset;
  28:./lib/ros_lib/std_msgs/UInt8.h ****     }
 795              		.loc 8 28 0
 796 0002 0120     		movs	r0, #1
 797              	.LVL66:
  25:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 798              		.loc 8 25 0
 799 0004 0B70     		strb	r3, [r1]
 800              	.LVL67:
 801              		.loc 8 28 0
 802 0006 7047     		bx	lr
 803              		.cfi_endproc
 804              	.LFE173:
 805              		.cantunwind
 806              		.fnend
 808              		.section	.text._ZN8std_msgs5UInt811deserializeEPh,"axG",%progbits,_ZN8std_msgs5UInt811deserializeE
 809              		.align	1
 810              		.weak	_ZN8std_msgs5UInt811deserializeEPh
 811              		.thumb
 812              		.thumb_func
 814              	_ZN8std_msgs5UInt811deserializeEPh:
 815              		.fnstart
 816              	.LFB174:
  29:./lib/ros_lib/std_msgs/UInt8.h **** 
  30:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int deserialize(unsigned char *inbuffer)
 817              		.loc 8 30 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		@ link register save eliminated.
 822              	.LVL68:
  31:./lib/ros_lib/std_msgs/UInt8.h ****     {
  32:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  33:./lib/ros_lib/std_msgs/UInt8.h ****       this->data =  ((uint8_t) (*(inbuffer + offset)));
 823              		.loc 8 33 0
 824 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 825 0002 0371     		strb	r3, [r0, #4]
 826              	.LVL69:
  34:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  35:./lib/ros_lib/std_msgs/UInt8.h ****      return offset;
  36:./lib/ros_lib/std_msgs/UInt8.h ****     }
 827              		.loc 8 36 0
 828 0004 0120     		movs	r0, #1
 829              	.LVL70:
 830 0006 7047     		bx	lr
 831              		.cfi_endproc
 832              	.LFE174:
 833              		.cantunwind
 834              		.fnend
 836              		.section	.text._ZN8std_msgs5UInt87getTypeEv,"axG",%progbits,_ZN8std_msgs5UInt87getTypeEv,comdat
 837              		.align	1
 838              		.weak	_ZN8std_msgs5UInt87getTypeEv
 839              		.thumb
 840              		.thumb_func
 842              	_ZN8std_msgs5UInt87getTypeEv:
 843              		.fnstart
 844              	.LFB175:
  37:./lib/ros_lib/std_msgs/UInt8.h **** 
  38:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getType(){ return "std_msgs/UInt8"; };
 845              		.loc 8 38 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              		@ link register save eliminated.
 850              	.LVL71:
 851              		.loc 8 38 0
 852 0000 0048     		ldr	r0, .L61
 853              	.LVL72:
 854 0002 7047     		bx	lr
 855              	.L62:
 856              		.align	2
 857              	.L61:
 858 0004 94010000 		.word	.LC14
 859              		.cfi_endproc
 860              	.LFE175:
 861              		.cantunwind
 862              		.fnend
 864              		.section	.text._ZN8std_msgs5UInt86getMD5Ev,"axG",%progbits,_ZN8std_msgs5UInt86getMD5Ev,comdat
 865              		.align	1
 866              		.weak	_ZN8std_msgs5UInt86getMD5Ev
 867              		.thumb
 868              		.thumb_func
 870              	_ZN8std_msgs5UInt86getMD5Ev:
 871              		.fnstart
 872              	.LFB176:
  39:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getMD5(){ return "7c8164229e7d2c17eb95e9231617fdee"; };
 873              		.loc 8 39 0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 0
 876              		@ frame_needed = 0, uses_anonymous_args = 0
 877              		@ link register save eliminated.
 878              	.LVL73:
 879              		.loc 8 39 0
 880 0000 0048     		ldr	r0, .L64
 881              	.LVL74:
 882 0002 7047     		bx	lr
 883              	.L65:
 884              		.align	2
 885              	.L64:
 886 0004 A3010000 		.word	.LC15
 887              		.cfi_endproc
 888              	.LFE176:
 889              		.cantunwind
 890              		.fnend
 892              		.section	.text._ZN8std_msgs6Header7getTypeEv,"axG",%progbits,_ZN8std_msgs6Header7getTypeEv,comdat
 893              		.align	1
 894              		.weak	_ZN8std_msgs6Header7getTypeEv
 895              		.thumb
 896              		.thumb_func
 898              	_ZN8std_msgs6Header7getTypeEv:
 899              		.fnstart
 900              	.LFB182:
 901              		.file 9 "./lib/ros_lib/std_msgs/Header.h"
   1:./lib/ros_lib/std_msgs/Header.h **** #ifndef _ROS_std_msgs_Header_h
   2:./lib/ros_lib/std_msgs/Header.h **** #define _ROS_std_msgs_Header_h
   3:./lib/ros_lib/std_msgs/Header.h **** 
   4:./lib/ros_lib/std_msgs/Header.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Header.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Header.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Header.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Header.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Header.h **** 
  10:./lib/ros_lib/std_msgs/Header.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Header.h **** {
  12:./lib/ros_lib/std_msgs/Header.h **** 
  13:./lib/ros_lib/std_msgs/Header.h ****   class Header : public ros::Msg
  14:./lib/ros_lib/std_msgs/Header.h ****   {
  15:./lib/ros_lib/std_msgs/Header.h ****     public:
  16:./lib/ros_lib/std_msgs/Header.h ****       uint32_t seq;
  17:./lib/ros_lib/std_msgs/Header.h ****       ros::Time stamp;
  18:./lib/ros_lib/std_msgs/Header.h ****       const char* frame_id;
  19:./lib/ros_lib/std_msgs/Header.h **** 
  20:./lib/ros_lib/std_msgs/Header.h ****     Header():
  21:./lib/ros_lib/std_msgs/Header.h ****       seq(0),
  22:./lib/ros_lib/std_msgs/Header.h ****       stamp(),
  23:./lib/ros_lib/std_msgs/Header.h ****       frame_id("")
  24:./lib/ros_lib/std_msgs/Header.h ****     {
  25:./lib/ros_lib/std_msgs/Header.h ****     }
  26:./lib/ros_lib/std_msgs/Header.h **** 
  27:./lib/ros_lib/std_msgs/Header.h ****     virtual int serialize(unsigned char *outbuffer) const
  28:./lib/ros_lib/std_msgs/Header.h ****     {
  29:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->seq >> (8 * 0)) & 0xFF;
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
  33:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
  34:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
  38:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
  39:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
  43:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
  44:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  45:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id = strlen(this->frame_id);
  46:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
  47:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  48:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, this->frame_id, length_frame_id);
  49:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  50:./lib/ros_lib/std_msgs/Header.h ****       return offset;
  51:./lib/ros_lib/std_msgs/Header.h ****     }
  52:./lib/ros_lib/std_msgs/Header.h **** 
  53:./lib/ros_lib/std_msgs/Header.h ****     virtual int deserialize(unsigned char *inbuffer)
  54:./lib/ros_lib/std_msgs/Header.h ****     {
  55:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq =  ((uint32_t) (*(inbuffer + offset)));
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  59:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  60:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  64:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  65:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  69:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  70:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  71:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id;
  72:./lib/ros_lib/std_msgs/Header.h ****       memcpy(&length_frame_id, (inbuffer + offset), sizeof(uint32_t));
  73:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  74:./lib/ros_lib/std_msgs/Header.h ****       for(unsigned int k= offset; k< offset+length_frame_id; ++k){
  75:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
  76:./lib/ros_lib/std_msgs/Header.h ****       }
  77:./lib/ros_lib/std_msgs/Header.h ****       inbuffer[offset+length_frame_id-1]=0;
  78:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
  79:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  80:./lib/ros_lib/std_msgs/Header.h ****      return offset;
  81:./lib/ros_lib/std_msgs/Header.h ****     }
  82:./lib/ros_lib/std_msgs/Header.h **** 
  83:./lib/ros_lib/std_msgs/Header.h ****     const char * getType(){ return "std_msgs/Header"; };
 902              		.loc 9 83 0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906              		@ link register save eliminated.
 907              	.LVL75:
 908              		.loc 9 83 0
 909 0000 0048     		ldr	r0, .L67
 910              	.LVL76:
 911 0002 7047     		bx	lr
 912              	.L68:
 913              		.align	2
 914              	.L67:
 915 0004 C4010000 		.word	.LC16
 916              		.cfi_endproc
 917              	.LFE182:
 918              		.cantunwind
 919              		.fnend
 921              		.section	.text._ZN8std_msgs6Header6getMD5Ev,"axG",%progbits,_ZN8std_msgs6Header6getMD5Ev,comdat
 922              		.align	1
 923              		.weak	_ZN8std_msgs6Header6getMD5Ev
 924              		.thumb
 925              		.thumb_func
 927              	_ZN8std_msgs6Header6getMD5Ev:
 928              		.fnstart
 929              	.LFB183:
  84:./lib/ros_lib/std_msgs/Header.h ****     const char * getMD5(){ return "2176decaecbce78abc3b96ef049fabed"; };
 930              		.loc 9 84 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              		@ link register save eliminated.
 935              	.LVL77:
 936              		.loc 9 84 0
 937 0000 0048     		ldr	r0, .L70
 938              	.LVL78:
 939 0002 7047     		bx	lr
 940              	.L71:
 941              		.align	2
 942              	.L70:
 943 0004 D4010000 		.word	.LC17
 944              		.cfi_endproc
 945              	.LFE183:
 946              		.cantunwind
 947              		.fnend
 949              		.section	.text._ZN12roberto_msgs10MotorState7getTypeEv,"axG",%progbits,_ZN12roberto_msgs10MotorSta
 950              		.align	1
 951              		.weak	_ZN12roberto_msgs10MotorState7getTypeEv
 952              		.thumb
 953              		.thumb_func
 955              	_ZN12roberto_msgs10MotorState7getTypeEv:
 956              		.fnstart
 957              	.LFB196:
 958              		.file 10 "./lib/ros_lib/roberto_msgs/MotorState.h"
   1:./lib/ros_lib/roberto_msgs/MotorState.h **** #ifndef _ROS_roberto_msgs_MotorState_h
   2:./lib/ros_lib/roberto_msgs/MotorState.h **** #define _ROS_roberto_msgs_MotorState_h
   3:./lib/ros_lib/roberto_msgs/MotorState.h **** 
   4:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdint.h>
   5:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <string.h>
   6:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdlib.h>
   7:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "ros/msg.h"
   8:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "std_msgs/Header.h"
   9:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  10:./lib/ros_lib/roberto_msgs/MotorState.h **** namespace roberto_msgs
  11:./lib/ros_lib/roberto_msgs/MotorState.h **** {
  12:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  13:./lib/ros_lib/roberto_msgs/MotorState.h ****   class MotorState : public ros::Msg
  14:./lib/ros_lib/roberto_msgs/MotorState.h ****   {
  15:./lib/ros_lib/roberto_msgs/MotorState.h ****     public:
  16:./lib/ros_lib/roberto_msgs/MotorState.h ****       std_msgs::Header header;
  17:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_angle;
  18:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_velocity;
  19:./lib/ros_lib/roberto_msgs/MotorState.h ****       float speed;
  20:./lib/ros_lib/roberto_msgs/MotorState.h ****       float acceleration;
  21:./lib/ros_lib/roberto_msgs/MotorState.h ****       uint8_t mode;
  22:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_AUTO = 0 };
  23:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_PIVOT = 1 };
  24:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SPIN = 2 };
  25:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SIDEWAYS = 3 };
  26:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  27:./lib/ros_lib/roberto_msgs/MotorState.h ****     MotorState():
  28:./lib/ros_lib/roberto_msgs/MotorState.h ****       header(),
  29:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_angle(0),
  30:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_velocity(0),
  31:./lib/ros_lib/roberto_msgs/MotorState.h ****       speed(0),
  32:./lib/ros_lib/roberto_msgs/MotorState.h ****       acceleration(0),
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****       mode(0)
  34:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  35:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  36:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int serialize(unsigned char *outbuffer) const
  38:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  39:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.serialize(outbuffer + offset);
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
  46:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  47:./lib/ros_lib/roberto_msgs/MotorState.h ****       return offset;
  48:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  49:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  52:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.deserialize(inbuffer + offset);
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
  59:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  60:./lib/ros_lib/roberto_msgs/MotorState.h ****      return offset;
  61:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  62:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  63:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getType(){ return "roberto_msgs/MotorState"; };
 959              		.loc 10 63 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 0, uses_anonymous_args = 0
 963              		@ link register save eliminated.
 964              	.LVL79:
 965              		.loc 10 63 0
 966 0000 0048     		ldr	r0, .L73
 967              	.LVL80:
 968 0002 7047     		bx	lr
 969              	.L74:
 970              		.align	2
 971              	.L73:
 972 0004 F5010000 		.word	.LC18
 973              		.cfi_endproc
 974              	.LFE196:
 975              		.cantunwind
 976              		.fnend
 978              		.section	.text._ZN12roberto_msgs10MotorState6getMD5Ev,"axG",%progbits,_ZN12roberto_msgs10MotorStat
 979              		.align	1
 980              		.weak	_ZN12roberto_msgs10MotorState6getMD5Ev
 981              		.thumb
 982              		.thumb_func
 984              	_ZN12roberto_msgs10MotorState6getMD5Ev:
 985              		.fnstart
 986              	.LFB197:
  64:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getMD5(){ return "e8b5d1162b85151c49e02b8224796c0e"; };
 987              		.loc 10 64 0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
 991              		@ link register save eliminated.
 992              	.LVL81:
 993              		.loc 10 64 0
 994 0000 0048     		ldr	r0, .L76
 995              	.LVL82:
 996 0002 7047     		bx	lr
 997              	.L77:
 998              		.align	2
 999              	.L76:
 1000 0004 0D020000 		.word	.LC19
 1001              		.cfi_endproc
 1002              	.LFE197:
 1003              		.cantunwind
 1004              		.fnend
 1006              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv,"axG",%pr
 1007              		.align	1
 1008              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
 1009              		.thumb
 1010              		.thumb_func
 1012              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:
 1013              		.fnstart
 1014              	.LFB224:
 1015              		.file 11 "./lib/ros_lib/ros/node_handle.h"
   1:./lib/ros_lib/ros/node_handle.h **** /*
   2:./lib/ros_lib/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/node_handle.h ****  *
   4:./lib/ros_lib/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/node_handle.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/node_handle.h ****  *
   7:./lib/ros_lib/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/node_handle.h ****  * are met:
  10:./lib/ros_lib/ros/node_handle.h ****  *
  11:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/node_handle.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/node_handle.h ****  *
  21:./lib/ros_lib/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/node_handle.h ****  */
  34:./lib/ros_lib/ros/node_handle.h **** 
  35:./lib/ros_lib/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:./lib/ros_lib/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:./lib/ros_lib/ros/node_handle.h **** 
  38:./lib/ros_lib/ros/node_handle.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/node_handle.h **** 
  40:./lib/ros_lib/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:./lib/ros_lib/ros/node_handle.h **** 
  45:./lib/ros_lib/ros/node_handle.h **** #define SYNC_SECONDS        5
  46:./lib/ros_lib/ros/node_handle.h **** 
  47:./lib/ros_lib/ros/node_handle.h **** #define MODE_FIRST_FF       0
  48:./lib/ros_lib/ros/node_handle.h **** /*
  49:./lib/ros_lib/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  50:./lib/ros_lib/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  51:./lib/ros_lib/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  52:./lib/ros_lib/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  53:./lib/ros_lib/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  54:./lib/ros_lib/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  55:./lib/ros_lib/ros/node_handle.h ****  */
  56:./lib/ros_lib/ros/node_handle.h **** #define MODE_PROTOCOL_VER   1
  57:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER1		0xff // through groovy
  58:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER2		0xfe // in hydro
  59:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER 		PROTOCOL_VER2
  60:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_L         2
  61:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_H         3
  62:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_CHECKSUM  4   // checksum for msg size received from size L and H
  63:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_L        5   // waiting for topic id
  64:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_H        6
  65:./lib/ros_lib/ros/node_handle.h **** #define MODE_MESSAGE        7
  66:./lib/ros_lib/ros/node_handle.h **** #define MODE_MSG_CHECKSUM   8   // checksum for msg and topic id
  67:./lib/ros_lib/ros/node_handle.h **** 
  68:./lib/ros_lib/ros/node_handle.h **** 
  69:./lib/ros_lib/ros/node_handle.h **** #define MSG_TIMEOUT 20  //20 milliseconds to recieve all of message data
  70:./lib/ros_lib/ros/node_handle.h **** 
  71:./lib/ros_lib/ros/node_handle.h **** #include "msg.h"
  72:./lib/ros_lib/ros/node_handle.h **** 
  73:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  74:./lib/ros_lib/ros/node_handle.h **** 
  75:./lib/ros_lib/ros/node_handle.h ****   class NodeHandleBase_{
  76:./lib/ros_lib/ros/node_handle.h ****     public:
  77:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg* msg)=0;
  78:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce()=0;
  79:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected()=0;
  80:./lib/ros_lib/ros/node_handle.h ****     };
  81:./lib/ros_lib/ros/node_handle.h **** }
  82:./lib/ros_lib/ros/node_handle.h **** 
  83:./lib/ros_lib/ros/node_handle.h **** #include "publisher.h"
  84:./lib/ros_lib/ros/node_handle.h **** #include "subscriber.h"
  85:./lib/ros_lib/ros/node_handle.h **** #include "service_server.h"
  86:./lib/ros_lib/ros/node_handle.h **** #include "service_client.h"
  87:./lib/ros_lib/ros/node_handle.h **** 
  88:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  89:./lib/ros_lib/ros/node_handle.h **** 
  90:./lib/ros_lib/ros/node_handle.h ****   using rosserial_msgs::TopicInfo;
  91:./lib/ros_lib/ros/node_handle.h **** 
  92:./lib/ros_lib/ros/node_handle.h ****   /* Node Handle */
  93:./lib/ros_lib/ros/node_handle.h ****   template<class Hardware,
  94:./lib/ros_lib/ros/node_handle.h ****            int MAX_SUBSCRIBERS=25,
  95:./lib/ros_lib/ros/node_handle.h ****            int MAX_PUBLISHERS=25,
  96:./lib/ros_lib/ros/node_handle.h ****            int INPUT_SIZE=512,
  97:./lib/ros_lib/ros/node_handle.h ****            int OUTPUT_SIZE=512>
  98:./lib/ros_lib/ros/node_handle.h ****   class NodeHandle_ : public NodeHandleBase_
  99:./lib/ros_lib/ros/node_handle.h ****   {
 100:./lib/ros_lib/ros/node_handle.h ****     protected:
 101:./lib/ros_lib/ros/node_handle.h ****       Hardware hardware_;
 102:./lib/ros_lib/ros/node_handle.h **** 
 103:./lib/ros_lib/ros/node_handle.h ****       /* time used for syncing */
 104:./lib/ros_lib/ros/node_handle.h ****       uint32_t rt_time;
 105:./lib/ros_lib/ros/node_handle.h **** 
 106:./lib/ros_lib/ros/node_handle.h ****       /* used for computing current time */
 107:./lib/ros_lib/ros/node_handle.h ****       uint32_t sec_offset, nsec_offset;
 108:./lib/ros_lib/ros/node_handle.h **** 
 109:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_in[INPUT_SIZE];
 110:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_out[OUTPUT_SIZE];
 111:./lib/ros_lib/ros/node_handle.h **** 
 112:./lib/ros_lib/ros/node_handle.h ****       Publisher * publishers[MAX_PUBLISHERS];
 113:./lib/ros_lib/ros/node_handle.h ****       Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 114:./lib/ros_lib/ros/node_handle.h **** 
 115:./lib/ros_lib/ros/node_handle.h ****       /*
 116:./lib/ros_lib/ros/node_handle.h ****        * Setup Functions
 117:./lib/ros_lib/ros/node_handle.h ****        */
 118:./lib/ros_lib/ros/node_handle.h ****     public:
 119:./lib/ros_lib/ros/node_handle.h ****       NodeHandle_() : configured_(false) {
 120:./lib/ros_lib/ros/node_handle.h **** 
 121:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_PUBLISHERS; i++)
 122:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 123:./lib/ros_lib/ros/node_handle.h **** 
 124:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_SUBSCRIBERS; i++)
 125:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 126:./lib/ros_lib/ros/node_handle.h **** 
 127:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< INPUT_SIZE; i++)
 128:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 129:./lib/ros_lib/ros/node_handle.h **** 
 130:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< OUTPUT_SIZE; i++)
 131:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 132:./lib/ros_lib/ros/node_handle.h **** 
 133:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 134:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 135:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats_length = 0;
 136:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats = NULL;
 137:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 138:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 139:./lib/ros_lib/ros/node_handle.h ****       }
 140:./lib/ros_lib/ros/node_handle.h **** 
 141:./lib/ros_lib/ros/node_handle.h ****       Hardware* getHardware(){
 142:./lib/ros_lib/ros/node_handle.h ****         return &hardware_;
 143:./lib/ros_lib/ros/node_handle.h ****       }
 144:./lib/ros_lib/ros/node_handle.h **** 
 145:./lib/ros_lib/ros/node_handle.h ****       /* Start serial, initialize buffers */
 146:./lib/ros_lib/ros/node_handle.h ****       void initNode(){
 147:./lib/ros_lib/ros/node_handle.h ****         hardware_.init();
 148:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 149:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 150:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 151:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 152:./lib/ros_lib/ros/node_handle.h ****       };
 153:./lib/ros_lib/ros/node_handle.h **** 
 154:./lib/ros_lib/ros/node_handle.h ****       /* Start a named port, which may be network server IP, initialize buffers */
 155:./lib/ros_lib/ros/node_handle.h ****       void initNode(char *portName){
 156:./lib/ros_lib/ros/node_handle.h ****         hardware_.init(portName);
 157:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 158:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 159:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 160:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 161:./lib/ros_lib/ros/node_handle.h ****       };
 162:./lib/ros_lib/ros/node_handle.h **** 
 163:./lib/ros_lib/ros/node_handle.h ****     protected:
 164:./lib/ros_lib/ros/node_handle.h ****       //State machine variables for spinOnce
 165:./lib/ros_lib/ros/node_handle.h ****       int mode_;
 166:./lib/ros_lib/ros/node_handle.h ****       int bytes_;
 167:./lib/ros_lib/ros/node_handle.h ****       int topic_;
 168:./lib/ros_lib/ros/node_handle.h ****       int index_;
 169:./lib/ros_lib/ros/node_handle.h ****       int checksum_;
 170:./lib/ros_lib/ros/node_handle.h **** 
 171:./lib/ros_lib/ros/node_handle.h ****       bool configured_;
 172:./lib/ros_lib/ros/node_handle.h **** 
 173:./lib/ros_lib/ros/node_handle.h ****       /* used for syncing the time */
 174:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_time;
 175:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_receive_time;
 176:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_msg_timeout_time;
 177:./lib/ros_lib/ros/node_handle.h **** 
 178:./lib/ros_lib/ros/node_handle.h ****     public:
 179:./lib/ros_lib/ros/node_handle.h ****       /* This function goes in your loop() function, it handles
 180:./lib/ros_lib/ros/node_handle.h ****        *  serial input and callbacks for subscribers.
 181:./lib/ros_lib/ros/node_handle.h ****        */
 182:./lib/ros_lib/ros/node_handle.h **** 
 183:./lib/ros_lib/ros/node_handle.h **** 
 184:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce(){
 185:./lib/ros_lib/ros/node_handle.h **** 
 186:./lib/ros_lib/ros/node_handle.h ****         /* restart if timed out */
 187:./lib/ros_lib/ros/node_handle.h ****         uint32_t c_time = hardware_.time();
 188:./lib/ros_lib/ros/node_handle.h ****         if( (c_time - last_sync_receive_time) > (SYNC_SECONDS*2200) ){
 189:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 190:./lib/ros_lib/ros/node_handle.h ****          }
 191:./lib/ros_lib/ros/node_handle.h **** 
 192:./lib/ros_lib/ros/node_handle.h ****         /* reset if message has timed out */
 193:./lib/ros_lib/ros/node_handle.h ****         if ( mode_ != MODE_FIRST_FF){
 194:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 195:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 196:./lib/ros_lib/ros/node_handle.h ****           }
 197:./lib/ros_lib/ros/node_handle.h ****         }
 198:./lib/ros_lib/ros/node_handle.h **** 
 199:./lib/ros_lib/ros/node_handle.h ****         /* while available buffer, read data */
 200:./lib/ros_lib/ros/node_handle.h ****         while( true )
 201:./lib/ros_lib/ros/node_handle.h ****         {
 202:./lib/ros_lib/ros/node_handle.h ****           int data = hardware_.read();
 203:./lib/ros_lib/ros/node_handle.h ****           if( data < 0 )
 204:./lib/ros_lib/ros/node_handle.h ****             break;
 205:./lib/ros_lib/ros/node_handle.h ****           checksum_ += data;
 206:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 207:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 208:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 209:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 210:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 211:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 212:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 213:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 214:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 215:./lib/ros_lib/ros/node_handle.h ****             }
 216:./lib/ros_lib/ros/node_handle.h ****             else if( hardware_.time() - c_time > (SYNC_SECONDS)){
 217:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 218:./lib/ros_lib/ros/node_handle.h ****               configured_=false;
 219:./lib/ros_lib/ros/node_handle.h ****               return -2;
 220:./lib/ros_lib/ros/node_handle.h ****             }
 221:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_PROTOCOL_VER ){
 222:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 223:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 224:./lib/ros_lib/ros/node_handle.h ****             }else{
 225:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_FIRST_FF;
 226:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 227:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 228:./lib/ros_lib/ros/node_handle.h ****             }
 229:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_SIZE_L ){   /* bottom half of message size */
 230:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 231:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 232:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 233:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 234:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_H ){   /* top half of message size */
 235:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 236:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 237:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 238:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 239:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 240:./lib/ros_lib/ros/node_handle.h **** 	    else
 241:./lib/ros_lib/ros/node_handle.h **** 	      mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 242:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 243:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 244:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 245:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 246:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 247:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 248:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 249:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 250:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 251:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_MSG_CHECKSUM ){ /* do checksum */
 252:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 253:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 254:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 255:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 256:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 258:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 259:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 260:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 261:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 262:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 263:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 264:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 265:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 266:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 267:./lib/ros_lib/ros/node_handle.h ****               }else{
 268:./lib/ros_lib/ros/node_handle.h ****                 if(subscribers[topic_-100])
 269:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 270:./lib/ros_lib/ros/node_handle.h ****               }
 271:./lib/ros_lib/ros/node_handle.h ****             }
 272:./lib/ros_lib/ros/node_handle.h ****           }
 273:./lib/ros_lib/ros/node_handle.h ****         }
 274:./lib/ros_lib/ros/node_handle.h **** 
 275:./lib/ros_lib/ros/node_handle.h ****         /* occasionally sync time */
 276:./lib/ros_lib/ros/node_handle.h ****         if( configured_ && ((c_time-last_sync_time) > (SYNC_SECONDS*500) )){
 277:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 278:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 279:./lib/ros_lib/ros/node_handle.h ****         }
 280:./lib/ros_lib/ros/node_handle.h **** 
 281:./lib/ros_lib/ros/node_handle.h ****         return 0;
 282:./lib/ros_lib/ros/node_handle.h ****       }
 283:./lib/ros_lib/ros/node_handle.h **** 
 284:./lib/ros_lib/ros/node_handle.h **** 
 285:./lib/ros_lib/ros/node_handle.h ****       /* Are we connected to the PC? */
 286:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected() {
 1016              		.loc 11 286 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              		@ link register save eliminated.
 1021              	.LVL83:
 287:./lib/ros_lib/ros/node_handle.h ****         return configured_;
 288:./lib/ros_lib/ros/node_handle.h ****       };
 1022              		.loc 11 288 0
 1023 0000 90F8F404 		ldrb	r0, [r0, #1268]	@ zero_extendqisi2
 1024              	.LVL84:
 1025 0004 7047     		bx	lr
 1026              		.cfi_endproc
 1027              	.LFE224:
 1028              		.cantunwind
 1029              		.fnend
 1031              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh,"axG",%progbits,_ZN3ros10Subscri
 1032              		.align	1
 1033              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 1034              		.thumb
 1035              		.thumb_func
 1037              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:
 1038              		.fnstart
 1039              	.LFB234:
 1040              		.file 12 "./lib/ros_lib/ros/subscriber.h"
   1:./lib/ros_lib/ros/subscriber.h **** /* 
   2:./lib/ros_lib/ros/subscriber.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/subscriber.h ****  *
   4:./lib/ros_lib/ros/subscriber.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/subscriber.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/subscriber.h ****  *
   7:./lib/ros_lib/ros/subscriber.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/subscriber.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/subscriber.h ****  * are met:
  10:./lib/ros_lib/ros/subscriber.h ****  *
  11:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/subscriber.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/subscriber.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/subscriber.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/subscriber.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/subscriber.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/subscriber.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/subscriber.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/subscriber.h ****  *
  21:./lib/ros_lib/ros/subscriber.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/subscriber.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/subscriber.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/subscriber.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/subscriber.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/subscriber.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/subscriber.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/subscriber.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/subscriber.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/subscriber.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/subscriber.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/subscriber.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/subscriber.h ****  */
  34:./lib/ros_lib/ros/subscriber.h **** 
  35:./lib/ros_lib/ros/subscriber.h **** #ifndef ROS_SUBSCRIBER_H_
  36:./lib/ros_lib/ros/subscriber.h **** #define ROS_SUBSCRIBER_H_
  37:./lib/ros_lib/ros/subscriber.h **** 
  38:./lib/ros_lib/ros/subscriber.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/subscriber.h **** 
  40:./lib/ros_lib/ros/subscriber.h **** namespace ros {
  41:./lib/ros_lib/ros/subscriber.h **** 
  42:./lib/ros_lib/ros/subscriber.h ****   /* Base class for objects subscribers. */
  43:./lib/ros_lib/ros/subscriber.h ****   class Subscriber_
  44:./lib/ros_lib/ros/subscriber.h ****   {
  45:./lib/ros_lib/ros/subscriber.h ****     public:
  46:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char *data)=0;
  47:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType()=0;
  48:./lib/ros_lib/ros/subscriber.h **** 
  49:./lib/ros_lib/ros/subscriber.h ****       // id_ is set by NodeHandle when we advertise 
  50:./lib/ros_lib/ros/subscriber.h ****       int id_;
  51:./lib/ros_lib/ros/subscriber.h **** 
  52:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType()=0;
  53:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5()=0;
  54:./lib/ros_lib/ros/subscriber.h ****       const char * topic_;
  55:./lib/ros_lib/ros/subscriber.h ****   };
  56:./lib/ros_lib/ros/subscriber.h **** 
  57:./lib/ros_lib/ros/subscriber.h **** 
  58:./lib/ros_lib/ros/subscriber.h ****   /* Actual subscriber, templated on message type. */
  59:./lib/ros_lib/ros/subscriber.h ****   template<typename MsgT>
  60:./lib/ros_lib/ros/subscriber.h ****   class Subscriber: public Subscriber_{
  61:./lib/ros_lib/ros/subscriber.h ****     public:
  62:./lib/ros_lib/ros/subscriber.h ****       typedef void(*CallbackT)(const MsgT&);
  63:./lib/ros_lib/ros/subscriber.h ****       MsgT msg;
  64:./lib/ros_lib/ros/subscriber.h **** 
  65:./lib/ros_lib/ros/subscriber.h ****       Subscriber(const char * topic_name, CallbackT cb, int endpoint=rosserial_msgs::TopicInfo::ID_
  66:./lib/ros_lib/ros/subscriber.h ****         cb_(cb),
  67:./lib/ros_lib/ros/subscriber.h ****         endpoint_(endpoint)
  68:./lib/ros_lib/ros/subscriber.h ****       {
  69:./lib/ros_lib/ros/subscriber.h ****         topic_ = topic_name;
  70:./lib/ros_lib/ros/subscriber.h ****       };
  71:./lib/ros_lib/ros/subscriber.h **** 
  72:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char* data){
 1041              		.loc 12 72 0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 1045              		@ link register save eliminated.
 1046              	.LVL85:
 1047              	.LBB189:
 1048              	.LBB190:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 1049              		.loc 8 33 0
 1050 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1051              	.LBE190:
 1052              	.LBE189:
  73:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
  74:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 1053              		.loc 12 74 0
 1054 0002 0C30     		adds	r0, r0, #12
 1055              	.LVL86:
 1056              	.LBB192:
 1057              	.LBB191:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 1058              		.loc 8 33 0
 1059 0004 0371     		strb	r3, [r0, #4]
 1060              	.LVL87:
 1061              	.LBE191:
 1062              	.LBE192:
 1063              		.loc 12 74 0
 1064 0006 8368     		ldr	r3, [r0, #8]
 1065 0008 1847     		bx	r3	@ indirect register sibling call
 1066              	.LVL88:
 1067              		.cfi_endproc
 1068              	.LFE234:
 1069              		.cantunwind
 1070              		.fnend
 1072              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv,"axG",%progbits,_ZN3ros10
 1073              		.align	1
 1074              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 1075              		.thumb
 1076              		.thumb_func
 1078              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:
 1079              		.fnstart
 1080              	.LFB235:
  75:./lib/ros_lib/ros/subscriber.h ****       }
  76:./lib/ros_lib/ros/subscriber.h **** 
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType(){ return this->msg.getType(); }
  78:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
  79:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1081              		.loc 12 79 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 0
 1084              		@ frame_needed = 0, uses_anonymous_args = 0
 1085              		@ link register save eliminated.
 1086              	.LVL89:
 1087              		.loc 12 79 0
 1088 0000 8069     		ldr	r0, [r0, #24]
 1089              	.LVL90:
 1090 0002 7047     		bx	lr
 1091              		.cfi_endproc
 1092              	.LFE235:
 1093              		.cantunwind
 1094              		.fnend
 1096              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv,"axG",%progbits,_ZN3ros10Subsc
 1097              		.align	1
 1098              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 1099              		.thumb
 1100              		.thumb_func
 1102              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:
 1103              		.fnstart
 1104              	.LFB236:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1105              		.loc 12 77 0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 0
 1108              		@ frame_needed = 0, uses_anonymous_args = 0
 1109              		@ link register save eliminated.
 1110              	.LVL91:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1111              		.loc 12 77 0
 1112 0000 0048     		ldr	r0, .L82
 1113              	.LVL92:
 1114 0002 7047     		bx	lr
 1115              	.L83:
 1116              		.align	2
 1117              	.L82:
 1118 0004 94010000 		.word	.LC14
 1119              		.cfi_endproc
 1120              	.LFE236:
 1121              		.cantunwind
 1122              		.fnend
 1124              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev,"axG",%progbits,_ZN3ros10Subscri
 1125              		.align	1
 1126              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 1127              		.thumb
 1128              		.thumb_func
 1130              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:
 1131              		.fnstart
 1132              	.LFB237:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1133              		.loc 12 78 0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 1137              		@ link register save eliminated.
 1138              	.LVL93:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1139              		.loc 12 78 0
 1140 0000 0048     		ldr	r0, .L85
 1141              	.LVL94:
 1142 0002 7047     		bx	lr
 1143              	.L86:
 1144              		.align	2
 1145              	.L85:
 1146 0004 A3010000 		.word	.LC15
 1147              		.cfi_endproc
 1148              	.LFE237:
 1149              		.cantunwind
 1150              		.fnend
 1152              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv,"axG",%progbit
 1153              		.align	1
 1154              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 1155              		.thumb
 1156              		.thumb_func
 1158              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:
 1159              		.fnstart
 1160              	.LFB239:
 1161              		.loc 12 79 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 0, uses_anonymous_args = 0
 1165              		@ link register save eliminated.
 1166              	.LVL95:
 1167              		.loc 12 79 0
 1168 0000 C06B     		ldr	r0, [r0, #60]
 1169              	.LVL96:
 1170 0002 7047     		bx	lr
 1171              		.cfi_endproc
 1172              	.LFE239:
 1173              		.cantunwind
 1174              		.fnend
 1176              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv,"axG",%progbits,_ZN
 1177              		.align	1
 1178              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 1179              		.thumb
 1180              		.thumb_func
 1182              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:
 1183              		.fnstart
 1184              	.LFB240:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1185              		.loc 12 77 0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 0
 1188              		@ frame_needed = 0, uses_anonymous_args = 0
 1189              		@ link register save eliminated.
 1190              	.LVL97:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1191              		.loc 12 77 0
 1192 0000 0048     		ldr	r0, .L89
 1193              	.LVL98:
 1194 0002 7047     		bx	lr
 1195              	.L90:
 1196              		.align	2
 1197              	.L89:
 1198 0004 F5010000 		.word	.LC18
 1199              		.cfi_endproc
 1200              	.LFE240:
 1201              		.cantunwind
 1202              		.fnend
 1204              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev,"axG",%progbits,_ZN3r
 1205              		.align	1
 1206              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 1207              		.thumb
 1208              		.thumb_func
 1210              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:
 1211              		.fnstart
 1212              	.LFB241:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1213              		.loc 12 78 0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217              		@ link register save eliminated.
 1218              	.LVL99:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1219              		.loc 12 78 0
 1220 0000 0048     		ldr	r0, .L92
 1221              	.LVL100:
 1222 0002 7047     		bx	lr
 1223              	.L93:
 1224              		.align	2
 1225              	.L92:
 1226 0004 0D020000 		.word	.LC19
 1227              		.cfi_endproc
 1228              	.LFE241:
 1229              		.cantunwind
 1230              		.fnend
 1232              		.text
 1233              		.align	1
 1234              		.global	_Z6led_cbRKN8std_msgs5UInt8E
 1235              		.thumb
 1236              		.thumb_func
 1238              	_Z6led_cbRKN8std_msgs5UInt8E:
 1239              		.fnstart
 1240              	.LFB198:
 1241              		.file 13 "src/main.cpp"
   1:src/main.cpp  **** #include <stm32f10x.h>
   2:src/main.cpp  **** 
   3:src/main.cpp  **** #include <stdio.h>
   4:src/main.cpp  **** 
   5:src/main.cpp  **** #include "motor.h"
   6:src/main.cpp  **** #include "motorSettings.h"
   7:src/main.cpp  **** #include "led.h"
   8:src/main.cpp  **** #include "encoder.h"
   9:src/main.cpp  **** #include "stm32_time.h"
  10:src/main.cpp  **** 
  11:src/main.cpp  **** 
  12:src/main.cpp  **** #include <ros.h>
  13:src/main.cpp  **** #include <std_msgs/MultiArrayDimension.h>
  14:src/main.cpp  **** #include <std_msgs/Float32MultiArray.h>
  15:src/main.cpp  **** #include <std_msgs/UInt8.h>
  16:src/main.cpp  **** #include <sensor_msgs/Joy.h>
  17:src/main.cpp  **** #include <roberto_msgs/MotorState.h>
  18:src/main.cpp  **** 
  19:src/main.cpp  **** 
  20:src/main.cpp  **** 
  21:src/main.cpp  **** /* Private function prototypes -----------------------------------------------*/
  22:src/main.cpp  **** 
  23:src/main.cpp  **** 
  24:src/main.cpp  **** __IO uint8_t Rx_Idx = 0x00;
  25:src/main.cpp  **** uint8_t slaveAddress;
  26:src/main.cpp  **** uint8_t RxBuffer [RXBUFFERSIZE] = {0};
  27:src/main.cpp  **** __IO uint8_t NumberOfByteToReceive = 0x00;
  28:src/main.cpp  **** __IO uint8_t GenerateStartStatus = 0x00;
  29:src/main.cpp  **** 
  30:src/main.cpp  **** motor *servo_left;
  31:src/main.cpp  **** motor *servo_right;
  32:src/main.cpp  **** motor *front_right;
  33:src/main.cpp  **** motor *front_left;
  34:src/main.cpp  **** motor *rear_right;
  35:src/main.cpp  **** motor *rear_left;
  36:src/main.cpp  **** 
  37:src/main.cpp  **** float wheelSeperation;
  38:src/main.cpp  **** 
  39:src/main.cpp  **** ros::NodeHandle nh;
  40:src/main.cpp  **** 
  41:src/main.cpp  **** void led_cb( const std_msgs::UInt8& cmd_msg){
 1242              		.loc 13 41 0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 0
 1245              		@ frame_needed = 0, uses_anonymous_args = 0
 1246              		@ link register save eliminated.
 1247              	.LVL101:
  42:src/main.cpp  ****   led_set(cmd_msg.data);
 1248              		.loc 13 42 0
 1249 0000 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 1250              	.LVL102:
 1251 0002 FFF7FEBF 		b	led_set
 1252              	.LVL103:
 1253              		.cfi_endproc
 1254              	.LFE198:
 1255              		.cantunwind
 1256              		.fnend
 1258              		.section	.text._ZNK8std_msgs6Header9serializeEPh,"axG",%progbits,_ZNK8std_msgs6Header9serializeEPh
 1259              		.align	1
 1260              		.weak	_ZNK8std_msgs6Header9serializeEPh
 1261              		.thumb
 1262              		.thumb_func
 1264              	_ZNK8std_msgs6Header9serializeEPh:
 1265              		.fnstart
 1266              	.LFB180:
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1267              		.loc 9 27 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 8
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271              	.LVL104:
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1272              		.loc 9 30 0
 1273 0000 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1274              		.loc 9 27 0
 1275 0002 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1276              	.LCFI2:
 1277              		.cfi_def_cfa_offset 24
 1278              		.cfi_offset 4, -16
 1279              		.cfi_offset 5, -12
 1280              		.cfi_offset 6, -8
 1281              		.cfi_offset 14, -4
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1282              		.loc 9 30 0
 1283 0004 0B70     		strb	r3, [r1]
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1284              		.loc 9 31 0
 1285 0006 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1286              		.loc 9 27 0
 1287 0008 0546     		mov	r5, r0
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1288              		.loc 9 31 0
 1289 000a 1B0A     		lsrs	r3, r3, #8
 1290 000c 4B70     		strb	r3, [r1, #1]
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1291              		.loc 9 32 0
 1292 000e C388     		ldrh	r3, [r0, #6]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1293              		.loc 9 27 0
 1294 0010 0C46     		mov	r4, r1
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1295              		.loc 9 32 0
 1296 0012 8B70     		strb	r3, [r1, #2]
  33:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1297              		.loc 9 33 0
 1298 0014 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 1299 0016 CB70     		strb	r3, [r1, #3]
 1300              	.LVL105:
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 1301              		.loc 9 35 0
 1302 0018 8368     		ldr	r3, [r0, #8]
 1303 001a 0B71     		strb	r3, [r1, #4]
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 1304              		.loc 9 36 0
 1305 001c 8368     		ldr	r3, [r0, #8]
 1306 001e 1B0A     		lsrs	r3, r3, #8
 1307 0020 4B71     		strb	r3, [r1, #5]
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 1308              		.loc 9 37 0
 1309 0022 4389     		ldrh	r3, [r0, #10]
 1310 0024 8B71     		strb	r3, [r1, #6]
  38:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1311              		.loc 9 38 0
 1312 0026 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1313 0028 CB71     		strb	r3, [r1, #7]
 1314              	.LVL106:
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 1315              		.loc 9 40 0
 1316 002a C368     		ldr	r3, [r0, #12]
 1317 002c 0B72     		strb	r3, [r1, #8]
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 1318              		.loc 9 41 0
 1319 002e C368     		ldr	r3, [r0, #12]
 1320 0030 1B0A     		lsrs	r3, r3, #8
 1321 0032 4B72     		strb	r3, [r1, #9]
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 1322              		.loc 9 42 0
 1323 0034 C389     		ldrh	r3, [r0, #14]
 1324 0036 8B72     		strb	r3, [r1, #10]
  43:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1325              		.loc 9 43 0
 1326 0038 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 1327 003a CB72     		strb	r3, [r1, #11]
 1328              	.LVL107:
  45:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 1329              		.loc 9 45 0
 1330 003c 0069     		ldr	r0, [r0, #16]
 1331              	.LVL108:
 1332 003e FFF7FEFF 		bl	strlen
 1333              	.LVL109:
 1334 0042 0646     		mov	r6, r0
 1335 0044 02AB     		add	r3, sp, #8
 1336 0046 43F8040D 		str	r0, [r3, #-4]!
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1337              		.loc 9 46 0
 1338 004a 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1339              		.loc 9 48 0
 1340 004c 3246     		mov	r2, r6
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1341              		.loc 9 46 0
 1342 004e E060     		str	r0, [r4, #12]	@ unaligned
 1343              	.LVL110:
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1344              		.loc 9 48 0
 1345 0050 2969     		ldr	r1, [r5, #16]
 1346 0052 04F11000 		add	r0, r4, #16
 1347 0056 FFF7FEFF 		bl	memcpy
 1348              	.LVL111:
  51:./lib/ros_lib/std_msgs/Header.h **** 
 1349              		.loc 9 51 0
 1350 005a 06F11000 		add	r0, r6, #16
 1351              	.LVL112:
 1352 005e 02B0     		add	sp, sp, #8
 1353              	.LCFI3:
 1354              		.cfi_def_cfa_offset 16
 1355              		@ sp needed
 1356 0060 70BD     		pop	{r4, r5, r6, pc}
 1357              		.cfi_endproc
 1358              	.LFE180:
 1359              		.cantunwind
 1360              		.fnend
 1362              		.section	.text._ZNK8std_msgs19MultiArrayDimension9serializeEPh,"axG",%progbits,_ZNK8std_msgs19Mult
 1363              		.align	1
 1364              		.weak	_ZNK8std_msgs19MultiArrayDimension9serializeEPh
 1365              		.thumb
 1366              		.thumb_func
 1368              	_ZNK8std_msgs19MultiArrayDimension9serializeEPh:
 1369              		.fnstart
 1370              	.LFB152:
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1371              		.loc 5 26 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 8
 1374              		@ frame_needed = 0, uses_anonymous_args = 0
 1375              	.LVL113:
 1376 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1377              	.LCFI4:
 1378              		.cfi_def_cfa_offset 24
 1379              		.cfi_offset 4, -16
 1380              		.cfi_offset 5, -12
 1381              		.cfi_offset 6, -8
 1382              		.cfi_offset 14, -4
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1383              		.loc 5 26 0
 1384 0002 0546     		mov	r5, r0
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
 1385              		.loc 5 29 0
 1386 0004 4068     		ldr	r0, [r0, #4]
 1387              	.LVL114:
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1388              		.loc 5 26 0
 1389 0006 0C46     		mov	r4, r1
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
 1390              		.loc 5 29 0
 1391 0008 FFF7FEFF 		bl	strlen
 1392              	.LVL115:
 1393 000c 02AB     		add	r3, sp, #8
 1394 000e 43F8040D 		str	r0, [r3, #-4]!
 1395 0012 0646     		mov	r6, r0
  30:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 1396              		.loc 5 30 0
 1397 0014 1868     		ldr	r0, [r3]	@ unaligned
 1398 0016 2346     		mov	r3, r4
 1399 0018 43F8040B 		str	r0, [r3], #4	@ unaligned
 1400              	.LVL116:
  32:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
 1401              		.loc 5 32 0
 1402 001c 6968     		ldr	r1, [r5, #4]
 1403 001e 3246     		mov	r2, r6
 1404 0020 1846     		mov	r0, r3
 1405 0022 FFF7FEFF 		bl	memcpy
 1406              	.LVL117:
  34:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->size >> (8 * 1)) & 0xFF;
 1407              		.loc 5 34 0
 1408 0026 AB68     		ldr	r3, [r5, #8]
 1409 0028 A119     		adds	r1, r4, r6
 1410 002a 0B71     		strb	r3, [r1, #4]
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
 1411              		.loc 5 35 0
 1412 002c AB68     		ldr	r3, [r5, #8]
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 1413              		.loc 5 45 0
 1414 002e 06F10C00 		add	r0, r6, #12
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
 1415              		.loc 5 35 0
 1416 0032 1B0A     		lsrs	r3, r3, #8
 1417 0034 4B71     		strb	r3, [r1, #5]
  36:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->size >> (8 * 3)) & 0xFF;
 1418              		.loc 5 36 0
 1419 0036 6B89     		ldrh	r3, [r5, #10]
 1420 0038 8B71     		strb	r3, [r1, #6]
  37:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
 1421              		.loc 5 37 0
 1422 003a EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 1423 003c CB71     		strb	r3, [r1, #7]
 1424              	.LVL118:
  39:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->stride >> (8 * 1)) & 0xFF;
 1425              		.loc 5 39 0
 1426 003e EB68     		ldr	r3, [r5, #12]
 1427 0040 0B72     		strb	r3, [r1, #8]
  40:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->stride >> (8 * 2)) & 0xFF;
 1428              		.loc 5 40 0
 1429 0042 EB68     		ldr	r3, [r5, #12]
 1430 0044 1B0A     		lsrs	r3, r3, #8
 1431 0046 4B72     		strb	r3, [r1, #9]
  41:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->stride >> (8 * 3)) & 0xFF;
 1432              		.loc 5 41 0
 1433 0048 EB89     		ldrh	r3, [r5, #14]
 1434 004a 8B72     		strb	r3, [r1, #10]
  42:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
 1435              		.loc 5 42 0
 1436 004c EB7B     		ldrb	r3, [r5, #15]	@ zero_extendqisi2
 1437 004e CB72     		strb	r3, [r1, #11]
 1438              	.LVL119:
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 1439              		.loc 5 45 0
 1440 0050 02B0     		add	sp, sp, #8
 1441              	.LCFI5:
 1442              		.cfi_def_cfa_offset 16
 1443              		@ sp needed
 1444 0052 70BD     		pop	{r4, r5, r6, pc}
 1445              		.cfi_endproc
 1446              	.LFE152:
 1447              		.cantunwind
 1448              		.fnend
 1450              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 1451              		.align	1
 1452              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1453              		.thumb
 1454              		.thumb_func
 1456              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1457              		.fnstart
 1458              	.LFB82:
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1459              		.loc 4 74 0
 1460              		.cfi_startproc
 1461              		@ args = 0, pretend = 0, frame = 8
 1462              		@ frame_needed = 0, uses_anonymous_args = 0
 1463              	.LVL120:
 1464 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 1465              	.LCFI6:
 1466              		.cfi_def_cfa_offset 40
 1467              		.cfi_offset 4, -28
 1468              		.cfi_offset 5, -24
 1469              		.cfi_offset 6, -20
 1470              		.cfi_offset 7, -16
 1471              		.cfi_offset 8, -12
 1472              		.cfi_offset 9, -8
 1473              		.cfi_offset 14, -4
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1474              		.loc 4 77 0
 1475 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1476              		.loc 4 74 0
 1477 0006 0746     		mov	r7, r0
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1478              		.loc 4 77 0
 1479 0008 0B70     		strb	r3, [r1]
 1480              	.LVL121:
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1481              		.loc 4 78 0
 1482 000a 0023     		movs	r3, #0
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1483              		.loc 4 80 0
 1484 000c 1A46     		mov	r2, r3
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1485              		.loc 4 74 0
 1486 000e 0C46     		mov	r4, r1
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1487              		.loc 4 78 0
 1488 0010 4B70     		strb	r3, [r1, #1]
 1489              	.LVL122:
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1490              		.loc 4 79 0
 1491 0012 8B70     		strb	r3, [r1, #2]
 1492              	.LVL123:
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1493              		.loc 4 80 0
 1494 0014 CB70     		strb	r3, [r1, #3]
 1495              	.LVL124:
 1496 0016 0431     		adds	r1, r1, #4
 1497              	.LVL125:
 1498              	.L99:
 1499              	.LBB193:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1500              		.loc 4 81 0 discriminator 3
 1501 0018 3D79     		ldrb	r5, [r7, #4]	@ zero_extendqisi2
 1502 001a 501C     		adds	r0, r2, #1
 1503 001c D2B2     		uxtb	r2, r2
 1504 001e 9542     		cmp	r5, r2
 1505 0020 A1EB0403 		sub	r3, r1, r4
 1506              	.LVL126:
 1507 0024 01F10401 		add	r1, r1, #4
 1508 0028 0FD9     		bls	.L98
 1509              	.LBB194:
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1510              		.loc 4 86 0 discriminator 2
 1511 002a FB68     		ldr	r3, [r7, #12]
 1512              	.LVL127:
 1513 002c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1514              	.LVL128:
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1515              		.loc 4 88 0 discriminator 2
 1516 0030 1A0A     		lsrs	r2, r3, #8
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1517              		.loc 4 87 0 discriminator 2
 1518 0032 01F8043C 		strb	r3, [r1, #-4]
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1519              		.loc 4 88 0 discriminator 2
 1520 0036 01F8032C 		strb	r2, [r1, #-3]
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1521              		.loc 4 89 0 discriminator 2
 1522 003a 1A0C     		lsrs	r2, r3, #16
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1523              		.loc 4 90 0 discriminator 2
 1524 003c 1B0E     		lsrs	r3, r3, #24
 1525              	.LVL129:
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1526              		.loc 4 89 0 discriminator 2
 1527 003e 01F8022C 		strb	r2, [r1, #-2]
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1528              		.loc 4 90 0 discriminator 2
 1529 0042 01F8013C 		strb	r3, [r1, #-1]
 1530              	.LVL130:
 1531              	.LBE194:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1532              		.loc 4 81 0 discriminator 2
 1533 0046 0246     		mov	r2, r0
 1534 0048 E6E7     		b	.L99
 1535              	.LVL131:
 1536              	.L98:
 1537              	.LBE193:
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1538              		.loc 4 93 0
 1539 004a 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1540              		.loc 4 94 0
 1541 004c E118     		adds	r1, r4, r3
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1542              		.loc 4 93 0
 1543 004e E254     		strb	r2, [r4, r3]
 1544              	.LVL132:
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1545              		.loc 4 94 0
 1546 0050 0022     		movs	r2, #0
 1547 0052 0433     		adds	r3, r3, #4
 1548              	.LVL133:
 1549 0054 4A70     		strb	r2, [r1, #1]
 1550              	.LVL134:
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1551              		.loc 4 95 0
 1552 0056 8A70     		strb	r2, [r1, #2]
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1553              		.loc 4 96 0
 1554 0058 CA70     		strb	r2, [r1, #3]
 1555              	.LVL135:
 1556 005a 2344     		add	r3, r3, r4
 1557              	.LVL136:
 1558              	.L101:
 1559              	.LBB195:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1560              		.loc 4 97 0 discriminator 3
 1561 005c 387C     		ldrb	r0, [r7, #16]	@ zero_extendqisi2
 1562 005e 511C     		adds	r1, r2, #1
 1563 0060 D2B2     		uxtb	r2, r2
 1564 0062 9042     		cmp	r0, r2
 1565 0064 A3EB0406 		sub	r6, r3, r4
 1566              	.LVL137:
 1567 0068 03F10403 		add	r3, r3, #4
 1568 006c 0FD9     		bls	.L100
 1569              	.LBB196:
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1570              		.loc 4 102 0 discriminator 2
 1571 006e B869     		ldr	r0, [r7, #24]
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1572              		.loc 4 103 0 discriminator 2
 1573 0070 50F82220 		ldr	r2, [r0, r2, lsl #2]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1574              		.loc 4 104 0 discriminator 2
 1575 0074 100A     		lsrs	r0, r2, #8
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1576              		.loc 4 103 0 discriminator 2
 1577 0076 03F8042C 		strb	r2, [r3, #-4]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1578              		.loc 4 104 0 discriminator 2
 1579 007a 03F8030C 		strb	r0, [r3, #-3]
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1580              		.loc 4 105 0 discriminator 2
 1581 007e 100C     		lsrs	r0, r2, #16
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1582              		.loc 4 106 0 discriminator 2
 1583 0080 120E     		lsrs	r2, r2, #24
 1584 0082 03F8012C 		strb	r2, [r3, #-1]
 1585              	.LVL138:
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1586              		.loc 4 105 0 discriminator 2
 1587 0086 03F8020C 		strb	r0, [r3, #-2]
 1588              	.LBE196:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1589              		.loc 4 97 0 discriminator 2
 1590 008a 0A46     		mov	r2, r1
 1591 008c E6E7     		b	.L101
 1592              	.LVL139:
 1593              	.L100:
 1594              	.LBE195:
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1595              		.loc 4 109 0
 1596 008e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1597              		.loc 4 110 0
 1598 0090 A219     		adds	r2, r4, r6
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1599              		.loc 4 109 0
 1600 0092 A355     		strb	r3, [r4, r6]
 1601              	.LVL140:
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1602              		.loc 4 110 0
 1603 0094 0023     		movs	r3, #0
 1604 0096 5370     		strb	r3, [r2, #1]
 1605              	.LVL141:
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1606              		.loc 4 111 0
 1607 0098 9370     		strb	r3, [r2, #2]
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1608              		.loc 4 112 0
 1609 009a 0436     		adds	r6, r6, #4
 1610              	.LVL142:
 1611 009c D370     		strb	r3, [r2, #3]
 1612              	.LVL143:
 1613              	.L103:
 1614              	.LBB197:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1615              		.loc 4 113 0 discriminator 3
 1616 009e 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 1617 00a0 DDB2     		uxtb	r5, r3
 1618 00a2 AA42     		cmp	r2, r5
 1619 00a4 03F10109 		add	r9, r3, #1
 1620 00a8 15D9     		bls	.L102
 1621              	.LBB198:
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1622              		.loc 4 114 0 discriminator 2
 1623 00aa 7B6A     		ldr	r3, [r7, #36]
 1624              	.LVL144:
 1625 00ac 53F82500 		ldr	r0, [r3, r5, lsl #2]
 1626 00b0 FFF7FEFF 		bl	strlen
 1627              	.LVL145:
 1628 00b4 8046     		mov	r8, r0
 1629 00b6 02AB     		add	r3, sp, #8
 1630 00b8 43F8040D 		str	r0, [r3, #-4]!
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1631              		.loc 4 115 0 discriminator 2
 1632 00bc 1868     		ldr	r0, [r3]	@ unaligned
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1633              		.loc 4 117 0 discriminator 2
 1634 00be 4246     		mov	r2, r8
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1635              		.loc 4 115 0 discriminator 2
 1636 00c0 A051     		str	r0, [r4, r6]	@ unaligned
 1637              	.LVL146:
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1638              		.loc 4 117 0 discriminator 2
 1639 00c2 7B6A     		ldr	r3, [r7, #36]
 1640 00c4 0436     		adds	r6, r6, #4
 1641              	.LVL147:
 1642 00c6 53F82510 		ldr	r1, [r3, r5, lsl #2]
 1643 00ca A019     		adds	r0, r4, r6
 1644 00cc FFF7FEFF 		bl	memcpy
 1645              	.LVL148:
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 1646              		.loc 4 118 0 discriminator 2
 1647 00d0 4644     		add	r6, r6, r8
 1648              	.LVL149:
 1649              	.LBE198:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1650              		.loc 4 113 0 discriminator 2
 1651 00d2 4B46     		mov	r3, r9
 1652 00d4 E3E7     		b	.L103
 1653              	.LVL150:
 1654              	.L102:
 1655              	.LBE197:
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 1656              		.loc 4 121 0
 1657 00d6 3046     		mov	r0, r6
 1658 00d8 03B0     		add	sp, sp, #12
 1659              	.LCFI7:
 1660              		.cfi_def_cfa_offset 28
 1661              		@ sp needed
 1662 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1663              		.cfi_endproc
 1664              	.LFE82:
 1665              		.cantunwind
 1666              		.fnend
 1668              		.section	.text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh,"axG",%progbits,_ZNK14rosser
 1669              		.align	1
 1670              		.weak	_ZNK14rosserial_msgs19RequestParamRequest9serializeEPh
 1671              		.thumb
 1672              		.thumb_func
 1674              	_ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:
 1675              		.fnstart
 1676              	.LFB75:
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1677              		.loc 4 23 0
 1678              		.cfi_startproc
 1679              		@ args = 0, pretend = 0, frame = 8
 1680              		@ frame_needed = 0, uses_anonymous_args = 0
 1681              	.LVL151:
 1682 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1683              	.LCFI8:
 1684              		.cfi_def_cfa_offset 24
 1685              		.cfi_offset 4, -16
 1686              		.cfi_offset 5, -12
 1687              		.cfi_offset 6, -8
 1688              		.cfi_offset 14, -4
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1689              		.loc 4 23 0
 1690 0002 0646     		mov	r6, r0
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
 1691              		.loc 4 26 0
 1692 0004 4068     		ldr	r0, [r0, #4]
 1693              	.LVL152:
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1694              		.loc 4 23 0
 1695 0006 0C46     		mov	r4, r1
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
 1696              		.loc 4 26 0
 1697 0008 FFF7FEFF 		bl	strlen
 1698              	.LVL153:
 1699 000c 02AB     		add	r3, sp, #8
 1700 000e 43F8040D 		str	r0, [r3, #-4]!
 1701 0012 0546     		mov	r5, r0
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1702              		.loc 4 27 0
 1703 0014 1868     		ldr	r0, [r3]	@ unaligned
 1704 0016 2346     		mov	r3, r4
 1705 0018 43F8040B 		str	r0, [r3], #4	@ unaligned
 1706              	.LVL154:
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
 1707              		.loc 4 29 0
 1708 001c 2A46     		mov	r2, r5
 1709 001e 7168     		ldr	r1, [r6, #4]
 1710 0020 1846     		mov	r0, r3
 1711 0022 FFF7FEFF 		bl	memcpy
 1712              	.LVL155:
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 1713              		.loc 4 32 0
 1714 0026 281D     		adds	r0, r5, #4
 1715              	.LVL156:
 1716 0028 02B0     		add	sp, sp, #8
 1717              	.LCFI9:
 1718              		.cfi_def_cfa_offset 16
 1719              		@ sp needed
 1720 002a 70BD     		pop	{r4, r5, r6, pc}
 1721              		.cfi_endproc
 1722              	.LFE75:
 1723              		.cantunwind
 1724              		.fnend
 1726              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 1727              		.align	1
 1728              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1729              		.thumb
 1730              		.thumb_func
 1732              	_ZNK14rosserial_msgs3Log9serializeEPh:
 1733              		.fnstart
 1734              	.LFB68:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1735              		.loc 3 29 0
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 8
 1738              		@ frame_needed = 0, uses_anonymous_args = 0
 1739              	.LVL157:
 1740 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1741              	.LCFI10:
 1742              		.cfi_def_cfa_offset 24
 1743              		.cfi_offset 4, -16
 1744              		.cfi_offset 5, -12
 1745              		.cfi_offset 6, -8
 1746              		.cfi_offset 14, -4
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1747              		.loc 3 32 0
 1748 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1749              		.loc 3 29 0
 1750 0004 0646     		mov	r6, r0
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1751              		.loc 3 32 0
 1752 0006 0B70     		strb	r3, [r1]
 1753              	.LVL158:
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1754              		.loc 3 34 0
 1755 0008 8068     		ldr	r0, [r0, #8]
 1756              	.LVL159:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1757              		.loc 3 29 0
 1758 000a 0D46     		mov	r5, r1
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1759              		.loc 3 34 0
 1760 000c FFF7FEFF 		bl	strlen
 1761              	.LVL160:
 1762 0010 0446     		mov	r4, r0
 1763 0012 02AB     		add	r3, sp, #8
 1764 0014 43F8040D 		str	r0, [r3, #-4]!
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1765              		.loc 3 35 0
 1766 0018 1868     		ldr	r0, [r3]	@ unaligned
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1767              		.loc 3 37 0
 1768 001a 2246     		mov	r2, r4
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1769              		.loc 3 35 0
 1770 001c C5F80100 		str	r0, [r5, #1]	@ unaligned
 1771              	.LVL161:
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1772              		.loc 3 37 0
 1773 0020 B168     		ldr	r1, [r6, #8]
 1774 0022 681D     		adds	r0, r5, #5
 1775 0024 FFF7FEFF 		bl	memcpy
 1776              	.LVL162:
  40:./lib/ros_lib/rosserial_msgs/Log.h **** 
 1777              		.loc 3 40 0
 1778 0028 601D     		adds	r0, r4, #5
 1779              	.LVL163:
 1780 002a 02B0     		add	sp, sp, #8
 1781              	.LCFI11:
 1782              		.cfi_def_cfa_offset 16
 1783              		@ sp needed
 1784 002c 70BD     		pop	{r4, r5, r6, pc}
 1785              		.cfi_endproc
 1786              	.LFE68:
 1787              		.cantunwind
 1788              		.fnend
 1790              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 1791              		.align	1
 1792              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 1793              		.thumb
 1794              		.thumb_func
 1796              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 1797              		.fnstart
 1798              	.LFB61:
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1799              		.loc 2 38 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 16
 1802              		@ frame_needed = 0, uses_anonymous_args = 0
 1803              	.LVL164:
 1804 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 1805              	.LCFI12:
 1806              		.cfi_def_cfa_offset 40
 1807              		.cfi_offset 4, -24
 1808              		.cfi_offset 5, -20
 1809              		.cfi_offset 6, -16
 1810              		.cfi_offset 7, -12
 1811              		.cfi_offset 8, -8
 1812              		.cfi_offset 14, -4
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1813              		.loc 2 41 0
 1814 0004 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1815              		.loc 2 38 0
 1816 0006 0646     		mov	r6, r0
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1817              		.loc 2 41 0
 1818 0008 0B70     		strb	r3, [r1]
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1819              		.loc 2 42 0
 1820 000a 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1821              		.loc 2 38 0
 1822 000c 0D46     		mov	r5, r1
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1823              		.loc 2 42 0
 1824 000e 1B0A     		lsrs	r3, r3, #8
 1825 0010 4B70     		strb	r3, [r1, #1]
 1826              	.LVL165:
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1827              		.loc 2 44 0
 1828 0012 8068     		ldr	r0, [r0, #8]
 1829              	.LVL166:
 1830 0014 FFF7FEFF 		bl	strlen
 1831              	.LVL167:
 1832 0018 0446     		mov	r4, r0
 1833 001a 04AB     		add	r3, sp, #16
 1834 001c 43F80C0D 		str	r0, [r3, #-12]!
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1835              		.loc 2 45 0
 1836 0020 1868     		ldr	r0, [r3]	@ unaligned
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1837              		.loc 2 47 0
 1838 0022 2246     		mov	r2, r4
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1839              		.loc 2 45 0
 1840 0024 C5F80200 		str	r0, [r5, #2]	@ unaligned
 1841              	.LVL168:
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1842              		.loc 2 47 0
 1843 0028 B168     		ldr	r1, [r6, #8]
 1844 002a A81D     		adds	r0, r5, #6
 1845 002c FFF7FEFF 		bl	memcpy
 1846              	.LVL169:
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 1847              		.loc 2 49 0
 1848 0030 F068     		ldr	r0, [r6, #12]
 1849 0032 FFF7FEFF 		bl	strlen
 1850              	.LVL170:
 1851 0036 0746     		mov	r7, r0
 1852 0038 04AB     		add	r3, sp, #16
 1853 003a 43F8080D 		str	r0, [r3, #-8]!
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1854              		.loc 2 50 0
 1855 003e 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 1856              		.loc 2 48 0
 1857 0040 04F10608 		add	r8, r4, #6
 1858              	.LVL171:
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1859              		.loc 2 50 0
 1860 0044 45F80800 		str	r0, [r5, r8]	@ unaligned
 1861              	.LVL172:
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1862              		.loc 2 52 0
 1863 0048 0A34     		adds	r4, r4, #10
 1864 004a 3A46     		mov	r2, r7
 1865 004c F168     		ldr	r1, [r6, #12]
 1866 004e 2819     		adds	r0, r5, r4
 1867 0050 FFF7FEFF 		bl	memcpy
 1868              	.LVL173:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1869              		.loc 2 54 0
 1870 0054 3069     		ldr	r0, [r6, #16]
 1871 0056 FFF7FEFF 		bl	strlen
 1872              	.LVL174:
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 1873              		.loc 2 53 0
 1874 005a 3C44     		add	r4, r4, r7
 1875              	.LVL175:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1876              		.loc 2 54 0
 1877 005c 0746     		mov	r7, r0
 1878 005e 04AB     		add	r3, sp, #16
 1879 0060 43F8040D 		str	r0, [r3, #-4]!
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1880              		.loc 2 55 0
 1881 0064 1868     		ldr	r0, [r3]	@ unaligned
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1882              		.loc 2 57 0
 1883 0066 3A46     		mov	r2, r7
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1884              		.loc 2 55 0
 1885 0068 2851     		str	r0, [r5, r4]	@ unaligned
 1886              	.LVL176:
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1887              		.loc 2 57 0
 1888 006a 0434     		adds	r4, r4, #4
 1889              	.LVL177:
 1890 006c 2819     		adds	r0, r5, r4
 1891 006e 3169     		ldr	r1, [r6, #16]
 1892 0070 FFF7FEFF 		bl	memcpy
 1893              	.LVL178:
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 1894              		.loc 2 63 0
 1895 0074 7369     		ldr	r3, [r6, #20]
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 1896              		.loc 2 58 0
 1897 0076 3819     		adds	r0, r7, r4
 1898              	.LVL179:
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 1899              		.loc 2 64 0
 1900 0078 2B54     		strb	r3, [r5, r0]
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 1901              		.loc 2 65 0
 1902 007a 1A0A     		lsrs	r2, r3, #8
 1903 007c 0544     		add	r5, r5, r0
 1904              	.LVL180:
 1905 007e 6A70     		strb	r2, [r5, #1]
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1906              		.loc 2 70 0
 1907 0080 0430     		adds	r0, r0, #4
 1908              	.LVL181:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1909              		.loc 2 66 0
 1910 0082 1A0C     		lsrs	r2, r3, #16
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1911              		.loc 2 67 0
 1912 0084 1B0E     		lsrs	r3, r3, #24
 1913              	.LVL182:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1914              		.loc 2 66 0
 1915 0086 AA70     		strb	r2, [r5, #2]
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1916              		.loc 2 67 0
 1917 0088 EB70     		strb	r3, [r5, #3]
 1918              	.LVL183:
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1919              		.loc 2 70 0
 1920 008a 04B0     		add	sp, sp, #16
 1921              	.LCFI13:
 1922              		.cfi_def_cfa_offset 24
 1923              		@ sp needed
 1924 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1925              		.cfi_endproc
 1926              	.LFE61:
 1927              		.cantunwind
 1928              		.fnend
 1930              		.section	.text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh,"axG",%progbits,_ZN14rosse
 1931              		.align	1
 1932              		.weak	_ZN14rosserial_msgs19RequestParamRequest11deserializeEPh
 1933              		.thumb
 1934              		.thumb_func
 1936              	_ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:
 1937              		.fnstart
 1938              	.LFB76:
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1939              		.loc 4 34 0
 1940              		.cfi_startproc
 1941              		@ args = 0, pretend = 0, frame = 8
 1942              		@ frame_needed = 0, uses_anonymous_args = 0
 1943              	.LVL184:
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1944              		.loc 4 38 0
 1945 0000 0B46     		mov	r3, r1
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1946              		.loc 4 34 0
 1947 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1948              	.LCFI14:
 1949              		.cfi_def_cfa_offset 24
 1950              		.cfi_offset 4, -12
 1951              		.cfi_offset 5, -8
 1952              		.cfi_offset 14, -4
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1953              		.loc 4 34 0
 1954 0004 0446     		mov	r4, r0
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1955              		.loc 4 38 0
 1956 0006 53F8040B 		ldr	r0, [r3], #4	@ unaligned
 1957              	.LVL185:
 1958 000a 0190     		str	r0, [sp, #4]	@ unaligned
 1959              	.LVL186:
 1960              	.LBB199:
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1961              		.loc 4 40 0
 1962 000c 019A     		ldr	r2, [sp, #4]
 1963 000e 101D     		adds	r0, r2, #4
 1964              	.LVL187:
 1965              	.L109:
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1966              		.loc 4 40 0 is_stmt 0 discriminator 3
 1967 0010 5D1A     		subs	r5, r3, r1
 1968              	.LVL188:
 1969 0012 A842     		cmp	r0, r5
 1970 0014 04D9     		bls	.L108
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 1971              		.loc 4 41 0 is_stmt 1 discriminator 2
 1972 0016 13F8015B 		ldrb	r5, [r3], #1	@ zero_extendqisi2
 1973              	.LVL189:
 1974 001a 03F8025C 		strb	r5, [r3, #-2]
 1975              	.LVL190:
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1976              		.loc 4 40 0 discriminator 2
 1977 001e F7E7     		b	.L109
 1978              	.LVL191:
 1979              	.L108:
 1980              	.LBE199:
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
 1981              		.loc 4 43 0
 1982 0020 0A44     		add	r2, r2, r1
 1983 0022 0023     		movs	r3, #0
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
 1984              		.loc 4 44 0
 1985 0024 0331     		adds	r1, r1, #3
 1986              	.LVL192:
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
 1987              		.loc 4 43 0
 1988 0026 D370     		strb	r3, [r2, #3]
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
 1989              		.loc 4 44 0
 1990 0028 6160     		str	r1, [r4, #4]
 1991              	.LVL193:
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 1992              		.loc 4 47 0
 1993 002a 03B0     		add	sp, sp, #12
 1994              	.LCFI15:
 1995              		.cfi_def_cfa_offset 12
 1996              		@ sp needed
 1997 002c 30BD     		pop	{r4, r5, pc}
 1998              		.cfi_endproc
 1999              	.LFE76:
 2000              		.cantunwind
 2001              		.fnend
 2003              		.section	.text._ZN8std_msgs6Header11deserializeEPh,"axG",%progbits,_ZN8std_msgs6Header11deserializ
 2004              		.align	1
 2005              		.weak	_ZN8std_msgs6Header11deserializeEPh
 2006              		.thumb
 2007              		.thumb_func
 2009              	_ZN8std_msgs6Header11deserializeEPh:
 2010              		.fnstart
 2011              	.LFB181:
  53:./lib/ros_lib/std_msgs/Header.h ****     {
 2012              		.loc 9 53 0
 2013              		.cfi_startproc
 2014              		@ args = 0, pretend = 0, frame = 8
 2015              		@ frame_needed = 0, uses_anonymous_args = 0
 2016              	.LVL194:
 2017 0000 0346     		mov	r3, r0
 2018 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2019              	.LCFI16:
 2020              		.cfi_def_cfa_offset 24
 2021              		.cfi_offset 4, -12
 2022              		.cfi_offset 5, -8
 2023              		.cfi_offset 14, -4
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2024              		.loc 9 56 0
 2025 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2026 0006 01F11004 		add	r4, r1, #16
 2027 000a 4260     		str	r2, [r0, #4]
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2028              		.loc 9 57 0
 2029 000c 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 2030              	.LVL195:
 2031 000e 42EA0022 		orr	r2, r2, r0, lsl #8
 2032 0012 5A60     		str	r2, [r3, #4]
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2033              		.loc 9 58 0
 2034 0014 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 2035 0016 42EA0042 		orr	r2, r2, r0, lsl #16
 2036 001a 5A60     		str	r2, [r3, #4]
  59:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 2037              		.loc 9 59 0
 2038 001c C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 2039 001e 42EA0062 		orr	r2, r2, r0, lsl #24
 2040 0022 5A60     		str	r2, [r3, #4]
 2041              	.LVL196:
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2042              		.loc 9 61 0
 2043 0024 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 2044 0026 9A60     		str	r2, [r3, #8]
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2045              		.loc 9 62 0
 2046 0028 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 2047 002a 42EA0022 		orr	r2, r2, r0, lsl #8
 2048 002e 9A60     		str	r2, [r3, #8]
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2049              		.loc 9 63 0
 2050 0030 8879     		ldrb	r0, [r1, #6]	@ zero_extendqisi2
 2051 0032 42EA0042 		orr	r2, r2, r0, lsl #16
 2052 0036 9A60     		str	r2, [r3, #8]
  64:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 2053              		.loc 9 64 0
 2054 0038 C879     		ldrb	r0, [r1, #7]	@ zero_extendqisi2
 2055 003a 42EA0062 		orr	r2, r2, r0, lsl #24
 2056 003e 9A60     		str	r2, [r3, #8]
 2057              	.LVL197:
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2058              		.loc 9 66 0
 2059 0040 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 2060 0042 DA60     		str	r2, [r3, #12]
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2061              		.loc 9 67 0
 2062 0044 487A     		ldrb	r0, [r1, #9]	@ zero_extendqisi2
 2063 0046 42EA0022 		orr	r2, r2, r0, lsl #8
 2064 004a DA60     		str	r2, [r3, #12]
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2065              		.loc 9 68 0
 2066 004c 887A     		ldrb	r0, [r1, #10]	@ zero_extendqisi2
 2067 004e 42EA0042 		orr	r2, r2, r0, lsl #16
 2068 0052 DA60     		str	r2, [r3, #12]
  69:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 2069              		.loc 9 69 0
 2070 0054 C87A     		ldrb	r0, [r1, #11]	@ zero_extendqisi2
 2071 0056 42EA0062 		orr	r2, r2, r0, lsl #24
 2072 005a DA60     		str	r2, [r3, #12]
 2073              	.LVL198:
  72:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 2074              		.loc 9 72 0
 2075 005c C868     		ldr	r0, [r1, #12]	@ unaligned
 2076 005e 0190     		str	r0, [sp, #4]	@ unaligned
 2077              	.LVL199:
 2078              	.LBB200:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2079              		.loc 9 74 0
 2080 0060 019A     		ldr	r2, [sp, #4]
 2081 0062 02F11000 		add	r0, r2, #16
 2082              	.LVL200:
 2083              	.L113:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2084              		.loc 9 74 0 is_stmt 0 discriminator 3
 2085 0066 651A     		subs	r5, r4, r1
 2086              	.LVL201:
 2087 0068 A842     		cmp	r0, r5
 2088 006a 04D9     		bls	.L112
  75:./lib/ros_lib/std_msgs/Header.h ****       }
 2089              		.loc 9 75 0 is_stmt 1 discriminator 2
 2090 006c 14F8015B 		ldrb	r5, [r4], #1	@ zero_extendqisi2
 2091              	.LVL202:
 2092 0070 04F8025C 		strb	r5, [r4, #-2]
 2093              	.LVL203:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2094              		.loc 9 74 0 discriminator 2
 2095 0074 F7E7     		b	.L113
 2096              	.LVL204:
 2097              	.L112:
 2098              	.LBE200:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 2099              		.loc 9 77 0
 2100 0076 0A44     		add	r2, r2, r1
 2101 0078 0024     		movs	r4, #0
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 2102              		.loc 9 78 0
 2103 007a 0F31     		adds	r1, r1, #15
 2104              	.LVL205:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 2105              		.loc 9 77 0
 2106 007c D473     		strb	r4, [r2, #15]
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 2107              		.loc 9 78 0
 2108 007e 1961     		str	r1, [r3, #16]
 2109              	.LVL206:
  81:./lib/ros_lib/std_msgs/Header.h **** 
 2110              		.loc 9 81 0
 2111 0080 03B0     		add	sp, sp, #12
 2112              	.LCFI17:
 2113              		.cfi_def_cfa_offset 12
 2114              		@ sp needed
 2115 0082 30BD     		pop	{r4, r5, pc}
 2116              		.cfi_endproc
 2117              	.LFE181:
 2118              		.cantunwind
 2119              		.fnend
 2121              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 2122              		.align	1
 2123              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 2124              		.thumb
 2125              		.thumb_func
 2127              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 2128              		.fnstart
 2129              	.LFB62:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2130              		.loc 2 72 0
 2131              		.cfi_startproc
 2132              		@ args = 0, pretend = 0, frame = 16
 2133              		@ frame_needed = 0, uses_anonymous_args = 0
 2134              	.LVL207:
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2135              		.loc 2 75 0
 2136 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2137              		.loc 2 72 0
 2138 0002 30B5     		push	{r4, r5, lr}
 2139              	.LCFI18:
 2140              		.cfi_def_cfa_offset 12
 2141              		.cfi_offset 4, -12
 2142              		.cfi_offset 5, -8
 2143              		.cfi_offset 14, -4
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2144              		.loc 2 75 0
 2145 0004 8380     		strh	r3, [r0, #4]	@ movhi
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2146              		.loc 2 76 0
 2147 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2148              		.loc 2 72 0
 2149 0008 0446     		mov	r4, r0
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2150              		.loc 2 76 0
 2151 000a 43EA0223 		orr	r3, r3, r2, lsl #8
 2152 000e 8380     		strh	r3, [r0, #4]	@ movhi
 2153              	.LVL208:
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2154              		.loc 2 79 0
 2155 0010 D1F80200 		ldr	r0, [r1, #2]	@ unaligned
 2156              	.LVL209:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2157              		.loc 2 72 0
 2158 0014 85B0     		sub	sp, sp, #20
 2159              	.LCFI19:
 2160              		.cfi_def_cfa_offset 32
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2161              		.loc 2 79 0
 2162 0016 0190     		str	r0, [sp, #4]	@ unaligned
 2163              	.LVL210:
 2164              	.LBB201:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2165              		.loc 2 81 0
 2166 0018 019D     		ldr	r5, [sp, #4]
 2167 001a 8A1D     		adds	r2, r1, #6
 2168 001c AB1D     		adds	r3, r5, #6
 2169              	.LVL211:
 2170              	.L117:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2171              		.loc 2 81 0 is_stmt 0 discriminator 3
 2172 001e 501A     		subs	r0, r2, r1
 2173              	.LVL212:
 2174 0020 8342     		cmp	r3, r0
 2175 0022 04D9     		bls	.L116
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2176              		.loc 2 82 0 is_stmt 1 discriminator 2
 2177 0024 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 2178              	.LVL213:
 2179 0028 02F8020C 		strb	r0, [r2, #-2]
 2180              	.LVL214:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2181              		.loc 2 81 0 discriminator 2
 2182 002c F7E7     		b	.L117
 2183              	.LVL215:
 2184              	.L116:
 2185              	.LBE201:
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 2186              		.loc 2 84 0
 2187 002e 4A19     		adds	r2, r1, r5
 2188 0030 0020     		movs	r0, #0
 2189              	.LVL216:
 2190 0032 5071     		strb	r0, [r2, #5]
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 2191              		.loc 2 85 0
 2192 0034 4A1D     		adds	r2, r1, #5
 2193 0036 A260     		str	r2, [r4, #8]
 2194              	.LVL217:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2195              		.loc 2 88 0
 2196 0038 C858     		ldr	r0, [r1, r3]	@ unaligned
 2197              	.LBB202:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2198              		.loc 2 90 0
 2199 003a 1A1D     		adds	r2, r3, #4
 2200              	.LBE202:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2201              		.loc 2 88 0
 2202 003c 0290     		str	r0, [sp, #8]	@ unaligned
 2203              	.LVL218:
 2204              	.LBB203:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2205              		.loc 2 90 0
 2206 003e 029B     		ldr	r3, [sp, #8]
 2207 0040 05F10A00 		add	r0, r5, #10
 2208 0044 1344     		add	r3, r3, r2
 2209 0046 0844     		add	r0, r0, r1
 2210              	.LVL219:
 2211              	.L119:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2212              		.loc 2 90 0 is_stmt 0 discriminator 3
 2213 0048 451A     		subs	r5, r0, r1
 2214              	.LVL220:
 2215 004a AB42     		cmp	r3, r5
 2216 004c 04D9     		bls	.L118
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2217              		.loc 2 91 0 is_stmt 1 discriminator 2
 2218 004e 10F8015B 		ldrb	r5, [r0], #1	@ zero_extendqisi2
 2219              	.LVL221:
 2220 0052 00F8025C 		strb	r5, [r0, #-2]
 2221              	.LVL222:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2222              		.loc 2 90 0 discriminator 2
 2223 0056 F7E7     		b	.L119
 2224              	.LVL223:
 2225              	.L118:
 2226              	.LBE203:
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2227              		.loc 2 94 0
 2228 0058 013A     		subs	r2, r2, #1
 2229              	.LVL224:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 2230              		.loc 2 93 0
 2231 005a C818     		adds	r0, r1, r3
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2232              		.loc 2 94 0
 2233 005c 0A44     		add	r2, r2, r1
 2234              	.LVL225:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 2235              		.loc 2 93 0
 2236 005e 0025     		movs	r5, #0
 2237              	.LVL226:
 2238 0060 00F8015C 		strb	r5, [r0, #-1]
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2239              		.loc 2 94 0
 2240 0064 E260     		str	r2, [r4, #12]
 2241              	.LVL227:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2242              		.loc 2 97 0
 2243 0066 0068     		ldr	r0, [r0]	@ unaligned
 2244              	.LBB204:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2245              		.loc 2 99 0
 2246 0068 0433     		adds	r3, r3, #4
 2247              	.LVL228:
 2248              	.LBE204:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2249              		.loc 2 97 0
 2250 006a 0390     		str	r0, [sp, #12]	@ unaligned
 2251              	.LVL229:
 2252              	.LBB205:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2253              		.loc 2 99 0
 2254 006c 0398     		ldr	r0, [sp, #12]
 2255 006e CA18     		adds	r2, r1, r3
 2256 0070 1844     		add	r0, r0, r3
 2257              	.LVL230:
 2258              	.L121:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2259              		.loc 2 99 0 is_stmt 0 discriminator 3
 2260 0072 551A     		subs	r5, r2, r1
 2261              	.LVL231:
 2262 0074 A842     		cmp	r0, r5
 2263 0076 04D9     		bls	.L120
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2264              		.loc 2 100 0 is_stmt 1 discriminator 2
 2265 0078 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 2266              	.LVL232:
 2267 007c 02F8025C 		strb	r5, [r2, #-2]
 2268              	.LVL233:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2269              		.loc 2 99 0 discriminator 2
 2270 0080 F7E7     		b	.L121
 2271              	.LVL234:
 2272              	.L120:
 2273              	.LBE205:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2274              		.loc 2 103 0
 2275 0082 013B     		subs	r3, r3, #1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 2276              		.loc 2 102 0
 2277 0084 0D18     		adds	r5, r1, r0
 2278              	.LVL235:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2279              		.loc 2 103 0
 2280 0086 0B44     		add	r3, r3, r1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 2281              		.loc 2 102 0
 2282 0088 0022     		movs	r2, #0
 2283              	.LVL236:
 2284 008a 05F8012C 		strb	r2, [r5, #-1]
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2285              		.loc 2 103 0
 2286 008e 2361     		str	r3, [r4, #16]
 2287              	.LVL237:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2288              		.loc 2 114 0
 2289 0090 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 2290 0092 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 2291 0094 1B04     		lsls	r3, r3, #16
 2292 0096 43EA0223 		orr	r3, r3, r2, lsl #8
 2293 009a 0A5C     		ldrb	r2, [r1, r0]	@ zero_extendqisi2
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2294              		.loc 2 117 0
 2295 009c 0430     		adds	r0, r0, #4
 2296              	.LVL238:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2297              		.loc 2 114 0
 2298 009e 1343     		orrs	r3, r3, r2
 2299 00a0 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 2300 00a2 43EA0263 		orr	r3, r3, r2, lsl #24
 2301 00a6 6361     		str	r3, [r4, #20]
 2302              	.LVL239:
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2303              		.loc 2 117 0
 2304 00a8 05B0     		add	sp, sp, #20
 2305              	.LCFI20:
 2306              		.cfi_def_cfa_offset 12
 2307              		@ sp needed
 2308 00aa 30BD     		pop	{r4, r5, pc}
 2309              		.cfi_endproc
 2310              	.LFE62:
 2311              		.cantunwind
 2312              		.fnend
 2314              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
 2315              		.align	1
 2316              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 2317              		.thumb
 2318              		.thumb_func
 2320              	_ZN14rosserial_msgs3Log11deserializeEPh:
 2321              		.fnstart
 2322              	.LFB69:
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2323              		.loc 3 42 0
 2324              		.cfi_startproc
 2325              		@ args = 0, pretend = 0, frame = 8
 2326              		@ frame_needed = 0, uses_anonymous_args = 0
 2327              	.LVL240:
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2328              		.loc 3 45 0
 2329 0000 0B46     		mov	r3, r1
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2330              		.loc 3 42 0
 2331 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2332              	.LCFI21:
 2333              		.cfi_def_cfa_offset 24
 2334              		.cfi_offset 4, -12
 2335              		.cfi_offset 5, -8
 2336              		.cfi_offset 14, -4
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2337              		.loc 3 45 0
 2338 0004 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2339              		.loc 3 42 0
 2340 0008 0446     		mov	r4, r0
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2341              		.loc 3 45 0
 2342 000a 0271     		strb	r2, [r0, #4]
 2343              	.LVL241:
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 2344              		.loc 3 48 0
 2345 000c 1868     		ldr	r0, [r3]	@ unaligned
 2346              	.LVL242:
 2347 000e 4A1D     		adds	r2, r1, #5
 2348 0010 0190     		str	r0, [sp, #4]	@ unaligned
 2349              	.LVL243:
 2350              	.LBB206:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2351              		.loc 3 50 0
 2352 0012 019B     		ldr	r3, [sp, #4]
 2353 0014 581D     		adds	r0, r3, #5
 2354              	.LVL244:
 2355              	.L127:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2356              		.loc 3 50 0 is_stmt 0 discriminator 3
 2357 0016 551A     		subs	r5, r2, r1
 2358              	.LVL245:
 2359 0018 A842     		cmp	r0, r5
 2360 001a 04D9     		bls	.L126
  51:./lib/ros_lib/rosserial_msgs/Log.h ****       }
 2361              		.loc 3 51 0 is_stmt 1 discriminator 2
 2362 001c 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 2363              	.LVL246:
 2364 0020 02F8025C 		strb	r5, [r2, #-2]
 2365              	.LVL247:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2366              		.loc 3 50 0 discriminator 2
 2367 0024 F7E7     		b	.L127
 2368              	.LVL248:
 2369              	.L126:
 2370              	.LBE206:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 2371              		.loc 3 53 0
 2372 0026 0B44     		add	r3, r3, r1
 2373 0028 0022     		movs	r2, #0
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2374              		.loc 3 54 0
 2375 002a 0431     		adds	r1, r1, #4
 2376              	.LVL249:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 2377              		.loc 3 53 0
 2378 002c 1A71     		strb	r2, [r3, #4]
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2379              		.loc 3 54 0
 2380 002e A160     		str	r1, [r4, #8]
 2381              	.LVL250:
  57:./lib/ros_lib/rosserial_msgs/Log.h **** 
 2382              		.loc 3 57 0
 2383 0030 03B0     		add	sp, sp, #12
 2384              	.LCFI22:
 2385              		.cfi_def_cfa_offset 12
 2386              		@ sp needed
 2387 0032 30BD     		pop	{r4, r5, pc}
 2388              		.cfi_endproc
 2389              	.LFE69:
 2390              		.cantunwind
 2391              		.fnend
 2393              		.section	.text._ZN8std_msgs19MultiArrayDimension11deserializeEPh,"axG",%progbits,_ZN8std_msgs19Mul
 2394              		.align	1
 2395              		.weak	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 2396              		.thumb
 2397              		.thumb_func
 2399              	_ZN8std_msgs19MultiArrayDimension11deserializeEPh:
 2400              		.fnstart
 2401              	.LFB153:
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 2402              		.loc 5 47 0
 2403              		.cfi_startproc
 2404              		@ args = 0, pretend = 0, frame = 8
 2405              		@ frame_needed = 0, uses_anonymous_args = 0
 2406              	.LVL251:
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 2407              		.loc 5 51 0
 2408 0000 0B46     		mov	r3, r1
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 2409              		.loc 5 47 0
 2410 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2411              	.LCFI23:
 2412              		.cfi_def_cfa_offset 24
 2413              		.cfi_offset 4, -12
 2414              		.cfi_offset 5, -8
 2415              		.cfi_offset 14, -4
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 2416              		.loc 5 47 0
 2417 0004 0246     		mov	r2, r0
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 2418              		.loc 5 51 0
 2419 0006 53F8040B 		ldr	r0, [r3], #4	@ unaligned
 2420              	.LVL252:
 2421 000a 0190     		str	r0, [sp, #4]	@ unaligned
 2422              	.LVL253:
 2423              	.LBB207:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 2424              		.loc 5 53 0
 2425 000c 0198     		ldr	r0, [sp, #4]
 2426 000e 051D     		adds	r5, r0, #4
 2427              	.LVL254:
 2428              	.L131:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 2429              		.loc 5 53 0 is_stmt 0 discriminator 3
 2430 0010 5C1A     		subs	r4, r3, r1
 2431              	.LVL255:
 2432 0012 A542     		cmp	r5, r4
 2433 0014 04D9     		bls	.L130
  54:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       }
 2434              		.loc 5 54 0 is_stmt 1 discriminator 2
 2435 0016 13F8014B 		ldrb	r4, [r3], #1	@ zero_extendqisi2
 2436              	.LVL256:
 2437 001a 03F8024C 		strb	r4, [r3, #-2]
 2438              	.LVL257:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 2439              		.loc 5 53 0 discriminator 2
 2440 001e F7E7     		b	.L131
 2441              	.LVL258:
 2442              	.L130:
 2443              	.LBE207:
  56:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->label = (char *)(inbuffer + offset-1);
 2444              		.loc 5 56 0
 2445 0020 0C18     		adds	r4, r1, r0
 2446              	.LVL259:
 2447 0022 0023     		movs	r3, #0
 2448              	.LVL260:
 2449 0024 E370     		strb	r3, [r4, #3]
  57:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
 2450              		.loc 5 57 0
 2451 0026 CB1C     		adds	r3, r1, #3
 2452 0028 5360     		str	r3, [r2, #4]
 2453              	.LVL261:
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2454              		.loc 5 59 0
 2455 002a 4B5D     		ldrb	r3, [r1, r5]	@ zero_extendqisi2
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 2456              		.loc 5 70 0
 2457 002c 0C30     		adds	r0, r0, #12
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2458              		.loc 5 59 0
 2459 002e 9360     		str	r3, [r2, #8]
  60:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2460              		.loc 5 60 0
 2461 0030 6179     		ldrb	r1, [r4, #5]	@ zero_extendqisi2
 2462              	.LVL262:
 2463 0032 43EA0123 		orr	r3, r3, r1, lsl #8
 2464 0036 9360     		str	r3, [r2, #8]
  61:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2465              		.loc 5 61 0
 2466 0038 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 2467 003a 43EA0143 		orr	r3, r3, r1, lsl #16
 2468 003e 9360     		str	r3, [r2, #8]
  62:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
 2469              		.loc 5 62 0
 2470 0040 E179     		ldrb	r1, [r4, #7]	@ zero_extendqisi2
 2471 0042 43EA0163 		orr	r3, r3, r1, lsl #24
 2472 0046 9360     		str	r3, [r2, #8]
 2473              	.LVL263:
  64:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2474              		.loc 5 64 0
 2475 0048 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 2476 004a D360     		str	r3, [r2, #12]
  65:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2477              		.loc 5 65 0
 2478 004c 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 2479 004e 43EA0123 		orr	r3, r3, r1, lsl #8
 2480 0052 D360     		str	r3, [r2, #12]
  66:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2481              		.loc 5 66 0
 2482 0054 A17A     		ldrb	r1, [r4, #10]	@ zero_extendqisi2
 2483 0056 43EA0143 		orr	r3, r3, r1, lsl #16
 2484 005a D360     		str	r3, [r2, #12]
  67:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
 2485              		.loc 5 67 0
 2486 005c E17A     		ldrb	r1, [r4, #11]	@ zero_extendqisi2
 2487 005e 43EA0163 		orr	r3, r3, r1, lsl #24
 2488 0062 D360     		str	r3, [r2, #12]
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 2489              		.loc 5 70 0
 2490 0064 03B0     		add	sp, sp, #12
 2491              	.LCFI24:
 2492              		.cfi_def_cfa_offset 12
 2493              		@ sp needed
 2494 0066 30BD     		pop	{r4, r5, pc}
 2495              		.cfi_endproc
 2496              	.LFE153:
 2497              		.cantunwind
 2498              		.fnend
 2500              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 2501              		.align	1
 2502              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 2503              		.thumb
 2504              		.thumb_func
 2506              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 2507              		.fnstart
 2508              	.LFB83:
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2509              		.loc 4 123 0
 2510              		.cfi_startproc
 2511              		@ args = 0, pretend = 0, frame = 8
 2512              		@ frame_needed = 0, uses_anonymous_args = 0
 2513              	.LVL264:
 2514 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2515              	.LCFI25:
 2516              		.cfi_def_cfa_offset 32
 2517              		.cfi_offset 4, -20
 2518              		.cfi_offset 5, -16
 2519              		.cfi_offset 6, -12
 2520              		.cfi_offset 7, -8
 2521              		.cfi_offset 14, -4
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 2522              		.loc 4 126 0
 2523 0002 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 2524              	.LVL265:
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2525              		.loc 4 127 0
 2526 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2527              		.loc 4 123 0
 2528 0006 0446     		mov	r4, r0
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2529              		.loc 4 127 0
 2530 0008 AB42     		cmp	r3, r5
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2531              		.loc 4 123 0
 2532 000a 0E46     		mov	r6, r1
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2533              		.loc 4 127 0
 2534 000c 04D2     		bcs	.L134
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2535              		.loc 4 128 0
 2536 000e A900     		lsls	r1, r5, #2
 2537              	.LVL266:
 2538 0010 C068     		ldr	r0, [r0, #12]
 2539              	.LVL267:
 2540 0012 FFF7FEFF 		bl	realloc
 2541              	.LVL268:
 2542 0016 E060     		str	r0, [r4, #12]
 2543              	.L134:
 2544              	.LVL269:
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 2545              		.loc 4 130 0
 2546 0018 2571     		strb	r5, [r4, #4]
 2547              	.LVL270:
 2548 001a 321D     		adds	r2, r6, #4
 2549 001c 0021     		movs	r1, #0
 2550              	.LVL271:
 2551              	.L136:
 2552              	.LBB208:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2553              		.loc 4 131 0 discriminator 3
 2554 001e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2555 0020 4F1C     		adds	r7, r1, #1
 2556 0022 C9B2     		uxtb	r1, r1
 2557 0024 8B42     		cmp	r3, r1
 2558 0026 A2EB0605 		sub	r5, r2, r6
 2559              	.LVL272:
 2560 002a 02F10402 		add	r2, r2, #4
 2561 002e 14D9     		bls	.L135
 2562              	.LVL273:
 2563              	.LBB209:
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 2564              		.loc 4 141 0 discriminator 2
 2565 0030 12F8023C 		ldrb	r3, [r2, #-2]	@ zero_extendqisi2
 2566              	.LVL274:
 2567 0034 12F8030C 		ldrb	r0, [r2, #-3]	@ zero_extendqisi2
 2568              	.LVL275:
 2569 0038 1B04     		lsls	r3, r3, #16
 2570              	.LVL276:
 2571 003a 43EA0023 		orr	r3, r3, r0, lsl #8
 2572 003e 12F8040C 		ldrb	r0, [r2, #-4]	@ zero_extendqisi2
 2573              	.LVL277:
 2574 0042 0343     		orrs	r3, r3, r0
 2575 0044 12F8010C 		ldrb	r0, [r2, #-1]	@ zero_extendqisi2
 2576 0048 43EA0063 		orr	r3, r3, r0, lsl #24
 2577 004c A360     		str	r3, [r4, #8]
 2578              	.LVL278:
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2579              		.loc 4 143 0 discriminator 2
 2580 004e A068     		ldr	r0, [r4, #8]	@ unaligned
 2581 0050 E368     		ldr	r3, [r4, #12]
 2582 0052 43F82100 		str	r0, [r3, r1, lsl #2]	@ unaligned
 2583              	.LVL279:
 2584              	.LBE209:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2585              		.loc 4 131 0 discriminator 2
 2586 0056 3946     		mov	r1, r7
 2587 0058 E1E7     		b	.L136
 2588              	.LVL280:
 2589              	.L135:
 2590              	.LBE208:
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 2591              		.loc 4 145 0
 2592 005a 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2593              	.LVL281:
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 2594              		.loc 4 146 0
 2595 005c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 2596 005e BB42     		cmp	r3, r7
 2597 0060 04D2     		bcs	.L137
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2598              		.loc 4 147 0
 2599 0062 B900     		lsls	r1, r7, #2
 2600 0064 A069     		ldr	r0, [r4, #24]
 2601 0066 FFF7FEFF 		bl	realloc
 2602              	.LVL282:
 2603 006a A061     		str	r0, [r4, #24]
 2604              	.L137:
 2605              	.LVL283:
 2606 006c 2B1D     		adds	r3, r5, #4
 2607              	.LVL284:
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 2608              		.loc 4 149 0
 2609 006e 2774     		strb	r7, [r4, #16]
 2610              	.LVL285:
 2611 0070 3344     		add	r3, r3, r6
 2612              	.LVL286:
 2613 0072 0022     		movs	r2, #0
 2614              	.LVL287:
 2615              	.L139:
 2616              	.LBB210:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2617              		.loc 4 150 0 discriminator 3
 2618 0074 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 2619 0076 571C     		adds	r7, r2, #1
 2620 0078 D2B2     		uxtb	r2, r2
 2621 007a 9142     		cmp	r1, r2
 2622 007c A3EB0605 		sub	r5, r3, r6
 2623              	.LVL288:
 2624 0080 03F10403 		add	r3, r3, #4
 2625 0084 14D9     		bls	.L138
 2626              	.LVL289:
 2627              	.LBB211:
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 2628              		.loc 4 159 0 discriminator 2
 2629 0086 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 2630 008a 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2631 008e 0904     		lsls	r1, r1, #16
 2632              	.LVL290:
 2633 0090 41EA0021 		orr	r1, r1, r0, lsl #8
 2634              	.LVL291:
 2635 0094 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2636 0098 0143     		orrs	r1, r1, r0
 2637 009a 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2638              	.LVL292:
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 2639              		.loc 4 160 0 discriminator 2
 2640 009e 41EA0061 		orr	r1, r1, r0, lsl #24
 2641 00a2 6161     		str	r1, [r4, #20]	@ float
 2642              	.LVL293:
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2643              		.loc 4 162 0 discriminator 2
 2644 00a4 6069     		ldr	r0, [r4, #20]	@ unaligned
 2645 00a6 A169     		ldr	r1, [r4, #24]
 2646 00a8 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 2647              	.LVL294:
 2648              	.LBE211:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2649              		.loc 4 150 0 discriminator 2
 2650 00ac 3A46     		mov	r2, r7
 2651 00ae E1E7     		b	.L139
 2652              	.LVL295:
 2653              	.L138:
 2654              	.LBE210:
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 2655              		.loc 4 164 0
 2656 00b0 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2657              	.LVL296:
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 2658              		.loc 4 165 0
 2659 00b2 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 2660 00b4 BB42     		cmp	r3, r7
 2661 00b6 04D2     		bcs	.L140
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2662              		.loc 4 166 0
 2663 00b8 B900     		lsls	r1, r7, #2
 2664 00ba 606A     		ldr	r0, [r4, #36]
 2665 00bc FFF7FEFF 		bl	realloc
 2666              	.LVL297:
 2667 00c0 6062     		str	r0, [r4, #36]
 2668              	.L140:
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 2669              		.loc 4 167 0
 2670 00c2 2B1D     		adds	r3, r5, #4
 2671              	.LVL298:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2672              		.loc 4 168 0
 2673 00c4 0025     		movs	r5, #0
 2674              	.LBB212:
 2675              	.LBB213:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2676              		.loc 4 176 0
 2677 00c6 AE46     		mov	lr, r5
 2678              	.LBE213:
 2679              	.LBE212:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2680              		.loc 4 168 0
 2681 00c8 2777     		strb	r7, [r4, #28]
 2682              	.LVL299:
 2683              	.L144:
 2684              	.LBB217:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2685              		.loc 4 169 0 discriminator 1
 2686 00ca 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 2687 00cc EFB2     		uxtb	r7, r5
 2688 00ce BA42     		cmp	r2, r7
 2689 00d0 19D9     		bls	.L141
 2690              	.LBB216:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2691              		.loc 4 171 0
 2692 00d2 F058     		ldr	r0, [r6, r3]	@ unaligned
 2693              	.LBB214:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2694              		.loc 4 173 0
 2695 00d4 1A1D     		adds	r2, r3, #4
 2696              	.LBE214:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2697              		.loc 4 171 0
 2698 00d6 0190     		str	r0, [sp, #4]	@ unaligned
 2699              	.LVL300:
 2700              	.LBB215:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2701              		.loc 4 173 0
 2702 00d8 019B     		ldr	r3, [sp, #4]
 2703 00da B118     		adds	r1, r6, r2
 2704 00dc 1344     		add	r3, r3, r2
 2705              	.LVL301:
 2706              	.L143:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2707              		.loc 4 173 0 is_stmt 0 discriminator 3
 2708 00de 881B     		subs	r0, r1, r6
 2709              	.LVL302:
 2710 00e0 8342     		cmp	r3, r0
 2711 00e2 04D9     		bls	.L142
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2712              		.loc 4 174 0 is_stmt 1 discriminator 2
 2713 00e4 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 2714              	.LVL303:
 2715 00e8 01F8020C 		strb	r0, [r1, #-2]
 2716              	.LVL304:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2717              		.loc 4 173 0 discriminator 2
 2718 00ec F7E7     		b	.L143
 2719              	.LVL305:
 2720              	.L142:
 2721              	.LBE215:
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2722              		.loc 4 177 0 discriminator 2
 2723 00ee 013A     		subs	r2, r2, #1
 2724              	.LVL306:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2725              		.loc 4 176 0 discriminator 2
 2726 00f0 F118     		adds	r1, r6, r3
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2727              		.loc 4 177 0 discriminator 2
 2728 00f2 3244     		add	r2, r2, r6
 2729              	.LVL307:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2730              		.loc 4 176 0 discriminator 2
 2731 00f4 01F801EC 		strb	lr, [r1, #-1]
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2732              		.loc 4 177 0 discriminator 2
 2733 00f8 2262     		str	r2, [r4, #32]
 2734              	.LVL308:
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2735              		.loc 4 179 0 discriminator 2
 2736 00fa 216A     		ldr	r1, [r4, #32]	@ unaligned
 2737 00fc 626A     		ldr	r2, [r4, #36]
 2738 00fe 0135     		adds	r5, r5, #1
 2739              	.LVL309:
 2740 0100 42F82710 		str	r1, [r2, r7, lsl #2]	@ unaligned
 2741              	.LVL310:
 2742              	.LBE216:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2743              		.loc 4 169 0 discriminator 2
 2744 0104 E1E7     		b	.L144
 2745              	.LVL311:
 2746              	.L141:
 2747              	.LBE217:
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2748              		.loc 4 182 0
 2749 0106 1846     		mov	r0, r3
 2750 0108 03B0     		add	sp, sp, #12
 2751              	.LCFI26:
 2752              		.cfi_def_cfa_offset 20
 2753              		@ sp needed
 2754 010a F0BD     		pop	{r4, r5, r6, r7, pc}
 2755              		.cfi_endproc
 2756              	.LFE83:
 2757              		.cantunwind
 2758              		.fnend
 2760              		.section	.text._ZN8std_msgs16MultiArrayLayout11deserializeEPh,"axG",%progbits,_ZN8std_msgs16MultiA
 2761              		.align	1
 2762              		.weak	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 2763              		.thumb
 2764              		.thumb_func
 2766              	_ZN8std_msgs16MultiArrayLayout11deserializeEPh:
 2767              		.fnstart
 2768              	.LFB160:
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2769              		.loc 6 45 0
 2770              		.cfi_startproc
 2771              		@ args = 0, pretend = 0, frame = 0
 2772              		@ frame_needed = 0, uses_anonymous_args = 0
 2773              	.LVL312:
 2774 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2775              	.LCFI27:
 2776              		.cfi_def_cfa_offset 32
 2777              		.cfi_offset 4, -32
 2778              		.cfi_offset 5, -28
 2779              		.cfi_offset 6, -24
 2780              		.cfi_offset 7, -20
 2781              		.cfi_offset 8, -16
 2782              		.cfi_offset 9, -12
 2783              		.cfi_offset 10, -8
 2784              		.cfi_offset 14, -4
  48:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       if(dim_lengthT > dim_length)
 2785              		.loc 6 48 0
 2786 0004 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 2787              	.LVL313:
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2788              		.loc 6 49 0
 2789 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2790              		.loc 6 45 0
 2791 0008 0446     		mov	r4, r0
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2792              		.loc 6 49 0
 2793 000a AB42     		cmp	r3, r5
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2794              		.loc 6 45 0
 2795 000c 0F46     		mov	r7, r1
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2796              		.loc 6 49 0
 2797 000e 04D2     		bcs	.L147
  50:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += 3;
 2798              		.loc 6 50 0
 2799 0010 2901     		lsls	r1, r5, #4
 2800              	.LVL314:
 2801 0012 8069     		ldr	r0, [r0, #24]
 2802              	.LVL315:
 2803 0014 FFF7FEFF 		bl	realloc
 2804              	.LVL316:
 2805 0018 A061     		str	r0, [r4, #24]
 2806              	.L147:
 2807              	.LVL317:
  52:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 2808              		.loc 6 52 0
 2809 001a 2571     		strb	r5, [r4, #4]
 2810              	.LVL318:
 2811 001c 0023     		movs	r3, #0
  51:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length = dim_lengthT;
 2812              		.loc 6 51 0
 2813 001e 0426     		movs	r6, #4
 2814              	.LBB218:
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2815              		.loc 6 54 0
 2816 0020 04F10808 		add	r8, r4, #8
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2817              		.loc 6 55 0
 2818 0024 04F1180A 		add	r10, r4, #24
 2819              	.LVL319:
 2820              	.L150:
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
 2821              		.loc 6 53 0 discriminator 3
 2822 0028 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 2823 002a DDB2     		uxtb	r5, r3
 2824 002c AA42     		cmp	r2, r5
 2825 002e 03F10109 		add	r9, r3, #1
 2826 0032 07EB0601 		add	r1, r7, r6
 2827 0036 0FD9     		bls	.L148
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2828              		.loc 6 54 0 discriminator 2
 2829 0038 4046     		mov	r0, r8
 2830 003a FFF7FEFF 		bl	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 2831              	.LVL320:
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2832              		.loc 6 55 0 discriminator 2
 2833 003e 4246     		mov	r2, r8
 2834 0040 A369     		ldr	r3, [r4, #24]
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2835              		.loc 6 54 0 discriminator 2
 2836 0042 0644     		add	r6, r6, r0
 2837              	.LVL321:
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2838              		.loc 6 55 0 discriminator 2
 2839 0044 03EB0513 		add	r3, r3, r5, lsl #4
 2840              	.L149:
 2841 0048 52F8041B 		ldr	r1, [r2], #4	@ unaligned
 2842 004c 5245     		cmp	r2, r10
 2843 004e 43F8041B 		str	r1, [r3], #4	@ unaligned
 2844 0052 F9D1     		bne	.L149
 2845              	.LVL322:
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
 2846              		.loc 6 53 0 discriminator 2
 2847 0054 4B46     		mov	r3, r9
 2848 0056 E7E7     		b	.L150
 2849              	.LVL323:
 2850              	.L148:
 2851              	.LBE218:
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2852              		.loc 6 57 0
 2853 0058 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 2854              	.LVL324:
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
 2855              		.loc 6 63 0
 2856 005a 301D     		adds	r0, r6, #4
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2857              		.loc 6 57 0
 2858 005c E361     		str	r3, [r4, #28]
  58:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2859              		.loc 6 58 0
 2860 005e 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 2861 0060 43EA0223 		orr	r3, r3, r2, lsl #8
 2862 0064 E361     		str	r3, [r4, #28]
  59:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2863              		.loc 6 59 0
 2864 0066 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 2865 0068 43EA0243 		orr	r3, r3, r2, lsl #16
 2866 006c E361     		str	r3, [r4, #28]
  60:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
 2867              		.loc 6 60 0
 2868 006e CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 2869 0070 43EA0263 		orr	r3, r3, r2, lsl #24
 2870 0074 E361     		str	r3, [r4, #28]
 2871              	.LVL325:
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
 2872              		.loc 6 63 0
 2873 0076 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2874              		.cfi_endproc
 2875              	.LFE160:
 2876              		.cantunwind
 2877              		.fnend
 2879              		.section	.text._ZN8std_msgs17Float32MultiArray11deserializeEPh,"axG",%progbits,_ZN8std_msgs17Float
 2880              		.align	1
 2881              		.weak	_ZN8std_msgs17Float32MultiArray11deserializeEPh
 2882              		.thumb
 2883              		.thumb_func
 2885              	_ZN8std_msgs17Float32MultiArray11deserializeEPh:
 2886              		.fnstart
 2887              	.LFB167:
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2888              		.loc 7 50 0
 2889              		.cfi_startproc
 2890              		@ args = 0, pretend = 0, frame = 0
 2891              		@ frame_needed = 0, uses_anonymous_args = 0
 2892              	.LVL326:
 2893 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2894              	.LCFI28:
 2895              		.cfi_def_cfa_offset 24
 2896              		.cfi_offset 3, -24
 2897              		.cfi_offset 4, -20
 2898              		.cfi_offset 5, -16
 2899              		.cfi_offset 6, -12
 2900              		.cfi_offset 7, -8
 2901              		.cfi_offset 14, -4
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2902              		.loc 7 50 0
 2903 0002 0446     		mov	r4, r0
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2904              		.loc 7 53 0
 2905 0004 0430     		adds	r0, r0, #4
 2906              	.LVL327:
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2907              		.loc 7 50 0
 2908 0006 0D46     		mov	r5, r1
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2909              		.loc 7 53 0
 2910 0008 FFF7FEFF 		bl	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 2911              	.LVL328:
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
 2912              		.loc 7 55 0
 2913 000c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
  54:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       if(data_lengthT > data_length)
 2914              		.loc 7 54 0
 2915 0010 2F5C     		ldrb	r7, [r5, r0]	@ zero_extendqisi2
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2916              		.loc 7 53 0
 2917 0012 0646     		mov	r6, r0
 2918              	.LVL329:
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
 2919              		.loc 7 55 0
 2920 0014 BB42     		cmp	r3, r7
 2921 0016 04D2     		bcs	.L153
  56:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += 3;
 2922              		.loc 7 56 0
 2923 0018 B900     		lsls	r1, r7, #2
 2924 001a E06A     		ldr	r0, [r4, #44]
 2925              	.LVL330:
 2926 001c FFF7FEFF 		bl	realloc
 2927              	.LVL331:
 2928 0020 E062     		str	r0, [r4, #44]
 2929              	.L153:
 2930              	.LVL332:
 2931 0022 331D     		adds	r3, r6, #4
 2932              	.LVL333:
  58:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
 2933              		.loc 7 58 0
 2934 0024 84F82470 		strb	r7, [r4, #36]
 2935              	.LVL334:
 2936 0028 2B44     		add	r3, r3, r5
 2937              	.LVL335:
 2938 002a 0022     		movs	r2, #0
 2939              	.LVL336:
 2940              	.L155:
 2941              	.LBB219:
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 2942              		.loc 7 59 0 discriminator 3
 2943 002c 94F82410 		ldrb	r1, [r4, #36]	@ zero_extendqisi2
 2944 0030 561C     		adds	r6, r2, #1
 2945 0032 D2B2     		uxtb	r2, r2
 2946 0034 9142     		cmp	r1, r2
 2947 0036 A3EB0500 		sub	r0, r3, r5
 2948              	.LVL337:
 2949 003a 03F10403 		add	r3, r3, #4
 2950 003e 14D9     		bls	.L154
 2951              	.LVL338:
 2952              	.LBB220:
  68:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       this->st_data = u_st_data.real;
 2953              		.loc 7 68 0 discriminator 2
 2954 0040 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 2955 0044 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2956              	.LVL339:
 2957 0048 0904     		lsls	r1, r1, #16
 2958              	.LVL340:
 2959 004a 41EA0021 		orr	r1, r1, r0, lsl #8
 2960              	.LVL341:
 2961 004e 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2962 0052 0143     		orrs	r1, r1, r0
 2963 0054 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2964              	.LVL342:
  69:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->st_data);
 2965              		.loc 7 69 0 discriminator 2
 2966 0058 41EA0061 		orr	r1, r1, r0, lsl #24
 2967 005c A162     		str	r1, [r4, #40]	@ float
 2968              	.LVL343:
  71:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
 2969              		.loc 7 71 0 discriminator 2
 2970 005e A06A     		ldr	r0, [r4, #40]	@ unaligned
 2971 0060 E16A     		ldr	r1, [r4, #44]
 2972 0062 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 2973              	.LVL344:
 2974              	.LBE220:
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 2975              		.loc 7 59 0 discriminator 2
 2976 0066 3246     		mov	r2, r6
 2977 0068 E0E7     		b	.L155
 2978              	.LVL345:
 2979              	.L154:
 2980              	.LBE219:
  74:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
 2981              		.loc 7 74 0
 2982 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2983              		.cfi_endproc
 2984              	.LFE167:
 2985              		.cantunwind
 2986              		.fnend
 2988              		.global	__aeabi_f2d
 2989              		.global	__aeabi_dadd
 2990              		.global	__aeabi_dmul
 2991              		.global	__aeabi_d2f
 2992              		.text
 2993              		.align	1
 2994              		.global	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 2995              		.thumb
 2996              		.thumb_func
 2998              	_Z8motor_cbRKN12roberto_msgs10MotorStateE:
 2999              		.fnstart
 3000              	.LFB199:
  43:src/main.cpp  **** }
  44:src/main.cpp  **** 
  45:src/main.cpp  **** 
  46:src/main.cpp  **** 
  47:src/main.cpp  **** void motor_cb( const roberto_msgs::MotorState& cmd_msg){
 3001              		.loc 13 47 0
 3002              		.cfi_startproc
 3003              		@ args = 0, pretend = 0, frame = 0
 3004              		@ frame_needed = 0, uses_anonymous_args = 0
 3005              	.LVL346:
 3006 0006 70B5     		push	{r4, r5, r6, lr}
 3007              		.save {r4, r5, r6, lr}
 3008              	.LCFI29:
 3009              		.cfi_def_cfa_offset 16
 3010              		.cfi_offset 4, -16
 3011              		.cfi_offset 5, -12
 3012              		.cfi_offset 6, -8
 3013              		.cfi_offset 14, -4
 3014              	.LBB228:
 3015              	.LBB229:
  48:src/main.cpp  ****   if(cmd_msg.mode == cmd_msg.DRIVE_MODE_AUTO){
  49:src/main.cpp  **** 
  50:src/main.cpp  ****   }else if(cmd_msg.mode == cmd_msg.DRIVE_MODE_PIVOT){
 3016              		.loc 13 50 0
 3017 0008 90F82830 		ldrb	r3, [r0, #40]	@ zero_extendqisi2
 3018              	.LBE229:
 3019              	.LBE228:
  47:src/main.cpp  ****   if(cmd_msg.mode == cmd_msg.DRIVE_MODE_AUTO){
 3020              		.loc 13 47 0
 3021 000c 0546     		mov	r5, r0
 3022              	.LBB231:
 3023              	.LBB230:
 3024              		.loc 13 50 0
 3025 000e 012B     		cmp	r3, #1
 3026 0010 2ED1     		bne	.L156
 3027              	.LVL347:
 3028              	.LBE230:
 3029              	.LBE231:
 3030              	.LBB232:
 3031              	.LBB233:
  51:src/main.cpp  ****     front_right->setReference(cmd_msg.speed);
 3032              		.loc 13 51 0
 3033 0012 184C     		ldr	r4, .L158
 3034 0014 296A     		ldr	r1, [r5, #32]	@ float
 3035 0016 2068     		ldr	r0, [r4]
 3036              	.LVL348:
 3037 0018 0368     		ldr	r3, [r0]
 3038 001a 5B69     		ldr	r3, [r3, #20]
 3039 001c 9847     		blx	r3
 3040              	.LVL349:
  52:src/main.cpp  ****     front_left->setReference(cmd_msg.speed);
 3041              		.loc 13 52 0
 3042 001e 6068     		ldr	r0, [r4, #4]
 3043 0020 296A     		ldr	r1, [r5, #32]	@ float
 3044 0022 0368     		ldr	r3, [r0]
 3045 0024 5B69     		ldr	r3, [r3, #20]
 3046 0026 9847     		blx	r3
 3047              	.LVL350:
  53:src/main.cpp  ****     rear_right->setReference(cmd_msg.speed);
 3048              		.loc 13 53 0
 3049 0028 A068     		ldr	r0, [r4, #8]
 3050 002a 296A     		ldr	r1, [r5, #32]	@ float
 3051 002c 0368     		ldr	r3, [r0]
 3052 002e 5B69     		ldr	r3, [r3, #20]
 3053 0030 9847     		blx	r3
 3054              	.LVL351:
  54:src/main.cpp  ****     rear_left->setReference(cmd_msg.speed);
 3055              		.loc 13 54 0
 3056 0032 E068     		ldr	r0, [r4, #12]
 3057 0034 296A     		ldr	r1, [r5, #32]	@ float
 3058 0036 0368     		ldr	r3, [r0]
 3059 0038 5B69     		ldr	r3, [r3, #20]
 3060 003a 9847     		blx	r3
 3061              	.LVL352:
  55:src/main.cpp  ****     float h = (cmd_msg.heading_angle+1.0)*90;             //[0-2]*90 = [0-180]
 3062              		.loc 13 55 0
 3063 003c A869     		ldr	r0, [r5, #24]	@ float
 3064 003e FFF7FEFF 		bl	__aeabi_f2d
 3065              	.LVL353:
 3066 0042 0022     		movs	r2, #0
 3067 0044 0C4B     		ldr	r3, .L158+4
 3068 0046 FFF7FEFF 		bl	__aeabi_dadd
 3069              	.LVL354:
 3070 004a 0022     		movs	r2, #0
 3071 004c 0B4B     		ldr	r3, .L158+8
 3072 004e FFF7FEFF 		bl	__aeabi_dmul
 3073              	.LVL355:
 3074 0052 FFF7FEFF 		bl	__aeabi_d2f
 3075              	.LVL356:
 3076 0056 0546     		mov	r5, r0
 3077              	.LVL357:
  56:src/main.cpp  ****     servo_left->setReference(h);
 3078              		.loc 13 56 0
 3079 0058 2069     		ldr	r0, [r4, #16]
 3080              	.LVL358:
 3081 005a 2946     		mov	r1, r5
 3082 005c 0368     		ldr	r3, [r0]
 3083 005e 5B69     		ldr	r3, [r3, #20]
 3084 0060 9847     		blx	r3
 3085              	.LVL359:
  57:src/main.cpp  ****     servo_right->setReference(h);
 3086              		.loc 13 57 0
 3087 0062 6069     		ldr	r0, [r4, #20]
 3088 0064 2946     		mov	r1, r5
 3089              	.LBE233:
 3090              	.LBE232:
  58:src/main.cpp  **** 
  59:src/main.cpp  ****   }else if(cmd_msg.mode == cmd_msg.DRIVE_MODE_SPIN){
  60:src/main.cpp  **** 
  61:src/main.cpp  ****   }else if(cmd_msg.mode == cmd_msg.DRIVE_MODE_SIDEWAYS){
  62:src/main.cpp  **** 
  63:src/main.cpp  ****   }
  64:src/main.cpp  **** }
 3091              		.loc 13 64 0
 3092 0066 BDE87040 		pop	{r4, r5, r6, lr}
 3093              	.LCFI30:
 3094              		.cfi_remember_state
 3095              		.cfi_restore 14
 3096              		.cfi_restore 6
 3097              		.cfi_restore 5
 3098              		.cfi_restore 4
 3099              		.cfi_def_cfa_offset 0
 3100              	.LVL360:
 3101              	.LBB235:
 3102              	.LBB234:
  57:src/main.cpp  ****     servo_right->setReference(h);
 3103              		.loc 13 57 0
 3104 006a 0368     		ldr	r3, [r0]
 3105 006c 5B69     		ldr	r3, [r3, #20]
 3106 006e 1847     		bx	r3	@ indirect register sibling call
 3107              	.LVL361:
 3108              	.L156:
 3109              	.LCFI31:
 3110              		.cfi_restore_state
 3111 0070 70BD     		pop	{r4, r5, r6, pc}
 3112              	.L159:
 3113 0072 00BF     		.align	2
 3114              	.L158:
 3115 0074 00000000 		.word	.LANCHOR1
 3116 0078 0000F03F 		.word	1072693248
 3117 007c 00805640 		.word	1079410688
 3118              	.LBE234:
 3119              	.LBE235:
 3120              		.cfi_endproc
 3121              	.LFE199:
 3122              		.fnend
 3124              		.global	__aeabi_fcmplt
 3125              		.section	.text._ZN3ros3Msg19serializeAvrFloat64EPhf,"axG",%progbits,_ZN3ros3Msg19serializeAvrFloat
 3126              		.align	1
 3127              		.weak	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3128              		.thumb
 3129              		.thumb_func
 3131              	_ZN3ros3Msg19serializeAvrFloat64EPhf:
 3132              		.fnstart
 3133              	.LFB29:
 3134              		.file 14 "./lib/ros_lib/ros/msg.h"
   1:./lib/ros_lib/ros/msg.h **** /* 
   2:./lib/ros_lib/ros/msg.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/msg.h ****  *
   4:./lib/ros_lib/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/msg.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/msg.h ****  *
   7:./lib/ros_lib/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/msg.h ****  * are met:
  10:./lib/ros_lib/ros/msg.h ****  *
  11:./lib/ros_lib/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/msg.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/msg.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/msg.h ****  *
  21:./lib/ros_lib/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/msg.h ****  */
  34:./lib/ros_lib/ros/msg.h **** 
  35:./lib/ros_lib/ros/msg.h **** #ifndef _ROS_MSG_H_
  36:./lib/ros_lib/ros/msg.h **** #define _ROS_MSG_H_
  37:./lib/ros_lib/ros/msg.h **** 
  38:./lib/ros_lib/ros/msg.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/msg.h **** 
  40:./lib/ros_lib/ros/msg.h **** namespace ros {
  41:./lib/ros_lib/ros/msg.h **** 
  42:./lib/ros_lib/ros/msg.h **** /* Base Message Type */
  43:./lib/ros_lib/ros/msg.h **** class Msg
  44:./lib/ros_lib/ros/msg.h **** {
  45:./lib/ros_lib/ros/msg.h **** public:
  46:./lib/ros_lib/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  47:./lib/ros_lib/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  48:./lib/ros_lib/ros/msg.h ****   virtual const char * getType() = 0;
  49:./lib/ros_lib/ros/msg.h ****   virtual const char * getMD5() = 0;
  50:./lib/ros_lib/ros/msg.h **** 
  51:./lib/ros_lib/ros/msg.h ****   /**
  52:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  53:./lib/ros_lib/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  54:./lib/ros_lib/ros/msg.h ****    *        fields, despite AVV having no native support for double.
  55:./lib/ros_lib/ros/msg.h ****    *
  56:./lib/ros_lib/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  57:./lib/ros_lib/ros/msg.h ****    * @param[in] f value to serialize.
  58:./lib/ros_lib/ros/msg.h ****    *
  59:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  60:./lib/ros_lib/ros/msg.h ****    *
  61:./lib/ros_lib/ros/msg.h ****    */
  62:./lib/ros_lib/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
 3135              		.loc 14 62 0
 3136              		.cfi_startproc
 3137              		@ args = 0, pretend = 0, frame = 0
 3138              		@ frame_needed = 0, uses_anonymous_args = 0
 3139              	.LVL362:
 3140 0000 38B5     		push	{r3, r4, r5, lr}
 3141              	.LCFI32:
 3142              		.cfi_def_cfa_offset 16
 3143              		.cfi_offset 3, -16
 3144              		.cfi_offset 4, -12
 3145              		.cfi_offset 5, -8
 3146              		.cfi_offset 14, -4
  63:./lib/ros_lib/ros/msg.h ****   {
  64:./lib/ros_lib/ros/msg.h ****     const int32_t* val = (int32_t*) &f;
  65:./lib/ros_lib/ros/msg.h ****     int32_t exp = ((*val >> 23) & 255);
 3147              		.loc 14 65 0
 3148 0002 C1F3C753 		ubfx	r3, r1, #23, #8
 3149              	.LVL363:
  62:./lib/ros_lib/ros/msg.h ****   {
 3150              		.loc 14 62 0
 3151 0006 0546     		mov	r5, r0
 3152              		.loc 14 65 0
 3153 0008 0A46     		mov	r2, r1
  62:./lib/ros_lib/ros/msg.h ****   {
 3154              		.loc 14 62 0
 3155 000a 0846     		mov	r0, r1
 3156              	.LVL364:
  66:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 3157              		.loc 14 66 0
 3158 000c 0BB1     		cbz	r3, .L161
  67:./lib/ros_lib/ros/msg.h ****     {
  68:./lib/ros_lib/ros/msg.h ****       exp += 1023 - 127;
 3159              		.loc 14 68 0
 3160 000e 03F56073 		add	r3, r3, #896
 3161              	.LVL365:
 3162              	.L161:
  69:./lib/ros_lib/ros/msg.h ****     }
  70:./lib/ros_lib/ros/msg.h **** 
  71:./lib/ros_lib/ros/msg.h ****     int32_t sig = *val;
  72:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3163              		.loc 14 72 0
 3164 0012 0021     		movs	r1, #0
 3165              	.LVL366:
 3166 0014 2970     		strb	r1, [r5]
 3167              	.LVL367:
  73:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3168              		.loc 14 73 0
 3169 0016 6970     		strb	r1, [r5, #1]
 3170              	.LVL368:
  74:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3171              		.loc 14 74 0
 3172 0018 A970     		strb	r1, [r5, #2]
 3173              	.LVL369:
  75:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 3174              		.loc 14 75 0
 3175 001a 5101     		lsls	r1, r2, #5
 3176 001c E970     		strb	r1, [r5, #3]
 3177              	.LVL370:
  76:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 3178              		.loc 14 76 0
 3179 001e D110     		asrs	r1, r2, #3
 3180 0020 2971     		strb	r1, [r5, #4]
 3181              	.LVL371:
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 3182              		.loc 14 77 0
 3183 0022 D112     		asrs	r1, r2, #11
  78:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 3184              		.loc 14 78 0
 3185 0024 C2F3C342 		ubfx	r2, r2, #19, #4
 3186 0028 42EA0312 		orr	r2, r2, r3, lsl #4
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 3187              		.loc 14 77 0
 3188 002c 6971     		strb	r1, [r5, #5]
 3189              	.LVL372:
 3190              		.loc 14 78 0
 3191 002e AA71     		strb	r2, [r5, #6]
 3192              	.LVL373:
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
  80:./lib/ros_lib/ros/msg.h **** 
  81:./lib/ros_lib/ros/msg.h ****     // Mark negative bit as necessary.
  82:./lib/ros_lib/ros/msg.h ****     if (f < 0)
 3193              		.loc 14 82 0
 3194 0030 0021     		movs	r1, #0
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 3195              		.loc 14 79 0
 3196 0032 C3F30714 		ubfx	r4, r3, #4, #8
 3197              		.loc 14 82 0
 3198 0036 FFF7FEFF 		bl	__aeabi_fcmplt
 3199              	.LVL374:
 3200 003a 08B9     		cbnz	r0, .L162
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 3201              		.loc 14 79 0
 3202 003c EC71     		strb	r4, [r5, #7]
 3203 003e 02E0     		b	.L163
 3204              	.L162:
  83:./lib/ros_lib/ros/msg.h ****     {
  84:./lib/ros_lib/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
 3205              		.loc 14 84 0
 3206 0040 64F07F03 		orn	r3, r4, #127
 3207 0044 EB71     		strb	r3, [r5, #7]
 3208              	.L163:
  85:./lib/ros_lib/ros/msg.h ****     }
  86:./lib/ros_lib/ros/msg.h **** 
  87:./lib/ros_lib/ros/msg.h ****     return 8;
  88:./lib/ros_lib/ros/msg.h ****   }
 3209              		.loc 14 88 0
 3210 0046 0820     		movs	r0, #8
 3211 0048 38BD     		pop	{r3, r4, r5, pc}
 3212              		.cfi_endproc
 3213              	.LFE29:
 3214              		.cantunwind
 3215              		.fnend
 3217              		.section	.text._ZNK12roberto_msgs10MotorState9serializeEPh,"axG",%progbits,_ZNK12roberto_msgs10Mot
 3218              		.align	1
 3219              		.weak	_ZNK12roberto_msgs10MotorState9serializeEPh
 3220              		.thumb
 3221              		.thumb_func
 3223              	_ZNK12roberto_msgs10MotorState9serializeEPh:
 3224              		.fnstart
 3225              	.LFB194:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3226              		.loc 10 37 0
 3227              		.cfi_startproc
 3228              		@ args = 0, pretend = 0, frame = 0
 3229              		@ frame_needed = 0, uses_anonymous_args = 0
 3230              	.LVL375:
 3231 0000 70B5     		push	{r4, r5, r6, lr}
 3232              	.LCFI33:
 3233              		.cfi_def_cfa_offset 16
 3234              		.cfi_offset 4, -16
 3235              		.cfi_offset 5, -12
 3236              		.cfi_offset 6, -8
 3237              		.cfi_offset 14, -4
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3238              		.loc 10 37 0
 3239 0002 0546     		mov	r5, r0
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3240              		.loc 10 40 0
 3241 0004 0430     		adds	r0, r0, #4
 3242              	.LVL376:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3243              		.loc 10 37 0
 3244 0006 0E46     		mov	r6, r1
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3245              		.loc 10 40 0
 3246 0008 FFF7FEFF 		bl	_ZNK8std_msgs6Header9serializeEPh
 3247              	.LVL377:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 3248              		.loc 10 41 0
 3249 000c A969     		ldr	r1, [r5, #24]	@ float
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3250              		.loc 10 40 0
 3251 000e 0446     		mov	r4, r0
 3252              	.LVL378:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 3253              		.loc 10 41 0
 3254 0010 3018     		adds	r0, r6, r0
 3255              	.LVL379:
 3256 0012 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3257              	.LVL380:
 3258 0016 0444     		add	r4, r4, r0
 3259              	.LVL381:
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
 3260              		.loc 10 42 0
 3261 0018 E969     		ldr	r1, [r5, #28]	@ float
 3262 001a 3019     		adds	r0, r6, r4
 3263 001c FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3264              	.LVL382:
 3265 0020 0444     		add	r4, r4, r0
 3266              	.LVL383:
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
 3267              		.loc 10 43 0
 3268 0022 296A     		ldr	r1, [r5, #32]	@ float
 3269 0024 3019     		adds	r0, r6, r4
 3270 0026 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3271              	.LVL384:
 3272 002a 0444     		add	r4, r4, r0
 3273              	.LVL385:
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
 3274              		.loc 10 44 0
 3275 002c 696A     		ldr	r1, [r5, #36]	@ float
 3276 002e 3019     		adds	r0, r6, r4
 3277 0030 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3278              	.LVL386:
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3279              		.loc 10 45 0
 3280 0034 95F82830 		ldrb	r3, [r5, #40]	@ zero_extendqisi2
 3281 0038 2044     		add	r0, r0, r4
 3282              	.LVL387:
 3283 003a 3354     		strb	r3, [r6, r0]
 3284              	.LVL388:
  48:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3285              		.loc 10 48 0
 3286 003c 0130     		adds	r0, r0, #1
 3287              	.LVL389:
 3288 003e 70BD     		pop	{r4, r5, r6, pc}
 3289              		.cfi_endproc
 3290              	.LFE194:
 3291              		.cantunwind
 3292              		.fnend
 3294              		.section	.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf,"axG",%progbits,_ZN3ros3Msg21deserializeAv
 3295              		.align	1
 3296              		.weak	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3297              		.thumb
 3298              		.thumb_func
 3300              	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf:
 3301              		.fnstart
 3302              	.LFB30:
  89:./lib/ros_lib/ros/msg.h **** 
  90:./lib/ros_lib/ros/msg.h ****   /**
  91:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
  92:./lib/ros_lib/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
  93:./lib/ros_lib/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
  94:./lib/ros_lib/ros/msg.h ****    *
  95:./lib/ros_lib/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
  96:./lib/ros_lib/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
  97:./lib/ros_lib/ros/msg.h ****    *
  98:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  99:./lib/ros_lib/ros/msg.h ****    */
 100:./lib/ros_lib/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 3303              		.loc 14 100 0
 3304              		.cfi_startproc
 3305              		@ args = 0, pretend = 0, frame = 0
 3306              		@ frame_needed = 0, uses_anonymous_args = 0
 3307              	.LVL390:
 3308 0000 30B5     		push	{r4, r5, lr}
 3309              	.LCFI34:
 3310              		.cfi_def_cfa_offset 12
 3311              		.cfi_offset 4, -12
 3312              		.cfi_offset 5, -8
 3313              		.cfi_offset 14, -4
 101:./lib/ros_lib/ros/msg.h ****   {
 102:./lib/ros_lib/ros/msg.h ****     uint32_t* val = (uint32_t*)f;
 103:./lib/ros_lib/ros/msg.h ****     inbuffer += 3;
 104:./lib/ros_lib/ros/msg.h **** 
 105:./lib/ros_lib/ros/msg.h ****     // Copy truncated mantissa.
 106:./lib/ros_lib/ros/msg.h ****     *val = ((uint32_t)(*(inbuffer++)) >> 5 & 0x07);
 3314              		.loc 14 106 0
 3315 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 3316 0004 5B09     		lsrs	r3, r3, #5
 3317 0006 0B60     		str	r3, [r1]
 3318              	.LVL391:
 107:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 3319              		.loc 14 107 0
 3320 0008 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 3321 000a 43EAC203 		orr	r3, r3, r2, lsl #3
 3322 000e 0B60     		str	r3, [r1]
 3323              	.LVL392:
 108:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 3324              		.loc 14 108 0
 3325 0010 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 3326 0012 43EAC222 		orr	r2, r3, r2, lsl #11
 3327 0016 0A60     		str	r2, [r1]
 109:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 3328              		.loc 14 109 0
 3329 0018 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 3330 001a DB04     		lsls	r3, r3, #19
 3331 001c 03F4F003 		and	r3, r3, #7864320
 3332 0020 1343     		orrs	r3, r3, r2
 3333 0022 0B60     		str	r3, [r1]
 3334              	.LVL393:
 110:./lib/ros_lib/ros/msg.h **** 
 111:./lib/ros_lib/ros/msg.h ****     // Copy truncated exponent.
 112:./lib/ros_lib/ros/msg.h ****     uint32_t exp = ((uint32_t)(*(inbuffer++)) & 0xf0)>>4;
 113:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 3335              		.loc 14 113 0
 3336 0024 C479     		ldrb	r4, [r0, #7]	@ zero_extendqisi2
 112:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 3337              		.loc 14 112 0
 3338 0026 8579     		ldrb	r5, [r0, #6]	@ zero_extendqisi2
 3339              	.LVL394:
 3340              		.loc 14 113 0
 3341 0028 2401     		lsls	r4, r4, #4
 3342 002a 04F4FE62 		and	r2, r4, #2032
 3343              	.LVL395:
 114:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 3344              		.loc 14 114 0
 3345 002e 52EA1512 		orrs	r2, r2, r5, lsr #4
 3346              	.LVL396:
 115:./lib/ros_lib/ros/msg.h ****     {
 116:./lib/ros_lib/ros/msg.h ****       *val |= ((exp) - 1023 + 127) << 23;
 3347              		.loc 14 116 0
 3348 0032 1EBF     		ittt	ne
 3349 0034 A2F56072 		subne	r2, r2, #896
 3350              	.LVL397:
 3351 0038 43EAC253 		orrne	r3, r3, r2, lsl #23
 3352 003c 0B60     		strne	r3, [r1]
 3353              	.LVL398:
 117:./lib/ros_lib/ros/msg.h ****     }  
 118:./lib/ros_lib/ros/msg.h **** 
 119:./lib/ros_lib/ros/msg.h ****     // Copy negative sign.
 120:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0x80) << 24;
 3354              		.loc 14 120 0
 3355 003e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 121:./lib/ros_lib/ros/msg.h **** 
 122:./lib/ros_lib/ros/msg.h ****     return 8;
 123:./lib/ros_lib/ros/msg.h ****   }
 3356              		.loc 14 123 0
 3357 0040 0820     		movs	r0, #8
 3358              	.LVL399:
 120:./lib/ros_lib/ros/msg.h **** 
 3359              		.loc 14 120 0
 3360 0042 23F07F02 		bic	r2, r3, #127
 3361 0046 0B68     		ldr	r3, [r1]
 3362 0048 43EA0263 		orr	r3, r3, r2, lsl #24
 3363 004c 0B60     		str	r3, [r1]
 3364              		.loc 14 123 0
 3365 004e 30BD     		pop	{r4, r5, pc}
 3366              		.cfi_endproc
 3367              	.LFE30:
 3368              		.cantunwind
 3369              		.fnend
 3371              		.section	.text._ZN12roberto_msgs10MotorState11deserializeEPh,"axG",%progbits,_ZN12roberto_msgs10Mo
 3372              		.align	1
 3373              		.weak	_ZN12roberto_msgs10MotorState11deserializeEPh
 3374              		.thumb
 3375              		.thumb_func
 3377              	_ZN12roberto_msgs10MotorState11deserializeEPh:
 3378              		.fnstart
 3379              	.LFB195:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3380              		.loc 10 50 0
 3381              		.cfi_startproc
 3382              		@ args = 0, pretend = 0, frame = 0
 3383              		@ frame_needed = 0, uses_anonymous_args = 0
 3384              	.LVL400:
 3385 0000 70B5     		push	{r4, r5, r6, lr}
 3386              	.LCFI35:
 3387              		.cfi_def_cfa_offset 16
 3388              		.cfi_offset 4, -16
 3389              		.cfi_offset 5, -12
 3390              		.cfi_offset 6, -8
 3391              		.cfi_offset 14, -4
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3392              		.loc 10 50 0
 3393 0002 0546     		mov	r5, r0
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3394              		.loc 10 53 0
 3395 0004 0430     		adds	r0, r0, #4
 3396              	.LVL401:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3397              		.loc 10 50 0
 3398 0006 0E46     		mov	r6, r1
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3399              		.loc 10 53 0
 3400 0008 FFF7FEFF 		bl	_ZN8std_msgs6Header11deserializeEPh
 3401              	.LVL402:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 3402              		.loc 10 54 0
 3403 000c 05F11801 		add	r1, r5, #24
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3404              		.loc 10 53 0
 3405 0010 0446     		mov	r4, r0
 3406              	.LVL403:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 3407              		.loc 10 54 0
 3408 0012 3018     		adds	r0, r6, r0
 3409              	.LVL404:
 3410 0014 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3411              	.LVL405:
 3412 0018 0444     		add	r4, r4, r0
 3413              	.LVL406:
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
 3414              		.loc 10 55 0
 3415 001a 05F11C01 		add	r1, r5, #28
 3416 001e 3019     		adds	r0, r6, r4
 3417 0020 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3418              	.LVL407:
 3419 0024 0444     		add	r4, r4, r0
 3420              	.LVL408:
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
 3421              		.loc 10 56 0
 3422 0026 05F12001 		add	r1, r5, #32
 3423 002a 3019     		adds	r0, r6, r4
 3424 002c FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3425              	.LVL409:
 3426 0030 0444     		add	r4, r4, r0
 3427              	.LVL410:
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
 3428              		.loc 10 57 0
 3429 0032 05F12401 		add	r1, r5, #36
 3430 0036 3019     		adds	r0, r6, r4
 3431 0038 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3432              	.LVL411:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3433              		.loc 10 58 0
 3434 003c 2044     		add	r0, r0, r4
 3435              	.LVL412:
 3436 003e 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3437              		.loc 10 61 0
 3438 0040 0130     		adds	r0, r0, #1
 3439              	.LVL413:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3440              		.loc 10 58 0
 3441 0042 85F82830 		strb	r3, [r5, #40]
 3442              	.LVL414:
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3443              		.loc 10 61 0
 3444 0046 70BD     		pop	{r4, r5, r6, pc}
 3445              		.cfi_endproc
 3446              	.LFE195:
 3447              		.cantunwind
 3448              		.fnend
 3450              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh,"axG",%progbits,_ZN3r
 3451              		.align	1
 3452              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 3453              		.thumb
 3454              		.thumb_func
 3456              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:
 3457              		.fnstart
 3458              	.LFB238:
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 3459              		.loc 12 72 0
 3460              		.cfi_startproc
 3461              		@ args = 0, pretend = 0, frame = 0
 3462              		@ frame_needed = 0, uses_anonymous_args = 0
 3463              	.LVL415:
 3464 0000 70B5     		push	{r4, r5, r6, lr}
 3465              	.LCFI36:
 3466              		.cfi_def_cfa_offset 16
 3467              		.cfi_offset 4, -16
 3468              		.cfi_offset 5, -12
 3469              		.cfi_offset 6, -8
 3470              		.cfi_offset 14, -4
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 3471              		.loc 12 72 0
 3472 0002 0546     		mov	r5, r0
  73:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 3473              		.loc 12 73 0
 3474 0004 00F10C04 		add	r4, r0, #12
 3475 0008 2046     		mov	r0, r4
 3476              	.LVL416:
 3477 000a FFF7FEFF 		bl	_ZN12roberto_msgs10MotorState11deserializeEPh
 3478              	.LVL417:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 3479              		.loc 12 74 0
 3480 000e AB6B     		ldr	r3, [r5, #56]
 3481 0010 2046     		mov	r0, r4
  75:./lib/ros_lib/ros/subscriber.h **** 
 3482              		.loc 12 75 0
 3483 0012 BDE87040 		pop	{r4, r5, r6, lr}
 3484              	.LCFI37:
 3485              		.cfi_restore 14
 3486              		.cfi_restore 6
 3487              		.cfi_restore 5
 3488              		.cfi_restore 4
 3489              		.cfi_def_cfa_offset 0
 3490              	.LVL418:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 3491              		.loc 12 74 0
 3492 0016 1847     		bx	r3	@ indirect register sibling call
 3493              	.LVL419:
 3494              		.cfi_endproc
 3495              	.LFE238:
 3496              		.cantunwind
 3497              		.fnend
 3499              		.section	.text._ZN15ArduinoHardware4initEv,"axG",%progbits,_ZN15ArduinoHardware4initEv,comdat
 3500              		.align	1
 3501              		.weak	_ZN15ArduinoHardware4initEv
 3502              		.thumb
 3503              		.thumb_func
 3505              	_ZN15ArduinoHardware4initEv:
 3506              		.fnstart
 3507              	.LFB144:
 3508              		.file 15 "./lib/ros_lib/ArduinoHardware.h"
   1:./lib/ros_lib/ArduinoHardware.h **** /* 
   2:./lib/ros_lib/ArduinoHardware.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ArduinoHardware.h ****  *
   4:./lib/ros_lib/ArduinoHardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ArduinoHardware.h ****  * All rights reserved.
   6:./lib/ros_lib/ArduinoHardware.h ****  *
   7:./lib/ros_lib/ArduinoHardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ArduinoHardware.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ArduinoHardware.h ****  * are met:
  10:./lib/ros_lib/ArduinoHardware.h ****  *
  11:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ArduinoHardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ArduinoHardware.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ArduinoHardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ArduinoHardware.h ****  *    with the distribution.
  17:./lib/ros_lib/ArduinoHardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ArduinoHardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ArduinoHardware.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ArduinoHardware.h ****  *
  21:./lib/ros_lib/ArduinoHardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ArduinoHardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ArduinoHardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ArduinoHardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ArduinoHardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ArduinoHardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ArduinoHardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ArduinoHardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ArduinoHardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ArduinoHardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ArduinoHardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ArduinoHardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ArduinoHardware.h ****  */
  34:./lib/ros_lib/ArduinoHardware.h **** 
  35:./lib/ros_lib/ArduinoHardware.h **** #ifndef ROS_ARDUINO_HARDWARE_H_
  36:./lib/ros_lib/ArduinoHardware.h **** #define ROS_ARDUINO_HARDWARE_H_
  37:./lib/ros_lib/ArduinoHardware.h **** 
  38:./lib/ros_lib/ArduinoHardware.h **** #include "stm32f10x.h"
  39:./lib/ros_lib/ArduinoHardware.h **** #include "stm32_time.h"
  40:./lib/ros_lib/ArduinoHardware.h **** #include "led.h"
  41:./lib/ros_lib/ArduinoHardware.h **** 
  42:./lib/ros_lib/ArduinoHardware.h **** #define BUFFER_SIZE 512
  43:./lib/ros_lib/ArduinoHardware.h **** 
  44:./lib/ros_lib/ArduinoHardware.h **** 
  45:./lib/ros_lib/ArduinoHardware.h **** volatile uint16_t USART_FIFO[BUFFER_SIZE];
  46:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTIN;
  47:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTOUT;
  48:./lib/ros_lib/ArduinoHardware.h **** 
  49:./lib/ros_lib/ArduinoHardware.h **** class ArduinoHardware {
  50:./lib/ros_lib/ArduinoHardware.h ****   public:
  51:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(USART_TypeDef* io , long baud= 115200){
  52:./lib/ros_lib/ArduinoHardware.h ****       iostream = io;
  53:./lib/ros_lib/ArduinoHardware.h ****       baud_ = baud;
  54:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  55:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  56:./lib/ros_lib/ArduinoHardware.h ****     }
  57:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware()
  58:./lib/ros_lib/ArduinoHardware.h ****     {
  59:./lib/ros_lib/ArduinoHardware.h ****       /* Leonardo support */
  60:./lib/ros_lib/ArduinoHardware.h ****       iostream = USART1;
  61:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  63:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  64:./lib/ros_lib/ArduinoHardware.h ****     }
  65:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(ArduinoHardware& h){
  66:./lib/ros_lib/ArduinoHardware.h ****       this->iostream = iostream;
  67:./lib/ros_lib/ArduinoHardware.h ****       this->baud_ = h.baud_;
  68:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  69:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  70:./lib/ros_lib/ArduinoHardware.h ****     }
  71:./lib/ros_lib/ArduinoHardware.h ****   
  72:./lib/ros_lib/ArduinoHardware.h ****     void setBaud(long baud){
  73:./lib/ros_lib/ArduinoHardware.h ****       this->baud_= baud;
  74:./lib/ros_lib/ArduinoHardware.h ****     }
  75:./lib/ros_lib/ArduinoHardware.h ****   
  76:./lib/ros_lib/ArduinoHardware.h ****     int getBaud(){return baud_;}
  77:./lib/ros_lib/ArduinoHardware.h **** 
  78:./lib/ros_lib/ArduinoHardware.h ****     void init(){
 3509              		.loc 15 78 0
 3510              		.cfi_startproc
 3511              		@ args = 0, pretend = 0, frame = 24
 3512              		@ frame_needed = 0, uses_anonymous_args = 0
 3513              	.LVL420:
 3514 0000 70B5     		push	{r4, r5, r6, lr}
 3515              		.save {r4, r5, r6, lr}
 3516              	.LCFI38:
 3517              		.cfi_def_cfa_offset 16
 3518              		.cfi_offset 4, -16
 3519              		.cfi_offset 5, -12
 3520              		.cfi_offset 6, -8
 3521              		.cfi_offset 14, -4
 3522 0002 0446     		mov	r4, r0
 3523              		.pad #24
 3524 0004 86B0     		sub	sp, sp, #24
 3525              	.LCFI39:
 3526              		.cfi_def_cfa_offset 40
  79:./lib/ros_lib/ArduinoHardware.h ****       USART_InitTypeDef usart1_init_struct;
  80:./lib/ros_lib/ArduinoHardware.h ****       /* Bit configuration structure for GPIOA PIN9 and PIN10 */
  81:./lib/ros_lib/ArduinoHardware.h ****       GPIO_InitTypeDef gpioa_init_struct;
  82:./lib/ros_lib/ArduinoHardware.h **** 
  83:./lib/ros_lib/ArduinoHardware.h ****       /* Enalbe clock for USART1, AFIO and GPIOA */
  84:./lib/ros_lib/ArduinoHardware.h ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2Periph_AFIO | 
  85:./lib/ros_lib/ArduinoHardware.h ****                            RCC_APB2Periph_GPIOA, ENABLE);
  86:./lib/ros_lib/ArduinoHardware.h ****                             
  87:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Tx */
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_9;
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  90:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
  91:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3527              		.loc 15 91 0
 3528 0006 214D     		ldr	r5, .L176
  85:./lib/ros_lib/ArduinoHardware.h ****                             
 3529              		.loc 15 85 0
 3530 0008 0121     		movs	r1, #1
 3531 000a 44F20500 		movw	r0, #16389
 3532              	.LVL421:
 3533 000e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 3534              	.LVL422:
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 3535              		.loc 15 88 0
 3536 0012 4FF40073 		mov	r3, #512
 3537 0016 ADF80430 		strh	r3, [sp, #4]	@ movhi
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 3538              		.loc 15 89 0
 3539 001a 0326     		movs	r6, #3
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3540              		.loc 15 90 0
 3541 001c 1823     		movs	r3, #24
 3542              		.loc 15 91 0
 3543 001e 01A9     		add	r1, sp, #4
 3544 0020 2846     		mov	r0, r5
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3545              		.loc 15 90 0
 3546 0022 8DF80730 		strb	r3, [sp, #7]
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 3547              		.loc 15 89 0
 3548 0026 8DF80660 		strb	r6, [sp, #6]
 3549              		.loc 15 91 0
 3550 002a FFF7FEFF 		bl	GPIO_Init
 3551              	.LVL423:
  92:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
  93:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_10;
 3552              		.loc 15 93 0
 3553 002e 4FF48063 		mov	r3, #1024
 3554 0032 ADF80430 		strh	r3, [sp, #4]	@ movhi
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  95:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 3555              		.loc 15 95 0
 3556 0036 0423     		movs	r3, #4
  96:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3557              		.loc 15 96 0
 3558 0038 0DEB0301 		add	r1, sp, r3
 3559 003c 2846     		mov	r0, r5
  95:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3560              		.loc 15 95 0
 3561 003e 8DF80730 		strb	r3, [sp, #7]
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 3562              		.loc 15 94 0
 3563 0042 8DF80660 		strb	r6, [sp, #6]
 3564              		.loc 15 96 0
 3565 0046 FFF7FEFF 		bl	GPIO_Init
 3566              	.LVL424:
  97:./lib/ros_lib/ArduinoHardware.h **** 
  98:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 */
  99:./lib/ros_lib/ArduinoHardware.h ****       USART_Cmd(iostream, ENABLE);  
 3567              		.loc 15 99 0
 3568 004a 2068     		ldr	r0, [r4]
 3569 004c 0121     		movs	r1, #1
 3570 004e FFF7FEFF 		bl	USART_Cmd
 3571              	.LVL425:
 100:./lib/ros_lib/ArduinoHardware.h ****       /* Baud rate 115200, 8-bit data, One stop bit
 101:./lib/ros_lib/ArduinoHardware.h ****       * No parity, Do both Rx and Tx, No HW flow control
 102:./lib/ros_lib/ArduinoHardware.h ****       */
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_BaudRate = baud_;   
 3572              		.loc 15 103 0
 3573 0052 6368     		ldr	r3, [r4, #4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 3574              		.loc 15 107 0
 3575 0054 0C22     		movs	r2, #12
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 3576              		.loc 15 103 0
 3577 0056 0293     		str	r3, [sp, #8]
 108:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 109:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 110:./lib/ros_lib/ArduinoHardware.h ****       USART_Init(iostream, &usart1_init_struct);
 3578              		.loc 15 110 0
 3579 0058 02A9     		add	r1, sp, #8
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 3580              		.loc 15 104 0
 3581 005a 0023     		movs	r3, #0
 3582              		.loc 15 110 0
 3583 005c 2068     		ldr	r0, [r4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 3584              		.loc 15 104 0
 3585 005e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 3586              		.loc 15 105 0
 3587 0062 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 3588              		.loc 15 106 0
 3589 0066 ADF81030 		strh	r3, [sp, #16]	@ movhi
 108:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 3590              		.loc 15 108 0
 3591 006a ADF81430 		strh	r3, [sp, #20]	@ movhi
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 3592              		.loc 15 107 0
 3593 006e ADF81220 		strh	r2, [sp, #18]	@ movhi
 3594              		.loc 15 110 0
 3595 0072 FFF7FEFF 		bl	USART_Init
 3596              	.LVL426:
 111:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 112:./lib/ros_lib/ArduinoHardware.h ****       USART_ITConfig(iostream, USART_IT_RXNE, ENABLE);
 3597              		.loc 15 112 0
 3598 0076 0122     		movs	r2, #1
 3599 0078 40F22551 		movw	r1, #1317
 3600 007c 2068     		ldr	r0, [r4]
 3601 007e FFF7FEFF 		bl	USART_ITConfig
 3602              	.LVL427:
 3603              	.LBB236:
 3604              	.LBB237:
 3605              		.file 16 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
   1:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**************************************************************************//**
   2:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @file     core_cm3.h
   3:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @version  V1.30
   5:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @date     30. October 2009
   6:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
   7:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @note
   8:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  10:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  11:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  15:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  16:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  22:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
  23:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  24:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CORE_H__
  26:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  27:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  29:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 10: \n
  31:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  34:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 530: \n
  35:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     return(__regBasePri); \n
  36:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * . 
  38:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 550: \n
  39:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  42:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 754: \n
  43:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  46:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 750: \n
  47:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  50:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 528: \n
  51:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  54:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 751: \n
  55:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  58:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  60:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  61:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  62:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -save */
  63:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e10  */
  64:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e530 */
  65:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e550 */
  66:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e754 */
  67:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e750 */
  68:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e528 */
  69:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e751 */
  70:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  71:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  72:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - CMSIS version number
  75:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
  78:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  79:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  80:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
  81:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  extern "C" {
  82:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif 
  83:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  84:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  88:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  90:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  92:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__ICCARM__)
  93:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
  95:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  96:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  97:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * IO definitions
 106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
 111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                 Register Abstraction
 122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  @{
 125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
 126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }  NVIC_Type;                                               
 148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SCB_Type;                                                
 177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                                      
 314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for SysTick
 363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SysTick_Type;
 372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  union  
 413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   {
 414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } ITM_Type;                                                
 445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 505:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0;
 506:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 510:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1;
 511:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 512:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } InterruptType_Type;
 513:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 514:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 518:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 522:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 525:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 529:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 530:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 534:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 535:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 536:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 537:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } MPU_Type;                                                
 549:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 550:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Type Register */
 551:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 554:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 557:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 560:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Control Register */
 561:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 564:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 567:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 570:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Number Register */
 571:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 574:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Base Address Register */
 575:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 578:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 581:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 584:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 588:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 591:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 594:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 597:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 600:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 603:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 606:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 609:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 612:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 614:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 615:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 616:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 619:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 620:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 621:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 622:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } CoreDebug_Type;
 627:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 628:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 632:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 635:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 638:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 641:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 644:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 647:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 650:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 653:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 656:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 659:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 662:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 665:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 669:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 672:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 676:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 679:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 682:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 685:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 688:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 691:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 694:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 697:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 700:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 703:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 706:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 709:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 713:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 714:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 722:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 729:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 733:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 734:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 736:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 737:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 738:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 740:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 741:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 745:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 749:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 753:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 757:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 758:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 759:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 760:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 762:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ARM armcc specific functions */
 764:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 765:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 768:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                             __nop
 769:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFI                             __wfi
 770:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFE                             __wfe
 771:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __SEV                             __sev
 772:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __REV                             __rev
 776:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __RBIT                            __rbit
 777:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 784:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 785:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 790:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 791:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 792:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 794:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
 795:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 796:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
 797:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 798:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 800:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 801:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 803:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 805:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 808:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 810:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 811:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 813:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
 814:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 815:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
 817:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 818:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 820:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 821:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 823:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 825:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 828:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 830:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 831:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 833:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 834:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 835:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 836:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 838:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 840:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 841:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 843:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 844:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 845:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 846:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 848:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 850:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 851:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 853:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 854:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 856:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 858:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __CLREX(void);
 859:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 860:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 861:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 863:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 864:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 865:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 866:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 867:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 869:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 870:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 872:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 873:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 874:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 875:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 876:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 878:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 879:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 881:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 882:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 883:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 885:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 887:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 888:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 890:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   priMask  PriMask
 891:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 892:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 894:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 896:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 897:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 899:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 900:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 901:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 902:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 903:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 905:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 906:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 908:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask faultMask value
 909:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 910:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
 911:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 912:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 914:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 915:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
 916:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
 917:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
 918:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 919:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
 920:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 921:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 923:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 924:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
 925:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 926:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
 927:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 928:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
 929:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 930:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 932:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 934:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 935:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 937:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 939:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CLREX                           __clrex
 940:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 941:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 942:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 944:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 945:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 946:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 947:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 948:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 950:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regBasePri);
 952:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 953:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 954:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 955:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 957:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 958:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 959:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 960:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 961:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 963:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 966:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 967:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 968:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 970:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 971:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 972:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 974:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 976:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regPriMask);
 978:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 979:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 980:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 981:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 983:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
 984:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 985:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 987:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 989:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regPriMask = (priMask);
 991:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 992:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 993:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 994:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 996:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 997:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 998:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 999:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1000:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1002:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regFaultMask);
1004:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1005:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1006:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1007:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1009:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1011:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1012:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1013:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1015:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1018:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1019:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1020:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1021:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1022:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
1023:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1024:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1025:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1026:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1028:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regControl);
1030:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1031:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1032:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1033:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1034:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1035:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1036:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1037:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1038:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1039:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1041:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regControl = control;
1043:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1044:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1045:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1047:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1048:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1049:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* IAR iccarm specific functions */
1051:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1052:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1055:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1058:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1064:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1076:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1077:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1078:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1080:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1081:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1082:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1083:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1084:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1086:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1087:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1089:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1091:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1094:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1096:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1097:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1099:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* GNU gcc specific functions */
1203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
1261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
1263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
1265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
1270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
1272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
1274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
1281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
1290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
1299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
1301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** * 
1316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** *  @return Control value
1317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in integer value
1338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* TASKING carm specific functions */
1437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*
1439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Including the CMSIS ones.
1442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
1445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   Core  Function Interface containing:
1449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core NVIC Functions
1450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core SysTick Functions
1451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core Reset Functions
1452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
1453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@{*/
1454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t reg_value;
1471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   
1473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return priority grouping field 
1485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 3606              		.loc 16 1504 0
 3607 0082 034B     		ldr	r3, .L176+4
 3608 0084 2022     		movs	r2, #32
 3609 0086 5A60     		str	r2, [r3, #4]
 3610              	.LVL428:
 3611              	.LBE237:
 3612              	.LBE236:
 113:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 global interrupt */
 114:./lib/ros_lib/ArduinoHardware.h ****       NVIC_EnableIRQ(USART1_IRQn);
 115:./lib/ros_lib/ArduinoHardware.h ****     }
 3613              		.loc 15 115 0
 3614 0088 06B0     		add	sp, sp, #24
 3615              	.LCFI40:
 3616              		.cfi_def_cfa_offset 16
 3617              		@ sp needed
 3618 008a 70BD     		pop	{r4, r5, r6, pc}
 3619              	.LVL429:
 3620              	.L177:
 3621              		.align	2
 3622              	.L176:
 3623 008c 00080140 		.word	1073809408
 3624 0090 00E100E0 		.word	-536813312
 3625              		.cfi_endproc
 3626              	.LFE144:
 3627              		.fnend
 3629              		.text
 3630              		.align	1
 3631              		.global	USART1_IRQHandler
 3632              		.thumb
 3633              		.thumb_func
 3635              	USART1_IRQHandler:
 3636              		.fnstart
 3637              	.LFB148:
 116:./lib/ros_lib/ArduinoHardware.h **** 
 117:./lib/ros_lib/ArduinoHardware.h ****     int read(){
 118:./lib/ros_lib/ArduinoHardware.h ****       if(USART_CNTIN == USART_CNTOUT)
 119:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 120:./lib/ros_lib/ArduinoHardware.h ****       
 121:./lib/ros_lib/ArduinoHardware.h ****       int returnVal = USART_FIFO[USART_CNTOUT];
 122:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 123:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 124:./lib/ros_lib/ArduinoHardware.h ****     }
 125:./lib/ros_lib/ArduinoHardware.h **** 
 126:./lib/ros_lib/ArduinoHardware.h ****     void write(uint8_t* data, int length){
 127:./lib/ros_lib/ArduinoHardware.h ****       for(int i=0; i<length; i++){
 128:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 129:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 130:./lib/ros_lib/ArduinoHardware.h ****       }
 131:./lib/ros_lib/ArduinoHardware.h ****     }
 132:./lib/ros_lib/ArduinoHardware.h **** 
 133:./lib/ros_lib/ArduinoHardware.h ****     uint32_t time(){
 134:./lib/ros_lib/ArduinoHardware.h ****       return millis();
 135:./lib/ros_lib/ArduinoHardware.h ****     }
 136:./lib/ros_lib/ArduinoHardware.h **** 
 137:./lib/ros_lib/ArduinoHardware.h ****   protected:
 138:./lib/ros_lib/ArduinoHardware.h ****     USART_TypeDef* iostream;
 139:./lib/ros_lib/ArduinoHardware.h ****     long baud_;
 140:./lib/ros_lib/ArduinoHardware.h **** 
 141:./lib/ros_lib/ArduinoHardware.h **** };
 142:./lib/ros_lib/ArduinoHardware.h **** 
 143:./lib/ros_lib/ArduinoHardware.h **** 
 144:./lib/ros_lib/ArduinoHardware.h **** 
 145:./lib/ros_lib/ArduinoHardware.h **** extern "C"{
 146:./lib/ros_lib/ArduinoHardware.h ****   void USART1_IRQHandler(void){
 3638              		.loc 15 146 0
 3639              		.cfi_startproc
 3640              		@ args = 0, pretend = 0, frame = 0
 3641              		@ frame_needed = 0, uses_anonymous_args = 0
 3642 0080 38B5     		push	{r3, r4, r5, lr}
 3643              		.save {r3, r4, r5, lr}
 3644              	.LCFI41:
 3645              		.cfi_def_cfa_offset 16
 3646              		.cfi_offset 3, -16
 3647              		.cfi_offset 4, -12
 3648              		.cfi_offset 5, -8
 3649              		.cfi_offset 14, -4
 147:./lib/ros_lib/ArduinoHardware.h **** 
 148:./lib/ros_lib/ArduinoHardware.h ****     if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET 
 3650              		.loc 15 148 0
 3651 0082 40F22551 		movw	r1, #1317
 3652 0086 0F48     		ldr	r0, .L185
 3653 0088 FFF7FEFF 		bl	USART_GetITStatus
 3654              	.LVL430:
 149:./lib/ros_lib/ArduinoHardware.h ****       && USART_CNTIN != (( USART_CNTOUT - 1 + BUFFER_SIZE) % BUFFER_SIZE)){
 3655              		.loc 15 149 0
 3656 008c 40B1     		cbz	r0, .L179
 3657              		.loc 15 149 0 is_stmt 0 discriminator 1
 3658 008e 0E4C     		ldr	r4, .L185+4
 3659 0090 A369     		ldr	r3, [r4, #24]
 3660 0092 E269     		ldr	r2, [r4, #28]
 3661 0094 03F2FF13 		addw	r3, r3, #511
 3662 0098 C3F30803 		ubfx	r3, r3, #0, #9
 3663 009c 9342     		cmp	r3, r2
 3664 009e 04D1     		bne	.L180
 3665              	.L179:
 150:./lib/ros_lib/ArduinoHardware.h **** 
 151:./lib/ros_lib/ArduinoHardware.h ****       USART_FIFO[USART_CNTIN] = USART_ReceiveData(USART1);
 152:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 153:./lib/ros_lib/ArduinoHardware.h ****     }else{
 154:./lib/ros_lib/ArduinoHardware.h ****       // Should NEVER reach this point!
 155:./lib/ros_lib/ArduinoHardware.h ****       (void)USART_ReceiveData(USART1);  // Clear inerrupt flag by reading byte
 156:./lib/ros_lib/ArduinoHardware.h ****     }
 157:./lib/ros_lib/ArduinoHardware.h ****   }   
 3666              		.loc 15 157 0 is_stmt 1
 3667 00a0 BDE83840 		pop	{r3, r4, r5, lr}
 3668              	.LCFI42:
 3669              		.cfi_remember_state
 3670              		.cfi_restore 14
 3671              		.cfi_restore 5
 3672              		.cfi_restore 4
 3673              		.cfi_restore 3
 3674              		.cfi_def_cfa_offset 0
 155:./lib/ros_lib/ArduinoHardware.h ****     }
 3675              		.loc 15 155 0
 3676 00a4 0748     		ldr	r0, .L185
 3677 00a6 FFF7FEBF 		b	USART_ReceiveData
 3678              	.LVL431:
 3679              	.L180:
 3680              	.LCFI43:
 3681              		.cfi_restore_state
 151:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 3682              		.loc 15 151 0
 3683 00aa 0648     		ldr	r0, .L185
 3684 00ac E569     		ldr	r5, [r4, #28]
 3685 00ae FFF7FEFF 		bl	USART_ReceiveData
 3686              	.LVL432:
 3687 00b2 04EB4505 		add	r5, r4, r5, lsl #1
 3688 00b6 2884     		strh	r0, [r5, #32]	@ movhi
 152:./lib/ros_lib/ArduinoHardware.h ****     }else{
 3689              		.loc 15 152 0
 3690 00b8 E369     		ldr	r3, [r4, #28]
 3691 00ba 0133     		adds	r3, r3, #1
 3692 00bc C3F30803 		ubfx	r3, r3, #0, #9
 3693 00c0 E361     		str	r3, [r4, #28]
 3694 00c2 38BD     		pop	{r3, r4, r5, pc}
 3695              	.L186:
 3696              		.align	2
 3697              	.L185:
 3698 00c4 00380140 		.word	1073821696
 3699 00c8 00000000 		.word	.LANCHOR1
 3700              		.cfi_endproc
 3701              	.LFE148:
 3702              		.fnend
 3704              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc,"axG",%p
 3705              		.align	1
 3706              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 3707              		.thumb
 3708              		.thumb_func
 3710              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:
 3711              		.fnstart
 3712              	.LFB223:
 289:./lib/ros_lib/ros/node_handle.h **** 
 290:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 291:./lib/ros_lib/ros/node_handle.h ****        * Time functions
 292:./lib/ros_lib/ros/node_handle.h ****        */
 293:./lib/ros_lib/ros/node_handle.h **** 
 294:./lib/ros_lib/ros/node_handle.h ****       void requestSyncTime()
 295:./lib/ros_lib/ros/node_handle.h ****       {
 296:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 297:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_TIME, &t);
 298:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 299:./lib/ros_lib/ros/node_handle.h ****       }
 300:./lib/ros_lib/ros/node_handle.h **** 
 301:./lib/ros_lib/ros/node_handle.h ****       void syncTime(uint8_t * data)
 302:./lib/ros_lib/ros/node_handle.h ****       {
 303:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 304:./lib/ros_lib/ros/node_handle.h ****         uint32_t offset = hardware_.time() - rt_time;
 305:./lib/ros_lib/ros/node_handle.h **** 
 306:./lib/ros_lib/ros/node_handle.h ****         t.deserialize(data);
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 308:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 309:./lib/ros_lib/ros/node_handle.h **** 
 310:./lib/ros_lib/ros/node_handle.h ****         this->setNow(t.data);
 311:./lib/ros_lib/ros/node_handle.h ****         last_sync_receive_time = hardware_.time();
 312:./lib/ros_lib/ros/node_handle.h ****       }
 313:./lib/ros_lib/ros/node_handle.h **** 
 314:./lib/ros_lib/ros/node_handle.h ****       Time now()
 315:./lib/ros_lib/ros/node_handle.h ****       {
 316:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 317:./lib/ros_lib/ros/node_handle.h ****         Time current_time;
 318:./lib/ros_lib/ros/node_handle.h ****         current_time.sec = ms/1000 + sec_offset;
 319:./lib/ros_lib/ros/node_handle.h ****         current_time.nsec = (ms%1000)*1000000UL + nsec_offset;
 320:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(current_time.sec, current_time.nsec);
 321:./lib/ros_lib/ros/node_handle.h ****         return current_time;
 322:./lib/ros_lib/ros/node_handle.h ****       }
 323:./lib/ros_lib/ros/node_handle.h **** 
 324:./lib/ros_lib/ros/node_handle.h ****       void setNow( Time & new_now )
 325:./lib/ros_lib/ros/node_handle.h ****       {
 326:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 327:./lib/ros_lib/ros/node_handle.h ****         sec_offset = new_now.sec - ms/1000 - 1;
 328:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 329:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 330:./lib/ros_lib/ros/node_handle.h ****       }
 331:./lib/ros_lib/ros/node_handle.h **** 
 332:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 333:./lib/ros_lib/ros/node_handle.h ****        * Topic Management
 334:./lib/ros_lib/ros/node_handle.h ****        */
 335:./lib/ros_lib/ros/node_handle.h **** 
 336:./lib/ros_lib/ros/node_handle.h ****       /* Register a new publisher */
 337:./lib/ros_lib/ros/node_handle.h ****       bool advertise(Publisher & p)
 338:./lib/ros_lib/ros/node_handle.h ****       {
 339:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_PUBLISHERS; i++){
 340:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 341:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 342:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 343:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 344:./lib/ros_lib/ros/node_handle.h ****             return true;
 345:./lib/ros_lib/ros/node_handle.h ****           }
 346:./lib/ros_lib/ros/node_handle.h ****         }
 347:./lib/ros_lib/ros/node_handle.h ****         return false;
 348:./lib/ros_lib/ros/node_handle.h ****       }
 349:./lib/ros_lib/ros/node_handle.h **** 
 350:./lib/ros_lib/ros/node_handle.h ****       /* Register a new subscriber */
 351:./lib/ros_lib/ros/node_handle.h ****       template<typename MsgT>
 352:./lib/ros_lib/ros/node_handle.h ****       bool subscribe(Subscriber< MsgT> & s){
 353:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 354:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 355:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 356:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 357:./lib/ros_lib/ros/node_handle.h ****             return true;
 358:./lib/ros_lib/ros/node_handle.h ****           }
 359:./lib/ros_lib/ros/node_handle.h ****         }
 360:./lib/ros_lib/ros/node_handle.h ****         return false;
 361:./lib/ros_lib/ros/node_handle.h ****       }
 362:./lib/ros_lib/ros/node_handle.h **** 
 363:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Server */
 364:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 365:./lib/ros_lib/ros/node_handle.h ****       bool advertiseService(ServiceServer<MReq,MRes>& srv){
 366:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 367:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 368:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 369:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 370:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 371:./lib/ros_lib/ros/node_handle.h ****             return v;
 372:./lib/ros_lib/ros/node_handle.h ****           }
 373:./lib/ros_lib/ros/node_handle.h ****         }
 374:./lib/ros_lib/ros/node_handle.h ****         return false;
 375:./lib/ros_lib/ros/node_handle.h ****       }
 376:./lib/ros_lib/ros/node_handle.h **** 
 377:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Client */
 378:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 379:./lib/ros_lib/ros/node_handle.h ****       bool serviceClient(ServiceClient<MReq, MRes>& srv){
 380:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 381:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 382:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 383:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 384:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 385:./lib/ros_lib/ros/node_handle.h ****             return v;
 386:./lib/ros_lib/ros/node_handle.h ****           }
 387:./lib/ros_lib/ros/node_handle.h ****         }
 388:./lib/ros_lib/ros/node_handle.h ****         return false;
 389:./lib/ros_lib/ros/node_handle.h ****       }
 390:./lib/ros_lib/ros/node_handle.h **** 
 391:./lib/ros_lib/ros/node_handle.h ****       void negotiateTopics()
 392:./lib/ros_lib/ros/node_handle.h ****       {
 393:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::TopicInfo ti;
 394:./lib/ros_lib/ros/node_handle.h ****         int i;
 395:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_PUBLISHERS; i++)
 396:./lib/ros_lib/ros/node_handle.h ****         {
 397:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] != 0) // non-empty slot
 398:./lib/ros_lib/ros/node_handle.h ****           {
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = publishers[i]->id_;
 400:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 401:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 402:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 403:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 404:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 405:./lib/ros_lib/ros/node_handle.h ****           }
 406:./lib/ros_lib/ros/node_handle.h ****         }
 407:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_SUBSCRIBERS; i++)
 408:./lib/ros_lib/ros/node_handle.h ****         {
 409:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] != 0) // non-empty slot
 410:./lib/ros_lib/ros/node_handle.h ****           {
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = subscribers[i]->id_;
 412:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 413:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 414:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 415:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 416:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 417:./lib/ros_lib/ros/node_handle.h ****           }
 418:./lib/ros_lib/ros/node_handle.h ****         }
 419:./lib/ros_lib/ros/node_handle.h ****         configured_ = true;
 420:./lib/ros_lib/ros/node_handle.h ****       }
 421:./lib/ros_lib/ros/node_handle.h **** 
 422:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg * msg)
 423:./lib/ros_lib/ros/node_handle.h ****       {
 424:./lib/ros_lib/ros/node_handle.h ****         if(id >= 100 && !configured_)
 425:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 426:./lib/ros_lib/ros/node_handle.h **** 
 427:./lib/ros_lib/ros/node_handle.h ****         /* serialize message */
 428:./lib/ros_lib/ros/node_handle.h ****         uint16_t l = msg->serialize(message_out+7);
 429:./lib/ros_lib/ros/node_handle.h **** 
 430:./lib/ros_lib/ros/node_handle.h ****         /* setup the header */
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[0] = 0xff;
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 435:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 437:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 438:./lib/ros_lib/ros/node_handle.h **** 
 439:./lib/ros_lib/ros/node_handle.h ****         /* calculate checksum */
 440:./lib/ros_lib/ros/node_handle.h ****         int chk = 0;
 441:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 442:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 443:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 444:./lib/ros_lib/ros/node_handle.h ****         message_out[l++] = 255 - (chk%256);
 445:./lib/ros_lib/ros/node_handle.h **** 
 446:./lib/ros_lib/ros/node_handle.h ****         if( l <= OUTPUT_SIZE ){
 447:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 448:./lib/ros_lib/ros/node_handle.h ****           return l;
 449:./lib/ros_lib/ros/node_handle.h ****         }else{
 450:./lib/ros_lib/ros/node_handle.h ****           logerror("Message from device dropped: message larger than buffer.");
 451:./lib/ros_lib/ros/node_handle.h ****           return -1;
 452:./lib/ros_lib/ros/node_handle.h ****         }
 453:./lib/ros_lib/ros/node_handle.h ****       }
 454:./lib/ros_lib/ros/node_handle.h **** 
 455:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 456:./lib/ros_lib/ros/node_handle.h ****        * Logging
 457:./lib/ros_lib/ros/node_handle.h ****        */
 458:./lib/ros_lib/ros/node_handle.h **** 
 459:./lib/ros_lib/ros/node_handle.h ****     private:
 460:./lib/ros_lib/ros/node_handle.h ****       void log(char byte, const char * msg){
 461:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::Log l;
 462:./lib/ros_lib/ros/node_handle.h ****         l.level= byte;
 463:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 464:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 465:./lib/ros_lib/ros/node_handle.h ****       }
 466:./lib/ros_lib/ros/node_handle.h **** 
 467:./lib/ros_lib/ros/node_handle.h ****     public:
 468:./lib/ros_lib/ros/node_handle.h ****       void logdebug(const char* msg){
 469:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ROSDEBUG, msg);
 470:./lib/ros_lib/ros/node_handle.h ****       }
 471:./lib/ros_lib/ros/node_handle.h ****       void loginfo(const char * msg){
 472:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::INFO, msg);
 473:./lib/ros_lib/ros/node_handle.h ****       }
 474:./lib/ros_lib/ros/node_handle.h ****       void logwarn(const char *msg){
 475:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::WARN, msg);
 476:./lib/ros_lib/ros/node_handle.h ****       }
 477:./lib/ros_lib/ros/node_handle.h ****       void logerror(const char*msg){
 3713              		.loc 11 477 0
 3714              		.cfi_startproc
 3715              		@ args = 0, pretend = 0, frame = 16
 3716              		@ frame_needed = 0, uses_anonymous_args = 0
 3717              	.LVL433:
 3718 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 3719              		.save {lr}
 3720              		.pad #20
 3721              	.LCFI44:
 3722              		.cfi_def_cfa_offset 24
 3723              		.cfi_offset 14, -4
 3724              	.LVL434:
 3725              	.LBB244:
 3726              	.LBB245:
 3727              	.LBB246:
 3728              	.LBB247:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 3729              		.loc 3 25 0
 3730 0002 074B     		ldr	r3, .L188
 3731              	.LBE247:
 3732              	.LBE246:
 463:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3733              		.loc 11 463 0
 3734 0004 0391     		str	r1, [sp, #12]
 3735              	.LBB249:
 3736              	.LBB248:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 3737              		.loc 3 25 0
 3738 0006 0193     		str	r3, [sp, #4]
 3739              	.LVL435:
 3740              	.LBE248:
 3741              	.LBE249:
 462:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 3742              		.loc 11 462 0
 3743 0008 0323     		movs	r3, #3
 3744 000a 8DF80830 		strb	r3, [sp, #8]
 464:./lib/ros_lib/ros/node_handle.h ****       }
 3745              		.loc 11 464 0
 3746 000e 0368     		ldr	r3, [r0]
 3747 0010 01AA     		add	r2, sp, #4
 3748 0012 1B68     		ldr	r3, [r3]
 3749 0014 0721     		movs	r1, #7
 3750              	.LVL436:
 3751 0016 9847     		blx	r3
 3752              	.LVL437:
 3753              	.LBE245:
 3754              	.LBE244:
 478:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ERROR, msg);
 479:./lib/ros_lib/ros/node_handle.h ****       }
 3755              		.loc 11 479 0
 3756 0018 05B0     		add	sp, sp, #20
 3757              	.LCFI45:
 3758              		.cfi_def_cfa_offset 4
 3759              		@ sp needed
 3760 001a 5DF804FB 		ldr	pc, [sp], #4
 3761              	.L189:
 3762 001e 00BF     		.align	2
 3763              	.L188:
 3764 0020 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3765              		.cfi_endproc
 3766              	.LFE223:
 3767              		.fnend
 3769              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE,"
 3770              		.align	1
 3771              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 3772              		.thumb
 3773              		.thumb_func
 3775              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:
 3776              		.fnstart
 3777              	.LFB231:
 422:./lib/ros_lib/ros/node_handle.h ****       {
 3778              		.loc 11 422 0
 3779              		.cfi_startproc
 3780              		@ args = 0, pretend = 0, frame = 0
 3781              		@ frame_needed = 0, uses_anonymous_args = 0
 3782              	.LVL438:
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 3783              		.loc 11 424 0
 3784 0000 6329     		cmp	r1, #99
 422:./lib/ros_lib/ros/node_handle.h ****       {
 3785              		.loc 11 422 0
 3786 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3787              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 3788              	.LCFI46:
 3789              		.cfi_def_cfa_offset 32
 3790              		.cfi_offset 3, -32
 3791              		.cfi_offset 4, -28
 3792              		.cfi_offset 5, -24
 3793              		.cfi_offset 6, -20
 3794              		.cfi_offset 7, -16
 3795              		.cfi_offset 8, -12
 3796              		.cfi_offset 9, -8
 3797              		.cfi_offset 14, -4
 422:./lib/ros_lib/ros/node_handle.h ****       {
 3798              		.loc 11 422 0
 3799 0006 0446     		mov	r4, r0
 3800 0008 0E46     		mov	r6, r1
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 3801              		.loc 11 424 0
 3802 000a 03DD     		ble	.L191
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 3803              		.loc 11 424 0 is_stmt 0 discriminator 1
 3804 000c 90F8F454 		ldrb	r5, [r0, #1268]	@ zero_extendqisi2
 3805 0010 002D     		cmp	r5, #0
 3806 0012 4FD0     		beq	.L192
 3807              	.L191:
 428:./lib/ros_lib/ros/node_handle.h **** 
 3808              		.loc 11 428 0 is_stmt 1
 3809 0014 1368     		ldr	r3, [r2]
 3810 0016 04F21F21 		addw	r1, r4, #543
 3811              	.LVL439:
 3812 001a 1B68     		ldr	r3, [r3]
 3813 001c 1046     		mov	r0, r2
 3814              	.LVL440:
 3815 001e 9847     		blx	r3
 3816              	.LVL441:
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 3817              		.loc 11 431 0
 3818 0020 FF22     		movs	r2, #255
 3819 0022 84F81822 		strb	r2, [r4, #536]
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 3820              		.loc 11 432 0
 3821 0026 FE22     		movs	r2, #254
 428:./lib/ros_lib/ros/node_handle.h **** 
 3822              		.loc 11 428 0
 3823 0028 83B2     		uxth	r3, r0
 3824              	.LVL442:
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 3825              		.loc 11 432 0
 3826 002a 84F81922 		strb	r2, [r4, #537]
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 3827              		.loc 11 433 0
 3828 002e C2B2     		uxtb	r2, r0
 434:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 3829              		.loc 11 434 0
 3830 0030 C0F30720 		ubfx	r0, r0, #8, #8
 3831 0034 84F81B02 		strb	r0, [r4, #539]
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 3832              		.loc 11 435 0
 3833 0038 1044     		add	r0, r0, r2
 3834 003a C043     		mvns	r0, r0
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 3835              		.loc 11 436 0
 3836 003c 84F81D62 		strb	r6, [r4, #541]
 437:./lib/ros_lib/ros/node_handle.h **** 
 3837              		.loc 11 437 0
 3838 0040 46F30726 		sbfx	r6, r6, #8, #8
 3839              	.LVL443:
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 3840              		.loc 11 433 0
 3841 0044 84F81A22 		strb	r2, [r4, #538]
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 3842              		.loc 11 435 0
 3843 0048 84F81C02 		strb	r0, [r4, #540]
 437:./lib/ros_lib/ros/node_handle.h **** 
 3844              		.loc 11 437 0
 3845 004c 84F81E62 		strb	r6, [r4, #542]
 3846              	.LVL444:
 3847 0050 04F50770 		add	r0, r4, #540
 3848              	.LBB254:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3849              		.loc 11 441 0
 3850 0054 0521     		movs	r1, #5
 3851              	.LBE254:
 440:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 3852              		.loc 11 440 0
 3853 0056 0022     		movs	r2, #0
 3854              	.LBB255:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3855              		.loc 11 441 0
 3856 0058 9E1D     		adds	r6, r3, #6
 3857              	.LVL445:
 3858              	.L194:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3859              		.loc 11 441 0 is_stmt 0 discriminator 3
 3860 005a B142     		cmp	r1, r6
 3861 005c 04DC     		bgt	.L193
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 3862              		.loc 11 442 0 is_stmt 1 discriminator 2
 3863 005e 10F8015F 		ldrb	r5, [r0, #1]!	@ zero_extendqisi2
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3864              		.loc 11 441 0 discriminator 2
 3865 0062 0131     		adds	r1, r1, #1
 3866              	.LVL446:
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 3867              		.loc 11 442 0 discriminator 2
 3868 0064 2A44     		add	r2, r2, r5
 3869              	.LVL447:
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3870              		.loc 11 441 0 discriminator 2
 3871 0066 F8E7     		b	.L194
 3872              	.L193:
 3873              	.LVL448:
 3874              	.LBE255:
 444:./lib/ros_lib/ros/node_handle.h **** 
 3875              		.loc 11 444 0
 3876 0068 D243     		mvns	r2, r2
 3877              	.LVL449:
 3878 006a 03F10806 		add	r6, r3, #8
 3879 006e 0733     		adds	r3, r3, #7
 3880              	.LVL450:
 3881 0070 B6B2     		uxth	r6, r6
 3882              	.LVL451:
 3883 0072 9BB2     		uxth	r3, r3
 3884 0074 2344     		add	r3, r3, r4
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 3885              		.loc 11 446 0
 3886 0076 B6F5007F 		cmp	r6, #512
 444:./lib/ros_lib/ros/node_handle.h **** 
 3887              		.loc 11 444 0
 3888 007a 83F81822 		strb	r2, [r3, #536]
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 3889              		.loc 11 446 0
 3890 007e 13D8     		bhi	.L195
 447:./lib/ros_lib/ros/node_handle.h ****           return l;
 3891              		.loc 11 447 0
 3892 0080 04F50678 		add	r8, r4, #536
 3893 0084 3546     		mov	r5, r6
 3894              	.LVL452:
 3895 0086 4746     		mov	r7, r8
 3896              	.LBB256:
 3897              	.LBB257:
 128:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 3898              		.loc 15 128 0
 3899 0088 DFF83490 		ldr	r9, .L202+4
 3900              	.LVL453:
 3901              	.L197:
 127:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 3902              		.loc 15 127 0
 3903 008c C8EB0703 		rsb	r3, r8, r7
 3904 0090 9E42     		cmp	r6, r3
 3905 0092 0FDD     		ble	.L192
 3906              	.L200:
 128:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 3907              		.loc 15 128 0
 3908 0094 B9F80030 		ldrh	r3, [r9]
 3909 0098 5B06     		lsls	r3, r3, #25
 3910 009a FBD5     		bpl	.L200
 129:./lib/ros_lib/ArduinoHardware.h ****       }
 3911              		.loc 15 129 0
 3912 009c 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 3913              	.LVL454:
 3914 00a0 6068     		ldr	r0, [r4, #4]
 3915 00a2 FFF7FEFF 		bl	USART_SendData
 3916              	.LVL455:
 3917 00a6 F1E7     		b	.L197
 3918              	.LVL456:
 3919              	.L195:
 3920              	.LBE257:
 3921              	.LBE256:
 450:./lib/ros_lib/ros/node_handle.h ****           return -1;
 3922              		.loc 11 450 0
 3923 00a8 0449     		ldr	r1, .L202
 3924              	.LVL457:
 3925 00aa 2046     		mov	r0, r4
 3926 00ac FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 3927              	.LVL458:
 451:./lib/ros_lib/ros/node_handle.h ****         }
 3928              		.loc 11 451 0
 3929 00b0 4FF0FF35 		mov	r5, #-1
 3930              	.LVL459:
 3931              	.L192:
 453:./lib/ros_lib/ros/node_handle.h **** 
 3932              		.loc 11 453 0
 3933 00b4 2846     		mov	r0, r5
 3934 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3935              	.LVL460:
 3936              	.L203:
 3937 00ba 00BF     		.align	2
 3938              	.L202:
 3939 00bc 2E020000 		.word	.LC20
 3940 00c0 00380140 		.word	1073821696
 3941              		.cfi_endproc
 3942              	.LFE231:
 3943              		.fnend
 3945              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE12requestParamEPKci,"a
 3946              		.align	1
 3947              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE12requestParamEPKci
 3948              		.thumb
 3949              		.thumb_func
 3951              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE12requestParamEPKci:
 3952              		.fnstart
 3953              	.LFB226:
 480:./lib/ros_lib/ros/node_handle.h ****       void logfatal(const char*msg){
 481:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::FATAL, msg);
 482:./lib/ros_lib/ros/node_handle.h ****       }
 483:./lib/ros_lib/ros/node_handle.h **** 
 484:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 485:./lib/ros_lib/ros/node_handle.h ****        * Parameters
 486:./lib/ros_lib/ros/node_handle.h ****        */
 487:./lib/ros_lib/ros/node_handle.h **** 
 488:./lib/ros_lib/ros/node_handle.h ****     private:
 489:./lib/ros_lib/ros/node_handle.h ****       bool param_recieved;
 490:./lib/ros_lib/ros/node_handle.h ****       rosserial_msgs::RequestParamResponse req_param_resp;
 491:./lib/ros_lib/ros/node_handle.h **** 
 492:./lib/ros_lib/ros/node_handle.h ****       bool requestParam(const char * name, int time_out =  1000){
 3954              		.loc 11 492 0
 3955              		.cfi_startproc
 3956              		@ args = 0, pretend = 0, frame = 8
 3957              		@ frame_needed = 0, uses_anonymous_args = 0
 3958              	.LVL461:
 3959 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 3960              		.save {r4, r5, r6, lr}
 3961              		.pad #8
 3962              	.LCFI47:
 3963              		.cfi_def_cfa_offset 24
 3964              		.cfi_offset 4, -16
 3965              		.cfi_offset 5, -12
 3966              		.cfi_offset 6, -8
 3967              		.cfi_offset 14, -4
 493:./lib/ros_lib/ros/node_handle.h ****         param_recieved = false;
 3968              		.loc 11 493 0
 3969 0002 0023     		movs	r3, #0
 3970 0004 80F80435 		strb	r3, [r0, #1284]
 3971              	.LVL462:
 3972              	.LBB258:
 3973              	.LBB259:
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 3974              		.loc 4 19 0
 3975 0008 0D4B     		ldr	r3, .L208
 3976              	.LBE259:
 3977              	.LBE258:
 494:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::RequestParamRequest req;
 495:./lib/ros_lib/ros/node_handle.h ****         req.name  = (char*)name;
 3978              		.loc 11 495 0
 3979 000a 0191     		str	r1, [sp, #4]
 3980              	.LBB261:
 3981              	.LBB260:
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 3982              		.loc 4 19 0
 3983 000c 0093     		str	r3, [sp]
 3984              	.LVL463:
 3985              	.LBE260:
 3986              	.LBE261:
 496:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_PARAMETER_REQUEST, &req);
 3987              		.loc 11 496 0
 3988 000e 0368     		ldr	r3, [r0]
 492:./lib/ros_lib/ros/node_handle.h ****         param_recieved = false;
 3989              		.loc 11 492 0
 3990 0010 1446     		mov	r4, r2
 3991              		.loc 11 496 0
 3992 0012 1B68     		ldr	r3, [r3]
 3993 0014 6A46     		mov	r2, sp
 3994              	.LVL464:
 3995 0016 0621     		movs	r1, #6
 3996              	.LVL465:
 492:./lib/ros_lib/ros/node_handle.h ****         param_recieved = false;
 3997              		.loc 11 492 0
 3998 0018 0546     		mov	r5, r0
 3999              		.loc 11 496 0
 4000 001a 9847     		blx	r3
 4001              	.LVL466:
 4002              	.LBB262:
 4003              	.LBB263:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4004              		.loc 15 134 0
 4005 001c FFF7FEFF 		bl	millis
 4006              	.LVL467:
 4007              	.LBE263:
 4008              	.LBE262:
 497:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 4009              		.loc 11 497 0
 4010 0020 2044     		add	r0, r0, r4
 4011 0022 84B2     		uxth	r4, r0
 4012              	.LVL468:
 4013              	.L206:
 498:./lib/ros_lib/ros/node_handle.h ****         while(!param_recieved ){
 4014              		.loc 11 498 0
 4015 0024 95F80465 		ldrb	r6, [r5, #1284]	@ zero_extendqisi2
 4016 0028 3EB9     		cbnz	r6, .L205
 499:./lib/ros_lib/ros/node_handle.h ****           spinOnce();
 4017              		.loc 11 499 0
 4018 002a 2B68     		ldr	r3, [r5]
 4019 002c 2846     		mov	r0, r5
 4020 002e 5B68     		ldr	r3, [r3, #4]
 4021 0030 9847     		blx	r3
 4022              	.LVL469:
 4023              	.LBB264:
 4024              	.LBB265:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4025              		.loc 15 134 0
 4026 0032 FFF7FEFF 		bl	millis
 4027              	.LVL470:
 4028              	.LBE265:
 4029              	.LBE264:
 500:./lib/ros_lib/ros/node_handle.h ****           if (hardware_.time() > end_time) return false;
 4030              		.loc 11 500 0
 4031 0036 A042     		cmp	r0, r4
 4032 0038 F4D9     		bls	.L206
 4033              	.LVL471:
 4034              	.L205:
 501:./lib/ros_lib/ros/node_handle.h ****         }
 502:./lib/ros_lib/ros/node_handle.h ****         return true;
 503:./lib/ros_lib/ros/node_handle.h ****       }
 4035              		.loc 11 503 0
 4036 003a 3046     		mov	r0, r6
 4037 003c 02B0     		add	sp, sp, #8
 4038              	.LCFI48:
 4039              		.cfi_def_cfa_offset 16
 4040              		@ sp needed
 4041 003e 70BD     		pop	{r4, r5, r6, pc}
 4042              	.LVL472:
 4043              	.L209:
 4044              		.align	2
 4045              	.L208:
 4046 0040 08000000 		.word	_ZTVN14rosserial_msgs19RequestParamRequestE+8
 4047              		.cfi_endproc
 4048              	.LFE226:
 4049              		.fnend
 4051              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi,"axG"
 4052              		.align	1
 4053              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 4054              		.thumb
 4055              		.thumb_func
 4057              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:
 4058              		.fnstart
 4059              	.LFB221:
 504:./lib/ros_lib/ros/node_handle.h **** 
 505:./lib/ros_lib/ros/node_handle.h ****     public:
 506:./lib/ros_lib/ros/node_handle.h ****       bool getParam(const char* name, int* param, int length =1){
 507:./lib/ros_lib/ros/node_handle.h ****         if (requestParam(name) ){
 508:./lib/ros_lib/ros/node_handle.h ****           if (length == req_param_resp.ints_length){
 509:./lib/ros_lib/ros/node_handle.h ****             //copy it over
 510:./lib/ros_lib/ros/node_handle.h ****             for(int i=0; i<length; i++)
 511:./lib/ros_lib/ros/node_handle.h ****               param[i] = req_param_resp.ints[i];
 512:./lib/ros_lib/ros/node_handle.h ****             return true;
 513:./lib/ros_lib/ros/node_handle.h ****           }
 514:./lib/ros_lib/ros/node_handle.h ****         }
 515:./lib/ros_lib/ros/node_handle.h ****         return false;
 516:./lib/ros_lib/ros/node_handle.h ****       }
 517:./lib/ros_lib/ros/node_handle.h ****       bool getParam(const char* name, float* param, int length=1){
 4060              		.loc 11 517 0
 4061              		.cfi_startproc
 4062              		@ args = 0, pretend = 0, frame = 0
 4063              		@ frame_needed = 0, uses_anonymous_args = 0
 4064              	.LVL473:
 4065 0000 70B5     		push	{r4, r5, r6, lr}
 4066              		.save {r4, r5, r6, lr}
 4067              	.LCFI49:
 4068              		.cfi_def_cfa_offset 16
 4069              		.cfi_offset 4, -16
 4070              		.cfi_offset 5, -12
 4071              		.cfi_offset 6, -8
 4072              		.cfi_offset 14, -4
 4073              		.loc 11 517 0
 4074 0002 1546     		mov	r5, r2
 4075              	.LBB275:
 518:./lib/ros_lib/ros/node_handle.h ****         if (requestParam(name) ){
 4076              		.loc 11 518 0
 4077 0004 4FF47A72 		mov	r2, #1000
 4078              	.LVL474:
 4079              	.LBE275:
 517:./lib/ros_lib/ros/node_handle.h ****         if (requestParam(name) ){
 4080              		.loc 11 517 0
 4081 0008 0446     		mov	r4, r0
 4082 000a 1E46     		mov	r6, r3
 4083              	.LBB277:
 4084              		.loc 11 518 0
 4085 000c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE12requestParamEPKci
 4086              	.LVL475:
 4087 0010 78B1     		cbz	r0, .L211
 4088              	.LBB276:
 519:./lib/ros_lib/ros/node_handle.h ****           if (length == req_param_resp.floats_length){
 4089              		.loc 11 519 0
 4090 0012 94F81825 		ldrb	r2, [r4, #1304]	@ zero_extendqisi2
 4091 0016 B242     		cmp	r2, r6
 4092 0018 0AD1     		bne	.L213
 4093 001a 0023     		movs	r3, #0
 4094              	.L212:
 4095              	.LVL476:
 4096              	.LBE276:
 4097              	.LBE277:
 4098              	.LBB278:
 4099              	.LBB279:
 520:./lib/ros_lib/ros/node_handle.h ****             //copy it over
 521:./lib/ros_lib/ros/node_handle.h ****             for(int i=0; i<length; i++)
 4100              		.loc 11 521 0
 4101 001c 9A42     		cmp	r2, r3
 4102 001e 08DD     		ble	.L211
 522:./lib/ros_lib/ros/node_handle.h ****               param[i] = req_param_resp.floats[i];
 4103              		.loc 11 522 0
 4104 0020 D4F82015 		ldr	r1, [r4, #1312]
 4105 0024 51F82310 		ldr	r1, [r1, r3, lsl #2]	@ float
 4106 0028 45F82310 		str	r1, [r5, r3, lsl #2]	@ float
 521:./lib/ros_lib/ros/node_handle.h ****               param[i] = req_param_resp.floats[i];
 4107              		.loc 11 521 0
 4108 002c 0133     		adds	r3, r3, #1
 4109              	.LVL477:
 4110 002e F5E7     		b	.L212
 4111              	.LVL478:
 4112              	.L213:
 4113              	.LBE279:
 4114              	.LBE278:
 523:./lib/ros_lib/ros/node_handle.h ****             return true;
 524:./lib/ros_lib/ros/node_handle.h ****           }
 525:./lib/ros_lib/ros/node_handle.h ****         }
 526:./lib/ros_lib/ros/node_handle.h ****         return false;
 4115              		.loc 11 526 0
 4116 0030 0020     		movs	r0, #0
 4117              	.L211:
 527:./lib/ros_lib/ros/node_handle.h ****       }
 4118              		.loc 11 527 0
 4119 0032 70BD     		pop	{r4, r5, r6, pc}
 4120              		.cfi_endproc
 4121              	.LFE221:
 4122              		.fnend
 4124              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv,"a
 4125              		.align	1
 4126              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 4127              		.thumb
 4128              		.thumb_func
 4130              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:
 4131              		.fnstart
 4132              	.LFB228:
 294:./lib/ros_lib/ros/node_handle.h ****       {
 4133              		.loc 11 294 0
 4134              		.cfi_startproc
 4135              		@ args = 0, pretend = 0, frame = 16
 4136              		@ frame_needed = 0, uses_anonymous_args = 0
 4137              	.LVL479:
 4138 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 4139              		.save {r4, lr}
 4140              		.pad #16
 4141              	.LCFI50:
 4142              		.cfi_def_cfa_offset 24
 4143              		.cfi_offset 4, -8
 4144              		.cfi_offset 14, -4
 4145              	.LVL480:
 4146              	.LBB280:
 4147              	.LBB281:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4148              		.loc 1 19 0
 4149 0002 084B     		ldr	r3, .L219
 4150              	.LBE281:
 4151              	.LBE280:
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4152              		.loc 11 297 0
 4153 0004 01AA     		add	r2, sp, #4
 4154              	.LVL481:
 4155              	.LBB285:
 4156              	.LBB284:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4157              		.loc 1 19 0
 4158 0006 0193     		str	r3, [sp, #4]
 4159              	.LVL482:
 4160              	.LBB282:
 4161              	.LBB283:
 4162              		.file 17 "./lib/ros_lib/ros/time.h"
   1:./lib/ros_lib/ros/time.h **** /*
   2:./lib/ros_lib/ros/time.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/time.h ****  *
   4:./lib/ros_lib/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/time.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/time.h ****  *
   7:./lib/ros_lib/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/time.h ****  * are met:
  10:./lib/ros_lib/ros/time.h ****  *
  11:./lib/ros_lib/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/time.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/time.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/time.h ****  *
  21:./lib/ros_lib/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/time.h ****  */
  34:./lib/ros_lib/ros/time.h **** 
  35:./lib/ros_lib/ros/time.h **** #ifndef ROS_TIME_H_
  36:./lib/ros_lib/ros/time.h **** #define ROS_TIME_H_
  37:./lib/ros_lib/ros/time.h **** 
  38:./lib/ros_lib/ros/time.h **** #include <math.h>
  39:./lib/ros_lib/ros/time.h **** #include <stdint.h>
  40:./lib/ros_lib/ros/time.h **** 
  41:./lib/ros_lib/ros/time.h **** #include "ros/duration.h"
  42:./lib/ros_lib/ros/time.h **** 
  43:./lib/ros_lib/ros/time.h **** namespace ros
  44:./lib/ros_lib/ros/time.h **** {
  45:./lib/ros_lib/ros/time.h ****   void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  46:./lib/ros_lib/ros/time.h **** 
  47:./lib/ros_lib/ros/time.h ****   class Time
  48:./lib/ros_lib/ros/time.h ****   {
  49:./lib/ros_lib/ros/time.h ****     public:
  50:./lib/ros_lib/ros/time.h ****       uint32_t sec, nsec;
  51:./lib/ros_lib/ros/time.h **** 
  52:./lib/ros_lib/ros/time.h ****       Time() : sec(0), nsec(0) {}
 4163              		.loc 17 52 0
 4164 0008 0023     		movs	r3, #0
 4165 000a 0293     		str	r3, [sp, #8]
 4166 000c 0393     		str	r3, [sp, #12]
 4167              	.LVL483:
 4168              	.LBE283:
 4169              	.LBE282:
 4170              	.LBE284:
 4171              	.LBE285:
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4172              		.loc 11 297 0
 4173 000e 0368     		ldr	r3, [r0]
 4174 0010 0A21     		movs	r1, #10
 4175 0012 1B68     		ldr	r3, [r3]
 294:./lib/ros_lib/ros/node_handle.h ****       {
 4176              		.loc 11 294 0
 4177 0014 0446     		mov	r4, r0
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4178              		.loc 11 297 0
 4179 0016 9847     		blx	r3
 4180              	.LVL484:
 4181              	.LBB286:
 4182              	.LBB287:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4183              		.loc 15 134 0
 4184 0018 FFF7FEFF 		bl	millis
 4185              	.LVL485:
 4186              	.LBE287:
 4187              	.LBE286:
 298:./lib/ros_lib/ros/node_handle.h ****       }
 4188              		.loc 11 298 0
 4189 001c E060     		str	r0, [r4, #12]
 299:./lib/ros_lib/ros/node_handle.h **** 
 4190              		.loc 11 299 0
 4191 001e 04B0     		add	sp, sp, #16
 4192              	.LCFI51:
 4193              		.cfi_def_cfa_offset 8
 4194              		@ sp needed
 4195 0020 10BD     		pop	{r4, pc}
 4196              	.LVL486:
 4197              	.L220:
 4198 0022 00BF     		.align	2
 4199              	.L219:
 4200 0024 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4201              		.cfi_endproc
 4202              	.LFE228:
 4203              		.fnend
 4205              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv,"a
 4206              		.align	1
 4207              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 4208              		.thumb
 4209              		.thumb_func
 4211              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:
 4212              		.fnstart
 4213              	.LFB229:
 391:./lib/ros_lib/ros/node_handle.h ****       {
 4214              		.loc 11 391 0
 4215              		.cfi_startproc
 4216              		@ args = 0, pretend = 0, frame = 24
 4217              		@ frame_needed = 0, uses_anonymous_args = 0
 4218              	.LVL487:
 4219 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4220              		.save {r4, r5, r6, r7, r8, lr}
 4221              	.LCFI52:
 4222              		.cfi_def_cfa_offset 24
 4223              		.cfi_offset 4, -24
 4224              		.cfi_offset 5, -20
 4225              		.cfi_offset 6, -16
 4226              		.cfi_offset 7, -12
 4227              		.cfi_offset 8, -8
 4228              		.cfi_offset 14, -4
 4229 0004 0446     		mov	r4, r0
 4230              	.LBB293:
 4231              	.LBB294:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 4232              		.loc 2 34 0
 4233 0006 2B4B     		ldr	r3, .L234
 4234              	.LBE294:
 4235              	.LBE293:
 391:./lib/ros_lib/ros/node_handle.h ****       {
 4236              		.loc 11 391 0
 4237              		.pad #24
 4238 0008 86B0     		sub	sp, sp, #24
 4239              	.LCFI53:
 4240              		.cfi_def_cfa_offset 48
 4241              	.LVL488:
 4242              	.LBB296:
 4243              	.LBB295:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 4244              		.loc 2 34 0
 4245 000a 0093     		str	r3, [sp]
 4246 000c 2A4B     		ldr	r3, .L234+4
 4247 000e 0022     		movs	r2, #0
 4248 0010 ADF80420 		strh	r2, [sp, #4]	@ movhi
 4249 0014 0293     		str	r3, [sp, #8]
 4250 0016 0393     		str	r3, [sp, #12]
 4251 0018 0493     		str	r3, [sp, #16]
 4252 001a 0592     		str	r2, [sp, #20]
 4253              	.LVL489:
 4254 001c 00F21446 		addw	r6, r0, #1044
 4255 0020 00F58F65 		add	r5, r0, #1144
 4256              	.LBE295:
 4257              	.LBE296:
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 4258              		.loc 11 403 0
 4259 0024 4FF40077 		mov	r7, #512
 4260              	.LVL490:
 4261              	.L223:
 397:./lib/ros_lib/ros/node_handle.h ****           {
 4262              		.loc 11 397 0
 4263 0028 56F8043F 		ldr	r3, [r6, #4]!
 4264 002c BBB1     		cbz	r3, .L222
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 4265              		.loc 11 399 0
 4266 002e 9A68     		ldr	r2, [r3, #8]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4267              		.loc 11 401 0
 4268 0030 5868     		ldr	r0, [r3, #4]
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 4269              		.loc 11 399 0
 4270 0032 ADF80420 		strh	r2, [sp, #4]	@ movhi
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 4271              		.loc 11 400 0
 4272 0036 1A68     		ldr	r2, [r3]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4273              		.loc 11 401 0
 4274 0038 0368     		ldr	r3, [r0]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 4275              		.loc 11 400 0
 4276 003a 0292     		str	r2, [sp, #8]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4277              		.loc 11 401 0
 4278 003c 9B68     		ldr	r3, [r3, #8]
 4279 003e 9847     		blx	r3
 4280              	.LVL491:
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4281              		.loc 11 402 0
 4282 0040 3368     		ldr	r3, [r6]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4283              		.loc 11 401 0
 4284 0042 0390     		str	r0, [sp, #12]
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4285              		.loc 11 402 0
 4286 0044 5868     		ldr	r0, [r3, #4]
 4287 0046 0368     		ldr	r3, [r0]
 4288 0048 DB68     		ldr	r3, [r3, #12]
 4289 004a 9847     		blx	r3
 4290              	.LVL492:
 4291 004c 3168     		ldr	r1, [r6]
 404:./lib/ros_lib/ros/node_handle.h ****           }
 4292              		.loc 11 404 0
 4293 004e 2368     		ldr	r3, [r4]
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4294              		.loc 11 402 0
 4295 0050 0490     		str	r0, [sp, #16]
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 4296              		.loc 11 403 0
 4297 0052 0597     		str	r7, [sp, #20]
 4298              	.LVL493:
 404:./lib/ros_lib/ros/node_handle.h ****           }
 4299              		.loc 11 404 0
 4300 0054 1B68     		ldr	r3, [r3]
 4301 0056 6A46     		mov	r2, sp
 4302 0058 0969     		ldr	r1, [r1, #16]
 4303              	.LVL494:
 4304 005a 2046     		mov	r0, r4
 4305 005c 9847     		blx	r3
 4306              	.LVL495:
 4307              	.L222:
 395:./lib/ros_lib/ros/node_handle.h ****         {
 4308              		.loc 11 395 0 discriminator 2
 4309 005e AE42     		cmp	r6, r5
 4310 0060 E2D1     		bne	.L223
 4311 0062 04F2DC46 		addw	r6, r4, #1244
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 4312              		.loc 11 415 0
 4313 0066 4FF40077 		mov	r7, #512
 4314              	.L225:
 409:./lib/ros_lib/ros/node_handle.h ****           {
 4315              		.loc 11 409 0
 4316 006a 55F8040F 		ldr	r0, [r5, #4]!
 4317 006e C8B1     		cbz	r0, .L224
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 4318              		.loc 11 411 0
 4319 0070 4368     		ldr	r3, [r0, #4]
 4320 0072 ADF80430 		strh	r3, [sp, #4]	@ movhi
 412:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 4321              		.loc 11 412 0
 4322 0076 8368     		ldr	r3, [r0, #8]
 4323 0078 0293     		str	r3, [sp, #8]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 4324              		.loc 11 413 0
 4325 007a 0368     		ldr	r3, [r0]
 4326 007c 9B68     		ldr	r3, [r3, #8]
 4327 007e 9847     		blx	r3
 4328              	.LVL496:
 4329 0080 0390     		str	r0, [sp, #12]
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 4330              		.loc 11 414 0
 4331 0082 2868     		ldr	r0, [r5]
 4332 0084 0368     		ldr	r3, [r0]
 4333 0086 DB68     		ldr	r3, [r3, #12]
 4334 0088 9847     		blx	r3
 4335              	.LVL497:
 416:./lib/ros_lib/ros/node_handle.h ****           }
 4336              		.loc 11 416 0
 4337 008a 2368     		ldr	r3, [r4]
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 4338              		.loc 11 414 0
 4339 008c 0490     		str	r0, [sp, #16]
 416:./lib/ros_lib/ros/node_handle.h ****           }
 4340              		.loc 11 416 0
 4341 008e 2868     		ldr	r0, [r5]
 4342 0090 D3F80080 		ldr	r8, [r3]
 4343 0094 0368     		ldr	r3, [r0]
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 4344              		.loc 11 415 0
 4345 0096 0597     		str	r7, [sp, #20]
 416:./lib/ros_lib/ros/node_handle.h ****           }
 4346              		.loc 11 416 0
 4347 0098 5B68     		ldr	r3, [r3, #4]
 4348 009a 9847     		blx	r3
 4349              	.LVL498:
 4350 009c 6A46     		mov	r2, sp
 4351 009e 0146     		mov	r1, r0
 4352 00a0 2046     		mov	r0, r4
 4353 00a2 C047     		blx	r8
 4354              	.LVL499:
 4355              	.L224:
 407:./lib/ros_lib/ros/node_handle.h ****         {
 4356              		.loc 11 407 0 discriminator 2
 4357 00a4 AE42     		cmp	r6, r5
 4358 00a6 E0D1     		bne	.L225
 419:./lib/ros_lib/ros/node_handle.h ****       }
 4359              		.loc 11 419 0
 4360 00a8 0123     		movs	r3, #1
 4361 00aa 84F8F434 		strb	r3, [r4, #1268]
 420:./lib/ros_lib/ros/node_handle.h **** 
 4362              		.loc 11 420 0
 4363 00ae 06B0     		add	sp, sp, #24
 4364              	.LCFI54:
 4365              		.cfi_def_cfa_offset 24
 4366              	.LVL500:
 4367              		@ sp needed
 4368 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4369              	.LVL501:
 4370              	.L235:
 4371              		.align	2
 4372              	.L234:
 4373 00b4 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 4374 00b8 67020000 		.word	.LC21
 4375              		.cfi_endproc
 4376              	.LFE229:
 4377              		.fnend
 4379              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh,"axG",%pr
 4380              		.align	1
 4381              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 4382              		.thumb
 4383              		.thumb_func
 4385              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:
 4386              		.fnstart
 4387              	.LFB230:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 4388              		.loc 11 301 0
 4389              		.cfi_startproc
 4390              		@ args = 0, pretend = 0, frame = 16
 4391              		@ frame_needed = 0, uses_anonymous_args = 0
 4392              	.LVL502:
 4393 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 4394              		.save {r4, r5, r6, lr}
 4395              		.pad #16
 4396              	.LCFI55:
 4397              		.cfi_def_cfa_offset 32
 4398              		.cfi_offset 4, -16
 4399              		.cfi_offset 5, -12
 4400              		.cfi_offset 6, -8
 4401              		.cfi_offset 14, -4
 4402              	.LVL503:
 4403              	.LBB311:
 4404              	.LBB312:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4405              		.loc 1 19 0
 4406 0002 1C4B     		ldr	r3, .L237
 4407              	.LBE312:
 4408              	.LBE311:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 4409              		.loc 11 301 0
 4410 0004 0446     		mov	r4, r0
 4411              	.LBB316:
 4412              	.LBB315:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4413              		.loc 1 19 0
 4414 0006 0193     		str	r3, [sp, #4]
 4415              	.LVL504:
 4416              	.LBB313:
 4417              	.LBB314:
 4418              		.loc 17 52 0
 4419 0008 0023     		movs	r3, #0
 4420 000a 0293     		str	r3, [sp, #8]
 4421 000c 0393     		str	r3, [sp, #12]
 4422              	.LVL505:
 4423              	.LBE314:
 4424              	.LBE313:
 4425              	.LBE315:
 4426              	.LBE316:
 301:./lib/ros_lib/ros/node_handle.h ****       {
 4427              		.loc 11 301 0
 4428 000e 0D46     		mov	r5, r1
 4429              	.LBB317:
 4430              	.LBB318:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4431              		.loc 15 134 0
 4432 0010 FFF7FEFF 		bl	millis
 4433              	.LVL506:
 4434              	.LBE318:
 4435              	.LBE317:
 304:./lib/ros_lib/ros/node_handle.h **** 
 4436              		.loc 11 304 0
 4437 0014 E268     		ldr	r2, [r4, #12]
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 4438              		.loc 11 306 0
 4439 0016 2946     		mov	r1, r5
 304:./lib/ros_lib/ros/node_handle.h **** 
 4440              		.loc 11 304 0
 4441 0018 861A     		subs	r6, r0, r2
 4442              	.LVL507:
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4443              		.loc 11 307 0
 4444 001a 4FF47A75 		mov	r5, #1000
 4445              	.LVL508:
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 4446              		.loc 11 306 0
 4447 001e 01A8     		add	r0, sp, #4
 4448 0020 FFF7FEFF 		bl	_ZN8std_msgs4Time11deserializeEPh
 4449              	.LVL509:
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4450              		.loc 11 307 0
 4451 0024 B6FBF5F2 		udiv	r2, r6, r5
 4452 0028 029B     		ldr	r3, [sp, #8]
 4453 002a 1344     		add	r3, r3, r2
 308:./lib/ros_lib/ros/node_handle.h **** 
 4454              		.loc 11 308 0
 4455 002c 05FB1262 		mls	r2, r5, r2, r6
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4456              		.loc 11 307 0
 4457 0030 0293     		str	r3, [sp, #8]
 308:./lib/ros_lib/ros/node_handle.h **** 
 4458              		.loc 11 308 0
 4459 0032 114E     		ldr	r6, .L237+4
 4460              	.LVL510:
 4461 0034 039B     		ldr	r3, [sp, #12]
 4462 0036 06FB0232 		mla	r2, r6, r2, r3
 4463 003a 0392     		str	r2, [sp, #12]
 4464              	.LVL511:
 4465              	.LBB319:
 4466              	.LBB320:
 4467              	.LBB321:
 4468              	.LBB322:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4469              		.loc 15 134 0
 4470 003c FFF7FEFF 		bl	millis
 4471              	.LVL512:
 4472              	.LBE322:
 4473              	.LBE321:
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 4474              		.loc 11 327 0
 4475 0040 B0FBF5F3 		udiv	r3, r0, r5
 4476 0044 029A     		ldr	r2, [sp, #8]
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4477              		.loc 11 328 0
 4478 0046 0399     		ldr	r1, [sp, #12]
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 4479              		.loc 11 327 0
 4480 0048 013A     		subs	r2, r2, #1
 4481 004a D21A     		subs	r2, r2, r3
 4482 004c 2261     		str	r2, [r4, #16]
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4483              		.loc 11 328 0
 4484 004e 0B4A     		ldr	r2, .L237+8
 4485 0050 05FB1300 		mls	r0, r5, r3, r0
 4486              	.LVL513:
 4487 0054 0A44     		add	r2, r2, r1
 4488 0056 2146     		mov	r1, r4
 4489 0058 06FB1023 		mls	r3, r6, r0, r2
 329:./lib/ros_lib/ros/node_handle.h ****       }
 4490              		.loc 11 329 0
 4491 005c 04F11000 		add	r0, r4, #16
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4492              		.loc 11 328 0
 4493 0060 41F8143F 		str	r3, [r1, #20]!
 329:./lib/ros_lib/ros/node_handle.h ****       }
 4494              		.loc 11 329 0
 4495 0064 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 4496              	.LVL514:
 4497              	.LBE320:
 4498              	.LBE319:
 4499              	.LBB323:
 4500              	.LBB324:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4501              		.loc 15 134 0
 4502 0068 FFF7FEFF 		bl	millis
 4503              	.LVL515:
 4504              	.LBE324:
 4505              	.LBE323:
 311:./lib/ros_lib/ros/node_handle.h ****       }
 4506              		.loc 11 311 0
 4507 006c C4F8FC04 		str	r0, [r4, #1276]
 312:./lib/ros_lib/ros/node_handle.h **** 
 4508              		.loc 11 312 0
 4509 0070 04B0     		add	sp, sp, #16
 4510              	.LCFI56:
 4511              		.cfi_def_cfa_offset 16
 4512              		@ sp needed
 4513 0072 70BD     		pop	{r4, r5, r6, pc}
 4514              	.LVL516:
 4515              	.L238:
 4516              		.align	2
 4517              	.L237:
 4518 0074 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4519 0078 40420F00 		.word	1000000
 4520 007c 00CA9A3B 		.word	1000000000
 4521              		.cfi_endproc
 4522              	.LFE230:
 4523              		.fnend
 4525              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv,"axG",%pro
 4526              		.align	1
 4527              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 4528              		.thumb
 4529              		.thumb_func
 4531              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:
 4532              		.fnstart
 4533              	.LFB225:
 184:./lib/ros_lib/ros/node_handle.h **** 
 4534              		.loc 11 184 0
 4535              		.cfi_startproc
 4536              		@ args = 0, pretend = 0, frame = 0
 4537              		@ frame_needed = 0, uses_anonymous_args = 0
 4538              	.LVL517:
 4539 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4540              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 4541              	.LCFI57:
 4542              		.cfi_def_cfa_offset 32
 4543              		.cfi_offset 3, -32
 4544              		.cfi_offset 4, -28
 4545              		.cfi_offset 5, -24
 4546              		.cfi_offset 6, -20
 4547              		.cfi_offset 7, -16
 4548              		.cfi_offset 8, -12
 4549              		.cfi_offset 9, -8
 4550              		.cfi_offset 14, -4
 184:./lib/ros_lib/ros/node_handle.h **** 
 4551              		.loc 11 184 0
 4552 0004 0446     		mov	r4, r0
 4553              	.LVL518:
 4554              	.LBB332:
 4555              	.LBB333:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4556              		.loc 15 134 0
 4557 0006 FFF7FEFF 		bl	millis
 4558              	.LVL519:
 4559              	.LBE333:
 4560              	.LBE332:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 4561              		.loc 11 188 0
 4562 000a 42F6F822 		movw	r2, #11000
 4563 000e D4F8FC34 		ldr	r3, [r4, #1276]
 4564              	.LBB335:
 4565              	.LBB334:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4566              		.loc 15 134 0
 4567 0012 0646     		mov	r6, r0
 4568              	.LVL520:
 4569              	.LBE334:
 4570              	.LBE335:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 4571              		.loc 11 188 0
 4572 0014 C31A     		subs	r3, r0, r3
 4573 0016 9342     		cmp	r3, r2
 189:./lib/ros_lib/ros/node_handle.h ****          }
 4574              		.loc 11 189 0
 4575 0018 84BF     		itt	hi
 4576 001a 0023     		movhi	r3, #0
 4577 001c 84F8F434 		strbhi	r3, [r4, #1268]
 193:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 4578              		.loc 11 193 0
 4579 0020 D4F8E034 		ldr	r3, [r4, #1248]
 4580 0024 33B1     		cbz	r3, .L241
 194:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 4581              		.loc 11 194 0
 4582 0026 D4F80035 		ldr	r3, [r4, #1280]
 4583 002a 8342     		cmp	r3, r0
 195:./lib/ros_lib/ros/node_handle.h ****           }
 4584              		.loc 11 195 0
 4585 002c 3CBF     		itt	cc
 4586 002e 0023     		movcc	r3, #0
 4587 0030 C4F8E034 		strcc	r3, [r4, #1248]
 4588              	.L241:
 4589              	.LBB336:
 4590              	.LBB337:
 4591              	.LBB338:
 118:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 4592              		.loc 15 118 0
 4593 0034 744F     		ldr	r7, .L281
 4594              	.LBE338:
 4595              	.LBE337:
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 4596              		.loc 11 252 0
 4597 0036 4FF00008 		mov	r8, #0
 269:./lib/ros_lib/ros/node_handle.h ****               }
 4598              		.loc 11 269 0
 4599 003a 04F11809 		add	r9, r4, #24
 4600              	.LVL521:
 4601              	.L242:
 4602              	.LBB341:
 4603              	.LBB339:
 118:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 4604              		.loc 15 118 0
 4605 003e FA69     		ldr	r2, [r7, #28]
 4606 0040 BB69     		ldr	r3, [r7, #24]
 4607 0042 9A42     		cmp	r2, r3
 4608 0044 00F0CC80 		beq	.L243
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 4609              		.loc 15 121 0
 4610 0048 BB69     		ldr	r3, [r7, #24]
 4611              	.LBE339:
 4612              	.LBE341:
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4613              		.loc 11 206 0
 4614 004a D4F8E054 		ldr	r5, [r4, #1248]
 4615              	.LBB342:
 4616              	.LBB340:
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 4617              		.loc 15 121 0
 4618 004e 07EB4303 		add	r3, r7, r3, lsl #1
 4619 0052 1B8C     		ldrh	r3, [r3, #32]
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 4620              		.loc 15 122 0
 4621 0054 BA69     		ldr	r2, [r7, #24]
 121:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 4622              		.loc 15 121 0
 4623 0056 9BB2     		uxth	r3, r3
 4624              	.LVL522:
 122:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 4625              		.loc 15 122 0
 4626 0058 0132     		adds	r2, r2, #1
 4627 005a C2F30802 		ubfx	r2, r2, #0, #9
 4628 005e BA61     		str	r2, [r7, #24]
 4629              	.LVL523:
 4630              	.LBE340:
 4631              	.LBE342:
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 4632              		.loc 11 205 0
 4633 0060 D4F8F024 		ldr	r2, [r4, #1264]
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4634              		.loc 11 206 0
 4635 0064 072D     		cmp	r5, #7
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 4636              		.loc 11 205 0
 4637 0066 1A44     		add	r2, r2, r3
 4638 0068 C4F8F024 		str	r2, [r4, #1264]
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4639              		.loc 11 206 0
 4640 006c 0FD1     		bne	.L244
 207:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 4641              		.loc 11 207 0
 4642 006e D4F8EC24 		ldr	r2, [r4, #1260]
 4643 0072 511C     		adds	r1, r2, #1
 4644 0074 2244     		add	r2, r2, r4
 4645 0076 C4F8EC14 		str	r1, [r4, #1260]
 4646 007a 1376     		strb	r3, [r2, #24]
 208:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 4647              		.loc 11 208 0
 4648 007c D4F8E434 		ldr	r3, [r4, #1252]
 4649 0080 013B     		subs	r3, r3, #1
 4650 0082 C4F8E434 		str	r3, [r4, #1252]
 4651              	.L279:
 209:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 4652              		.loc 11 209 0
 4653 0086 002B     		cmp	r3, #0
 4654 0088 D9D1     		bne	.L242
 210:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 4655              		.loc 11 210 0
 4656 008a 0823     		movs	r3, #8
 4657 008c 1AE0     		b	.L277
 4658              	.L244:
 211:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 4659              		.loc 11 211 0
 4660 008e A5B9     		cbnz	r5, .L247
 212:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 4661              		.loc 11 212 0
 4662 0090 FF2B     		cmp	r3, #255
 4663 0092 07D1     		bne	.L248
 213:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 4664              		.loc 11 213 0
 4665 0094 0123     		movs	r3, #1
 4666 0096 C4F8E034 		str	r3, [r4, #1248]
 214:./lib/ros_lib/ros/node_handle.h ****             }
 4667              		.loc 11 214 0
 4668 009a 06F11403 		add	r3, r6, #20
 4669 009e C4F80035 		str	r3, [r4, #1280]
 4670 00a2 CCE7     		b	.L242
 4671              	.L248:
 4672              	.LVL524:
 4673              	.LBB343:
 4674              	.LBB344:
 134:./lib/ros_lib/ArduinoHardware.h ****     }
 4675              		.loc 15 134 0
 4676 00a4 FFF7FEFF 		bl	millis
 4677              	.LVL525:
 4678              	.LBE344:
 4679              	.LBE343:
 216:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 4680              		.loc 11 216 0
 4681 00a8 801B     		subs	r0, r0, r6
 4682 00aa 0528     		cmp	r0, #5
 4683 00ac C7D9     		bls	.L242
 218:./lib/ros_lib/ros/node_handle.h ****               return -2;
 4684              		.loc 11 218 0
 4685 00ae 84F8F454 		strb	r5, [r4, #1268]
 219:./lib/ros_lib/ros/node_handle.h ****             }
 4686              		.loc 11 219 0
 4687 00b2 6FF00100 		mvn	r0, #1
 4688 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4689              	.LVL526:
 4690              	.L247:
 221:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 4691              		.loc 11 221 0
 4692 00ba 012D     		cmp	r5, #1
 4693 00bc 0FD1     		bne	.L250
 222:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 4694              		.loc 11 222 0
 4695 00be FE2B     		cmp	r3, #254
 4696 00c0 03D1     		bne	.L251
 223:./lib/ros_lib/ros/node_handle.h ****             }else{
 4697              		.loc 11 223 0
 4698 00c2 0223     		movs	r3, #2
 4699              	.L277:
 4700 00c4 C4F8E034 		str	r3, [r4, #1248]
 4701 00c8 B9E7     		b	.L242
 4702              	.L251:
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 4703              		.loc 11 226 0
 4704 00ca 94F8F434 		ldrb	r3, [r4, #1268]	@ zero_extendqisi2
 225:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 4705              		.loc 11 225 0
 4706 00ce C4F8E084 		str	r8, [r4, #1248]
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 4707              		.loc 11 226 0
 4708 00d2 002B     		cmp	r3, #0
 4709 00d4 B3D1     		bne	.L242
 227:./lib/ros_lib/ros/node_handle.h ****             }
 4710              		.loc 11 227 0
 4711 00d6 2046     		mov	r0, r4
 4712 00d8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 4713              	.LVL527:
 4714 00dc AFE7     		b	.L242
 4715              	.L250:
 229:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 4716              		.loc 11 229 0
 4717 00de 022D     		cmp	r5, #2
 4718 00e0 05D1     		bne	.L252
 230:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 4719              		.loc 11 230 0
 4720 00e2 C4F8E434 		str	r3, [r4, #1252]
 231:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 4721              		.loc 11 231 0
 4722 00e6 C4F8EC84 		str	r8, [r4, #1260]
 232:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 4723              		.loc 11 232 0
 4724 00ea 0322     		movs	r2, #3
 4725 00ec 20E0     		b	.L278
 4726              	.L252:
 234:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 4727              		.loc 11 234 0
 4728 00ee 032D     		cmp	r5, #3
 4729 00f0 07D1     		bne	.L253
 235:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 4730              		.loc 11 235 0
 4731 00f2 D4F8E424 		ldr	r2, [r4, #1252]
 4732 00f6 02EB0323 		add	r3, r2, r3, lsl #8
 4733 00fa C4F8E434 		str	r3, [r4, #1252]
 236:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 4734              		.loc 11 236 0
 4735 00fe 0423     		movs	r3, #4
 4736 0100 E0E7     		b	.L277
 4737              	.L253:
 237:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 4738              		.loc 11 237 0
 4739 0102 042D     		cmp	r5, #4
 4740 0104 0FD1     		bne	.L254
 238:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 4741              		.loc 11 238 0
 4742 0106 414B     		ldr	r3, .L281+4
 4743 0108 1340     		ands	r3, r3, r2
 4744 010a 002B     		cmp	r3, #0
 4745 010c BEBF     		ittt	lt
 4746 010e 03F1FF33 		addlt	r3, r3, #-1
 4747 0112 63F0FF03 		ornlt	r3, r3, #255
 4748 0116 0133     		addlt	r3, r3, #1
 4749 0118 FF2B     		cmp	r3, #255
 4750 011a 01D1     		bne	.L255
 239:./lib/ros_lib/ros/node_handle.h **** 	    else
 4751              		.loc 11 239 0
 4752 011c 0523     		movs	r3, #5
 4753 011e D1E7     		b	.L277
 4754              	.L255:
 241:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 4755              		.loc 11 241 0
 4756 0120 C4F8E084 		str	r8, [r4, #1248]
 4757 0124 8BE7     		b	.L242
 4758              	.L254:
 242:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 4759              		.loc 11 242 0
 4760 0126 052D     		cmp	r5, #5
 4761 0128 07D1     		bne	.L257
 243:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 4762              		.loc 11 243 0
 4763 012a C4F8E834 		str	r3, [r4, #1256]
 244:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 4764              		.loc 11 244 0
 4765 012e 0622     		movs	r2, #6
 4766              	.L278:
 4767 0130 C4F8E024 		str	r2, [r4, #1248]
 245:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 4768              		.loc 11 245 0
 4769 0134 C4F8F034 		str	r3, [r4, #1264]
 4770 0138 81E7     		b	.L242
 4771              	.L257:
 246:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 4772              		.loc 11 246 0
 4773 013a 062D     		cmp	r5, #6
 4774 013c 0BD1     		bne	.L258
 247:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 4775              		.loc 11 247 0
 4776 013e D4F8E824 		ldr	r2, [r4, #1256]
 4777 0142 02EB0323 		add	r3, r2, r3, lsl #8
 4778 0146 C4F8E834 		str	r3, [r4, #1256]
 248:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 4779              		.loc 11 248 0
 4780 014a 0723     		movs	r3, #7
 4781 014c C4F8E034 		str	r3, [r4, #1248]
 249:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 4782              		.loc 11 249 0
 4783 0150 D4F8E434 		ldr	r3, [r4, #1252]
 4784 0154 97E7     		b	.L279
 4785              	.L258:
 251:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 4786              		.loc 11 251 0
 4787 0156 082D     		cmp	r5, #8
 4788 0158 7FF471AF 		bne	.L242
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 4789              		.loc 11 253 0
 4790 015c 2B4B     		ldr	r3, .L281+4
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 4791              		.loc 11 252 0
 4792 015e C4F8E084 		str	r8, [r4, #1248]
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 4793              		.loc 11 253 0
 4794 0162 1340     		ands	r3, r3, r2
 4795 0164 002B     		cmp	r3, #0
 4796 0166 BEBF     		ittt	lt
 4797 0168 03F1FF33 		addlt	r3, r3, #-1
 4798 016c 63F0FF03 		ornlt	r3, r3, #255
 4799 0170 0133     		addlt	r3, r3, #1
 4800 0172 FF2B     		cmp	r3, #255
 4801 0174 7FF463AF 		bne	.L242
 254:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 4802              		.loc 11 254 0
 4803 0178 D4F8E834 		ldr	r3, [r4, #1256]
 4804 017c 6BB9     		cbnz	r3, .L261
 255:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 4805              		.loc 11 255 0
 4806 017e 2046     		mov	r0, r4
 4807 0180 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 4808              	.LVL528:
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 4809              		.loc 11 256 0
 4810 0184 2046     		mov	r0, r4
 4811 0186 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 4812              	.LVL529:
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 4813              		.loc 11 257 0
 4814 018a C4F8F864 		str	r6, [r4, #1272]
 258:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 4815              		.loc 11 258 0
 4816 018e C4F8FC64 		str	r6, [r4, #1276]
 259:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 4817              		.loc 11 259 0
 4818 0192 4FF0FF30 		mov	r0, #-1
 4819 0196 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4820              	.LVL530:
 4821              	.L261:
 260:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 4822              		.loc 11 260 0
 4823 019a 0A2B     		cmp	r3, #10
 4824 019c 04D1     		bne	.L262
 261:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 4825              		.loc 11 261 0
 4826 019e 4946     		mov	r1, r9
 4827 01a0 2046     		mov	r0, r4
 4828 01a2 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 4829              	.LVL531:
 4830 01a6 4AE7     		b	.L242
 4831              	.L262:
 262:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 4832              		.loc 11 262 0
 4833 01a8 062B     		cmp	r3, #6
 4834 01aa 08D1     		bne	.L263
 263:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 4835              		.loc 11 263 0
 4836 01ac 4946     		mov	r1, r9
 4837 01ae 04F5A160 		add	r0, r4, #1288
 4838 01b2 FFF7FEFF 		bl	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 4839              	.LVL532:
 264:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 4840              		.loc 11 264 0
 4841 01b6 0123     		movs	r3, #1
 4842 01b8 84F80435 		strb	r3, [r4, #1284]
 4843 01bc 3FE7     		b	.L242
 4844              	.L263:
 265:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 4845              		.loc 11 265 0
 4846 01be 0B2B     		cmp	r3, #11
 4847 01c0 02D1     		bne	.L264
 266:./lib/ros_lib/ros/node_handle.h ****               }else{
 4848              		.loc 11 266 0
 4849 01c2 84F8F484 		strb	r8, [r4, #1268]
 4850 01c6 3AE7     		b	.L242
 4851              	.L264:
 268:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 4852              		.loc 11 268 0
 4853 01c8 04EB8303 		add	r3, r4, r3, lsl #2
 4854 01cc D3F8EC02 		ldr	r0, [r3, #748]
 4855 01d0 0028     		cmp	r0, #0
 4856 01d2 3FF434AF 		beq	.L242
 269:./lib/ros_lib/ros/node_handle.h ****               }
 4857              		.loc 11 269 0
 4858 01d6 0368     		ldr	r3, [r0]
 4859 01d8 4946     		mov	r1, r9
 4860 01da 1B68     		ldr	r3, [r3]
 4861 01dc 9847     		blx	r3
 4862              	.LVL533:
 4863 01de 2EE7     		b	.L242
 4864              	.L243:
 4865              	.LBE336:
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 4866              		.loc 11 276 0
 4867 01e0 94F8F404 		ldrb	r0, [r4, #1268]	@ zero_extendqisi2
 4868 01e4 70B1     		cbz	r0, .L280
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 4869              		.loc 11 276 0 is_stmt 0 discriminator 1
 4870 01e6 40F6C412 		movw	r2, #2500
 4871 01ea D4F8F834 		ldr	r3, [r4, #1272]
 4872 01ee F31A     		subs	r3, r6, r3
 4873 01f0 9342     		cmp	r3, r2
 4874 01f2 04D9     		bls	.L266
 277:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 4875              		.loc 11 277 0 is_stmt 1
 4876 01f4 2046     		mov	r0, r4
 4877 01f6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 4878              	.LVL534:
 278:./lib/ros_lib/ros/node_handle.h ****         }
 4879              		.loc 11 278 0
 4880 01fa C4F8F864 		str	r6, [r4, #1272]
 4881              	.L266:
 281:./lib/ros_lib/ros/node_handle.h ****       }
 4882              		.loc 11 281 0
 4883 01fe 0020     		movs	r0, #0
 4884 0200 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4885              	.LVL535:
 4886              	.L280:
 282:./lib/ros_lib/ros/node_handle.h **** 
 4887              		.loc 11 282 0
 4888 0204 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4889              	.LVL536:
 4890              	.L282:
 4891              		.align	2
 4892              	.L281:
 4893 0208 00000000 		.word	.LANCHOR1
 4894 020c FF000080 		.word	-2147483393
 4895              		.cfi_endproc
 4896              	.LFE225:
 4897              		.fnend
 4899              		.global	__aeabi_i2d
 4900              		.global	__aeabi_ddiv
 4901              		.global	__aeabi_dsub
 4902              		.global	__aeabi_dcmpgt
 4903              		.global	__aeabi_dcmplt
 4904              		.section	.text.startup,"ax",%progbits
 4905              		.align	1
 4906              		.global	main
 4907              		.thumb
 4908              		.thumb_func
 4910              	main:
 4911              		.fnstart
 4912              	.LFB200:
  65:src/main.cpp  **** 
  66:src/main.cpp  **** 
  67:src/main.cpp  **** ros::Subscriber<roberto_msgs::MotorState> motor_sub("throttled_joy_vel", &motor_cb);
  68:src/main.cpp  **** //ros::Subscriber<sensor_msgs::Joy> motor_sub("joy", &motor_cb);
  69:src/main.cpp  **** ros::Subscriber<std_msgs::UInt8> led_sub("led", &led_cb);
  70:src/main.cpp  **** 
  71:src/main.cpp  **** std_msgs::Float32MultiArray str_msg;
  72:src/main.cpp  **** ros::Publisher chatter("encoder", &str_msg);
  73:src/main.cpp  **** 
  74:src/main.cpp  **** int main(){
 4913              		.loc 13 74 0
 4914              		.cfi_startproc
 4915              		@ args = 0, pretend = 0, frame = 776
 4916              		@ frame_needed = 0, uses_anonymous_args = 0
 4917 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4918              		.save {r4, r5, r6, r7, r8, r9, r10, lr}
 4919              	.LCFI58:
 4920              		.cfi_def_cfa_offset 32
 4921              		.cfi_offset 4, -32
 4922              		.cfi_offset 5, -28
 4923              		.cfi_offset 6, -24
 4924              		.cfi_offset 7, -20
 4925              		.cfi_offset 8, -16
 4926              		.cfi_offset 9, -12
 4927              		.cfi_offset 10, -8
 4928              		.cfi_offset 14, -4
 4929              		.pad #808
 4930 0004 ADF54A7D 		sub	sp, sp, #808
 4931              	.LCFI59:
 4932              		.cfi_def_cfa_offset 840
  75:src/main.cpp  ****   /* System Clocks Configuration */
  76:src/main.cpp  ****   RCC_Configuration();
 4933              		.loc 13 76 0
 4934 0008 FFF7FEFF 		bl	RCC_Configuration
 4935              	.LVL537:
  77:src/main.cpp  **** 
  78:src/main.cpp  ****   GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
 4936              		.loc 13 78 0
 4937 000c 0121     		movs	r1, #1
 4938 000e 5248     		ldr	r0, .L318
 4939 0010 FFF7FEFF 		bl	GPIO_PinRemapConfig
 4940              	.LVL538:
  79:src/main.cpp  ****   I2C1_Init();
 4941              		.loc 13 79 0
 4942 0014 FFF7FEFF 		bl	I2C1_Init
 4943              	.LVL539:
  80:src/main.cpp  ****   SysTick_Init();
 4944              		.loc 13 80 0
 4945 0018 FFF7FEFF 		bl	SysTick_Init
 4946              	.LVL540:
  81:src/main.cpp  ****   DEBUG_Init();
 4947              		.loc 13 81 0
 4948 001c FFF7FEFF 		bl	DEBUG_Init
 4949              	.LVL541:
  82:src/main.cpp  ****   LED_Init();
 4950              		.loc 13 82 0
 4951 0020 FFF7FEFF 		bl	LED_Init
 4952              	.LVL542:
  83:src/main.cpp  **** 
  84:src/main.cpp  ****   str_msg.data = (float *)malloc(sizeof(float)*4);
 4953              		.loc 13 84 0
 4954 0024 1020     		movs	r0, #16
 4955 0026 FFF7FEFF 		bl	malloc
 4956              	.LVL543:
 4957 002a 4C4C     		ldr	r4, .L318+4
  85:src/main.cpp  ****   str_msg.data_length = 4;
 4958              		.loc 13 85 0
 4959 002c 0423     		movs	r3, #4
  84:src/main.cpp  ****   str_msg.data_length = 4;
 4960              		.loc 13 84 0
 4961 002e C4F84C04 		str	r0, [r4, #1100]
 4962              	.LBB371:
 4963              	.LBB372:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 4964              		.loc 11 147 0
 4965 0032 04F25440 		addw	r0, r4, #1108
 4966              	.LBE372:
 4967              	.LBE371:
 4968              		.loc 13 85 0
 4969 0036 84F84434 		strb	r3, [r4, #1092]
 4970              	.LVL544:
 4971              	.LBB374:
 4972              	.LBB373:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 4973              		.loc 11 147 0
 4974 003a FFF7FEFF 		bl	_ZN15ArduinoHardware4initEv
 4975              	.LVL545:
 4976 003e 04F6C802 		addw	r2, r4, #2248
 151:./lib/ros_lib/ros/node_handle.h ****       };
 4977              		.loc 11 151 0
 4978 0042 1146     		mov	r1, r2
 148:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 4979              		.loc 11 148 0
 4980 0044 0023     		movs	r3, #0
 4981 0046 C4F83039 		str	r3, [r4, #2352]
 149:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 4982              		.loc 11 149 0
 4983 004a C4F83439 		str	r3, [r4, #2356]
 150:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 4984              		.loc 11 150 0
 4985 004e C4F83C39 		str	r3, [r4, #2364]
 151:./lib/ros_lib/ros/node_handle.h ****       };
 4986              		.loc 11 151 0
 4987 0052 C4F83839 		str	r3, [r4, #2360]
 4988              	.LVL546:
 4989              	.L286:
 4990              	.LBE373:
 4991              	.LBE374:
 4992              	.LBB375:
 4993              	.LBB376:
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 4994              		.loc 11 354 0
 4995 0056 51F8040F 		ldr	r0, [r1, #4]!
 4996 005a 40B9     		cbnz	r0, .L284
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 4997              		.loc 11 355 0
 4998 005c 4048     		ldr	r0, .L318+8
 4999 005e 04EB8301 		add	r1, r4, r3, lsl #2
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 5000              		.loc 11 356 0
 5001 0062 6433     		adds	r3, r3, #100
 5002              	.LVL547:
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 5003              		.loc 11 355 0
 5004 0064 C1F8CC08 		str	r0, [r1, #2252]
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 5005              		.loc 11 356 0
 5006 0068 C4F88439 		str	r3, [r4, #2436]
 5007 006c 02E0     		b	.L285
 5008              	.LVL548:
 5009              	.L284:
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 5010              		.loc 11 353 0
 5011 006e 0133     		adds	r3, r3, #1
 5012              	.LVL549:
 5013 0070 192B     		cmp	r3, #25
 5014 0072 F0D1     		bne	.L286
 5015              	.LVL550:
 5016              	.L285:
 5017              	.LBE376:
 5018              	.LBE375:
 5019              	.LBB377:
 5020              	.LBB378:
 5021 0074 0023     		movs	r3, #0
 5022              	.LVL551:
 5023              	.L289:
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 5024              		.loc 11 354 0
 5025 0076 52F8041F 		ldr	r1, [r2, #4]!
 5026 007a 41B9     		cbnz	r1, .L287
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 5027              		.loc 11 355 0
 5028 007c 3949     		ldr	r1, .L318+12
 5029 007e 04EB8302 		add	r2, r4, r3, lsl #2
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 5030              		.loc 11 356 0
 5031 0082 6433     		adds	r3, r3, #100
 5032              	.LVL552:
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 5033              		.loc 11 355 0
 5034 0084 C2F8CC18 		str	r1, [r2, #2252]
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 5035              		.loc 11 356 0
 5036 0088 C4F8C439 		str	r3, [r4, #2500]
 5037 008c 02E0     		b	.L288
 5038              	.LVL553:
 5039              	.L287:
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 5040              		.loc 11 353 0
 5041 008e 0133     		adds	r3, r3, #1
 5042              	.LVL554:
 5043 0090 192B     		cmp	r3, #25
 5044 0092 F0D1     		bne	.L289
 5045              	.LVL555:
 5046              	.L288:
 5047 0094 344A     		ldr	r2, .L318+16
 5048              	.LBE378:
 5049              	.LBE377:
 5050              	.LBB379:
 5051              	.LBB380:
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 5052              		.loc 11 339 0
 5053 0096 0023     		movs	r3, #0
 5054              	.LVL556:
 5055              	.L292:
 340:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 5056              		.loc 11 340 0
 5057 0098 52F8041F 		ldr	r1, [r2, #4]!
 5058 009c 61B9     		cbnz	r1, .L290
 341:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 5059              		.loc 11 341 0
 5060 009e 334A     		ldr	r2, .L318+20
 5061 00a0 04EB8301 		add	r1, r4, r3, lsl #2
 5062 00a4 C1F86828 		str	r2, [r1, #2152]
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 5063              		.loc 11 342 0
 5064 00a8 7D33     		adds	r3, r3, #125
 5065              	.LVL557:
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 5066              		.loc 11 343 0
 5067 00aa A2F28C52 		subw	r2, r2, #1420
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 5068              		.loc 11 342 0
 5069 00ae C4F8E439 		str	r3, [r4, #2532]
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 5070              		.loc 11 343 0
 5071 00b2 C4F8E829 		str	r2, [r4, #2536]
 5072 00b6 02E0     		b	.L291
 5073              	.LVL558:
 5074              	.L290:
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 5075              		.loc 11 339 0
 5076 00b8 0133     		adds	r3, r3, #1
 5077              	.LVL559:
 5078 00ba 192B     		cmp	r3, #25
 5079 00bc ECD1     		bne	.L292
 5080              	.LVL560:
 5081              	.L291:
 5082              	.LBE380:
 5083              	.LBE379:
  86:src/main.cpp  **** 
  87:src/main.cpp  ****   nh.initNode();
  88:src/main.cpp  **** 
  89:src/main.cpp  ****   /*while(!nh.connected()){
  90:src/main.cpp  ****     nh.spinOnce();
  91:src/main.cpp  ****   }*/
  92:src/main.cpp  **** 
  93:src/main.cpp  ****   nh.subscribe(motor_sub);
  94:src/main.cpp  ****   nh.subscribe(led_sub);
  95:src/main.cpp  ****   nh.advertise(chatter);
  96:src/main.cpp  ****   
  97:src/main.cpp  **** 
  98:src/main.cpp  ****   float KP;
  99:src/main.cpp  ****   if(!nh.getParam("serial_node/KP", &KP, 1)){
 5084              		.loc 13 99 0
 5085 00be 0123     		movs	r3, #1
 5086 00c0 09AA     		add	r2, sp, #36
 5087 00c2 2B49     		ldr	r1, .L318+24
 5088 00c4 2B48     		ldr	r0, .L318+28
 5089 00c6 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 5090              	.LVL561:
 5091 00ca 08B9     		cbnz	r0, .L293
 100:src/main.cpp  ****     KP = 5000;
 5092              		.loc 13 100 0
 5093 00cc 2A4B     		ldr	r3, .L318+32
 5094 00ce 0993     		str	r3, [sp, #36]	@ float
 5095              	.L293:
 101:src/main.cpp  ****   }
 102:src/main.cpp  ****   float KI;
 103:src/main.cpp  ****   if(!nh.getParam("serial_node/KI", &KI, 1)){
 5096              		.loc 13 103 0
 5097 00d0 0123     		movs	r3, #1
 5098 00d2 0AAA     		add	r2, sp, #40
 5099 00d4 2949     		ldr	r1, .L318+36
 5100 00d6 2748     		ldr	r0, .L318+28
 5101 00d8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 5102              	.LVL562:
 5103 00dc 08B9     		cbnz	r0, .L294
 104:src/main.cpp  ****     KI = 5000;
 5104              		.loc 13 104 0
 5105 00de 264B     		ldr	r3, .L318+32
 5106 00e0 0A93     		str	r3, [sp, #40]	@ float
 5107              	.L294:
 105:src/main.cpp  ****   }
 106:src/main.cpp  ****   float KD;
 107:src/main.cpp  ****   if(!nh.getParam("serial_node/KD", &KD, 1)){
 5108              		.loc 13 107 0
 5109 00e2 0123     		movs	r3, #1
 5110 00e4 0BAA     		add	r2, sp, #44
 5111 00e6 2649     		ldr	r1, .L318+40
 5112 00e8 2248     		ldr	r0, .L318+28
 5113 00ea FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 5114              	.LVL563:
 5115 00ee 10B9     		cbnz	r0, .L295
 108:src/main.cpp  ****     KD = 4;
 5116              		.loc 13 108 0
 5117 00f0 4FF08143 		mov	r3, #1082130432
 5118 00f4 0B93     		str	r3, [sp, #44]	@ float
 5119              	.L295:
 109:src/main.cpp  ****   }
 110:src/main.cpp  ****   float integralSaturation;
 111:src/main.cpp  ****   if(!nh.getParam("serial_node/integralSaturation", &integralSaturation, 1)){
 5120              		.loc 13 111 0
 5121 00f6 0123     		movs	r3, #1
 5122 00f8 0CAA     		add	r2, sp, #48
 5123 00fa 2249     		ldr	r1, .L318+44
 5124 00fc 1D48     		ldr	r0, .L318+28
 5125 00fe FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 5126              	.LVL564:
 5127 0102 08B9     		cbnz	r0, .L296
 112:src/main.cpp  ****     integralSaturation = 10000;
 5128              		.loc 13 112 0
 5129 0104 204B     		ldr	r3, .L318+48
 5130 0106 0C93     		str	r3, [sp, #48]	@ float
 5131              	.L296:
 113:src/main.cpp  ****   }
 114:src/main.cpp  ****   float wheelRadius;
 115:src/main.cpp  ****   if(!nh.getParam("serial_node/wheelRadius", &wheelRadius, 1)){
 5132              		.loc 13 115 0
 5133 0108 0123     		movs	r3, #1
 5134 010a 0DAA     		add	r2, sp, #52
 5135 010c 1F49     		ldr	r1, .L318+52
 5136 010e 1948     		ldr	r0, .L318+28
 5137 0110 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 5138              	.LVL565:
 5139 0114 08B9     		cbnz	r0, .L297
 116:src/main.cpp  ****     wheelRadius = 0.04;
 5140              		.loc 13 116 0
 5141 0116 1E4B     		ldr	r3, .L318+56
 5142 0118 0D93     		str	r3, [sp, #52]	@ float
 5143              	.L297:
 117:src/main.cpp  ****   }
 118:src/main.cpp  **** 
 119:src/main.cpp  ****   if(!nh.getParam("serial_node/wheelSeperation", &wheelSeperation, 1)){
 5144              		.loc 13 119 0
 5145 011a 104C     		ldr	r4, .L318+4
 5146 011c 0123     		movs	r3, #1
 5147 011e 04F51F62 		add	r2, r4, #2544
 5148 0122 1C49     		ldr	r1, .L318+60
 5149 0124 04F58A60 		add	r0, r4, #1104
 5150 0128 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 5151              	.LVL566:
 5152 012c 10B9     		cbnz	r0, .L298
 120:src/main.cpp  ****     wheelSeperation = 0.3;
 5153              		.loc 13 120 0
 5154 012e 1A4B     		ldr	r3, .L318+64
 5155 0130 C4F8F039 		str	r3, [r4, #2544]	@ float
 5156              	.L298:
 5157              	.LVL567:
 5158              	.LBB381:
 5159              	.LBB382:
 507:./lib/ros_lib/ros/node_handle.h ****           if (length == req_param_resp.ints_length){
 5160              		.loc 11 507 0
 5161 0134 094C     		ldr	r4, .L318+4
 5162 0136 4FF47A72 		mov	r2, #1000
 5163 013a 1849     		ldr	r1, .L318+68
 5164 013c 04F58A60 		add	r0, r4, #1104
 5165 0140 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE12requestParamEPKci
 5166              	.LVL568:
 5167 0144 60B3     		cbz	r0, .L312
 5168              	.LBB383:
 508:./lib/ros_lib/ros/node_handle.h ****             //copy it over
 5169              		.loc 11 508 0
 5170 0146 94F85C39 		ldrb	r3, [r4, #2396]	@ zero_extendqisi2
 5171 014a 012B     		cmp	r3, #1
 5172 014c 28D1     		bne	.L312
 5173              	.LVL569:
 5174              	.LBE383:
 5175              	.LBE382:
 5176              	.LBB384:
 5177              	.LBB385:
 511:./lib/ros_lib/ros/node_handle.h ****             return true;
 5178              		.loc 11 511 0
 5179 014e D4F86439 		ldr	r3, [r4, #2404]
 5180 0152 1E68     		ldr	r6, [r3]
 5181              	.LVL570:
 5182 0154 25E0     		b	.L299
 5183              	.L319:
 5184 0156 00BF     		.align	2
 5185              	.L318:
 5186 0158 00023000 		.word	3146240
 5187 015c 00000000 		.word	.LANCHOR1
 5188 0160 80090000 		.word	.LANCHOR1+2432
 5189 0164 C0090000 		.word	.LANCHOR1+2496
 5190 0168 64080000 		.word	.LANCHOR1+2148
 5191 016c DC090000 		.word	.LANCHOR1+2524
 5192 0170 68020000 		.word	.LC22
 5193 0174 50040000 		.word	.LANCHOR1+1104
 5194 0178 00409C45 		.word	1167867904
 5195 017c 77020000 		.word	.LC23
 5196 0180 86020000 		.word	.LC24
 5197 0184 95020000 		.word	.LC25
 5198 0188 00401C46 		.word	1176256512
 5199 018c B4020000 		.word	.LC26
 5200 0190 0AD7233D 		.word	1025758986
 5201 0194 CC020000 		.word	.LC27
 5202 0198 9A99993E 		.word	1050253722
 5203 019c E8020000 		.word	.LC28
 5204              	.LVL571:
 5205              	.L312:
 5206              	.LBE385:
 5207              	.LBE384:
 5208              	.LBE381:
 121:src/main.cpp  ****   }
 122:src/main.cpp  **** 
 123:src/main.cpp  ****   int enc_timeout;
 124:src/main.cpp  ****   if(!nh.getParam("serial_node/encoderTimeout", &enc_timeout, 1)){
 125:src/main.cpp  ****     enc_timeout = 10;
 5209              		.loc 13 125 0
 5210 01a0 0A26     		movs	r6, #10
 5211              	.LVL572:
 5212              	.L299:
 126:src/main.cpp  ****   }
 127:src/main.cpp  **** 
 128:src/main.cpp  ****   delay(1000);
 129:src/main.cpp  **** 
 130:src/main.cpp  ****   motorSettings SL(MOTOR_TYPE_SERVO, "servo_left", TIM4, 4);
 5213              		.loc 13 130 0
 5214 01a2 0427     		movs	r7, #4
 128:src/main.cpp  **** 
 5215              		.loc 13 128 0
 5216 01a4 4FF47A70 		mov	r0, #1000
 5217 01a8 FFF7FEFF 		bl	delay
 5218              	.LVL573:
 5219              		.loc 13 130 0
 5220 01ac A24B     		ldr	r3, .L320
 5221 01ae A34A     		ldr	r2, .L320+4
 5222 01b0 0121     		movs	r1, #1
 5223 01b2 0097     		str	r7, [sp]
 5224 01b4 0EA8     		add	r0, sp, #56
 5225 01b6 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 5226              	.LVL574:
 131:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 5227              		.loc 13 131 0
 5228 01ba 4FF40073 		mov	r3, #512
 132:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 5229              		.loc 13 132 0
 5230 01be A04C     		ldr	r4, .L320+8
 131:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 5231              		.loc 13 131 0
 5232 01c0 1493     		str	r3, [sp, #80]
 133:src/main.cpp  ****   SL.encoder_timeout = enc_timeout;
 134:src/main.cpp  **** 
 135:src/main.cpp  ****   motorSettings SR(MOTOR_TYPE_SERVO, "servo_right", TIM4, 3);
 5233              		.loc 13 135 0
 5234 01c2 0323     		movs	r3, #3
 136:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 5235              		.loc 13 136 0
 5236 01c4 4FF48079 		mov	r9, #256
 137:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 138:src/main.cpp  ****   SR.encoder_timeout = enc_timeout;
 139:src/main.cpp  **** 
 140:src/main.cpp  ****   motorSettings FR(MOTOR_TYPE_DC_MOTOR, "front_right", TIM1, 1);
 5237              		.loc 13 140 0
 5238 01c8 4FF00108 		mov	r8, #1
 135:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 5239              		.loc 13 135 0
 5240 01cc 0093     		str	r3, [sp]
 5241 01ce 9D4A     		ldr	r2, .L320+12
 5242 01d0 994B     		ldr	r3, .L320
 5243 01d2 0121     		movs	r1, #1
 5244 01d4 27A8     		add	r0, sp, #156
 132:src/main.cpp  ****   SL.encoder_timeout = enc_timeout;
 5245              		.loc 13 132 0
 5246 01d6 1594     		str	r4, [sp, #84]
 133:src/main.cpp  **** 
 5247              		.loc 13 133 0
 5248 01d8 2196     		str	r6, [sp, #132]
 135:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 5249              		.loc 13 135 0
 5250 01da FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 5251              	.LVL575:
 5252              		.loc 13 140 0
 5253 01de CDF80080 		str	r8, [sp]
 5254 01e2 994B     		ldr	r3, .L320+16
 5255 01e4 994A     		ldr	r2, .L320+20
 5256 01e6 0221     		movs	r1, #2
 5257 01e8 0DEB0900 		add	r0, sp, r9
 141:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 142:src/main.cpp  ****               GPIO_Pin_15, GPIOC, GPIO_Pin_0, GPIOA,
 143:src/main.cpp  ****               GPIO_Pin_8, GPIOA);
 5258              		.loc 13 143 0
 5259 01ec 984D     		ldr	r5, .L320+24
 136:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 5260              		.loc 13 136 0
 5261 01ee CDF8B490 		str	r9, [sp, #180]
 137:src/main.cpp  ****   SR.encoder_timeout = enc_timeout;
 5262              		.loc 13 137 0
 5263 01f2 2E94     		str	r4, [sp, #184]
 138:src/main.cpp  **** 
 5264              		.loc 13 138 0
 5265 01f4 3A96     		str	r6, [sp, #232]
 140:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 5266              		.loc 13 140 0
 5267 01f6 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 5268              	.LVL576:
 5269              		.loc 13 143 0
 5270 01fa 964A     		ldr	r2, .L320+28
 5271 01fc CDF80C80 		str	r8, [sp, #12]
 5272 0200 4FF40048 		mov	r8, #32768
 5273 0204 0DEB0900 		add	r0, sp, r9
 5274 0208 CDF81490 		str	r9, [sp, #20]
 5275 020c 0292     		str	r2, [sp, #8]
 5276 020e 8DE80401 		stmia	sp, {r2, r8}
 5277 0212 4FF48043 		mov	r3, #16384
 5278 0216 4FF40051 		mov	r1, #8192
 5279 021a 0695     		str	r5, [sp, #24]
 5280 021c 0495     		str	r5, [sp, #16]
 5281 021e FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5282              	.LVL577:
 144:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 5283              		.loc 13 144 0
 5284 0222 1823     		movs	r3, #24
 5285 0224 ADF84831 		strh	r3, [sp, #328]	@ movhi
 145:src/main.cpp  ****   FR.setRegulator(KP,KI,KD,integralSaturation);
 5286              		.loc 13 145 0
 5287 0228 0C9B     		ldr	r3, [sp, #48]	@ float
 5288 022a 0DEB0900 		add	r0, sp, r9
 5289 022e 0093     		str	r3, [sp]	@ float
 5290 0230 0A9A     		ldr	r2, [sp, #40]	@ float
 5291 0232 0B9B     		ldr	r3, [sp, #44]	@ float
 5292 0234 0999     		ldr	r1, [sp, #36]	@ float
 5293 0236 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 5294              	.LVL578:
 146:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 5295              		.loc 13 146 0
 5296 023a 0D9B     		ldr	r3, [sp, #52]	@ float
 147:src/main.cpp  ****   FR.encoder_timeout = enc_timeout;
 148:src/main.cpp  **** 
 149:src/main.cpp  ****   motorSettings FL(MOTOR_TYPE_DC_MOTOR, "front_left", TIM3, 4);
 5297              		.loc 13 149 0
 5298 023c 864A     		ldr	r2, .L320+32
 146:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 5299              		.loc 13 146 0
 5300 023e 5893     		str	r3, [sp, #352]	@ float
 5301              		.loc 13 149 0
 5302 0240 0221     		movs	r1, #2
 5303 0242 864B     		ldr	r3, .L320+36
 5304 0244 0097     		str	r7, [sp]
 5305 0246 59A8     		add	r0, sp, #356
 150:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 151:src/main.cpp  ****               GPIO_Pin_4, GPIOA,GPIO_Pin_10,GPIOB,
 152:src/main.cpp  ****               GPIO_Pin_1, GPIOB);
 5306              		.loc 13 152 0
 5307 0248 4FF00209 		mov	r9, #2
 147:src/main.cpp  ****   FR.encoder_timeout = enc_timeout;
 5308              		.loc 13 147 0
 5309 024c 5396     		str	r6, [sp, #332]
 5310              		.loc 13 152 0
 5311 024e 4FF0100A 		mov	r10, #16
 149:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 5312              		.loc 13 149 0
 5313 0252 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 5314              	.LVL579:
 5315              		.loc 13 152 0
 5316 0256 4FF48063 		mov	r3, #1024
 5317 025a 2246     		mov	r2, r4
 5318 025c 0694     		str	r4, [sp, #24]
 5319 025e 0494     		str	r4, [sp, #16]
 5320 0260 0393     		str	r3, [sp, #12]
 5321 0262 3946     		mov	r1, r7
 5322 0264 2023     		movs	r3, #32
 5323 0266 59A8     		add	r0, sp, #356
 5324 0268 CDF81490 		str	r9, [sp, #20]
 5325 026c 0295     		str	r5, [sp, #8]
 5326 026e 8DE82004 		stmia	sp, {r5, r10}
 5327 0272 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5328              	.LVL580:
 153:src/main.cpp  ****   FL.encoderAddr = (0x10);
 154:src/main.cpp  ****   FL.setRegulator(KP,KI,KD,integralSaturation);
 5329              		.loc 13 154 0
 5330 0276 0C9B     		ldr	r3, [sp, #48]	@ float
 5331 0278 0A9A     		ldr	r2, [sp, #40]	@ float
 5332 027a 0093     		str	r3, [sp]	@ float
 5333 027c 0999     		ldr	r1, [sp, #36]	@ float
 5334 027e 0B9B     		ldr	r3, [sp, #44]	@ float
 5335 0280 59A8     		add	r0, sp, #356
 153:src/main.cpp  ****   FL.encoderAddr = (0x10);
 5336              		.loc 13 153 0
 5337 0282 ADF8ACA1 		strh	r10, [sp, #428]	@ movhi
 5338              		.loc 13 154 0
 5339 0286 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 5340              	.LVL581:
 155:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 5341              		.loc 13 155 0
 5342 028a 0D9B     		ldr	r3, [sp, #52]	@ float
 156:src/main.cpp  ****   FL.encoder_timeout = enc_timeout;
 157:src/main.cpp  **** 
 158:src/main.cpp  ****   motorSettings RL(MOTOR_TYPE_DC_MOTOR, "rear_left", TIM2, 4);
 5343              		.loc 13 158 0
 5344 028c 744A     		ldr	r2, .L320+40
 155:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 5345              		.loc 13 155 0
 5346 028e 7193     		str	r3, [sp, #452]	@ float
 5347              		.loc 13 158 0
 5348 0290 4946     		mov	r1, r9
 5349 0292 4FF08043 		mov	r3, #1073741824
 5350 0296 0097     		str	r7, [sp]
 5351 0298 72A8     		add	r0, sp, #456
 156:src/main.cpp  ****   FL.encoder_timeout = enc_timeout;
 5352              		.loc 13 156 0
 5353 029a 6C96     		str	r6, [sp, #432]
 5354              		.loc 13 158 0
 5355 029c FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 5356              	.LVL582:
 159:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 160:src/main.cpp  ****     GPIO_Pin_13, GPIOB, GPIO_Pin_14, GPIOB,
 161:src/main.cpp  ****     GPIO_Pin_3, GPIOA);
 5357              		.loc 13 161 0
 5358 02a0 4FF48043 		mov	r3, #16384
 5359 02a4 0826     		movs	r6, #8
 5360              	.LVL583:
 5361 02a6 0393     		str	r3, [sp, #12]
 5362 02a8 4FF40053 		mov	r3, #8192
 5363 02ac 2246     		mov	r2, r4
 5364 02ae 0494     		str	r4, [sp, #16]
 5365 02b0 0294     		str	r4, [sp, #8]
 5366 02b2 0193     		str	r3, [sp, #4]
 5367 02b4 0094     		str	r4, [sp]
 5368 02b6 4FF48053 		mov	r3, #4096
 5369 02ba 4FF40061 		mov	r1, #2048
 5370 02be 72A8     		add	r0, sp, #456
 5371 02c0 0695     		str	r5, [sp, #24]
 5372 02c2 0596     		str	r6, [sp, #20]
 5373 02c4 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5374              	.LVL584:
 162:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 5375              		.loc 13 162 0
 5376 02c8 1423     		movs	r3, #20
 5377 02ca ADF81032 		strh	r3, [sp, #528]	@ movhi
 163:src/main.cpp  ****   RL.setRegulator(KP,KI,KD,integralSaturation);
 5378              		.loc 13 163 0
 5379 02ce 0C9B     		ldr	r3, [sp, #48]	@ float
 5380 02d0 0A9A     		ldr	r2, [sp, #40]	@ float
 5381 02d2 0093     		str	r3, [sp]	@ float
 5382 02d4 0999     		ldr	r1, [sp, #36]	@ float
 5383 02d6 0B9B     		ldr	r3, [sp, #44]	@ float
 5384 02d8 72A8     		add	r0, sp, #456
 5385 02da FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 5386              	.LVL585:
 164:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 5387              		.loc 13 164 0
 5388 02de 0D9B     		ldr	r3, [sp, #52]	@ float
 165:src/main.cpp  **** 
 166:src/main.cpp  ****   motorSettings RR(MOTOR_TYPE_DC_MOTOR, "rear_right", TIM1, 4);
 5389              		.loc 13 166 0
 5390 02e0 604A     		ldr	r2, .L320+44
 164:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 5391              		.loc 13 164 0
 5392 02e2 8A93     		str	r3, [sp, #552]	@ float
 5393              		.loc 13 166 0
 5394 02e4 4946     		mov	r1, r9
 5395 02e6 584B     		ldr	r3, .L320+16
 5396 02e8 0097     		str	r7, [sp]
 5397 02ea 8BA8     		add	r0, sp, #556
 5398 02ec FFF7FEFF 		bl	_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
 5399              	.LVL586:
 167:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 168:src/main.cpp  ****               GPIO_Pin_15, GPIOA, GPIO_Pin_3, GPIOB,
 169:src/main.cpp  ****               GPIO_Pin_11, GPIOA);
 5400              		.loc 13 169 0
 5401 02f0 4FF40063 		mov	r3, #2048
 5402 02f4 2246     		mov	r2, r4
 5403 02f6 0593     		str	r3, [sp, #20]
 5404 02f8 0494     		str	r4, [sp, #16]
 5405 02fa 4FF48053 		mov	r3, #4096
 5406 02fe 4146     		mov	r1, r8
 5407 0300 8BA8     		add	r0, sp, #556
 5408 0302 0695     		str	r5, [sp, #24]
 5409 0304 0396     		str	r6, [sp, #12]
 5410 0306 0295     		str	r5, [sp, #8]
 5411 0308 8DE82001 		stmia	sp, {r5, r8}
 5412 030c FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5413              	.LVL587:
 170:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 5414              		.loc 13 170 0
 5415 0310 1C23     		movs	r3, #28
 5416 0312 ADF87432 		strh	r3, [sp, #628]	@ movhi
 171:src/main.cpp  ****   RR.setRegulator(KP,KI,KD,integralSaturation);
 5417              		.loc 13 171 0
 5418 0316 0C9B     		ldr	r3, [sp, #48]	@ float
 5419 0318 0A9A     		ldr	r2, [sp, #40]	@ float
 5420 031a 0093     		str	r3, [sp]	@ float
 5421 031c 0999     		ldr	r1, [sp, #36]	@ float
 5422 031e 0B9B     		ldr	r3, [sp, #44]	@ float
 5423 0320 8BA8     		add	r0, sp, #556
 5424 0322 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEffff
 5425              	.LVL588:
 172:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 5426              		.loc 13 172 0
 5427 0326 0D9B     		ldr	r3, [sp, #52]	@ float
 173:src/main.cpp  **** 
 174:src/main.cpp  ****   char error[150];
 175:src/main.cpp  ****   servo_left = motor::createMotor(&SL);
 5428              		.loc 13 175 0
 5429 0328 0EA8     		add	r0, sp, #56
 172:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 5430              		.loc 13 172 0
 5431 032a A393     		str	r3, [sp, #652]	@ float
 5432              		.loc 13 175 0
 5433 032c FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5434              	.LVL589:
 5435 0330 4D4C     		ldr	r4, .L320+48
 176:src/main.cpp  ****   if(!servo_left->motorInit()){
 5436              		.loc 13 176 0
 5437 0332 0368     		ldr	r3, [r0]
 175:src/main.cpp  ****   if(!servo_left->motorInit()){
 5438              		.loc 13 175 0
 5439 0334 2061     		str	r0, [r4, #16]
 5440              		.loc 13 176 0
 5441 0336 DB68     		ldr	r3, [r3, #12]
 5442 0338 9847     		blx	r3
 5443              	.LVL590:
 5444 033a 68B9     		cbnz	r0, .L300
 177:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 5445              		.loc 13 177 0
 5446 033c 2069     		ldr	r0, [r4, #16]
 5447 033e 0368     		ldr	r3, [r0]
 5448 0340 1B69     		ldr	r3, [r3, #16]
 5449 0342 9847     		blx	r3
 5450              	.LVL591:
 5451 0344 4949     		ldr	r1, .L320+52
 5452 0346 0246     		mov	r2, r0
 5453 0348 A4A8     		add	r0, sp, #656
 5454 034a FFF7FEFF 		bl	sprintf
 5455              	.LVL592:
 178:src/main.cpp  ****     nh.logerror(error);
 5456              		.loc 13 178 0
 5457 034e A4A9     		add	r1, sp, #656
 5458 0350 04F58A60 		add	r0, r4, #1104
 5459 0354 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5460              	.LVL593:
 5461              	.L300:
 179:src/main.cpp  ****   }
 180:src/main.cpp  **** 
 181:src/main.cpp  ****   servo_right = motor::createMotor(&SR);
 5462              		.loc 13 181 0
 5463 0358 27A8     		add	r0, sp, #156
 5464 035a FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5465              	.LVL594:
 182:src/main.cpp  ****   if(!servo_right->motorInit()){
 5466              		.loc 13 182 0
 5467 035e 0368     		ldr	r3, [r0]
 181:src/main.cpp  ****   if(!servo_right->motorInit()){
 5468              		.loc 13 181 0
 5469 0360 6061     		str	r0, [r4, #20]
 5470              		.loc 13 182 0
 5471 0362 DB68     		ldr	r3, [r3, #12]
 181:src/main.cpp  ****   if(!servo_right->motorInit()){
 5472              		.loc 13 181 0
 5473 0364 404D     		ldr	r5, .L320+48
 5474              		.loc 13 182 0
 5475 0366 9847     		blx	r3
 5476              	.LVL595:
 5477 0368 68B9     		cbnz	r0, .L301
 183:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 5478              		.loc 13 183 0
 5479 036a 6869     		ldr	r0, [r5, #20]
 5480 036c 0368     		ldr	r3, [r0]
 5481 036e 1B69     		ldr	r3, [r3, #16]
 5482 0370 9847     		blx	r3
 5483              	.LVL596:
 5484 0372 3E49     		ldr	r1, .L320+52
 5485 0374 0246     		mov	r2, r0
 5486 0376 A4A8     		add	r0, sp, #656
 5487 0378 FFF7FEFF 		bl	sprintf
 5488              	.LVL597:
 184:src/main.cpp  ****     nh.logerror(error);
 5489              		.loc 13 184 0
 5490 037c A4A9     		add	r1, sp, #656
 5491 037e 05F58A60 		add	r0, r5, #1104
 5492 0382 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5493              	.LVL598:
 5494              	.L301:
 185:src/main.cpp  ****   }
 186:src/main.cpp  **** 
 187:src/main.cpp  ****   front_left = motor::createMotor(&FL);
 5495              		.loc 13 187 0
 5496 0386 59A8     		add	r0, sp, #356
 5497 0388 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5498              	.LVL599:
 188:src/main.cpp  ****   if(!front_left->motorInit()){
 5499              		.loc 13 188 0
 5500 038c 0368     		ldr	r3, [r0]
 187:src/main.cpp  ****   if(!front_left->motorInit()){
 5501              		.loc 13 187 0
 5502 038e 6060     		str	r0, [r4, #4]
 5503              		.loc 13 188 0
 5504 0390 DB68     		ldr	r3, [r3, #12]
 187:src/main.cpp  ****   if(!front_left->motorInit()){
 5505              		.loc 13 187 0
 5506 0392 354D     		ldr	r5, .L320+48
 5507              		.loc 13 188 0
 5508 0394 9847     		blx	r3
 5509              	.LVL600:
 5510 0396 68B9     		cbnz	r0, .L302
 189:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 5511              		.loc 13 189 0
 5512 0398 6868     		ldr	r0, [r5, #4]
 5513 039a 0368     		ldr	r3, [r0]
 5514 039c 1B69     		ldr	r3, [r3, #16]
 5515 039e 9847     		blx	r3
 5516              	.LVL601:
 5517 03a0 3249     		ldr	r1, .L320+52
 5518 03a2 0246     		mov	r2, r0
 5519 03a4 A4A8     		add	r0, sp, #656
 5520 03a6 FFF7FEFF 		bl	sprintf
 5521              	.LVL602:
 190:src/main.cpp  ****     nh.logerror(error);
 5522              		.loc 13 190 0
 5523 03aa A4A9     		add	r1, sp, #656
 5524 03ac 05F58A60 		add	r0, r5, #1104
 5525 03b0 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5526              	.LVL603:
 5527              	.L302:
 191:src/main.cpp  ****   }
 192:src/main.cpp  **** 
 193:src/main.cpp  ****   front_right = motor::createMotor(&FR);
 5528              		.loc 13 193 0
 5529 03b4 40A8     		add	r0, sp, #256
 5530 03b6 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5531              	.LVL604:
 194:src/main.cpp  ****   if(!front_right->motorInit()){
 5532              		.loc 13 194 0
 5533 03ba 0368     		ldr	r3, [r0]
 193:src/main.cpp  ****   if(!front_right->motorInit()){
 5534              		.loc 13 193 0
 5535 03bc 2060     		str	r0, [r4]
 5536              		.loc 13 194 0
 5537 03be DB68     		ldr	r3, [r3, #12]
 193:src/main.cpp  ****   if(!front_right->motorInit()){
 5538              		.loc 13 193 0
 5539 03c0 294D     		ldr	r5, .L320+48
 5540              		.loc 13 194 0
 5541 03c2 9847     		blx	r3
 5542              	.LVL605:
 5543 03c4 68B9     		cbnz	r0, .L303
 195:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 5544              		.loc 13 195 0
 5545 03c6 2868     		ldr	r0, [r5]
 5546 03c8 0368     		ldr	r3, [r0]
 5547 03ca 1B69     		ldr	r3, [r3, #16]
 5548 03cc 9847     		blx	r3
 5549              	.LVL606:
 5550 03ce 2749     		ldr	r1, .L320+52
 5551 03d0 0246     		mov	r2, r0
 5552 03d2 A4A8     		add	r0, sp, #656
 5553 03d4 FFF7FEFF 		bl	sprintf
 5554              	.LVL607:
 196:src/main.cpp  ****     nh.logerror(error);
 5555              		.loc 13 196 0
 5556 03d8 A4A9     		add	r1, sp, #656
 5557 03da 05F58A60 		add	r0, r5, #1104
 5558 03de FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5559              	.LVL608:
 5560              	.L303:
 197:src/main.cpp  ****   }
 198:src/main.cpp  **** 
 199:src/main.cpp  ****   rear_left = motor::createMotor(&RL);
 5561              		.loc 13 199 0
 5562 03e2 72A8     		add	r0, sp, #456
 5563 03e4 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5564              	.LVL609:
 200:src/main.cpp  ****   if(!rear_left->motorInit()){
 5565              		.loc 13 200 0
 5566 03e8 0368     		ldr	r3, [r0]
 199:src/main.cpp  ****   if(!rear_left->motorInit()){
 5567              		.loc 13 199 0
 5568 03ea E060     		str	r0, [r4, #12]
 5569              		.loc 13 200 0
 5570 03ec DB68     		ldr	r3, [r3, #12]
 199:src/main.cpp  ****   if(!rear_left->motorInit()){
 5571              		.loc 13 199 0
 5572 03ee 1E4D     		ldr	r5, .L320+48
 5573              		.loc 13 200 0
 5574 03f0 9847     		blx	r3
 5575              	.LVL610:
 5576 03f2 68B9     		cbnz	r0, .L304
 201:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 5577              		.loc 13 201 0
 5578 03f4 E868     		ldr	r0, [r5, #12]
 5579 03f6 0368     		ldr	r3, [r0]
 5580 03f8 1B69     		ldr	r3, [r3, #16]
 5581 03fa 9847     		blx	r3
 5582              	.LVL611:
 5583 03fc 1B49     		ldr	r1, .L320+52
 5584 03fe 0246     		mov	r2, r0
 5585 0400 A4A8     		add	r0, sp, #656
 5586 0402 FFF7FEFF 		bl	sprintf
 5587              	.LVL612:
 202:src/main.cpp  ****     nh.logerror(error);
 5588              		.loc 13 202 0
 5589 0406 A4A9     		add	r1, sp, #656
 5590 0408 05F58A60 		add	r0, r5, #1104
 5591 040c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5592              	.LVL613:
 5593              	.L304:
 203:src/main.cpp  ****   }
 204:src/main.cpp  **** 
 205:src/main.cpp  ****   rear_right = motor::createMotor(&RR);
 5594              		.loc 13 205 0
 5595 0410 8BA8     		add	r0, sp, #556
 5596 0412 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5597              	.LVL614:
 206:src/main.cpp  ****   if(!rear_right->motorInit()){
 5598              		.loc 13 206 0
 5599 0416 0368     		ldr	r3, [r0]
 205:src/main.cpp  ****   if(!rear_right->motorInit()){
 5600              		.loc 13 205 0
 5601 0418 A060     		str	r0, [r4, #8]
 5602              		.loc 13 206 0
 5603 041a DB68     		ldr	r3, [r3, #12]
 205:src/main.cpp  ****   if(!rear_right->motorInit()){
 5604              		.loc 13 205 0
 5605 041c 124D     		ldr	r5, .L320+48
 5606              		.loc 13 206 0
 5607 041e 9847     		blx	r3
 5608              	.LVL615:
 5609 0420 50BB     		cbnz	r0, .L305
 207:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 5610              		.loc 13 207 0
 5611 0422 A868     		ldr	r0, [r5, #8]
 5612 0424 0368     		ldr	r3, [r0]
 5613 0426 1B69     		ldr	r3, [r3, #16]
 5614 0428 9847     		blx	r3
 5615              	.LVL616:
 5616 042a 1049     		ldr	r1, .L320+52
 5617 042c 0246     		mov	r2, r0
 5618 042e A4A8     		add	r0, sp, #656
 5619 0430 FFF7FEFF 		bl	sprintf
 5620              	.LVL617:
 208:src/main.cpp  ****     nh.logerror(error);
 5621              		.loc 13 208 0
 5622 0434 A4A9     		add	r1, sp, #656
 5623 0436 1BE0     		b	.L321
 5624              	.L322:
 5625              		.align	2
 5626              	.L320:
 5627 0438 00080040 		.word	1073743872
 5628 043c 03030000 		.word	.LC29
 5629 0440 000C0140 		.word	1073810432
 5630 0444 0E030000 		.word	.LC30
 5631 0448 002C0140 		.word	1073818624
 5632 044c 1A030000 		.word	.LC31
 5633 0450 00080140 		.word	1073809408
 5634 0454 00100140 		.word	1073811456
 5635 0458 26030000 		.word	.LC32
 5636 045c 00040040 		.word	1073742848
 5637 0460 31030000 		.word	.LC33
 5638 0464 3B030000 		.word	.LC34
 5639 0468 00000000 		.word	.LANCHOR1
 5640 046c 46030000 		.word	.LC35
 5641              	.L321:
 5642 0470 05F58A60 		add	r0, r5, #1104
 5643 0474 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5644              	.LVL618:
 5645              	.L305:
 209:src/main.cpp  ****   }
 210:src/main.cpp  **** 
 211:src/main.cpp  ****   
 212:src/main.cpp  **** 
 213:src/main.cpp  ****   
 214:src/main.cpp  ****   led_set(0);
 5646              		.loc 13 214 0
 5647 0478 0020     		movs	r0, #0
 5648 047a FFF7FEFF 		bl	led_set
 5649              	.LVL619:
 215:src/main.cpp  **** 
 216:src/main.cpp  ****   servo_left->setReference(0);
 5650              		.loc 13 216 0
 5651 047e 2069     		ldr	r0, [r4, #16]
 5652 0480 0021     		movs	r1, #0
 5653 0482 0368     		ldr	r3, [r0]
 217:src/main.cpp  ****   servo_right->setReference(0);
 218:src/main.cpp  ****   front_right->setReference(0);
 219:src/main.cpp  ****   front_left->setReference(0);
 220:src/main.cpp  ****   rear_right->setReference(0);
 221:src/main.cpp  ****   rear_left->setReference(0);
 5654              		.loc 13 221 0
 5655 0484 0026     		movs	r6, #0
 216:src/main.cpp  ****   servo_right->setReference(0);
 5656              		.loc 13 216 0
 5657 0486 5B69     		ldr	r3, [r3, #20]
 5658 0488 9847     		blx	r3
 5659              	.LVL620:
 217:src/main.cpp  ****   servo_right->setReference(0);
 5660              		.loc 13 217 0
 5661 048a 6069     		ldr	r0, [r4, #20]
 5662 048c 0021     		movs	r1, #0
 5663 048e 0368     		ldr	r3, [r0]
 5664 0490 5B69     		ldr	r3, [r3, #20]
 5665 0492 9847     		blx	r3
 5666              	.LVL621:
 218:src/main.cpp  ****   front_left->setReference(0);
 5667              		.loc 13 218 0
 5668 0494 2068     		ldr	r0, [r4]
 5669 0496 0021     		movs	r1, #0
 5670 0498 0368     		ldr	r3, [r0]
 5671 049a 5B69     		ldr	r3, [r3, #20]
 5672 049c 9847     		blx	r3
 5673              	.LVL622:
 219:src/main.cpp  ****   rear_right->setReference(0);
 5674              		.loc 13 219 0
 5675 049e 6068     		ldr	r0, [r4, #4]
 5676 04a0 0021     		movs	r1, #0
 5677 04a2 0368     		ldr	r3, [r0]
 5678 04a4 5B69     		ldr	r3, [r3, #20]
 5679 04a6 9847     		blx	r3
 5680              	.LVL623:
 220:src/main.cpp  ****   rear_left->setReference(0);
 5681              		.loc 13 220 0
 5682 04a8 A068     		ldr	r0, [r4, #8]
 5683 04aa 0021     		movs	r1, #0
 5684 04ac 0368     		ldr	r3, [r0]
 5685 04ae 5B69     		ldr	r3, [r3, #20]
 5686 04b0 9847     		blx	r3
 5687              	.LVL624:
 5688              		.loc 13 221 0
 5689 04b2 E068     		ldr	r0, [r4, #12]
 5690 04b4 0021     		movs	r1, #0
 5691 04b6 0368     		ldr	r3, [r0]
 5692 04b8 5B69     		ldr	r3, [r3, #20]
 5693 04ba 9847     		blx	r3
 5694              	.LVL625:
 5695              	.L306:
 222:src/main.cpp  **** 
 223:src/main.cpp  ****   bool connected = false;
 224:src/main.cpp  **** 
 225:src/main.cpp  ****   int cnt = 0;
 226:src/main.cpp  ****   float start_time;
 227:src/main.cpp  ****   float dt = 0.02;
 228:src/main.cpp  **** 
 229:src/main.cpp  ****   while (1){
 230:src/main.cpp  ****     start_time = ((int)millis()) / 1000.0;
 5696              		.loc 13 230 0
 5697 04bc FFF7FEFF 		bl	millis
 5698              	.LVL626:
 5699 04c0 FFF7FEFF 		bl	__aeabi_i2d
 5700              	.LVL627:
 5701 04c4 424B     		ldr	r3, .L323+8
 5702 04c6 0022     		movs	r2, #0
 5703 04c8 FFF7FEFF 		bl	__aeabi_ddiv
 5704              	.LVL628:
 5705 04cc FFF7FEFF 		bl	__aeabi_d2f
 5706              	.LVL629:
 231:src/main.cpp  ****     connected = nh.connected();
 232:src/main.cpp  ****     if(cnt++%5==0)
 5707              		.loc 13 232 0
 5708 04d0 0523     		movs	r3, #5
 5709 04d2 96FBF3F3 		sdiv	r3, r6, r3
 5710 04d6 03EB8303 		add	r3, r3, r3, lsl #2
 5711 04da 9E42     		cmp	r6, r3
 230:src/main.cpp  ****     connected = nh.connected();
 5712              		.loc 13 230 0
 5713 04dc 8046     		mov	r8, r0
 5714              	.LVL630:
 5715              	.LBB386:
 5716              	.LBB387:
 287:./lib/ros_lib/ros/node_handle.h ****       };
 5717              		.loc 11 287 0
 5718 04de 94F84459 		ldrb	r5, [r4, #2372]	@ zero_extendqisi2
 5719              	.LVL631:
 5720              	.LBE387:
 5721              	.LBE386:
 5722              		.loc 13 232 0
 5723 04e2 06F10107 		add	r7, r6, #1
 5724              	.LVL632:
 5725 04e6 01D1     		bne	.L307
 233:src/main.cpp  ****       debug_toggle();
 5726              		.loc 13 233 0
 5727 04e8 FFF7FEFF 		bl	debug_toggle
 5728              	.LVL633:
 5729              	.L307:
 234:src/main.cpp  **** 
 235:src/main.cpp  ****         
 236:src/main.cpp  ****     servo_left->update(0.1, connected);
 5730              		.loc 13 236 0
 5731 04ec 2069     		ldr	r0, [r4, #16]
 5732 04ee 2A46     		mov	r2, r5
 5733 04f0 0368     		ldr	r3, [r0]
 5734 04f2 3849     		ldr	r1, .L323+12
 5735 04f4 DB69     		ldr	r3, [r3, #28]
 5736 04f6 9847     		blx	r3
 5737              	.LVL634:
 237:src/main.cpp  ****     servo_right->update(0.1, connected);
 5738              		.loc 13 237 0
 5739 04f8 6069     		ldr	r0, [r4, #20]
 5740 04fa 2A46     		mov	r2, r5
 5741 04fc 0368     		ldr	r3, [r0]
 5742 04fe 3549     		ldr	r1, .L323+12
 5743 0500 DB69     		ldr	r3, [r3, #28]
 5744 0502 9847     		blx	r3
 5745              	.LVL635:
 238:src/main.cpp  ****     str_msg.data[0] = front_right->update(0.1, connected);
 5746              		.loc 13 238 0
 5747 0504 2068     		ldr	r0, [r4]
 5748 0506 2A46     		mov	r2, r5
 5749 0508 0368     		ldr	r3, [r0]
 5750 050a 3249     		ldr	r1, .L323+12
 5751 050c DB69     		ldr	r3, [r3, #28]
 5752 050e D4F84C64 		ldr	r6, [r4, #1100]
 5753 0512 9847     		blx	r3
 5754              	.LVL636:
 5755 0514 3060     		str	r0, [r6]	@ float
 239:src/main.cpp  ****     str_msg.data[1] = front_left->update(0.1, connected);
 5756              		.loc 13 239 0
 5757 0516 6068     		ldr	r0, [r4, #4]
 5758 0518 2A46     		mov	r2, r5
 5759 051a 0368     		ldr	r3, [r0]
 5760 051c 2D49     		ldr	r1, .L323+12
 5761 051e DB69     		ldr	r3, [r3, #28]
 5762 0520 D4F84C64 		ldr	r6, [r4, #1100]
 5763 0524 9847     		blx	r3
 5764              	.LVL637:
 5765 0526 7060     		str	r0, [r6, #4]	@ float
 240:src/main.cpp  ****     str_msg.data[2] = rear_left->update(0.1, connected);
 5766              		.loc 13 240 0
 5767 0528 E068     		ldr	r0, [r4, #12]
 5768 052a 2A46     		mov	r2, r5
 5769 052c 0368     		ldr	r3, [r0]
 5770 052e 2949     		ldr	r1, .L323+12
 5771 0530 DB69     		ldr	r3, [r3, #28]
 5772 0532 D4F84C64 		ldr	r6, [r4, #1100]
 5773 0536 9847     		blx	r3
 5774              	.LVL638:
 5775 0538 B060     		str	r0, [r6, #8]	@ float
 241:src/main.cpp  ****     str_msg.data[3] = rear_right->update(0.1, connected);
 5776              		.loc 13 241 0
 5777 053a A068     		ldr	r0, [r4, #8]
 5778 053c 2A46     		mov	r2, r5
 5779 053e 0368     		ldr	r3, [r0]
 5780 0540 2449     		ldr	r1, .L323+12
 5781 0542 DB69     		ldr	r3, [r3, #28]
 5782 0544 D4F84C64 		ldr	r6, [r4, #1100]
 5783 0548 9847     		blx	r3
 5784              	.LVL639:
 5785 054a F060     		str	r0, [r6, #12]	@ float
 5786              	.LVL640:
 5787              	.LBB388:
 5788              	.LBB389:
 5789              		.file 18 "./lib/ros_lib/ros/publisher.h"
   1:./lib/ros_lib/ros/publisher.h **** /* 
   2:./lib/ros_lib/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/publisher.h ****  *
   4:./lib/ros_lib/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/publisher.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/publisher.h ****  *
   7:./lib/ros_lib/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/publisher.h ****  * are met:
  10:./lib/ros_lib/ros/publisher.h ****  *
  11:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/publisher.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/publisher.h ****  *
  21:./lib/ros_lib/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/publisher.h ****  */
  34:./lib/ros_lib/ros/publisher.h **** 
  35:./lib/ros_lib/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:./lib/ros_lib/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:./lib/ros_lib/ros/publisher.h **** 
  38:./lib/ros_lib/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/publisher.h **** #include "node_handle.h"
  40:./lib/ros_lib/ros/publisher.h **** 
  41:./lib/ros_lib/ros/publisher.h **** namespace ros {
  42:./lib/ros_lib/ros/publisher.h **** 
  43:./lib/ros_lib/ros/publisher.h ****   /* Generic Publisher */
  44:./lib/ros_lib/ros/publisher.h ****   class Publisher
  45:./lib/ros_lib/ros/publisher.h ****   {
  46:./lib/ros_lib/ros/publisher.h ****     public:
  47:./lib/ros_lib/ros/publisher.h ****       Publisher( const char * topic_name, Msg * msg, int endpoint=rosserial_msgs::TopicInfo::ID_PUB
  48:./lib/ros_lib/ros/publisher.h ****         topic_(topic_name), 
  49:./lib/ros_lib/ros/publisher.h ****         msg_(msg),
  50:./lib/ros_lib/ros/publisher.h ****         endpoint_(endpoint) {};
  51:./lib/ros_lib/ros/publisher.h **** 
  52:./lib/ros_lib/ros/publisher.h ****       int publish( const Msg * msg ) { return nh_->publish(id_, msg); };
 5790              		.loc 18 52 0
 5791 054c D4F8E809 		ldr	r0, [r4, #2536]
 5792 0550 214A     		ldr	r2, .L323+16
 5793 0552 0368     		ldr	r3, [r0]
 5794 0554 D4F8E419 		ldr	r1, [r4, #2532]
 5795 0558 1B68     		ldr	r3, [r3]
 5796 055a 9847     		blx	r3
 5797              	.LVL641:
 5798              	.LBE389:
 5799              	.LBE388:
 242:src/main.cpp  **** 
 243:src/main.cpp  ****     //servo_left->setReference(180);
 244:src/main.cpp  ****     //servo_right->setReference(180);
 245:src/main.cpp  **** 
 246:src/main.cpp  ****     chatter.publish( &str_msg );
 247:src/main.cpp  **** 
 248:src/main.cpp  ****     nh.spinOnce();
 5800              		.loc 13 248 0
 5801 055c 1F48     		ldr	r0, .L323+20
 5802 055e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 5803              	.LVL642:
 249:src/main.cpp  **** 
 250:src/main.cpp  ****     //delay(20);
 251:src/main.cpp  ****     if((((int)millis()) / 1000.0) - start_time > dt){
 5804              		.loc 13 251 0
 5805 0562 FFF7FEFF 		bl	millis
 5806              	.LVL643:
 5807 0566 0546     		mov	r5, r0
 5808 0568 4046     		mov	r0, r8
 5809 056a FFF7FEFF 		bl	__aeabi_f2d
 5810              	.LVL644:
 5811 056e 8046     		mov	r8, r0
 5812              	.LVL645:
 5813 0570 8946     		mov	r9, r1
 5814 0572 2846     		mov	r0, r5
 5815 0574 FFF7FEFF 		bl	__aeabi_i2d
 5816              	.LVL646:
 5817 0578 0022     		movs	r2, #0
 5818 057a 154B     		ldr	r3, .L323+8
 5819 057c FFF7FEFF 		bl	__aeabi_ddiv
 5820              	.LVL647:
 5821 0580 4246     		mov	r2, r8
 5822 0582 4B46     		mov	r3, r9
 5823 0584 FFF7FEFF 		bl	__aeabi_dsub
 5824              	.LVL648:
 5825 0588 0FA3     		adr	r3, .L323
 5826 058a D3E90023 		ldrd	r2, [r3]
 5827 058e FFF7FEFF 		bl	__aeabi_dcmpgt
 5828              	.LVL649:
 5829 0592 28B1     		cbz	r0, .L308
 252:src/main.cpp  ****       nh.logerror("Main loop running slower than expected!");
 5830              		.loc 13 252 0
 5831 0594 1249     		ldr	r1, .L323+24
 5832 0596 1148     		ldr	r0, .L323+20
 5833 0598 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5834              	.LVL650:
 5835              	.L310:
 125:src/main.cpp  ****   }
 5836              		.loc 13 125 0
 5837 059c 3E46     		mov	r6, r7
 5838 059e 8DE7     		b	.L306
 5839              	.L308:
 253:src/main.cpp  ****     }else{
 254:src/main.cpp  ****       while( (((int)millis()) / 1000.0) - start_time < dt){}
 5840              		.loc 13 254 0
 5841 05a0 FFF7FEFF 		bl	millis
 5842              	.LVL651:
 5843 05a4 FFF7FEFF 		bl	__aeabi_i2d
 5844              	.LVL652:
 5845 05a8 0022     		movs	r2, #0
 5846 05aa 094B     		ldr	r3, .L323+8
 5847 05ac FFF7FEFF 		bl	__aeabi_ddiv
 5848              	.LVL653:
 5849 05b0 4246     		mov	r2, r8
 5850 05b2 4B46     		mov	r3, r9
 5851 05b4 FFF7FEFF 		bl	__aeabi_dsub
 5852              	.LVL654:
 5853 05b8 03A3     		adr	r3, .L323
 5854 05ba D3E90023 		ldrd	r2, [r3]
 5855 05be FFF7FEFF 		bl	__aeabi_dcmplt
 5856              	.LVL655:
 5857 05c2 0028     		cmp	r0, #0
 5858 05c4 ECD1     		bne	.L308
 5859 05c6 E9E7     		b	.L310
 5860              	.L324:
 5861              		.align	3
 5862              	.L323:
 5863 05c8 00000040 		.word	1073741824
 5864 05cc E17A943F 		.word	1066695393
 5865 05d0 00408F40 		.word	1083129856
 5866 05d4 CDCCCC3D 		.word	1036831949
 5867 05d8 20040000 		.word	.LANCHOR1+1056
 5868 05dc 50040000 		.word	.LANCHOR1+1104
 5869 05e0 70030000 		.word	.LC36
 5870              		.cfi_endproc
 5871              	.LFE200:
 5872              		.fnend
 5874              		.text
 5875              		.align	1
 5876              		.global	_Z13assert_failedPhm
 5877              		.thumb
 5878              		.thumb_func
 5880              	_Z13assert_failedPhm:
 5881              		.fnstart
 5882              	.LFB201:
 255:src/main.cpp  ****     }
 256:src/main.cpp  ****   }
 257:src/main.cpp  ****   return 0;
 258:src/main.cpp  **** }
 259:src/main.cpp  **** 
 260:src/main.cpp  **** void assert_failed(uint8_t* file, uint32_t line){
 5883              		.loc 13 260 0
 5884              		.cfi_startproc
 5885              		@ args = 0, pretend = 0, frame = 152
 5886              		@ frame_needed = 0, uses_anonymous_args = 0
 5887              	.LVL656:
 5888 00cc 00B5     		push	{lr}
 5889              		.save {lr}
 5890              	.LCFI60:
 5891              		.cfi_def_cfa_offset 4
 5892              		.cfi_offset 14, -4
 5893              		.pad #156
 5894 00ce A7B0     		sub	sp, sp, #156
 5895              	.LCFI61:
 5896              		.cfi_def_cfa_offset 160
 261:src/main.cpp  ****   /* User can add his own implementation to report the file name and line number,
 262:src/main.cpp  ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 263:src/main.cpp  ****   char str[150];
 264:src/main.cpp  **** 
 265:src/main.cpp  ****   sprintf(str, "Wrong parameters value: file %s on line %d\r\n", file, line);
 5897              		.loc 13 265 0
 5898 00d0 0B46     		mov	r3, r1
 5899 00d2 0246     		mov	r2, r0
 5900 00d4 0849     		ldr	r1, .L327
 5901              	.LVL657:
 5902 00d6 6846     		mov	r0, sp
 5903              	.LVL658:
 5904 00d8 FFF7FEFF 		bl	sprintf
 5905              	.LVL659:
 266:src/main.cpp  ****   nh.logerror(str);
 5906              		.loc 13 266 0
 5907 00dc 6946     		mov	r1, sp
 5908 00de 0748     		ldr	r0, .L327+4
 5909 00e0 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5910              	.LVL660:
 5911              	.L326:
 267:src/main.cpp  ****   while (1){
 268:src/main.cpp  ****     debug_toggle();
 5912              		.loc 13 268 0
 5913 00e4 FFF7FEFF 		bl	debug_toggle
 5914              	.LVL661:
 269:src/main.cpp  ****     delay(100);
 5915              		.loc 13 269 0
 5916 00e8 6420     		movs	r0, #100
 5917 00ea FFF7FEFF 		bl	delay
 5918              	.LVL662:
 270:src/main.cpp  ****     nh.spinOnce();
 5919              		.loc 13 270 0
 5920 00ee 0348     		ldr	r0, .L327+4
 5921 00f0 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 5922              	.LVL663:
 5923 00f4 F6E7     		b	.L326
 5924              	.L328:
 5925 00f6 00BF     		.align	2
 5926              	.L327:
 5927 00f8 98030000 		.word	.LC37
 5928 00fc 50040000 		.word	.LANCHOR1+1104
 5929              		.cfi_endproc
 5930              	.LFE201:
 5931              		.fnend
 5933              		.section	.text.startup
 5934              		.align	1
 5935              		.thumb
 5936              		.thumb_func
 5938              	_GLOBAL__sub_I_USART_FIFO:
 5939              		.fnstart
 5940              	.LFB242:
 271:src/main.cpp  ****   }
 272:src/main.cpp  **** }
 5941              		.loc 13 272 0
 5942              		.cfi_startproc
 5943              		@ args = 0, pretend = 0, frame = 0
 5944              		@ frame_needed = 0, uses_anonymous_args = 0
 5945              	.LVL664:
 5946              	.LBB451:
 5947              	.LBB452:
 5948              	.LBB453:
 5949              	.LBB454:
 119:./lib/ros_lib/ros/node_handle.h **** 
 5950              		.loc 11 119 0
 5951 05e4 4E4B     		ldr	r3, .L338
 5952 05e6 4F4A     		ldr	r2, .L338+4
 5953              	.LBE454:
 5954              	.LBE453:
 5955              	.LBE452:
 5956              	.LBE451:
 5957              		.loc 13 272 0
 5958 05e8 30B5     		push	{r4, r5, lr}
 5959              	.LCFI62:
 5960              		.cfi_def_cfa_offset 12
 5961              		.cfi_offset 4, -12
 5962              		.cfi_offset 5, -8
 5963              		.cfi_offset 14, -4
 5964              	.LBB550:
 5965              	.LBB549:
 5966              	.LBB472:
 5967              	.LBB471:
 119:./lib/ros_lib/ros/node_handle.h **** 
 5968              		.loc 11 119 0
 5969 05ea C3F85024 		str	r2, [r3, #1104]
 5970              	.LVL665:
 5971              	.LBB455:
 5972              	.LBB456:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
 5973              		.loc 15 60 0
 5974 05ee 4E4A     		ldr	r2, .L338+8
 5975              	.LBE456:
 5976              	.LBE455:
 5977              	.LBB459:
 5978              	.LBB460:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 5979              		.loc 4 70 0
 5980 05f0 4E49     		ldr	r1, .L338+12
 5981              	.LBE460:
 5982              	.LBE459:
 5983              	.LBB463:
 5984              	.LBB457:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
 5985              		.loc 15 60 0
 5986 05f2 C3F85424 		str	r2, [r3, #1108]
  61:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
 5987              		.loc 15 61 0
 5988 05f6 4FF4E132 		mov	r2, #115200
 5989 05fa C3F85824 		str	r2, [r3, #1112]
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
 5990              		.loc 15 62 0
 5991 05fe 0022     		movs	r2, #0
 5992 0600 DA61     		str	r2, [r3, #28]
 5993              	.LBE457:
 5994              	.LBE463:
 5995              	.LBB464:
 5996              	.LBB461:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 5997              		.loc 4 70 0
 5998 0602 C3F85819 		str	r1, [r3, #2392]
 5999              	.LBE461:
 6000              	.LBE464:
 6001              	.LBB465:
 6002              	.LBB458:
  63:./lib/ros_lib/ArduinoHardware.h ****     }
 6003              		.loc 15 63 0
 6004 0606 9A61     		str	r2, [r3, #24]
 6005              	.LVL666:
 6006              	.LBE458:
 6007              	.LBE465:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6008              		.loc 11 119 0
 6009 0608 83F84429 		strb	r2, [r3, #2372]
 6010              	.LVL667:
 6011              	.LBB466:
 6012              	.LBB462:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 6013              		.loc 4 70 0
 6014 060c 83F85C29 		strb	r2, [r3, #2396]
 6015 0610 C3F86429 		str	r2, [r3, #2404]
 6016 0614 83F86829 		strb	r2, [r3, #2408]
 6017 0618 C3F87029 		str	r2, [r3, #2416]
 6018 061c 83F87429 		strb	r2, [r3, #2420]
 6019 0620 C3F87C29 		str	r2, [r3, #2428]
 6020              	.LVL668:
 6021 0624 03F66401 		addw	r1, r3, #2148
 6022 0628 03F6C803 		addw	r3, r3, #2248
 6023              	.LVL669:
 6024              	.L330:
 6025              	.LBE462:
 6026              	.LBE466:
 6027              	.LBB467:
 122:./lib/ros_lib/ros/node_handle.h **** 
 6028              		.loc 11 122 0
 6029 062c 41F8042F 		str	r2, [r1, #4]!
 121:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 6030              		.loc 11 121 0
 6031 0630 8B42     		cmp	r3, r1
 6032 0632 FBD1     		bne	.L330
 6033 0634 3E4A     		ldr	r2, .L338+16
 6034              	.LBE467:
 6035              	.LBB468:
 125:./lib/ros_lib/ros/node_handle.h **** 
 6036              		.loc 11 125 0
 6037 0636 0021     		movs	r1, #0
 6038              	.L331:
 6039 0638 43F8041F 		str	r1, [r3, #4]!
 6040              	.LVL670:
 124:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 6041              		.loc 11 124 0
 6042 063c 9A42     		cmp	r2, r3
 6043 063e FBD1     		bne	.L331
 6044 0640 0023     		movs	r3, #0
 6045              	.LBE468:
 6046              	.LBB469:
 128:./lib/ros_lib/ros/node_handle.h **** 
 6047              		.loc 11 128 0
 6048 0642 1946     		mov	r1, r3
 6049 0644 3B48     		ldr	r0, .L338+20
 6050              	.L332:
 6051              	.LVL671:
 6052 0646 C218     		adds	r2, r0, r3
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 6053              		.loc 11 127 0
 6054 0648 0133     		adds	r3, r3, #1
 6055              	.LVL672:
 6056 064a B3F5007F 		cmp	r3, #512
 128:./lib/ros_lib/ros/node_handle.h **** 
 6057              		.loc 11 128 0
 6058 064e 1176     		strb	r1, [r2, #24]
 6059 0650 384D     		ldr	r5, .L338+20
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 6060              		.loc 11 127 0
 6061 0652 F8D1     		bne	.L332
 6062 0654 0021     		movs	r1, #0
 6063              	.LBE469:
 6064              	.LBB470:
 131:./lib/ros_lib/ros/node_handle.h **** 
 6065              		.loc 11 131 0
 6066 0656 0C46     		mov	r4, r1
 6067              	.LVL673:
 6068              	.L333:
 6069 0658 6818     		adds	r0, r5, r1
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 6070              		.loc 11 130 0
 6071 065a 0131     		adds	r1, r1, #1
 6072              	.LVL674:
 6073 065c B1F5007F 		cmp	r1, #512
 131:./lib/ros_lib/ros/node_handle.h **** 
 6074              		.loc 11 131 0
 6075 0660 2F4B     		ldr	r3, .L338
 6076 0662 4FF00002 		mov	r2, #0
 6077 0666 80F81842 		strb	r4, [r0, #536]
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 6078              		.loc 11 130 0
 6079 066a F5D1     		bne	.L333
 6080              	.LVL675:
 6081              	.LBE470:
 6082              	.LBE471:
 6083              	.LBE472:
 6084              	.LBB473:
 6085              	.LBB474:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6086              		.loc 12 67 0
 6087 066c 3249     		ldr	r1, .L338+24
  69:./lib/ros_lib/ros/subscriber.h ****       };
 6088              		.loc 12 69 0
 6089 066e 334C     		ldr	r4, .L338+28
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6090              		.loc 12 67 0
 6091 0670 C3F88019 		str	r1, [r3, #2432]
 6092              	.LVL676:
 6093              	.LBB475:
 6094              	.LBB476:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6095              		.loc 10 33 0
 6096 0674 3249     		ldr	r1, .L338+32
 6097              	.LBE476:
 6098              	.LBE475:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 6099              		.loc 12 69 0
 6100 0676 C3F88849 		str	r4, [r3, #2440]
 6101              	.LBB491:
 6102              	.LBB487:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6103              		.loc 10 33 0
 6104 067a C3F88C19 		str	r1, [r3, #2444]
 6105              	.LVL677:
 6106              	.LBB477:
 6107              	.LBB478:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6108              		.loc 9 23 0
 6109 067e 3149     		ldr	r1, .L338+36
 6110              	.LBE478:
 6111              	.LBE477:
 6112              	.LBE487:
 6113              	.LBE491:
 6114              	.LBE474:
 6115              	.LBE473:
 6116              	.LBB499:
 6117              	.LBB500:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6118              		.loc 12 67 0
 6119 0680 314C     		ldr	r4, .L338+40
 6120              	.LBE500:
 6121              	.LBE499:
 6122              	.LBB512:
 6123              	.LBB495:
 6124              	.LBB492:
 6125              	.LBB488:
 6126              	.LBB484:
 6127              	.LBB481:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6128              		.loc 9 23 0
 6129 0682 C3F89019 		str	r1, [r3, #2448]
 6130              	.LBE481:
 6131              	.LBE484:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6132              		.loc 10 33 0
 6133 0686 0021     		movs	r1, #0
 6134 0688 C3F8A419 		str	r1, [r3, #2468]	@ float
 6135 068c C3F8A819 		str	r1, [r3, #2472]	@ float
 6136 0690 C3F8AC19 		str	r1, [r3, #2476]	@ float
 6137 0694 C3F8B019 		str	r1, [r3, #2480]	@ float
 6138              	.LBE488:
 6139              	.LBE492:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6140              		.loc 12 67 0
 6141 0698 2C49     		ldr	r1, .L338+44
 6142              	.LBE495:
 6143              	.LBE512:
 6144              	.LBB513:
 6145              	.LBB507:
 6146 069a C3F8C049 		str	r4, [r3, #2496]
 6147              	.LBE507:
 6148              	.LBE513:
 6149              	.LBB514:
 6150              	.LBB496:
 6151 069e C3F8B819 		str	r1, [r3, #2488]
 6152 06a2 0121     		movs	r1, #1
 6153 06a4 C3F8BC19 		str	r1, [r3, #2492]
 6154              	.LBE496:
 6155              	.LBE514:
 6156              	.LBB515:
 6157              	.LBB508:
 6158 06a8 C3F8D819 		str	r1, [r3, #2520]
  69:./lib/ros_lib/ros/subscriber.h ****       };
 6159              		.loc 12 69 0
 6160 06ac 2849     		ldr	r1, .L338+48
 6161              	.LBB501:
 6162              	.LBB502:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 6163              		.loc 8 18 0
 6164 06ae 294C     		ldr	r4, .L338+52
 6165              	.LBE502:
 6166              	.LBE501:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 6167              		.loc 12 69 0
 6168 06b0 C3F8C819 		str	r1, [r3, #2504]
 6169              	.LBE508:
 6170              	.LBE515:
 6171              	.LBB516:
 6172              	.LBB517:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6173              		.loc 7 23 0
 6174 06b4 2849     		ldr	r1, .L338+56
 6175              	.LBE517:
 6176              	.LBE516:
 6177              	.LBB536:
 6178              	.LBB497:
 6179              	.LBB493:
 6180              	.LBB489:
 6181              	.LBB485:
 6182              	.LBB482:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6183              		.loc 9 23 0
 6184 06b6 2948     		ldr	r0, .L338+60
 6185              	.LBE482:
 6186              	.LBE485:
 6187              	.LBE489:
 6188              	.LBE493:
 6189              	.LBE497:
 6190              	.LBE536:
 6191              	.LBB537:
 6192              	.LBB532:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6193              		.loc 7 23 0
 6194 06b8 C3F82014 		str	r1, [r3, #1056]
 6195              	.LBB518:
 6196              	.LBB519:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6197              		.loc 6 23 0
 6198 06bc 2849     		ldr	r1, .L338+64
 6199              	.LBE519:
 6200              	.LBE518:
 6201              	.LBE532:
 6202              	.LBE537:
 6203              	.LBB538:
 6204              	.LBB509:
 6205              	.LBB505:
 6206              	.LBB503:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 6207              		.loc 8 18 0
 6208 06be C3F8CC49 		str	r4, [r3, #2508]
 6209              	.LBE503:
 6210              	.LBE505:
 6211              	.LBE509:
 6212              	.LBE538:
 6213              	.LBB539:
 6214              	.LBB533:
 6215              	.LBB529:
 6216              	.LBB526:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6217              		.loc 6 23 0
 6218 06c2 C3F82414 		str	r1, [r3, #1060]
 6219              	.LBB520:
 6220              	.LBB521:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6221              		.loc 5 22 0
 6222 06c6 2749     		ldr	r1, .L338+68
 6223              	.LBE521:
 6224              	.LBE520:
 6225              	.LBE526:
 6226              	.LBE529:
 6227              	.LBE533:
 6228              	.LBE539:
 6229              	.LBB540:
 6230              	.LBB510:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6231              		.loc 12 67 0
 6232 06c8 274C     		ldr	r4, .L338+72
 6233              	.LBE510:
 6234              	.LBE540:
 6235              	.LBB541:
 6236              	.LBB534:
 6237              	.LBB530:
 6238              	.LBB527:
 6239              	.LBB524:
 6240              	.LBB522:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6241              		.loc 5 22 0
 6242 06ca C3F82C14 		str	r1, [r3, #1068]
 6243              	.LBE522:
 6244              	.LBE524:
 6245              	.LBE527:
 6246              	.LBE530:
 6247              	.LBE534:
 6248              	.LBE541:
 6249              	.LBB542:
 6250              	.LBB543:
  50:./lib/ros_lib/ros/publisher.h **** 
 6251              		.loc 18 50 0
 6252 06ce 2749     		ldr	r1, .L338+76
 6253              	.LBE543:
 6254              	.LBE542:
 6255              	.LBB545:
 6256              	.LBB498:
 6257              	.LBB494:
 6258              	.LBB490:
 6259              	.LBB486:
 6260              	.LBB483:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6261              		.loc 9 23 0
 6262 06d0 C3F89429 		str	r2, [r3, #2452]
 6263              	.LVL678:
 6264              	.LBB479:
 6265              	.LBB480:
 6266              		.loc 17 52 0
 6267 06d4 C3F89829 		str	r2, [r3, #2456]
 6268 06d8 C3F89C29 		str	r2, [r3, #2460]
 6269              	.LVL679:
 6270              	.LBE480:
 6271              	.LBE479:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6272              		.loc 9 23 0
 6273 06dc C3F8A009 		str	r0, [r3, #2464]
 6274              	.LVL680:
 6275              	.LBE483:
 6276              	.LBE486:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6277              		.loc 10 33 0
 6278 06e0 83F8B429 		strb	r2, [r3, #2484]
 6279              	.LVL681:
 6280              	.LBE490:
 6281              	.LBE494:
 6282              	.LBE498:
 6283              	.LBE545:
 6284              	.LBB546:
 6285              	.LBB511:
 6286              	.LBB506:
 6287              	.LBB504:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 6288              		.loc 8 18 0
 6289 06e4 83F8D029 		strb	r2, [r3, #2512]
 6290              	.LVL682:
 6291              	.LBE504:
 6292              	.LBE506:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6293              		.loc 12 67 0
 6294 06e8 C3F8D449 		str	r4, [r3, #2516]
 6295              	.LBE511:
 6296              	.LBE546:
 6297              	.LBB547:
 6298              	.LBB535:
 6299              	.LBB531:
 6300              	.LBB528:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6301              		.loc 6 23 0
 6302 06ec 83F82824 		strb	r2, [r3, #1064]
 6303              	.LVL683:
 6304              	.LBB525:
 6305              	.LBB523:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6306              		.loc 5 22 0
 6307 06f0 C3F83004 		str	r0, [r3, #1072]
 6308 06f4 C3F83424 		str	r2, [r3, #1076]
 6309 06f8 C3F83824 		str	r2, [r3, #1080]
 6310              	.LVL684:
 6311              	.LBE523:
 6312              	.LBE525:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6313              		.loc 6 23 0
 6314 06fc C3F83C24 		str	r2, [r3, #1084]
 6315 0700 C3F84024 		str	r2, [r3, #1088]
 6316              	.LVL685:
 6317              	.LBE528:
 6318              	.LBE531:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6319              		.loc 7 23 0
 6320 0704 83F84424 		strb	r2, [r3, #1092]
 6321 0708 C3F84C24 		str	r2, [r3, #1100]
 6322              	.LVL686:
 6323              	.LBE535:
 6324              	.LBE547:
 6325              	.LBB548:
 6326              	.LBB544:
  50:./lib/ros_lib/ros/publisher.h **** 
 6327              		.loc 18 50 0
 6328 070c C3F8DC19 		str	r1, [r3, #2524]
 6329 0710 03F58461 		add	r1, r3, #1056
 6330 0714 C3F8E019 		str	r1, [r3, #2528]
 6331 0718 C3F8EC29 		str	r2, [r3, #2540]
 6332              	.LVL687:
 6333 071c 30BD     		pop	{r4, r5, pc}
 6334              	.L339:
 6335 071e 00BF     		.align	2
 6336              	.L338:
 6337 0720 00000000 		.word	.LANCHOR1
 6338 0724 08000000 		.word	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE+8
 6339 0728 00380140 		.word	1073821696
 6340 072c 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 6341 0730 2C090000 		.word	.LANCHOR1+2348
 6342 0734 50040000 		.word	.LANCHOR1+1104
 6343 0738 08000000 		.word	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE+8
 6344 073c C5030000 		.word	.LC38
 6345 0740 08000000 		.word	_ZTVN12roberto_msgs10MotorStateE+8
 6346 0744 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 6347 0748 08000000 		.word	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE+8
 6348 074c 00000000 		.word	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 6349 0750 D7030000 		.word	.LC39
 6350 0754 08000000 		.word	_ZTVN8std_msgs5UInt8E+8
 6351 0758 08000000 		.word	_ZTVN8std_msgs17Float32MultiArrayE+8
 6352 075c 67020000 		.word	.LC21
 6353 0760 08000000 		.word	_ZTVN8std_msgs16MultiArrayLayoutE+8
 6354 0764 08000000 		.word	_ZTVN8std_msgs19MultiArrayDimensionE+8
 6355 0768 00000000 		.word	_Z6led_cbRKN8std_msgs5UInt8E
 6356 076c DB030000 		.word	.LC40
 6357              	.LBE544:
 6358              	.LBE548:
 6359              	.LBE549:
 6360              	.LBE550:
 6361              		.cfi_endproc
 6362              	.LFE242:
 6363              		.cantunwind
 6364              		.fnend
 6366              		.section	.init_array,"aw",%init_array
 6367              		.align	2
 6368 0000 00000000 		.word	_GLOBAL__sub_I_USART_FIFO(target1)
 6369              		.weak	_ZTSN3ros3MsgE
 6370              		.section	.rodata._ZTSN3ros3MsgE,"aG",%progbits,_ZTSN3ros3MsgE,comdat
 6373              	_ZTSN3ros3MsgE:
 6374 0000 4E33726F 		.ascii	"N3ros3MsgE\000"
 6374      73334D73 
 6374      674500
 6375              		.weak	_ZTIN3ros3MsgE
 6376              		.section	.rodata._ZTIN3ros3MsgE,"aG",%progbits,_ZTIN3ros3MsgE,comdat
 6377              		.align	2
 6380              	_ZTIN3ros3MsgE:
 6381 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 6382 0004 00000000 		.word	_ZTSN3ros3MsgE
 6383              		.weak	_ZTSN8std_msgs4TimeE
 6384              		.section	.rodata._ZTSN8std_msgs4TimeE,"aG",%progbits,_ZTSN8std_msgs4TimeE,comdat
 6387              	_ZTSN8std_msgs4TimeE:
 6388 0000 4E387374 		.ascii	"N8std_msgs4TimeE\000"
 6388      645F6D73 
 6388      67733454 
 6388      696D6545 
 6388      00
 6389              		.weak	_ZTIN8std_msgs4TimeE
 6390              		.section	.rodata._ZTIN8std_msgs4TimeE,"aG",%progbits,_ZTIN8std_msgs4TimeE,comdat
 6391              		.align	2
 6394              	_ZTIN8std_msgs4TimeE:
 6395 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6396 0004 00000000 		.word	_ZTSN8std_msgs4TimeE
 6397 0008 00000000 		.word	_ZTIN3ros3MsgE
 6398              		.weak	_ZTSN14rosserial_msgs9TopicInfoE
 6399              		.section	.rodata._ZTSN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTSN14rosserial_msgs9TopicInfoE,
 6402              	_ZTSN14rosserial_msgs9TopicInfoE:
 6403 0000 4E313472 		.ascii	"N14rosserial_msgs9TopicInfoE\000"
 6403      6F737365 
 6403      7269616C 
 6403      5F6D7367 
 6403      7339546F 
 6404              		.weak	_ZTIN14rosserial_msgs9TopicInfoE
 6405              		.section	.rodata._ZTIN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTIN14rosserial_msgs9TopicInfoE,
 6406              		.align	2
 6409              	_ZTIN14rosserial_msgs9TopicInfoE:
 6410 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6411 0004 00000000 		.word	_ZTSN14rosserial_msgs9TopicInfoE
 6412 0008 00000000 		.word	_ZTIN3ros3MsgE
 6413              		.weak	_ZTSN14rosserial_msgs3LogE
 6414              		.section	.rodata._ZTSN14rosserial_msgs3LogE,"aG",%progbits,_ZTSN14rosserial_msgs3LogE,comdat
 6417              	_ZTSN14rosserial_msgs3LogE:
 6418 0000 4E313472 		.ascii	"N14rosserial_msgs3LogE\000"
 6418      6F737365 
 6418      7269616C 
 6418      5F6D7367 
 6418      73334C6F 
 6419              		.weak	_ZTIN14rosserial_msgs3LogE
 6420              		.section	.rodata._ZTIN14rosserial_msgs3LogE,"aG",%progbits,_ZTIN14rosserial_msgs3LogE,comdat
 6421              		.align	2
 6424              	_ZTIN14rosserial_msgs3LogE:
 6425 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6426 0004 00000000 		.word	_ZTSN14rosserial_msgs3LogE
 6427 0008 00000000 		.word	_ZTIN3ros3MsgE
 6428              		.weak	_ZTSN14rosserial_msgs19RequestParamRequestE
 6429              		.section	.rodata._ZTSN14rosserial_msgs19RequestParamRequestE,"aG",%progbits,_ZTSN14rosserial_msgs1
 6432              	_ZTSN14rosserial_msgs19RequestParamRequestE:
 6433 0000 4E313472 		.ascii	"N14rosserial_msgs19RequestParamRequestE\000"
 6433      6F737365 
 6433      7269616C 
 6433      5F6D7367 
 6433      73313952 
 6434              		.weak	_ZTIN14rosserial_msgs19RequestParamRequestE
 6435              		.section	.rodata._ZTIN14rosserial_msgs19RequestParamRequestE,"aG",%progbits,_ZTIN14rosserial_msgs1
 6436              		.align	2
 6439              	_ZTIN14rosserial_msgs19RequestParamRequestE:
 6440 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6441 0004 00000000 		.word	_ZTSN14rosserial_msgs19RequestParamRequestE
 6442 0008 00000000 		.word	_ZTIN3ros3MsgE
 6443              		.weak	_ZTSN14rosserial_msgs20RequestParamResponseE
 6444              		.section	.rodata._ZTSN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTSN14rosserial_msgs
 6447              	_ZTSN14rosserial_msgs20RequestParamResponseE:
 6448 0000 4E313472 		.ascii	"N14rosserial_msgs20RequestParamResponseE\000"
 6448      6F737365 
 6448      7269616C 
 6448      5F6D7367 
 6448      73323052 
 6449              		.weak	_ZTIN14rosserial_msgs20RequestParamResponseE
 6450              		.section	.rodata._ZTIN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTIN14rosserial_msgs
 6451              		.align	2
 6454              	_ZTIN14rosserial_msgs20RequestParamResponseE:
 6455 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6456 0004 00000000 		.word	_ZTSN14rosserial_msgs20RequestParamResponseE
 6457 0008 00000000 		.word	_ZTIN3ros3MsgE
 6458              		.weak	_ZTSN3ros15NodeHandleBase_E
 6459              		.section	.rodata._ZTSN3ros15NodeHandleBase_E,"aG",%progbits,_ZTSN3ros15NodeHandleBase_E,comdat
 6462              	_ZTSN3ros15NodeHandleBase_E:
 6463 0000 4E33726F 		.ascii	"N3ros15NodeHandleBase_E\000"
 6463      7331354E 
 6463      6F646548 
 6463      616E646C 
 6463      65426173 
 6464              		.weak	_ZTIN3ros15NodeHandleBase_E
 6465              		.section	.rodata._ZTIN3ros15NodeHandleBase_E,"aG",%progbits,_ZTIN3ros15NodeHandleBase_E,comdat
 6466              		.align	2
 6469              	_ZTIN3ros15NodeHandleBase_E:
 6470 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 6471 0004 00000000 		.word	_ZTSN3ros15NodeHandleBase_E
 6472              		.weak	_ZTSN3ros11Subscriber_E
 6473              		.section	.rodata._ZTSN3ros11Subscriber_E,"aG",%progbits,_ZTSN3ros11Subscriber_E,comdat
 6476              	_ZTSN3ros11Subscriber_E:
 6477 0000 4E33726F 		.ascii	"N3ros11Subscriber_E\000"
 6477      73313153 
 6477      75627363 
 6477      72696265 
 6477      725F4500 
 6478              		.weak	_ZTIN3ros11Subscriber_E
 6479              		.section	.rodata._ZTIN3ros11Subscriber_E,"aG",%progbits,_ZTIN3ros11Subscriber_E,comdat
 6480              		.align	2
 6483              	_ZTIN3ros11Subscriber_E:
 6484 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 6485 0004 00000000 		.word	_ZTSN3ros11Subscriber_E
 6486              		.weak	_ZTSN8std_msgs19MultiArrayDimensionE
 6487              		.section	.rodata._ZTSN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTSN8std_msgs19MultiArrayDim
 6490              	_ZTSN8std_msgs19MultiArrayDimensionE:
 6491 0000 4E387374 		.ascii	"N8std_msgs19MultiArrayDimensionE\000"
 6491      645F6D73 
 6491      67733139 
 6491      4D756C74 
 6491      69417272 
 6492              		.weak	_ZTIN8std_msgs19MultiArrayDimensionE
 6493              		.section	.rodata._ZTIN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTIN8std_msgs19MultiArrayDim
 6494              		.align	2
 6497              	_ZTIN8std_msgs19MultiArrayDimensionE:
 6498 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6499 0004 00000000 		.word	_ZTSN8std_msgs19MultiArrayDimensionE
 6500 0008 00000000 		.word	_ZTIN3ros3MsgE
 6501              		.weak	_ZTSN8std_msgs16MultiArrayLayoutE
 6502              		.section	.rodata._ZTSN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTSN8std_msgs16MultiArrayLayout
 6505              	_ZTSN8std_msgs16MultiArrayLayoutE:
 6506 0000 4E387374 		.ascii	"N8std_msgs16MultiArrayLayoutE\000"
 6506      645F6D73 
 6506      67733136 
 6506      4D756C74 
 6506      69417272 
 6507              		.weak	_ZTIN8std_msgs16MultiArrayLayoutE
 6508              		.section	.rodata._ZTIN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTIN8std_msgs16MultiArrayLayout
 6509              		.align	2
 6512              	_ZTIN8std_msgs16MultiArrayLayoutE:
 6513 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6514 0004 00000000 		.word	_ZTSN8std_msgs16MultiArrayLayoutE
 6515 0008 00000000 		.word	_ZTIN3ros3MsgE
 6516              		.weak	_ZTSN8std_msgs17Float32MultiArrayE
 6517              		.section	.rodata._ZTSN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTSN8std_msgs17Float32MultiArr
 6520              	_ZTSN8std_msgs17Float32MultiArrayE:
 6521 0000 4E387374 		.ascii	"N8std_msgs17Float32MultiArrayE\000"
 6521      645F6D73 
 6521      67733137 
 6521      466C6F61 
 6521      7433324D 
 6522              		.weak	_ZTIN8std_msgs17Float32MultiArrayE
 6523              		.section	.rodata._ZTIN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTIN8std_msgs17Float32MultiArr
 6524              		.align	2
 6527              	_ZTIN8std_msgs17Float32MultiArrayE:
 6528 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6529 0004 00000000 		.word	_ZTSN8std_msgs17Float32MultiArrayE
 6530 0008 00000000 		.word	_ZTIN3ros3MsgE
 6531              		.weak	_ZTSN8std_msgs5UInt8E
 6532              		.section	.rodata._ZTSN8std_msgs5UInt8E,"aG",%progbits,_ZTSN8std_msgs5UInt8E,comdat
 6535              	_ZTSN8std_msgs5UInt8E:
 6536 0000 4E387374 		.ascii	"N8std_msgs5UInt8E\000"
 6536      645F6D73 
 6536      67733555 
 6536      496E7438 
 6536      4500
 6537              		.weak	_ZTIN8std_msgs5UInt8E
 6538              		.section	.rodata._ZTIN8std_msgs5UInt8E,"aG",%progbits,_ZTIN8std_msgs5UInt8E,comdat
 6539              		.align	2
 6542              	_ZTIN8std_msgs5UInt8E:
 6543 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6544 0004 00000000 		.word	_ZTSN8std_msgs5UInt8E
 6545 0008 00000000 		.word	_ZTIN3ros3MsgE
 6546              		.weak	_ZTSN8std_msgs6HeaderE
 6547              		.section	.rodata._ZTSN8std_msgs6HeaderE,"aG",%progbits,_ZTSN8std_msgs6HeaderE,comdat
 6550              	_ZTSN8std_msgs6HeaderE:
 6551 0000 4E387374 		.ascii	"N8std_msgs6HeaderE\000"
 6551      645F6D73 
 6551      67733648 
 6551      65616465 
 6551      724500
 6552              		.weak	_ZTIN8std_msgs6HeaderE
 6553              		.section	.rodata._ZTIN8std_msgs6HeaderE,"aG",%progbits,_ZTIN8std_msgs6HeaderE,comdat
 6554              		.align	2
 6557              	_ZTIN8std_msgs6HeaderE:
 6558 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6559 0004 00000000 		.word	_ZTSN8std_msgs6HeaderE
 6560 0008 00000000 		.word	_ZTIN3ros3MsgE
 6561              		.weak	_ZTSN12roberto_msgs10MotorStateE
 6562              		.section	.rodata._ZTSN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTSN12roberto_msgs10MotorStateE,
 6565              	_ZTSN12roberto_msgs10MotorStateE:
 6566 0000 4E313272 		.ascii	"N12roberto_msgs10MotorStateE\000"
 6566      6F626572 
 6566      746F5F6D 
 6566      73677331 
 6566      304D6F74 
 6567              		.weak	_ZTIN12roberto_msgs10MotorStateE
 6568              		.section	.rodata._ZTIN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTIN12roberto_msgs10MotorStateE,
 6569              		.align	2
 6572              	_ZTIN12roberto_msgs10MotorStateE:
 6573 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6574 0004 00000000 		.word	_ZTSN12roberto_msgs10MotorStateE
 6575 0008 00000000 		.word	_ZTIN3ros3MsgE
 6576              		.weak	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 6577              		.section	.rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 6580              	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 6581 0000 4E33726F 		.ascii	"N3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512"
 6581      7331314E 
 6581      6F646548 
 6581      616E646C 
 6581      655F4931 
 6582 0033 454C6935 		.ascii	"ELi512EEE\000"
 6582      31324545 
 6582      4500
 6583              		.weak	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 6584              		.section	.rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 6585              		.align	2
 6588              	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 6589 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6590 0004 00000000 		.word	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 6591 0008 00000000 		.word	_ZTIN3ros15NodeHandleBase_E
 6592              		.weak	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 6593              		.section	.rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTSN3ros10Su
 6596              	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 6597 0000 4E33726F 		.ascii	"N3ros10SubscriberIN12roberto_msgs10MotorStateEEE\000"
 6597      73313053 
 6597      75627363 
 6597      72696265 
 6597      72494E31 
 6598              		.weak	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 6599              		.section	.rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTIN3ros10Su
 6600              		.align	2
 6603              	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 6604 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6605 0004 00000000 		.word	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 6606 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 6607              		.weak	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 6608              		.section	.rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTSN3ros10SubscriberIN8
 6611              	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:
 6612 0000 4E33726F 		.ascii	"N3ros10SubscriberIN8std_msgs5UInt8EEE\000"
 6612      73313053 
 6612      75627363 
 6612      72696265 
 6612      72494E38 
 6613              		.weak	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 6614              		.section	.rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTIN3ros10SubscriberIN8
 6615              		.align	2
 6618              	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:
 6619 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 6620 0004 00000000 		.word	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 6621 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 6622              		.weak	_ZTVN8std_msgs4TimeE
 6623              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 6624              		.align	2
 6627              	_ZTVN8std_msgs4TimeE:
 6628 0000 00000000 		.word	0
 6629 0004 00000000 		.word	_ZTIN8std_msgs4TimeE
 6630 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 6631 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 6632 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 6633 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 6634              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 6635              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 6636              		.align	2
 6639              	_ZTVN14rosserial_msgs9TopicInfoE:
 6640 0000 00000000 		.word	0
 6641 0004 00000000 		.word	_ZTIN14rosserial_msgs9TopicInfoE
 6642 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 6643 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 6644 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 6645 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 6646              		.weak	_ZTVN14rosserial_msgs3LogE
 6647              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 6648              		.align	2
 6651              	_ZTVN14rosserial_msgs3LogE:
 6652 0000 00000000 		.word	0
 6653 0004 00000000 		.word	_ZTIN14rosserial_msgs3LogE
 6654 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 6655 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 6656 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 6657 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 6658              		.weak	_ZTVN14rosserial_msgs19RequestParamRequestE
 6659              		.section	.rodata._ZTVN14rosserial_msgs19RequestParamRequestE,"aG",%progbits,_ZTVN14rosserial_msgs1
 6660              		.align	2
 6663              	_ZTVN14rosserial_msgs19RequestParamRequestE:
 6664 0000 00000000 		.word	0
 6665 0004 00000000 		.word	_ZTIN14rosserial_msgs19RequestParamRequestE
 6666 0008 00000000 		.word	_ZNK14rosserial_msgs19RequestParamRequest9serializeEPh
 6667 000c 00000000 		.word	_ZN14rosserial_msgs19RequestParamRequest11deserializeEPh
 6668 0010 00000000 		.word	_ZN14rosserial_msgs19RequestParamRequest7getTypeEv
 6669 0014 00000000 		.word	_ZN14rosserial_msgs19RequestParamRequest6getMD5Ev
 6670              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 6671              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 6672              		.align	2
 6675              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 6676 0000 00000000 		.word	0
 6677 0004 00000000 		.word	_ZTIN14rosserial_msgs20RequestParamResponseE
 6678 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 6679 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 6680 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 6681 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 6682              		.weak	_ZTVN8std_msgs19MultiArrayDimensionE
 6683              		.section	.rodata._ZTVN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTVN8std_msgs19MultiArrayDim
 6684              		.align	2
 6687              	_ZTVN8std_msgs19MultiArrayDimensionE:
 6688 0000 00000000 		.word	0
 6689 0004 00000000 		.word	_ZTIN8std_msgs19MultiArrayDimensionE
 6690 0008 00000000 		.word	_ZNK8std_msgs19MultiArrayDimension9serializeEPh
 6691 000c 00000000 		.word	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 6692 0010 00000000 		.word	_ZN8std_msgs19MultiArrayDimension7getTypeEv
 6693 0014 00000000 		.word	_ZN8std_msgs19MultiArrayDimension6getMD5Ev
 6694              		.weak	_ZTVN8std_msgs16MultiArrayLayoutE
 6695              		.section	.rodata._ZTVN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTVN8std_msgs16MultiArrayLayout
 6696              		.align	2
 6699              	_ZTVN8std_msgs16MultiArrayLayoutE:
 6700 0000 00000000 		.word	0
 6701 0004 00000000 		.word	_ZTIN8std_msgs16MultiArrayLayoutE
 6702 0008 00000000 		.word	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 6703 000c 00000000 		.word	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 6704 0010 00000000 		.word	_ZN8std_msgs16MultiArrayLayout7getTypeEv
 6705 0014 00000000 		.word	_ZN8std_msgs16MultiArrayLayout6getMD5Ev
 6706              		.weak	_ZTVN8std_msgs17Float32MultiArrayE
 6707              		.section	.rodata._ZTVN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTVN8std_msgs17Float32MultiArr
 6708              		.align	2
 6711              	_ZTVN8std_msgs17Float32MultiArrayE:
 6712 0000 00000000 		.word	0
 6713 0004 00000000 		.word	_ZTIN8std_msgs17Float32MultiArrayE
 6714 0008 00000000 		.word	_ZNK8std_msgs17Float32MultiArray9serializeEPh
 6715 000c 00000000 		.word	_ZN8std_msgs17Float32MultiArray11deserializeEPh
 6716 0010 00000000 		.word	_ZN8std_msgs17Float32MultiArray7getTypeEv
 6717 0014 00000000 		.word	_ZN8std_msgs17Float32MultiArray6getMD5Ev
 6718              		.weak	_ZTVN8std_msgs5UInt8E
 6719              		.section	.rodata._ZTVN8std_msgs5UInt8E,"aG",%progbits,_ZTVN8std_msgs5UInt8E,comdat
 6720              		.align	2
 6723              	_ZTVN8std_msgs5UInt8E:
 6724 0000 00000000 		.word	0
 6725 0004 00000000 		.word	_ZTIN8std_msgs5UInt8E
 6726 0008 00000000 		.word	_ZNK8std_msgs5UInt89serializeEPh
 6727 000c 00000000 		.word	_ZN8std_msgs5UInt811deserializeEPh
 6728 0010 00000000 		.word	_ZN8std_msgs5UInt87getTypeEv
 6729 0014 00000000 		.word	_ZN8std_msgs5UInt86getMD5Ev
 6730              		.weak	_ZTVN8std_msgs6HeaderE
 6731              		.section	.rodata._ZTVN8std_msgs6HeaderE,"aG",%progbits,_ZTVN8std_msgs6HeaderE,comdat
 6732              		.align	2
 6735              	_ZTVN8std_msgs6HeaderE:
 6736 0000 00000000 		.word	0
 6737 0004 00000000 		.word	_ZTIN8std_msgs6HeaderE
 6738 0008 00000000 		.word	_ZNK8std_msgs6Header9serializeEPh
 6739 000c 00000000 		.word	_ZN8std_msgs6Header11deserializeEPh
 6740 0010 00000000 		.word	_ZN8std_msgs6Header7getTypeEv
 6741 0014 00000000 		.word	_ZN8std_msgs6Header6getMD5Ev
 6742              		.weak	_ZTVN12roberto_msgs10MotorStateE
 6743              		.section	.rodata._ZTVN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTVN12roberto_msgs10MotorStateE,
 6744              		.align	2
 6747              	_ZTVN12roberto_msgs10MotorStateE:
 6748 0000 00000000 		.word	0
 6749 0004 00000000 		.word	_ZTIN12roberto_msgs10MotorStateE
 6750 0008 00000000 		.word	_ZNK12roberto_msgs10MotorState9serializeEPh
 6751 000c 00000000 		.word	_ZN12roberto_msgs10MotorState11deserializeEPh
 6752 0010 00000000 		.word	_ZN12roberto_msgs10MotorState7getTypeEv
 6753 0014 00000000 		.word	_ZN12roberto_msgs10MotorState6getMD5Ev
 6754              		.weak	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 6755              		.section	.rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 6756              		.align	2
 6759              	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 6760 0000 00000000 		.word	0
 6761 0004 00000000 		.word	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 6762 0008 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 6763 000c 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 6764 0010 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
 6765              		.weak	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 6766              		.section	.rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTVN3ros10Su
 6767              		.align	2
 6770              	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 6771 0000 00000000 		.word	0
 6772 0004 00000000 		.word	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 6773 0008 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 6774 000c 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 6775 0010 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 6776 0014 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 6777              		.weak	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
 6778              		.section	.rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTVN3ros10SubscriberIN8
 6779              		.align	2
 6782              	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:
 6783 0000 00000000 		.word	0
 6784 0004 00000000 		.word	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 6785 0008 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 6786 000c 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 6787 0010 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 6788 0014 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 6789              		.global	chatter
 6790              		.global	str_msg
 6791              		.global	led_sub
 6792              		.global	motor_sub
 6793              		.global	nh
 6794              		.global	wheelSeperation
 6795              		.global	rear_left
 6796              		.global	rear_right
 6797              		.global	front_left
 6798              		.global	front_right
 6799              		.global	servo_right
 6800              		.global	servo_left
 6801              		.global	GenerateStartStatus
 6802              		.global	NumberOfByteToReceive
 6803              		.global	RxBuffer
 6804              		.global	slaveAddress
 6805              		.global	Rx_Idx
 6806              		.global	USART_CNTOUT
 6807              		.global	USART_CNTIN
 6808              		.global	USART_FIFO
 6809              		.section	.rodata
 6810              		.set	.LANCHOR0,. + 0
 6813              	_ZN14rosserial_msgsL12REQUESTPARAME:
 6814 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 6814      65726961 
 6814      6C5F6D73 
 6814      67732F52 
 6814      65717565 
 6815              		.section	.rodata.str1.1,"aMS",%progbits,1
 6816              	.LC0:
 6817 0000 7374645F 		.ascii	"std_msgs/Time\000"
 6817      6D736773 
 6817      2F54696D 
 6817      6500
 6818              	.LC1:
 6819 000e 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 6819      36366337 
 6819      34633535 
 6819      32633331 
 6819      31666263 
 6820              	.LC2:
 6821 002f 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 6821      65726961 
 6821      6C5F6D73 
 6821      67732F54 
 6821      6F706963 
 6822              	.LC3:
 6823 0048 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 6823      31663838 
 6823      66633434 
 6823      38393266 
 6823      38633130 
 6824              	.LC4:
 6825 0069 726F7373 		.ascii	"rosserial_msgs/Log\000"
 6825      65726961 
 6825      6C5F6D73 
 6825      67732F4C 
 6825      6F6700
 6826              	.LC5:
 6827 007c 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 6827      64373331 
 6827      63323539 
 6827      33333236 
 6827      31636436 
 6828              	.LC6:
 6829 009d 63316633 		.ascii	"c1f3d28f1b044c871e6eff2e9fc3c667\000"
 6829      64323866 
 6829      31623034 
 6829      34633837 
 6829      31653665 
 6830              	.LC7:
 6831 00be 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 6831      39386264 
 6831      61363539 
 6831      38313938 
 6831      36646466 
 6832              	.LC8:
 6833 00df 7374645F 		.ascii	"std_msgs/MultiArrayDimension\000"
 6833      6D736773 
 6833      2F4D756C 
 6833      74694172 
 6833      72617944 
 6834              	.LC9:
 6835 00fc 34636430 		.ascii	"4cd0c83a8683deae40ecdac60e53bfa8\000"
 6835      63383361 
 6835      38363833 
 6835      64656165 
 6835      34306563 
 6836              	.LC10:
 6837 011d 7374645F 		.ascii	"std_msgs/MultiArrayLayout\000"
 6837      6D736773 
 6837      2F4D756C 
 6837      74694172 
 6837      7261794C 
 6838              	.LC11:
 6839 0137 30666564 		.ascii	"0fed2a11c13e11c5571b4e2a995a91a3\000"
 6839      32613131 
 6839      63313365 
 6839      31316335 
 6839      35373162 
 6840              	.LC12:
 6841 0158 7374645F 		.ascii	"std_msgs/Float32MultiArray\000"
 6841      6D736773 
 6841      2F466C6F 
 6841      61743332 
 6841      4D756C74 
 6842              	.LC13:
 6843 0173 36613430 		.ascii	"6a40e0ffa6a17a503ac3f8616991b1f6\000"
 6843      65306666 
 6843      61366131 
 6843      37613530 
 6843      33616333 
 6844              	.LC14:
 6845 0194 7374645F 		.ascii	"std_msgs/UInt8\000"
 6845      6D736773 
 6845      2F55496E 
 6845      743800
 6846              	.LC15:
 6847 01a3 37633831 		.ascii	"7c8164229e7d2c17eb95e9231617fdee\000"
 6847      36343232 
 6847      39653764 
 6847      32633137 
 6847      65623935 
 6848              	.LC16:
 6849 01c4 7374645F 		.ascii	"std_msgs/Header\000"
 6849      6D736773 
 6849      2F486561 
 6849      64657200 
 6850              	.LC17:
 6851 01d4 32313736 		.ascii	"2176decaecbce78abc3b96ef049fabed\000"
 6851      64656361 
 6851      65636263 
 6851      65373861 
 6851      62633362 
 6852              	.LC18:
 6853 01f5 726F6265 		.ascii	"roberto_msgs/MotorState\000"
 6853      72746F5F 
 6853      6D736773 
 6853      2F4D6F74 
 6853      6F725374 
 6854              	.LC19:
 6855 020d 65386235 		.ascii	"e8b5d1162b85151c49e02b8224796c0e\000"
 6855      64313136 
 6855      32623835 
 6855      31353163 
 6855      34396530 
 6856              	.LC20:
 6857 022e 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 6857      61676520 
 6857      66726F6D 
 6857      20646576 
 6857      69636520 
 6858 0261 66666572 		.ascii	"ffer.\000"
 6858      2E00
 6859              	.LC21:
 6860 0267 00       		.ascii	"\000"
 6861              	.LC22:
 6862 0268 73657269 		.ascii	"serial_node/KP\000"
 6862      616C5F6E 
 6862      6F64652F 
 6862      4B5000
 6863              	.LC23:
 6864 0277 73657269 		.ascii	"serial_node/KI\000"
 6864      616C5F6E 
 6864      6F64652F 
 6864      4B4900
 6865              	.LC24:
 6866 0286 73657269 		.ascii	"serial_node/KD\000"
 6866      616C5F6E 
 6866      6F64652F 
 6866      4B4400
 6867              	.LC25:
 6868 0295 73657269 		.ascii	"serial_node/integralSaturation\000"
 6868      616C5F6E 
 6868      6F64652F 
 6868      696E7465 
 6868      6772616C 
 6869              	.LC26:
 6870 02b4 73657269 		.ascii	"serial_node/wheelRadius\000"
 6870      616C5F6E 
 6870      6F64652F 
 6870      77686565 
 6870      6C526164 
 6871              	.LC27:
 6872 02cc 73657269 		.ascii	"serial_node/wheelSeperation\000"
 6872      616C5F6E 
 6872      6F64652F 
 6872      77686565 
 6872      6C536570 
 6873              	.LC28:
 6874 02e8 73657269 		.ascii	"serial_node/encoderTimeout\000"
 6874      616C5F6E 
 6874      6F64652F 
 6874      656E636F 
 6874      64657254 
 6875              	.LC29:
 6876 0303 73657276 		.ascii	"servo_left\000"
 6876      6F5F6C65 
 6876      667400
 6877              	.LC30:
 6878 030e 73657276 		.ascii	"servo_right\000"
 6878      6F5F7269 
 6878      67687400 
 6879              	.LC31:
 6880 031a 66726F6E 		.ascii	"front_right\000"
 6880      745F7269 
 6880      67687400 
 6881              	.LC32:
 6882 0326 66726F6E 		.ascii	"front_left\000"
 6882      745F6C65 
 6882      667400
 6883              	.LC33:
 6884 0331 72656172 		.ascii	"rear_left\000"
 6884      5F6C6566 
 6884      7400
 6885              	.LC34:
 6886 033b 72656172 		.ascii	"rear_right\000"
 6886      5F726967 
 6886      687400
 6887              	.LC35:
 6888 0346 556E6162 		.ascii	"Unable to initialize motor: %s - [FAIL]\015\012\000"
 6888      6C652074 
 6888      6F20696E 
 6888      69746961 
 6888      6C697A65 
 6889              	.LC36:
 6890 0370 4D61696E 		.ascii	"Main loop running slower than expected!\000"
 6890      206C6F6F 
 6890      70207275 
 6890      6E6E696E 
 6890      6720736C 
 6891              	.LC37:
 6892 0398 57726F6E 		.ascii	"Wrong parameters value: file %s on line %d\015\012\000"
 6892      67207061 
 6892      72616D65 
 6892      74657273 
 6892      2076616C 
 6893              	.LC38:
 6894 03c5 7468726F 		.ascii	"throttled_joy_vel\000"
 6894      74746C65 
 6894      645F6A6F 
 6894      795F7665 
 6894      6C00
 6895              	.LC39:
 6896 03d7 6C656400 		.ascii	"led\000"
 6897              	.LC40:
 6898 03db 656E636F 		.ascii	"encoder\000"
 6898      64657200 
 6899              		.bss
 6900              		.align	2
 6901              		.set	.LANCHOR1,. + 0
 6904              	front_right:
 6905 0000 00000000 		.space	4
 6908              	front_left:
 6909 0004 00000000 		.space	4
 6912              	rear_right:
 6913 0008 00000000 		.space	4
 6916              	rear_left:
 6917 000c 00000000 		.space	4
 6920              	servo_left:
 6921 0010 00000000 		.space	4
 6924              	servo_right:
 6925 0014 00000000 		.space	4
 6928              	USART_CNTOUT:
 6929 0018 00000000 		.space	4
 6932              	USART_CNTIN:
 6933 001c 00000000 		.space	4
 6936              	USART_FIFO:
 6937 0020 00000000 		.space	1024
 6937      00000000 
 6937      00000000 
 6937      00000000 
 6937      00000000 
 6940              	str_msg:
 6941 0420 00000000 		.space	48
 6941      00000000 
 6941      00000000 
 6941      00000000 
 6941      00000000 
 6944              	nh:
 6945 0450 00000000 		.space	1328
 6945      00000000 
 6945      00000000 
 6945      00000000 
 6945      00000000 
 6948              	motor_sub:
 6949 0980 00000000 		.space	64
 6949      00000000 
 6949      00000000 
 6949      00000000 
 6949      00000000 
 6952              	led_sub:
 6953 09c0 00000000 		.space	28
 6953      00000000 
 6953      00000000 
 6953      00000000 
 6953      00000000 
 6956              	chatter:
 6957 09dc 00000000 		.space	20
 6957      00000000 
 6957      00000000 
 6957      00000000 
 6957      00000000 
 6960              	wheelSeperation:
 6961 09f0 00000000 		.space	4
 6964              	GenerateStartStatus:
 6965 09f4 00       		.space	1
 6968              	NumberOfByteToReceive:
 6969 09f5 00       		.space	1
 6972              	RxBuffer:
 6973 09f6 00000000 		.space	5
 6973      00
 6976              	slaveAddress:
 6977 09fb 00       		.space	1
 6980              	Rx_Idx:
 6981 09fc 00       		.space	1
 6982              		.text
 6983              	.Letext0:
 6984              		.file 19 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 6985              		.file 20 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types.h"
 6986              		.file 21 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 6987              		.file 22 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 6988              		.file 23 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_usart.h"
 6989              		.file 24 "./inc/motorSettings.h"
 6990              		.file 25 "./lib/ros_lib/ros/duration.h"
 6991              		.file 26 "./lib/ros_lib/ros.h"
 6992              		.file 27 "./inc/motor.h"
 6993              		.file 28 "./inc/led.h"
 6994              		.file 29 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/string.h"
 6995              		.file 30 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdlib.h"
 6996              		.file 31 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 6997              		.file 32 "./inc/stm32_time.h"
 6998              		.file 33 "./inc/encoder.h"
 6999              		.file 34 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdio.h"
 7000              		.file 35 "./lib/ros_lib/sensor_msgs/Joy.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/ccdPRsfQ.s:20     .text._ZNK8std_msgs4Time9serializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:25     .text._ZNK8std_msgs4Time9serializeEPh:00000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:75     .text._ZN8std_msgs4Time11deserializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:80     .text._ZN8std_msgs4Time11deserializeEPh:00000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:131    .text._ZN8std_msgs4Time7getTypeEv:00000000 $t
     /tmp/ccdPRsfQ.s:136    .text._ZN8std_msgs4Time7getTypeEv:00000000 _ZN8std_msgs4Time7getTypeEv
     /tmp/ccdPRsfQ.s:152    .text._ZN8std_msgs4Time7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:00000000 $d
     /tmp/ccdPRsfQ.s:159    .text._ZN8std_msgs4Time6getMD5Ev:00000000 $t
     /tmp/ccdPRsfQ.s:164    .text._ZN8std_msgs4Time6getMD5Ev:00000000 _ZN8std_msgs4Time6getMD5Ev
     /tmp/ccdPRsfQ.s:180    .text._ZN8std_msgs4Time6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:00000000 $d
     /tmp/ccdPRsfQ.s:187    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $t
     /tmp/ccdPRsfQ.s:192    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
     /tmp/ccdPRsfQ.s:209    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $d
     /tmp/ccdPRsfQ.s:216    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $t
     /tmp/ccdPRsfQ.s:221    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
     /tmp/ccdPRsfQ.s:237    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $d
     /tmp/ccdPRsfQ.s:244    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $t
     /tmp/ccdPRsfQ.s:249    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 _ZN14rosserial_msgs3Log7getTypeEv
     /tmp/ccdPRsfQ.s:266    .text._ZN14rosserial_msgs3Log7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $d
     /tmp/ccdPRsfQ.s:273    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $t
     /tmp/ccdPRsfQ.s:278    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 _ZN14rosserial_msgs3Log6getMD5Ev
     /tmp/ccdPRsfQ.s:294    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $d
     /tmp/ccdPRsfQ.s:301    .text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000000 $t
     /tmp/ccdPRsfQ.s:306    .text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000000 _ZN14rosserial_msgs19RequestParamRequest7getTypeEv
     /tmp/ccdPRsfQ.s:323    .text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000000 $d
     /tmp/ccdPRsfQ.s:330    .text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000000 $t
     /tmp/ccdPRsfQ.s:335    .text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000000 _ZN14rosserial_msgs19RequestParamRequest6getMD5Ev
     /tmp/ccdPRsfQ.s:351    .text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000000 $d
     /tmp/ccdPRsfQ.s:358    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $t
     /tmp/ccdPRsfQ.s:363    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
     /tmp/ccdPRsfQ.s:379    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $d
     /tmp/ccdPRsfQ.s:386    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $t
     /tmp/ccdPRsfQ.s:391    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
     /tmp/ccdPRsfQ.s:407    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $d
     /tmp/ccdPRsfQ.s:414    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 $t
     /tmp/ccdPRsfQ.s:419    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 _ZN8std_msgs19MultiArrayDimension7getTypeEv
     /tmp/ccdPRsfQ.s:436    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 $d
     /tmp/ccdPRsfQ.s:443    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 $t
     /tmp/ccdPRsfQ.s:448    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 _ZN8std_msgs19MultiArrayDimension6getMD5Ev
     /tmp/ccdPRsfQ.s:464    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 $d
     /tmp/ccdPRsfQ.s:471    .text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:476    .text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 _ZNK8std_msgs16MultiArrayLayout9serializeEPh
.ARM.exidx.text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:569    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 $t
     /tmp/ccdPRsfQ.s:574    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 _ZN8std_msgs16MultiArrayLayout7getTypeEv
     /tmp/ccdPRsfQ.s:590    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 $d
     /tmp/ccdPRsfQ.s:597    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 $t
     /tmp/ccdPRsfQ.s:602    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 _ZN8std_msgs16MultiArrayLayout6getMD5Ev
     /tmp/ccdPRsfQ.s:618    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 $d
     /tmp/ccdPRsfQ.s:625    .text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:630    .text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 _ZNK8std_msgs17Float32MultiArray9serializeEPh
.ARM.exidx.text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:722    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 $t
     /tmp/ccdPRsfQ.s:727    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 _ZN8std_msgs17Float32MultiArray7getTypeEv
     /tmp/ccdPRsfQ.s:743    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 $d
     /tmp/ccdPRsfQ.s:750    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 $t
     /tmp/ccdPRsfQ.s:755    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 _ZN8std_msgs17Float32MultiArray6getMD5Ev
     /tmp/ccdPRsfQ.s:771    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 $d
     /tmp/ccdPRsfQ.s:778    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:783    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 _ZNK8std_msgs5UInt89serializeEPh
.ARM.exidx.text._ZNK8std_msgs5UInt89serializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:809    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:814    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 _ZN8std_msgs5UInt811deserializeEPh
.ARM.exidx.text._ZN8std_msgs5UInt811deserializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:837    .text._ZN8std_msgs5UInt87getTypeEv:00000000 $t
     /tmp/ccdPRsfQ.s:842    .text._ZN8std_msgs5UInt87getTypeEv:00000000 _ZN8std_msgs5UInt87getTypeEv
     /tmp/ccdPRsfQ.s:858    .text._ZN8std_msgs5UInt87getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt87getTypeEv:00000000 $d
     /tmp/ccdPRsfQ.s:865    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 $t
     /tmp/ccdPRsfQ.s:870    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 _ZN8std_msgs5UInt86getMD5Ev
     /tmp/ccdPRsfQ.s:886    .text._ZN8std_msgs5UInt86getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt86getMD5Ev:00000000 $d
     /tmp/ccdPRsfQ.s:893    .text._ZN8std_msgs6Header7getTypeEv:00000000 $t
     /tmp/ccdPRsfQ.s:898    .text._ZN8std_msgs6Header7getTypeEv:00000000 _ZN8std_msgs6Header7getTypeEv
     /tmp/ccdPRsfQ.s:915    .text._ZN8std_msgs6Header7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header7getTypeEv:00000000 $d
     /tmp/ccdPRsfQ.s:922    .text._ZN8std_msgs6Header6getMD5Ev:00000000 $t
     /tmp/ccdPRsfQ.s:927    .text._ZN8std_msgs6Header6getMD5Ev:00000000 _ZN8std_msgs6Header6getMD5Ev
     /tmp/ccdPRsfQ.s:943    .text._ZN8std_msgs6Header6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header6getMD5Ev:00000000 $d
     /tmp/ccdPRsfQ.s:950    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $t
     /tmp/ccdPRsfQ.s:955    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 _ZN12roberto_msgs10MotorState7getTypeEv
     /tmp/ccdPRsfQ.s:972    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $d
     /tmp/ccdPRsfQ.s:979    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $t
     /tmp/ccdPRsfQ.s:984    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 _ZN12roberto_msgs10MotorState6getMD5Ev
     /tmp/ccdPRsfQ.s:1000   .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $d
     /tmp/ccdPRsfQ.s:1007   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 $t
     /tmp/ccdPRsfQ.s:1012   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 $d
     /tmp/ccdPRsfQ.s:1032   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $t
     /tmp/ccdPRsfQ.s:1037   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $d
     /tmp/ccdPRsfQ.s:1073   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $t
     /tmp/ccdPRsfQ.s:1078   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $d
     /tmp/ccdPRsfQ.s:1097   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $t
     /tmp/ccdPRsfQ.s:1102   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
     /tmp/ccdPRsfQ.s:1118   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $d
     /tmp/ccdPRsfQ.s:1125   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $t
     /tmp/ccdPRsfQ.s:1130   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
     /tmp/ccdPRsfQ.s:1146   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $d
     /tmp/ccdPRsfQ.s:1153   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $t
     /tmp/ccdPRsfQ.s:1158   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $d
     /tmp/ccdPRsfQ.s:1177   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $t
     /tmp/ccdPRsfQ.s:1182   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
     /tmp/ccdPRsfQ.s:1198   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $d
     /tmp/ccdPRsfQ.s:1205   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $t
     /tmp/ccdPRsfQ.s:1210   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
     /tmp/ccdPRsfQ.s:1226   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $d
     /tmp/ccdPRsfQ.s:1233   .text:00000000 $t
     /tmp/ccdPRsfQ.s:1238   .text:00000000 _Z6led_cbRKN8std_msgs5UInt8E
                       .ARM.exidx:00000000 $d
     /tmp/ccdPRsfQ.s:1259   .text._ZNK8std_msgs6Header9serializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:1264   .text._ZNK8std_msgs6Header9serializeEPh:00000000 _ZNK8std_msgs6Header9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6Header9serializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:1363   .text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:1368   .text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 _ZNK8std_msgs19MultiArrayDimension9serializeEPh
.ARM.exidx.text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:1451   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:1456   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:1669   .text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:1674   .text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:00000000 _ZNK14rosserial_msgs19RequestParamRequest9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:1727   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:1732   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:1791   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:1796   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:1931   .text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:1936   .text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:00000000 _ZN14rosserial_msgs19RequestParamRequest11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:2004   .text._ZN8std_msgs6Header11deserializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:2009   .text._ZN8std_msgs6Header11deserializeEPh:00000000 _ZN8std_msgs6Header11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6Header11deserializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:2122   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:2127   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:2315   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:2320   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:2394   .text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:2399   .text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 _ZN8std_msgs19MultiArrayDimension11deserializeEPh
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:2501   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:2506   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:2761   .text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:2766   .text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 _ZN8std_msgs16MultiArrayLayout11deserializeEPh
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:2880   .text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:2885   .text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 _ZN8std_msgs17Float32MultiArray11deserializeEPh
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:2998   .text:00000006 _Z8motor_cbRKN12roberto_msgs10MotorStateE
     /tmp/ccdPRsfQ.s:3115   .text:00000074 $d
     /tmp/ccdPRsfQ.s:3126   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $t
     /tmp/ccdPRsfQ.s:3131   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 _ZN3ros3Msg19serializeAvrFloat64EPhf
.ARM.exidx.text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $d
     /tmp/ccdPRsfQ.s:3218   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:3223   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 _ZNK12roberto_msgs10MotorState9serializeEPh
.ARM.exidx.text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:3295   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $t
     /tmp/ccdPRsfQ.s:3300   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 _ZN3ros3Msg21deserializeAvrFloat64EPKhPf
.ARM.exidx.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $d
     /tmp/ccdPRsfQ.s:3372   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:3377   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 _ZN12roberto_msgs10MotorState11deserializeEPh
.ARM.exidx.text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:3451   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $t
     /tmp/ccdPRsfQ.s:3456   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $d
     /tmp/ccdPRsfQ.s:3500   .text._ZN15ArduinoHardware4initEv:00000000 $t
     /tmp/ccdPRsfQ.s:3505   .text._ZN15ArduinoHardware4initEv:00000000 _ZN15ArduinoHardware4initEv
     /tmp/ccdPRsfQ.s:3623   .text._ZN15ArduinoHardware4initEv:0000008c $d
.ARM.exidx.text._ZN15ArduinoHardware4initEv:00000000 $d
     /tmp/ccdPRsfQ.s:3630   .text:00000080 $t
     /tmp/ccdPRsfQ.s:3635   .text:00000080 USART1_IRQHandler
     /tmp/ccdPRsfQ.s:3698   .text:000000c4 $d
     /tmp/ccdPRsfQ.s:3705   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 $t
     /tmp/ccdPRsfQ.s:3710   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
     /tmp/ccdPRsfQ.s:3764   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000020 $d
     /tmp/ccdPRsfQ.s:6651   .rodata._ZTVN14rosserial_msgs3LogE:00000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 $d
     /tmp/ccdPRsfQ.s:3770   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 $t
     /tmp/ccdPRsfQ.s:3775   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
     /tmp/ccdPRsfQ.s:3939   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:000000bc $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 $d
     /tmp/ccdPRsfQ.s:3946   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE12requestParamEPKci:00000000 $t
     /tmp/ccdPRsfQ.s:3951   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE12requestParamEPKci:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE12requestParamEPKci
     /tmp/ccdPRsfQ.s:4046   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE12requestParamEPKci:00000040 $d
     /tmp/ccdPRsfQ.s:6663   .rodata._ZTVN14rosserial_msgs19RequestParamRequestE:00000000 _ZTVN14rosserial_msgs19RequestParamRequestE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE12requestParamEPKci:00000000 $d
     /tmp/ccdPRsfQ.s:4052   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:00000000 $t
     /tmp/ccdPRsfQ.s:4057   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:00000000 $d
     /tmp/ccdPRsfQ.s:4125   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 $t
     /tmp/ccdPRsfQ.s:4130   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
     /tmp/ccdPRsfQ.s:4200   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000024 $d
     /tmp/ccdPRsfQ.s:6627   .rodata._ZTVN8std_msgs4TimeE:00000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 $d
     /tmp/ccdPRsfQ.s:4206   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 $t
     /tmp/ccdPRsfQ.s:4211   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
     /tmp/ccdPRsfQ.s:4373   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:000000b4 $d
     /tmp/ccdPRsfQ.s:6639   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 _ZTVN14rosserial_msgs9TopicInfoE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 $d
     /tmp/ccdPRsfQ.s:4380   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 $t
     /tmp/ccdPRsfQ.s:4385   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
     /tmp/ccdPRsfQ.s:4518   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000074 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 $d
     /tmp/ccdPRsfQ.s:4526   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 $t
     /tmp/ccdPRsfQ.s:4531   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
     /tmp/ccdPRsfQ.s:4893   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000208 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 $d
     /tmp/ccdPRsfQ.s:4905   .text.startup:00000000 $t
     /tmp/ccdPRsfQ.s:4910   .text.startup:00000000 main
     /tmp/ccdPRsfQ.s:5186   .text.startup:00000158 $d
     /tmp/ccdPRsfQ.s:5210   .text.startup:000001a0 $t
     /tmp/ccdPRsfQ.s:5627   .text.startup:00000438 $d
     /tmp/ccdPRsfQ.s:5642   .text.startup:00000470 $t
     /tmp/ccdPRsfQ.s:5863   .text.startup:000005c8 $d
          .ARM.exidx.text.startup:00000000 $d
     /tmp/ccdPRsfQ.s:5875   .text:000000cc $t
     /tmp/ccdPRsfQ.s:5880   .text:000000cc _Z13assert_failedPhm
     /tmp/ccdPRsfQ.s:5927   .text:000000f8 $d
     /tmp/ccdPRsfQ.s:5934   .text.startup:000005e4 $t
     /tmp/ccdPRsfQ.s:5938   .text.startup:000005e4 _GLOBAL__sub_I_USART_FIFO
     /tmp/ccdPRsfQ.s:6337   .text.startup:00000720 $d
     /tmp/ccdPRsfQ.s:6759   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/ccdPRsfQ.s:6675   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 _ZTVN14rosserial_msgs20RequestParamResponseE
     /tmp/ccdPRsfQ.s:6770   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccdPRsfQ.s:6747   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 _ZTVN12roberto_msgs10MotorStateE
     /tmp/ccdPRsfQ.s:6735   .rodata._ZTVN8std_msgs6HeaderE:00000000 _ZTVN8std_msgs6HeaderE
     /tmp/ccdPRsfQ.s:6782   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/ccdPRsfQ.s:6723   .rodata._ZTVN8std_msgs5UInt8E:00000000 _ZTVN8std_msgs5UInt8E
     /tmp/ccdPRsfQ.s:6711   .rodata._ZTVN8std_msgs17Float32MultiArrayE:00000000 _ZTVN8std_msgs17Float32MultiArrayE
     /tmp/ccdPRsfQ.s:6699   .rodata._ZTVN8std_msgs16MultiArrayLayoutE:00000000 _ZTVN8std_msgs16MultiArrayLayoutE
     /tmp/ccdPRsfQ.s:6687   .rodata._ZTVN8std_msgs19MultiArrayDimensionE:00000000 _ZTVN8std_msgs19MultiArrayDimensionE
     /tmp/ccdPRsfQ.s:6367   .init_array:00000000 $d
     /tmp/ccdPRsfQ.s:6373   .rodata._ZTSN3ros3MsgE:00000000 _ZTSN3ros3MsgE
     /tmp/ccdPRsfQ.s:6380   .rodata._ZTIN3ros3MsgE:00000000 _ZTIN3ros3MsgE
     /tmp/ccdPRsfQ.s:6377   .rodata._ZTIN3ros3MsgE:00000000 $d
     /tmp/ccdPRsfQ.s:6387   .rodata._ZTSN8std_msgs4TimeE:00000000 _ZTSN8std_msgs4TimeE
     /tmp/ccdPRsfQ.s:6394   .rodata._ZTIN8std_msgs4TimeE:00000000 _ZTIN8std_msgs4TimeE
     /tmp/ccdPRsfQ.s:6391   .rodata._ZTIN8std_msgs4TimeE:00000000 $d
     /tmp/ccdPRsfQ.s:6402   .rodata._ZTSN14rosserial_msgs9TopicInfoE:00000000 _ZTSN14rosserial_msgs9TopicInfoE
     /tmp/ccdPRsfQ.s:6409   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 _ZTIN14rosserial_msgs9TopicInfoE
     /tmp/ccdPRsfQ.s:6406   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/ccdPRsfQ.s:6417   .rodata._ZTSN14rosserial_msgs3LogE:00000000 _ZTSN14rosserial_msgs3LogE
     /tmp/ccdPRsfQ.s:6424   .rodata._ZTIN14rosserial_msgs3LogE:00000000 _ZTIN14rosserial_msgs3LogE
     /tmp/ccdPRsfQ.s:6421   .rodata._ZTIN14rosserial_msgs3LogE:00000000 $d
     /tmp/ccdPRsfQ.s:6432   .rodata._ZTSN14rosserial_msgs19RequestParamRequestE:00000000 _ZTSN14rosserial_msgs19RequestParamRequestE
     /tmp/ccdPRsfQ.s:6439   .rodata._ZTIN14rosserial_msgs19RequestParamRequestE:00000000 _ZTIN14rosserial_msgs19RequestParamRequestE
     /tmp/ccdPRsfQ.s:6436   .rodata._ZTIN14rosserial_msgs19RequestParamRequestE:00000000 $d
     /tmp/ccdPRsfQ.s:6447   .rodata._ZTSN14rosserial_msgs20RequestParamResponseE:00000000 _ZTSN14rosserial_msgs20RequestParamResponseE
     /tmp/ccdPRsfQ.s:6454   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 _ZTIN14rosserial_msgs20RequestParamResponseE
     /tmp/ccdPRsfQ.s:6451   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/ccdPRsfQ.s:6462   .rodata._ZTSN3ros15NodeHandleBase_E:00000000 _ZTSN3ros15NodeHandleBase_E
     /tmp/ccdPRsfQ.s:6469   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 _ZTIN3ros15NodeHandleBase_E
     /tmp/ccdPRsfQ.s:6466   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 $d
     /tmp/ccdPRsfQ.s:6476   .rodata._ZTSN3ros11Subscriber_E:00000000 _ZTSN3ros11Subscriber_E
     /tmp/ccdPRsfQ.s:6483   .rodata._ZTIN3ros11Subscriber_E:00000000 _ZTIN3ros11Subscriber_E
     /tmp/ccdPRsfQ.s:6480   .rodata._ZTIN3ros11Subscriber_E:00000000 $d
     /tmp/ccdPRsfQ.s:6490   .rodata._ZTSN8std_msgs19MultiArrayDimensionE:00000000 _ZTSN8std_msgs19MultiArrayDimensionE
     /tmp/ccdPRsfQ.s:6497   .rodata._ZTIN8std_msgs19MultiArrayDimensionE:00000000 _ZTIN8std_msgs19MultiArrayDimensionE
     /tmp/ccdPRsfQ.s:6494   .rodata._ZTIN8std_msgs19MultiArrayDimensionE:00000000 $d
     /tmp/ccdPRsfQ.s:6505   .rodata._ZTSN8std_msgs16MultiArrayLayoutE:00000000 _ZTSN8std_msgs16MultiArrayLayoutE
     /tmp/ccdPRsfQ.s:6512   .rodata._ZTIN8std_msgs16MultiArrayLayoutE:00000000 _ZTIN8std_msgs16MultiArrayLayoutE
     /tmp/ccdPRsfQ.s:6509   .rodata._ZTIN8std_msgs16MultiArrayLayoutE:00000000 $d
     /tmp/ccdPRsfQ.s:6520   .rodata._ZTSN8std_msgs17Float32MultiArrayE:00000000 _ZTSN8std_msgs17Float32MultiArrayE
     /tmp/ccdPRsfQ.s:6527   .rodata._ZTIN8std_msgs17Float32MultiArrayE:00000000 _ZTIN8std_msgs17Float32MultiArrayE
     /tmp/ccdPRsfQ.s:6524   .rodata._ZTIN8std_msgs17Float32MultiArrayE:00000000 $d
     /tmp/ccdPRsfQ.s:6535   .rodata._ZTSN8std_msgs5UInt8E:00000000 _ZTSN8std_msgs5UInt8E
     /tmp/ccdPRsfQ.s:6542   .rodata._ZTIN8std_msgs5UInt8E:00000000 _ZTIN8std_msgs5UInt8E
     /tmp/ccdPRsfQ.s:6539   .rodata._ZTIN8std_msgs5UInt8E:00000000 $d
     /tmp/ccdPRsfQ.s:6550   .rodata._ZTSN8std_msgs6HeaderE:00000000 _ZTSN8std_msgs6HeaderE
     /tmp/ccdPRsfQ.s:6557   .rodata._ZTIN8std_msgs6HeaderE:00000000 _ZTIN8std_msgs6HeaderE
     /tmp/ccdPRsfQ.s:6554   .rodata._ZTIN8std_msgs6HeaderE:00000000 $d
     /tmp/ccdPRsfQ.s:6565   .rodata._ZTSN12roberto_msgs10MotorStateE:00000000 _ZTSN12roberto_msgs10MotorStateE
     /tmp/ccdPRsfQ.s:6572   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 _ZTIN12roberto_msgs10MotorStateE
     /tmp/ccdPRsfQ.s:6569   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/ccdPRsfQ.s:6580   .rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/ccdPRsfQ.s:6588   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/ccdPRsfQ.s:6585   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 $d
     /tmp/ccdPRsfQ.s:6596   .rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccdPRsfQ.s:6603   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccdPRsfQ.s:6600   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/ccdPRsfQ.s:6611   .rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/ccdPRsfQ.s:6618   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/ccdPRsfQ.s:6615   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/ccdPRsfQ.s:6624   .rodata._ZTVN8std_msgs4TimeE:00000000 $d
     /tmp/ccdPRsfQ.s:6636   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/ccdPRsfQ.s:6648   .rodata._ZTVN14rosserial_msgs3LogE:00000000 $d
     /tmp/ccdPRsfQ.s:6660   .rodata._ZTVN14rosserial_msgs19RequestParamRequestE:00000000 $d
     /tmp/ccdPRsfQ.s:6672   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/ccdPRsfQ.s:6684   .rodata._ZTVN8std_msgs19MultiArrayDimensionE:00000000 $d
     /tmp/ccdPRsfQ.s:6696   .rodata._ZTVN8std_msgs16MultiArrayLayoutE:00000000 $d
     /tmp/ccdPRsfQ.s:6708   .rodata._ZTVN8std_msgs17Float32MultiArrayE:00000000 $d
     /tmp/ccdPRsfQ.s:6720   .rodata._ZTVN8std_msgs5UInt8E:00000000 $d
     /tmp/ccdPRsfQ.s:6732   .rodata._ZTVN8std_msgs6HeaderE:00000000 $d
     /tmp/ccdPRsfQ.s:6744   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/ccdPRsfQ.s:6756   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 $d
     /tmp/ccdPRsfQ.s:6767   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/ccdPRsfQ.s:6779   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/ccdPRsfQ.s:6956   .bss:000009dc chatter
     /tmp/ccdPRsfQ.s:6940   .bss:00000420 str_msg
     /tmp/ccdPRsfQ.s:6952   .bss:000009c0 led_sub
     /tmp/ccdPRsfQ.s:6948   .bss:00000980 motor_sub
     /tmp/ccdPRsfQ.s:6944   .bss:00000450 nh
     /tmp/ccdPRsfQ.s:6960   .bss:000009f0 wheelSeperation
     /tmp/ccdPRsfQ.s:6916   .bss:0000000c rear_left
     /tmp/ccdPRsfQ.s:6912   .bss:00000008 rear_right
     /tmp/ccdPRsfQ.s:6908   .bss:00000004 front_left
     /tmp/ccdPRsfQ.s:6904   .bss:00000000 front_right
     /tmp/ccdPRsfQ.s:6924   .bss:00000014 servo_right
     /tmp/ccdPRsfQ.s:6920   .bss:00000010 servo_left
     /tmp/ccdPRsfQ.s:6964   .bss:000009f4 GenerateStartStatus
     /tmp/ccdPRsfQ.s:6968   .bss:000009f5 NumberOfByteToReceive
     /tmp/ccdPRsfQ.s:6972   .bss:000009f6 RxBuffer
     /tmp/ccdPRsfQ.s:6976   .bss:000009fb slaveAddress
     /tmp/ccdPRsfQ.s:6980   .bss:000009fc Rx_Idx
     /tmp/ccdPRsfQ.s:6928   .bss:00000018 USART_CNTOUT
     /tmp/ccdPRsfQ.s:6932   .bss:0000001c USART_CNTIN
     /tmp/ccdPRsfQ.s:6936   .bss:00000020 USART_FIFO
     /tmp/ccdPRsfQ.s:6813   .rodata:00000000 _ZN14rosserial_msgsL12REQUESTPARAME
     /tmp/ccdPRsfQ.s:6900   .bss:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_unwind_cpp_pr0
led_set
strlen
memcpy
realloc
__aeabi_f2d
__aeabi_dadd
__aeabi_dmul
__aeabi_d2f
__aeabi_fcmplt
RCC_APB2PeriphClockCmd
GPIO_Init
USART_Cmd
USART_Init
USART_ITConfig
USART_GetITStatus
USART_ReceiveData
USART_SendData
millis
_ZN3ros16normalizeSecNSecERmS0_
__aeabi_i2d
__aeabi_ddiv
__aeabi_dsub
__aeabi_dcmpgt
__aeabi_dcmplt
RCC_Configuration
GPIO_PinRemapConfig
I2C1_Init
SysTick_Init
DEBUG_Init
LED_Init
malloc
delay
_ZN13motorSettingsC1EiPcP11TIM_TypeDefi
_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
_ZN13motorSettings12setRegulatorEffff
_ZN5motor11createMotorEP13motorSettings
sprintf
debug_toggle
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
