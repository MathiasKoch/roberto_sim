   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  20              		.align	1
  21              		.weak	_ZNK8std_msgs4Time9serializeEPh
  22              		.thumb
  23              		.thumb_func
  25              	_ZNK8std_msgs4Time9serializeEPh:
  26              		.fnstart
  27              	.LFB1046:
  28              		.file 1 "./lib/ros_lib/std_msgs/Time.h"
   1:./lib/ros_lib/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:./lib/ros_lib/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:./lib/ros_lib/std_msgs/Time.h **** 
   4:./lib/ros_lib/std_msgs/Time.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Time.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Time.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Time.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Time.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Time.h **** 
  10:./lib/ros_lib/std_msgs/Time.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Time.h **** {
  12:./lib/ros_lib/std_msgs/Time.h **** 
  13:./lib/ros_lib/std_msgs/Time.h ****   class Time : public ros::Msg
  14:./lib/ros_lib/std_msgs/Time.h ****   {
  15:./lib/ros_lib/std_msgs/Time.h ****     public:
  16:./lib/ros_lib/std_msgs/Time.h ****       ros::Time data;
  17:./lib/ros_lib/std_msgs/Time.h **** 
  18:./lib/ros_lib/std_msgs/Time.h ****     Time():
  19:./lib/ros_lib/std_msgs/Time.h ****       data()
  20:./lib/ros_lib/std_msgs/Time.h ****     {
  21:./lib/ros_lib/std_msgs/Time.h ****     }
  22:./lib/ros_lib/std_msgs/Time.h **** 
  23:./lib/ros_lib/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  29              		.loc 1 23 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  24:./lib/ros_lib/std_msgs/Time.h ****     {
  25:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  26:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  35              		.loc 1 26 0
  36 0000 4368     		ldr	r3, [r0, #4]
  37 0002 0B70     		strb	r3, [r1]
  27:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  38              		.loc 1 27 0
  39 0004 4368     		ldr	r3, [r0, #4]
  40 0006 1B0A     		lsrs	r3, r3, #8
  41 0008 4B70     		strb	r3, [r1, #1]
  28:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  42              		.loc 1 28 0
  43 000a C388     		ldrh	r3, [r0, #6]
  44 000c 8B70     		strb	r3, [r1, #2]
  29:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  45              		.loc 1 29 0
  46 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  47 0010 CB70     		strb	r3, [r1, #3]
  48              	.LVL1:
  30:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  31:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  49              		.loc 1 31 0
  50 0012 8368     		ldr	r3, [r0, #8]
  51 0014 0B71     		strb	r3, [r1, #4]
  32:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  52              		.loc 1 32 0
  53 0016 8368     		ldr	r3, [r0, #8]
  54 0018 1B0A     		lsrs	r3, r3, #8
  55 001a 4B71     		strb	r3, [r1, #5]
  33:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  56              		.loc 1 33 0
  57 001c 4389     		ldrh	r3, [r0, #10]
  58 001e 8B71     		strb	r3, [r1, #6]
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  59              		.loc 1 34 0
  60 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  35:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  36:./lib/ros_lib/std_msgs/Time.h ****       return offset;
  37:./lib/ros_lib/std_msgs/Time.h ****     }
  61              		.loc 1 37 0
  62 0022 0820     		movs	r0, #8
  63              	.LVL2:
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  64              		.loc 1 34 0
  65 0024 CB71     		strb	r3, [r1, #7]
  66              	.LVL3:
  67              		.loc 1 37 0
  68 0026 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE1046:
  71              		.cantunwind
  72              		.fnend
  74              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  75              		.align	1
  76              		.weak	_ZN8std_msgs4Time11deserializeEPh
  77              		.thumb
  78              		.thumb_func
  80              	_ZN8std_msgs4Time11deserializeEPh:
  81              		.fnstart
  82              	.LFB1047:
  38:./lib/ros_lib/std_msgs/Time.h **** 
  39:./lib/ros_lib/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  83              		.loc 1 39 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL4:
  40:./lib/ros_lib/std_msgs/Time.h ****     {
  41:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  42:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  89              		.loc 1 42 0
  90 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  91 0002 4360     		str	r3, [r0, #4]
  43:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  92              		.loc 1 43 0
  93 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  94 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  95 000a 4360     		str	r3, [r0, #4]
  44:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  96              		.loc 1 44 0
  97 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  98 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  99 0012 4360     		str	r3, [r0, #4]
  45:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 100              		.loc 1 45 0
 101 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 102 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 103 001a 4360     		str	r3, [r0, #4]
 104              	.LVL5:
  46:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  47:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 105              		.loc 1 47 0
 106 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 107 001e 8360     		str	r3, [r0, #8]
  48:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 108              		.loc 1 48 0
 109 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 110 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 111 0026 8360     		str	r3, [r0, #8]
  49:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 112              		.loc 1 49 0
 113 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 114 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 115 002e 8360     		str	r3, [r0, #8]
  50:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 116              		.loc 1 50 0
 117 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 118 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 119 0036 8360     		str	r3, [r0, #8]
 120              	.LVL6:
  51:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  52:./lib/ros_lib/std_msgs/Time.h ****      return offset;
  53:./lib/ros_lib/std_msgs/Time.h ****     }
 121              		.loc 1 53 0
 122 0038 0820     		movs	r0, #8
 123              	.LVL7:
 124 003a 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE1047:
 127              		.cantunwind
 128              		.fnend
 130              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 131              		.align	1
 132              		.weak	_ZN8std_msgs4Time7getTypeEv
 133              		.thumb
 134              		.thumb_func
 136              	_ZN8std_msgs4Time7getTypeEv:
 137              		.fnstart
 138              	.LFB1048:
  54:./lib/ros_lib/std_msgs/Time.h **** 
  55:./lib/ros_lib/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 139              		.loc 1 55 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144              	.LVL8:
 145              		.loc 1 55 0
 146 0000 0048     		ldr	r0, .L4
 147              	.LVL9:
 148 0002 7047     		bx	lr
 149              	.L5:
 150              		.align	2
 151              	.L4:
 152 0004 00000000 		.word	.LC2
 153              		.cfi_endproc
 154              	.LFE1048:
 155              		.cantunwind
 156              		.fnend
 158              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 159              		.align	1
 160              		.weak	_ZN8std_msgs4Time6getMD5Ev
 161              		.thumb
 162              		.thumb_func
 164              	_ZN8std_msgs4Time6getMD5Ev:
 165              		.fnstart
 166              	.LFB1049:
  56:./lib/ros_lib/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 167              		.loc 1 56 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL10:
 173              		.loc 1 56 0
 174 0000 0048     		ldr	r0, .L7
 175              	.LVL11:
 176 0002 7047     		bx	lr
 177              	.L8:
 178              		.align	2
 179              	.L7:
 180 0004 0E000000 		.word	.LC3
 181              		.cfi_endproc
 182              	.LFE1049:
 183              		.cantunwind
 184              		.fnend
 186              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 187              		.align	1
 188              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 189              		.thumb
 190              		.thumb_func
 192              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 193              		.fnstart
 194              	.LFB1055:
 195              		.file 2 "./lib/ros_lib/rosserial_msgs/TopicInfo.h"
   1:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   4:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   9:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** {
  11:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  12:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   {
  14:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  29:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     TopicInfo():
  30:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_id(0),
  31:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_name(""),
  32:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       message_type(""),
  33:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       md5sum(""),
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       buffer_size(0)
  35:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  36:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  37:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  39:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  40:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  43:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  46:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  51:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  56:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  59:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
  60:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
  61:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  62:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  68:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  69:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       return offset;
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  71:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
  73:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  74:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
  77:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  78:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
  80:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  83:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
  86:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  87:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
  89:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  92:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
  95:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  96:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
  98:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 101:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 104:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 105:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 106:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
 107:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
 108:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 109:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 110:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 111:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 112:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 113:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 115:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 116:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****      return offset;
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
 118:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 119:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 196              		.loc 2 119 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL12:
 202              		.loc 2 119 0
 203 0000 0048     		ldr	r0, .L10
 204              	.LVL13:
 205 0002 7047     		bx	lr
 206              	.L11:
 207              		.align	2
 208              	.L10:
 209 0004 2F000000 		.word	.LC4
 210              		.cfi_endproc
 211              	.LFE1055:
 212              		.cantunwind
 213              		.fnend
 215              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 216              		.align	1
 217              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 218              		.thumb
 219              		.thumb_func
 221              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 222              		.fnstart
 223              	.LFB1056:
 120:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 224              		.loc 2 120 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL14:
 230              		.loc 2 120 0
 231 0000 0048     		ldr	r0, .L13
 232              	.LVL15:
 233 0002 7047     		bx	lr
 234              	.L14:
 235              		.align	2
 236              	.L13:
 237 0004 48000000 		.word	.LC5
 238              		.cfi_endproc
 239              	.LFE1056:
 240              		.cantunwind
 241              		.fnend
 243              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 244              		.align	1
 245              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 246              		.thumb
 247              		.thumb_func
 249              	_ZN14rosserial_msgs3Log7getTypeEv:
 250              		.fnstart
 251              	.LFB1062:
 252              		.file 3 "./lib/ros_lib/rosserial_msgs/Log.h"
   1:./lib/ros_lib/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:./lib/ros_lib/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:./lib/ros_lib/rosserial_msgs/Log.h **** 
   4:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/Log.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/Log.h **** 
   9:./lib/ros_lib/rosserial_msgs/Log.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/Log.h **** {
  11:./lib/ros_lib/rosserial_msgs/Log.h **** 
  12:./lib/ros_lib/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/Log.h ****   {
  14:./lib/ros_lib/rosserial_msgs/Log.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/Log.h ****       uint8_t level;
  16:./lib/ros_lib/rosserial_msgs/Log.h ****       const char* msg;
  17:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  18:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  19:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  20:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  21:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  22:./lib/ros_lib/rosserial_msgs/Log.h **** 
  23:./lib/ros_lib/rosserial_msgs/Log.h ****     Log():
  24:./lib/ros_lib/rosserial_msgs/Log.h ****       level(0),
  25:./lib/ros_lib/rosserial_msgs/Log.h ****       msg("")
  26:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  27:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  28:./lib/ros_lib/rosserial_msgs/Log.h **** 
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  31:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  33:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  36:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  38:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  39:./lib/ros_lib/rosserial_msgs/Log.h ****       return offset;
  40:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  41:./lib/ros_lib/rosserial_msgs/Log.h **** 
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
  43:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  44:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
  46:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  47:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg;
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
  49:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  50:./lib/ros_lib/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
  51:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
  52:./lib/ros_lib/rosserial_msgs/Log.h ****       }
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
  55:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  56:./lib/ros_lib/rosserial_msgs/Log.h ****      return offset;
  57:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  58:./lib/ros_lib/rosserial_msgs/Log.h **** 
  59:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 253              		.loc 3 59 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL16:
 259              		.loc 3 59 0
 260 0000 0048     		ldr	r0, .L16
 261              	.LVL17:
 262 0002 7047     		bx	lr
 263              	.L17:
 264              		.align	2
 265              	.L16:
 266 0004 69000000 		.word	.LC6
 267              		.cfi_endproc
 268              	.LFE1062:
 269              		.cantunwind
 270              		.fnend
 272              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 273              		.align	1
 274              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 275              		.thumb
 276              		.thumb_func
 278              	_ZN14rosserial_msgs3Log6getMD5Ev:
 279              		.fnstart
 280              	.LFB1063:
  60:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 281              		.loc 3 60 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL18:
 287              		.loc 3 60 0
 288 0000 0048     		ldr	r0, .L19
 289              	.LVL19:
 290 0002 7047     		bx	lr
 291              	.L20:
 292              		.align	2
 293              	.L19:
 294 0004 7C000000 		.word	.LC7
 295              		.cfi_endproc
 296              	.LFE1063:
 297              		.cantunwind
 298              		.fnend
 300              		.section	.text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv,"axG",%progbits,_ZN14rosserial_m
 301              		.align	1
 302              		.weak	_ZN14rosserial_msgs19RequestParamRequest7getTypeEv
 303              		.thumb
 304              		.thumb_func
 306              	_ZN14rosserial_msgs19RequestParamRequest7getTypeEv:
 307              		.fnstart
 308              	.LFB1069:
 309              		.file 4 "./lib/ros_lib/rosserial_msgs/RequestParam.h"
   1:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   4:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <string.h>
   5:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   6:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   7:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
   8:./lib/ros_lib/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
   9:./lib/ros_lib/rosserial_msgs/RequestParam.h **** {
  10:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  11:./lib/ros_lib/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  12:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  13:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  14:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  15:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  16:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       const char* name;
  17:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  18:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamRequest():
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       name("")
  20:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  21:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  22:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  24:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  25:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  28:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  30:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  31:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  33:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  35:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  36:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  37:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  39:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  42:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  45:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  46:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  48:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  49:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 310              		.loc 4 49 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL20:
 316              		.loc 4 49 0
 317 0000 0048     		ldr	r0, .L22
 318              	.LVL21:
 319 0002 7047     		bx	lr
 320              	.L23:
 321              		.align	2
 322              	.L22:
 323 0004 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE1069:
 326              		.cantunwind
 327              		.fnend
 329              		.section	.text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev,"axG",%progbits,_ZN14rosserial_ms
 330              		.align	1
 331              		.weak	_ZN14rosserial_msgs19RequestParamRequest6getMD5Ev
 332              		.thumb
 333              		.thumb_func
 335              	_ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:
 336              		.fnstart
 337              	.LFB1070:
  50:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
 338              		.loc 4 50 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343              	.LVL22:
 344              		.loc 4 50 0
 345 0000 0048     		ldr	r0, .L25
 346              	.LVL23:
 347 0002 7047     		bx	lr
 348              	.L26:
 349              		.align	2
 350              	.L25:
 351 0004 9D000000 		.word	.LC8
 352              		.cfi_endproc
 353              	.LFE1070:
 354              		.cantunwind
 355              		.fnend
 357              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 358              		.align	1
 359              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 360              		.thumb
 361              		.thumb_func
 363              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 364              		.fnstart
 365              	.LFB1076:
  51:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  52:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   };
  53:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  54:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  55:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  56:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  57:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  58:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  59:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  60:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  61:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float st_floats;
  62:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float * floats;
  63:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  64:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* st_strings;
  65:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* * strings;
  66:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  67:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamResponse():
  68:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length(0), ints(NULL),
  69:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length(0), floats(NULL),
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length(0), strings(NULL)
  71:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  72:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  73:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  75:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  76:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  82:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  83:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
  84:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
  85:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_intsi;
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  91:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  92:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  98:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  99:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 100:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 101:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_floatsi;
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 107:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 108:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 116:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 119:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 120:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 122:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 124:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 125:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 129:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 132:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 133:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
 134:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 135:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 136:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 137:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 138:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 139:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 140:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 142:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 144:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 148:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 151:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 152:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 153:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 154:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 155:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 156:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 157:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 158:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 161:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 163:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 170:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 172:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 175:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 178:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 180:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 181:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 183:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 184:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 366              		.loc 4 184 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371              	.LVL24:
 372              		.loc 4 184 0
 373 0000 0048     		ldr	r0, .L28
 374              	.LVL25:
 375 0002 7047     		bx	lr
 376              	.L29:
 377              		.align	2
 378              	.L28:
 379 0004 00000000 		.word	.LANCHOR0
 380              		.cfi_endproc
 381              	.LFE1076:
 382              		.cantunwind
 383              		.fnend
 385              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 386              		.align	1
 387              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 388              		.thumb
 389              		.thumb_func
 391              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 392              		.fnstart
 393              	.LFB1077:
 185:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 394              		.loc 4 185 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 399              	.LVL26:
 400              		.loc 4 185 0
 401 0000 0048     		ldr	r0, .L31
 402              	.LVL27:
 403 0002 7047     		bx	lr
 404              	.L32:
 405              		.align	2
 406              	.L31:
 407 0004 BE000000 		.word	.LC9
 408              		.cfi_endproc
 409              	.LFE1077:
 410              		.cantunwind
 411              		.fnend
 413              		.section	.text._ZN8std_msgs19MultiArrayDimension7getTypeEv,"axG",%progbits,_ZN8std_msgs19MultiArra
 414              		.align	1
 415              		.weak	_ZN8std_msgs19MultiArrayDimension7getTypeEv
 416              		.thumb
 417              		.thumb_func
 419              	_ZN8std_msgs19MultiArrayDimension7getTypeEv:
 420              		.fnstart
 421              	.LFB1146:
 422              		.file 5 "./lib/ros_lib/std_msgs/MultiArrayDimension.h"
   1:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #ifndef _ROS_std_msgs_MultiArrayDimension_h
   2:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #define _ROS_std_msgs_MultiArrayDimension_h
   3:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
   4:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
   9:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** {
  11:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  12:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****   class MultiArrayDimension : public ros::Msg
  13:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****   {
  14:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     public:
  15:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       const char* label;
  16:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t size;
  17:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t stride;
  18:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  19:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     MultiArrayDimension():
  20:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       label(""),
  21:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       size(0),
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       stride(0)
  23:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  24:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  25:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     virtual int serialize(unsigned char *outbuffer) const
  27:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  28:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       int offset = 0;
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t length_label = strlen(this->label);
  30:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
  31:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
  32:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, this->label, length_label);
  33:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
  34:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 0) = (this->size >> (8 * 0)) & 0xFF;
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->size >> (8 * 1)) & 0xFF;
  36:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
  37:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->size >> (8 * 3)) & 0xFF;
  38:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
  39:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 0) = (this->stride >> (8 * 0)) & 0xFF;
  40:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->stride >> (8 * 1)) & 0xFF;
  41:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->stride >> (8 * 2)) & 0xFF;
  42:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->stride >> (8 * 3)) & 0xFF;
  43:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
  44:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       return offset;
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  46:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     virtual int deserialize(unsigned char *inbuffer)
  48:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  49:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       int offset = 0;
  50:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t length_label;
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(&length_label, (inbuffer + offset), sizeof(uint32_t));
  52:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       for(unsigned int k= offset; k< offset+length_label; ++k){
  54:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
  55:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       }
  56:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       inbuffer[offset+length_label-1]=0;
  57:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->label = (char *)(inbuffer + offset-1);
  58:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size =  ((uint32_t) (*(inbuffer + offset)));
  60:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  61:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  62:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  63:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
  64:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride =  ((uint32_t) (*(inbuffer + offset)));
  65:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  66:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  67:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  68:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
  69:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****      return offset;
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  71:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  72:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     const char * getType(){ return "std_msgs/MultiArrayDimension"; };
 423              		.loc 5 72 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 428              	.LVL28:
 429              		.loc 5 72 0
 430 0000 0048     		ldr	r0, .L34
 431              	.LVL29:
 432 0002 7047     		bx	lr
 433              	.L35:
 434              		.align	2
 435              	.L34:
 436 0004 DF000000 		.word	.LC10
 437              		.cfi_endproc
 438              	.LFE1146:
 439              		.cantunwind
 440              		.fnend
 442              		.section	.text._ZN8std_msgs19MultiArrayDimension6getMD5Ev,"axG",%progbits,_ZN8std_msgs19MultiArray
 443              		.align	1
 444              		.weak	_ZN8std_msgs19MultiArrayDimension6getMD5Ev
 445              		.thumb
 446              		.thumb_func
 448              	_ZN8std_msgs19MultiArrayDimension6getMD5Ev:
 449              		.fnstart
 450              	.LFB1147:
  73:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     const char * getMD5(){ return "4cd0c83a8683deae40ecdac60e53bfa8"; };
 451              		.loc 5 73 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              		@ link register save eliminated.
 456              	.LVL30:
 457              		.loc 5 73 0
 458 0000 0048     		ldr	r0, .L37
 459              	.LVL31:
 460 0002 7047     		bx	lr
 461              	.L38:
 462              		.align	2
 463              	.L37:
 464 0004 FC000000 		.word	.LC11
 465              		.cfi_endproc
 466              	.LFE1147:
 467              		.cantunwind
 468              		.fnend
 470              		.section	.text._ZNK8std_msgs16MultiArrayLayout9serializeEPh,"axG",%progbits,_ZNK8std_msgs16MultiAr
 471              		.align	1
 472              		.weak	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 473              		.thumb
 474              		.thumb_func
 476              	_ZNK8std_msgs16MultiArrayLayout9serializeEPh:
 477              		.fnstart
 478              	.LFB1151:
 479              		.file 6 "./lib/ros_lib/std_msgs/MultiArrayLayout.h"
   1:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #ifndef _ROS_std_msgs_MultiArrayLayout_h
   2:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #define _ROS_std_msgs_MultiArrayLayout_h
   3:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
   4:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include "std_msgs/MultiArrayDimension.h"
   9:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  10:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** {
  12:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  13:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****   class MultiArrayLayout : public ros::Msg
  14:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****   {
  15:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     public:
  16:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint8_t dim_length;
  17:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       std_msgs::MultiArrayDimension st_dim;
  18:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       std_msgs::MultiArrayDimension * dim;
  19:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint32_t data_offset;
  20:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  21:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     MultiArrayLayout():
  22:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length(0), dim(NULL),
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       data_offset(0)
  24:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  25:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
  26:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  27:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     virtual int serialize(unsigned char *outbuffer) const
 480              		.loc 6 27 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              	.LVL32:
 485 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 486              		.save {r3, r4, r5, r6, r7, lr}
 487              	.LCFI0:
 488              		.cfi_def_cfa_offset 24
 489              		.cfi_offset 3, -24
 490              		.cfi_offset 4, -20
 491              		.cfi_offset 5, -16
 492              		.cfi_offset 6, -12
 493              		.cfi_offset 7, -8
 494              		.cfi_offset 14, -4
 495              		.loc 6 27 0
 496 0002 0D46     		mov	r5, r1
  28:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  29:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = dim_length;
 497              		.loc 6 30 0
 498 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  27:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 499              		.loc 6 27 0
 500 0006 0446     		mov	r4, r0
  31:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 501              		.loc 6 31 0
 502 0008 0020     		movs	r0, #0
 503              	.LVL33:
  30:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 504              		.loc 6 30 0
 505 000a 0B70     		strb	r3, [r1]
 506              	.LVL34:
 507              		.loc 6 31 0
 508 000c 4870     		strb	r0, [r1, #1]
 509              	.LVL35:
  32:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 510              		.loc 6 32 0
 511 000e 8870     		strb	r0, [r1, #2]
 512              	.LVL36:
  33:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 513              		.loc 6 33 0
 514 0010 C870     		strb	r0, [r1, #3]
 515              	.LVL37:
 516 0012 0426     		movs	r6, #4
 517              	.LVL38:
 518              	.L41:
 519              	.LBB210:
  34:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 520              		.loc 6 34 0 discriminator 3
 521 0014 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 522 0016 471C     		adds	r7, r0, #1
 523 0018 C0B2     		uxtb	r0, r0
 524 001a 8342     		cmp	r3, r0
 525 001c 05EB0601 		add	r1, r5, r6
 526 0020 08D9     		bls	.L40
  35:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->dim[i].serialize(outbuffer + offset);
 527              		.loc 6 35 0 discriminator 2
 528 0022 A369     		ldr	r3, [r4, #24]
 529 0024 0001     		lsls	r0, r0, #4
 530              	.LVL39:
 531 0026 1A58     		ldr	r2, [r3, r0]
 532 0028 1844     		add	r0, r0, r3
 533 002a 1268     		ldr	r2, [r2]
 534 002c 9047     		blx	r2
 535              	.LVL40:
 536 002e 0644     		add	r6, r6, r0
 537              	.LVL41:
  34:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 538              		.loc 6 34 0 discriminator 2
 539 0030 3846     		mov	r0, r7
 540 0032 EFE7     		b	.L41
 541              	.LVL42:
 542              	.L40:
 543              	.LBE210:
  36:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
  37:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 0) = (this->data_offset >> (8 * 0)) & 0xFF;
 544              		.loc 6 37 0
 545 0034 E369     		ldr	r3, [r4, #28]
  38:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
  39:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 2) = (this->data_offset >> (8 * 2)) & 0xFF;
  40:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 3) = (this->data_offset >> (8 * 3)) & 0xFF;
  41:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
  42:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       return offset;
  43:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
 546              		.loc 6 43 0
 547 0036 301D     		adds	r0, r6, #4
 548              	.LVL43:
  37:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
 549              		.loc 6 37 0
 550 0038 AB55     		strb	r3, [r5, r6]
  38:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
 551              		.loc 6 38 0
 552 003a E369     		ldr	r3, [r4, #28]
 553 003c 1B0A     		lsrs	r3, r3, #8
 554 003e 4B70     		strb	r3, [r1, #1]
  39:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 3) = (this->data_offset >> (8 * 3)) & 0xFF;
 555              		.loc 6 39 0
 556 0040 E38B     		ldrh	r3, [r4, #30]
 557 0042 8B70     		strb	r3, [r1, #2]
  40:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
 558              		.loc 6 40 0
 559 0044 E37F     		ldrb	r3, [r4, #31]	@ zero_extendqisi2
 560 0046 CB70     		strb	r3, [r1, #3]
 561              	.LVL44:
 562              		.loc 6 43 0
 563 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 564              		.cfi_endproc
 565              	.LFE1151:
 566              		.fnend
 568              		.section	.text._ZN8std_msgs16MultiArrayLayout7getTypeEv,"axG",%progbits,_ZN8std_msgs16MultiArrayLa
 569              		.align	1
 570              		.weak	_ZN8std_msgs16MultiArrayLayout7getTypeEv
 571              		.thumb
 572              		.thumb_func
 574              	_ZN8std_msgs16MultiArrayLayout7getTypeEv:
 575              		.fnstart
 576              	.LFB1153:
  44:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     virtual int deserialize(unsigned char *inbuffer)
  46:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  47:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       int offset = 0;
  48:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint8_t dim_lengthT = *(inbuffer + offset++);
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       if(dim_lengthT > dim_length)
  50:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
  51:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += 3;
  52:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length = dim_lengthT;
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
  56:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset =  ((uint32_t) (*(inbuffer + offset)));
  58:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  59:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  60:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  61:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
  62:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****      return offset;
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
  64:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  65:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     const char * getType(){ return "std_msgs/MultiArrayLayout"; };
 577              		.loc 6 65 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 582              	.LVL45:
 583              		.loc 6 65 0
 584 0000 0048     		ldr	r0, .L44
 585              	.LVL46:
 586 0002 7047     		bx	lr
 587              	.L45:
 588              		.align	2
 589              	.L44:
 590 0004 1D010000 		.word	.LC12
 591              		.cfi_endproc
 592              	.LFE1153:
 593              		.cantunwind
 594              		.fnend
 596              		.section	.text._ZN8std_msgs16MultiArrayLayout6getMD5Ev,"axG",%progbits,_ZN8std_msgs16MultiArrayLay
 597              		.align	1
 598              		.weak	_ZN8std_msgs16MultiArrayLayout6getMD5Ev
 599              		.thumb
 600              		.thumb_func
 602              	_ZN8std_msgs16MultiArrayLayout6getMD5Ev:
 603              		.fnstart
 604              	.LFB1154:
  66:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     const char * getMD5(){ return "0fed2a11c13e11c5571b4e2a995a91a3"; };
 605              		.loc 6 66 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              		@ link register save eliminated.
 610              	.LVL47:
 611              		.loc 6 66 0
 612 0000 0048     		ldr	r0, .L47
 613              	.LVL48:
 614 0002 7047     		bx	lr
 615              	.L48:
 616              		.align	2
 617              	.L47:
 618 0004 37010000 		.word	.LC13
 619              		.cfi_endproc
 620              	.LFE1154:
 621              		.cantunwind
 622              		.fnend
 624              		.section	.text._ZNK8std_msgs17Float32MultiArray9serializeEPh,"axG",%progbits,_ZNK8std_msgs17Float3
 625              		.align	1
 626              		.weak	_ZNK8std_msgs17Float32MultiArray9serializeEPh
 627              		.thumb
 628              		.thumb_func
 630              	_ZNK8std_msgs17Float32MultiArray9serializeEPh:
 631              		.fnstart
 632              	.LFB1158:
 633              		.file 7 "./lib/ros_lib/std_msgs/Float32MultiArray.h"
   1:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #ifndef _ROS_std_msgs_Float32MultiArray_h
   2:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #define _ROS_std_msgs_Float32MultiArray_h
   3:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
   4:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include "std_msgs/MultiArrayLayout.h"
   9:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  10:./lib/ros_lib/std_msgs/Float32MultiArray.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Float32MultiArray.h **** {
  12:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  13:./lib/ros_lib/std_msgs/Float32MultiArray.h ****   class Float32MultiArray : public ros::Msg
  14:./lib/ros_lib/std_msgs/Float32MultiArray.h ****   {
  15:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     public:
  16:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       std_msgs::MultiArrayLayout layout;
  17:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_length;
  18:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       float st_data;
  19:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       float * data;
  20:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  21:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     Float32MultiArray():
  22:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       layout(),
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       data_length(0), data(NULL)
  24:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  25:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
  26:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  27:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     virtual int serialize(unsigned char *outbuffer) const
 634              		.loc 7 27 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              	.LVL49:
 639 0000 70B5     		push	{r4, r5, r6, lr}
 640              		.save {r4, r5, r6, lr}
 641              	.LCFI1:
 642              		.cfi_def_cfa_offset 16
 643              		.cfi_offset 4, -16
 644              		.cfi_offset 5, -12
 645              		.cfi_offset 6, -8
 646              		.cfi_offset 14, -4
 647              		.loc 7 27 0
 648 0002 0446     		mov	r4, r0
  28:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  29:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += this->layout.serialize(outbuffer + offset);
 649              		.loc 7 30 0
 650 0004 0430     		adds	r0, r0, #4
 651              	.LVL50:
  27:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 652              		.loc 7 27 0
 653 0006 0D46     		mov	r5, r1
 654              		.loc 7 30 0
 655 0008 FFF7FEFF 		bl	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 656              	.LVL51:
  31:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = data_length;
 657              		.loc 7 31 0
 658 000c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
  32:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 659              		.loc 7 32 0
 660 0010 0022     		movs	r2, #0
  31:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = data_length;
 661              		.loc 7 31 0
 662 0012 2B54     		strb	r3, [r5, r0]
 663              	.LVL52:
 664              		.loc 7 32 0
 665 0014 2B18     		adds	r3, r5, r0
 666 0016 0430     		adds	r0, r0, #4
 667              	.LVL53:
 668 0018 5A70     		strb	r2, [r3, #1]
 669              	.LVL54:
  33:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 670              		.loc 7 33 0
 671 001a 9A70     		strb	r2, [r3, #2]
  34:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 672              		.loc 7 34 0
 673 001c DA70     		strb	r2, [r3, #3]
 674              	.LVL55:
 675 001e 2B18     		adds	r3, r5, r0
 676              	.LVL56:
 677              	.L51:
 678              	.LBB211:
  35:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
 679              		.loc 7 35 0 discriminator 3
 680 0020 94F82460 		ldrb	r6, [r4, #36]	@ zero_extendqisi2
 681 0024 511C     		adds	r1, r2, #1
 682 0026 D2B2     		uxtb	r2, r2
 683 0028 9642     		cmp	r6, r2
 684 002a A3EB0500 		sub	r0, r3, r5
 685              	.LVL57:
 686 002e 03F10403 		add	r3, r3, #4
 687 0032 0FD9     		bls	.L50
 688              	.LBB212:
  36:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
  37:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         float real;
  38:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         uint32_t base;
  39:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       } u_datai;
  40:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_datai.real = this->data[i];
 689              		.loc 7 40 0 discriminator 2
 690 0034 E06A     		ldr	r0, [r4, #44]
 691              	.LVL58:
  41:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 0) = (u_datai.base >> (8 * 0)) & 0xFF;
 692              		.loc 7 41 0 discriminator 2
 693 0036 50F82220 		ldr	r2, [r0, r2, lsl #2]
  42:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 1) = (u_datai.base >> (8 * 1)) & 0xFF;
 694              		.loc 7 42 0 discriminator 2
 695 003a 100A     		lsrs	r0, r2, #8
  41:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 0) = (u_datai.base >> (8 * 0)) & 0xFF;
 696              		.loc 7 41 0 discriminator 2
 697 003c 03F8042C 		strb	r2, [r3, #-4]
 698              		.loc 7 42 0 discriminator 2
 699 0040 03F8030C 		strb	r0, [r3, #-3]
  43:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 2) = (u_datai.base >> (8 * 2)) & 0xFF;
 700              		.loc 7 43 0 discriminator 2
 701 0044 100C     		lsrs	r0, r2, #16
  44:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 3) = (u_datai.base >> (8 * 3)) & 0xFF;
 702              		.loc 7 44 0 discriminator 2
 703 0046 120E     		lsrs	r2, r2, #24
 704 0048 03F8012C 		strb	r2, [r3, #-1]
 705              	.LVL59:
  43:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 2) = (u_datai.base >> (8 * 2)) & 0xFF;
 706              		.loc 7 43 0 discriminator 2
 707 004c 03F8020C 		strb	r0, [r3, #-2]
 708              	.LBE212:
  35:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 709              		.loc 7 35 0 discriminator 2
 710 0050 0A46     		mov	r2, r1
 711 0052 E5E7     		b	.L51
 712              	.LVL60:
 713              	.L50:
 714              	.LBE211:
  45:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->data[i]);
  46:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
  47:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       return offset;
  48:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
 715              		.loc 7 48 0
 716 0054 70BD     		pop	{r4, r5, r6, pc}
 717              		.cfi_endproc
 718              	.LFE1158:
 719              		.fnend
 721              		.section	.text._ZN8std_msgs17Float32MultiArray7getTypeEv,"axG",%progbits,_ZN8std_msgs17Float32Mult
 722              		.align	1
 723              		.weak	_ZN8std_msgs17Float32MultiArray7getTypeEv
 724              		.thumb
 725              		.thumb_func
 727              	_ZN8std_msgs17Float32MultiArray7getTypeEv:
 728              		.fnstart
 729              	.LFB1160:
  49:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  52:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       int offset = 0;
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += this->layout.deserialize(inbuffer + offset);
  54:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       if(data_lengthT > data_length)
  56:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
  57:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += 3;
  58:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       data_length = data_lengthT;
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
  60:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
  61:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         float real;
  62:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         uint32_t base;
  63:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       } u_st_data;
  64:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base = 0;
  65:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
  66:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  67:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  68:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  69:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       this->st_data = u_st_data.real;
  70:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->st_data);
  71:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         memcpy( &(this->data[i]), &(this->st_data), sizeof(float));
  72:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
  73:./lib/ros_lib/std_msgs/Float32MultiArray.h ****      return offset;
  74:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
  75:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  76:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     const char * getType(){ return "std_msgs/Float32MultiArray"; };
 730              		.loc 7 76 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              		@ link register save eliminated.
 735              	.LVL61:
 736              		.loc 7 76 0
 737 0000 0048     		ldr	r0, .L53
 738              	.LVL62:
 739 0002 7047     		bx	lr
 740              	.L54:
 741              		.align	2
 742              	.L53:
 743 0004 58010000 		.word	.LC14
 744              		.cfi_endproc
 745              	.LFE1160:
 746              		.cantunwind
 747              		.fnend
 749              		.section	.text._ZN8std_msgs17Float32MultiArray6getMD5Ev,"axG",%progbits,_ZN8std_msgs17Float32Multi
 750              		.align	1
 751              		.weak	_ZN8std_msgs17Float32MultiArray6getMD5Ev
 752              		.thumb
 753              		.thumb_func
 755              	_ZN8std_msgs17Float32MultiArray6getMD5Ev:
 756              		.fnstart
 757              	.LFB1161:
  77:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     const char * getMD5(){ return "6a40e0ffa6a17a503ac3f8616991b1f6"; };
 758              		.loc 7 77 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 763              	.LVL63:
 764              		.loc 7 77 0
 765 0000 0048     		ldr	r0, .L56
 766              	.LVL64:
 767 0002 7047     		bx	lr
 768              	.L57:
 769              		.align	2
 770              	.L56:
 771 0004 73010000 		.word	.LC15
 772              		.cfi_endproc
 773              	.LFE1161:
 774              		.cantunwind
 775              		.fnend
 777              		.section	.text._ZNK8std_msgs5UInt89serializeEPh,"axG",%progbits,_ZNK8std_msgs5UInt89serializeEPh,c
 778              		.align	1
 779              		.weak	_ZNK8std_msgs5UInt89serializeEPh
 780              		.thumb
 781              		.thumb_func
 783              	_ZNK8std_msgs5UInt89serializeEPh:
 784              		.fnstart
 785              	.LFB1165:
 786              		.file 8 "./lib/ros_lib/std_msgs/UInt8.h"
   1:./lib/ros_lib/std_msgs/UInt8.h **** #ifndef _ROS_std_msgs_UInt8_h
   2:./lib/ros_lib/std_msgs/UInt8.h **** #define _ROS_std_msgs_UInt8_h
   3:./lib/ros_lib/std_msgs/UInt8.h **** 
   4:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/UInt8.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/UInt8.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/UInt8.h **** 
   9:./lib/ros_lib/std_msgs/UInt8.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/UInt8.h **** {
  11:./lib/ros_lib/std_msgs/UInt8.h **** 
  12:./lib/ros_lib/std_msgs/UInt8.h ****   class UInt8 : public ros::Msg
  13:./lib/ros_lib/std_msgs/UInt8.h ****   {
  14:./lib/ros_lib/std_msgs/UInt8.h ****     public:
  15:./lib/ros_lib/std_msgs/UInt8.h ****       uint8_t data;
  16:./lib/ros_lib/std_msgs/UInt8.h **** 
  17:./lib/ros_lib/std_msgs/UInt8.h ****     UInt8():
  18:./lib/ros_lib/std_msgs/UInt8.h ****       data(0)
  19:./lib/ros_lib/std_msgs/UInt8.h ****     {
  20:./lib/ros_lib/std_msgs/UInt8.h ****     }
  21:./lib/ros_lib/std_msgs/UInt8.h **** 
  22:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int serialize(unsigned char *outbuffer) const
 787              		.loc 8 22 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791              		@ link register save eliminated.
 792              	.LVL65:
  23:./lib/ros_lib/std_msgs/UInt8.h ****     {
  24:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  25:./lib/ros_lib/std_msgs/UInt8.h ****       *(outbuffer + offset + 0) = (this->data >> (8 * 0)) & 0xFF;
 793              		.loc 8 25 0
 794 0000 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  26:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  27:./lib/ros_lib/std_msgs/UInt8.h ****       return offset;
  28:./lib/ros_lib/std_msgs/UInt8.h ****     }
 795              		.loc 8 28 0
 796 0002 0120     		movs	r0, #1
 797              	.LVL66:
  25:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 798              		.loc 8 25 0
 799 0004 0B70     		strb	r3, [r1]
 800              	.LVL67:
 801              		.loc 8 28 0
 802 0006 7047     		bx	lr
 803              		.cfi_endproc
 804              	.LFE1165:
 805              		.cantunwind
 806              		.fnend
 808              		.section	.text._ZN8std_msgs5UInt811deserializeEPh,"axG",%progbits,_ZN8std_msgs5UInt811deserializeE
 809              		.align	1
 810              		.weak	_ZN8std_msgs5UInt811deserializeEPh
 811              		.thumb
 812              		.thumb_func
 814              	_ZN8std_msgs5UInt811deserializeEPh:
 815              		.fnstart
 816              	.LFB1166:
  29:./lib/ros_lib/std_msgs/UInt8.h **** 
  30:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int deserialize(unsigned char *inbuffer)
 817              		.loc 8 30 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		@ link register save eliminated.
 822              	.LVL68:
  31:./lib/ros_lib/std_msgs/UInt8.h ****     {
  32:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  33:./lib/ros_lib/std_msgs/UInt8.h ****       this->data =  ((uint8_t) (*(inbuffer + offset)));
 823              		.loc 8 33 0
 824 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 825 0002 0371     		strb	r3, [r0, #4]
 826              	.LVL69:
  34:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  35:./lib/ros_lib/std_msgs/UInt8.h ****      return offset;
  36:./lib/ros_lib/std_msgs/UInt8.h ****     }
 827              		.loc 8 36 0
 828 0004 0120     		movs	r0, #1
 829              	.LVL70:
 830 0006 7047     		bx	lr
 831              		.cfi_endproc
 832              	.LFE1166:
 833              		.cantunwind
 834              		.fnend
 836              		.section	.text._ZN8std_msgs5UInt87getTypeEv,"axG",%progbits,_ZN8std_msgs5UInt87getTypeEv,comdat
 837              		.align	1
 838              		.weak	_ZN8std_msgs5UInt87getTypeEv
 839              		.thumb
 840              		.thumb_func
 842              	_ZN8std_msgs5UInt87getTypeEv:
 843              		.fnstart
 844              	.LFB1167:
  37:./lib/ros_lib/std_msgs/UInt8.h **** 
  38:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getType(){ return "std_msgs/UInt8"; };
 845              		.loc 8 38 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              		@ link register save eliminated.
 850              	.LVL71:
 851              		.loc 8 38 0
 852 0000 0048     		ldr	r0, .L61
 853              	.LVL72:
 854 0002 7047     		bx	lr
 855              	.L62:
 856              		.align	2
 857              	.L61:
 858 0004 94010000 		.word	.LC16
 859              		.cfi_endproc
 860              	.LFE1167:
 861              		.cantunwind
 862              		.fnend
 864              		.section	.text._ZN8std_msgs5UInt86getMD5Ev,"axG",%progbits,_ZN8std_msgs5UInt86getMD5Ev,comdat
 865              		.align	1
 866              		.weak	_ZN8std_msgs5UInt86getMD5Ev
 867              		.thumb
 868              		.thumb_func
 870              	_ZN8std_msgs5UInt86getMD5Ev:
 871              		.fnstart
 872              	.LFB1168:
  39:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getMD5(){ return "7c8164229e7d2c17eb95e9231617fdee"; };
 873              		.loc 8 39 0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 0
 876              		@ frame_needed = 0, uses_anonymous_args = 0
 877              		@ link register save eliminated.
 878              	.LVL73:
 879              		.loc 8 39 0
 880 0000 0048     		ldr	r0, .L64
 881              	.LVL74:
 882 0002 7047     		bx	lr
 883              	.L65:
 884              		.align	2
 885              	.L64:
 886 0004 A3010000 		.word	.LC17
 887              		.cfi_endproc
 888              	.LFE1168:
 889              		.cantunwind
 890              		.fnend
 892              		.section	.text._ZN8std_msgs6Header7getTypeEv,"axG",%progbits,_ZN8std_msgs6Header7getTypeEv,comdat
 893              		.align	1
 894              		.weak	_ZN8std_msgs6Header7getTypeEv
 895              		.thumb
 896              		.thumb_func
 898              	_ZN8std_msgs6Header7getTypeEv:
 899              		.fnstart
 900              	.LFB1174:
 901              		.file 9 "./lib/ros_lib/std_msgs/Header.h"
   1:./lib/ros_lib/std_msgs/Header.h **** #ifndef _ROS_std_msgs_Header_h
   2:./lib/ros_lib/std_msgs/Header.h **** #define _ROS_std_msgs_Header_h
   3:./lib/ros_lib/std_msgs/Header.h **** 
   4:./lib/ros_lib/std_msgs/Header.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Header.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Header.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Header.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Header.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Header.h **** 
  10:./lib/ros_lib/std_msgs/Header.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Header.h **** {
  12:./lib/ros_lib/std_msgs/Header.h **** 
  13:./lib/ros_lib/std_msgs/Header.h ****   class Header : public ros::Msg
  14:./lib/ros_lib/std_msgs/Header.h ****   {
  15:./lib/ros_lib/std_msgs/Header.h ****     public:
  16:./lib/ros_lib/std_msgs/Header.h ****       uint32_t seq;
  17:./lib/ros_lib/std_msgs/Header.h ****       ros::Time stamp;
  18:./lib/ros_lib/std_msgs/Header.h ****       const char* frame_id;
  19:./lib/ros_lib/std_msgs/Header.h **** 
  20:./lib/ros_lib/std_msgs/Header.h ****     Header():
  21:./lib/ros_lib/std_msgs/Header.h ****       seq(0),
  22:./lib/ros_lib/std_msgs/Header.h ****       stamp(),
  23:./lib/ros_lib/std_msgs/Header.h ****       frame_id("")
  24:./lib/ros_lib/std_msgs/Header.h ****     {
  25:./lib/ros_lib/std_msgs/Header.h ****     }
  26:./lib/ros_lib/std_msgs/Header.h **** 
  27:./lib/ros_lib/std_msgs/Header.h ****     virtual int serialize(unsigned char *outbuffer) const
  28:./lib/ros_lib/std_msgs/Header.h ****     {
  29:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->seq >> (8 * 0)) & 0xFF;
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
  33:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
  34:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
  38:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
  39:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
  43:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
  44:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  45:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id = strlen(this->frame_id);
  46:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
  47:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  48:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, this->frame_id, length_frame_id);
  49:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  50:./lib/ros_lib/std_msgs/Header.h ****       return offset;
  51:./lib/ros_lib/std_msgs/Header.h ****     }
  52:./lib/ros_lib/std_msgs/Header.h **** 
  53:./lib/ros_lib/std_msgs/Header.h ****     virtual int deserialize(unsigned char *inbuffer)
  54:./lib/ros_lib/std_msgs/Header.h ****     {
  55:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq =  ((uint32_t) (*(inbuffer + offset)));
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  59:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  60:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  64:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  65:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  69:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  70:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  71:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id;
  72:./lib/ros_lib/std_msgs/Header.h ****       memcpy(&length_frame_id, (inbuffer + offset), sizeof(uint32_t));
  73:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  74:./lib/ros_lib/std_msgs/Header.h ****       for(unsigned int k= offset; k< offset+length_frame_id; ++k){
  75:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
  76:./lib/ros_lib/std_msgs/Header.h ****       }
  77:./lib/ros_lib/std_msgs/Header.h ****       inbuffer[offset+length_frame_id-1]=0;
  78:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
  79:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  80:./lib/ros_lib/std_msgs/Header.h ****      return offset;
  81:./lib/ros_lib/std_msgs/Header.h ****     }
  82:./lib/ros_lib/std_msgs/Header.h **** 
  83:./lib/ros_lib/std_msgs/Header.h ****     const char * getType(){ return "std_msgs/Header"; };
 902              		.loc 9 83 0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906              		@ link register save eliminated.
 907              	.LVL75:
 908              		.loc 9 83 0
 909 0000 0048     		ldr	r0, .L67
 910              	.LVL76:
 911 0002 7047     		bx	lr
 912              	.L68:
 913              		.align	2
 914              	.L67:
 915 0004 C4010000 		.word	.LC18
 916              		.cfi_endproc
 917              	.LFE1174:
 918              		.cantunwind
 919              		.fnend
 921              		.section	.text._ZN8std_msgs6Header6getMD5Ev,"axG",%progbits,_ZN8std_msgs6Header6getMD5Ev,comdat
 922              		.align	1
 923              		.weak	_ZN8std_msgs6Header6getMD5Ev
 924              		.thumb
 925              		.thumb_func
 927              	_ZN8std_msgs6Header6getMD5Ev:
 928              		.fnstart
 929              	.LFB1175:
  84:./lib/ros_lib/std_msgs/Header.h ****     const char * getMD5(){ return "2176decaecbce78abc3b96ef049fabed"; };
 930              		.loc 9 84 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              		@ link register save eliminated.
 935              	.LVL77:
 936              		.loc 9 84 0
 937 0000 0048     		ldr	r0, .L70
 938              	.LVL78:
 939 0002 7047     		bx	lr
 940              	.L71:
 941              		.align	2
 942              	.L70:
 943 0004 D4010000 		.word	.LC19
 944              		.cfi_endproc
 945              	.LFE1175:
 946              		.cantunwind
 947              		.fnend
 949              		.section	.text._ZN12roberto_msgs10MotorState7getTypeEv,"axG",%progbits,_ZN12roberto_msgs10MotorSta
 950              		.align	1
 951              		.weak	_ZN12roberto_msgs10MotorState7getTypeEv
 952              		.thumb
 953              		.thumb_func
 955              	_ZN12roberto_msgs10MotorState7getTypeEv:
 956              		.fnstart
 957              	.LFB1244:
 958              		.file 10 "./lib/ros_lib/roberto_msgs/MotorState.h"
   1:./lib/ros_lib/roberto_msgs/MotorState.h **** #ifndef _ROS_roberto_msgs_MotorState_h
   2:./lib/ros_lib/roberto_msgs/MotorState.h **** #define _ROS_roberto_msgs_MotorState_h
   3:./lib/ros_lib/roberto_msgs/MotorState.h **** 
   4:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdint.h>
   5:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <string.h>
   6:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdlib.h>
   7:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "ros/msg.h"
   8:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "std_msgs/Header.h"
   9:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  10:./lib/ros_lib/roberto_msgs/MotorState.h **** namespace roberto_msgs
  11:./lib/ros_lib/roberto_msgs/MotorState.h **** {
  12:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  13:./lib/ros_lib/roberto_msgs/MotorState.h ****   class MotorState : public ros::Msg
  14:./lib/ros_lib/roberto_msgs/MotorState.h ****   {
  15:./lib/ros_lib/roberto_msgs/MotorState.h ****     public:
  16:./lib/ros_lib/roberto_msgs/MotorState.h ****       std_msgs::Header header;
  17:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_angle;
  18:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_velocity;
  19:./lib/ros_lib/roberto_msgs/MotorState.h ****       float speed;
  20:./lib/ros_lib/roberto_msgs/MotorState.h ****       float acceleration;
  21:./lib/ros_lib/roberto_msgs/MotorState.h ****       uint8_t mode;
  22:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_AUTO = 0 };
  23:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_PIVOT = 1 };
  24:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SPIN = 2 };
  25:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SIDEWAYS = 3 };
  26:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  27:./lib/ros_lib/roberto_msgs/MotorState.h ****     MotorState():
  28:./lib/ros_lib/roberto_msgs/MotorState.h ****       header(),
  29:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_angle(0),
  30:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_velocity(0),
  31:./lib/ros_lib/roberto_msgs/MotorState.h ****       speed(0),
  32:./lib/ros_lib/roberto_msgs/MotorState.h ****       acceleration(0),
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****       mode(0)
  34:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  35:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  36:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int serialize(unsigned char *outbuffer) const
  38:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  39:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.serialize(outbuffer + offset);
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
  46:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  47:./lib/ros_lib/roberto_msgs/MotorState.h ****       return offset;
  48:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  49:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  52:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.deserialize(inbuffer + offset);
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
  59:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  60:./lib/ros_lib/roberto_msgs/MotorState.h ****      return offset;
  61:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  62:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  63:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getType(){ return "roberto_msgs/MotorState"; };
 959              		.loc 10 63 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 0, uses_anonymous_args = 0
 963              		@ link register save eliminated.
 964              	.LVL79:
 965              		.loc 10 63 0
 966 0000 0048     		ldr	r0, .L73
 967              	.LVL80:
 968 0002 7047     		bx	lr
 969              	.L74:
 970              		.align	2
 971              	.L73:
 972 0004 F5010000 		.word	.LC20
 973              		.cfi_endproc
 974              	.LFE1244:
 975              		.cantunwind
 976              		.fnend
 978              		.section	.text._ZN12roberto_msgs10MotorState6getMD5Ev,"axG",%progbits,_ZN12roberto_msgs10MotorStat
 979              		.align	1
 980              		.weak	_ZN12roberto_msgs10MotorState6getMD5Ev
 981              		.thumb
 982              		.thumb_func
 984              	_ZN12roberto_msgs10MotorState6getMD5Ev:
 985              		.fnstart
 986              	.LFB1245:
  64:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getMD5(){ return "e8b5d1162b85151c49e02b8224796c0e"; };
 987              		.loc 10 64 0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
 991              		@ link register save eliminated.
 992              	.LVL81:
 993              		.loc 10 64 0
 994 0000 0048     		ldr	r0, .L76
 995              	.LVL82:
 996 0002 7047     		bx	lr
 997              	.L77:
 998              		.align	2
 999              	.L76:
 1000 0004 0D020000 		.word	.LC21
 1001              		.cfi_endproc
 1002              	.LFE1245:
 1003              		.cantunwind
 1004              		.fnend
 1006              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv,"axG",%
 1007              		.align	1
 1008              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv
 1009              		.thumb
 1010              		.thumb_func
 1012              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv:
 1013              		.fnstart
 1014              	.LFB1317:
 1015              		.file 11 "./lib/ros_lib/ros/node_handle.h"
   1:./lib/ros_lib/ros/node_handle.h **** /*
   2:./lib/ros_lib/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/node_handle.h ****  *
   4:./lib/ros_lib/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/node_handle.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/node_handle.h ****  *
   7:./lib/ros_lib/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/node_handle.h ****  * are met:
  10:./lib/ros_lib/ros/node_handle.h ****  *
  11:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/node_handle.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/node_handle.h ****  *
  21:./lib/ros_lib/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/node_handle.h ****  */
  34:./lib/ros_lib/ros/node_handle.h **** 
  35:./lib/ros_lib/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:./lib/ros_lib/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:./lib/ros_lib/ros/node_handle.h **** 
  38:./lib/ros_lib/ros/node_handle.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/node_handle.h **** 
  40:./lib/ros_lib/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:./lib/ros_lib/ros/node_handle.h **** 
  45:./lib/ros_lib/ros/node_handle.h **** #define SYNC_SECONDS        5
  46:./lib/ros_lib/ros/node_handle.h **** 
  47:./lib/ros_lib/ros/node_handle.h **** #define MODE_FIRST_FF       0
  48:./lib/ros_lib/ros/node_handle.h **** /*
  49:./lib/ros_lib/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  50:./lib/ros_lib/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  51:./lib/ros_lib/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  52:./lib/ros_lib/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  53:./lib/ros_lib/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  54:./lib/ros_lib/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  55:./lib/ros_lib/ros/node_handle.h ****  */
  56:./lib/ros_lib/ros/node_handle.h **** #define MODE_PROTOCOL_VER   1
  57:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER1		0xff // through groovy
  58:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER2		0xfe // in hydro
  59:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER 		PROTOCOL_VER2
  60:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_L         2
  61:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_H         3
  62:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_CHECKSUM  4   // checksum for msg size received from size L and H
  63:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_L        5   // waiting for topic id
  64:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_H        6
  65:./lib/ros_lib/ros/node_handle.h **** #define MODE_MESSAGE        7
  66:./lib/ros_lib/ros/node_handle.h **** #define MODE_MSG_CHECKSUM   8   // checksum for msg and topic id
  67:./lib/ros_lib/ros/node_handle.h **** 
  68:./lib/ros_lib/ros/node_handle.h **** 
  69:./lib/ros_lib/ros/node_handle.h **** #define MSG_TIMEOUT 20  //20 milliseconds to recieve all of message data
  70:./lib/ros_lib/ros/node_handle.h **** 
  71:./lib/ros_lib/ros/node_handle.h **** #include "msg.h"
  72:./lib/ros_lib/ros/node_handle.h **** 
  73:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  74:./lib/ros_lib/ros/node_handle.h **** 
  75:./lib/ros_lib/ros/node_handle.h ****   class NodeHandleBase_{
  76:./lib/ros_lib/ros/node_handle.h ****     public:
  77:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg* msg)=0;
  78:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce()=0;
  79:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected()=0;
  80:./lib/ros_lib/ros/node_handle.h ****     };
  81:./lib/ros_lib/ros/node_handle.h **** }
  82:./lib/ros_lib/ros/node_handle.h **** 
  83:./lib/ros_lib/ros/node_handle.h **** #include "publisher.h"
  84:./lib/ros_lib/ros/node_handle.h **** #include "subscriber.h"
  85:./lib/ros_lib/ros/node_handle.h **** #include "service_server.h"
  86:./lib/ros_lib/ros/node_handle.h **** #include "service_client.h"
  87:./lib/ros_lib/ros/node_handle.h **** 
  88:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  89:./lib/ros_lib/ros/node_handle.h **** 
  90:./lib/ros_lib/ros/node_handle.h ****   using rosserial_msgs::TopicInfo;
  91:./lib/ros_lib/ros/node_handle.h **** 
  92:./lib/ros_lib/ros/node_handle.h ****   /* Node Handle */
  93:./lib/ros_lib/ros/node_handle.h ****   template<class Hardware,
  94:./lib/ros_lib/ros/node_handle.h ****            int MAX_SUBSCRIBERS=25,
  95:./lib/ros_lib/ros/node_handle.h ****            int MAX_PUBLISHERS=25,
  96:./lib/ros_lib/ros/node_handle.h ****            int INPUT_SIZE=1024,
  97:./lib/ros_lib/ros/node_handle.h ****            int OUTPUT_SIZE=1024>
  98:./lib/ros_lib/ros/node_handle.h ****   class NodeHandle_ : public NodeHandleBase_
  99:./lib/ros_lib/ros/node_handle.h ****   {
 100:./lib/ros_lib/ros/node_handle.h ****     protected:
 101:./lib/ros_lib/ros/node_handle.h ****       Hardware hardware_;
 102:./lib/ros_lib/ros/node_handle.h **** 
 103:./lib/ros_lib/ros/node_handle.h ****       /* time used for syncing */
 104:./lib/ros_lib/ros/node_handle.h ****       uint32_t rt_time;
 105:./lib/ros_lib/ros/node_handle.h **** 
 106:./lib/ros_lib/ros/node_handle.h ****       /* used for computing current time */
 107:./lib/ros_lib/ros/node_handle.h ****       uint32_t sec_offset, nsec_offset;
 108:./lib/ros_lib/ros/node_handle.h **** 
 109:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_in[INPUT_SIZE];
 110:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_out[OUTPUT_SIZE];
 111:./lib/ros_lib/ros/node_handle.h **** 
 112:./lib/ros_lib/ros/node_handle.h ****       Publisher * publishers[MAX_PUBLISHERS];
 113:./lib/ros_lib/ros/node_handle.h ****       Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 114:./lib/ros_lib/ros/node_handle.h **** 
 115:./lib/ros_lib/ros/node_handle.h ****       /*
 116:./lib/ros_lib/ros/node_handle.h ****        * Setup Functions
 117:./lib/ros_lib/ros/node_handle.h ****        */
 118:./lib/ros_lib/ros/node_handle.h ****     public:
 119:./lib/ros_lib/ros/node_handle.h ****       NodeHandle_() : configured_(false) {
 120:./lib/ros_lib/ros/node_handle.h **** 
 121:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_PUBLISHERS; i++)
 122:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 123:./lib/ros_lib/ros/node_handle.h **** 
 124:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_SUBSCRIBERS; i++)
 125:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 126:./lib/ros_lib/ros/node_handle.h **** 
 127:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< INPUT_SIZE; i++)
 128:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 129:./lib/ros_lib/ros/node_handle.h **** 
 130:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< OUTPUT_SIZE; i++)
 131:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 132:./lib/ros_lib/ros/node_handle.h **** 
 133:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 134:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 135:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats_length = 0;
 136:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats = NULL;
 137:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 138:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 139:./lib/ros_lib/ros/node_handle.h ****       }
 140:./lib/ros_lib/ros/node_handle.h **** 
 141:./lib/ros_lib/ros/node_handle.h ****       Hardware* getHardware(){
 142:./lib/ros_lib/ros/node_handle.h ****         return &hardware_;
 143:./lib/ros_lib/ros/node_handle.h ****       }
 144:./lib/ros_lib/ros/node_handle.h **** 
 145:./lib/ros_lib/ros/node_handle.h ****       /* Start serial, initialize buffers */
 146:./lib/ros_lib/ros/node_handle.h ****       void initNode(){
 147:./lib/ros_lib/ros/node_handle.h ****         hardware_.init();
 148:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 149:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 150:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 151:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 152:./lib/ros_lib/ros/node_handle.h ****       };
 153:./lib/ros_lib/ros/node_handle.h **** 
 154:./lib/ros_lib/ros/node_handle.h ****       /* Start a named port, which may be network server IP, initialize buffers */
 155:./lib/ros_lib/ros/node_handle.h ****       void initNode(char *portName){
 156:./lib/ros_lib/ros/node_handle.h ****         hardware_.init(portName);
 157:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 158:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 159:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 160:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 161:./lib/ros_lib/ros/node_handle.h ****       };
 162:./lib/ros_lib/ros/node_handle.h **** 
 163:./lib/ros_lib/ros/node_handle.h ****     protected:
 164:./lib/ros_lib/ros/node_handle.h ****       //State machine variables for spinOnce
 165:./lib/ros_lib/ros/node_handle.h ****       int mode_;
 166:./lib/ros_lib/ros/node_handle.h ****       int bytes_;
 167:./lib/ros_lib/ros/node_handle.h ****       int topic_;
 168:./lib/ros_lib/ros/node_handle.h ****       int index_;
 169:./lib/ros_lib/ros/node_handle.h ****       int checksum_;
 170:./lib/ros_lib/ros/node_handle.h **** 
 171:./lib/ros_lib/ros/node_handle.h ****       bool configured_;
 172:./lib/ros_lib/ros/node_handle.h **** 
 173:./lib/ros_lib/ros/node_handle.h ****       /* used for syncing the time */
 174:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_time;
 175:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_receive_time;
 176:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_msg_timeout_time;
 177:./lib/ros_lib/ros/node_handle.h **** 
 178:./lib/ros_lib/ros/node_handle.h ****     public:
 179:./lib/ros_lib/ros/node_handle.h ****       /* This function goes in your loop() function, it handles
 180:./lib/ros_lib/ros/node_handle.h ****        *  serial input and callbacks for subscribers.
 181:./lib/ros_lib/ros/node_handle.h ****        */
 182:./lib/ros_lib/ros/node_handle.h **** 
 183:./lib/ros_lib/ros/node_handle.h **** 
 184:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce(){
 185:./lib/ros_lib/ros/node_handle.h **** 
 186:./lib/ros_lib/ros/node_handle.h ****         /* restart if timed out */
 187:./lib/ros_lib/ros/node_handle.h ****         uint32_t c_time = hardware_.time();
 188:./lib/ros_lib/ros/node_handle.h ****         if( (c_time - last_sync_receive_time) > (SYNC_SECONDS*2200) ){
 189:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 190:./lib/ros_lib/ros/node_handle.h ****          }
 191:./lib/ros_lib/ros/node_handle.h **** 
 192:./lib/ros_lib/ros/node_handle.h ****         /* reset if message has timed out */
 193:./lib/ros_lib/ros/node_handle.h ****         if ( mode_ != MODE_FIRST_FF){
 194:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 195:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 196:./lib/ros_lib/ros/node_handle.h ****           }
 197:./lib/ros_lib/ros/node_handle.h ****         }
 198:./lib/ros_lib/ros/node_handle.h ****         /* while available buffer, read data */
 199:./lib/ros_lib/ros/node_handle.h ****         while( true )
 200:./lib/ros_lib/ros/node_handle.h ****         {
 201:./lib/ros_lib/ros/node_handle.h ****           int data = hardware_.read();
 202:./lib/ros_lib/ros/node_handle.h ****           if( data < 0 )
 203:./lib/ros_lib/ros/node_handle.h ****             break;
 204:./lib/ros_lib/ros/node_handle.h ****           checksum_ += data;
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 207:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 208:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 209:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 210:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 211:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 212:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 213:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 214:./lib/ros_lib/ros/node_handle.h ****             }
 215:./lib/ros_lib/ros/node_handle.h ****             else if( hardware_.time() - c_time > (SYNC_SECONDS)){
 216:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 217:./lib/ros_lib/ros/node_handle.h ****               configured_=false;
 218:./lib/ros_lib/ros/node_handle.h ****               return -2;
 219:./lib/ros_lib/ros/node_handle.h ****             }
 220:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_PROTOCOL_VER ){
 221:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 222:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 223:./lib/ros_lib/ros/node_handle.h ****             }else{
 224:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_FIRST_FF;
 225:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 227:./lib/ros_lib/ros/node_handle.h ****             }
 228:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_SIZE_L ){   /* bottom half of message size */
 229:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 230:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 231:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 232:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 233:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_H ){   /* top half of message size */
 234:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 235:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 236:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 237:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 238:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 239:./lib/ros_lib/ros/node_handle.h **** 	    else
 240:./lib/ros_lib/ros/node_handle.h **** 	      mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 241:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 242:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 243:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 244:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 245:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 246:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 247:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 248:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 249:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 250:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_MSG_CHECKSUM ){ /* do checksum */
 251:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 254:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 255:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 258:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 259:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 260:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 261:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 262:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 263:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 264:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 265:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 266:./lib/ros_lib/ros/node_handle.h ****               }else{
 267:./lib/ros_lib/ros/node_handle.h ****                 if(subscribers[topic_-100])
 268:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 269:./lib/ros_lib/ros/node_handle.h ****               }
 270:./lib/ros_lib/ros/node_handle.h ****             }
 271:./lib/ros_lib/ros/node_handle.h ****           }
 272:./lib/ros_lib/ros/node_handle.h ****         }
 273:./lib/ros_lib/ros/node_handle.h **** 
 274:./lib/ros_lib/ros/node_handle.h ****         /* occasionally sync time */
 275:./lib/ros_lib/ros/node_handle.h ****         if( configured_ && ((c_time-last_sync_time) > (SYNC_SECONDS*500) )){
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 277:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 278:./lib/ros_lib/ros/node_handle.h ****         }
 279:./lib/ros_lib/ros/node_handle.h **** 
 280:./lib/ros_lib/ros/node_handle.h ****         return 0;
 281:./lib/ros_lib/ros/node_handle.h ****       }
 282:./lib/ros_lib/ros/node_handle.h **** 
 283:./lib/ros_lib/ros/node_handle.h **** 
 284:./lib/ros_lib/ros/node_handle.h ****       /* Are we connected to the PC? */
 285:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected() {
 1016              		.loc 11 285 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              		@ link register save eliminated.
 1021              	.LVL83:
 286:./lib/ros_lib/ros/node_handle.h ****         return configured_;
 287:./lib/ros_lib/ros/node_handle.h ****       };
 1022              		.loc 11 287 0
 1023 0000 90F8F408 		ldrb	r0, [r0, #2292]	@ zero_extendqisi2
 1024              	.LVL84:
 1025 0004 7047     		bx	lr
 1026              		.cfi_endproc
 1027              	.LFE1317:
 1028              		.cantunwind
 1029              		.fnend
 1031              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh,"axG",%progbits,_ZN3ros10Subscri
 1032              		.align	1
 1033              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 1034              		.thumb
 1035              		.thumb_func
 1037              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:
 1038              		.fnstart
 1039              	.LFB1331:
 1040              		.file 12 "./lib/ros_lib/ros/subscriber.h"
   1:./lib/ros_lib/ros/subscriber.h **** /* 
   2:./lib/ros_lib/ros/subscriber.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/subscriber.h ****  *
   4:./lib/ros_lib/ros/subscriber.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/subscriber.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/subscriber.h ****  *
   7:./lib/ros_lib/ros/subscriber.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/subscriber.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/subscriber.h ****  * are met:
  10:./lib/ros_lib/ros/subscriber.h ****  *
  11:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/subscriber.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/subscriber.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/subscriber.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/subscriber.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/subscriber.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/subscriber.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/subscriber.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/subscriber.h ****  *
  21:./lib/ros_lib/ros/subscriber.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/subscriber.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/subscriber.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/subscriber.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/subscriber.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/subscriber.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/subscriber.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/subscriber.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/subscriber.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/subscriber.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/subscriber.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/subscriber.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/subscriber.h ****  */
  34:./lib/ros_lib/ros/subscriber.h **** 
  35:./lib/ros_lib/ros/subscriber.h **** #ifndef ROS_SUBSCRIBER_H_
  36:./lib/ros_lib/ros/subscriber.h **** #define ROS_SUBSCRIBER_H_
  37:./lib/ros_lib/ros/subscriber.h **** 
  38:./lib/ros_lib/ros/subscriber.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/subscriber.h **** 
  40:./lib/ros_lib/ros/subscriber.h **** namespace ros {
  41:./lib/ros_lib/ros/subscriber.h **** 
  42:./lib/ros_lib/ros/subscriber.h ****   /* Base class for objects subscribers. */
  43:./lib/ros_lib/ros/subscriber.h ****   class Subscriber_
  44:./lib/ros_lib/ros/subscriber.h ****   {
  45:./lib/ros_lib/ros/subscriber.h ****     public:
  46:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char *data)=0;
  47:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType()=0;
  48:./lib/ros_lib/ros/subscriber.h **** 
  49:./lib/ros_lib/ros/subscriber.h ****       // id_ is set by NodeHandle when we advertise 
  50:./lib/ros_lib/ros/subscriber.h ****       int id_;
  51:./lib/ros_lib/ros/subscriber.h **** 
  52:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType()=0;
  53:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5()=0;
  54:./lib/ros_lib/ros/subscriber.h ****       const char * topic_;
  55:./lib/ros_lib/ros/subscriber.h ****   };
  56:./lib/ros_lib/ros/subscriber.h **** 
  57:./lib/ros_lib/ros/subscriber.h **** 
  58:./lib/ros_lib/ros/subscriber.h ****   /* Actual subscriber, templated on message type. */
  59:./lib/ros_lib/ros/subscriber.h ****   template<typename MsgT>
  60:./lib/ros_lib/ros/subscriber.h ****   class Subscriber: public Subscriber_{
  61:./lib/ros_lib/ros/subscriber.h ****     public:
  62:./lib/ros_lib/ros/subscriber.h ****       typedef void(*CallbackT)(const MsgT&);
  63:./lib/ros_lib/ros/subscriber.h ****       MsgT msg;
  64:./lib/ros_lib/ros/subscriber.h **** 
  65:./lib/ros_lib/ros/subscriber.h ****       Subscriber(const char * topic_name, CallbackT cb, int endpoint=rosserial_msgs::TopicInfo::ID_
  66:./lib/ros_lib/ros/subscriber.h ****         cb_(cb),
  67:./lib/ros_lib/ros/subscriber.h ****         endpoint_(endpoint)
  68:./lib/ros_lib/ros/subscriber.h ****       {
  69:./lib/ros_lib/ros/subscriber.h ****         topic_ = topic_name;
  70:./lib/ros_lib/ros/subscriber.h ****       };
  71:./lib/ros_lib/ros/subscriber.h **** 
  72:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char* data){
 1041              		.loc 12 72 0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 1045              		@ link register save eliminated.
 1046              	.LVL85:
 1047              	.LBB213:
 1048              	.LBB214:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 1049              		.loc 8 33 0
 1050 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1051              	.LBE214:
 1052              	.LBE213:
  73:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
  74:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 1053              		.loc 12 74 0
 1054 0002 0C30     		adds	r0, r0, #12
 1055              	.LVL86:
 1056              	.LBB216:
 1057              	.LBB215:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 1058              		.loc 8 33 0
 1059 0004 0371     		strb	r3, [r0, #4]
 1060              	.LVL87:
 1061              	.LBE215:
 1062              	.LBE216:
 1063              		.loc 12 74 0
 1064 0006 8368     		ldr	r3, [r0, #8]
 1065 0008 1847     		bx	r3	@ indirect register sibling call
 1066              	.LVL88:
 1067              		.cfi_endproc
 1068              	.LFE1331:
 1069              		.cantunwind
 1070              		.fnend
 1072              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv,"axG",%progbits,_ZN3ros10
 1073              		.align	1
 1074              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 1075              		.thumb
 1076              		.thumb_func
 1078              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:
 1079              		.fnstart
 1080              	.LFB1332:
  75:./lib/ros_lib/ros/subscriber.h ****       }
  76:./lib/ros_lib/ros/subscriber.h **** 
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType(){ return this->msg.getType(); }
  78:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
  79:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1081              		.loc 12 79 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 0
 1084              		@ frame_needed = 0, uses_anonymous_args = 0
 1085              		@ link register save eliminated.
 1086              	.LVL89:
 1087              		.loc 12 79 0
 1088 0000 8069     		ldr	r0, [r0, #24]
 1089              	.LVL90:
 1090 0002 7047     		bx	lr
 1091              		.cfi_endproc
 1092              	.LFE1332:
 1093              		.cantunwind
 1094              		.fnend
 1096              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv,"axG",%progbits,_ZN3ros10Subsc
 1097              		.align	1
 1098              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 1099              		.thumb
 1100              		.thumb_func
 1102              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:
 1103              		.fnstart
 1104              	.LFB1333:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1105              		.loc 12 77 0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 0
 1108              		@ frame_needed = 0, uses_anonymous_args = 0
 1109              		@ link register save eliminated.
 1110              	.LVL91:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1111              		.loc 12 77 0
 1112 0000 0048     		ldr	r0, .L82
 1113              	.LVL92:
 1114 0002 7047     		bx	lr
 1115              	.L83:
 1116              		.align	2
 1117              	.L82:
 1118 0004 94010000 		.word	.LC16
 1119              		.cfi_endproc
 1120              	.LFE1333:
 1121              		.cantunwind
 1122              		.fnend
 1124              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev,"axG",%progbits,_ZN3ros10Subscri
 1125              		.align	1
 1126              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 1127              		.thumb
 1128              		.thumb_func
 1130              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:
 1131              		.fnstart
 1132              	.LFB1334:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1133              		.loc 12 78 0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 1137              		@ link register save eliminated.
 1138              	.LVL93:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1139              		.loc 12 78 0
 1140 0000 0048     		ldr	r0, .L85
 1141              	.LVL94:
 1142 0002 7047     		bx	lr
 1143              	.L86:
 1144              		.align	2
 1145              	.L85:
 1146 0004 A3010000 		.word	.LC17
 1147              		.cfi_endproc
 1148              	.LFE1334:
 1149              		.cantunwind
 1150              		.fnend
 1152              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv,"axG",%progbit
 1153              		.align	1
 1154              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 1155              		.thumb
 1156              		.thumb_func
 1158              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:
 1159              		.fnstart
 1160              	.LFB1336:
 1161              		.loc 12 79 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 0, uses_anonymous_args = 0
 1165              		@ link register save eliminated.
 1166              	.LVL95:
 1167              		.loc 12 79 0
 1168 0000 C06B     		ldr	r0, [r0, #60]
 1169              	.LVL96:
 1170 0002 7047     		bx	lr
 1171              		.cfi_endproc
 1172              	.LFE1336:
 1173              		.cantunwind
 1174              		.fnend
 1176              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv,"axG",%progbits,_ZN
 1177              		.align	1
 1178              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 1179              		.thumb
 1180              		.thumb_func
 1182              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:
 1183              		.fnstart
 1184              	.LFB1337:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1185              		.loc 12 77 0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 0
 1188              		@ frame_needed = 0, uses_anonymous_args = 0
 1189              		@ link register save eliminated.
 1190              	.LVL97:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1191              		.loc 12 77 0
 1192 0000 0048     		ldr	r0, .L89
 1193              	.LVL98:
 1194 0002 7047     		bx	lr
 1195              	.L90:
 1196              		.align	2
 1197              	.L89:
 1198 0004 F5010000 		.word	.LC20
 1199              		.cfi_endproc
 1200              	.LFE1337:
 1201              		.cantunwind
 1202              		.fnend
 1204              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev,"axG",%progbits,_ZN3r
 1205              		.align	1
 1206              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 1207              		.thumb
 1208              		.thumb_func
 1210              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:
 1211              		.fnstart
 1212              	.LFB1338:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1213              		.loc 12 78 0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217              		@ link register save eliminated.
 1218              	.LVL99:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1219              		.loc 12 78 0
 1220 0000 0048     		ldr	r0, .L92
 1221              	.LVL100:
 1222 0002 7047     		bx	lr
 1223              	.L93:
 1224              		.align	2
 1225              	.L92:
 1226 0004 0D020000 		.word	.LC21
 1227              		.cfi_endproc
 1228              	.LFE1338:
 1229              		.cantunwind
 1230              		.fnend
 1232              		.text
 1233              		.align	1
 1234              		.global	_Z6led_cbRKN8std_msgs5UInt8E
 1235              		.thumb
 1236              		.thumb_func
 1238              	_Z6led_cbRKN8std_msgs5UInt8E:
 1239              		.fnstart
 1240              	.LFB1279:
 1241              		.file 13 "src/main.cpp"
   1:src/main.cpp  **** #include <stm32f10x.h>
   2:src/main.cpp  **** 
   3:src/main.cpp  **** #include <stdio.h>
   4:src/main.cpp  **** #include <math.h>
   5:src/main.cpp  **** 
   6:src/main.cpp  **** #include "motor.h"
   7:src/main.cpp  **** #include "motorSettings.h"
   8:src/main.cpp  **** #include "led.h"
   9:src/main.cpp  **** #include "encoder.h"
  10:src/main.cpp  **** #include "stm32_time.h"
  11:src/main.cpp  **** 
  12:src/main.cpp  **** 
  13:src/main.cpp  **** #include <ros.h>
  14:src/main.cpp  **** #include <std_msgs/MultiArrayDimension.h>
  15:src/main.cpp  **** #include <std_msgs/Float32MultiArray.h>
  16:src/main.cpp  **** #include <std_msgs/UInt8.h>
  17:src/main.cpp  **** #include <nav_msgs/Odometry.h>
  18:src/main.cpp  **** #include <sensor_msgs/Joy.h>
  19:src/main.cpp  **** #include <roberto_msgs/MotorState.h>
  20:src/main.cpp  **** #include <tf/tf.h>
  21:src/main.cpp  **** #include <tf/transform_broadcaster.h>
  22:src/main.cpp  **** #include <ros/time.h>
  23:src/main.cpp  **** 
  24:src/main.cpp  **** #define CMDMSGTIMEOUT 500 // ms
  25:src/main.cpp  **** //#define DEBUG
  26:src/main.cpp  **** 
  27:src/main.cpp  **** /* Private function prototypes -----------------------------------------------*/
  28:src/main.cpp  **** #ifdef DEBUG
  29:src/main.cpp  **** extern "C"{
  30:src/main.cpp  ****   extern void initialise_monitor_handles(void);
  31:src/main.cpp  **** }
  32:src/main.cpp  **** #else
  33:src/main.cpp  **** #define printf(...) 
  34:src/main.cpp  **** #endif
  35:src/main.cpp  **** 
  36:src/main.cpp  **** 
  37:src/main.cpp  **** 
  38:src/main.cpp  **** motor *servo_left;
  39:src/main.cpp  **** motor *servo_right;
  40:src/main.cpp  **** motor *front_right;
  41:src/main.cpp  **** motor *front_left;
  42:src/main.cpp  **** motor *rear_right;
  43:src/main.cpp  **** motor *rear_left;
  44:src/main.cpp  **** 
  45:src/main.cpp  **** float d, L;
  46:src/main.cpp  **** 
  47:src/main.cpp  **** float motorCmd[4];
  48:src/main.cpp  **** uint8_t currentMode;
  49:src/main.cpp  **** uint32_t lastMsg;
  50:src/main.cpp  **** bool initialized = false;
  51:src/main.cpp  **** 
  52:src/main.cpp  **** ros::NodeHandle nh;
  53:src/main.cpp  **** 
  54:src/main.cpp  **** __IO bool shuttingDown = false;
  55:src/main.cpp  **** __IO bool waitForServos = false;
  56:src/main.cpp  **** 
  57:src/main.cpp  **** void led_cb( const std_msgs::UInt8& cmd_msg){
 1242              		.loc 13 57 0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 0
 1245              		@ frame_needed = 0, uses_anonymous_args = 0
 1246              		@ link register save eliminated.
 1247              	.LVL101:
  58:src/main.cpp  ****   if(!initialized)
 1248              		.loc 13 58 0
 1249 0000 034B     		ldr	r3, .L96
 1250 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1251 0004 13B1     		cbz	r3, .L94
  59:src/main.cpp  ****     return;
  60:src/main.cpp  ****   led_set(cmd_msg.data);
 1252              		.loc 13 60 0
 1253 0006 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 1254              	.LVL102:
 1255 0008 FFF7FEBF 		b	led_set
 1256              	.LVL103:
 1257              	.L94:
 1258 000c 7047     		bx	lr
 1259              	.L97:
 1260 000e 00BF     		.align	2
 1261              	.L96:
 1262 0010 00000000 		.word	.LANCHOR1
 1263              		.cfi_endproc
 1264              	.LFE1279:
 1265              		.cantunwind
 1266              		.fnend
 1268              		.section	.text._ZNK8std_msgs6Header9serializeEPh,"axG",%progbits,_ZNK8std_msgs6Header9serializeEPh
 1269              		.align	1
 1270              		.weak	_ZNK8std_msgs6Header9serializeEPh
 1271              		.thumb
 1272              		.thumb_func
 1274              	_ZNK8std_msgs6Header9serializeEPh:
 1275              		.fnstart
 1276              	.LFB1172:
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1277              		.loc 9 27 0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 8
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
 1281              	.LVL104:
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1282              		.loc 9 30 0
 1283 0000 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1284              		.loc 9 27 0
 1285 0002 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1286              	.LCFI2:
 1287              		.cfi_def_cfa_offset 24
 1288              		.cfi_offset 4, -16
 1289              		.cfi_offset 5, -12
 1290              		.cfi_offset 6, -8
 1291              		.cfi_offset 14, -4
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1292              		.loc 9 30 0
 1293 0004 0B70     		strb	r3, [r1]
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1294              		.loc 9 31 0
 1295 0006 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1296              		.loc 9 27 0
 1297 0008 0546     		mov	r5, r0
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1298              		.loc 9 31 0
 1299 000a 1B0A     		lsrs	r3, r3, #8
 1300 000c 4B70     		strb	r3, [r1, #1]
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1301              		.loc 9 32 0
 1302 000e C388     		ldrh	r3, [r0, #6]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1303              		.loc 9 27 0
 1304 0010 0C46     		mov	r4, r1
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1305              		.loc 9 32 0
 1306 0012 8B70     		strb	r3, [r1, #2]
  33:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1307              		.loc 9 33 0
 1308 0014 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 1309 0016 CB70     		strb	r3, [r1, #3]
 1310              	.LVL105:
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 1311              		.loc 9 35 0
 1312 0018 8368     		ldr	r3, [r0, #8]
 1313 001a 0B71     		strb	r3, [r1, #4]
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 1314              		.loc 9 36 0
 1315 001c 8368     		ldr	r3, [r0, #8]
 1316 001e 1B0A     		lsrs	r3, r3, #8
 1317 0020 4B71     		strb	r3, [r1, #5]
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 1318              		.loc 9 37 0
 1319 0022 4389     		ldrh	r3, [r0, #10]
 1320 0024 8B71     		strb	r3, [r1, #6]
  38:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1321              		.loc 9 38 0
 1322 0026 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1323 0028 CB71     		strb	r3, [r1, #7]
 1324              	.LVL106:
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 1325              		.loc 9 40 0
 1326 002a C368     		ldr	r3, [r0, #12]
 1327 002c 0B72     		strb	r3, [r1, #8]
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 1328              		.loc 9 41 0
 1329 002e C368     		ldr	r3, [r0, #12]
 1330 0030 1B0A     		lsrs	r3, r3, #8
 1331 0032 4B72     		strb	r3, [r1, #9]
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 1332              		.loc 9 42 0
 1333 0034 C389     		ldrh	r3, [r0, #14]
 1334 0036 8B72     		strb	r3, [r1, #10]
  43:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1335              		.loc 9 43 0
 1336 0038 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 1337 003a CB72     		strb	r3, [r1, #11]
 1338              	.LVL107:
  45:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 1339              		.loc 9 45 0
 1340 003c 0069     		ldr	r0, [r0, #16]
 1341              	.LVL108:
 1342 003e FFF7FEFF 		bl	strlen
 1343              	.LVL109:
 1344 0042 0646     		mov	r6, r0
 1345 0044 02AB     		add	r3, sp, #8
 1346 0046 43F8040D 		str	r0, [r3, #-4]!
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1347              		.loc 9 46 0
 1348 004a 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1349              		.loc 9 48 0
 1350 004c 3246     		mov	r2, r6
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1351              		.loc 9 46 0
 1352 004e E060     		str	r0, [r4, #12]	@ unaligned
 1353              	.LVL110:
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1354              		.loc 9 48 0
 1355 0050 2969     		ldr	r1, [r5, #16]
 1356 0052 04F11000 		add	r0, r4, #16
 1357 0056 FFF7FEFF 		bl	memcpy
 1358              	.LVL111:
  51:./lib/ros_lib/std_msgs/Header.h **** 
 1359              		.loc 9 51 0
 1360 005a 06F11000 		add	r0, r6, #16
 1361              	.LVL112:
 1362 005e 02B0     		add	sp, sp, #8
 1363              	.LCFI3:
 1364              		.cfi_def_cfa_offset 16
 1365              		@ sp needed
 1366 0060 70BD     		pop	{r4, r5, r6, pc}
 1367              		.cfi_endproc
 1368              	.LFE1172:
 1369              		.cantunwind
 1370              		.fnend
 1372              		.section	.text._ZNK8std_msgs19MultiArrayDimension9serializeEPh,"axG",%progbits,_ZNK8std_msgs19Mult
 1373              		.align	1
 1374              		.weak	_ZNK8std_msgs19MultiArrayDimension9serializeEPh
 1375              		.thumb
 1376              		.thumb_func
 1378              	_ZNK8std_msgs19MultiArrayDimension9serializeEPh:
 1379              		.fnstart
 1380              	.LFB1144:
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1381              		.loc 5 26 0
 1382              		.cfi_startproc
 1383              		@ args = 0, pretend = 0, frame = 8
 1384              		@ frame_needed = 0, uses_anonymous_args = 0
 1385              	.LVL113:
 1386 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1387              	.LCFI4:
 1388              		.cfi_def_cfa_offset 24
 1389              		.cfi_offset 4, -16
 1390              		.cfi_offset 5, -12
 1391              		.cfi_offset 6, -8
 1392              		.cfi_offset 14, -4
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1393              		.loc 5 26 0
 1394 0002 0546     		mov	r5, r0
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
 1395              		.loc 5 29 0
 1396 0004 4068     		ldr	r0, [r0, #4]
 1397              	.LVL114:
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1398              		.loc 5 26 0
 1399 0006 0C46     		mov	r4, r1
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
 1400              		.loc 5 29 0
 1401 0008 FFF7FEFF 		bl	strlen
 1402              	.LVL115:
 1403 000c 02AB     		add	r3, sp, #8
 1404 000e 43F8040D 		str	r0, [r3, #-4]!
 1405 0012 0646     		mov	r6, r0
  30:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 1406              		.loc 5 30 0
 1407 0014 1868     		ldr	r0, [r3]	@ unaligned
 1408 0016 2346     		mov	r3, r4
 1409 0018 43F8040B 		str	r0, [r3], #4	@ unaligned
 1410              	.LVL116:
  32:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
 1411              		.loc 5 32 0
 1412 001c 6968     		ldr	r1, [r5, #4]
 1413 001e 3246     		mov	r2, r6
 1414 0020 1846     		mov	r0, r3
 1415 0022 FFF7FEFF 		bl	memcpy
 1416              	.LVL117:
  34:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->size >> (8 * 1)) & 0xFF;
 1417              		.loc 5 34 0
 1418 0026 AB68     		ldr	r3, [r5, #8]
 1419 0028 A119     		adds	r1, r4, r6
 1420 002a 0B71     		strb	r3, [r1, #4]
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
 1421              		.loc 5 35 0
 1422 002c AB68     		ldr	r3, [r5, #8]
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 1423              		.loc 5 45 0
 1424 002e 06F10C00 		add	r0, r6, #12
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
 1425              		.loc 5 35 0
 1426 0032 1B0A     		lsrs	r3, r3, #8
 1427 0034 4B71     		strb	r3, [r1, #5]
  36:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->size >> (8 * 3)) & 0xFF;
 1428              		.loc 5 36 0
 1429 0036 6B89     		ldrh	r3, [r5, #10]
 1430 0038 8B71     		strb	r3, [r1, #6]
  37:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
 1431              		.loc 5 37 0
 1432 003a EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 1433 003c CB71     		strb	r3, [r1, #7]
 1434              	.LVL118:
  39:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->stride >> (8 * 1)) & 0xFF;
 1435              		.loc 5 39 0
 1436 003e EB68     		ldr	r3, [r5, #12]
 1437 0040 0B72     		strb	r3, [r1, #8]
  40:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->stride >> (8 * 2)) & 0xFF;
 1438              		.loc 5 40 0
 1439 0042 EB68     		ldr	r3, [r5, #12]
 1440 0044 1B0A     		lsrs	r3, r3, #8
 1441 0046 4B72     		strb	r3, [r1, #9]
  41:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->stride >> (8 * 3)) & 0xFF;
 1442              		.loc 5 41 0
 1443 0048 EB89     		ldrh	r3, [r5, #14]
 1444 004a 8B72     		strb	r3, [r1, #10]
  42:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
 1445              		.loc 5 42 0
 1446 004c EB7B     		ldrb	r3, [r5, #15]	@ zero_extendqisi2
 1447 004e CB72     		strb	r3, [r1, #11]
 1448              	.LVL119:
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 1449              		.loc 5 45 0
 1450 0050 02B0     		add	sp, sp, #8
 1451              	.LCFI5:
 1452              		.cfi_def_cfa_offset 16
 1453              		@ sp needed
 1454 0052 70BD     		pop	{r4, r5, r6, pc}
 1455              		.cfi_endproc
 1456              	.LFE1144:
 1457              		.cantunwind
 1458              		.fnend
 1460              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 1461              		.align	1
 1462              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1463              		.thumb
 1464              		.thumb_func
 1466              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1467              		.fnstart
 1468              	.LFB1074:
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1469              		.loc 4 74 0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 8
 1472              		@ frame_needed = 0, uses_anonymous_args = 0
 1473              	.LVL120:
 1474 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 1475              	.LCFI6:
 1476              		.cfi_def_cfa_offset 40
 1477              		.cfi_offset 4, -28
 1478              		.cfi_offset 5, -24
 1479              		.cfi_offset 6, -20
 1480              		.cfi_offset 7, -16
 1481              		.cfi_offset 8, -12
 1482              		.cfi_offset 9, -8
 1483              		.cfi_offset 14, -4
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1484              		.loc 4 77 0
 1485 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1486              		.loc 4 74 0
 1487 0006 0746     		mov	r7, r0
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1488              		.loc 4 77 0
 1489 0008 0B70     		strb	r3, [r1]
 1490              	.LVL121:
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1491              		.loc 4 78 0
 1492 000a 0023     		movs	r3, #0
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1493              		.loc 4 80 0
 1494 000c 1A46     		mov	r2, r3
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1495              		.loc 4 74 0
 1496 000e 0C46     		mov	r4, r1
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1497              		.loc 4 78 0
 1498 0010 4B70     		strb	r3, [r1, #1]
 1499              	.LVL122:
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1500              		.loc 4 79 0
 1501 0012 8B70     		strb	r3, [r1, #2]
 1502              	.LVL123:
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1503              		.loc 4 80 0
 1504 0014 CB70     		strb	r3, [r1, #3]
 1505              	.LVL124:
 1506 0016 0431     		adds	r1, r1, #4
 1507              	.LVL125:
 1508              	.L102:
 1509              	.LBB217:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1510              		.loc 4 81 0 discriminator 3
 1511 0018 3D79     		ldrb	r5, [r7, #4]	@ zero_extendqisi2
 1512 001a 501C     		adds	r0, r2, #1
 1513 001c D2B2     		uxtb	r2, r2
 1514 001e 9542     		cmp	r5, r2
 1515 0020 A1EB0403 		sub	r3, r1, r4
 1516              	.LVL126:
 1517 0024 01F10401 		add	r1, r1, #4
 1518 0028 0FD9     		bls	.L101
 1519              	.LBB218:
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1520              		.loc 4 86 0 discriminator 2
 1521 002a FB68     		ldr	r3, [r7, #12]
 1522              	.LVL127:
 1523 002c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1524              	.LVL128:
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1525              		.loc 4 88 0 discriminator 2
 1526 0030 1A0A     		lsrs	r2, r3, #8
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1527              		.loc 4 87 0 discriminator 2
 1528 0032 01F8043C 		strb	r3, [r1, #-4]
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1529              		.loc 4 88 0 discriminator 2
 1530 0036 01F8032C 		strb	r2, [r1, #-3]
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1531              		.loc 4 89 0 discriminator 2
 1532 003a 1A0C     		lsrs	r2, r3, #16
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1533              		.loc 4 90 0 discriminator 2
 1534 003c 1B0E     		lsrs	r3, r3, #24
 1535              	.LVL129:
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1536              		.loc 4 89 0 discriminator 2
 1537 003e 01F8022C 		strb	r2, [r1, #-2]
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1538              		.loc 4 90 0 discriminator 2
 1539 0042 01F8013C 		strb	r3, [r1, #-1]
 1540              	.LVL130:
 1541              	.LBE218:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1542              		.loc 4 81 0 discriminator 2
 1543 0046 0246     		mov	r2, r0
 1544 0048 E6E7     		b	.L102
 1545              	.LVL131:
 1546              	.L101:
 1547              	.LBE217:
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1548              		.loc 4 93 0
 1549 004a 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1550              		.loc 4 94 0
 1551 004c E118     		adds	r1, r4, r3
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1552              		.loc 4 93 0
 1553 004e E254     		strb	r2, [r4, r3]
 1554              	.LVL132:
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1555              		.loc 4 94 0
 1556 0050 0022     		movs	r2, #0
 1557 0052 0433     		adds	r3, r3, #4
 1558              	.LVL133:
 1559 0054 4A70     		strb	r2, [r1, #1]
 1560              	.LVL134:
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1561              		.loc 4 95 0
 1562 0056 8A70     		strb	r2, [r1, #2]
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1563              		.loc 4 96 0
 1564 0058 CA70     		strb	r2, [r1, #3]
 1565              	.LVL135:
 1566 005a 2344     		add	r3, r3, r4
 1567              	.LVL136:
 1568              	.L104:
 1569              	.LBB219:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1570              		.loc 4 97 0 discriminator 3
 1571 005c 387C     		ldrb	r0, [r7, #16]	@ zero_extendqisi2
 1572 005e 511C     		adds	r1, r2, #1
 1573 0060 D2B2     		uxtb	r2, r2
 1574 0062 9042     		cmp	r0, r2
 1575 0064 A3EB0406 		sub	r6, r3, r4
 1576              	.LVL137:
 1577 0068 03F10403 		add	r3, r3, #4
 1578 006c 0FD9     		bls	.L103
 1579              	.LBB220:
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1580              		.loc 4 102 0 discriminator 2
 1581 006e B869     		ldr	r0, [r7, #24]
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1582              		.loc 4 103 0 discriminator 2
 1583 0070 50F82220 		ldr	r2, [r0, r2, lsl #2]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1584              		.loc 4 104 0 discriminator 2
 1585 0074 100A     		lsrs	r0, r2, #8
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1586              		.loc 4 103 0 discriminator 2
 1587 0076 03F8042C 		strb	r2, [r3, #-4]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1588              		.loc 4 104 0 discriminator 2
 1589 007a 03F8030C 		strb	r0, [r3, #-3]
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1590              		.loc 4 105 0 discriminator 2
 1591 007e 100C     		lsrs	r0, r2, #16
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1592              		.loc 4 106 0 discriminator 2
 1593 0080 120E     		lsrs	r2, r2, #24
 1594 0082 03F8012C 		strb	r2, [r3, #-1]
 1595              	.LVL138:
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1596              		.loc 4 105 0 discriminator 2
 1597 0086 03F8020C 		strb	r0, [r3, #-2]
 1598              	.LBE220:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1599              		.loc 4 97 0 discriminator 2
 1600 008a 0A46     		mov	r2, r1
 1601 008c E6E7     		b	.L104
 1602              	.LVL139:
 1603              	.L103:
 1604              	.LBE219:
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1605              		.loc 4 109 0
 1606 008e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1607              		.loc 4 110 0
 1608 0090 A219     		adds	r2, r4, r6
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1609              		.loc 4 109 0
 1610 0092 A355     		strb	r3, [r4, r6]
 1611              	.LVL140:
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1612              		.loc 4 110 0
 1613 0094 0023     		movs	r3, #0
 1614 0096 5370     		strb	r3, [r2, #1]
 1615              	.LVL141:
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1616              		.loc 4 111 0
 1617 0098 9370     		strb	r3, [r2, #2]
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1618              		.loc 4 112 0
 1619 009a 0436     		adds	r6, r6, #4
 1620              	.LVL142:
 1621 009c D370     		strb	r3, [r2, #3]
 1622              	.LVL143:
 1623              	.L106:
 1624              	.LBB221:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1625              		.loc 4 113 0 discriminator 3
 1626 009e 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 1627 00a0 DDB2     		uxtb	r5, r3
 1628 00a2 AA42     		cmp	r2, r5
 1629 00a4 03F10109 		add	r9, r3, #1
 1630 00a8 15D9     		bls	.L105
 1631              	.LBB222:
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1632              		.loc 4 114 0 discriminator 2
 1633 00aa 7B6A     		ldr	r3, [r7, #36]
 1634              	.LVL144:
 1635 00ac 53F82500 		ldr	r0, [r3, r5, lsl #2]
 1636 00b0 FFF7FEFF 		bl	strlen
 1637              	.LVL145:
 1638 00b4 8046     		mov	r8, r0
 1639 00b6 02AB     		add	r3, sp, #8
 1640 00b8 43F8040D 		str	r0, [r3, #-4]!
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1641              		.loc 4 115 0 discriminator 2
 1642 00bc 1868     		ldr	r0, [r3]	@ unaligned
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1643              		.loc 4 117 0 discriminator 2
 1644 00be 4246     		mov	r2, r8
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1645              		.loc 4 115 0 discriminator 2
 1646 00c0 A051     		str	r0, [r4, r6]	@ unaligned
 1647              	.LVL146:
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1648              		.loc 4 117 0 discriminator 2
 1649 00c2 7B6A     		ldr	r3, [r7, #36]
 1650 00c4 0436     		adds	r6, r6, #4
 1651              	.LVL147:
 1652 00c6 53F82510 		ldr	r1, [r3, r5, lsl #2]
 1653 00ca A019     		adds	r0, r4, r6
 1654 00cc FFF7FEFF 		bl	memcpy
 1655              	.LVL148:
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 1656              		.loc 4 118 0 discriminator 2
 1657 00d0 4644     		add	r6, r6, r8
 1658              	.LVL149:
 1659              	.LBE222:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1660              		.loc 4 113 0 discriminator 2
 1661 00d2 4B46     		mov	r3, r9
 1662 00d4 E3E7     		b	.L106
 1663              	.LVL150:
 1664              	.L105:
 1665              	.LBE221:
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 1666              		.loc 4 121 0
 1667 00d6 3046     		mov	r0, r6
 1668 00d8 03B0     		add	sp, sp, #12
 1669              	.LCFI7:
 1670              		.cfi_def_cfa_offset 28
 1671              		@ sp needed
 1672 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1673              		.cfi_endproc
 1674              	.LFE1074:
 1675              		.cantunwind
 1676              		.fnend
 1678              		.section	.text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh,"axG",%progbits,_ZNK14rosser
 1679              		.align	1
 1680              		.weak	_ZNK14rosserial_msgs19RequestParamRequest9serializeEPh
 1681              		.thumb
 1682              		.thumb_func
 1684              	_ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:
 1685              		.fnstart
 1686              	.LFB1067:
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1687              		.loc 4 23 0
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 8
 1690              		@ frame_needed = 0, uses_anonymous_args = 0
 1691              	.LVL151:
 1692 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1693              	.LCFI8:
 1694              		.cfi_def_cfa_offset 24
 1695              		.cfi_offset 4, -16
 1696              		.cfi_offset 5, -12
 1697              		.cfi_offset 6, -8
 1698              		.cfi_offset 14, -4
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1699              		.loc 4 23 0
 1700 0002 0646     		mov	r6, r0
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
 1701              		.loc 4 26 0
 1702 0004 4068     		ldr	r0, [r0, #4]
 1703              	.LVL152:
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1704              		.loc 4 23 0
 1705 0006 0C46     		mov	r4, r1
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
 1706              		.loc 4 26 0
 1707 0008 FFF7FEFF 		bl	strlen
 1708              	.LVL153:
 1709 000c 02AB     		add	r3, sp, #8
 1710 000e 43F8040D 		str	r0, [r3, #-4]!
 1711 0012 0546     		mov	r5, r0
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1712              		.loc 4 27 0
 1713 0014 1868     		ldr	r0, [r3]	@ unaligned
 1714 0016 2346     		mov	r3, r4
 1715 0018 43F8040B 		str	r0, [r3], #4	@ unaligned
 1716              	.LVL154:
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
 1717              		.loc 4 29 0
 1718 001c 2A46     		mov	r2, r5
 1719 001e 7168     		ldr	r1, [r6, #4]
 1720 0020 1846     		mov	r0, r3
 1721 0022 FFF7FEFF 		bl	memcpy
 1722              	.LVL155:
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 1723              		.loc 4 32 0
 1724 0026 281D     		adds	r0, r5, #4
 1725              	.LVL156:
 1726 0028 02B0     		add	sp, sp, #8
 1727              	.LCFI9:
 1728              		.cfi_def_cfa_offset 16
 1729              		@ sp needed
 1730 002a 70BD     		pop	{r4, r5, r6, pc}
 1731              		.cfi_endproc
 1732              	.LFE1067:
 1733              		.cantunwind
 1734              		.fnend
 1736              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 1737              		.align	1
 1738              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1739              		.thumb
 1740              		.thumb_func
 1742              	_ZNK14rosserial_msgs3Log9serializeEPh:
 1743              		.fnstart
 1744              	.LFB1060:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1745              		.loc 3 29 0
 1746              		.cfi_startproc
 1747              		@ args = 0, pretend = 0, frame = 8
 1748              		@ frame_needed = 0, uses_anonymous_args = 0
 1749              	.LVL157:
 1750 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1751              	.LCFI10:
 1752              		.cfi_def_cfa_offset 24
 1753              		.cfi_offset 4, -16
 1754              		.cfi_offset 5, -12
 1755              		.cfi_offset 6, -8
 1756              		.cfi_offset 14, -4
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1757              		.loc 3 32 0
 1758 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1759              		.loc 3 29 0
 1760 0004 0646     		mov	r6, r0
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1761              		.loc 3 32 0
 1762 0006 0B70     		strb	r3, [r1]
 1763              	.LVL158:
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1764              		.loc 3 34 0
 1765 0008 8068     		ldr	r0, [r0, #8]
 1766              	.LVL159:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1767              		.loc 3 29 0
 1768 000a 0D46     		mov	r5, r1
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1769              		.loc 3 34 0
 1770 000c FFF7FEFF 		bl	strlen
 1771              	.LVL160:
 1772 0010 0446     		mov	r4, r0
 1773 0012 02AB     		add	r3, sp, #8
 1774 0014 43F8040D 		str	r0, [r3, #-4]!
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1775              		.loc 3 35 0
 1776 0018 1868     		ldr	r0, [r3]	@ unaligned
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1777              		.loc 3 37 0
 1778 001a 2246     		mov	r2, r4
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1779              		.loc 3 35 0
 1780 001c C5F80100 		str	r0, [r5, #1]	@ unaligned
 1781              	.LVL161:
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1782              		.loc 3 37 0
 1783 0020 B168     		ldr	r1, [r6, #8]
 1784 0022 681D     		adds	r0, r5, #5
 1785 0024 FFF7FEFF 		bl	memcpy
 1786              	.LVL162:
  40:./lib/ros_lib/rosserial_msgs/Log.h **** 
 1787              		.loc 3 40 0
 1788 0028 601D     		adds	r0, r4, #5
 1789              	.LVL163:
 1790 002a 02B0     		add	sp, sp, #8
 1791              	.LCFI11:
 1792              		.cfi_def_cfa_offset 16
 1793              		@ sp needed
 1794 002c 70BD     		pop	{r4, r5, r6, pc}
 1795              		.cfi_endproc
 1796              	.LFE1060:
 1797              		.cantunwind
 1798              		.fnend
 1800              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 1801              		.align	1
 1802              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 1803              		.thumb
 1804              		.thumb_func
 1806              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 1807              		.fnstart
 1808              	.LFB1053:
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1809              		.loc 2 38 0
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 16
 1812              		@ frame_needed = 0, uses_anonymous_args = 0
 1813              	.LVL164:
 1814 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 1815              	.LCFI12:
 1816              		.cfi_def_cfa_offset 40
 1817              		.cfi_offset 4, -24
 1818              		.cfi_offset 5, -20
 1819              		.cfi_offset 6, -16
 1820              		.cfi_offset 7, -12
 1821              		.cfi_offset 8, -8
 1822              		.cfi_offset 14, -4
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1823              		.loc 2 41 0
 1824 0004 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1825              		.loc 2 38 0
 1826 0006 0646     		mov	r6, r0
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1827              		.loc 2 41 0
 1828 0008 0B70     		strb	r3, [r1]
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1829              		.loc 2 42 0
 1830 000a 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1831              		.loc 2 38 0
 1832 000c 0D46     		mov	r5, r1
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1833              		.loc 2 42 0
 1834 000e 1B0A     		lsrs	r3, r3, #8
 1835 0010 4B70     		strb	r3, [r1, #1]
 1836              	.LVL165:
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1837              		.loc 2 44 0
 1838 0012 8068     		ldr	r0, [r0, #8]
 1839              	.LVL166:
 1840 0014 FFF7FEFF 		bl	strlen
 1841              	.LVL167:
 1842 0018 0446     		mov	r4, r0
 1843 001a 04AB     		add	r3, sp, #16
 1844 001c 43F80C0D 		str	r0, [r3, #-12]!
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1845              		.loc 2 45 0
 1846 0020 1868     		ldr	r0, [r3]	@ unaligned
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1847              		.loc 2 47 0
 1848 0022 2246     		mov	r2, r4
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1849              		.loc 2 45 0
 1850 0024 C5F80200 		str	r0, [r5, #2]	@ unaligned
 1851              	.LVL168:
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1852              		.loc 2 47 0
 1853 0028 B168     		ldr	r1, [r6, #8]
 1854 002a A81D     		adds	r0, r5, #6
 1855 002c FFF7FEFF 		bl	memcpy
 1856              	.LVL169:
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 1857              		.loc 2 49 0
 1858 0030 F068     		ldr	r0, [r6, #12]
 1859 0032 FFF7FEFF 		bl	strlen
 1860              	.LVL170:
 1861 0036 0746     		mov	r7, r0
 1862 0038 04AB     		add	r3, sp, #16
 1863 003a 43F8080D 		str	r0, [r3, #-8]!
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1864              		.loc 2 50 0
 1865 003e 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 1866              		.loc 2 48 0
 1867 0040 04F10608 		add	r8, r4, #6
 1868              	.LVL171:
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1869              		.loc 2 50 0
 1870 0044 45F80800 		str	r0, [r5, r8]	@ unaligned
 1871              	.LVL172:
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1872              		.loc 2 52 0
 1873 0048 0A34     		adds	r4, r4, #10
 1874 004a 3A46     		mov	r2, r7
 1875 004c F168     		ldr	r1, [r6, #12]
 1876 004e 2819     		adds	r0, r5, r4
 1877 0050 FFF7FEFF 		bl	memcpy
 1878              	.LVL173:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1879              		.loc 2 54 0
 1880 0054 3069     		ldr	r0, [r6, #16]
 1881 0056 FFF7FEFF 		bl	strlen
 1882              	.LVL174:
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 1883              		.loc 2 53 0
 1884 005a 3C44     		add	r4, r4, r7
 1885              	.LVL175:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1886              		.loc 2 54 0
 1887 005c 0746     		mov	r7, r0
 1888 005e 04AB     		add	r3, sp, #16
 1889 0060 43F8040D 		str	r0, [r3, #-4]!
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1890              		.loc 2 55 0
 1891 0064 1868     		ldr	r0, [r3]	@ unaligned
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1892              		.loc 2 57 0
 1893 0066 3A46     		mov	r2, r7
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1894              		.loc 2 55 0
 1895 0068 2851     		str	r0, [r5, r4]	@ unaligned
 1896              	.LVL176:
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1897              		.loc 2 57 0
 1898 006a 0434     		adds	r4, r4, #4
 1899              	.LVL177:
 1900 006c 2819     		adds	r0, r5, r4
 1901 006e 3169     		ldr	r1, [r6, #16]
 1902 0070 FFF7FEFF 		bl	memcpy
 1903              	.LVL178:
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 1904              		.loc 2 63 0
 1905 0074 7369     		ldr	r3, [r6, #20]
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 1906              		.loc 2 58 0
 1907 0076 3819     		adds	r0, r7, r4
 1908              	.LVL179:
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 1909              		.loc 2 64 0
 1910 0078 2B54     		strb	r3, [r5, r0]
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 1911              		.loc 2 65 0
 1912 007a 1A0A     		lsrs	r2, r3, #8
 1913 007c 0544     		add	r5, r5, r0
 1914              	.LVL180:
 1915 007e 6A70     		strb	r2, [r5, #1]
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1916              		.loc 2 70 0
 1917 0080 0430     		adds	r0, r0, #4
 1918              	.LVL181:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1919              		.loc 2 66 0
 1920 0082 1A0C     		lsrs	r2, r3, #16
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1921              		.loc 2 67 0
 1922 0084 1B0E     		lsrs	r3, r3, #24
 1923              	.LVL182:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1924              		.loc 2 66 0
 1925 0086 AA70     		strb	r2, [r5, #2]
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1926              		.loc 2 67 0
 1927 0088 EB70     		strb	r3, [r5, #3]
 1928              	.LVL183:
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1929              		.loc 2 70 0
 1930 008a 04B0     		add	sp, sp, #16
 1931              	.LCFI13:
 1932              		.cfi_def_cfa_offset 24
 1933              		@ sp needed
 1934 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1935              		.cfi_endproc
 1936              	.LFE1053:
 1937              		.cantunwind
 1938              		.fnend
 1940              		.section	.text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh,"axG",%progbits,_ZN14rosse
 1941              		.align	1
 1942              		.weak	_ZN14rosserial_msgs19RequestParamRequest11deserializeEPh
 1943              		.thumb
 1944              		.thumb_func
 1946              	_ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:
 1947              		.fnstart
 1948              	.LFB1068:
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1949              		.loc 4 34 0
 1950              		.cfi_startproc
 1951              		@ args = 0, pretend = 0, frame = 8
 1952              		@ frame_needed = 0, uses_anonymous_args = 0
 1953              	.LVL184:
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1954              		.loc 4 38 0
 1955 0000 0B46     		mov	r3, r1
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1956              		.loc 4 34 0
 1957 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1958              	.LCFI14:
 1959              		.cfi_def_cfa_offset 24
 1960              		.cfi_offset 4, -12
 1961              		.cfi_offset 5, -8
 1962              		.cfi_offset 14, -4
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1963              		.loc 4 34 0
 1964 0004 0446     		mov	r4, r0
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1965              		.loc 4 38 0
 1966 0006 53F8040B 		ldr	r0, [r3], #4	@ unaligned
 1967              	.LVL185:
 1968 000a 0190     		str	r0, [sp, #4]	@ unaligned
 1969              	.LVL186:
 1970              	.LBB223:
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1971              		.loc 4 40 0
 1972 000c 019A     		ldr	r2, [sp, #4]
 1973 000e 101D     		adds	r0, r2, #4
 1974              	.LVL187:
 1975              	.L112:
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1976              		.loc 4 40 0 is_stmt 0 discriminator 3
 1977 0010 5D1A     		subs	r5, r3, r1
 1978              	.LVL188:
 1979 0012 A842     		cmp	r0, r5
 1980 0014 04D9     		bls	.L111
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 1981              		.loc 4 41 0 is_stmt 1 discriminator 2
 1982 0016 13F8015B 		ldrb	r5, [r3], #1	@ zero_extendqisi2
 1983              	.LVL189:
 1984 001a 03F8025C 		strb	r5, [r3, #-2]
 1985              	.LVL190:
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1986              		.loc 4 40 0 discriminator 2
 1987 001e F7E7     		b	.L112
 1988              	.LVL191:
 1989              	.L111:
 1990              	.LBE223:
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
 1991              		.loc 4 43 0
 1992 0020 0A44     		add	r2, r2, r1
 1993 0022 0023     		movs	r3, #0
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
 1994              		.loc 4 44 0
 1995 0024 0331     		adds	r1, r1, #3
 1996              	.LVL192:
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
 1997              		.loc 4 43 0
 1998 0026 D370     		strb	r3, [r2, #3]
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
 1999              		.loc 4 44 0
 2000 0028 6160     		str	r1, [r4, #4]
 2001              	.LVL193:
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2002              		.loc 4 47 0
 2003 002a 03B0     		add	sp, sp, #12
 2004              	.LCFI15:
 2005              		.cfi_def_cfa_offset 12
 2006              		@ sp needed
 2007 002c 30BD     		pop	{r4, r5, pc}
 2008              		.cfi_endproc
 2009              	.LFE1068:
 2010              		.cantunwind
 2011              		.fnend
 2013              		.section	.text._ZN8std_msgs6Header11deserializeEPh,"axG",%progbits,_ZN8std_msgs6Header11deserializ
 2014              		.align	1
 2015              		.weak	_ZN8std_msgs6Header11deserializeEPh
 2016              		.thumb
 2017              		.thumb_func
 2019              	_ZN8std_msgs6Header11deserializeEPh:
 2020              		.fnstart
 2021              	.LFB1173:
  53:./lib/ros_lib/std_msgs/Header.h ****     {
 2022              		.loc 9 53 0
 2023              		.cfi_startproc
 2024              		@ args = 0, pretend = 0, frame = 8
 2025              		@ frame_needed = 0, uses_anonymous_args = 0
 2026              	.LVL194:
 2027 0000 0346     		mov	r3, r0
 2028 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2029              	.LCFI16:
 2030              		.cfi_def_cfa_offset 24
 2031              		.cfi_offset 4, -12
 2032              		.cfi_offset 5, -8
 2033              		.cfi_offset 14, -4
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2034              		.loc 9 56 0
 2035 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2036 0006 01F11004 		add	r4, r1, #16
 2037 000a 4260     		str	r2, [r0, #4]
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2038              		.loc 9 57 0
 2039 000c 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 2040              	.LVL195:
 2041 000e 42EA0022 		orr	r2, r2, r0, lsl #8
 2042 0012 5A60     		str	r2, [r3, #4]
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2043              		.loc 9 58 0
 2044 0014 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 2045 0016 42EA0042 		orr	r2, r2, r0, lsl #16
 2046 001a 5A60     		str	r2, [r3, #4]
  59:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 2047              		.loc 9 59 0
 2048 001c C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 2049 001e 42EA0062 		orr	r2, r2, r0, lsl #24
 2050 0022 5A60     		str	r2, [r3, #4]
 2051              	.LVL196:
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2052              		.loc 9 61 0
 2053 0024 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 2054 0026 9A60     		str	r2, [r3, #8]
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2055              		.loc 9 62 0
 2056 0028 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 2057 002a 42EA0022 		orr	r2, r2, r0, lsl #8
 2058 002e 9A60     		str	r2, [r3, #8]
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2059              		.loc 9 63 0
 2060 0030 8879     		ldrb	r0, [r1, #6]	@ zero_extendqisi2
 2061 0032 42EA0042 		orr	r2, r2, r0, lsl #16
 2062 0036 9A60     		str	r2, [r3, #8]
  64:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 2063              		.loc 9 64 0
 2064 0038 C879     		ldrb	r0, [r1, #7]	@ zero_extendqisi2
 2065 003a 42EA0062 		orr	r2, r2, r0, lsl #24
 2066 003e 9A60     		str	r2, [r3, #8]
 2067              	.LVL197:
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2068              		.loc 9 66 0
 2069 0040 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 2070 0042 DA60     		str	r2, [r3, #12]
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2071              		.loc 9 67 0
 2072 0044 487A     		ldrb	r0, [r1, #9]	@ zero_extendqisi2
 2073 0046 42EA0022 		orr	r2, r2, r0, lsl #8
 2074 004a DA60     		str	r2, [r3, #12]
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2075              		.loc 9 68 0
 2076 004c 887A     		ldrb	r0, [r1, #10]	@ zero_extendqisi2
 2077 004e 42EA0042 		orr	r2, r2, r0, lsl #16
 2078 0052 DA60     		str	r2, [r3, #12]
  69:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 2079              		.loc 9 69 0
 2080 0054 C87A     		ldrb	r0, [r1, #11]	@ zero_extendqisi2
 2081 0056 42EA0062 		orr	r2, r2, r0, lsl #24
 2082 005a DA60     		str	r2, [r3, #12]
 2083              	.LVL198:
  72:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 2084              		.loc 9 72 0
 2085 005c C868     		ldr	r0, [r1, #12]	@ unaligned
 2086 005e 0190     		str	r0, [sp, #4]	@ unaligned
 2087              	.LVL199:
 2088              	.LBB224:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2089              		.loc 9 74 0
 2090 0060 019A     		ldr	r2, [sp, #4]
 2091 0062 02F11000 		add	r0, r2, #16
 2092              	.LVL200:
 2093              	.L116:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2094              		.loc 9 74 0 is_stmt 0 discriminator 3
 2095 0066 651A     		subs	r5, r4, r1
 2096              	.LVL201:
 2097 0068 A842     		cmp	r0, r5
 2098 006a 04D9     		bls	.L115
  75:./lib/ros_lib/std_msgs/Header.h ****       }
 2099              		.loc 9 75 0 is_stmt 1 discriminator 2
 2100 006c 14F8015B 		ldrb	r5, [r4], #1	@ zero_extendqisi2
 2101              	.LVL202:
 2102 0070 04F8025C 		strb	r5, [r4, #-2]
 2103              	.LVL203:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2104              		.loc 9 74 0 discriminator 2
 2105 0074 F7E7     		b	.L116
 2106              	.LVL204:
 2107              	.L115:
 2108              	.LBE224:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 2109              		.loc 9 77 0
 2110 0076 0A44     		add	r2, r2, r1
 2111 0078 0024     		movs	r4, #0
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 2112              		.loc 9 78 0
 2113 007a 0F31     		adds	r1, r1, #15
 2114              	.LVL205:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 2115              		.loc 9 77 0
 2116 007c D473     		strb	r4, [r2, #15]
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 2117              		.loc 9 78 0
 2118 007e 1961     		str	r1, [r3, #16]
 2119              	.LVL206:
  81:./lib/ros_lib/std_msgs/Header.h **** 
 2120              		.loc 9 81 0
 2121 0080 03B0     		add	sp, sp, #12
 2122              	.LCFI17:
 2123              		.cfi_def_cfa_offset 12
 2124              		@ sp needed
 2125 0082 30BD     		pop	{r4, r5, pc}
 2126              		.cfi_endproc
 2127              	.LFE1173:
 2128              		.cantunwind
 2129              		.fnend
 2131              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 2132              		.align	1
 2133              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 2134              		.thumb
 2135              		.thumb_func
 2137              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 2138              		.fnstart
 2139              	.LFB1054:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2140              		.loc 2 72 0
 2141              		.cfi_startproc
 2142              		@ args = 0, pretend = 0, frame = 16
 2143              		@ frame_needed = 0, uses_anonymous_args = 0
 2144              	.LVL207:
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2145              		.loc 2 75 0
 2146 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2147              		.loc 2 72 0
 2148 0002 30B5     		push	{r4, r5, lr}
 2149              	.LCFI18:
 2150              		.cfi_def_cfa_offset 12
 2151              		.cfi_offset 4, -12
 2152              		.cfi_offset 5, -8
 2153              		.cfi_offset 14, -4
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2154              		.loc 2 75 0
 2155 0004 8380     		strh	r3, [r0, #4]	@ movhi
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2156              		.loc 2 76 0
 2157 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2158              		.loc 2 72 0
 2159 0008 0446     		mov	r4, r0
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2160              		.loc 2 76 0
 2161 000a 43EA0223 		orr	r3, r3, r2, lsl #8
 2162 000e 8380     		strh	r3, [r0, #4]	@ movhi
 2163              	.LVL208:
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2164              		.loc 2 79 0
 2165 0010 D1F80200 		ldr	r0, [r1, #2]	@ unaligned
 2166              	.LVL209:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2167              		.loc 2 72 0
 2168 0014 85B0     		sub	sp, sp, #20
 2169              	.LCFI19:
 2170              		.cfi_def_cfa_offset 32
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2171              		.loc 2 79 0
 2172 0016 0190     		str	r0, [sp, #4]	@ unaligned
 2173              	.LVL210:
 2174              	.LBB225:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2175              		.loc 2 81 0
 2176 0018 019D     		ldr	r5, [sp, #4]
 2177 001a 8A1D     		adds	r2, r1, #6
 2178 001c AB1D     		adds	r3, r5, #6
 2179              	.LVL211:
 2180              	.L120:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2181              		.loc 2 81 0 is_stmt 0 discriminator 3
 2182 001e 501A     		subs	r0, r2, r1
 2183              	.LVL212:
 2184 0020 8342     		cmp	r3, r0
 2185 0022 04D9     		bls	.L119
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2186              		.loc 2 82 0 is_stmt 1 discriminator 2
 2187 0024 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 2188              	.LVL213:
 2189 0028 02F8020C 		strb	r0, [r2, #-2]
 2190              	.LVL214:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2191              		.loc 2 81 0 discriminator 2
 2192 002c F7E7     		b	.L120
 2193              	.LVL215:
 2194              	.L119:
 2195              	.LBE225:
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 2196              		.loc 2 84 0
 2197 002e 4A19     		adds	r2, r1, r5
 2198 0030 0020     		movs	r0, #0
 2199              	.LVL216:
 2200 0032 5071     		strb	r0, [r2, #5]
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 2201              		.loc 2 85 0
 2202 0034 4A1D     		adds	r2, r1, #5
 2203 0036 A260     		str	r2, [r4, #8]
 2204              	.LVL217:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2205              		.loc 2 88 0
 2206 0038 C858     		ldr	r0, [r1, r3]	@ unaligned
 2207              	.LBB226:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2208              		.loc 2 90 0
 2209 003a 1A1D     		adds	r2, r3, #4
 2210              	.LBE226:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2211              		.loc 2 88 0
 2212 003c 0290     		str	r0, [sp, #8]	@ unaligned
 2213              	.LVL218:
 2214              	.LBB227:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2215              		.loc 2 90 0
 2216 003e 029B     		ldr	r3, [sp, #8]
 2217 0040 05F10A00 		add	r0, r5, #10
 2218 0044 1344     		add	r3, r3, r2
 2219 0046 0844     		add	r0, r0, r1
 2220              	.LVL219:
 2221              	.L122:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2222              		.loc 2 90 0 is_stmt 0 discriminator 3
 2223 0048 451A     		subs	r5, r0, r1
 2224              	.LVL220:
 2225 004a AB42     		cmp	r3, r5
 2226 004c 04D9     		bls	.L121
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2227              		.loc 2 91 0 is_stmt 1 discriminator 2
 2228 004e 10F8015B 		ldrb	r5, [r0], #1	@ zero_extendqisi2
 2229              	.LVL221:
 2230 0052 00F8025C 		strb	r5, [r0, #-2]
 2231              	.LVL222:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2232              		.loc 2 90 0 discriminator 2
 2233 0056 F7E7     		b	.L122
 2234              	.LVL223:
 2235              	.L121:
 2236              	.LBE227:
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2237              		.loc 2 94 0
 2238 0058 013A     		subs	r2, r2, #1
 2239              	.LVL224:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 2240              		.loc 2 93 0
 2241 005a C818     		adds	r0, r1, r3
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2242              		.loc 2 94 0
 2243 005c 0A44     		add	r2, r2, r1
 2244              	.LVL225:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 2245              		.loc 2 93 0
 2246 005e 0025     		movs	r5, #0
 2247              	.LVL226:
 2248 0060 00F8015C 		strb	r5, [r0, #-1]
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2249              		.loc 2 94 0
 2250 0064 E260     		str	r2, [r4, #12]
 2251              	.LVL227:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2252              		.loc 2 97 0
 2253 0066 0068     		ldr	r0, [r0]	@ unaligned
 2254              	.LBB228:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2255              		.loc 2 99 0
 2256 0068 0433     		adds	r3, r3, #4
 2257              	.LVL228:
 2258              	.LBE228:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2259              		.loc 2 97 0
 2260 006a 0390     		str	r0, [sp, #12]	@ unaligned
 2261              	.LVL229:
 2262              	.LBB229:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2263              		.loc 2 99 0
 2264 006c 0398     		ldr	r0, [sp, #12]
 2265 006e CA18     		adds	r2, r1, r3
 2266 0070 1844     		add	r0, r0, r3
 2267              	.LVL230:
 2268              	.L124:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2269              		.loc 2 99 0 is_stmt 0 discriminator 3
 2270 0072 551A     		subs	r5, r2, r1
 2271              	.LVL231:
 2272 0074 A842     		cmp	r0, r5
 2273 0076 04D9     		bls	.L123
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2274              		.loc 2 100 0 is_stmt 1 discriminator 2
 2275 0078 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 2276              	.LVL232:
 2277 007c 02F8025C 		strb	r5, [r2, #-2]
 2278              	.LVL233:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2279              		.loc 2 99 0 discriminator 2
 2280 0080 F7E7     		b	.L124
 2281              	.LVL234:
 2282              	.L123:
 2283              	.LBE229:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2284              		.loc 2 103 0
 2285 0082 013B     		subs	r3, r3, #1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 2286              		.loc 2 102 0
 2287 0084 0D18     		adds	r5, r1, r0
 2288              	.LVL235:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2289              		.loc 2 103 0
 2290 0086 0B44     		add	r3, r3, r1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 2291              		.loc 2 102 0
 2292 0088 0022     		movs	r2, #0
 2293              	.LVL236:
 2294 008a 05F8012C 		strb	r2, [r5, #-1]
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2295              		.loc 2 103 0
 2296 008e 2361     		str	r3, [r4, #16]
 2297              	.LVL237:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2298              		.loc 2 114 0
 2299 0090 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 2300 0092 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 2301 0094 1B04     		lsls	r3, r3, #16
 2302 0096 43EA0223 		orr	r3, r3, r2, lsl #8
 2303 009a 0A5C     		ldrb	r2, [r1, r0]	@ zero_extendqisi2
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2304              		.loc 2 117 0
 2305 009c 0430     		adds	r0, r0, #4
 2306              	.LVL238:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2307              		.loc 2 114 0
 2308 009e 1343     		orrs	r3, r3, r2
 2309 00a0 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 2310 00a2 43EA0263 		orr	r3, r3, r2, lsl #24
 2311 00a6 6361     		str	r3, [r4, #20]
 2312              	.LVL239:
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2313              		.loc 2 117 0
 2314 00a8 05B0     		add	sp, sp, #20
 2315              	.LCFI20:
 2316              		.cfi_def_cfa_offset 12
 2317              		@ sp needed
 2318 00aa 30BD     		pop	{r4, r5, pc}
 2319              		.cfi_endproc
 2320              	.LFE1054:
 2321              		.cantunwind
 2322              		.fnend
 2324              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
 2325              		.align	1
 2326              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 2327              		.thumb
 2328              		.thumb_func
 2330              	_ZN14rosserial_msgs3Log11deserializeEPh:
 2331              		.fnstart
 2332              	.LFB1061:
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2333              		.loc 3 42 0
 2334              		.cfi_startproc
 2335              		@ args = 0, pretend = 0, frame = 8
 2336              		@ frame_needed = 0, uses_anonymous_args = 0
 2337              	.LVL240:
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2338              		.loc 3 45 0
 2339 0000 0B46     		mov	r3, r1
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2340              		.loc 3 42 0
 2341 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2342              	.LCFI21:
 2343              		.cfi_def_cfa_offset 24
 2344              		.cfi_offset 4, -12
 2345              		.cfi_offset 5, -8
 2346              		.cfi_offset 14, -4
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2347              		.loc 3 45 0
 2348 0004 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2349              		.loc 3 42 0
 2350 0008 0446     		mov	r4, r0
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2351              		.loc 3 45 0
 2352 000a 0271     		strb	r2, [r0, #4]
 2353              	.LVL241:
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 2354              		.loc 3 48 0
 2355 000c 1868     		ldr	r0, [r3]	@ unaligned
 2356              	.LVL242:
 2357 000e 4A1D     		adds	r2, r1, #5
 2358 0010 0190     		str	r0, [sp, #4]	@ unaligned
 2359              	.LVL243:
 2360              	.LBB230:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2361              		.loc 3 50 0
 2362 0012 019B     		ldr	r3, [sp, #4]
 2363 0014 581D     		adds	r0, r3, #5
 2364              	.LVL244:
 2365              	.L130:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2366              		.loc 3 50 0 is_stmt 0 discriminator 3
 2367 0016 551A     		subs	r5, r2, r1
 2368              	.LVL245:
 2369 0018 A842     		cmp	r0, r5
 2370 001a 04D9     		bls	.L129
  51:./lib/ros_lib/rosserial_msgs/Log.h ****       }
 2371              		.loc 3 51 0 is_stmt 1 discriminator 2
 2372 001c 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 2373              	.LVL246:
 2374 0020 02F8025C 		strb	r5, [r2, #-2]
 2375              	.LVL247:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2376              		.loc 3 50 0 discriminator 2
 2377 0024 F7E7     		b	.L130
 2378              	.LVL248:
 2379              	.L129:
 2380              	.LBE230:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 2381              		.loc 3 53 0
 2382 0026 0B44     		add	r3, r3, r1
 2383 0028 0022     		movs	r2, #0
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2384              		.loc 3 54 0
 2385 002a 0431     		adds	r1, r1, #4
 2386              	.LVL249:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 2387              		.loc 3 53 0
 2388 002c 1A71     		strb	r2, [r3, #4]
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2389              		.loc 3 54 0
 2390 002e A160     		str	r1, [r4, #8]
 2391              	.LVL250:
  57:./lib/ros_lib/rosserial_msgs/Log.h **** 
 2392              		.loc 3 57 0
 2393 0030 03B0     		add	sp, sp, #12
 2394              	.LCFI22:
 2395              		.cfi_def_cfa_offset 12
 2396              		@ sp needed
 2397 0032 30BD     		pop	{r4, r5, pc}
 2398              		.cfi_endproc
 2399              	.LFE1061:
 2400              		.cantunwind
 2401              		.fnend
 2403              		.section	.text._ZN8std_msgs19MultiArrayDimension11deserializeEPh,"axG",%progbits,_ZN8std_msgs19Mul
 2404              		.align	1
 2405              		.weak	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 2406              		.thumb
 2407              		.thumb_func
 2409              	_ZN8std_msgs19MultiArrayDimension11deserializeEPh:
 2410              		.fnstart
 2411              	.LFB1145:
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 2412              		.loc 5 47 0
 2413              		.cfi_startproc
 2414              		@ args = 0, pretend = 0, frame = 8
 2415              		@ frame_needed = 0, uses_anonymous_args = 0
 2416              	.LVL251:
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 2417              		.loc 5 51 0
 2418 0000 0B46     		mov	r3, r1
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 2419              		.loc 5 47 0
 2420 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2421              	.LCFI23:
 2422              		.cfi_def_cfa_offset 24
 2423              		.cfi_offset 4, -12
 2424              		.cfi_offset 5, -8
 2425              		.cfi_offset 14, -4
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 2426              		.loc 5 47 0
 2427 0004 0246     		mov	r2, r0
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 2428              		.loc 5 51 0
 2429 0006 53F8040B 		ldr	r0, [r3], #4	@ unaligned
 2430              	.LVL252:
 2431 000a 0190     		str	r0, [sp, #4]	@ unaligned
 2432              	.LVL253:
 2433              	.LBB231:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 2434              		.loc 5 53 0
 2435 000c 0198     		ldr	r0, [sp, #4]
 2436 000e 051D     		adds	r5, r0, #4
 2437              	.LVL254:
 2438              	.L134:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 2439              		.loc 5 53 0 is_stmt 0 discriminator 3
 2440 0010 5C1A     		subs	r4, r3, r1
 2441              	.LVL255:
 2442 0012 A542     		cmp	r5, r4
 2443 0014 04D9     		bls	.L133
  54:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       }
 2444              		.loc 5 54 0 is_stmt 1 discriminator 2
 2445 0016 13F8014B 		ldrb	r4, [r3], #1	@ zero_extendqisi2
 2446              	.LVL256:
 2447 001a 03F8024C 		strb	r4, [r3, #-2]
 2448              	.LVL257:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 2449              		.loc 5 53 0 discriminator 2
 2450 001e F7E7     		b	.L134
 2451              	.LVL258:
 2452              	.L133:
 2453              	.LBE231:
  56:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->label = (char *)(inbuffer + offset-1);
 2454              		.loc 5 56 0
 2455 0020 0C18     		adds	r4, r1, r0
 2456              	.LVL259:
 2457 0022 0023     		movs	r3, #0
 2458              	.LVL260:
 2459 0024 E370     		strb	r3, [r4, #3]
  57:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
 2460              		.loc 5 57 0
 2461 0026 CB1C     		adds	r3, r1, #3
 2462 0028 5360     		str	r3, [r2, #4]
 2463              	.LVL261:
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2464              		.loc 5 59 0
 2465 002a 4B5D     		ldrb	r3, [r1, r5]	@ zero_extendqisi2
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 2466              		.loc 5 70 0
 2467 002c 0C30     		adds	r0, r0, #12
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2468              		.loc 5 59 0
 2469 002e 9360     		str	r3, [r2, #8]
  60:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2470              		.loc 5 60 0
 2471 0030 6179     		ldrb	r1, [r4, #5]	@ zero_extendqisi2
 2472              	.LVL262:
 2473 0032 43EA0123 		orr	r3, r3, r1, lsl #8
 2474 0036 9360     		str	r3, [r2, #8]
  61:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2475              		.loc 5 61 0
 2476 0038 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 2477 003a 43EA0143 		orr	r3, r3, r1, lsl #16
 2478 003e 9360     		str	r3, [r2, #8]
  62:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
 2479              		.loc 5 62 0
 2480 0040 E179     		ldrb	r1, [r4, #7]	@ zero_extendqisi2
 2481 0042 43EA0163 		orr	r3, r3, r1, lsl #24
 2482 0046 9360     		str	r3, [r2, #8]
 2483              	.LVL263:
  64:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2484              		.loc 5 64 0
 2485 0048 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 2486 004a D360     		str	r3, [r2, #12]
  65:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2487              		.loc 5 65 0
 2488 004c 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 2489 004e 43EA0123 		orr	r3, r3, r1, lsl #8
 2490 0052 D360     		str	r3, [r2, #12]
  66:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2491              		.loc 5 66 0
 2492 0054 A17A     		ldrb	r1, [r4, #10]	@ zero_extendqisi2
 2493 0056 43EA0143 		orr	r3, r3, r1, lsl #16
 2494 005a D360     		str	r3, [r2, #12]
  67:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
 2495              		.loc 5 67 0
 2496 005c E17A     		ldrb	r1, [r4, #11]	@ zero_extendqisi2
 2497 005e 43EA0163 		orr	r3, r3, r1, lsl #24
 2498 0062 D360     		str	r3, [r2, #12]
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 2499              		.loc 5 70 0
 2500 0064 03B0     		add	sp, sp, #12
 2501              	.LCFI24:
 2502              		.cfi_def_cfa_offset 12
 2503              		@ sp needed
 2504 0066 30BD     		pop	{r4, r5, pc}
 2505              		.cfi_endproc
 2506              	.LFE1145:
 2507              		.cantunwind
 2508              		.fnend
 2510              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 2511              		.align	1
 2512              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 2513              		.thumb
 2514              		.thumb_func
 2516              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 2517              		.fnstart
 2518              	.LFB1075:
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2519              		.loc 4 123 0
 2520              		.cfi_startproc
 2521              		@ args = 0, pretend = 0, frame = 8
 2522              		@ frame_needed = 0, uses_anonymous_args = 0
 2523              	.LVL264:
 2524 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2525              	.LCFI25:
 2526              		.cfi_def_cfa_offset 32
 2527              		.cfi_offset 4, -20
 2528              		.cfi_offset 5, -16
 2529              		.cfi_offset 6, -12
 2530              		.cfi_offset 7, -8
 2531              		.cfi_offset 14, -4
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 2532              		.loc 4 126 0
 2533 0002 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 2534              	.LVL265:
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2535              		.loc 4 127 0
 2536 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2537              		.loc 4 123 0
 2538 0006 0446     		mov	r4, r0
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2539              		.loc 4 127 0
 2540 0008 AB42     		cmp	r3, r5
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2541              		.loc 4 123 0
 2542 000a 0E46     		mov	r6, r1
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2543              		.loc 4 127 0
 2544 000c 04D2     		bcs	.L137
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2545              		.loc 4 128 0
 2546 000e A900     		lsls	r1, r5, #2
 2547              	.LVL266:
 2548 0010 C068     		ldr	r0, [r0, #12]
 2549              	.LVL267:
 2550 0012 FFF7FEFF 		bl	realloc
 2551              	.LVL268:
 2552 0016 E060     		str	r0, [r4, #12]
 2553              	.L137:
 2554              	.LVL269:
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 2555              		.loc 4 130 0
 2556 0018 2571     		strb	r5, [r4, #4]
 2557              	.LVL270:
 2558 001a 321D     		adds	r2, r6, #4
 2559 001c 0021     		movs	r1, #0
 2560              	.LVL271:
 2561              	.L139:
 2562              	.LBB232:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2563              		.loc 4 131 0 discriminator 3
 2564 001e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2565 0020 4F1C     		adds	r7, r1, #1
 2566 0022 C9B2     		uxtb	r1, r1
 2567 0024 8B42     		cmp	r3, r1
 2568 0026 A2EB0605 		sub	r5, r2, r6
 2569              	.LVL272:
 2570 002a 02F10402 		add	r2, r2, #4
 2571 002e 14D9     		bls	.L138
 2572              	.LVL273:
 2573              	.LBB233:
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 2574              		.loc 4 141 0 discriminator 2
 2575 0030 12F8023C 		ldrb	r3, [r2, #-2]	@ zero_extendqisi2
 2576              	.LVL274:
 2577 0034 12F8030C 		ldrb	r0, [r2, #-3]	@ zero_extendqisi2
 2578              	.LVL275:
 2579 0038 1B04     		lsls	r3, r3, #16
 2580              	.LVL276:
 2581 003a 43EA0023 		orr	r3, r3, r0, lsl #8
 2582 003e 12F8040C 		ldrb	r0, [r2, #-4]	@ zero_extendqisi2
 2583              	.LVL277:
 2584 0042 0343     		orrs	r3, r3, r0
 2585 0044 12F8010C 		ldrb	r0, [r2, #-1]	@ zero_extendqisi2
 2586 0048 43EA0063 		orr	r3, r3, r0, lsl #24
 2587 004c A360     		str	r3, [r4, #8]
 2588              	.LVL278:
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2589              		.loc 4 143 0 discriminator 2
 2590 004e A068     		ldr	r0, [r4, #8]	@ unaligned
 2591 0050 E368     		ldr	r3, [r4, #12]
 2592 0052 43F82100 		str	r0, [r3, r1, lsl #2]	@ unaligned
 2593              	.LVL279:
 2594              	.LBE233:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2595              		.loc 4 131 0 discriminator 2
 2596 0056 3946     		mov	r1, r7
 2597 0058 E1E7     		b	.L139
 2598              	.LVL280:
 2599              	.L138:
 2600              	.LBE232:
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 2601              		.loc 4 145 0
 2602 005a 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2603              	.LVL281:
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 2604              		.loc 4 146 0
 2605 005c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 2606 005e BB42     		cmp	r3, r7
 2607 0060 04D2     		bcs	.L140
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2608              		.loc 4 147 0
 2609 0062 B900     		lsls	r1, r7, #2
 2610 0064 A069     		ldr	r0, [r4, #24]
 2611 0066 FFF7FEFF 		bl	realloc
 2612              	.LVL282:
 2613 006a A061     		str	r0, [r4, #24]
 2614              	.L140:
 2615              	.LVL283:
 2616 006c 2B1D     		adds	r3, r5, #4
 2617              	.LVL284:
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 2618              		.loc 4 149 0
 2619 006e 2774     		strb	r7, [r4, #16]
 2620              	.LVL285:
 2621 0070 3344     		add	r3, r3, r6
 2622              	.LVL286:
 2623 0072 0022     		movs	r2, #0
 2624              	.LVL287:
 2625              	.L142:
 2626              	.LBB234:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2627              		.loc 4 150 0 discriminator 3
 2628 0074 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 2629 0076 571C     		adds	r7, r2, #1
 2630 0078 D2B2     		uxtb	r2, r2
 2631 007a 9142     		cmp	r1, r2
 2632 007c A3EB0605 		sub	r5, r3, r6
 2633              	.LVL288:
 2634 0080 03F10403 		add	r3, r3, #4
 2635 0084 14D9     		bls	.L141
 2636              	.LVL289:
 2637              	.LBB235:
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 2638              		.loc 4 159 0 discriminator 2
 2639 0086 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 2640 008a 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2641 008e 0904     		lsls	r1, r1, #16
 2642              	.LVL290:
 2643 0090 41EA0021 		orr	r1, r1, r0, lsl #8
 2644              	.LVL291:
 2645 0094 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2646 0098 0143     		orrs	r1, r1, r0
 2647 009a 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2648              	.LVL292:
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 2649              		.loc 4 160 0 discriminator 2
 2650 009e 41EA0061 		orr	r1, r1, r0, lsl #24
 2651 00a2 6161     		str	r1, [r4, #20]	@ float
 2652              	.LVL293:
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2653              		.loc 4 162 0 discriminator 2
 2654 00a4 6069     		ldr	r0, [r4, #20]	@ unaligned
 2655 00a6 A169     		ldr	r1, [r4, #24]
 2656 00a8 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 2657              	.LVL294:
 2658              	.LBE235:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2659              		.loc 4 150 0 discriminator 2
 2660 00ac 3A46     		mov	r2, r7
 2661 00ae E1E7     		b	.L142
 2662              	.LVL295:
 2663              	.L141:
 2664              	.LBE234:
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 2665              		.loc 4 164 0
 2666 00b0 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2667              	.LVL296:
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 2668              		.loc 4 165 0
 2669 00b2 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 2670 00b4 BB42     		cmp	r3, r7
 2671 00b6 04D2     		bcs	.L143
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2672              		.loc 4 166 0
 2673 00b8 B900     		lsls	r1, r7, #2
 2674 00ba 606A     		ldr	r0, [r4, #36]
 2675 00bc FFF7FEFF 		bl	realloc
 2676              	.LVL297:
 2677 00c0 6062     		str	r0, [r4, #36]
 2678              	.L143:
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 2679              		.loc 4 167 0
 2680 00c2 2B1D     		adds	r3, r5, #4
 2681              	.LVL298:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2682              		.loc 4 168 0
 2683 00c4 0025     		movs	r5, #0
 2684              	.LBB236:
 2685              	.LBB237:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2686              		.loc 4 176 0
 2687 00c6 AE46     		mov	lr, r5
 2688              	.LBE237:
 2689              	.LBE236:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2690              		.loc 4 168 0
 2691 00c8 2777     		strb	r7, [r4, #28]
 2692              	.LVL299:
 2693              	.L147:
 2694              	.LBB241:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2695              		.loc 4 169 0 discriminator 1
 2696 00ca 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 2697 00cc EFB2     		uxtb	r7, r5
 2698 00ce BA42     		cmp	r2, r7
 2699 00d0 19D9     		bls	.L144
 2700              	.LBB240:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2701              		.loc 4 171 0
 2702 00d2 F058     		ldr	r0, [r6, r3]	@ unaligned
 2703              	.LBB238:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2704              		.loc 4 173 0
 2705 00d4 1A1D     		adds	r2, r3, #4
 2706              	.LBE238:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2707              		.loc 4 171 0
 2708 00d6 0190     		str	r0, [sp, #4]	@ unaligned
 2709              	.LVL300:
 2710              	.LBB239:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2711              		.loc 4 173 0
 2712 00d8 019B     		ldr	r3, [sp, #4]
 2713 00da B118     		adds	r1, r6, r2
 2714 00dc 1344     		add	r3, r3, r2
 2715              	.LVL301:
 2716              	.L146:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2717              		.loc 4 173 0 is_stmt 0 discriminator 3
 2718 00de 881B     		subs	r0, r1, r6
 2719              	.LVL302:
 2720 00e0 8342     		cmp	r3, r0
 2721 00e2 04D9     		bls	.L145
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2722              		.loc 4 174 0 is_stmt 1 discriminator 2
 2723 00e4 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 2724              	.LVL303:
 2725 00e8 01F8020C 		strb	r0, [r1, #-2]
 2726              	.LVL304:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2727              		.loc 4 173 0 discriminator 2
 2728 00ec F7E7     		b	.L146
 2729              	.LVL305:
 2730              	.L145:
 2731              	.LBE239:
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2732              		.loc 4 177 0 discriminator 2
 2733 00ee 013A     		subs	r2, r2, #1
 2734              	.LVL306:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2735              		.loc 4 176 0 discriminator 2
 2736 00f0 F118     		adds	r1, r6, r3
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2737              		.loc 4 177 0 discriminator 2
 2738 00f2 3244     		add	r2, r2, r6
 2739              	.LVL307:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2740              		.loc 4 176 0 discriminator 2
 2741 00f4 01F801EC 		strb	lr, [r1, #-1]
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2742              		.loc 4 177 0 discriminator 2
 2743 00f8 2262     		str	r2, [r4, #32]
 2744              	.LVL308:
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2745              		.loc 4 179 0 discriminator 2
 2746 00fa 216A     		ldr	r1, [r4, #32]	@ unaligned
 2747 00fc 626A     		ldr	r2, [r4, #36]
 2748 00fe 0135     		adds	r5, r5, #1
 2749              	.LVL309:
 2750 0100 42F82710 		str	r1, [r2, r7, lsl #2]	@ unaligned
 2751              	.LVL310:
 2752              	.LBE240:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2753              		.loc 4 169 0 discriminator 2
 2754 0104 E1E7     		b	.L147
 2755              	.LVL311:
 2756              	.L144:
 2757              	.LBE241:
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2758              		.loc 4 182 0
 2759 0106 1846     		mov	r0, r3
 2760 0108 03B0     		add	sp, sp, #12
 2761              	.LCFI26:
 2762              		.cfi_def_cfa_offset 20
 2763              		@ sp needed
 2764 010a F0BD     		pop	{r4, r5, r6, r7, pc}
 2765              		.cfi_endproc
 2766              	.LFE1075:
 2767              		.cantunwind
 2768              		.fnend
 2770              		.section	.text._ZN8std_msgs16MultiArrayLayout11deserializeEPh,"axG",%progbits,_ZN8std_msgs16MultiA
 2771              		.align	1
 2772              		.weak	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 2773              		.thumb
 2774              		.thumb_func
 2776              	_ZN8std_msgs16MultiArrayLayout11deserializeEPh:
 2777              		.fnstart
 2778              	.LFB1152:
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2779              		.loc 6 45 0
 2780              		.cfi_startproc
 2781              		@ args = 0, pretend = 0, frame = 0
 2782              		@ frame_needed = 0, uses_anonymous_args = 0
 2783              	.LVL312:
 2784 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2785              	.LCFI27:
 2786              		.cfi_def_cfa_offset 32
 2787              		.cfi_offset 4, -32
 2788              		.cfi_offset 5, -28
 2789              		.cfi_offset 6, -24
 2790              		.cfi_offset 7, -20
 2791              		.cfi_offset 8, -16
 2792              		.cfi_offset 9, -12
 2793              		.cfi_offset 10, -8
 2794              		.cfi_offset 14, -4
  48:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       if(dim_lengthT > dim_length)
 2795              		.loc 6 48 0
 2796 0004 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 2797              	.LVL313:
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2798              		.loc 6 49 0
 2799 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2800              		.loc 6 45 0
 2801 0008 0446     		mov	r4, r0
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2802              		.loc 6 49 0
 2803 000a AB42     		cmp	r3, r5
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2804              		.loc 6 45 0
 2805 000c 0F46     		mov	r7, r1
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2806              		.loc 6 49 0
 2807 000e 04D2     		bcs	.L150
  50:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += 3;
 2808              		.loc 6 50 0
 2809 0010 2901     		lsls	r1, r5, #4
 2810              	.LVL314:
 2811 0012 8069     		ldr	r0, [r0, #24]
 2812              	.LVL315:
 2813 0014 FFF7FEFF 		bl	realloc
 2814              	.LVL316:
 2815 0018 A061     		str	r0, [r4, #24]
 2816              	.L150:
 2817              	.LVL317:
  52:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 2818              		.loc 6 52 0
 2819 001a 2571     		strb	r5, [r4, #4]
 2820              	.LVL318:
 2821 001c 0023     		movs	r3, #0
  51:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length = dim_lengthT;
 2822              		.loc 6 51 0
 2823 001e 0426     		movs	r6, #4
 2824              	.LBB242:
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2825              		.loc 6 54 0
 2826 0020 04F10808 		add	r8, r4, #8
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2827              		.loc 6 55 0
 2828 0024 04F1180A 		add	r10, r4, #24
 2829              	.LVL319:
 2830              	.L153:
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
 2831              		.loc 6 53 0 discriminator 3
 2832 0028 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 2833 002a DDB2     		uxtb	r5, r3
 2834 002c AA42     		cmp	r2, r5
 2835 002e 03F10109 		add	r9, r3, #1
 2836 0032 07EB0601 		add	r1, r7, r6
 2837 0036 0FD9     		bls	.L151
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2838              		.loc 6 54 0 discriminator 2
 2839 0038 4046     		mov	r0, r8
 2840 003a FFF7FEFF 		bl	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 2841              	.LVL320:
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2842              		.loc 6 55 0 discriminator 2
 2843 003e 4246     		mov	r2, r8
 2844 0040 A369     		ldr	r3, [r4, #24]
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2845              		.loc 6 54 0 discriminator 2
 2846 0042 0644     		add	r6, r6, r0
 2847              	.LVL321:
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2848              		.loc 6 55 0 discriminator 2
 2849 0044 03EB0513 		add	r3, r3, r5, lsl #4
 2850              	.L152:
 2851 0048 52F8041B 		ldr	r1, [r2], #4	@ unaligned
 2852 004c 5245     		cmp	r2, r10
 2853 004e 43F8041B 		str	r1, [r3], #4	@ unaligned
 2854 0052 F9D1     		bne	.L152
 2855              	.LVL322:
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
 2856              		.loc 6 53 0 discriminator 2
 2857 0054 4B46     		mov	r3, r9
 2858 0056 E7E7     		b	.L153
 2859              	.LVL323:
 2860              	.L151:
 2861              	.LBE242:
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2862              		.loc 6 57 0
 2863 0058 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 2864              	.LVL324:
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
 2865              		.loc 6 63 0
 2866 005a 301D     		adds	r0, r6, #4
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2867              		.loc 6 57 0
 2868 005c E361     		str	r3, [r4, #28]
  58:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2869              		.loc 6 58 0
 2870 005e 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 2871 0060 43EA0223 		orr	r3, r3, r2, lsl #8
 2872 0064 E361     		str	r3, [r4, #28]
  59:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2873              		.loc 6 59 0
 2874 0066 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 2875 0068 43EA0243 		orr	r3, r3, r2, lsl #16
 2876 006c E361     		str	r3, [r4, #28]
  60:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
 2877              		.loc 6 60 0
 2878 006e CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 2879 0070 43EA0263 		orr	r3, r3, r2, lsl #24
 2880 0074 E361     		str	r3, [r4, #28]
 2881              	.LVL325:
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
 2882              		.loc 6 63 0
 2883 0076 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2884              		.cfi_endproc
 2885              	.LFE1152:
 2886              		.cantunwind
 2887              		.fnend
 2889              		.section	.text._ZN8std_msgs17Float32MultiArray11deserializeEPh,"axG",%progbits,_ZN8std_msgs17Float
 2890              		.align	1
 2891              		.weak	_ZN8std_msgs17Float32MultiArray11deserializeEPh
 2892              		.thumb
 2893              		.thumb_func
 2895              	_ZN8std_msgs17Float32MultiArray11deserializeEPh:
 2896              		.fnstart
 2897              	.LFB1159:
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2898              		.loc 7 50 0
 2899              		.cfi_startproc
 2900              		@ args = 0, pretend = 0, frame = 0
 2901              		@ frame_needed = 0, uses_anonymous_args = 0
 2902              	.LVL326:
 2903 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2904              	.LCFI28:
 2905              		.cfi_def_cfa_offset 24
 2906              		.cfi_offset 3, -24
 2907              		.cfi_offset 4, -20
 2908              		.cfi_offset 5, -16
 2909              		.cfi_offset 6, -12
 2910              		.cfi_offset 7, -8
 2911              		.cfi_offset 14, -4
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2912              		.loc 7 50 0
 2913 0002 0446     		mov	r4, r0
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2914              		.loc 7 53 0
 2915 0004 0430     		adds	r0, r0, #4
 2916              	.LVL327:
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2917              		.loc 7 50 0
 2918 0006 0D46     		mov	r5, r1
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2919              		.loc 7 53 0
 2920 0008 FFF7FEFF 		bl	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 2921              	.LVL328:
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
 2922              		.loc 7 55 0
 2923 000c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
  54:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       if(data_lengthT > data_length)
 2924              		.loc 7 54 0
 2925 0010 2F5C     		ldrb	r7, [r5, r0]	@ zero_extendqisi2
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2926              		.loc 7 53 0
 2927 0012 0646     		mov	r6, r0
 2928              	.LVL329:
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
 2929              		.loc 7 55 0
 2930 0014 BB42     		cmp	r3, r7
 2931 0016 04D2     		bcs	.L156
  56:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += 3;
 2932              		.loc 7 56 0
 2933 0018 B900     		lsls	r1, r7, #2
 2934 001a E06A     		ldr	r0, [r4, #44]
 2935              	.LVL330:
 2936 001c FFF7FEFF 		bl	realloc
 2937              	.LVL331:
 2938 0020 E062     		str	r0, [r4, #44]
 2939              	.L156:
 2940              	.LVL332:
 2941 0022 331D     		adds	r3, r6, #4
 2942              	.LVL333:
  58:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
 2943              		.loc 7 58 0
 2944 0024 84F82470 		strb	r7, [r4, #36]
 2945              	.LVL334:
 2946 0028 2B44     		add	r3, r3, r5
 2947              	.LVL335:
 2948 002a 0022     		movs	r2, #0
 2949              	.LVL336:
 2950              	.L158:
 2951              	.LBB243:
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 2952              		.loc 7 59 0 discriminator 3
 2953 002c 94F82410 		ldrb	r1, [r4, #36]	@ zero_extendqisi2
 2954 0030 561C     		adds	r6, r2, #1
 2955 0032 D2B2     		uxtb	r2, r2
 2956 0034 9142     		cmp	r1, r2
 2957 0036 A3EB0500 		sub	r0, r3, r5
 2958              	.LVL337:
 2959 003a 03F10403 		add	r3, r3, #4
 2960 003e 14D9     		bls	.L157
 2961              	.LVL338:
 2962              	.LBB244:
  68:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       this->st_data = u_st_data.real;
 2963              		.loc 7 68 0 discriminator 2
 2964 0040 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 2965 0044 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2966              	.LVL339:
 2967 0048 0904     		lsls	r1, r1, #16
 2968              	.LVL340:
 2969 004a 41EA0021 		orr	r1, r1, r0, lsl #8
 2970              	.LVL341:
 2971 004e 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2972 0052 0143     		orrs	r1, r1, r0
 2973 0054 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2974              	.LVL342:
  69:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->st_data);
 2975              		.loc 7 69 0 discriminator 2
 2976 0058 41EA0061 		orr	r1, r1, r0, lsl #24
 2977 005c A162     		str	r1, [r4, #40]	@ float
 2978              	.LVL343:
  71:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
 2979              		.loc 7 71 0 discriminator 2
 2980 005e A06A     		ldr	r0, [r4, #40]	@ unaligned
 2981 0060 E16A     		ldr	r1, [r4, #44]
 2982 0062 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 2983              	.LVL344:
 2984              	.LBE244:
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 2985              		.loc 7 59 0 discriminator 2
 2986 0066 3246     		mov	r2, r6
 2987 0068 E0E7     		b	.L158
 2988              	.LVL345:
 2989              	.L157:
 2990              	.LBE243:
  74:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
 2991              		.loc 7 74 0
 2992 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2993              		.cfi_endproc
 2994              	.LFE1159:
 2995              		.cantunwind
 2996              		.fnend
 2998              		.global	__aeabi_fcmpeq
 2999              		.global	__aeabi_f2d
 3000              		.global	__aeabi_dmul
 3001              		.global	__aeabi_ddiv
 3002              		.global	__aeabi_d2f
 3003              		.global	__aeabi_fadd
 3004              		.global	__aeabi_fmul
 3005              		.global	__aeabi_fsub
 3006              		.global	__aeabi_fdiv
 3007              		.global	__aeabi_dadd
 3008              		.global	__aeabi_fcmpgt
 3009              		.global	__aeabi_fcmplt
 3010              		.text
 3011              		.align	1
 3012              		.global	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 3013              		.thumb
 3014              		.thumb_func
 3016              	_Z8motor_cbRKN12roberto_msgs10MotorStateE:
 3017              		.fnstart
 3018              	.LFB1280:
  61:src/main.cpp  **** }
  62:src/main.cpp  **** 
  63:src/main.cpp  **** 
  64:src/main.cpp  **** 
  65:src/main.cpp  **** void motor_cb( const roberto_msgs::MotorState& cmd_msg){
 3019              		.loc 13 65 0
 3020              		.cfi_startproc
 3021              		@ args = 0, pretend = 0, frame = 16
 3022              		@ frame_needed = 0, uses_anonymous_args = 0
 3023              	.LVL346:
 3024 0014 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3025              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3026              	.LCFI29:
 3027              		.cfi_def_cfa_offset 36
 3028              		.cfi_offset 4, -36
 3029              		.cfi_offset 5, -32
 3030              		.cfi_offset 6, -28
 3031              		.cfi_offset 7, -24
 3032              		.cfi_offset 8, -20
 3033              		.cfi_offset 9, -16
 3034              		.cfi_offset 10, -12
 3035              		.cfi_offset 11, -8
 3036              		.cfi_offset 14, -4
  66:src/main.cpp  ****   if(!initialized)
 3037              		.loc 13 66 0
 3038 0018 8B4C     		ldr	r4, .L184+16
  65:src/main.cpp  ****   if(!initialized)
 3039              		.loc 13 65 0
 3040              		.pad #20
 3041 001a 85B0     		sub	sp, sp, #20
 3042              	.LCFI30:
 3043              		.cfi_def_cfa_offset 56
 3044              		.loc 13 66 0
 3045 001c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  65:src/main.cpp  ****   if(!initialized)
 3046              		.loc 13 65 0
 3047 001e 0746     		mov	r7, r0
 3048              		.loc 13 66 0
 3049 0020 002B     		cmp	r3, #0
 3050 0022 00F00581 		beq	.L159
 3051              	.LVL347:
 3052              	.LBB255:
 3053              	.LBB256:
  67:src/main.cpp  ****     return;
  68:src/main.cpp  ****   lastMsg = millis();
 3054              		.loc 13 68 0
 3055 0026 FFF7FEFF 		bl	millis
 3056              	.LVL348:
  69:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
  70:src/main.cpp  ****   if(intMode == cmd_msg.DRIVE_MODE_AUTO){
  71:src/main.cpp  **** 
  72:src/main.cpp  ****   }
  73:src/main.cpp  **** 
  74:src/main.cpp  ****   if(currentMode != intMode){
 3057              		.loc 13 74 0
 3058 002a 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
  69:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
 3059              		.loc 13 69 0
 3060 002c 97F82860 		ldrb	r6, [r7, #40]	@ zero_extendqisi2
 3061              	.LVL349:
  68:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
 3062              		.loc 13 68 0
 3063 0030 6060     		str	r0, [r4, #4]
 3064              		.loc 13 74 0
 3065 0032 B342     		cmp	r3, r6
  75:src/main.cpp  ****     waitForServos = true;
 3066              		.loc 13 75 0
 3067 0034 1CBF     		itt	ne
 3068 0036 0123     		movne	r3, #1
 3069 0038 6372     		strbne	r3, [r4, #9]
 3070              	.LBB257:
  76:src/main.cpp  ****   }
  77:src/main.cpp  **** 
  78:src/main.cpp  ****   if(intMode == cmd_msg.DRIVE_MODE_PIVOT){
 3071              		.loc 13 78 0
 3072 003a 012E     		cmp	r6, #1
 3073 003c 40F0D080 		bne	.L162
 3074              	.LVL350:
 3075              	.LBB258:
 3076              	.LBB259:
  79:src/main.cpp  ****     float speedMult[2] = {1,1};
  80:src/main.cpp  ****     float angle[2] = {0, 0};
  81:src/main.cpp  ****     if (cmd_msg.heading_angle != 0){
 3077              		.loc 13 81 0
 3078 0040 D7F818A0 		ldr	r10, [r7, #24]	@ float
 3079 0044 0021     		movs	r1, #0
 3080 0046 5046     		mov	r0, r10
 3081 0048 FFF7FEFF 		bl	__aeabi_fcmpeq
 3082              	.LVL351:
 3083 004c 0028     		cmp	r0, #0
 3084 004e 7FD1     		bne	.L181
 3085              	.LBB260:
  82:src/main.cpp  ****       float R = 0.05/sin(cmd_msg.heading_angle*M_PI/360);
 3086              		.loc 13 82 0
 3087 0050 5046     		mov	r0, r10
 3088 0052 FFF7FEFF 		bl	__aeabi_f2d
 3089              	.LVL352:
 3090 0056 78A3     		adr	r3, .L184
 3091 0058 D3E90023 		ldrd	r2, [r3]
 3092 005c CDE90001 		strd	r0, [sp]
 3093 0060 FFF7FEFF 		bl	__aeabi_dmul
 3094              	.LVL353:
 3095 0064 0022     		movs	r2, #0
 3096 0066 794B     		ldr	r3, .L184+20
 3097 0068 FFF7FEFF 		bl	__aeabi_ddiv
 3098              	.LVL354:
 3099 006c FFF7FEFF 		bl	sin
 3100              	.LVL355:
 3101 0070 0246     		mov	r2, r0
 3102 0072 0B46     		mov	r3, r1
 3103 0074 72A1     		adr	r1, .L184+8
 3104 0076 D1E90001 		ldrd	r0, [r1]
 3105 007a FFF7FEFF 		bl	__aeabi_ddiv
 3106              	.LVL356:
 3107 007e FFF7FEFF 		bl	__aeabi_d2f
 3108              	.LVL357:
  83:src/main.cpp  ****       speedMult[0] = (2*R)/(2*R - (L/2 + d));
 3109              		.loc 13 83 0
 3110 0082 0146     		mov	r1, r0
  82:src/main.cpp  ****       float R = 0.05/sin(cmd_msg.heading_angle*M_PI/360);
 3111              		.loc 13 82 0
 3112 0084 8346     		mov	fp, r0
 3113              	.LVL358:
 3114              		.loc 13 83 0
 3115 0086 FFF7FEFF 		bl	__aeabi_fadd
 3116              	.LVL359:
 3117 008a D4F80C80 		ldr	r8, [r4, #12]	@ float
 3118 008e 0546     		mov	r5, r0
 3119 0090 4FF07C51 		mov	r1, #1056964608
 3120 0094 4046     		mov	r0, r8
 3121 0096 FFF7FEFF 		bl	__aeabi_fmul
 3122              	.LVL360:
 3123 009a 2169     		ldr	r1, [r4, #16]	@ float
 3124 009c FFF7FEFF 		bl	__aeabi_fadd
 3125              	.LVL361:
 3126 00a0 0146     		mov	r1, r0
 3127 00a2 0390     		str	r0, [sp, #12]
 3128 00a4 2846     		mov	r0, r5
 3129 00a6 FFF7FEFF 		bl	__aeabi_fsub
 3130              	.LVL362:
 3131 00aa 0146     		mov	r1, r0
 3132 00ac 2846     		mov	r0, r5
 3133 00ae FFF7FEFF 		bl	__aeabi_fdiv
 3134              	.LVL363:
  84:src/main.cpp  ****       speedMult[1] = (2*R)/(2*R + (L/2 + d));
 3135              		.loc 13 84 0
 3136 00b2 039B     		ldr	r3, [sp, #12]
  83:src/main.cpp  ****       speedMult[0] = (2*R)/(2*R - (L/2 + d));
 3137              		.loc 13 83 0
 3138 00b4 8146     		mov	r9, r0
 3139              	.LVL364:
 3140              		.loc 13 84 0
 3141 00b6 1946     		mov	r1, r3
 3142 00b8 2846     		mov	r0, r5
 3143              	.LVL365:
 3144 00ba FFF7FEFF 		bl	__aeabi_fadd
 3145              	.LVL366:
 3146 00be 0146     		mov	r1, r0
 3147 00c0 2846     		mov	r0, r5
 3148 00c2 FFF7FEFF 		bl	__aeabi_fdiv
 3149              	.LVL367:
  85:src/main.cpp  ****       //angle[0] = atan(L/(B+R));   // B=L as robot is quadratic
  86:src/main.cpp  ****       angle[0] = cmd_msg.heading_angle + atan(L/(L+R));
 3150              		.loc 13 86 0
 3151 00c6 4146     		mov	r1, r8
  84:src/main.cpp  ****       speedMult[1] = (2*R)/(2*R + (L/2 + d));
 3152              		.loc 13 84 0
 3153 00c8 0390     		str	r0, [sp, #12]	@ float
 3154              	.LVL368:
 3155              		.loc 13 86 0
 3156 00ca 5846     		mov	r0, fp
 3157              	.LVL369:
 3158 00cc FFF7FEFF 		bl	__aeabi_fadd
 3159              	.LVL370:
 3160 00d0 0146     		mov	r1, r0
 3161 00d2 4046     		mov	r0, r8
 3162 00d4 FFF7FEFF 		bl	__aeabi_fdiv
 3163              	.LVL371:
 3164 00d8 FFF7FEFF 		bl	__aeabi_f2d
 3165              	.LVL372:
 3166 00dc FFF7FEFF 		bl	atan
 3167              	.LVL373:
 3168 00e0 0246     		mov	r2, r0
 3169 00e2 0B46     		mov	r3, r1
 3170 00e4 DDE90001 		ldrd	r0, [sp]
 3171 00e8 FFF7FEFF 		bl	__aeabi_dadd
 3172              	.LVL374:
 3173 00ec FFF7FEFF 		bl	__aeabi_d2f
 3174              	.LVL375:
  87:src/main.cpp  ****       angle[1] = cmd_msg.heading_angle + atan(L/(L-R));
 3175              		.loc 13 87 0
 3176 00f0 5946     		mov	r1, fp
  86:src/main.cpp  ****       angle[1] = cmd_msg.heading_angle + atan(L/(L-R));
 3177              		.loc 13 86 0
 3178 00f2 0546     		mov	r5, r0
 3179              	.LVL376:
 3180              		.loc 13 87 0
 3181 00f4 4046     		mov	r0, r8
 3182              	.LVL377:
 3183 00f6 FFF7FEFF 		bl	__aeabi_fsub
 3184              	.LVL378:
 3185 00fa 0146     		mov	r1, r0
 3186 00fc 4046     		mov	r0, r8
 3187 00fe FFF7FEFF 		bl	__aeabi_fdiv
 3188              	.LVL379:
 3189 0102 FFF7FEFF 		bl	__aeabi_f2d
 3190              	.LVL380:
 3191 0106 FFF7FEFF 		bl	atan
 3192              	.LVL381:
 3193 010a 0246     		mov	r2, r0
 3194 010c 0B46     		mov	r3, r1
 3195 010e DDE90001 		ldrd	r0, [sp]
 3196 0112 FFF7FEFF 		bl	__aeabi_dadd
 3197              	.LVL382:
 3198 0116 FFF7FEFF 		bl	__aeabi_d2f
 3199              	.LVL383:
 3200              	.LBE260:
 3201              	.LBE259:
  88:src/main.cpp  ****     }else{
  89:src/main.cpp  ****       angle[0] = 0;
  90:src/main.cpp  ****       angle[1] = 0;
  91:src/main.cpp  ****     }
  92:src/main.cpp  **** 
  93:src/main.cpp  ****     angle[0] = angle[0] > MAX_ANGLE_PIVOT? MAX_ANGLE_PIVOT : ( angle[0] < -MAX_ANGLE_PIVOT? -MAX_AN
 3202              		.loc 13 93 0
 3203 011a 4D49     		ldr	r1, .L184+24
 3204              	.LBB262:
 3205              	.LBB261:
  87:src/main.cpp  ****     }else{
 3206              		.loc 13 87 0
 3207 011c 8046     		mov	r8, r0
 3208              	.LVL384:
 3209              	.LBE261:
 3210              	.LBE262:
 3211              		.loc 13 93 0
 3212 011e 2846     		mov	r0, r5
 3213              	.LVL385:
 3214 0120 FFF7FEFF 		bl	__aeabi_fcmpgt
 3215              	.LVL386:
 3216 0124 30B9     		cbnz	r0, .L172
 3217 0126 4B49     		ldr	r1, .L184+28
 3218 0128 2846     		mov	r0, r5
 3219 012a FFF7FEFF 		bl	__aeabi_fcmplt
 3220              	.LVL387:
 3221 012e 10B1     		cbz	r0, .L165
 3222 0130 484D     		ldr	r5, .L184+28
 3223              	.LVL388:
 3224 0132 00E0     		b	.L165
 3225              	.LVL389:
 3226              	.L172:
 3227 0134 464D     		ldr	r5, .L184+24
 3228              	.LVL390:
 3229              	.L165:
  94:src/main.cpp  ****     angle[1] = angle[1] > MAX_ANGLE_PIVOT? MAX_ANGLE_PIVOT : ( angle[1] < -MAX_ANGLE_PIVOT? -MAX_AN
 3230              		.loc 13 94 0
 3231 0136 4649     		ldr	r1, .L184+24
 3232 0138 4046     		mov	r0, r8
 3233 013a FFF7FEFF 		bl	__aeabi_fcmpgt
 3234              	.LVL391:
 3235 013e 70B9     		cbnz	r0, .L174
 3236 0140 4449     		ldr	r1, .L184+28
 3237 0142 4046     		mov	r0, r8
 3238 0144 FFF7FEFF 		bl	__aeabi_fcmplt
 3239              	.LVL392:
 3240 0148 58B1     		cbz	r0, .L163
 3241 014a DFF80881 		ldr	r8, .L184+28
 3242              	.LVL393:
 3243 014e 08E0     		b	.L163
 3244              	.LVL394:
 3245              	.L181:
  79:src/main.cpp  ****     float angle[2] = {0, 0};
 3246              		.loc 13 79 0
 3247 0150 4FF07E59 		mov	r9, #1065353216
 3248              	.LBB263:
  89:src/main.cpp  ****       angle[1] = 0;
 3249              		.loc 13 89 0
 3250 0154 0025     		movs	r5, #0
 3251              	.LBE263:
  79:src/main.cpp  ****     float angle[2] = {0, 0};
 3252              		.loc 13 79 0
 3253 0156 CDF80C90 		str	r9, [sp, #12]	@ float
 3254              	.LBB264:
  90:src/main.cpp  ****     }
 3255              		.loc 13 90 0
 3256 015a A846     		mov	r8, r5
 3257 015c 01E0     		b	.L163
 3258              	.LVL395:
 3259              	.L174:
 3260              	.LBE264:
 3261              		.loc 13 94 0
 3262 015e DFF8F080 		ldr	r8, .L184+24
 3263              	.LVL396:
 3264              	.L163:
  95:src/main.cpp  **** 
  96:src/main.cpp  ****     if(cmd_msg.heading_angle > 0){
 3265              		.loc 13 96 0
 3266 0162 0021     		movs	r1, #0
 3267 0164 5046     		mov	r0, r10
 3268 0166 FFF7FEFF 		bl	__aeabi_fcmpgt
 3269              	.LVL397:
  97:src/main.cpp  ****       servo_left->setReference(angle[0]+135);
 3270              		.loc 13 97 0
 3271 016a D4F814A0 		ldr	r10, [r4, #20]
 3272 016e 3A49     		ldr	r1, .L184+32
  96:src/main.cpp  ****       servo_left->setReference(angle[0]+135);
 3273              		.loc 13 96 0
 3274 0170 90B1     		cbz	r0, .L182
 3275              		.loc 13 97 0
 3276 0172 2846     		mov	r0, r5
 3277 0174 FFF7FEFF 		bl	__aeabi_fadd
 3278              	.LVL398:
 3279 0178 DAF80030 		ldr	r3, [r10]
 3280 017c 0146     		mov	r1, r0
 3281 017e 5B69     		ldr	r3, [r3, #20]
 3282 0180 5046     		mov	r0, r10
 3283 0182 9847     		blx	r3
 3284              	.LVL399:
  98:src/main.cpp  ****       servo_right->setReference(-angle[1]+135);
 3285              		.loc 13 98 0
 3286 0184 4146     		mov	r1, r8
 3287 0186 3448     		ldr	r0, .L184+32
 3288 0188 FFF7FEFF 		bl	__aeabi_fsub
 3289              	.LVL400:
 3290 018c A569     		ldr	r5, [r4, #24]
 3291 018e 0146     		mov	r1, r0
 3292 0190 2B68     		ldr	r3, [r5]
 3293 0192 2846     		mov	r0, r5
 3294 0194 5B69     		ldr	r3, [r3, #20]
 3295 0196 13E0     		b	.L183
 3296              	.L182:
  99:src/main.cpp  ****     }else{
 100:src/main.cpp  ****       servo_left->setReference(angle[1]+135);
 3297              		.loc 13 100 0
 3298 0198 4046     		mov	r0, r8
 3299 019a FFF7FEFF 		bl	__aeabi_fadd
 3300              	.LVL401:
 3301 019e DAF80030 		ldr	r3, [r10]
 3302 01a2 0146     		mov	r1, r0
 3303 01a4 5B69     		ldr	r3, [r3, #20]
 3304 01a6 5046     		mov	r0, r10
 3305 01a8 9847     		blx	r3
 3306              	.LVL402:
 101:src/main.cpp  ****       servo_right->setReference(-angle[0]+135);
 3307              		.loc 13 101 0
 3308 01aa 2946     		mov	r1, r5
 3309 01ac 2A48     		ldr	r0, .L184+32
 3310 01ae FFF7FEFF 		bl	__aeabi_fsub
 3311              	.LVL403:
 3312 01b2 D4F81880 		ldr	r8, [r4, #24]
 3313              	.LVL404:
 3314 01b6 0146     		mov	r1, r0
 3315 01b8 4046     		mov	r0, r8
 3316 01ba D8F80030 		ldr	r3, [r8]
 3317 01be 5B69     		ldr	r3, [r3, #20]
 3318              	.L183:
 3319 01c0 9847     		blx	r3
 3320              	.LVL405:
 102:src/main.cpp  ****     }
 103:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed*speedMult[0];
 3321              		.loc 13 103 0
 3322 01c2 3F6A     		ldr	r7, [r7, #32]	@ float
 3323              	.LVL406:
 3324 01c4 4946     		mov	r1, r9
 3325 01c6 3846     		mov	r0, r7
 3326 01c8 FFF7FEFF 		bl	__aeabi_fmul
 3327              	.LVL407:
 104:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult[1];
 3328              		.loc 13 104 0
 3329 01cc 0399     		ldr	r1, [sp, #12]	@ float
 103:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult[1];
 3330              		.loc 13 103 0
 3331 01ce 0546     		mov	r5, r0
 3332 01d0 E061     		str	r0, [r4, #28]	@ float
 3333              		.loc 13 104 0
 3334 01d2 3846     		mov	r0, r7
 3335 01d4 FFF7FEFF 		bl	__aeabi_fmul
 3336              	.LVL408:
 105:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed*speedMult[1];
 106:src/main.cpp  ****     motorCmd[3] = cmd_msg.speed*speedMult[0];
 3337              		.loc 13 106 0
 3338 01d8 A562     		str	r5, [r4, #40]	@ float
 104:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed*speedMult[1];
 3339              		.loc 13 104 0
 3340 01da 2062     		str	r0, [r4, #32]	@ float
 105:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed*speedMult[1];
 3341              		.loc 13 105 0
 3342 01dc 6062     		str	r0, [r4, #36]	@ float
 3343 01de 26E0     		b	.L169
 3344              	.LVL409:
 3345              	.L162:
 3346              	.LBE258:
 3347              	.LBB265:
 107:src/main.cpp  ****     /*angle[0] = cmd_msg.heading_angle;
 108:src/main.cpp  ****     angle[1] = cmd_msg.heading_angle;
 109:src/main.cpp  ****     servo_left->setReference(135+angle[0]);
 110:src/main.cpp  ****     servo_right->setReference(135-angle[1]);*/
 111:src/main.cpp  **** 
 112:src/main.cpp  ****   }else if(intMode == cmd_msg.DRIVE_MODE_SPIN){
 3348              		.loc 13 112 0
 3349 01e0 022E     		cmp	r6, #2
 3350 01e2 11D1     		bne	.L170
 3351              	.LVL410:
 3352              	.LBB266:
 113:src/main.cpp  ****     float h = 90;
 114:src/main.cpp  ****     servo_left->setReference(h);
 3353              		.loc 13 114 0
 3354 01e4 6069     		ldr	r0, [r4, #20]
 3355 01e6 1D49     		ldr	r1, .L184+36
 3356 01e8 0368     		ldr	r3, [r0]
 3357 01ea 5B69     		ldr	r3, [r3, #20]
 3358 01ec 9847     		blx	r3
 3359              	.LVL411:
 115:src/main.cpp  ****     servo_right->setReference(h);
 3360              		.loc 13 115 0
 3361 01ee A069     		ldr	r0, [r4, #24]
 3362 01f0 1A49     		ldr	r1, .L184+36
 3363 01f2 0368     		ldr	r3, [r0]
 3364 01f4 5B69     		ldr	r3, [r3, #20]
 3365 01f6 9847     		blx	r3
 3366              	.LVL412:
 116:src/main.cpp  **** 
 117:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed;
 3367              		.loc 13 117 0
 3368 01f8 3B6A     		ldr	r3, [r7, #32]	@ float
 118:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed;
 3369              		.loc 13 118 0
 3370 01fa 03F10042 		add	r2, r3, #-2147483648
 117:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed;
 3371              		.loc 13 117 0
 3372 01fe E361     		str	r3, [r4, #28]	@ float
 3373              		.loc 13 118 0
 3374 0200 2262     		str	r2, [r4, #32]	@ float
 119:src/main.cpp  ****     motorCmd[2] = -cmd_msg.speed;
 3375              		.loc 13 119 0
 3376 0202 6262     		str	r2, [r4, #36]	@ float
 120:src/main.cpp  ****     motorCmd[3] = cmd_msg.speed;
 3377              		.loc 13 120 0
 3378 0204 A362     		str	r3, [r4, #40]	@ float
 3379 0206 12E0     		b	.L169
 3380              	.LVL413:
 3381              	.L170:
 3382              	.LBE266:
 3383              	.LBB267:
 121:src/main.cpp  **** 
 122:src/main.cpp  ****   }else if(intMode == cmd_msg.DRIVE_MODE_SIDEWAYS){
 3384              		.loc 13 122 0
 3385 0208 032E     		cmp	r6, #3
 3386 020a 10D1     		bne	.L169
 3387              	.LVL414:
 3388              	.LBB268:
 123:src/main.cpp  ****     float h = 45;
 124:src/main.cpp  ****     servo_left->setReference(h);
 3389              		.loc 13 124 0
 3390 020c 6069     		ldr	r0, [r4, #20]
 3391 020e 1449     		ldr	r1, .L184+40
 3392 0210 0368     		ldr	r3, [r0]
 3393 0212 5B69     		ldr	r3, [r3, #20]
 3394 0214 9847     		blx	r3
 3395              	.LVL415:
 125:src/main.cpp  ****     servo_right->setReference(h);
 3396              		.loc 13 125 0
 3397 0216 A069     		ldr	r0, [r4, #24]
 3398 0218 1149     		ldr	r1, .L184+40
 3399 021a 0368     		ldr	r3, [r0]
 3400 021c 5B69     		ldr	r3, [r3, #20]
 3401 021e 9847     		blx	r3
 3402              	.LVL416:
 126:src/main.cpp  **** 
 127:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed;  //FR
 3403              		.loc 13 127 0
 3404 0220 3B6A     		ldr	r3, [r7, #32]	@ float
 128:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed; //FL
 3405              		.loc 13 128 0
 3406 0222 03F10042 		add	r2, r3, #-2147483648
 127:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed; //FL
 3407              		.loc 13 127 0
 3408 0226 E361     		str	r3, [r4, #28]	@ float
 3409              		.loc 13 128 0
 3410 0228 2262     		str	r2, [r4, #32]	@ float
 129:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed; //RL
 3411              		.loc 13 129 0
 3412 022a 6362     		str	r3, [r4, #36]	@ float
 130:src/main.cpp  ****     motorCmd[3] = -cmd_msg.speed;  //RR
 3413              		.loc 13 130 0
 3414 022c A262     		str	r2, [r4, #40]	@ float
 3415              	.LVL417:
 3416              	.L169:
 3417              	.LBE268:
 3418              	.LBE267:
 3419              	.LBE265:
 3420              	.LBE257:
 131:src/main.cpp  ****   }
 132:src/main.cpp  ****   currentMode = intMode;
 3421              		.loc 13 132 0
 3422 022e 2672     		strb	r6, [r4, #8]
 3423              	.LVL418:
 3424              	.L159:
 3425              	.LBE256:
 3426              	.LBE255:
 133:src/main.cpp  **** }
 3427              		.loc 13 133 0
 3428 0230 05B0     		add	sp, sp, #20
 3429              	.LCFI31:
 3430              		.cfi_def_cfa_offset 36
 3431              		@ sp needed
 3432 0232 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3433              	.L185:
 3434 0236 00BF     		.align	3
 3435              	.L184:
 3436 0238 182D4454 		.word	1413754136
 3437 023c FB210940 		.word	1074340347
 3438 0240 9A999999 		.word	-1717986918
 3439 0244 9999A93F 		.word	1068079513
 3440 0248 00000000 		.word	.LANCHOR1
 3441 024c 00807640 		.word	1081507840
 3442 0250 00007041 		.word	1097859072
 3443 0254 000070C1 		.word	-1049624576
 3444 0258 00000743 		.word	1124532224
 3445 025c 0000B442 		.word	1119092736
 3446 0260 00003442 		.word	1110704128
 3447              		.cfi_endproc
 3448              	.LFE1280:
 3449              		.fnend
 3451              		.section	.text._ZN3ros3Msg19serializeAvrFloat64EPhf,"axG",%progbits,_ZN3ros3Msg19serializeAvrFloat
 3452              		.align	1
 3453              		.weak	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3454              		.thumb
 3455              		.thumb_func
 3457              	_ZN3ros3Msg19serializeAvrFloat64EPhf:
 3458              		.fnstart
 3459              	.LFB1021:
 3460              		.file 14 "./lib/ros_lib/ros/msg.h"
   1:./lib/ros_lib/ros/msg.h **** /* 
   2:./lib/ros_lib/ros/msg.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/msg.h ****  *
   4:./lib/ros_lib/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/msg.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/msg.h ****  *
   7:./lib/ros_lib/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/msg.h ****  * are met:
  10:./lib/ros_lib/ros/msg.h ****  *
  11:./lib/ros_lib/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/msg.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/msg.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/msg.h ****  *
  21:./lib/ros_lib/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/msg.h ****  */
  34:./lib/ros_lib/ros/msg.h **** 
  35:./lib/ros_lib/ros/msg.h **** #ifndef _ROS_MSG_H_
  36:./lib/ros_lib/ros/msg.h **** #define _ROS_MSG_H_
  37:./lib/ros_lib/ros/msg.h **** 
  38:./lib/ros_lib/ros/msg.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/msg.h **** 
  40:./lib/ros_lib/ros/msg.h **** namespace ros {
  41:./lib/ros_lib/ros/msg.h **** 
  42:./lib/ros_lib/ros/msg.h **** /* Base Message Type */
  43:./lib/ros_lib/ros/msg.h **** class Msg
  44:./lib/ros_lib/ros/msg.h **** {
  45:./lib/ros_lib/ros/msg.h **** public:
  46:./lib/ros_lib/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  47:./lib/ros_lib/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  48:./lib/ros_lib/ros/msg.h ****   virtual const char * getType() = 0;
  49:./lib/ros_lib/ros/msg.h ****   virtual const char * getMD5() = 0;
  50:./lib/ros_lib/ros/msg.h **** 
  51:./lib/ros_lib/ros/msg.h ****   /**
  52:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  53:./lib/ros_lib/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  54:./lib/ros_lib/ros/msg.h ****    *        fields, despite AVV having no native support for double.
  55:./lib/ros_lib/ros/msg.h ****    *
  56:./lib/ros_lib/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  57:./lib/ros_lib/ros/msg.h ****    * @param[in] f value to serialize.
  58:./lib/ros_lib/ros/msg.h ****    *
  59:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  60:./lib/ros_lib/ros/msg.h ****    *
  61:./lib/ros_lib/ros/msg.h ****    */
  62:./lib/ros_lib/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
 3461              		.loc 14 62 0
 3462              		.cfi_startproc
 3463              		@ args = 0, pretend = 0, frame = 0
 3464              		@ frame_needed = 0, uses_anonymous_args = 0
 3465              	.LVL419:
 3466 0000 38B5     		push	{r3, r4, r5, lr}
 3467              	.LCFI32:
 3468              		.cfi_def_cfa_offset 16
 3469              		.cfi_offset 3, -16
 3470              		.cfi_offset 4, -12
 3471              		.cfi_offset 5, -8
 3472              		.cfi_offset 14, -4
  63:./lib/ros_lib/ros/msg.h ****   {
  64:./lib/ros_lib/ros/msg.h ****     const int32_t* val = (int32_t*) &f;
  65:./lib/ros_lib/ros/msg.h ****     int32_t exp = ((*val >> 23) & 255);
 3473              		.loc 14 65 0
 3474 0002 C1F3C753 		ubfx	r3, r1, #23, #8
 3475              	.LVL420:
  62:./lib/ros_lib/ros/msg.h ****   {
 3476              		.loc 14 62 0
 3477 0006 0546     		mov	r5, r0
 3478              		.loc 14 65 0
 3479 0008 0A46     		mov	r2, r1
  62:./lib/ros_lib/ros/msg.h ****   {
 3480              		.loc 14 62 0
 3481 000a 0846     		mov	r0, r1
 3482              	.LVL421:
  66:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 3483              		.loc 14 66 0
 3484 000c 0BB1     		cbz	r3, .L187
  67:./lib/ros_lib/ros/msg.h ****     {
  68:./lib/ros_lib/ros/msg.h ****       exp += 1023 - 127;
 3485              		.loc 14 68 0
 3486 000e 03F56073 		add	r3, r3, #896
 3487              	.LVL422:
 3488              	.L187:
  69:./lib/ros_lib/ros/msg.h ****     }
  70:./lib/ros_lib/ros/msg.h **** 
  71:./lib/ros_lib/ros/msg.h ****     int32_t sig = *val;
  72:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3489              		.loc 14 72 0
 3490 0012 0021     		movs	r1, #0
 3491              	.LVL423:
 3492 0014 2970     		strb	r1, [r5]
 3493              	.LVL424:
  73:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3494              		.loc 14 73 0
 3495 0016 6970     		strb	r1, [r5, #1]
 3496              	.LVL425:
  74:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3497              		.loc 14 74 0
 3498 0018 A970     		strb	r1, [r5, #2]
 3499              	.LVL426:
  75:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 3500              		.loc 14 75 0
 3501 001a 5101     		lsls	r1, r2, #5
 3502 001c E970     		strb	r1, [r5, #3]
 3503              	.LVL427:
  76:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 3504              		.loc 14 76 0
 3505 001e D110     		asrs	r1, r2, #3
 3506 0020 2971     		strb	r1, [r5, #4]
 3507              	.LVL428:
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 3508              		.loc 14 77 0
 3509 0022 D112     		asrs	r1, r2, #11
  78:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 3510              		.loc 14 78 0
 3511 0024 C2F3C342 		ubfx	r2, r2, #19, #4
 3512 0028 42EA0312 		orr	r2, r2, r3, lsl #4
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 3513              		.loc 14 77 0
 3514 002c 6971     		strb	r1, [r5, #5]
 3515              	.LVL429:
 3516              		.loc 14 78 0
 3517 002e AA71     		strb	r2, [r5, #6]
 3518              	.LVL430:
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
  80:./lib/ros_lib/ros/msg.h **** 
  81:./lib/ros_lib/ros/msg.h ****     // Mark negative bit as necessary.
  82:./lib/ros_lib/ros/msg.h ****     if (f < 0)
 3519              		.loc 14 82 0
 3520 0030 0021     		movs	r1, #0
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 3521              		.loc 14 79 0
 3522 0032 C3F30714 		ubfx	r4, r3, #4, #8
 3523              		.loc 14 82 0
 3524 0036 FFF7FEFF 		bl	__aeabi_fcmplt
 3525              	.LVL431:
 3526 003a 08B9     		cbnz	r0, .L188
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 3527              		.loc 14 79 0
 3528 003c EC71     		strb	r4, [r5, #7]
 3529 003e 02E0     		b	.L189
 3530              	.L188:
  83:./lib/ros_lib/ros/msg.h ****     {
  84:./lib/ros_lib/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
 3531              		.loc 14 84 0
 3532 0040 64F07F03 		orn	r3, r4, #127
 3533 0044 EB71     		strb	r3, [r5, #7]
 3534              	.L189:
  85:./lib/ros_lib/ros/msg.h ****     }
  86:./lib/ros_lib/ros/msg.h **** 
  87:./lib/ros_lib/ros/msg.h ****     return 8;
  88:./lib/ros_lib/ros/msg.h ****   }
 3535              		.loc 14 88 0
 3536 0046 0820     		movs	r0, #8
 3537 0048 38BD     		pop	{r3, r4, r5, pc}
 3538              		.cfi_endproc
 3539              	.LFE1021:
 3540              		.cantunwind
 3541              		.fnend
 3543              		.section	.text._ZNK12roberto_msgs10MotorState9serializeEPh,"axG",%progbits,_ZNK12roberto_msgs10Mot
 3544              		.align	1
 3545              		.weak	_ZNK12roberto_msgs10MotorState9serializeEPh
 3546              		.thumb
 3547              		.thumb_func
 3549              	_ZNK12roberto_msgs10MotorState9serializeEPh:
 3550              		.fnstart
 3551              	.LFB1242:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3552              		.loc 10 37 0
 3553              		.cfi_startproc
 3554              		@ args = 0, pretend = 0, frame = 0
 3555              		@ frame_needed = 0, uses_anonymous_args = 0
 3556              	.LVL432:
 3557 0000 70B5     		push	{r4, r5, r6, lr}
 3558              	.LCFI33:
 3559              		.cfi_def_cfa_offset 16
 3560              		.cfi_offset 4, -16
 3561              		.cfi_offset 5, -12
 3562              		.cfi_offset 6, -8
 3563              		.cfi_offset 14, -4
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3564              		.loc 10 37 0
 3565 0002 0546     		mov	r5, r0
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3566              		.loc 10 40 0
 3567 0004 0430     		adds	r0, r0, #4
 3568              	.LVL433:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3569              		.loc 10 37 0
 3570 0006 0E46     		mov	r6, r1
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3571              		.loc 10 40 0
 3572 0008 FFF7FEFF 		bl	_ZNK8std_msgs6Header9serializeEPh
 3573              	.LVL434:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 3574              		.loc 10 41 0
 3575 000c A969     		ldr	r1, [r5, #24]	@ float
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3576              		.loc 10 40 0
 3577 000e 0446     		mov	r4, r0
 3578              	.LVL435:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 3579              		.loc 10 41 0
 3580 0010 3018     		adds	r0, r6, r0
 3581              	.LVL436:
 3582 0012 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3583              	.LVL437:
 3584 0016 0444     		add	r4, r4, r0
 3585              	.LVL438:
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
 3586              		.loc 10 42 0
 3587 0018 E969     		ldr	r1, [r5, #28]	@ float
 3588 001a 3019     		adds	r0, r6, r4
 3589 001c FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3590              	.LVL439:
 3591 0020 0444     		add	r4, r4, r0
 3592              	.LVL440:
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
 3593              		.loc 10 43 0
 3594 0022 296A     		ldr	r1, [r5, #32]	@ float
 3595 0024 3019     		adds	r0, r6, r4
 3596 0026 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3597              	.LVL441:
 3598 002a 0444     		add	r4, r4, r0
 3599              	.LVL442:
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
 3600              		.loc 10 44 0
 3601 002c 696A     		ldr	r1, [r5, #36]	@ float
 3602 002e 3019     		adds	r0, r6, r4
 3603 0030 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3604              	.LVL443:
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3605              		.loc 10 45 0
 3606 0034 95F82830 		ldrb	r3, [r5, #40]	@ zero_extendqisi2
 3607 0038 2044     		add	r0, r0, r4
 3608              	.LVL444:
 3609 003a 3354     		strb	r3, [r6, r0]
 3610              	.LVL445:
  48:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3611              		.loc 10 48 0
 3612 003c 0130     		adds	r0, r0, #1
 3613              	.LVL446:
 3614 003e 70BD     		pop	{r4, r5, r6, pc}
 3615              		.cfi_endproc
 3616              	.LFE1242:
 3617              		.cantunwind
 3618              		.fnend
 3620              		.section	.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf,"axG",%progbits,_ZN3ros3Msg21deserializeAv
 3621              		.align	1
 3622              		.weak	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3623              		.thumb
 3624              		.thumb_func
 3626              	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf:
 3627              		.fnstart
 3628              	.LFB1022:
  89:./lib/ros_lib/ros/msg.h **** 
  90:./lib/ros_lib/ros/msg.h ****   /**
  91:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
  92:./lib/ros_lib/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
  93:./lib/ros_lib/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
  94:./lib/ros_lib/ros/msg.h ****    *
  95:./lib/ros_lib/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
  96:./lib/ros_lib/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
  97:./lib/ros_lib/ros/msg.h ****    *
  98:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  99:./lib/ros_lib/ros/msg.h ****    */
 100:./lib/ros_lib/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 3629              		.loc 14 100 0
 3630              		.cfi_startproc
 3631              		@ args = 0, pretend = 0, frame = 0
 3632              		@ frame_needed = 0, uses_anonymous_args = 0
 3633              	.LVL447:
 3634 0000 30B5     		push	{r4, r5, lr}
 3635              	.LCFI34:
 3636              		.cfi_def_cfa_offset 12
 3637              		.cfi_offset 4, -12
 3638              		.cfi_offset 5, -8
 3639              		.cfi_offset 14, -4
 101:./lib/ros_lib/ros/msg.h ****   {
 102:./lib/ros_lib/ros/msg.h ****     uint32_t* val = (uint32_t*)f;
 103:./lib/ros_lib/ros/msg.h ****     inbuffer += 3;
 104:./lib/ros_lib/ros/msg.h **** 
 105:./lib/ros_lib/ros/msg.h ****     // Copy truncated mantissa.
 106:./lib/ros_lib/ros/msg.h ****     *val = ((uint32_t)(*(inbuffer++)) >> 5 & 0x07);
 3640              		.loc 14 106 0
 3641 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 3642 0004 5B09     		lsrs	r3, r3, #5
 3643 0006 0B60     		str	r3, [r1]
 3644              	.LVL448:
 107:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 3645              		.loc 14 107 0
 3646 0008 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 3647 000a 43EAC203 		orr	r3, r3, r2, lsl #3
 3648 000e 0B60     		str	r3, [r1]
 3649              	.LVL449:
 108:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 3650              		.loc 14 108 0
 3651 0010 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 3652 0012 43EAC222 		orr	r2, r3, r2, lsl #11
 3653 0016 0A60     		str	r2, [r1]
 109:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 3654              		.loc 14 109 0
 3655 0018 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 3656 001a DB04     		lsls	r3, r3, #19
 3657 001c 03F4F003 		and	r3, r3, #7864320
 3658 0020 1343     		orrs	r3, r3, r2
 3659 0022 0B60     		str	r3, [r1]
 3660              	.LVL450:
 110:./lib/ros_lib/ros/msg.h **** 
 111:./lib/ros_lib/ros/msg.h ****     // Copy truncated exponent.
 112:./lib/ros_lib/ros/msg.h ****     uint32_t exp = ((uint32_t)(*(inbuffer++)) & 0xf0)>>4;
 113:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 3661              		.loc 14 113 0
 3662 0024 C479     		ldrb	r4, [r0, #7]	@ zero_extendqisi2
 112:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 3663              		.loc 14 112 0
 3664 0026 8579     		ldrb	r5, [r0, #6]	@ zero_extendqisi2
 3665              	.LVL451:
 3666              		.loc 14 113 0
 3667 0028 2401     		lsls	r4, r4, #4
 3668 002a 04F4FE62 		and	r2, r4, #2032
 3669              	.LVL452:
 114:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 3670              		.loc 14 114 0
 3671 002e 52EA1512 		orrs	r2, r2, r5, lsr #4
 3672              	.LVL453:
 115:./lib/ros_lib/ros/msg.h ****     {
 116:./lib/ros_lib/ros/msg.h ****       *val |= ((exp) - 1023 + 127) << 23;
 3673              		.loc 14 116 0
 3674 0032 1EBF     		ittt	ne
 3675 0034 A2F56072 		subne	r2, r2, #896
 3676              	.LVL454:
 3677 0038 43EAC253 		orrne	r3, r3, r2, lsl #23
 3678 003c 0B60     		strne	r3, [r1]
 3679              	.LVL455:
 117:./lib/ros_lib/ros/msg.h ****     }  
 118:./lib/ros_lib/ros/msg.h **** 
 119:./lib/ros_lib/ros/msg.h ****     // Copy negative sign.
 120:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0x80) << 24;
 3680              		.loc 14 120 0
 3681 003e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 121:./lib/ros_lib/ros/msg.h **** 
 122:./lib/ros_lib/ros/msg.h ****     return 8;
 123:./lib/ros_lib/ros/msg.h ****   }
 3682              		.loc 14 123 0
 3683 0040 0820     		movs	r0, #8
 3684              	.LVL456:
 120:./lib/ros_lib/ros/msg.h **** 
 3685              		.loc 14 120 0
 3686 0042 23F07F02 		bic	r2, r3, #127
 3687 0046 0B68     		ldr	r3, [r1]
 3688 0048 43EA0263 		orr	r3, r3, r2, lsl #24
 3689 004c 0B60     		str	r3, [r1]
 3690              		.loc 14 123 0
 3691 004e 30BD     		pop	{r4, r5, pc}
 3692              		.cfi_endproc
 3693              	.LFE1022:
 3694              		.cantunwind
 3695              		.fnend
 3697              		.section	.text._ZN12roberto_msgs10MotorState11deserializeEPh,"axG",%progbits,_ZN12roberto_msgs10Mo
 3698              		.align	1
 3699              		.weak	_ZN12roberto_msgs10MotorState11deserializeEPh
 3700              		.thumb
 3701              		.thumb_func
 3703              	_ZN12roberto_msgs10MotorState11deserializeEPh:
 3704              		.fnstart
 3705              	.LFB1243:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3706              		.loc 10 50 0
 3707              		.cfi_startproc
 3708              		@ args = 0, pretend = 0, frame = 0
 3709              		@ frame_needed = 0, uses_anonymous_args = 0
 3710              	.LVL457:
 3711 0000 70B5     		push	{r4, r5, r6, lr}
 3712              	.LCFI35:
 3713              		.cfi_def_cfa_offset 16
 3714              		.cfi_offset 4, -16
 3715              		.cfi_offset 5, -12
 3716              		.cfi_offset 6, -8
 3717              		.cfi_offset 14, -4
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3718              		.loc 10 50 0
 3719 0002 0546     		mov	r5, r0
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3720              		.loc 10 53 0
 3721 0004 0430     		adds	r0, r0, #4
 3722              	.LVL458:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3723              		.loc 10 50 0
 3724 0006 0E46     		mov	r6, r1
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3725              		.loc 10 53 0
 3726 0008 FFF7FEFF 		bl	_ZN8std_msgs6Header11deserializeEPh
 3727              	.LVL459:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 3728              		.loc 10 54 0
 3729 000c 05F11801 		add	r1, r5, #24
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3730              		.loc 10 53 0
 3731 0010 0446     		mov	r4, r0
 3732              	.LVL460:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 3733              		.loc 10 54 0
 3734 0012 3018     		adds	r0, r6, r0
 3735              	.LVL461:
 3736 0014 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3737              	.LVL462:
 3738 0018 0444     		add	r4, r4, r0
 3739              	.LVL463:
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
 3740              		.loc 10 55 0
 3741 001a 05F11C01 		add	r1, r5, #28
 3742 001e 3019     		adds	r0, r6, r4
 3743 0020 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3744              	.LVL464:
 3745 0024 0444     		add	r4, r4, r0
 3746              	.LVL465:
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
 3747              		.loc 10 56 0
 3748 0026 05F12001 		add	r1, r5, #32
 3749 002a 3019     		adds	r0, r6, r4
 3750 002c FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3751              	.LVL466:
 3752 0030 0444     		add	r4, r4, r0
 3753              	.LVL467:
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
 3754              		.loc 10 57 0
 3755 0032 05F12401 		add	r1, r5, #36
 3756 0036 3019     		adds	r0, r6, r4
 3757 0038 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3758              	.LVL468:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3759              		.loc 10 58 0
 3760 003c 2044     		add	r0, r0, r4
 3761              	.LVL469:
 3762 003e 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3763              		.loc 10 61 0
 3764 0040 0130     		adds	r0, r0, #1
 3765              	.LVL470:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3766              		.loc 10 58 0
 3767 0042 85F82830 		strb	r3, [r5, #40]
 3768              	.LVL471:
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3769              		.loc 10 61 0
 3770 0046 70BD     		pop	{r4, r5, r6, pc}
 3771              		.cfi_endproc
 3772              	.LFE1243:
 3773              		.cantunwind
 3774              		.fnend
 3776              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh,"axG",%progbits,_ZN3r
 3777              		.align	1
 3778              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 3779              		.thumb
 3780              		.thumb_func
 3782              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:
 3783              		.fnstart
 3784              	.LFB1335:
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 3785              		.loc 12 72 0
 3786              		.cfi_startproc
 3787              		@ args = 0, pretend = 0, frame = 0
 3788              		@ frame_needed = 0, uses_anonymous_args = 0
 3789              	.LVL472:
 3790 0000 70B5     		push	{r4, r5, r6, lr}
 3791              	.LCFI36:
 3792              		.cfi_def_cfa_offset 16
 3793              		.cfi_offset 4, -16
 3794              		.cfi_offset 5, -12
 3795              		.cfi_offset 6, -8
 3796              		.cfi_offset 14, -4
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 3797              		.loc 12 72 0
 3798 0002 0546     		mov	r5, r0
  73:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 3799              		.loc 12 73 0
 3800 0004 00F10C04 		add	r4, r0, #12
 3801 0008 2046     		mov	r0, r4
 3802              	.LVL473:
 3803 000a FFF7FEFF 		bl	_ZN12roberto_msgs10MotorState11deserializeEPh
 3804              	.LVL474:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 3805              		.loc 12 74 0
 3806 000e AB6B     		ldr	r3, [r5, #56]
 3807 0010 2046     		mov	r0, r4
  75:./lib/ros_lib/ros/subscriber.h **** 
 3808              		.loc 12 75 0
 3809 0012 BDE87040 		pop	{r4, r5, r6, lr}
 3810              	.LCFI37:
 3811              		.cfi_restore 14
 3812              		.cfi_restore 6
 3813              		.cfi_restore 5
 3814              		.cfi_restore 4
 3815              		.cfi_def_cfa_offset 0
 3816              	.LVL475:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 3817              		.loc 12 74 0
 3818 0016 1847     		bx	r3	@ indirect register sibling call
 3819              	.LVL476:
 3820              		.cfi_endproc
 3821              	.LFE1335:
 3822              		.cantunwind
 3823              		.fnend
 3825              		.section	.text._ZN15ArduinoHardware4initEv,"axG",%progbits,_ZN15ArduinoHardware4initEv,comdat
 3826              		.align	1
 3827              		.weak	_ZN15ArduinoHardware4initEv
 3828              		.thumb
 3829              		.thumb_func
 3831              	_ZN15ArduinoHardware4initEv:
 3832              		.fnstart
 3833              	.LFB1136:
 3834              		.file 15 "./lib/ros_lib/ArduinoHardware.h"
   1:./lib/ros_lib/ArduinoHardware.h **** /* 
   2:./lib/ros_lib/ArduinoHardware.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ArduinoHardware.h ****  *
   4:./lib/ros_lib/ArduinoHardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ArduinoHardware.h ****  * All rights reserved.
   6:./lib/ros_lib/ArduinoHardware.h ****  *
   7:./lib/ros_lib/ArduinoHardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ArduinoHardware.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ArduinoHardware.h ****  * are met:
  10:./lib/ros_lib/ArduinoHardware.h ****  *
  11:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ArduinoHardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ArduinoHardware.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ArduinoHardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ArduinoHardware.h ****  *    with the distribution.
  17:./lib/ros_lib/ArduinoHardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ArduinoHardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ArduinoHardware.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ArduinoHardware.h ****  *
  21:./lib/ros_lib/ArduinoHardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ArduinoHardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ArduinoHardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ArduinoHardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ArduinoHardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ArduinoHardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ArduinoHardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ArduinoHardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ArduinoHardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ArduinoHardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ArduinoHardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ArduinoHardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ArduinoHardware.h ****  */
  34:./lib/ros_lib/ArduinoHardware.h **** 
  35:./lib/ros_lib/ArduinoHardware.h **** #ifndef ROS_ARDUINO_HARDWARE_H_
  36:./lib/ros_lib/ArduinoHardware.h **** #define ROS_ARDUINO_HARDWARE_H_
  37:./lib/ros_lib/ArduinoHardware.h **** 
  38:./lib/ros_lib/ArduinoHardware.h **** #include "stm32f10x.h"
  39:./lib/ros_lib/ArduinoHardware.h **** #include "stm32_time.h"
  40:./lib/ros_lib/ArduinoHardware.h **** #include "led.h"
  41:./lib/ros_lib/ArduinoHardware.h **** 
  42:./lib/ros_lib/ArduinoHardware.h **** #define BUFFER_SIZE 1024
  43:./lib/ros_lib/ArduinoHardware.h **** 
  44:./lib/ros_lib/ArduinoHardware.h **** 
  45:./lib/ros_lib/ArduinoHardware.h **** volatile uint16_t USART_FIFO[BUFFER_SIZE];
  46:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTIN;
  47:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTOUT;
  48:./lib/ros_lib/ArduinoHardware.h **** 
  49:./lib/ros_lib/ArduinoHardware.h **** class ArduinoHardware {
  50:./lib/ros_lib/ArduinoHardware.h ****   public:
  51:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(USART_TypeDef* io , long baud=230400){
  52:./lib/ros_lib/ArduinoHardware.h ****       iostream = io;
  53:./lib/ros_lib/ArduinoHardware.h ****       baud_ = baud;
  54:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  55:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  56:./lib/ros_lib/ArduinoHardware.h ****     }
  57:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware()
  58:./lib/ros_lib/ArduinoHardware.h ****     {
  59:./lib/ros_lib/ArduinoHardware.h ****       /* Leonardo support */
  60:./lib/ros_lib/ArduinoHardware.h ****       iostream = USART1;
  61:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 230400;
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  63:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  64:./lib/ros_lib/ArduinoHardware.h ****     }
  65:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(ArduinoHardware& h){
  66:./lib/ros_lib/ArduinoHardware.h ****       this->iostream = iostream;
  67:./lib/ros_lib/ArduinoHardware.h ****       this->baud_ = h.baud_;
  68:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  69:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  70:./lib/ros_lib/ArduinoHardware.h ****     }
  71:./lib/ros_lib/ArduinoHardware.h ****   
  72:./lib/ros_lib/ArduinoHardware.h ****     void setBaud(long baud){
  73:./lib/ros_lib/ArduinoHardware.h ****       this->baud_= baud;
  74:./lib/ros_lib/ArduinoHardware.h ****     }
  75:./lib/ros_lib/ArduinoHardware.h ****   
  76:./lib/ros_lib/ArduinoHardware.h ****     int getBaud(){return baud_;}
  77:./lib/ros_lib/ArduinoHardware.h **** 
  78:./lib/ros_lib/ArduinoHardware.h ****     void init(){
 3835              		.loc 15 78 0
 3836              		.cfi_startproc
 3837              		@ args = 0, pretend = 0, frame = 24
 3838              		@ frame_needed = 0, uses_anonymous_args = 0
 3839              	.LVL477:
 3840 0000 70B5     		push	{r4, r5, r6, lr}
 3841              		.save {r4, r5, r6, lr}
 3842              	.LCFI38:
 3843              		.cfi_def_cfa_offset 16
 3844              		.cfi_offset 4, -16
 3845              		.cfi_offset 5, -12
 3846              		.cfi_offset 6, -8
 3847              		.cfi_offset 14, -4
 3848 0002 0446     		mov	r4, r0
 3849              		.pad #24
 3850 0004 86B0     		sub	sp, sp, #24
 3851              	.LCFI39:
 3852              		.cfi_def_cfa_offset 40
  79:./lib/ros_lib/ArduinoHardware.h ****       USART_InitTypeDef usart1_init_struct;
  80:./lib/ros_lib/ArduinoHardware.h ****       /* Bit configuration structure for GPIOA PIN9 and PIN10 */
  81:./lib/ros_lib/ArduinoHardware.h ****       GPIO_InitTypeDef gpioa_init_struct;
  82:./lib/ros_lib/ArduinoHardware.h **** 
  83:./lib/ros_lib/ArduinoHardware.h ****       /* Enalbe clock for USART1, AFIO and GPIOA */
  84:./lib/ros_lib/ArduinoHardware.h ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2Periph_AFIO | 
  85:./lib/ros_lib/ArduinoHardware.h ****                            RCC_APB2Periph_GPIOA, ENABLE);
  86:./lib/ros_lib/ArduinoHardware.h ****                             
  87:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Tx */
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_9;
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  90:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
  91:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3853              		.loc 15 91 0
 3854 0006 214D     		ldr	r5, .L202
  85:./lib/ros_lib/ArduinoHardware.h ****                             
 3855              		.loc 15 85 0
 3856 0008 0121     		movs	r1, #1
 3857 000a 44F20500 		movw	r0, #16389
 3858              	.LVL478:
 3859 000e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 3860              	.LVL479:
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 3861              		.loc 15 88 0
 3862 0012 4FF40073 		mov	r3, #512
 3863 0016 ADF80430 		strh	r3, [sp, #4]	@ movhi
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 3864              		.loc 15 89 0
 3865 001a 0326     		movs	r6, #3
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3866              		.loc 15 90 0
 3867 001c 1823     		movs	r3, #24
 3868              		.loc 15 91 0
 3869 001e 01A9     		add	r1, sp, #4
 3870 0020 2846     		mov	r0, r5
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3871              		.loc 15 90 0
 3872 0022 8DF80730 		strb	r3, [sp, #7]
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 3873              		.loc 15 89 0
 3874 0026 8DF80660 		strb	r6, [sp, #6]
 3875              		.loc 15 91 0
 3876 002a FFF7FEFF 		bl	GPIO_Init
 3877              	.LVL480:
  92:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
  93:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_10;
 3878              		.loc 15 93 0
 3879 002e 4FF48063 		mov	r3, #1024
 3880 0032 ADF80430 		strh	r3, [sp, #4]	@ movhi
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  95:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 3881              		.loc 15 95 0
 3882 0036 0423     		movs	r3, #4
  96:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3883              		.loc 15 96 0
 3884 0038 0DEB0301 		add	r1, sp, r3
 3885 003c 2846     		mov	r0, r5
  95:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3886              		.loc 15 95 0
 3887 003e 8DF80730 		strb	r3, [sp, #7]
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 3888              		.loc 15 94 0
 3889 0042 8DF80660 		strb	r6, [sp, #6]
 3890              		.loc 15 96 0
 3891 0046 FFF7FEFF 		bl	GPIO_Init
 3892              	.LVL481:
  97:./lib/ros_lib/ArduinoHardware.h **** 
  98:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 */
  99:./lib/ros_lib/ArduinoHardware.h ****       USART_Cmd(iostream, ENABLE);  
 3893              		.loc 15 99 0
 3894 004a 2068     		ldr	r0, [r4]
 3895 004c 0121     		movs	r1, #1
 3896 004e FFF7FEFF 		bl	USART_Cmd
 3897              	.LVL482:
 100:./lib/ros_lib/ArduinoHardware.h ****       /* Baud rate 230400, 8-bit data, One stop bit
 101:./lib/ros_lib/ArduinoHardware.h ****       * No parity, Do both Rx and Tx, No HW flow control
 102:./lib/ros_lib/ArduinoHardware.h ****       */
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_BaudRate = baud_;   
 3898              		.loc 15 103 0
 3899 0052 6368     		ldr	r3, [r4, #4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 3900              		.loc 15 107 0
 3901 0054 0C22     		movs	r2, #12
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 3902              		.loc 15 103 0
 3903 0056 0293     		str	r3, [sp, #8]
 108:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 109:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 110:./lib/ros_lib/ArduinoHardware.h ****       USART_Init(iostream, &usart1_init_struct);
 3904              		.loc 15 110 0
 3905 0058 02A9     		add	r1, sp, #8
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 3906              		.loc 15 104 0
 3907 005a 0023     		movs	r3, #0
 3908              		.loc 15 110 0
 3909 005c 2068     		ldr	r0, [r4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 3910              		.loc 15 104 0
 3911 005e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 3912              		.loc 15 105 0
 3913 0062 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 3914              		.loc 15 106 0
 3915 0066 ADF81030 		strh	r3, [sp, #16]	@ movhi
 108:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 3916              		.loc 15 108 0
 3917 006a ADF81430 		strh	r3, [sp, #20]	@ movhi
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 3918              		.loc 15 107 0
 3919 006e ADF81220 		strh	r2, [sp, #18]	@ movhi
 3920              		.loc 15 110 0
 3921 0072 FFF7FEFF 		bl	USART_Init
 3922              	.LVL483:
 111:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 112:./lib/ros_lib/ArduinoHardware.h ****       USART_ITConfig(iostream, USART_IT_RXNE, ENABLE);
 3923              		.loc 15 112 0
 3924 0076 0122     		movs	r2, #1
 3925 0078 40F22551 		movw	r1, #1317
 3926 007c 2068     		ldr	r0, [r4]
 3927 007e FFF7FEFF 		bl	USART_ITConfig
 3928              	.LVL484:
 3929              	.LBB269:
 3930              	.LBB270:
 3931              		.file 16 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
   1:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**************************************************************************//**
   2:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @file     core_cm3.h
   3:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @version  V1.30
   5:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @date     30. October 2009
   6:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
   7:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @note
   8:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  10:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  11:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  15:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  16:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  22:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
  23:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  24:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CORE_H__
  26:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  27:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  29:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 10: \n
  31:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  34:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 530: \n
  35:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     return(__regBasePri); \n
  36:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * . 
  38:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 550: \n
  39:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  42:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 754: \n
  43:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  46:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 750: \n
  47:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  50:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 528: \n
  51:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  54:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 751: \n
  55:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  58:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  60:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  61:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  62:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -save */
  63:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e10  */
  64:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e530 */
  65:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e550 */
  66:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e754 */
  67:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e750 */
  68:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e528 */
  69:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e751 */
  70:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  71:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  72:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - CMSIS version number
  75:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
  78:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  79:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  80:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
  81:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  extern "C" {
  82:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif 
  83:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  84:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  88:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  90:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  92:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__ICCARM__)
  93:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
  95:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  96:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  97:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * IO definitions
 106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
 111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                 Register Abstraction
 122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  @{
 125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
 126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }  NVIC_Type;                                               
 148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SCB_Type;                                                
 177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                                      
 314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for SysTick
 363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SysTick_Type;
 372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  union  
 413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   {
 414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } ITM_Type;                                                
 445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 505:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0;
 506:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 510:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1;
 511:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 512:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } InterruptType_Type;
 513:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 514:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 518:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 522:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 525:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 529:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 530:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 534:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 535:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 536:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 537:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } MPU_Type;                                                
 549:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 550:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Type Register */
 551:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 554:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 557:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 560:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Control Register */
 561:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 564:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 567:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 570:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Number Register */
 571:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 574:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Base Address Register */
 575:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 578:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 581:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 584:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 588:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 591:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 594:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 597:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 600:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 603:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 606:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 609:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 612:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 614:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 615:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 616:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 619:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 620:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 621:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 622:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } CoreDebug_Type;
 627:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 628:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 632:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 635:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 638:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 641:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 644:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 647:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 650:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 653:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 656:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 659:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 662:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 665:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 669:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 672:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 676:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 679:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 682:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 685:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 688:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 691:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 694:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 697:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 700:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 703:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 706:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 709:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 713:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 714:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 722:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 729:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 733:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 734:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 736:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 737:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 738:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 740:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 741:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 745:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 749:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 753:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 757:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 758:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 759:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 760:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 762:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ARM armcc specific functions */
 764:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 765:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 768:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                             __nop
 769:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFI                             __wfi
 770:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFE                             __wfe
 771:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __SEV                             __sev
 772:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __REV                             __rev
 776:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __RBIT                            __rbit
 777:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 784:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 785:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 790:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 791:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 792:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 794:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
 795:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 796:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
 797:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 798:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 800:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 801:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 803:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 805:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 808:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 810:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 811:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 813:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
 814:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 815:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
 817:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 818:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 820:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 821:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 823:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 825:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 828:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 830:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 831:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 833:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 834:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 835:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 836:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 838:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 840:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 841:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 843:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 844:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 845:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 846:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 848:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 850:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 851:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 853:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 854:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 856:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 858:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __CLREX(void);
 859:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 860:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 861:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 863:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 864:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 865:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 866:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 867:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 869:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 870:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 872:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 873:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 874:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 875:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 876:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 878:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 879:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 881:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 882:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 883:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 885:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 887:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 888:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 890:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   priMask  PriMask
 891:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 892:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 894:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 896:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 897:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 899:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 900:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 901:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 902:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 903:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 905:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 906:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 908:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask faultMask value
 909:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 910:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
 911:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 912:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 914:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 915:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
 916:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
 917:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
 918:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 919:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
 920:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 921:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 923:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 924:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
 925:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 926:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
 927:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 928:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
 929:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 930:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 932:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 934:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 935:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 937:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 939:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CLREX                           __clrex
 940:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 941:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 942:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 944:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 945:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 946:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 947:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 948:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 950:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regBasePri);
 952:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 953:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 954:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 955:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 957:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 958:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 959:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 960:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 961:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 963:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 966:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 967:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 968:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 970:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 971:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 972:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 974:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 976:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regPriMask);
 978:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 979:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 980:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 981:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 983:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
 984:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 985:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 987:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 989:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regPriMask = (priMask);
 991:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 992:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 993:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 994:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 996:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 997:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 998:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 999:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1000:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1002:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regFaultMask);
1004:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1005:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1006:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1007:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1009:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1011:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1012:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1013:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1015:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1018:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1019:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1020:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1021:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1022:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
1023:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1024:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1025:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1026:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1028:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regControl);
1030:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1031:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1032:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1033:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1034:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1035:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1036:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1037:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1038:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1039:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1041:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regControl = control;
1043:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1044:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1045:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1047:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1048:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1049:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* IAR iccarm specific functions */
1051:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1052:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1055:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1058:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1064:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1076:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1077:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1078:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1080:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1081:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1082:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1083:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1084:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1086:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1087:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1089:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1091:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1094:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1096:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1097:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1099:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* GNU gcc specific functions */
1203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
1261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
1263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
1265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
1270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
1272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
1274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
1281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
1290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
1299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
1301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** * 
1316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** *  @return Control value
1317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in integer value
1338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* TASKING carm specific functions */
1437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*
1439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Including the CMSIS ones.
1442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
1445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   Core  Function Interface containing:
1449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core NVIC Functions
1450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core SysTick Functions
1451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core Reset Functions
1452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
1453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@{*/
1454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t reg_value;
1471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   
1473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return priority grouping field 
1485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 3932              		.loc 16 1504 0
 3933 0082 034B     		ldr	r3, .L202+4
 3934 0084 2022     		movs	r2, #32
 3935 0086 5A60     		str	r2, [r3, #4]
 3936              	.LVL485:
 3937              	.LBE270:
 3938              	.LBE269:
 113:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 global interrupt */
 114:./lib/ros_lib/ArduinoHardware.h ****       NVIC_EnableIRQ(USART1_IRQn);
 115:./lib/ros_lib/ArduinoHardware.h ****     }
 3939              		.loc 15 115 0
 3940 0088 06B0     		add	sp, sp, #24
 3941              	.LCFI40:
 3942              		.cfi_def_cfa_offset 16
 3943              		@ sp needed
 3944 008a 70BD     		pop	{r4, r5, r6, pc}
 3945              	.LVL486:
 3946              	.L203:
 3947              		.align	2
 3948              	.L202:
 3949 008c 00080140 		.word	1073809408
 3950 0090 00E100E0 		.word	-536813312
 3951              		.cfi_endproc
 3952              	.LFE1136:
 3953              		.fnend
 3955              		.text
 3956              		.align	1
 3957              		.global	USART1_IRQHandler
 3958              		.thumb
 3959              		.thumb_func
 3961              	USART1_IRQHandler:
 3962              		.fnstart
 3963              	.LFB1140:
 116:./lib/ros_lib/ArduinoHardware.h **** 
 117:./lib/ros_lib/ArduinoHardware.h ****     int read(){
 118:./lib/ros_lib/ArduinoHardware.h ****       __disable_irq();
 119:./lib/ros_lib/ArduinoHardware.h ****       if(USART_CNTIN == USART_CNTOUT){
 120:./lib/ros_lib/ArduinoHardware.h ****         __enable_irq();
 121:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 122:./lib/ros_lib/ArduinoHardware.h ****       }
 123:./lib/ros_lib/ArduinoHardware.h ****       
 124:./lib/ros_lib/ArduinoHardware.h ****       int returnVal = USART_FIFO[USART_CNTOUT];
 125:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 126:./lib/ros_lib/ArduinoHardware.h ****       __enable_irq();
 127:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 128:./lib/ros_lib/ArduinoHardware.h ****     }
 129:./lib/ros_lib/ArduinoHardware.h **** 
 130:./lib/ros_lib/ArduinoHardware.h ****     void write(uint8_t* data, int length){
 131:./lib/ros_lib/ArduinoHardware.h ****       for(int i=0; i<length; i++){
 132:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 133:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 134:./lib/ros_lib/ArduinoHardware.h ****       }
 135:./lib/ros_lib/ArduinoHardware.h ****     }
 136:./lib/ros_lib/ArduinoHardware.h **** 
 137:./lib/ros_lib/ArduinoHardware.h ****     uint32_t time(){
 138:./lib/ros_lib/ArduinoHardware.h ****       return millis();
 139:./lib/ros_lib/ArduinoHardware.h ****     }
 140:./lib/ros_lib/ArduinoHardware.h **** 
 141:./lib/ros_lib/ArduinoHardware.h ****   protected:
 142:./lib/ros_lib/ArduinoHardware.h ****     USART_TypeDef* iostream;
 143:./lib/ros_lib/ArduinoHardware.h ****     long baud_;
 144:./lib/ros_lib/ArduinoHardware.h **** 
 145:./lib/ros_lib/ArduinoHardware.h **** };
 146:./lib/ros_lib/ArduinoHardware.h **** 
 147:./lib/ros_lib/ArduinoHardware.h **** 
 148:./lib/ros_lib/ArduinoHardware.h **** 
 149:./lib/ros_lib/ArduinoHardware.h **** extern "C"{
 150:./lib/ros_lib/ArduinoHardware.h ****   void USART1_IRQHandler(void){
 3964              		.loc 15 150 0
 3965              		.cfi_startproc
 3966              		@ args = 0, pretend = 0, frame = 0
 3967              		@ frame_needed = 0, uses_anonymous_args = 0
 3968 0264 38B5     		push	{r3, r4, r5, lr}
 3969              		.save {r3, r4, r5, lr}
 3970              	.LCFI41:
 3971              		.cfi_def_cfa_offset 16
 3972              		.cfi_offset 3, -16
 3973              		.cfi_offset 4, -12
 3974              		.cfi_offset 5, -8
 3975              		.cfi_offset 14, -4
 151:./lib/ros_lib/ArduinoHardware.h **** 
 152:./lib/ros_lib/ArduinoHardware.h ****     if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET && USART_CNTIN != (( USART_CNTOUT - 1 + BU
 3976              		.loc 15 152 0
 3977 0266 40F22551 		movw	r1, #1317
 3978 026a 0F48     		ldr	r0, .L211
 3979 026c FFF7FEFF 		bl	USART_GetITStatus
 3980              	.LVL487:
 3981 0270 40B1     		cbz	r0, .L205
 3982              		.loc 15 152 0 is_stmt 0 discriminator 1
 3983 0272 0E4C     		ldr	r4, .L211+4
 3984 0274 E36A     		ldr	r3, [r4, #44]
 3985 0276 226B     		ldr	r2, [r4, #48]
 3986 0278 03F2FF33 		addw	r3, r3, #1023
 3987 027c C3F30903 		ubfx	r3, r3, #0, #10
 3988 0280 9342     		cmp	r3, r2
 3989 0282 04D1     		bne	.L206
 3990              	.L205:
 153:./lib/ros_lib/ArduinoHardware.h **** 
 154:./lib/ros_lib/ArduinoHardware.h ****       USART_FIFO[USART_CNTIN] = USART_ReceiveData(USART1);
 155:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 156:./lib/ros_lib/ArduinoHardware.h ****     }else{
 157:./lib/ros_lib/ArduinoHardware.h ****       // Should NEVER reach this point!
 158:./lib/ros_lib/ArduinoHardware.h ****       (void)USART_ReceiveData(USART1);  // Clear inerrupt flag by reading byte
 159:./lib/ros_lib/ArduinoHardware.h ****     }
 160:./lib/ros_lib/ArduinoHardware.h ****   }   
 3991              		.loc 15 160 0 is_stmt 1
 3992 0284 BDE83840 		pop	{r3, r4, r5, lr}
 3993              	.LCFI42:
 3994              		.cfi_remember_state
 3995              		.cfi_restore 14
 3996              		.cfi_restore 5
 3997              		.cfi_restore 4
 3998              		.cfi_restore 3
 3999              		.cfi_def_cfa_offset 0
 158:./lib/ros_lib/ArduinoHardware.h ****     }
 4000              		.loc 15 158 0
 4001 0288 0748     		ldr	r0, .L211
 4002 028a FFF7FEBF 		b	USART_ReceiveData
 4003              	.LVL488:
 4004              	.L206:
 4005              	.LCFI43:
 4006              		.cfi_restore_state
 154:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 4007              		.loc 15 154 0
 4008 028e 0648     		ldr	r0, .L211
 4009 0290 256B     		ldr	r5, [r4, #48]
 4010 0292 FFF7FEFF 		bl	USART_ReceiveData
 4011              	.LVL489:
 4012 0296 04EB4505 		add	r5, r4, r5, lsl #1
 4013 029a A886     		strh	r0, [r5, #52]	@ movhi
 155:./lib/ros_lib/ArduinoHardware.h ****     }else{
 4014              		.loc 15 155 0
 4015 029c 236B     		ldr	r3, [r4, #48]
 4016 029e 0133     		adds	r3, r3, #1
 4017 02a0 C3F30903 		ubfx	r3, r3, #0, #10
 4018 02a4 2363     		str	r3, [r4, #48]
 4019 02a6 38BD     		pop	{r3, r4, r5, pc}
 4020              	.L212:
 4021              		.align	2
 4022              	.L211:
 4023 02a8 00380140 		.word	1073821696
 4024 02ac 00000000 		.word	.LANCHOR1
 4025              		.cfi_endproc
 4026              	.LFE1140:
 4027              		.fnend
 4029              		.align	1
 4030              		.global	EXTI2_IRQHandler
 4031              		.thumb
 4032              		.thumb_func
 4034              	EXTI2_IRQHandler:
 4035              		.fnstart
 4036              	.LFB1282:
 134:src/main.cpp  **** 
 135:src/main.cpp  **** 
 136:src/main.cpp  **** ros::Subscriber<roberto_msgs::MotorState> motor_sub("throttled_joy_vel", &motor_cb);
 137:src/main.cpp  **** //ros::Subscriber<sensor_msgs::Joy> motor_sub("joy", &motor_cb);
 138:src/main.cpp  **** ros::Subscriber<std_msgs::UInt8> led_sub("led", &led_cb);
 139:src/main.cpp  **** 
 140:src/main.cpp  **** //geometry_msgs::TransformStamped odom_trans;
 141:src/main.cpp  **** //tf::TransformBroadcaster odom_broadcaster;
 142:src/main.cpp  **** 
 143:src/main.cpp  **** 
 144:src/main.cpp  **** /*nav_msgs::Odometry odom;
 145:src/main.cpp  **** ros::Publisher odom_pub("odom", &odom);*/
 146:src/main.cpp  **** 
 147:src/main.cpp  **** std_msgs::Float32MultiArray debug_msg;
 148:src/main.cpp  **** ros::Publisher debug_pub("debug", &debug_msg);
 149:src/main.cpp  **** 
 150:src/main.cpp  **** std_msgs::Float32MultiArray odom_msg;
 151:src/main.cpp  **** ros::Publisher odom_pub("odom", &odom_msg);
 152:src/main.cpp  **** 
 153:src/main.cpp  **** int main(){
 154:src/main.cpp  ****   #ifdef DEBUG
 155:src/main.cpp  ****   initialise_monitor_handles(); /* initialize handles */
 156:src/main.cpp  ****   #endif
 157:src/main.cpp  ****   /* System Clocks Configuration */
 158:src/main.cpp  ****   RCC_Configuration();
 159:src/main.cpp  ****   SysTick_Init();
 160:src/main.cpp  **** 
 161:src/main.cpp  ****   GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
 162:src/main.cpp  ****   I2C1_Init();
 163:src/main.cpp  ****   DEBUG_Init();
 164:src/main.cpp  ****   SHUTDOWN_Init();
 165:src/main.cpp  ****   LED_Init();
 166:src/main.cpp  **** 
 167:src/main.cpp  ****   debug_msg.data = (float *)malloc(sizeof(float)*6);
 168:src/main.cpp  ****   debug_msg.data_length = 6;
 169:src/main.cpp  **** 
 170:src/main.cpp  ****   odom_msg.data = (float *)malloc(sizeof(float)*3);
 171:src/main.cpp  ****   odom_msg.data_length = 3;
 172:src/main.cpp  **** 
 173:src/main.cpp  ****   nh.initNode();
 174:src/main.cpp  **** 
 175:src/main.cpp  **** 
 176:src/main.cpp  ****   nh.subscribe(motor_sub);
 177:src/main.cpp  ****   nh.subscribe(led_sub);
 178:src/main.cpp  ****   nh.advertise(odom_pub);
 179:src/main.cpp  ****   //nh.advertise(debug_pub);
 180:src/main.cpp  ****   //odom_broadcaster.init(nh);
 181:src/main.cpp  **** 
 182:src/main.cpp  ****   /*while(!nh.connected()){
 183:src/main.cpp  ****     nh.spinOnce();
 184:src/main.cpp  ****   }*/
 185:src/main.cpp  **** 
 186:src/main.cpp  ****   shuttingDown = false;
 187:src/main.cpp  **** 
 188:src/main.cpp  ****   
 189:src/main.cpp  ****   float FF;
 190:src/main.cpp  ****   if(!nh.getParam("serial_node/FF", &FF, 1)){
 191:src/main.cpp  ****     FF = 3200;
 192:src/main.cpp  ****   }
 193:src/main.cpp  ****   float KP;
 194:src/main.cpp  ****   if(!nh.getParam("serial_node/KP", &KP, 1)){
 195:src/main.cpp  ****     KP = 3000;
 196:src/main.cpp  ****   }
 197:src/main.cpp  ****   float KI;
 198:src/main.cpp  ****   if(!nh.getParam("serial_node/KI", &KI, 1)){
 199:src/main.cpp  ****     KI = 2000;
 200:src/main.cpp  ****   }
 201:src/main.cpp  ****   float KD;
 202:src/main.cpp  ****   if(!nh.getParam("serial_node/KD", &KD, 1)){
 203:src/main.cpp  ****     KD = 40;
 204:src/main.cpp  ****   }
 205:src/main.cpp  **** 
 206:src/main.cpp  **** 
 207:src/main.cpp  ****   float integralSaturation;
 208:src/main.cpp  ****   if(!nh.getParam("serial_node/integralSaturation", &integralSaturation, 1)){
 209:src/main.cpp  ****     integralSaturation = 10;
 210:src/main.cpp  ****   }
 211:src/main.cpp  ****   float wheelRadius;
 212:src/main.cpp  ****   if(!nh.getParam("serial_node/wheelRadius", &wheelRadius, 1)){
 213:src/main.cpp  ****     wheelRadius = 0.04;
 214:src/main.cpp  ****   }
 215:src/main.cpp  **** 
 216:src/main.cpp  ****   if(!nh.getParam("serial_node/widthBetweenMotorPivotPoints", &L, 1)){
 217:src/main.cpp  ****     L = 0.17;
 218:src/main.cpp  ****   }
 219:src/main.cpp  **** 
 220:src/main.cpp  ****   if(!nh.getParam("serial_node/motorPivotPointToWheel", &d, 1)){
 221:src/main.cpp  ****     d = 0.045;
 222:src/main.cpp  ****   }
 223:src/main.cpp  **** 
 224:src/main.cpp  ****   delay(1000);
 225:src/main.cpp  **** 
 226:src/main.cpp  **** 
 227:src/main.cpp  ****   motorSettings SL(MOTOR_TYPE_SERVO, "servo_left", TIM4, 4);
 228:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 229:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 230:src/main.cpp  ****   SL.m_ServoLimitMax = 2025;
 231:src/main.cpp  ****   SL.m_ServoLimitMin = 7925;
 232:src/main.cpp  **** 
 233:src/main.cpp  ****   motorSettings SR(MOTOR_TYPE_SERVO, "servo_right", TIM4, 3);
 234:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 235:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 236:src/main.cpp  ****   SR.m_ServoLimitMax = 7925;
 237:src/main.cpp  ****   SR.m_ServoLimitMin = 2025;
 238:src/main.cpp  **** 
 239:src/main.cpp  ****   motorSettings FR(MOTOR_TYPE_DC_MOTOR, "front_right", TIM1, 1);
 240:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 241:src/main.cpp  ****               GPIO_Pin_15, GPIOC, GPIO_Pin_0, GPIOA,
 242:src/main.cpp  ****               GPIO_Pin_8, GPIOA);
 243:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 244:src/main.cpp  ****   FR.setRegulator(FF,KP,KI,KD,integralSaturation);
 245:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 246:src/main.cpp  **** 
 247:src/main.cpp  ****   motorSettings FL(MOTOR_TYPE_DC_MOTOR, "front_left", TIM3, 4);
 248:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 249:src/main.cpp  ****               GPIO_Pin_4, GPIOA,GPIO_Pin_10,GPIOB,
 250:src/main.cpp  ****               GPIO_Pin_1, GPIOB);
 251:src/main.cpp  ****   FL.encoderAddr = (0x10);
 252:src/main.cpp  ****   FL.setRegulator(FF,KP,KI,KD,integralSaturation);
 253:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 254:src/main.cpp  **** 
 255:src/main.cpp  ****   motorSettings RL(MOTOR_TYPE_DC_MOTOR, "rear_left", TIM2, 4);
 256:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 257:src/main.cpp  ****     GPIO_Pin_13, GPIOB, GPIO_Pin_14, GPIOB,
 258:src/main.cpp  ****     GPIO_Pin_3, GPIOA);
 259:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 260:src/main.cpp  ****   RL.setRegulator(FF,KP,KI,KD,integralSaturation);
 261:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 262:src/main.cpp  **** 
 263:src/main.cpp  ****   motorSettings RR(MOTOR_TYPE_DC_MOTOR, "rear_right", TIM1, 4);
 264:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 265:src/main.cpp  ****               GPIO_Pin_15, GPIOA, GPIO_Pin_3, GPIOB,
 266:src/main.cpp  ****               GPIO_Pin_11, GPIOA);
 267:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 268:src/main.cpp  ****   RR.setRegulator(FF,KP,KI,KD,integralSaturation);
 269:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 270:src/main.cpp  **** 
 271:src/main.cpp  ****   char error[60];
 272:src/main.cpp  ****   servo_left = motor::createMotor(&SL);
 273:src/main.cpp  ****   if(!servo_left->motorInit()){
 274:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 275:src/main.cpp  ****     nh.logerror(error);
 276:src/main.cpp  ****   }
 277:src/main.cpp  **** 
 278:src/main.cpp  ****   servo_right = motor::createMotor(&SR);
 279:src/main.cpp  ****   if(!servo_right->motorInit()){
 280:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 281:src/main.cpp  ****     nh.logerror(error);
 282:src/main.cpp  ****   }
 283:src/main.cpp  **** 
 284:src/main.cpp  ****   front_left = motor::createMotor(&FL);
 285:src/main.cpp  ****   if(!front_left->motorInit()){
 286:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 287:src/main.cpp  ****     nh.logerror(error);
 288:src/main.cpp  ****   }
 289:src/main.cpp  **** 
 290:src/main.cpp  ****   front_right = motor::createMotor(&FR);
 291:src/main.cpp  ****   if(!front_right->motorInit()){
 292:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 293:src/main.cpp  ****     nh.logerror(error);
 294:src/main.cpp  ****   }
 295:src/main.cpp  **** 
 296:src/main.cpp  ****   rear_left = motor::createMotor(&RL);
 297:src/main.cpp  ****   if(!rear_left->motorInit()){
 298:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 299:src/main.cpp  ****     nh.logerror(error);
 300:src/main.cpp  ****   }
 301:src/main.cpp  **** 
 302:src/main.cpp  ****   rear_right = motor::createMotor(&RR);
 303:src/main.cpp  ****   if(!rear_right->motorInit()){
 304:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 305:src/main.cpp  ****     nh.logerror(error);
 306:src/main.cpp  ****   }
 307:src/main.cpp  **** 
 308:src/main.cpp  **** 
 309:src/main.cpp  ****   
 310:src/main.cpp  ****   
 311:src/main.cpp  **** 
 312:src/main.cpp  ****   servo_left->setReference(135);
 313:src/main.cpp  ****   servo_right->setReference(135);
 314:src/main.cpp  ****   front_right->setReference(0);
 315:src/main.cpp  ****   front_left->setReference(0);
 316:src/main.cpp  ****   rear_right->setReference(0);
 317:src/main.cpp  ****   rear_left->setReference(0);
 318:src/main.cpp  **** 
 319:src/main.cpp  ****   int cnt = 0;
 320:src/main.cpp  ****   bool connected = false;
 321:src/main.cpp  **** 
 322:src/main.cpp  ****   uint32_t start_time;
 323:src/main.cpp  ****   uint32_t dt = 20;
 324:src/main.cpp  ****   float dt_s = ((int)dt*0.001f);
 325:src/main.cpp  **** 
 326:src/main.cpp  ****   //debug_toggle();
 327:src/main.cpp  **** 
 328:src/main.cpp  **** 
 329:src/main.cpp  ****   // Initialize the servos one by one in order not to kill the ODroid
 330:src/main.cpp  ****   while(cnt < 100){
 331:src/main.cpp  ****     start_time = millis();
 332:src/main.cpp  ****     if(cnt < 50)
 333:src/main.cpp  ****       servo_left->update(dt_s, connected, true);
 334:src/main.cpp  ****     else
 335:src/main.cpp  ****       servo_right->update(dt_s, connected, true);
 336:src/main.cpp  ****     while( millis() - start_time < dt);
 337:src/main.cpp  ****     cnt++;
 338:src/main.cpp  ****   }
 339:src/main.cpp  **** 
 340:src/main.cpp  ****   led_set(255);
 341:src/main.cpp  **** 
 342:src/main.cpp  ****   cnt = 0;
 343:src/main.cpp  **** 
 344:src/main.cpp  **** 
 345:src/main.cpp  ****   double x = 0.0;
 346:src/main.cpp  ****   double y = 0.0;
 347:src/main.cpp  ****   double th = 0.0;
 348:src/main.cpp  ****   float l = sqrt(pow((L/2),2)*2);
 349:src/main.cpp  **** 
 350:src/main.cpp  ****   //{fr, fl, rl, rr};
 351:src/main.cpp  ****   float alpha[4] = {-M_PI/4, M_PI/4, 3*M_PI/4, -3*M_PI/4};
 352:src/main.cpp  ****   uint32_t elapsed;
 353:src/main.cpp  ****   initialized = true;
 354:src/main.cpp  **** 
 355:src/main.cpp  **** 
 356:src/main.cpp  ****   while (1){
 357:src/main.cpp  ****    //printf("HELLOO!!!!");
 358:src/main.cpp  **** 
 359:src/main.cpp  ****     start_time = millis();
 360:src/main.cpp  **** 
 361:src/main.cpp  ****     /*if(shuttingDown){
 362:src/main.cpp  ****       connected = false;
 363:src/main.cpp  ****       // TODO: Advertise shutdown??
 364:src/main.cpp  ****     }else{*/
 365:src/main.cpp  ****     if(cnt++%50 == 0)
 366:src/main.cpp  ****       debug_toggle();
 367:src/main.cpp  ****     connected = nh.connected();
 368:src/main.cpp  ****     //}
 369:src/main.cpp  **** 
 370:src/main.cpp  ****     float sl = servo_left->update(dt_s, connected, true);
 371:src/main.cpp  ****     float sr = servo_right->update(dt_s, connected, true);
 372:src/main.cpp  **** 
 373:src/main.cpp  ****     debug_msg.data[0] = (float)sl;
 374:src/main.cpp  ****     debug_msg.data[1] = (float)sr;
 375:src/main.cpp  **** 
 376:src/main.cpp  ****     bool enable = true;
 377:src/main.cpp  **** 
 378:src/main.cpp  ****     if((waitForServos && ((int)sr == (int)servo_right->getReference() && (int)sl == (int)servo_left
 379:src/main.cpp  ****       waitForServos = false;
 380:src/main.cpp  ****       front_right->setReference(motorCmd[0]);
 381:src/main.cpp  ****       front_left->setReference(motorCmd[1]);
 382:src/main.cpp  ****       rear_left->setReference(motorCmd[2]);
 383:src/main.cpp  ****       rear_right->setReference(motorCmd[3]);
 384:src/main.cpp  ****     }else{
 385:src/main.cpp  ****       enable = false;
 386:src/main.cpp  ****       front_right->setReference(0);
 387:src/main.cpp  ****       front_left->setReference(0);
 388:src/main.cpp  ****       rear_left->setReference(0);
 389:src/main.cpp  ****       rear_right->setReference(0);
 390:src/main.cpp  ****     }
 391:src/main.cpp  ****     
 392:src/main.cpp  ****     float fr = front_right->update(dt_s, connected, enable);
 393:src/main.cpp  ****     //udelay(500);
 394:src/main.cpp  ****     float fl = front_left->update(dt_s, connected, enable);
 395:src/main.cpp  ****     //udelay(500);
 396:src/main.cpp  ****     float rl = rear_left->update(dt_s, connected, enable);
 397:src/main.cpp  ****     //udelay(500);
 398:src/main.cpp  ****     float rr = rear_right->update(dt_s, connected, enable);
 399:src/main.cpp  ****     //udelay(1000);
 400:src/main.cpp  **** 
 401:src/main.cpp  **** 
 402:src/main.cpp  **** 
 403:src/main.cpp  ****     debug_msg.data[2] = fr;
 404:src/main.cpp  ****     debug_msg.data[3] = fl;
 405:src/main.cpp  ****     debug_msg.data[4] = rl;
 406:src/main.cpp  ****     debug_msg.data[5] = rr;
 407:src/main.cpp  **** 
 408:src/main.cpp  ****     float speeds[4] = {fr, fl, rl, rr};
 409:src/main.cpp  ****     float angles[4] = {sr-90, -sl+90, sl+90, -sr-90};
 410:src/main.cpp  **** 
 411:src/main.cpp  ****     int i;
 412:src/main.cpp  ****     float x_dot = 0;
 413:src/main.cpp  ****     float y_dot = 0;
 414:src/main.cpp  ****     float theta_dot = 0;
 415:src/main.cpp  ****     for(i = 0; i < 4; i++){
 416:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 417:src/main.cpp  ****       x_dot += cos(alpha[i]+angles[i])*speeds[i];
 418:src/main.cpp  ****       y_dot += sin(alpha[i]+angles[i])*speeds[i];
 419:src/main.cpp  ****       float delta = atan( (l*cos(alpha[i]+d*cos(alpha[i] + angles[i]))) / (l*sin(alpha[i] + d*sin(a
 420:src/main.cpp  ****       //odom_msg.data[i] = motorCmd[i];
 421:src/main.cpp  ****       theta_dot += cos(angles[i] - delta)*speeds[i];
 422:src/main.cpp  ****     }
 423:src/main.cpp  ****     x_dot /= 4;
 424:src/main.cpp  ****     y_dot /= 4;
 425:src/main.cpp  ****     theta_dot /= 4;
 426:src/main.cpp  **** 
 427:src/main.cpp  **** 
 428:src/main.cpp  ****     odom_msg.data[0] = x_dot;
 429:src/main.cpp  ****     odom_msg.data[1] = y_dot;
 430:src/main.cpp  ****     odom_msg.data[2] = theta_dot;
 431:src/main.cpp  **** 
 432:src/main.cpp  **** 
 433:src/main.cpp  ****     odom_pub.publish(&odom_msg);
 434:src/main.cpp  ****     //debug_pub.publish(&debug_msg);
 435:src/main.cpp  **** 
 436:src/main.cpp  ****     nh.spinOnce();
 437:src/main.cpp  **** 
 438:src/main.cpp  ****     elapsed = millis() - start_time;
 439:src/main.cpp  ****     if(elapsed > dt){
 440:src/main.cpp  ****       char elapsed_msg[18];
 441:src/main.cpp  ****       sprintf(elapsed_msg, "SLOW! %u", elapsed);
 442:src/main.cpp  ****       nh.logerror(elapsed_msg);
 443:src/main.cpp  ****     }else{
 444:src/main.cpp  ****       /*char elapsed_msg2[8];
 445:src/main.cpp  ****       sprintf(elapsed_msg2, "%u", elapsed);
 446:src/main.cpp  ****       nh.logerror(elapsed_msg2);*/
 447:src/main.cpp  ****       while( (millis() - start_time) < dt){}
 448:src/main.cpp  ****     }
 449:src/main.cpp  ****   }
 450:src/main.cpp  ****   return 0;
 451:src/main.cpp  **** }
 452:src/main.cpp  **** 
 453:src/main.cpp  **** 
 454:src/main.cpp  **** 
 455:src/main.cpp  **** extern "C" void EXTI2_IRQHandler(void){
 4037              		.loc 13 455 0
 4038              		.cfi_startproc
 4039              		@ args = 0, pretend = 0, frame = 0
 4040              		@ frame_needed = 0, uses_anonymous_args = 0
 4041 02b0 08B5     		push	{r3, lr}
 4042              		.save {r3, lr}
 4043              	.LCFI44:
 4044              		.cfi_def_cfa_offset 8
 4045              		.cfi_offset 3, -8
 4046              		.cfi_offset 14, -4
 456:src/main.cpp  ****   if(EXTI_GetITStatus(EXTI_Line2) != RESET){
 4047              		.loc 13 456 0
 4048 02b2 0420     		movs	r0, #4
 4049 02b4 FFF7FEFF 		bl	EXTI_GetITStatus
 4050              	.LVL490:
 4051 02b8 40B1     		cbz	r0, .L213
 457:src/main.cpp  ****     shuttingDown = true;
 4052              		.loc 13 457 0
 4053 02ba 054B     		ldr	r3, .L215
 4054 02bc 0122     		movs	r2, #1
 4055 02be 83F83428 		strb	r2, [r3, #2100]
 458:src/main.cpp  ****     EXTI_ClearITPendingBit(EXTI_Line2);
 4056              		.loc 13 458 0
 4057 02c2 0420     		movs	r0, #4
 459:src/main.cpp  ****   }
 460:src/main.cpp  **** }
 4058              		.loc 13 460 0
 4059 02c4 BDE80840 		pop	{r3, lr}
 4060              	.LCFI45:
 4061              		.cfi_remember_state
 4062              		.cfi_restore 14
 4063              		.cfi_restore 3
 4064              		.cfi_def_cfa_offset 0
 458:src/main.cpp  ****     EXTI_ClearITPendingBit(EXTI_Line2);
 4065              		.loc 13 458 0
 4066 02c8 FFF7FEBF 		b	EXTI_ClearITPendingBit
 4067              	.LVL491:
 4068              	.L213:
 4069              	.LCFI46:
 4070              		.cfi_restore_state
 4071 02cc 08BD     		pop	{r3, pc}
 4072              	.L216:
 4073 02ce 00BF     		.align	2
 4074              	.L215:
 4075 02d0 00000000 		.word	.LANCHOR1
 4076              		.cfi_endproc
 4077              	.LFE1282:
 4078              		.fnend
 4080              		.align	1
 4081              		.global	HardFault_Handler
 4082              		.thumb
 4083              		.thumb_func
 4085              	HardFault_Handler:
 4086              		.fnstart
 4087              	.LFB1283:
 461:src/main.cpp  **** 
 462:src/main.cpp  **** 
 463:src/main.cpp  **** extern "C" __attribute__((naked)) void HardFault_Handler(void){
 4088              		.loc 13 463 0
 4089              		.cfi_startproc
 4090              		@ Naked Function: prologue and epilogue provided by programmer.
 4091              		@ args = 0, pretend = 0, frame = 0
 4092              		@ frame_needed = 0, uses_anonymous_args = 0
 464:src/main.cpp  ****         /*
 465:src/main.cpp  ****          * Get the appropriate stack pointer, depending on our mode,
 466:src/main.cpp  ****          * and use it as the parameter to the C handler. This function
 467:src/main.cpp  ****          * will never return
 468:src/main.cpp  ****          */
 469:src/main.cpp  **** 
 470:src/main.cpp  ****          // TODO: CUT MOTOR POWER!
 471:src/main.cpp  **** 
 472:src/main.cpp  ****         __asm(  ".syntax unified\n"
 473:src/main.cpp  ****                         "MOVS   R0, #4  \n"
 474:src/main.cpp  ****                         "MOV    R1, LR  \n"
 475:src/main.cpp  ****                         "TST    R0, R1  \n"
 476:src/main.cpp  ****                         "BEQ    _MSP    \n"
 477:src/main.cpp  ****                         "MRS    R0, PSP \n"
 478:src/main.cpp  ****                         "B      hard_fault_handler_c      \n"
 479:src/main.cpp  ****                 "_MSP:  \n"
 480:src/main.cpp  ****                         "MRS    R0, MSP \n"
 481:src/main.cpp  ****                         "B      hard_fault_handler_c      \n"
 482:src/main.cpp  ****                 ".syntax divided\n") ;
 4093              		.loc 13 482 0
 4094              		.syntax unified
 4095              	@ 482 "src/main.cpp" 1
 4096              		.syntax unified
 4097 02d4 0420     	MOVS   R0, #4  
 4098 02d6 7146     	MOV    R1, LR  
 4099 02d8 0842     	TST    R0, R1  
 4100 02da 03D0     	BEQ    _MSP    
 4101 02dc EFF30980 	MRS    R0, PSP 
 4102 02e0 FFF7FEBF 	B      hard_fault_handler_c      
 4103              	_MSP:  
 4104 02e4 EFF30880 	MRS    R0, MSP 
 4105 02e8 FFF7FEBF 	B      hard_fault_handler_c      
 4106              	.syntax divided
 4107              	
 4108              	@ 0 "" 2
 483:src/main.cpp  **** }
 4109              		.loc 13 483 0
 4110              		.thumb
 4111              		.syntax unified
 4112              		.cfi_endproc
 4113              	.LFE1283:
 4114              		.cantunwind
 4115              		.fnend
 4117              		.align	1
 4118              		.global	hard_fault_handler_c
 4119              		.thumb
 4120              		.thumb_func
 4122              	hard_fault_handler_c:
 4123              		.fnstart
 4124              	.LFB1284:
 484:src/main.cpp  **** 
 485:src/main.cpp  **** 
 486:src/main.cpp  **** extern "C" void hard_fault_handler_c (unsigned int * hardfault_args)
 487:src/main.cpp  **** {
 4125              		.loc 13 487 0
 4126              		.cfi_startproc
 4127              		@ args = 0, pretend = 0, frame = 0
 4128              		@ frame_needed = 0, uses_anonymous_args = 0
 4129              		@ link register save eliminated.
 4130              	.LVL492:
 4131              	.L219:
 4132 02ec FEE7     		b	.L219
 4133              		.cfi_endproc
 4134              	.LFE1284:
 4135              		.cantunwind
 4136              		.fnend
 4138              		.align	1
 4139              		.global	_Z13assert_failedPhm
 4140              		.thumb
 4141              		.thumb_func
 4143              	_Z13assert_failedPhm:
 4144              		.fnstart
 4145              	.LFB1285:
 488:src/main.cpp  ****   unsigned int stacked_r0;
 489:src/main.cpp  ****   unsigned int stacked_r1;
 490:src/main.cpp  ****   unsigned int stacked_r2;
 491:src/main.cpp  ****   unsigned int stacked_r3;
 492:src/main.cpp  ****   unsigned int stacked_r12;
 493:src/main.cpp  ****   unsigned int stacked_lr;
 494:src/main.cpp  ****   unsigned int stacked_pc;
 495:src/main.cpp  ****   unsigned int stacked_psr;
 496:src/main.cpp  ****  
 497:src/main.cpp  ****   stacked_r0 = ((unsigned long) hardfault_args[0]);
 498:src/main.cpp  ****   stacked_r1 = ((unsigned long) hardfault_args[1]);
 499:src/main.cpp  ****   stacked_r2 = ((unsigned long) hardfault_args[2]);
 500:src/main.cpp  ****   stacked_r3 = ((unsigned long) hardfault_args[3]);
 501:src/main.cpp  ****  
 502:src/main.cpp  ****   stacked_r12 = ((unsigned long) hardfault_args[4]);
 503:src/main.cpp  ****   stacked_lr = ((unsigned long) hardfault_args[5]);
 504:src/main.cpp  ****   stacked_pc = ((unsigned long) hardfault_args[6]);
 505:src/main.cpp  ****   stacked_psr = ((unsigned long) hardfault_args[7]);
 506:src/main.cpp  ****  
 507:src/main.cpp  ****   printf ("\n\n[Hard fault handler - all numbers in hex]\n");
 508:src/main.cpp  ****   printf ("R0 = %x\n", stacked_r0);
 509:src/main.cpp  ****   printf ("R1 = %x\n", stacked_r1);
 510:src/main.cpp  ****   printf ("R2 = %x\n", stacked_r2);
 511:src/main.cpp  ****   printf ("R3 = %x\n", stacked_r3);
 512:src/main.cpp  ****   printf ("R12 = %x\n", stacked_r12);
 513:src/main.cpp  ****   printf ("LR [R14] = %x  subroutine call return address\n", stacked_lr);
 514:src/main.cpp  ****   printf ("PC [R15] = %x  program counter\n", stacked_pc);
 515:src/main.cpp  ****   printf ("PSR = %x\n", stacked_psr);
 516:src/main.cpp  ****   printf ("BFAR = %x\n", (*((volatile unsigned long *)(0xE000ED38))));
 517:src/main.cpp  ****   printf ("CFSR = %x\n", (*((volatile unsigned long *)(0xE000ED28))));
 518:src/main.cpp  ****   printf ("HFSR = %x\n", (*((volatile unsigned long *)(0xE000ED2C))));
 519:src/main.cpp  ****   printf ("DFSR = %x\n", (*((volatile unsigned long *)(0xE000ED30))));
 520:src/main.cpp  ****   printf ("AFSR = %x\n", (*((volatile unsigned long *)(0xE000ED3C))));
 521:src/main.cpp  ****   printf ("SCB_SHCSR = %x\n", SCB->SHCSR);
 522:src/main.cpp  ****   
 523:src/main.cpp  ****   while (1);
 524:src/main.cpp  **** }
 525:src/main.cpp  **** 
 526:src/main.cpp  **** 
 527:src/main.cpp  **** void assert_failed(uint8_t* file, uint32_t line){
 4146              		.loc 13 527 0
 4147              		.cfi_startproc
 4148              		@ args = 0, pretend = 0, frame = 0
 4149              		@ frame_needed = 0, uses_anonymous_args = 0
 4150              	.LVL493:
 4151              		.loc 13 527 0
 4152 02ee 08B5     		push	{r3, lr}
 4153              		.save {r3, lr}
 4154              	.LCFI47:
 4155              		.cfi_def_cfa_offset 8
 4156              		.cfi_offset 3, -8
 4157              		.cfi_offset 14, -4
 4158              	.LVL494:
 4159              	.L221:
 528:src/main.cpp  ****   /* User can add his own implementation to report the file name and line number,
 529:src/main.cpp  ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 530:src/main.cpp  ****   /*char str[150];
 531:src/main.cpp  **** 
 532:src/main.cpp  ****   sprintf(str, "Wrong parameters value: file %s on line %u\r\n", file, (unsigned int)line);
 533:src/main.cpp  ****   nh.logerror(str);*/
 534:src/main.cpp  ****   while (1){
 535:src/main.cpp  ****     debug_toggle();
 4160              		.loc 13 535 0 discriminator 1
 4161 02f0 FFF7FEFF 		bl	debug_toggle
 4162              	.LVL495:
 536:src/main.cpp  ****     delay(100);
 4163              		.loc 13 536 0 discriminator 1
 4164 02f4 6420     		movs	r0, #100
 4165 02f6 FFF7FEFF 		bl	delay
 4166              	.LVL496:
 4167 02fa F9E7     		b	.L221
 4168              		.cfi_endproc
 4169              	.LFE1285:
 4170              		.fnend
 4172              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8getParamEPKcPfi,"ax
 4173              		.align	1
 4174              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8getParamEPKcPfi
 4175              		.thumb
 4176              		.thumb_func
 4178              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8getParamEPKcPfi:
 4179              		.fnstart
 4180              	.LFB1315:
 288:./lib/ros_lib/ros/node_handle.h **** 
 289:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 290:./lib/ros_lib/ros/node_handle.h ****        * Time functions
 291:./lib/ros_lib/ros/node_handle.h ****        */
 292:./lib/ros_lib/ros/node_handle.h **** 
 293:./lib/ros_lib/ros/node_handle.h ****       void requestSyncTime()
 294:./lib/ros_lib/ros/node_handle.h ****       {
 295:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 296:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_TIME, &t);
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 298:./lib/ros_lib/ros/node_handle.h ****       }
 299:./lib/ros_lib/ros/node_handle.h **** 
 300:./lib/ros_lib/ros/node_handle.h ****       void syncTime(uint8_t * data)
 301:./lib/ros_lib/ros/node_handle.h ****       {
 302:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 303:./lib/ros_lib/ros/node_handle.h ****         uint32_t offset = hardware_.time() - rt_time;
 304:./lib/ros_lib/ros/node_handle.h **** 
 305:./lib/ros_lib/ros/node_handle.h ****         t.deserialize(data);
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 308:./lib/ros_lib/ros/node_handle.h **** 
 309:./lib/ros_lib/ros/node_handle.h ****         this->setNow(t.data);
 310:./lib/ros_lib/ros/node_handle.h ****         last_sync_receive_time = hardware_.time();
 311:./lib/ros_lib/ros/node_handle.h ****       }
 312:./lib/ros_lib/ros/node_handle.h **** 
 313:./lib/ros_lib/ros/node_handle.h ****       Time now()
 314:./lib/ros_lib/ros/node_handle.h ****       {
 315:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 316:./lib/ros_lib/ros/node_handle.h ****         Time current_time;
 317:./lib/ros_lib/ros/node_handle.h ****         current_time.sec = ms/1000 + sec_offset;
 318:./lib/ros_lib/ros/node_handle.h ****         current_time.nsec = (ms%1000)*1000000UL + nsec_offset;
 319:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(current_time.sec, current_time.nsec);
 320:./lib/ros_lib/ros/node_handle.h ****         return current_time;
 321:./lib/ros_lib/ros/node_handle.h ****       }
 322:./lib/ros_lib/ros/node_handle.h **** 
 323:./lib/ros_lib/ros/node_handle.h ****       void setNow( Time & new_now )
 324:./lib/ros_lib/ros/node_handle.h ****       {
 325:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 326:./lib/ros_lib/ros/node_handle.h ****         sec_offset = new_now.sec - ms/1000 - 1;
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 329:./lib/ros_lib/ros/node_handle.h ****       }
 330:./lib/ros_lib/ros/node_handle.h **** 
 331:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 332:./lib/ros_lib/ros/node_handle.h ****        * Topic Management
 333:./lib/ros_lib/ros/node_handle.h ****        */
 334:./lib/ros_lib/ros/node_handle.h **** 
 335:./lib/ros_lib/ros/node_handle.h ****       /* Register a new publisher */
 336:./lib/ros_lib/ros/node_handle.h ****       bool advertise(Publisher & p)
 337:./lib/ros_lib/ros/node_handle.h ****       {
 338:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_PUBLISHERS; i++){
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 340:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 341:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 344:./lib/ros_lib/ros/node_handle.h ****           }
 345:./lib/ros_lib/ros/node_handle.h ****         }
 346:./lib/ros_lib/ros/node_handle.h ****         return false;
 347:./lib/ros_lib/ros/node_handle.h ****       }
 348:./lib/ros_lib/ros/node_handle.h **** 
 349:./lib/ros_lib/ros/node_handle.h ****       /* Register a new subscriber */
 350:./lib/ros_lib/ros/node_handle.h ****       template<typename MsgT>
 351:./lib/ros_lib/ros/node_handle.h ****       bool subscribe(Subscriber< MsgT> & s){
 352:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 357:./lib/ros_lib/ros/node_handle.h ****           }
 358:./lib/ros_lib/ros/node_handle.h ****         }
 359:./lib/ros_lib/ros/node_handle.h ****         return false;
 360:./lib/ros_lib/ros/node_handle.h ****       }
 361:./lib/ros_lib/ros/node_handle.h **** 
 362:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Server */
 363:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 364:./lib/ros_lib/ros/node_handle.h ****       bool advertiseService(ServiceServer<MReq,MRes>& srv){
 365:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 366:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 367:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 368:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 369:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 370:./lib/ros_lib/ros/node_handle.h ****             return v;
 371:./lib/ros_lib/ros/node_handle.h ****           }
 372:./lib/ros_lib/ros/node_handle.h ****         }
 373:./lib/ros_lib/ros/node_handle.h ****         return false;
 374:./lib/ros_lib/ros/node_handle.h ****       }
 375:./lib/ros_lib/ros/node_handle.h **** 
 376:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Client */
 377:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 378:./lib/ros_lib/ros/node_handle.h ****       bool serviceClient(ServiceClient<MReq, MRes>& srv){
 379:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 380:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 381:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 382:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 383:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 384:./lib/ros_lib/ros/node_handle.h ****             return v;
 385:./lib/ros_lib/ros/node_handle.h ****           }
 386:./lib/ros_lib/ros/node_handle.h ****         }
 387:./lib/ros_lib/ros/node_handle.h ****         return false;
 388:./lib/ros_lib/ros/node_handle.h ****       }
 389:./lib/ros_lib/ros/node_handle.h **** 
 390:./lib/ros_lib/ros/node_handle.h ****       void negotiateTopics()
 391:./lib/ros_lib/ros/node_handle.h ****       {
 392:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::TopicInfo ti;
 393:./lib/ros_lib/ros/node_handle.h ****         int i;
 394:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_PUBLISHERS; i++)
 395:./lib/ros_lib/ros/node_handle.h ****         {
 396:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] != 0) // non-empty slot
 397:./lib/ros_lib/ros/node_handle.h ****           {
 398:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = publishers[i]->id_;
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 404:./lib/ros_lib/ros/node_handle.h ****           }
 405:./lib/ros_lib/ros/node_handle.h ****         }
 406:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_SUBSCRIBERS; i++)
 407:./lib/ros_lib/ros/node_handle.h ****         {
 408:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] != 0) // non-empty slot
 409:./lib/ros_lib/ros/node_handle.h ****           {
 410:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = subscribers[i]->id_;
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 412:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 413:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 416:./lib/ros_lib/ros/node_handle.h ****           }
 417:./lib/ros_lib/ros/node_handle.h ****         }
 418:./lib/ros_lib/ros/node_handle.h ****         configured_ = true;
 419:./lib/ros_lib/ros/node_handle.h ****       }
 420:./lib/ros_lib/ros/node_handle.h **** 
 421:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg * msg)
 422:./lib/ros_lib/ros/node_handle.h ****       {
 423:./lib/ros_lib/ros/node_handle.h ****         if(id >= 100 && !configured_)
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 425:./lib/ros_lib/ros/node_handle.h **** 
 426:./lib/ros_lib/ros/node_handle.h ****         /* serialize message */
 427:./lib/ros_lib/ros/node_handle.h ****         uint16_t l = msg->serialize(message_out+7);
 428:./lib/ros_lib/ros/node_handle.h **** 
 429:./lib/ros_lib/ros/node_handle.h ****         /* setup the header */
 430:./lib/ros_lib/ros/node_handle.h ****         message_out[0] = 0xff;
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 434:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 437:./lib/ros_lib/ros/node_handle.h **** 
 438:./lib/ros_lib/ros/node_handle.h ****         /* calculate checksum */
 439:./lib/ros_lib/ros/node_handle.h ****         int chk = 0;
 440:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 443:./lib/ros_lib/ros/node_handle.h ****         message_out[l++] = 255 - (chk%256);
 444:./lib/ros_lib/ros/node_handle.h **** 
 445:./lib/ros_lib/ros/node_handle.h ****         if( l <= OUTPUT_SIZE ){
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 447:./lib/ros_lib/ros/node_handle.h ****           return l;
 448:./lib/ros_lib/ros/node_handle.h ****         }else{
 449:./lib/ros_lib/ros/node_handle.h ****           logerror("Message from device dropped: message larger than buffer.");
 450:./lib/ros_lib/ros/node_handle.h ****           return -1;
 451:./lib/ros_lib/ros/node_handle.h ****         }
 452:./lib/ros_lib/ros/node_handle.h ****       }
 453:./lib/ros_lib/ros/node_handle.h **** 
 454:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 455:./lib/ros_lib/ros/node_handle.h ****        * Logging
 456:./lib/ros_lib/ros/node_handle.h ****        */
 457:./lib/ros_lib/ros/node_handle.h **** 
 458:./lib/ros_lib/ros/node_handle.h ****     private:
 459:./lib/ros_lib/ros/node_handle.h ****       void log(char byte, const char * msg){
 460:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::Log l;
 461:./lib/ros_lib/ros/node_handle.h ****         l.level= byte;
 462:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 463:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 464:./lib/ros_lib/ros/node_handle.h ****       }
 465:./lib/ros_lib/ros/node_handle.h **** 
 466:./lib/ros_lib/ros/node_handle.h ****     public:
 467:./lib/ros_lib/ros/node_handle.h ****       void logdebug(const char* msg){
 468:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ROSDEBUG, msg);
 469:./lib/ros_lib/ros/node_handle.h ****       }
 470:./lib/ros_lib/ros/node_handle.h ****       void loginfo(const char * msg){
 471:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::INFO, msg);
 472:./lib/ros_lib/ros/node_handle.h ****       }
 473:./lib/ros_lib/ros/node_handle.h ****       void logwarn(const char *msg){
 474:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::WARN, msg);
 475:./lib/ros_lib/ros/node_handle.h ****       }
 476:./lib/ros_lib/ros/node_handle.h ****       void logerror(const char*msg){
 477:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ERROR, msg);
 478:./lib/ros_lib/ros/node_handle.h ****       }
 479:./lib/ros_lib/ros/node_handle.h ****       void logfatal(const char*msg){
 480:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::FATAL, msg);
 481:./lib/ros_lib/ros/node_handle.h ****       }
 482:./lib/ros_lib/ros/node_handle.h **** 
 483:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 484:./lib/ros_lib/ros/node_handle.h ****        * Parameters
 485:./lib/ros_lib/ros/node_handle.h ****        */
 486:./lib/ros_lib/ros/node_handle.h **** 
 487:./lib/ros_lib/ros/node_handle.h ****     private:
 488:./lib/ros_lib/ros/node_handle.h ****       bool param_recieved;
 489:./lib/ros_lib/ros/node_handle.h ****       rosserial_msgs::RequestParamResponse req_param_resp;
 490:./lib/ros_lib/ros/node_handle.h **** 
 491:./lib/ros_lib/ros/node_handle.h ****       bool requestParam(const char * name, int time_out =  1000){
 492:./lib/ros_lib/ros/node_handle.h ****         param_recieved = false;
 493:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::RequestParamRequest req;
 494:./lib/ros_lib/ros/node_handle.h ****         req.name  = (char*)name;
 495:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_PARAMETER_REQUEST, &req);
 496:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 497:./lib/ros_lib/ros/node_handle.h ****         while(!param_recieved ){
 498:./lib/ros_lib/ros/node_handle.h ****           spinOnce();
 499:./lib/ros_lib/ros/node_handle.h ****           if (hardware_.time() > end_time) return false;
 500:./lib/ros_lib/ros/node_handle.h ****         }
 501:./lib/ros_lib/ros/node_handle.h ****         return true;
 502:./lib/ros_lib/ros/node_handle.h ****       }
 503:./lib/ros_lib/ros/node_handle.h **** 
 504:./lib/ros_lib/ros/node_handle.h ****     public:
 505:./lib/ros_lib/ros/node_handle.h ****       bool getParam(const char* name, int* param, int length =1){
 506:./lib/ros_lib/ros/node_handle.h ****         if (requestParam(name) ){
 507:./lib/ros_lib/ros/node_handle.h ****           if (length == req_param_resp.ints_length){
 508:./lib/ros_lib/ros/node_handle.h ****             //copy it over
 509:./lib/ros_lib/ros/node_handle.h ****             for(int i=0; i<length; i++)
 510:./lib/ros_lib/ros/node_handle.h ****               param[i] = req_param_resp.ints[i];
 511:./lib/ros_lib/ros/node_handle.h ****             return true;
 512:./lib/ros_lib/ros/node_handle.h ****           }
 513:./lib/ros_lib/ros/node_handle.h ****         }
 514:./lib/ros_lib/ros/node_handle.h ****         return false;
 515:./lib/ros_lib/ros/node_handle.h ****       }
 516:./lib/ros_lib/ros/node_handle.h ****       bool getParam(const char* name, float* param, int length=1){
 4181              		.loc 11 516 0
 4182              		.cfi_startproc
 4183              		@ args = 0, pretend = 0, frame = 8
 4184              		@ frame_needed = 0, uses_anonymous_args = 0
 4185              	.LVL497:
 4186 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 4187              		.save {r4, r5, r6, r7, r8, lr}
 4188              		.pad #8
 4189              	.LCFI48:
 4190              		.cfi_def_cfa_offset 32
 4191              		.cfi_offset 4, -24
 4192              		.cfi_offset 5, -20
 4193              		.cfi_offset 6, -16
 4194              		.cfi_offset 7, -12
 4195              		.cfi_offset 8, -8
 4196              		.cfi_offset 14, -4
 4197              		.loc 11 516 0
 4198 0004 9846     		mov	r8, r3
 4199              	.LBB290:
 4200              	.LBB291:
 4201              	.LBB292:
 492:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::RequestParamRequest req;
 4202              		.loc 11 492 0
 4203 0006 0023     		movs	r3, #0
 4204              	.LVL498:
 4205 0008 80F80439 		strb	r3, [r0, #2308]
 4206              	.LVL499:
 4207              	.LBB293:
 4208              	.LBB294:
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 4209              		.loc 4 19 0
 4210 000c 174B     		ldr	r3, .L231
 4211              	.LBE294:
 4212              	.LBE293:
 494:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_PARAMETER_REQUEST, &req);
 4213              		.loc 11 494 0
 4214 000e 0191     		str	r1, [sp, #4]
 4215              	.LBB296:
 4216              	.LBB295:
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 4217              		.loc 4 19 0
 4218 0010 0093     		str	r3, [sp]
 4219              	.LVL500:
 4220              	.LBE295:
 4221              	.LBE296:
 495:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 4222              		.loc 11 495 0
 4223 0012 0368     		ldr	r3, [r0]
 4224 0014 0621     		movs	r1, #6
 4225              	.LVL501:
 4226 0016 1B68     		ldr	r3, [r3]
 4227              	.LBE292:
 4228              	.LBE291:
 4229              	.LBE290:
 4230              		.loc 11 516 0
 4231 0018 1746     		mov	r7, r2
 4232              	.LBB306:
 4233              	.LBB303:
 4234              	.LBB301:
 495:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 4235              		.loc 11 495 0
 4236 001a 6A46     		mov	r2, sp
 4237              	.LVL502:
 4238              	.LBE301:
 4239              	.LBE303:
 4240              	.LBE306:
 4241              		.loc 11 516 0
 4242 001c 0446     		mov	r4, r0
 4243              	.LBB307:
 4244              	.LBB304:
 4245              	.LBB302:
 495:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 4246              		.loc 11 495 0
 4247 001e 9847     		blx	r3
 4248              	.LVL503:
 4249              	.LBB297:
 4250              	.LBB298:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 4251              		.loc 15 138 0
 4252 0020 FFF7FEFF 		bl	millis
 4253              	.LVL504:
 4254              	.LBE298:
 4255              	.LBE297:
 496:./lib/ros_lib/ros/node_handle.h ****         while(!param_recieved ){
 4256              		.loc 11 496 0
 4257 0024 00F57A70 		add	r0, r0, #1000
 4258 0028 86B2     		uxth	r6, r0
 4259              	.LVL505:
 4260              	.L224:
 497:./lib/ros_lib/ros/node_handle.h ****           spinOnce();
 4261              		.loc 11 497 0
 4262 002a 94F80459 		ldrb	r5, [r4, #2308]	@ zero_extendqisi2
 4263 002e 45B9     		cbnz	r5, .L228
 498:./lib/ros_lib/ros/node_handle.h ****           if (hardware_.time() > end_time) return false;
 4264              		.loc 11 498 0
 4265 0030 2368     		ldr	r3, [r4]
 4266 0032 2046     		mov	r0, r4
 4267 0034 5B68     		ldr	r3, [r3, #4]
 4268 0036 9847     		blx	r3
 4269              	.LVL506:
 4270              	.LBB299:
 4271              	.LBB300:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 4272              		.loc 15 138 0
 4273 0038 FFF7FEFF 		bl	millis
 4274              	.LVL507:
 4275              	.LBE300:
 4276              	.LBE299:
 499:./lib/ros_lib/ros/node_handle.h ****         }
 4277              		.loc 11 499 0
 4278 003c B042     		cmp	r0, r6
 4279 003e F4D9     		bls	.L224
 4280 0040 0FE0     		b	.L225
 4281              	.LVL508:
 4282              	.L228:
 4283              	.LBE302:
 4284              	.LBE304:
 4285              	.LBB305:
 517:./lib/ros_lib/ros/node_handle.h ****         if (requestParam(name) ){
 518:./lib/ros_lib/ros/node_handle.h ****           if (length == req_param_resp.floats_length){
 4286              		.loc 11 518 0
 4287 0042 94F81829 		ldrb	r2, [r4, #2328]	@ zero_extendqisi2
 4288 0046 4245     		cmp	r2, r8
 4289 0048 0AD1     		bne	.L227
 4290 004a 0023     		movs	r3, #0
 4291              	.L226:
 4292              	.LVL509:
 4293              	.LBE305:
 4294              	.LBE307:
 4295              	.LBB308:
 4296              	.LBB309:
 519:./lib/ros_lib/ros/node_handle.h ****             //copy it over
 520:./lib/ros_lib/ros/node_handle.h ****             for(int i=0; i<length; i++)
 4297              		.loc 11 520 0
 4298 004c 9342     		cmp	r3, r2
 4299 004e 08DA     		bge	.L225
 521:./lib/ros_lib/ros/node_handle.h ****               param[i] = req_param_resp.floats[i];
 4300              		.loc 11 521 0
 4301 0050 D4F82019 		ldr	r1, [r4, #2336]
 4302 0054 51F82310 		ldr	r1, [r1, r3, lsl #2]	@ float
 4303 0058 47F82310 		str	r1, [r7, r3, lsl #2]	@ float
 520:./lib/ros_lib/ros/node_handle.h ****               param[i] = req_param_resp.floats[i];
 4304              		.loc 11 520 0
 4305 005c 0133     		adds	r3, r3, #1
 4306              	.LVL510:
 4307 005e F5E7     		b	.L226
 4308              	.LVL511:
 4309              	.L227:
 4310              	.LBE309:
 4311              	.LBE308:
 522:./lib/ros_lib/ros/node_handle.h ****             return true;
 523:./lib/ros_lib/ros/node_handle.h ****           }
 524:./lib/ros_lib/ros/node_handle.h ****         }
 525:./lib/ros_lib/ros/node_handle.h ****         return false;
 4312              		.loc 11 525 0
 4313 0060 0025     		movs	r5, #0
 4314              	.L225:
 526:./lib/ros_lib/ros/node_handle.h ****       }
 4315              		.loc 11 526 0
 4316 0062 2846     		mov	r0, r5
 4317 0064 02B0     		add	sp, sp, #8
 4318              	.LCFI49:
 4319              		.cfi_def_cfa_offset 24
 4320              		@ sp needed
 4321 0066 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4322              	.LVL512:
 4323              	.L232:
 4324 006a 00BF     		.align	2
 4325              	.L231:
 4326 006c 08000000 		.word	_ZTVN14rosserial_msgs19RequestParamRequestE+8
 4327              		.cfi_endproc
 4328              	.LFE1315:
 4329              		.fnend
 4331              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8logerrorEPKc,"axG",
 4332              		.align	1
 4333              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8logerrorEPKc
 4334              		.thumb
 4335              		.thumb_func
 4337              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8logerrorEPKc:
 4338              		.fnstart
 4339              	.LFB1316:
 476:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ERROR, msg);
 4340              		.loc 11 476 0
 4341              		.cfi_startproc
 4342              		@ args = 0, pretend = 0, frame = 16
 4343              		@ frame_needed = 0, uses_anonymous_args = 0
 4344              	.LVL513:
 4345 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 4346              		.save {lr}
 4347              		.pad #20
 4348              	.LCFI50:
 4349              		.cfi_def_cfa_offset 24
 4350              		.cfi_offset 14, -4
 4351              	.LVL514:
 4352              	.LBB316:
 4353              	.LBB317:
 4354              	.LBB318:
 4355              	.LBB319:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 4356              		.loc 3 25 0
 4357 0002 074B     		ldr	r3, .L234
 4358              	.LBE319:
 4359              	.LBE318:
 462:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4360              		.loc 11 462 0
 4361 0004 0391     		str	r1, [sp, #12]
 4362              	.LBB321:
 4363              	.LBB320:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 4364              		.loc 3 25 0
 4365 0006 0193     		str	r3, [sp, #4]
 4366              	.LVL515:
 4367              	.LBE320:
 4368              	.LBE321:
 461:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 4369              		.loc 11 461 0
 4370 0008 0323     		movs	r3, #3
 4371 000a 8DF80830 		strb	r3, [sp, #8]
 463:./lib/ros_lib/ros/node_handle.h ****       }
 4372              		.loc 11 463 0
 4373 000e 0368     		ldr	r3, [r0]
 4374 0010 01AA     		add	r2, sp, #4
 4375 0012 1B68     		ldr	r3, [r3]
 4376 0014 0721     		movs	r1, #7
 4377              	.LVL516:
 4378 0016 9847     		blx	r3
 4379              	.LVL517:
 4380              	.LBE317:
 4381              	.LBE316:
 478:./lib/ros_lib/ros/node_handle.h ****       void logfatal(const char*msg){
 4382              		.loc 11 478 0
 4383 0018 05B0     		add	sp, sp, #20
 4384              	.LCFI51:
 4385              		.cfi_def_cfa_offset 4
 4386              		@ sp needed
 4387 001a 5DF804FB 		ldr	pc, [sp], #4
 4388              	.L235:
 4389 001e 00BF     		.align	2
 4390              	.L234:
 4391 0020 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 4392              		.cfi_endproc
 4393              	.LFE1316:
 4394              		.fnend
 4396              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE
 4397              		.align	1
 4398              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE
 4399              		.thumb
 4400              		.thumb_func
 4402              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:
 4403              		.fnstart
 4404              	.LFB1328:
 421:./lib/ros_lib/ros/node_handle.h ****       {
 4405              		.loc 11 421 0
 4406              		.cfi_startproc
 4407              		@ args = 0, pretend = 0, frame = 0
 4408              		@ frame_needed = 0, uses_anonymous_args = 0
 4409              	.LVL518:
 423:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 4410              		.loc 11 423 0
 4411 0000 6329     		cmp	r1, #99
 421:./lib/ros_lib/ros/node_handle.h ****       {
 4412              		.loc 11 421 0
 4413 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4414              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 4415              	.LCFI52:
 4416              		.cfi_def_cfa_offset 32
 4417              		.cfi_offset 3, -32
 4418              		.cfi_offset 4, -28
 4419              		.cfi_offset 5, -24
 4420              		.cfi_offset 6, -20
 4421              		.cfi_offset 7, -16
 4422              		.cfi_offset 8, -12
 4423              		.cfi_offset 9, -8
 4424              		.cfi_offset 14, -4
 421:./lib/ros_lib/ros/node_handle.h ****       {
 4425              		.loc 11 421 0
 4426 0006 0446     		mov	r4, r0
 4427 0008 0E46     		mov	r6, r1
 423:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 4428              		.loc 11 423 0
 4429 000a 03DD     		ble	.L237
 423:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 4430              		.loc 11 423 0 is_stmt 0 discriminator 1
 4431 000c 90F8F458 		ldrb	r5, [r0, #2292]	@ zero_extendqisi2
 4432 0010 002D     		cmp	r5, #0
 4433 0012 4FD0     		beq	.L238
 4434              	.L237:
 427:./lib/ros_lib/ros/node_handle.h **** 
 4435              		.loc 11 427 0 is_stmt 1
 4436 0014 1368     		ldr	r3, [r2]
 4437 0016 04F21F41 		addw	r1, r4, #1055
 4438              	.LVL519:
 4439 001a 1B68     		ldr	r3, [r3]
 4440 001c 1046     		mov	r0, r2
 4441              	.LVL520:
 4442 001e 9847     		blx	r3
 4443              	.LVL521:
 430:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 4444              		.loc 11 430 0
 4445 0020 FF22     		movs	r2, #255
 4446 0022 84F81824 		strb	r2, [r4, #1048]
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 4447              		.loc 11 431 0
 4448 0026 FE22     		movs	r2, #254
 427:./lib/ros_lib/ros/node_handle.h **** 
 4449              		.loc 11 427 0
 4450 0028 83B2     		uxth	r3, r0
 4451              	.LVL522:
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 4452              		.loc 11 431 0
 4453 002a 84F81924 		strb	r2, [r4, #1049]
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 4454              		.loc 11 432 0
 4455 002e C2B2     		uxtb	r2, r0
 433:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 4456              		.loc 11 433 0
 4457 0030 C0F30720 		ubfx	r0, r0, #8, #8
 4458 0034 84F81B04 		strb	r0, [r4, #1051]
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 4459              		.loc 11 434 0
 4460 0038 1044     		add	r0, r0, r2
 4461 003a C043     		mvns	r0, r0
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 4462              		.loc 11 435 0
 4463 003c 84F81D64 		strb	r6, [r4, #1053]
 436:./lib/ros_lib/ros/node_handle.h **** 
 4464              		.loc 11 436 0
 4465 0040 46F30726 		sbfx	r6, r6, #8, #8
 4466              	.LVL523:
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 4467              		.loc 11 432 0
 4468 0044 84F81A24 		strb	r2, [r4, #1050]
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 4469              		.loc 11 434 0
 4470 0048 84F81C04 		strb	r0, [r4, #1052]
 436:./lib/ros_lib/ros/node_handle.h **** 
 4471              		.loc 11 436 0
 4472 004c 84F81E64 		strb	r6, [r4, #1054]
 4473              	.LVL524:
 4474 0050 04F21C40 		addw	r0, r4, #1052
 4475              	.LBB326:
 440:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 4476              		.loc 11 440 0
 4477 0054 0521     		movs	r1, #5
 4478              	.LBE326:
 439:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 4479              		.loc 11 439 0
 4480 0056 0022     		movs	r2, #0
 4481              	.LBB327:
 440:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 4482              		.loc 11 440 0
 4483 0058 9E1D     		adds	r6, r3, #6
 4484              	.LVL525:
 4485              	.L240:
 440:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 4486              		.loc 11 440 0 is_stmt 0 discriminator 3
 4487 005a B142     		cmp	r1, r6
 4488 005c 04DC     		bgt	.L239
 441:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 4489              		.loc 11 441 0 is_stmt 1 discriminator 2
 4490 005e 10F8015F 		ldrb	r5, [r0, #1]!	@ zero_extendqisi2
 440:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 4491              		.loc 11 440 0 discriminator 2
 4492 0062 0131     		adds	r1, r1, #1
 4493              	.LVL526:
 441:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 4494              		.loc 11 441 0 discriminator 2
 4495 0064 2A44     		add	r2, r2, r5
 4496              	.LVL527:
 440:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 4497              		.loc 11 440 0 discriminator 2
 4498 0066 F8E7     		b	.L240
 4499              	.L239:
 4500              	.LVL528:
 4501              	.LBE327:
 443:./lib/ros_lib/ros/node_handle.h **** 
 4502              		.loc 11 443 0
 4503 0068 D243     		mvns	r2, r2
 4504              	.LVL529:
 4505 006a 03F10806 		add	r6, r3, #8
 4506 006e 0733     		adds	r3, r3, #7
 4507              	.LVL530:
 4508 0070 B6B2     		uxth	r6, r6
 4509              	.LVL531:
 4510 0072 9BB2     		uxth	r3, r3
 4511 0074 2344     		add	r3, r3, r4
 445:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 4512              		.loc 11 445 0
 4513 0076 B6F5806F 		cmp	r6, #1024
 443:./lib/ros_lib/ros/node_handle.h **** 
 4514              		.loc 11 443 0
 4515 007a 83F81824 		strb	r2, [r3, #1048]
 445:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 4516              		.loc 11 445 0
 4517 007e 13D8     		bhi	.L241
 446:./lib/ros_lib/ros/node_handle.h ****           return l;
 4518              		.loc 11 446 0
 4519 0080 04F58368 		add	r8, r4, #1048
 4520 0084 3546     		mov	r5, r6
 4521              	.LVL532:
 4522 0086 4746     		mov	r7, r8
 4523              	.LBB328:
 4524              	.LBB329:
 132:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 4525              		.loc 15 132 0
 4526 0088 DFF83490 		ldr	r9, .L248+4
 4527              	.LVL533:
 4528              	.L243:
 131:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 4529              		.loc 15 131 0
 4530 008c C8EB0703 		rsb	r3, r8, r7
 4531 0090 9E42     		cmp	r6, r3
 4532 0092 0FDD     		ble	.L238
 4533              	.L246:
 132:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 4534              		.loc 15 132 0
 4535 0094 B9F80030 		ldrh	r3, [r9]
 4536 0098 5B06     		lsls	r3, r3, #25
 4537 009a FBD5     		bpl	.L246
 133:./lib/ros_lib/ArduinoHardware.h ****       }
 4538              		.loc 15 133 0
 4539 009c 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 4540              	.LVL534:
 4541 00a0 6068     		ldr	r0, [r4, #4]
 4542 00a2 FFF7FEFF 		bl	USART_SendData
 4543              	.LVL535:
 4544 00a6 F1E7     		b	.L243
 4545              	.LVL536:
 4546              	.L241:
 4547              	.LBE329:
 4548              	.LBE328:
 449:./lib/ros_lib/ros/node_handle.h ****           return -1;
 4549              		.loc 11 449 0
 4550 00a8 0449     		ldr	r1, .L248
 4551              	.LVL537:
 4552 00aa 2046     		mov	r0, r4
 4553 00ac FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8logerrorEPKc
 4554              	.LVL538:
 450:./lib/ros_lib/ros/node_handle.h ****         }
 4555              		.loc 11 450 0
 4556 00b0 4FF0FF35 		mov	r5, #-1
 4557              	.LVL539:
 4558              	.L238:
 452:./lib/ros_lib/ros/node_handle.h **** 
 4559              		.loc 11 452 0
 4560 00b4 2846     		mov	r0, r5
 4561 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4562              	.LVL540:
 4563              	.L249:
 4564 00ba 00BF     		.align	2
 4565              	.L248:
 4566 00bc 2E020000 		.word	.LC22
 4567 00c0 00380140 		.word	1073821696
 4568              		.cfi_endproc
 4569              	.LFE1328:
 4570              		.fnend
 4572              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv,
 4573              		.align	1
 4574              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
 4575              		.thumb
 4576              		.thumb_func
 4578              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:
 4579              		.fnstart
 4580              	.LFB1325:
 293:./lib/ros_lib/ros/node_handle.h ****       {
 4581              		.loc 11 293 0
 4582              		.cfi_startproc
 4583              		@ args = 0, pretend = 0, frame = 16
 4584              		@ frame_needed = 0, uses_anonymous_args = 0
 4585              	.LVL541:
 4586 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 4587              		.save {r4, lr}
 4588              		.pad #16
 4589              	.LCFI53:
 4590              		.cfi_def_cfa_offset 24
 4591              		.cfi_offset 4, -8
 4592              		.cfi_offset 14, -4
 4593              	.LVL542:
 4594              	.LBB330:
 4595              	.LBB331:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4596              		.loc 1 19 0
 4597 0002 084B     		ldr	r3, .L251
 4598              	.LBE331:
 4599              	.LBE330:
 296:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4600              		.loc 11 296 0
 4601 0004 01AA     		add	r2, sp, #4
 4602              	.LVL543:
 4603              	.LBB335:
 4604              	.LBB334:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4605              		.loc 1 19 0
 4606 0006 0193     		str	r3, [sp, #4]
 4607              	.LVL544:
 4608              	.LBB332:
 4609              	.LBB333:
 4610              		.file 17 "./lib/ros_lib/ros/time.h"
   1:./lib/ros_lib/ros/time.h **** /*
   2:./lib/ros_lib/ros/time.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/time.h ****  *
   4:./lib/ros_lib/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/time.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/time.h ****  *
   7:./lib/ros_lib/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/time.h ****  * are met:
  10:./lib/ros_lib/ros/time.h ****  *
  11:./lib/ros_lib/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/time.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/time.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/time.h ****  *
  21:./lib/ros_lib/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/time.h ****  */
  34:./lib/ros_lib/ros/time.h **** 
  35:./lib/ros_lib/ros/time.h **** #ifndef ROS_TIME_H_
  36:./lib/ros_lib/ros/time.h **** #define ROS_TIME_H_
  37:./lib/ros_lib/ros/time.h **** 
  38:./lib/ros_lib/ros/time.h **** #include <math.h>
  39:./lib/ros_lib/ros/time.h **** #include <stdint.h>
  40:./lib/ros_lib/ros/time.h **** 
  41:./lib/ros_lib/ros/time.h **** #include "ros/duration.h"
  42:./lib/ros_lib/ros/time.h **** 
  43:./lib/ros_lib/ros/time.h **** namespace ros
  44:./lib/ros_lib/ros/time.h **** {
  45:./lib/ros_lib/ros/time.h ****   void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  46:./lib/ros_lib/ros/time.h **** 
  47:./lib/ros_lib/ros/time.h ****   class Time
  48:./lib/ros_lib/ros/time.h ****   {
  49:./lib/ros_lib/ros/time.h ****     public:
  50:./lib/ros_lib/ros/time.h ****       uint32_t sec, nsec;
  51:./lib/ros_lib/ros/time.h **** 
  52:./lib/ros_lib/ros/time.h ****       Time() : sec(0), nsec(0) {}
 4611              		.loc 17 52 0
 4612 0008 0023     		movs	r3, #0
 4613 000a 0293     		str	r3, [sp, #8]
 4614 000c 0393     		str	r3, [sp, #12]
 4615              	.LVL545:
 4616              	.LBE333:
 4617              	.LBE332:
 4618              	.LBE334:
 4619              	.LBE335:
 296:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4620              		.loc 11 296 0
 4621 000e 0368     		ldr	r3, [r0]
 4622 0010 0A21     		movs	r1, #10
 4623 0012 1B68     		ldr	r3, [r3]
 293:./lib/ros_lib/ros/node_handle.h ****       {
 4624              		.loc 11 293 0
 4625 0014 0446     		mov	r4, r0
 296:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4626              		.loc 11 296 0
 4627 0016 9847     		blx	r3
 4628              	.LVL546:
 4629              	.LBB336:
 4630              	.LBB337:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 4631              		.loc 15 138 0
 4632 0018 FFF7FEFF 		bl	millis
 4633              	.LVL547:
 4634              	.LBE337:
 4635              	.LBE336:
 297:./lib/ros_lib/ros/node_handle.h ****       }
 4636              		.loc 11 297 0
 4637 001c E060     		str	r0, [r4, #12]
 298:./lib/ros_lib/ros/node_handle.h **** 
 4638              		.loc 11 298 0
 4639 001e 04B0     		add	sp, sp, #16
 4640              	.LCFI54:
 4641              		.cfi_def_cfa_offset 8
 4642              		@ sp needed
 4643 0020 10BD     		pop	{r4, pc}
 4644              	.LVL548:
 4645              	.L252:
 4646 0022 00BF     		.align	2
 4647              	.L251:
 4648 0024 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4649              		.cfi_endproc
 4650              	.LFE1325:
 4651              		.fnend
 4653              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv,
 4654              		.align	1
 4655              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv
 4656              		.thumb
 4657              		.thumb_func
 4659              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:
 4660              		.fnstart
 4661              	.LFB1326:
 390:./lib/ros_lib/ros/node_handle.h ****       {
 4662              		.loc 11 390 0
 4663              		.cfi_startproc
 4664              		@ args = 0, pretend = 0, frame = 24
 4665              		@ frame_needed = 0, uses_anonymous_args = 0
 4666              	.LVL549:
 4667 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4668              		.save {r4, r5, r6, r7, r8, lr}
 4669              	.LCFI55:
 4670              		.cfi_def_cfa_offset 24
 4671              		.cfi_offset 4, -24
 4672              		.cfi_offset 5, -20
 4673              		.cfi_offset 6, -16
 4674              		.cfi_offset 7, -12
 4675              		.cfi_offset 8, -8
 4676              		.cfi_offset 14, -4
 4677 0004 0446     		mov	r4, r0
 4678              	.LBB343:
 4679              	.LBB344:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 4680              		.loc 2 34 0
 4681 0006 2B4B     		ldr	r3, .L266
 4682              	.LBE344:
 4683              	.LBE343:
 390:./lib/ros_lib/ros/node_handle.h ****       {
 4684              		.loc 11 390 0
 4685              		.pad #24
 4686 0008 86B0     		sub	sp, sp, #24
 4687              	.LCFI56:
 4688              		.cfi_def_cfa_offset 48
 4689              	.LVL550:
 4690              	.LBB346:
 4691              	.LBB345:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 4692              		.loc 2 34 0
 4693 000a 0093     		str	r3, [sp]
 4694 000c 2A4B     		ldr	r3, .L266+4
 4695 000e 0022     		movs	r2, #0
 4696 0010 ADF80420 		strh	r2, [sp, #4]	@ movhi
 4697 0014 0293     		str	r3, [sp, #8]
 4698 0016 0393     		str	r3, [sp, #12]
 4699 0018 0493     		str	r3, [sp, #16]
 4700 001a 0592     		str	r2, [sp, #20]
 4701              	.LVL551:
 4702 001c 00F61406 		addw	r6, r0, #2068
 4703 0020 00F67805 		addw	r5, r0, #2168
 4704              	.LBE345:
 4705              	.LBE346:
 402:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 4706              		.loc 11 402 0
 4707 0024 4FF48067 		mov	r7, #1024
 4708              	.LVL552:
 4709              	.L255:
 396:./lib/ros_lib/ros/node_handle.h ****           {
 4710              		.loc 11 396 0
 4711 0028 56F8043F 		ldr	r3, [r6, #4]!
 4712 002c BBB1     		cbz	r3, .L254
 398:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 4713              		.loc 11 398 0
 4714 002e 9A68     		ldr	r2, [r3, #8]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4715              		.loc 11 400 0
 4716 0030 5868     		ldr	r0, [r3, #4]
 398:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 4717              		.loc 11 398 0
 4718 0032 ADF80420 		strh	r2, [sp, #4]	@ movhi
 399:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 4719              		.loc 11 399 0
 4720 0036 1A68     		ldr	r2, [r3]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4721              		.loc 11 400 0
 4722 0038 0368     		ldr	r3, [r0]
 399:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 4723              		.loc 11 399 0
 4724 003a 0292     		str	r2, [sp, #8]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4725              		.loc 11 400 0
 4726 003c 9B68     		ldr	r3, [r3, #8]
 4727 003e 9847     		blx	r3
 4728              	.LVL553:
 401:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4729              		.loc 11 401 0
 4730 0040 3368     		ldr	r3, [r6]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4731              		.loc 11 400 0
 4732 0042 0390     		str	r0, [sp, #12]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4733              		.loc 11 401 0
 4734 0044 5868     		ldr	r0, [r3, #4]
 4735 0046 0368     		ldr	r3, [r0]
 4736 0048 DB68     		ldr	r3, [r3, #12]
 4737 004a 9847     		blx	r3
 4738              	.LVL554:
 4739 004c 3168     		ldr	r1, [r6]
 403:./lib/ros_lib/ros/node_handle.h ****           }
 4740              		.loc 11 403 0
 4741 004e 2368     		ldr	r3, [r4]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4742              		.loc 11 401 0
 4743 0050 0490     		str	r0, [sp, #16]
 402:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 4744              		.loc 11 402 0
 4745 0052 0597     		str	r7, [sp, #20]
 4746              	.LVL555:
 403:./lib/ros_lib/ros/node_handle.h ****           }
 4747              		.loc 11 403 0
 4748 0054 1B68     		ldr	r3, [r3]
 4749 0056 6A46     		mov	r2, sp
 4750 0058 0969     		ldr	r1, [r1, #16]
 4751              	.LVL556:
 4752 005a 2046     		mov	r0, r4
 4753 005c 9847     		blx	r3
 4754              	.LVL557:
 4755              	.L254:
 394:./lib/ros_lib/ros/node_handle.h ****         {
 4756              		.loc 11 394 0 discriminator 2
 4757 005e AE42     		cmp	r6, r5
 4758 0060 E2D1     		bne	.L255
 4759 0062 04F6DC06 		addw	r6, r4, #2268
 414:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 4760              		.loc 11 414 0
 4761 0066 4FF48067 		mov	r7, #1024
 4762              	.L257:
 408:./lib/ros_lib/ros/node_handle.h ****           {
 4763              		.loc 11 408 0
 4764 006a 55F8040F 		ldr	r0, [r5, #4]!
 4765 006e C8B1     		cbz	r0, .L256
 410:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 4766              		.loc 11 410 0
 4767 0070 4368     		ldr	r3, [r0, #4]
 4768 0072 ADF80430 		strh	r3, [sp, #4]	@ movhi
 411:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 4769              		.loc 11 411 0
 4770 0076 8368     		ldr	r3, [r0, #8]
 4771 0078 0293     		str	r3, [sp, #8]
 412:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 4772              		.loc 11 412 0
 4773 007a 0368     		ldr	r3, [r0]
 4774 007c 9B68     		ldr	r3, [r3, #8]
 4775 007e 9847     		blx	r3
 4776              	.LVL558:
 4777 0080 0390     		str	r0, [sp, #12]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 4778              		.loc 11 413 0
 4779 0082 2868     		ldr	r0, [r5]
 4780 0084 0368     		ldr	r3, [r0]
 4781 0086 DB68     		ldr	r3, [r3, #12]
 4782 0088 9847     		blx	r3
 4783              	.LVL559:
 415:./lib/ros_lib/ros/node_handle.h ****           }
 4784              		.loc 11 415 0
 4785 008a 2368     		ldr	r3, [r4]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 4786              		.loc 11 413 0
 4787 008c 0490     		str	r0, [sp, #16]
 415:./lib/ros_lib/ros/node_handle.h ****           }
 4788              		.loc 11 415 0
 4789 008e 2868     		ldr	r0, [r5]
 4790 0090 D3F80080 		ldr	r8, [r3]
 4791 0094 0368     		ldr	r3, [r0]
 414:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 4792              		.loc 11 414 0
 4793 0096 0597     		str	r7, [sp, #20]
 415:./lib/ros_lib/ros/node_handle.h ****           }
 4794              		.loc 11 415 0
 4795 0098 5B68     		ldr	r3, [r3, #4]
 4796 009a 9847     		blx	r3
 4797              	.LVL560:
 4798 009c 6A46     		mov	r2, sp
 4799 009e 0146     		mov	r1, r0
 4800 00a0 2046     		mov	r0, r4
 4801 00a2 C047     		blx	r8
 4802              	.LVL561:
 4803              	.L256:
 406:./lib/ros_lib/ros/node_handle.h ****         {
 4804              		.loc 11 406 0 discriminator 2
 4805 00a4 AE42     		cmp	r6, r5
 4806 00a6 E0D1     		bne	.L257
 418:./lib/ros_lib/ros/node_handle.h ****       }
 4807              		.loc 11 418 0
 4808 00a8 0123     		movs	r3, #1
 4809 00aa 84F8F438 		strb	r3, [r4, #2292]
 419:./lib/ros_lib/ros/node_handle.h **** 
 4810              		.loc 11 419 0
 4811 00ae 06B0     		add	sp, sp, #24
 4812              	.LCFI57:
 4813              		.cfi_def_cfa_offset 24
 4814              	.LVL562:
 4815              		@ sp needed
 4816 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4817              	.LVL563:
 4818              	.L267:
 4819              		.align	2
 4820              	.L266:
 4821 00b4 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 4822 00b8 67020000 		.word	.LC23
 4823              		.cfi_endproc
 4824              	.LFE1326:
 4825              		.fnend
 4827              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh,"axG",%
 4828              		.align	1
 4829              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh
 4830              		.thumb
 4831              		.thumb_func
 4833              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:
 4834              		.fnstart
 4835              	.LFB1327:
 300:./lib/ros_lib/ros/node_handle.h ****       {
 4836              		.loc 11 300 0
 4837              		.cfi_startproc
 4838              		@ args = 0, pretend = 0, frame = 16
 4839              		@ frame_needed = 0, uses_anonymous_args = 0
 4840              	.LVL564:
 4841 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 4842              		.save {r4, r5, r6, lr}
 4843              		.pad #16
 4844              	.LCFI58:
 4845              		.cfi_def_cfa_offset 32
 4846              		.cfi_offset 4, -16
 4847              		.cfi_offset 5, -12
 4848              		.cfi_offset 6, -8
 4849              		.cfi_offset 14, -4
 4850              	.LVL565:
 4851              	.LBB361:
 4852              	.LBB362:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4853              		.loc 1 19 0
 4854 0002 1C4B     		ldr	r3, .L269
 4855              	.LBE362:
 4856              	.LBE361:
 300:./lib/ros_lib/ros/node_handle.h ****       {
 4857              		.loc 11 300 0
 4858 0004 0446     		mov	r4, r0
 4859              	.LBB366:
 4860              	.LBB365:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4861              		.loc 1 19 0
 4862 0006 0193     		str	r3, [sp, #4]
 4863              	.LVL566:
 4864              	.LBB363:
 4865              	.LBB364:
 4866              		.loc 17 52 0
 4867 0008 0023     		movs	r3, #0
 4868 000a 0293     		str	r3, [sp, #8]
 4869 000c 0393     		str	r3, [sp, #12]
 4870              	.LVL567:
 4871              	.LBE364:
 4872              	.LBE363:
 4873              	.LBE365:
 4874              	.LBE366:
 300:./lib/ros_lib/ros/node_handle.h ****       {
 4875              		.loc 11 300 0
 4876 000e 0D46     		mov	r5, r1
 4877              	.LBB367:
 4878              	.LBB368:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 4879              		.loc 15 138 0
 4880 0010 FFF7FEFF 		bl	millis
 4881              	.LVL568:
 4882              	.LBE368:
 4883              	.LBE367:
 303:./lib/ros_lib/ros/node_handle.h **** 
 4884              		.loc 11 303 0
 4885 0014 E268     		ldr	r2, [r4, #12]
 305:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 4886              		.loc 11 305 0
 4887 0016 2946     		mov	r1, r5
 303:./lib/ros_lib/ros/node_handle.h **** 
 4888              		.loc 11 303 0
 4889 0018 861A     		subs	r6, r0, r2
 4890              	.LVL569:
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4891              		.loc 11 306 0
 4892 001a 4FF47A75 		mov	r5, #1000
 4893              	.LVL570:
 305:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 4894              		.loc 11 305 0
 4895 001e 01A8     		add	r0, sp, #4
 4896 0020 FFF7FEFF 		bl	_ZN8std_msgs4Time11deserializeEPh
 4897              	.LVL571:
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4898              		.loc 11 306 0
 4899 0024 B6FBF5F2 		udiv	r2, r6, r5
 4900 0028 029B     		ldr	r3, [sp, #8]
 4901 002a 1344     		add	r3, r3, r2
 307:./lib/ros_lib/ros/node_handle.h **** 
 4902              		.loc 11 307 0
 4903 002c 05FB1262 		mls	r2, r5, r2, r6
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4904              		.loc 11 306 0
 4905 0030 0293     		str	r3, [sp, #8]
 307:./lib/ros_lib/ros/node_handle.h **** 
 4906              		.loc 11 307 0
 4907 0032 114E     		ldr	r6, .L269+4
 4908              	.LVL572:
 4909 0034 039B     		ldr	r3, [sp, #12]
 4910 0036 06FB0232 		mla	r2, r6, r2, r3
 4911 003a 0392     		str	r2, [sp, #12]
 4912              	.LVL573:
 4913              	.LBB369:
 4914              	.LBB370:
 4915              	.LBB371:
 4916              	.LBB372:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 4917              		.loc 15 138 0
 4918 003c FFF7FEFF 		bl	millis
 4919              	.LVL574:
 4920              	.LBE372:
 4921              	.LBE371:
 326:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 4922              		.loc 11 326 0
 4923 0040 B0FBF5F3 		udiv	r3, r0, r5
 4924 0044 029A     		ldr	r2, [sp, #8]
 327:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4925              		.loc 11 327 0
 4926 0046 0399     		ldr	r1, [sp, #12]
 326:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 4927              		.loc 11 326 0
 4928 0048 013A     		subs	r2, r2, #1
 4929 004a D21A     		subs	r2, r2, r3
 4930 004c 2261     		str	r2, [r4, #16]
 327:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4931              		.loc 11 327 0
 4932 004e 0B4A     		ldr	r2, .L269+8
 4933 0050 05FB1300 		mls	r0, r5, r3, r0
 4934              	.LVL575:
 4935 0054 0A44     		add	r2, r2, r1
 4936 0056 2146     		mov	r1, r4
 4937 0058 06FB1023 		mls	r3, r6, r0, r2
 328:./lib/ros_lib/ros/node_handle.h ****       }
 4938              		.loc 11 328 0
 4939 005c 04F11000 		add	r0, r4, #16
 327:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4940              		.loc 11 327 0
 4941 0060 41F8143F 		str	r3, [r1, #20]!
 328:./lib/ros_lib/ros/node_handle.h ****       }
 4942              		.loc 11 328 0
 4943 0064 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 4944              	.LVL576:
 4945              	.LBE370:
 4946              	.LBE369:
 4947              	.LBB373:
 4948              	.LBB374:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 4949              		.loc 15 138 0
 4950 0068 FFF7FEFF 		bl	millis
 4951              	.LVL577:
 4952              	.LBE374:
 4953              	.LBE373:
 310:./lib/ros_lib/ros/node_handle.h ****       }
 4954              		.loc 11 310 0
 4955 006c C4F8FC08 		str	r0, [r4, #2300]
 311:./lib/ros_lib/ros/node_handle.h **** 
 4956              		.loc 11 311 0
 4957 0070 04B0     		add	sp, sp, #16
 4958              	.LCFI59:
 4959              		.cfi_def_cfa_offset 16
 4960              		@ sp needed
 4961 0072 70BD     		pop	{r4, r5, r6, pc}
 4962              	.LVL578:
 4963              	.L270:
 4964              		.align	2
 4965              	.L269:
 4966 0074 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4967 0078 40420F00 		.word	1000000
 4968 007c 00CA9A3B 		.word	1000000000
 4969              		.cfi_endproc
 4970              	.LFE1327:
 4971              		.fnend
 4973              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv,"axG",%p
 4974              		.align	1
 4975              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv
 4976              		.thumb
 4977              		.thumb_func
 4979              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:
 4980              		.fnstart
 4981              	.LFB1318:
 184:./lib/ros_lib/ros/node_handle.h **** 
 4982              		.loc 11 184 0
 4983              		.cfi_startproc
 4984              		@ args = 0, pretend = 0, frame = 0
 4985              		@ frame_needed = 0, uses_anonymous_args = 0
 4986              	.LVL579:
 4987 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4988              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 4989              	.LCFI60:
 4990              		.cfi_def_cfa_offset 32
 4991              		.cfi_offset 3, -32
 4992              		.cfi_offset 4, -28
 4993              		.cfi_offset 5, -24
 4994              		.cfi_offset 6, -20
 4995              		.cfi_offset 7, -16
 4996              		.cfi_offset 8, -12
 4997              		.cfi_offset 9, -8
 4998              		.cfi_offset 14, -4
 184:./lib/ros_lib/ros/node_handle.h **** 
 4999              		.loc 11 184 0
 5000 0004 0446     		mov	r4, r0
 5001              	.LVL580:
 5002              	.LBB388:
 5003              	.LBB389:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 5004              		.loc 15 138 0
 5005 0006 FFF7FEFF 		bl	millis
 5006              	.LVL581:
 5007              	.LBE389:
 5008              	.LBE388:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 5009              		.loc 11 188 0
 5010 000a 42F6F822 		movw	r2, #11000
 5011 000e D4F8FC38 		ldr	r3, [r4, #2300]
 5012              	.LBB391:
 5013              	.LBB390:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 5014              		.loc 15 138 0
 5015 0012 0646     		mov	r6, r0
 5016              	.LVL582:
 5017              	.LBE390:
 5018              	.LBE391:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 5019              		.loc 11 188 0
 5020 0014 C31A     		subs	r3, r0, r3
 5021 0016 9342     		cmp	r3, r2
 189:./lib/ros_lib/ros/node_handle.h ****          }
 5022              		.loc 11 189 0
 5023 0018 84BF     		itt	hi
 5024 001a 0023     		movhi	r3, #0
 5025 001c 84F8F438 		strbhi	r3, [r4, #2292]
 193:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 5026              		.loc 11 193 0
 5027 0020 D4F8E038 		ldr	r3, [r4, #2272]
 5028 0024 33B1     		cbz	r3, .L273
 194:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 5029              		.loc 11 194 0
 5030 0026 D4F80039 		ldr	r3, [r4, #2304]
 5031 002a 8342     		cmp	r3, r0
 195:./lib/ros_lib/ros/node_handle.h ****           }
 5032              		.loc 11 195 0
 5033 002c 3CBF     		itt	cc
 5034 002e 0023     		movcc	r3, #0
 5035 0030 C4F8E038 		strcc	r3, [r4, #2272]
 5036              	.L273:
 5037              	.LBB392:
 5038              	.LBB393:
 5039              	.LBB394:
 119:./lib/ros_lib/ArduinoHardware.h ****         __enable_irq();
 5040              		.loc 15 119 0
 5041 0034 764F     		ldr	r7, .L311
 5042              	.LBE394:
 5043              	.LBE393:
 251:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 5044              		.loc 11 251 0
 5045 0036 4FF00008 		mov	r8, #0
 268:./lib/ros_lib/ros/node_handle.h ****               }
 5046              		.loc 11 268 0
 5047 003a 04F11809 		add	r9, r4, #24
 5048              	.LVL583:
 5049              	.L274:
 5050              	.LBB403:
 5051              	.LBB401:
 5052              	.LBB395:
 5053              	.LBB396:
1205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 5054              		.loc 16 1205 0
 5055              		.syntax unified
 5056              	@ 1205 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h" 1
 5057 003e 72B6     		cpsid i
 5058              	@ 0 "" 2
 5059              		.thumb
 5060              		.syntax unified
 5061              	.LBE396:
 5062              	.LBE395:
 119:./lib/ros_lib/ArduinoHardware.h ****         __enable_irq();
 5063              		.loc 15 119 0
 5064 0040 3A6B     		ldr	r2, [r7, #48]
 5065 0042 FB6A     		ldr	r3, [r7, #44]
 5066 0044 9A42     		cmp	r2, r3
 5067 0046 07D1     		bne	.L275
 5068              	.LBB397:
 5069              	.LBB398:
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
 5070              		.loc 16 1204 0
 5071              		.syntax unified
 5072              	@ 1204 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h" 1
 5073 0048 62B6     		cpsie i
 5074              	@ 0 "" 2
 5075              		.thumb
 5076              		.syntax unified
 5077              	.LBE398:
 5078              	.LBE397:
 5079              	.LBE401:
 5080              	.LBE403:
 5081              	.LBE392:
 275:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 5082              		.loc 11 275 0
 5083 004a 94F8F408 		ldrb	r0, [r4, #2292]	@ zero_extendqisi2
 5084 004e 0028     		cmp	r0, #0
 5085 0050 40F0CF80 		bne	.L276
 5086 0054 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5087              	.LVL584:
 5088              	.L275:
 5089              	.LBB407:
 5090              	.LBB404:
 5091              	.LBB402:
 124:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 5092              		.loc 15 124 0
 5093 0058 FB6A     		ldr	r3, [r7, #44]
 5094 005a 07EB4303 		add	r3, r7, r3, lsl #1
 5095 005e 9B8E     		ldrh	r3, [r3, #52]
 125:./lib/ros_lib/ArduinoHardware.h ****       __enable_irq();
 5096              		.loc 15 125 0
 5097 0060 FA6A     		ldr	r2, [r7, #44]
 124:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 5098              		.loc 15 124 0
 5099 0062 9BB2     		uxth	r3, r3
 5100              	.LVL585:
 125:./lib/ros_lib/ArduinoHardware.h ****       __enable_irq();
 5101              		.loc 15 125 0
 5102 0064 0132     		adds	r2, r2, #1
 5103 0066 C2F30902 		ubfx	r2, r2, #0, #10
 5104 006a FA62     		str	r2, [r7, #44]
 5105              	.LBB399:
 5106              	.LBB400:
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
 5107              		.loc 16 1204 0
 5108              		.syntax unified
 5109              	@ 1204 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h" 1
 5110 006c 62B6     		cpsie i
 5111              	@ 0 "" 2
 5112              	.LVL586:
 5113              		.thumb
 5114              		.syntax unified
 5115              	.LBE400:
 5116              	.LBE399:
 5117              	.LBE402:
 5118              	.LBE404:
 204:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 5119              		.loc 11 204 0
 5120 006e D4F8F028 		ldr	r2, [r4, #2288]
 205:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 5121              		.loc 11 205 0
 5122 0072 D4F8E058 		ldr	r5, [r4, #2272]
 204:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 5123              		.loc 11 204 0
 5124 0076 1A44     		add	r2, r2, r3
 205:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 5125              		.loc 11 205 0
 5126 0078 072D     		cmp	r5, #7
 204:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 5127              		.loc 11 204 0
 5128 007a C4F8F028 		str	r2, [r4, #2288]
 205:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 5129              		.loc 11 205 0
 5130 007e 0FD1     		bne	.L278
 206:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 5131              		.loc 11 206 0
 5132 0080 D4F8EC28 		ldr	r2, [r4, #2284]
 5133 0084 511C     		adds	r1, r2, #1
 5134 0086 2244     		add	r2, r2, r4
 5135 0088 C4F8EC18 		str	r1, [r4, #2284]
 5136 008c 1376     		strb	r3, [r2, #24]
 207:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 5137              		.loc 11 207 0
 5138 008e D4F8E438 		ldr	r3, [r4, #2276]
 5139 0092 013B     		subs	r3, r3, #1
 5140 0094 C4F8E438 		str	r3, [r4, #2276]
 5141              	.L310:
 208:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 5142              		.loc 11 208 0
 5143 0098 002B     		cmp	r3, #0
 5144 009a D0D1     		bne	.L274
 209:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 5145              		.loc 11 209 0
 5146 009c 0823     		movs	r3, #8
 5147 009e 1AE0     		b	.L308
 5148              	.L278:
 210:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 5149              		.loc 11 210 0
 5150 00a0 A5B9     		cbnz	r5, .L281
 211:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 5151              		.loc 11 211 0
 5152 00a2 FF2B     		cmp	r3, #255
 5153 00a4 07D1     		bne	.L282
 212:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 5154              		.loc 11 212 0
 5155 00a6 0123     		movs	r3, #1
 5156 00a8 C4F8E038 		str	r3, [r4, #2272]
 213:./lib/ros_lib/ros/node_handle.h ****             }
 5157              		.loc 11 213 0
 5158 00ac 06F11403 		add	r3, r6, #20
 5159 00b0 C4F80039 		str	r3, [r4, #2304]
 5160 00b4 C3E7     		b	.L274
 5161              	.L282:
 5162              	.LVL587:
 5163              	.LBB405:
 5164              	.LBB406:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 5165              		.loc 15 138 0
 5166 00b6 FFF7FEFF 		bl	millis
 5167              	.LVL588:
 5168              	.LBE406:
 5169              	.LBE405:
 215:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 5170              		.loc 11 215 0
 5171 00ba 801B     		subs	r0, r0, r6
 5172 00bc 0528     		cmp	r0, #5
 5173 00be BED9     		bls	.L274
 217:./lib/ros_lib/ros/node_handle.h ****               return -2;
 5174              		.loc 11 217 0
 5175 00c0 84F8F458 		strb	r5, [r4, #2292]
 218:./lib/ros_lib/ros/node_handle.h ****             }
 5176              		.loc 11 218 0
 5177 00c4 6FF00100 		mvn	r0, #1
 5178 00c8 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5179              	.LVL589:
 5180              	.L281:
 220:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 5181              		.loc 11 220 0
 5182 00cc 012D     		cmp	r5, #1
 5183 00ce 0FD1     		bne	.L283
 221:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 5184              		.loc 11 221 0
 5185 00d0 FE2B     		cmp	r3, #254
 5186 00d2 03D1     		bne	.L284
 222:./lib/ros_lib/ros/node_handle.h ****             }else{
 5187              		.loc 11 222 0
 5188 00d4 0223     		movs	r3, #2
 5189              	.L308:
 5190 00d6 C4F8E038 		str	r3, [r4, #2272]
 5191 00da B0E7     		b	.L274
 5192              	.L284:
 225:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 5193              		.loc 11 225 0
 5194 00dc 94F8F438 		ldrb	r3, [r4, #2292]	@ zero_extendqisi2
 224:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 5195              		.loc 11 224 0
 5196 00e0 C4F8E088 		str	r8, [r4, #2272]
 225:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 5197              		.loc 11 225 0
 5198 00e4 002B     		cmp	r3, #0
 5199 00e6 AAD1     		bne	.L274
 226:./lib/ros_lib/ros/node_handle.h ****             }
 5200              		.loc 11 226 0
 5201 00e8 2046     		mov	r0, r4
 5202 00ea FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
 5203              	.LVL590:
 5204 00ee A6E7     		b	.L274
 5205              	.L283:
 228:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 5206              		.loc 11 228 0
 5207 00f0 022D     		cmp	r5, #2
 5208 00f2 05D1     		bne	.L285
 229:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 5209              		.loc 11 229 0
 5210 00f4 C4F8E438 		str	r3, [r4, #2276]
 230:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 5211              		.loc 11 230 0
 5212 00f8 C4F8EC88 		str	r8, [r4, #2284]
 231:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 5213              		.loc 11 231 0
 5214 00fc 0322     		movs	r2, #3
 5215 00fe 20E0     		b	.L309
 5216              	.L285:
 233:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 5217              		.loc 11 233 0
 5218 0100 032D     		cmp	r5, #3
 5219 0102 07D1     		bne	.L286
 234:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 5220              		.loc 11 234 0
 5221 0104 D4F8E428 		ldr	r2, [r4, #2276]
 5222 0108 02EB0323 		add	r3, r2, r3, lsl #8
 5223 010c C4F8E438 		str	r3, [r4, #2276]
 235:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 5224              		.loc 11 235 0
 5225 0110 0423     		movs	r3, #4
 5226 0112 E0E7     		b	.L308
 5227              	.L286:
 236:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 5228              		.loc 11 236 0
 5229 0114 042D     		cmp	r5, #4
 5230 0116 0FD1     		bne	.L287
 237:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 5231              		.loc 11 237 0
 5232 0118 3E4B     		ldr	r3, .L311+4
 5233 011a 1340     		ands	r3, r3, r2
 5234 011c 002B     		cmp	r3, #0
 5235 011e BEBF     		ittt	lt
 5236 0120 03F1FF33 		addlt	r3, r3, #-1
 5237 0124 63F0FF03 		ornlt	r3, r3, #255
 5238 0128 0133     		addlt	r3, r3, #1
 5239 012a FF2B     		cmp	r3, #255
 5240 012c 01D1     		bne	.L288
 238:./lib/ros_lib/ros/node_handle.h **** 	    else
 5241              		.loc 11 238 0
 5242 012e 0523     		movs	r3, #5
 5243 0130 D1E7     		b	.L308
 5244              	.L288:
 240:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 5245              		.loc 11 240 0
 5246 0132 C4F8E088 		str	r8, [r4, #2272]
 5247 0136 82E7     		b	.L274
 5248              	.L287:
 241:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 5249              		.loc 11 241 0
 5250 0138 052D     		cmp	r5, #5
 5251 013a 07D1     		bne	.L290
 242:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 5252              		.loc 11 242 0
 5253 013c C4F8E838 		str	r3, [r4, #2280]
 243:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 5254              		.loc 11 243 0
 5255 0140 0622     		movs	r2, #6
 5256              	.L309:
 5257 0142 C4F8E028 		str	r2, [r4, #2272]
 244:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 5258              		.loc 11 244 0
 5259 0146 C4F8F038 		str	r3, [r4, #2288]
 5260 014a 78E7     		b	.L274
 5261              	.L290:
 245:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 5262              		.loc 11 245 0
 5263 014c 062D     		cmp	r5, #6
 5264 014e 0BD1     		bne	.L291
 246:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 5265              		.loc 11 246 0
 5266 0150 D4F8E828 		ldr	r2, [r4, #2280]
 5267 0154 02EB0323 		add	r3, r2, r3, lsl #8
 5268 0158 C4F8E838 		str	r3, [r4, #2280]
 247:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 5269              		.loc 11 247 0
 5270 015c 0723     		movs	r3, #7
 5271 015e C4F8E038 		str	r3, [r4, #2272]
 248:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 5272              		.loc 11 248 0
 5273 0162 D4F8E438 		ldr	r3, [r4, #2276]
 5274 0166 97E7     		b	.L310
 5275              	.L291:
 250:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 5276              		.loc 11 250 0
 5277 0168 082D     		cmp	r5, #8
 5278 016a 7FF468AF 		bne	.L274
 252:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 5279              		.loc 11 252 0
 5280 016e 294B     		ldr	r3, .L311+4
 251:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 5281              		.loc 11 251 0
 5282 0170 C4F8E088 		str	r8, [r4, #2272]
 252:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 5283              		.loc 11 252 0
 5284 0174 1340     		ands	r3, r3, r2
 5285 0176 002B     		cmp	r3, #0
 5286 0178 BEBF     		ittt	lt
 5287 017a 03F1FF33 		addlt	r3, r3, #-1
 5288 017e 63F0FF03 		ornlt	r3, r3, #255
 5289 0182 0133     		addlt	r3, r3, #1
 5290 0184 FF2B     		cmp	r3, #255
 5291 0186 7FF45AAF 		bne	.L274
 253:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 5292              		.loc 11 253 0
 5293 018a D4F8E838 		ldr	r3, [r4, #2280]
 5294 018e 6BB9     		cbnz	r3, .L294
 254:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 5295              		.loc 11 254 0
 5296 0190 2046     		mov	r0, r4
 5297 0192 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
 5298              	.LVL591:
 255:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 5299              		.loc 11 255 0
 5300 0196 2046     		mov	r0, r4
 5301 0198 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv
 5302              	.LVL592:
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 5303              		.loc 11 256 0
 5304 019c C4F8F868 		str	r6, [r4, #2296]
 257:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 5305              		.loc 11 257 0
 5306 01a0 C4F8FC68 		str	r6, [r4, #2300]
 258:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 5307              		.loc 11 258 0
 5308 01a4 4FF0FF30 		mov	r0, #-1
 5309 01a8 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5310              	.LVL593:
 5311              	.L294:
 259:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 5312              		.loc 11 259 0
 5313 01ac 0A2B     		cmp	r3, #10
 5314 01ae 04D1     		bne	.L295
 260:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 5315              		.loc 11 260 0
 5316 01b0 4946     		mov	r1, r9
 5317 01b2 2046     		mov	r0, r4
 5318 01b4 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh
 5319              	.LVL594:
 5320 01b8 41E7     		b	.L274
 5321              	.L295:
 261:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 5322              		.loc 11 261 0
 5323 01ba 062B     		cmp	r3, #6
 5324 01bc 08D1     		bne	.L296
 262:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 5325              		.loc 11 262 0
 5326 01be 4946     		mov	r1, r9
 5327 01c0 04F60810 		addw	r0, r4, #2312
 5328 01c4 FFF7FEFF 		bl	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 5329              	.LVL595:
 263:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 5330              		.loc 11 263 0
 5331 01c8 0123     		movs	r3, #1
 5332 01ca 84F80439 		strb	r3, [r4, #2308]
 5333 01ce 36E7     		b	.L274
 5334              	.L296:
 264:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 5335              		.loc 11 264 0
 5336 01d0 0B2B     		cmp	r3, #11
 5337 01d2 02D1     		bne	.L297
 265:./lib/ros_lib/ros/node_handle.h ****               }else{
 5338              		.loc 11 265 0
 5339 01d4 84F8F488 		strb	r8, [r4, #2292]
 5340 01d8 31E7     		b	.L274
 5341              	.L297:
 267:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 5342              		.loc 11 267 0
 5343 01da 04EB8303 		add	r3, r4, r3, lsl #2
 5344 01de D3F8EC06 		ldr	r0, [r3, #1772]
 5345 01e2 0028     		cmp	r0, #0
 5346 01e4 3FF42BAF 		beq	.L274
 268:./lib/ros_lib/ros/node_handle.h ****               }
 5347              		.loc 11 268 0
 5348 01e8 0368     		ldr	r3, [r0]
 5349 01ea 4946     		mov	r1, r9
 5350 01ec 1B68     		ldr	r3, [r3]
 5351 01ee 9847     		blx	r3
 5352              	.LVL596:
 5353 01f0 25E7     		b	.L274
 5354              	.L276:
 5355              	.LBE407:
 275:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 5356              		.loc 11 275 0 discriminator 1
 5357 01f2 40F6C412 		movw	r2, #2500
 5358 01f6 D4F8F838 		ldr	r3, [r4, #2296]
 5359 01fa F31A     		subs	r3, r6, r3
 5360 01fc 9342     		cmp	r3, r2
 5361 01fe 04D9     		bls	.L298
 276:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 5362              		.loc 11 276 0
 5363 0200 2046     		mov	r0, r4
 5364 0202 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
 5365              	.LVL597:
 277:./lib/ros_lib/ros/node_handle.h ****         }
 5366              		.loc 11 277 0
 5367 0206 C4F8F868 		str	r6, [r4, #2296]
 5368              	.L298:
 280:./lib/ros_lib/ros/node_handle.h ****       }
 5369              		.loc 11 280 0
 5370 020a 0020     		movs	r0, #0
 281:./lib/ros_lib/ros/node_handle.h **** 
 5371              		.loc 11 281 0
 5372 020c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5373              	.LVL598:
 5374              	.L312:
 5375              		.align	2
 5376              	.L311:
 5377 0210 00000000 		.word	.LANCHOR1
 5378 0214 FF000080 		.word	-2147483393
 5379              		.cfi_endproc
 5380              	.LFE1318:
 5381              		.fnend
 5383              		.global	__aeabi_f2iz
 5384              		.section	.text.startup,"ax",%progbits
 5385              		.align	1
 5386              		.global	main
 5387              		.thumb
 5388              		.thumb_func
 5390              	main:
 5391              		.fnstart
 5392              	.LFB1281:
 153:src/main.cpp  ****   #ifdef DEBUG
 5393              		.loc 13 153 0
 5394              		.cfi_startproc
 5395              		@ args = 0, pretend = 0, frame = 840
 5396              		@ frame_needed = 0, uses_anonymous_args = 0
 5397 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5398              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5399              	.LCFI61:
 5400              		.cfi_def_cfa_offset 36
 5401              		.cfi_offset 4, -36
 5402              		.cfi_offset 5, -32
 5403              		.cfi_offset 6, -28
 5404              		.cfi_offset 7, -24
 5405              		.cfi_offset 8, -20
 5406              		.cfi_offset 9, -16
 5407              		.cfi_offset 10, -12
 5408              		.cfi_offset 11, -8
 5409              		.cfi_offset 14, -4
 5410              		.pad #876
 5411 0004 ADF55B7D 		sub	sp, sp, #876
 5412              	.LCFI62:
 5413              		.cfi_def_cfa_offset 912
 158:src/main.cpp  ****   SysTick_Init();
 5414              		.loc 13 158 0
 5415 0008 FFF7FEFF 		bl	RCC_Configuration
 5416              	.LVL599:
 159:src/main.cpp  **** 
 5417              		.loc 13 159 0
 5418 000c FFF7FEFF 		bl	SysTick_Init
 5419              	.LVL600:
 161:src/main.cpp  ****   I2C1_Init();
 5420              		.loc 13 161 0
 5421 0010 0121     		movs	r1, #1
 5422 0012 3548     		ldr	r0, .L361
 5423 0014 FFF7FEFF 		bl	GPIO_PinRemapConfig
 5424              	.LVL601:
 162:src/main.cpp  ****   DEBUG_Init();
 5425              		.loc 13 162 0
 5426 0018 FFF7FEFF 		bl	I2C1_Init
 5427              	.LVL602:
 163:src/main.cpp  ****   SHUTDOWN_Init();
 5428              		.loc 13 163 0
 5429 001c FFF7FEFF 		bl	DEBUG_Init
 5430              	.LVL603:
 164:src/main.cpp  ****   LED_Init();
 5431              		.loc 13 164 0
 5432 0020 FFF7FEFF 		bl	SHUTDOWN_Init
 5433              	.LVL604:
 165:src/main.cpp  **** 
 5434              		.loc 13 165 0
 5435 0024 FFF7FEFF 		bl	LED_Init
 5436              	.LVL605:
 167:src/main.cpp  ****   debug_msg.data_length = 6;
 5437              		.loc 13 167 0
 5438 0028 1820     		movs	r0, #24
 5439 002a FFF7FEFF 		bl	malloc
 5440              	.LVL606:
 5441 002e 2F4C     		ldr	r4, .L361+4
 168:src/main.cpp  **** 
 5442              		.loc 13 168 0
 5443 0030 0623     		movs	r3, #6
 167:src/main.cpp  ****   debug_msg.data_length = 6;
 5444              		.loc 13 167 0
 5445 0032 C4F86408 		str	r0, [r4, #2148]
 170:src/main.cpp  ****   odom_msg.data_length = 3;
 5446              		.loc 13 170 0
 5447 0036 0C20     		movs	r0, #12
 168:src/main.cpp  **** 
 5448              		.loc 13 168 0
 5449 0038 84F85C38 		strb	r3, [r4, #2140]
 170:src/main.cpp  ****   odom_msg.data_length = 3;
 5450              		.loc 13 170 0
 5451 003c FFF7FEFF 		bl	malloc
 5452              	.LVL607:
 171:src/main.cpp  **** 
 5453              		.loc 13 171 0
 5454 0040 0323     		movs	r3, #3
 170:src/main.cpp  ****   odom_msg.data_length = 3;
 5455              		.loc 13 170 0
 5456 0042 C4F89408 		str	r0, [r4, #2196]
 5457              	.LBB428:
 5458              	.LBB429:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 5459              		.loc 11 147 0
 5460 0046 04F69C00 		addw	r0, r4, #2204
 5461              	.LBE429:
 5462              	.LBE428:
 171:src/main.cpp  **** 
 5463              		.loc 13 171 0
 5464 004a 84F88C38 		strb	r3, [r4, #2188]
 5465              	.LVL608:
 5466              	.LBB431:
 5467              	.LBB430:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 5468              		.loc 11 147 0
 5469 004e FFF7FEFF 		bl	_ZN15ArduinoHardware4initEv
 5470              	.LVL609:
 148:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 5471              		.loc 11 148 0
 5472 0052 41F27812 		movw	r2, #4472
 5473 0056 0023     		movs	r3, #0
 5474 0058 A350     		str	r3, [r4, r2]
 149:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 5475              		.loc 11 149 0
 5476 005a 41F27C12 		movw	r2, #4476
 5477 005e A350     		str	r3, [r4, r2]
 150:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 5478              		.loc 11 150 0
 5479 0060 41F28412 		movw	r2, #4484
 5480 0064 A350     		str	r3, [r4, r2]
 151:./lib/ros_lib/ros/node_handle.h ****       };
 5481              		.loc 11 151 0
 5482 0066 04F58C52 		add	r2, r4, #4480
 5483 006a 1360     		str	r3, [r2]
 5484              	.LVL610:
 5485 006c 703A     		subs	r2, r2, #112
 5486 006e 1146     		mov	r1, r2
 5487              	.LVL611:
 5488              	.L316:
 5489              	.LBE430:
 5490              	.LBE431:
 5491              	.LBB432:
 5492              	.LBB433:
 353:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 5493              		.loc 11 353 0
 5494 0070 51F8040F 		ldr	r0, [r1, #4]!
 5495 0074 60B9     		cbnz	r0, .L314
 354:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 5496              		.loc 11 354 0
 5497 0076 1E48     		ldr	r0, .L361+8
 5498 0078 03F21E21 		addw	r1, r3, #542
 5499 007c 04EB8101 		add	r1, r4, r1, lsl #2
 5500 0080 00F1D005 		add	r5, r0, #208
 355:./lib/ros_lib/ros/node_handle.h ****             return true;
 5501              		.loc 11 355 0
 5502 0084 6433     		adds	r3, r3, #100
 5503              	.LVL612:
 354:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 5504              		.loc 11 354 0
 5505 0086 C1F89C58 		str	r5, [r1, #2204]
 355:./lib/ros_lib/ros/node_handle.h ****             return true;
 5506              		.loc 11 355 0
 5507 008a C0F8D430 		str	r3, [r0, #212]
 5508 008e 02E0     		b	.L315
 5509              	.LVL613:
 5510              	.L314:
 352:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 5511              		.loc 11 352 0
 5512 0090 0133     		adds	r3, r3, #1
 5513              	.LVL614:
 5514 0092 192B     		cmp	r3, #25
 5515 0094 ECD1     		bne	.L316
 5516              	.LVL615:
 5517              	.L315:
 5518              	.LBE433:
 5519              	.LBE432:
 5520              	.LBB434:
 5521              	.LBB435:
 5522 0096 0023     		movs	r3, #0
 5523              	.LVL616:
 5524              	.L319:
 353:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 5525              		.loc 11 353 0
 5526 0098 52F8041F 		ldr	r1, [r2, #4]!
 5527 009c 61B9     		cbnz	r1, .L317
 354:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 5528              		.loc 11 354 0
 5529 009e 1449     		ldr	r1, .L361+8
 5530 00a0 03F21E22 		addw	r2, r3, #542
 5531 00a4 04EB8202 		add	r2, r4, r2, lsl #2
 5532 00a8 01F58870 		add	r0, r1, #272
 355:./lib/ros_lib/ros/node_handle.h ****             return true;
 5533              		.loc 11 355 0
 5534 00ac 6433     		adds	r3, r3, #100
 5535              	.LVL617:
 354:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 5536              		.loc 11 354 0
 5537 00ae C2F89C08 		str	r0, [r2, #2204]
 355:./lib/ros_lib/ros/node_handle.h ****             return true;
 5538              		.loc 11 355 0
 5539 00b2 C1F81431 		str	r3, [r1, #276]
 5540 00b6 02E0     		b	.L318
 5541              	.LVL618:
 5542              	.L317:
 352:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 5543              		.loc 11 352 0
 5544 00b8 0133     		adds	r3, r3, #1
 5545              	.LVL619:
 5546 00ba 192B     		cmp	r3, #25
 5547 00bc ECD1     		bne	.L319
 5548              	.LVL620:
 5549              	.L318:
 5550 00be 0D4A     		ldr	r2, .L361+12
 5551              	.LBE435:
 5552              	.LBE434:
 5553              	.LBB436:
 5554              	.LBB437:
 338:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 5555              		.loc 11 338 0
 5556 00c0 0023     		movs	r3, #0
 5557              	.LVL621:
 5558              	.L322:
 339:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 5559              		.loc 11 339 0
 5560 00c2 52F8041F 		ldr	r1, [r2, #4]!
 5561 00c6 C9B9     		cbnz	r1, .L320
 340:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 5562              		.loc 11 340 0
 5563 00c8 094A     		ldr	r2, .L361+8
 5564 00ca 03F20621 		addw	r1, r3, #518
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 5565              		.loc 11 341 0
 5566 00ce 7D33     		adds	r3, r3, #125
 5567              	.LVL622:
 5568 00d0 C2F83431 		str	r3, [r2, #308]
 342:./lib/ros_lib/ros/node_handle.h ****             return true;
 5569              		.loc 11 342 0
 5570 00d4 084B     		ldr	r3, .L361+16
 5571              	.LVL623:
 340:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 5572              		.loc 11 340 0
 5573 00d6 04EB8101 		add	r1, r4, r1, lsl #2
 5574 00da 02F59670 		add	r0, r2, #300
 5575 00de C1F89808 		str	r0, [r1, #2200]
 342:./lib/ros_lib/ros/node_handle.h ****             return true;
 5576              		.loc 11 342 0
 5577 00e2 C2F83831 		str	r3, [r2, #312]
 5578 00e6 0CE0     		b	.L321
 5579              	.L362:
 5580              		.align	2
 5581              	.L361:
 5582 00e8 00023000 		.word	3146240
 5583 00ec 00000000 		.word	.LANCHOR1
 5584 00f0 F8100000 		.word	.LANCHOR2
 5585 00f4 AC100000 		.word	.LANCHOR1+4268
 5586 00f8 98080000 		.word	.LANCHOR1+2200
 5587              	.LVL624:
 5588              	.L320:
 338:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 5589              		.loc 11 338 0
 5590 00fc 0133     		adds	r3, r3, #1
 5591              	.LVL625:
 5592 00fe 192B     		cmp	r3, #25
 5593 0100 DFD1     		bne	.L322
 5594              	.LVL626:
 5595              	.L321:
 5596              	.LBE437:
 5597              	.LBE436:
 186:src/main.cpp  **** 
 5598              		.loc 13 186 0
 5599 0102 0023     		movs	r3, #0
 5600 0104 84F83438 		strb	r3, [r4, #2100]
 190:src/main.cpp  ****     FF = 3200;
 5601              		.loc 13 190 0
 5602 0108 18AA     		add	r2, sp, #96
 5603 010a 0123     		movs	r3, #1
 5604 010c A049     		ldr	r1, .L363
 5605 010e A148     		ldr	r0, .L363+4
 5606 0110 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8getParamEPKcPfi
 5607              	.LVL627:
 5608 0114 08B9     		cbnz	r0, .L323
 191:src/main.cpp  ****   }
 5609              		.loc 13 191 0
 5610 0116 A04B     		ldr	r3, .L363+8
 5611 0118 1893     		str	r3, [sp, #96]	@ float
 5612              	.L323:
 194:src/main.cpp  ****     KP = 3000;
 5613              		.loc 13 194 0
 5614 011a 0123     		movs	r3, #1
 5615 011c 19AA     		add	r2, sp, #100
 5616 011e 9F49     		ldr	r1, .L363+12
 5617 0120 9C48     		ldr	r0, .L363+4
 5618 0122 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8getParamEPKcPfi
 5619              	.LVL628:
 5620 0126 08B9     		cbnz	r0, .L324
 195:src/main.cpp  ****   }
 5621              		.loc 13 195 0
 5622 0128 9D4B     		ldr	r3, .L363+16
 5623 012a 1993     		str	r3, [sp, #100]	@ float
 5624              	.L324:
 198:src/main.cpp  ****     KI = 2000;
 5625              		.loc 13 198 0
 5626 012c 0123     		movs	r3, #1
 5627 012e 1AAA     		add	r2, sp, #104
 5628 0130 9C49     		ldr	r1, .L363+20
 5629 0132 9848     		ldr	r0, .L363+4
 5630 0134 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8getParamEPKcPfi
 5631              	.LVL629:
 5632 0138 08B9     		cbnz	r0, .L325
 199:src/main.cpp  ****   }
 5633              		.loc 13 199 0
 5634 013a 9B4B     		ldr	r3, .L363+24
 5635 013c 1A93     		str	r3, [sp, #104]	@ float
 5636              	.L325:
 202:src/main.cpp  ****     KD = 40;
 5637              		.loc 13 202 0
 5638 013e 0123     		movs	r3, #1
 5639 0140 1BAA     		add	r2, sp, #108
 5640 0142 9A49     		ldr	r1, .L363+28
 5641 0144 9348     		ldr	r0, .L363+4
 5642 0146 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8getParamEPKcPfi
 5643              	.LVL630:
 5644 014a 08B9     		cbnz	r0, .L326
 203:src/main.cpp  ****   }
 5645              		.loc 13 203 0
 5646 014c 984B     		ldr	r3, .L363+32
 5647 014e 1B93     		str	r3, [sp, #108]	@ float
 5648              	.L326:
 208:src/main.cpp  ****     integralSaturation = 10;
 5649              		.loc 13 208 0
 5650 0150 0123     		movs	r3, #1
 5651 0152 1CAA     		add	r2, sp, #112
 5652 0154 9749     		ldr	r1, .L363+36
 5653 0156 8F48     		ldr	r0, .L363+4
 5654 0158 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8getParamEPKcPfi
 5655              	.LVL631:
 5656 015c 08B9     		cbnz	r0, .L327
 209:src/main.cpp  ****   }
 5657              		.loc 13 209 0
 5658 015e 964B     		ldr	r3, .L363+40
 5659 0160 1C93     		str	r3, [sp, #112]	@ float
 5660              	.L327:
 212:src/main.cpp  ****     wheelRadius = 0.04;
 5661              		.loc 13 212 0
 5662 0162 0123     		movs	r3, #1
 5663 0164 1DAA     		add	r2, sp, #116
 5664 0166 9549     		ldr	r1, .L363+44
 5665 0168 8A48     		ldr	r0, .L363+4
 5666 016a FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8getParamEPKcPfi
 5667              	.LVL632:
 5668 016e 08B9     		cbnz	r0, .L328
 213:src/main.cpp  ****   }
 5669              		.loc 13 213 0
 5670 0170 934B     		ldr	r3, .L363+48
 5671 0172 1D93     		str	r3, [sp, #116]	@ float
 5672              	.L328:
 216:src/main.cpp  ****     L = 0.17;
 5673              		.loc 13 216 0
 5674 0174 934C     		ldr	r4, .L363+52
 5675 0176 0123     		movs	r3, #1
 5676 0178 04F10C02 		add	r2, r4, #12
 5677 017c 9249     		ldr	r1, .L363+56
 5678 017e 04F69800 		addw	r0, r4, #2200
 5679 0182 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8getParamEPKcPfi
 5680              	.LVL633:
 5681 0186 08B9     		cbnz	r0, .L329
 217:src/main.cpp  ****   }
 5682              		.loc 13 217 0
 5683 0188 904B     		ldr	r3, .L363+60
 5684 018a E360     		str	r3, [r4, #12]	@ float
 5685              	.L329:
 220:src/main.cpp  ****     d = 0.045;
 5686              		.loc 13 220 0
 5687 018c 8D4C     		ldr	r4, .L363+52
 5688 018e 0123     		movs	r3, #1
 5689 0190 04F11002 		add	r2, r4, #16
 5690 0194 8E49     		ldr	r1, .L363+64
 5691 0196 04F69800 		addw	r0, r4, #2200
 5692 019a FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8getParamEPKcPfi
 5693              	.LVL634:
 5694 019e 08B9     		cbnz	r0, .L330
 221:src/main.cpp  ****   }
 5695              		.loc 13 221 0
 5696 01a0 8C4B     		ldr	r3, .L363+68
 5697 01a2 2361     		str	r3, [r4, #16]	@ float
 5698              	.L330:
 230:src/main.cpp  ****   SL.m_ServoLimitMin = 7925;
 5699              		.loc 13 230 0
 5700 01a4 40F2E975 		movw	r5, #2025
 231:src/main.cpp  **** 
 5701              		.loc 13 231 0
 5702 01a8 41F6F567 		movw	r7, #7925
 227:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 5703              		.loc 13 227 0
 5704 01ac 0426     		movs	r6, #4
 224:src/main.cpp  **** 
 5705              		.loc 13 224 0
 5706 01ae 4FF47A70 		mov	r0, #1000
 5707 01b2 FFF7FEFF 		bl	delay
 5708              	.LVL635:
 227:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 5709              		.loc 13 227 0
 5710 01b6 884B     		ldr	r3, .L363+72
 5711 01b8 884A     		ldr	r2, .L363+76
 5712 01ba 0121     		movs	r1, #1
 5713 01bc 0096     		str	r6, [sp]
 5714 01be 3EA8     		add	r0, sp, #248
 5715 01c0 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5716              	.LVL636:
 228:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 5717              		.loc 13 228 0
 5718 01c4 4FF40073 		mov	r3, #512
 229:src/main.cpp  ****   SL.m_ServoLimitMax = 2025;
 5719              		.loc 13 229 0
 5720 01c8 854C     		ldr	r4, .L363+80
 228:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 5721              		.loc 13 228 0
 5722 01ca 4493     		str	r3, [sp, #272]
 233:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 5723              		.loc 13 233 0
 5724 01cc 0323     		movs	r3, #3
 5725 01ce 0093     		str	r3, [sp]
 5726 01d0 844A     		ldr	r2, .L363+84
 5727 01d2 814B     		ldr	r3, .L363+72
 5728 01d4 0121     		movs	r1, #1
 5729 01d6 58A8     		add	r0, sp, #352
 229:src/main.cpp  ****   SL.m_ServoLimitMax = 2025;
 5730              		.loc 13 229 0
 5731 01d8 4594     		str	r4, [sp, #276]
 230:src/main.cpp  ****   SL.m_ServoLimitMin = 7925;
 5732              		.loc 13 230 0
 5733 01da 4295     		str	r5, [sp, #264]
 231:src/main.cpp  **** 
 5734              		.loc 13 231 0
 5735 01dc 4397     		str	r7, [sp, #268]
 233:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 5736              		.loc 13 233 0
 5737 01de FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5738              	.LVL637:
 236:src/main.cpp  ****   SR.m_ServoLimitMin = 2025;
 5739              		.loc 13 236 0
 5740 01e2 5C97     		str	r7, [sp, #368]
 239:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 5741              		.loc 13 239 0
 5742 01e4 0127     		movs	r7, #1
 234:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 5743              		.loc 13 234 0
 5744 01e6 4FF48078 		mov	r8, #256
 239:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 5745              		.loc 13 239 0
 5746 01ea 0097     		str	r7, [sp]
 5747 01ec 7E4B     		ldr	r3, .L363+88
 5748 01ee 7F4A     		ldr	r2, .L363+92
 5749 01f0 0221     		movs	r1, #2
 5750 01f2 72A8     		add	r0, sp, #456
 234:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 5751              		.loc 13 234 0
 5752 01f4 CDF87881 		str	r8, [sp, #376]
 235:src/main.cpp  ****   SR.m_ServoLimitMax = 7925;
 5753              		.loc 13 235 0
 5754 01f8 5F94     		str	r4, [sp, #380]
 237:src/main.cpp  **** 
 5755              		.loc 13 237 0
 5756 01fa 5D95     		str	r5, [sp, #372]
 239:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 5757              		.loc 13 239 0
 5758 01fc FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5759              	.LVL638:
 242:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 5760              		.loc 13 242 0
 5761 0200 7B4D     		ldr	r5, .L363+96
 5762 0202 7C4A     		ldr	r2, .L363+100
 5763 0204 0397     		str	r7, [sp, #12]
 5764 0206 4FF40047 		mov	r7, #32768
 5765 020a CDF81480 		str	r8, [sp, #20]
 5766 020e 0292     		str	r2, [sp, #8]
 5767 0210 8DE88400 		stmia	sp, {r2, r7}
 5768 0214 4FF48043 		mov	r3, #16384
 5769 0218 4FF40051 		mov	r1, #8192
 5770 021c 72A8     		add	r0, sp, #456
 5771 021e 0695     		str	r5, [sp, #24]
 5772 0220 0495     		str	r5, [sp, #16]
 5773 0222 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5774              	.LVL639:
 243:src/main.cpp  ****   FR.setRegulator(FF,KP,KI,KD,integralSaturation);
 5775              		.loc 13 243 0
 5776 0226 1823     		movs	r3, #24
 5777 0228 ADF81032 		strh	r3, [sp, #528]	@ movhi
 244:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 5778              		.loc 13 244 0
 5779 022c 1C9B     		ldr	r3, [sp, #112]	@ float
 5780 022e 199A     		ldr	r2, [sp, #100]	@ float
 5781 0230 0193     		str	r3, [sp, #4]	@ float
 5782 0232 1B9B     		ldr	r3, [sp, #108]	@ float
 5783 0234 1899     		ldr	r1, [sp, #96]	@ float
 5784 0236 0093     		str	r3, [sp]	@ float
 5785 0238 72A8     		add	r0, sp, #456
 5786 023a 1A9B     		ldr	r3, [sp, #104]	@ float
 5787 023c FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5788              	.LVL640:
 245:src/main.cpp  **** 
 5789              		.loc 13 245 0
 5790 0240 1D9B     		ldr	r3, [sp, #116]	@ float
 247:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 5791              		.loc 13 247 0
 5792 0242 6D4A     		ldr	r2, .L363+104
 245:src/main.cpp  **** 
 5793              		.loc 13 245 0
 5794 0244 8B93     		str	r3, [sp, #556]	@ float
 247:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 5795              		.loc 13 247 0
 5796 0246 0221     		movs	r1, #2
 5797 0248 6C4B     		ldr	r3, .L363+108
 5798 024a 0096     		str	r6, [sp]
 5799 024c 8CA8     		add	r0, sp, #560
 5800 024e FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5801              	.LVL641:
 250:src/main.cpp  ****   FL.encoderAddr = (0x10);
 5802              		.loc 13 250 0
 5803 0252 4FF00208 		mov	r8, #2
 5804 0256 4FF01009 		mov	r9, #16
 5805 025a 4FF48063 		mov	r3, #1024
 5806 025e 2246     		mov	r2, r4
 5807 0260 0694     		str	r4, [sp, #24]
 5808 0262 0494     		str	r4, [sp, #16]
 5809 0264 0393     		str	r3, [sp, #12]
 5810 0266 8DE82002 		stmia	sp, {r5, r9}
 5811 026a 2023     		movs	r3, #32
 5812 026c 3146     		mov	r1, r6
 5813 026e 8CA8     		add	r0, sp, #560
 5814 0270 CDF81480 		str	r8, [sp, #20]
 5815 0274 0295     		str	r5, [sp, #8]
 5816 0276 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5817              	.LVL642:
 252:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 5818              		.loc 13 252 0
 5819 027a 1C9B     		ldr	r3, [sp, #112]	@ float
 5820 027c 199A     		ldr	r2, [sp, #100]	@ float
 5821 027e 0193     		str	r3, [sp, #4]	@ float
 5822 0280 1B9B     		ldr	r3, [sp, #108]	@ float
 5823 0282 1899     		ldr	r1, [sp, #96]	@ float
 5824 0284 0093     		str	r3, [sp]	@ float
 5825 0286 8CA8     		add	r0, sp, #560
 5826 0288 1A9B     		ldr	r3, [sp, #104]	@ float
 251:src/main.cpp  ****   FL.setRegulator(FF,KP,KI,KD,integralSaturation);
 5827              		.loc 13 251 0
 5828 028a ADF87892 		strh	r9, [sp, #632]	@ movhi
 252:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 5829              		.loc 13 252 0
 5830 028e FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5831              	.LVL643:
 253:src/main.cpp  **** 
 5832              		.loc 13 253 0
 5833 0292 1D9B     		ldr	r3, [sp, #116]	@ float
 255:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 5834              		.loc 13 255 0
 5835 0294 5A4A     		ldr	r2, .L363+112
 253:src/main.cpp  **** 
 5836              		.loc 13 253 0
 5837 0296 A593     		str	r3, [sp, #660]	@ float
 255:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 5838              		.loc 13 255 0
 5839 0298 4146     		mov	r1, r8
 5840 029a 4FF08043 		mov	r3, #1073741824
 5841 029e 0096     		str	r6, [sp]
 5842 02a0 A6A8     		add	r0, sp, #664
 5843 02a2 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5844              	.LVL644:
 258:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 5845              		.loc 13 258 0
 5846 02a6 4FF48043 		mov	r3, #16384
 5847 02aa 4FF00809 		mov	r9, #8
 5848 02ae 0393     		str	r3, [sp, #12]
 5849 02b0 4FF40053 		mov	r3, #8192
 5850 02b4 2246     		mov	r2, r4
 5851 02b6 0494     		str	r4, [sp, #16]
 5852 02b8 0294     		str	r4, [sp, #8]
 5853 02ba 0193     		str	r3, [sp, #4]
 5854 02bc 0094     		str	r4, [sp]
 5855 02be 4FF48053 		mov	r3, #4096
 5856 02c2 4FF40061 		mov	r1, #2048
 5857 02c6 A6A8     		add	r0, sp, #664
 5858 02c8 0695     		str	r5, [sp, #24]
 5859 02ca CDF81490 		str	r9, [sp, #20]
 5860 02ce FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5861              	.LVL645:
 259:src/main.cpp  ****   RL.setRegulator(FF,KP,KI,KD,integralSaturation);
 5862              		.loc 13 259 0
 5863 02d2 1423     		movs	r3, #20
 5864 02d4 ADF8E032 		strh	r3, [sp, #736]	@ movhi
 260:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 5865              		.loc 13 260 0
 5866 02d8 1C9B     		ldr	r3, [sp, #112]	@ float
 5867 02da 199A     		ldr	r2, [sp, #100]	@ float
 5868 02dc 0193     		str	r3, [sp, #4]	@ float
 5869 02de 1B9B     		ldr	r3, [sp, #108]	@ float
 5870 02e0 1899     		ldr	r1, [sp, #96]	@ float
 5871 02e2 0093     		str	r3, [sp]	@ float
 5872 02e4 A6A8     		add	r0, sp, #664
 5873 02e6 1A9B     		ldr	r3, [sp, #104]	@ float
 5874 02e8 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5875              	.LVL646:
 261:src/main.cpp  **** 
 5876              		.loc 13 261 0
 5877 02ec 1D9B     		ldr	r3, [sp, #116]	@ float
 263:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 5878              		.loc 13 263 0
 5879 02ee 454A     		ldr	r2, .L363+116
 261:src/main.cpp  **** 
 5880              		.loc 13 261 0
 5881 02f0 BF93     		str	r3, [sp, #764]	@ float
 263:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 5882              		.loc 13 263 0
 5883 02f2 4146     		mov	r1, r8
 5884 02f4 3C4B     		ldr	r3, .L363+88
 5885 02f6 0096     		str	r6, [sp]
 5886 02f8 C0A8     		add	r0, sp, #768
 5887 02fa FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5888              	.LVL647:
 266:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 5889              		.loc 13 266 0
 5890 02fe 4FF40063 		mov	r3, #2048
 5891 0302 2246     		mov	r2, r4
 5892 0304 0593     		str	r3, [sp, #20]
 5893 0306 0494     		str	r4, [sp, #16]
 5894 0308 4FF48053 		mov	r3, #4096
 5895 030c 3946     		mov	r1, r7
 5896 030e C0A8     		add	r0, sp, #768
 5897 0310 0695     		str	r5, [sp, #24]
 5898 0312 CDF80C90 		str	r9, [sp, #12]
 5899 0316 0295     		str	r5, [sp, #8]
 5900 0318 8DE8A000 		stmia	sp, {r5, r7}
 5901 031c FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5902              	.LVL648:
 267:src/main.cpp  ****   RR.setRegulator(FF,KP,KI,KD,integralSaturation);
 5903              		.loc 13 267 0
 5904 0320 1C23     		movs	r3, #28
 5905 0322 ADF84833 		strh	r3, [sp, #840]	@ movhi
 268:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 5906              		.loc 13 268 0
 5907 0326 1C9B     		ldr	r3, [sp, #112]	@ float
 5908 0328 199A     		ldr	r2, [sp, #100]	@ float
 5909 032a 0193     		str	r3, [sp, #4]	@ float
 5910 032c 1B9B     		ldr	r3, [sp, #108]	@ float
 5911 032e 1899     		ldr	r1, [sp, #96]	@ float
 5912 0330 0093     		str	r3, [sp]	@ float
 5913 0332 C0A8     		add	r0, sp, #768
 5914 0334 1A9B     		ldr	r3, [sp, #104]	@ float
 5915 0336 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5916              	.LVL649:
 269:src/main.cpp  **** 
 5917              		.loc 13 269 0
 5918 033a 1D9B     		ldr	r3, [sp, #116]	@ float
 272:src/main.cpp  ****   if(!servo_left->motorInit()){
 5919              		.loc 13 272 0
 5920 033c 3EA8     		add	r0, sp, #248
 269:src/main.cpp  **** 
 5921              		.loc 13 269 0
 5922 033e D993     		str	r3, [sp, #868]	@ float
 272:src/main.cpp  ****   if(!servo_left->motorInit()){
 5923              		.loc 13 272 0
 5924 0340 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5925              	.LVL650:
 5926 0344 1F4C     		ldr	r4, .L363+52
 273:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 5927              		.loc 13 273 0
 5928 0346 0368     		ldr	r3, [r0]
 272:src/main.cpp  ****   if(!servo_left->motorInit()){
 5929              		.loc 13 272 0
 5930 0348 6061     		str	r0, [r4, #20]
 273:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 5931              		.loc 13 273 0
 5932 034a DB68     		ldr	r3, [r3, #12]
 5933 034c 9847     		blx	r3
 5934              	.LVL651:
 5935 034e 68B9     		cbnz	r0, .L331
 274:src/main.cpp  ****     nh.logerror(error);
 5936              		.loc 13 274 0
 5937 0350 6069     		ldr	r0, [r4, #20]
 5938 0352 0368     		ldr	r3, [r0]
 5939 0354 1B69     		ldr	r3, [r3, #16]
 5940 0356 9847     		blx	r3
 5941              	.LVL652:
 5942 0358 2B49     		ldr	r1, .L363+120
 5943 035a 0246     		mov	r2, r0
 5944 035c 2FA8     		add	r0, sp, #188
 5945 035e FFF7FEFF 		bl	sprintf
 5946              	.LVL653:
 275:src/main.cpp  ****   }
 5947              		.loc 13 275 0
 5948 0362 2FA9     		add	r1, sp, #188
 5949 0364 04F69800 		addw	r0, r4, #2200
 5950 0368 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8logerrorEPKc
 5951              	.LVL654:
 5952              	.L331:
 278:src/main.cpp  ****   if(!servo_right->motorInit()){
 5953              		.loc 13 278 0
 5954 036c 58A8     		add	r0, sp, #352
 5955 036e FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5956              	.LVL655:
 279:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 5957              		.loc 13 279 0
 5958 0372 0368     		ldr	r3, [r0]
 278:src/main.cpp  ****   if(!servo_right->motorInit()){
 5959              		.loc 13 278 0
 5960 0374 A061     		str	r0, [r4, #24]
 279:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 5961              		.loc 13 279 0
 5962 0376 DB68     		ldr	r3, [r3, #12]
 278:src/main.cpp  ****   if(!servo_right->motorInit()){
 5963              		.loc 13 278 0
 5964 0378 124D     		ldr	r5, .L363+52
 279:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 5965              		.loc 13 279 0
 5966 037a 9847     		blx	r3
 5967              	.LVL656:
 5968 037c 0028     		cmp	r0, #0
 5969 037e 4DD1     		bne	.L332
 280:src/main.cpp  ****     nh.logerror(error);
 5970              		.loc 13 280 0
 5971 0380 A869     		ldr	r0, [r5, #24]
 5972 0382 0368     		ldr	r3, [r0]
 5973 0384 1B69     		ldr	r3, [r3, #16]
 5974 0386 9847     		blx	r3
 5975              	.LVL657:
 5976 0388 1F49     		ldr	r1, .L363+120
 5977 038a 0246     		mov	r2, r0
 5978 038c 3EE0     		b	.L364
 5979              	.L365:
 5980 038e 00BF     		.align	2
 5981              	.L363:
 5982 0390 68020000 		.word	.LC24
 5983 0394 98080000 		.word	.LANCHOR1+2200
 5984 0398 00004845 		.word	1162346496
 5985 039c 77020000 		.word	.LC25
 5986 03a0 00803B45 		.word	1161527296
 5987 03a4 86020000 		.word	.LC26
 5988 03a8 0000FA44 		.word	1157234688
 5989 03ac 95020000 		.word	.LC27
 5990 03b0 00002042 		.word	1109393408
 5991 03b4 A4020000 		.word	.LC28
 5992 03b8 00002041 		.word	1092616192
 5993 03bc C3020000 		.word	.LC29
 5994 03c0 0AD7233D 		.word	1025758986
 5995 03c4 00000000 		.word	.LANCHOR1
 5996 03c8 DB020000 		.word	.LC30
 5997 03cc 7B142E3E 		.word	1043207291
 5998 03d0 04030000 		.word	.LC31
 5999 03d4 EC51383D 		.word	1027101164
 6000 03d8 00080040 		.word	1073743872
 6001 03dc 27030000 		.word	.LC32
 6002 03e0 000C0140 		.word	1073810432
 6003 03e4 32030000 		.word	.LC33
 6004 03e8 002C0140 		.word	1073818624
 6005 03ec 3E030000 		.word	.LC34
 6006 03f0 00080140 		.word	1073809408
 6007 03f4 00100140 		.word	1073811456
 6008 03f8 4A030000 		.word	.LC35
 6009 03fc 00040040 		.word	1073742848
 6010 0400 55030000 		.word	.LC36
 6011 0404 5F030000 		.word	.LC37
 6012 0408 6A030000 		.word	.LC38
 6013              	.L364:
 6014 040c 2FA8     		add	r0, sp, #188
 6015 040e FFF7FEFF 		bl	sprintf
 6016              	.LVL658:
 281:src/main.cpp  ****   }
 6017              		.loc 13 281 0
 6018 0412 2FA9     		add	r1, sp, #188
 6019 0414 05F69800 		addw	r0, r5, #2200
 6020 0418 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8logerrorEPKc
 6021              	.LVL659:
 6022              	.L332:
 284:src/main.cpp  ****   if(!front_left->motorInit()){
 6023              		.loc 13 284 0
 6024 041c 8CA8     		add	r0, sp, #560
 6025 041e FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 6026              	.LVL660:
 6027 0422 814D     		ldr	r5, .L366
 285:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 6028              		.loc 13 285 0
 6029 0424 0368     		ldr	r3, [r0]
 284:src/main.cpp  ****   if(!front_left->motorInit()){
 6030              		.loc 13 284 0
 6031 0426 C5F84001 		str	r0, [r5, #320]
 285:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 6032              		.loc 13 285 0
 6033 042a DB68     		ldr	r3, [r3, #12]
 6034 042c 9847     		blx	r3
 6035              	.LVL661:
 6036 042e 68B9     		cbnz	r0, .L333
 286:src/main.cpp  ****     nh.logerror(error);
 6037              		.loc 13 286 0
 6038 0430 D5F84001 		ldr	r0, [r5, #320]
 6039 0434 0368     		ldr	r3, [r0]
 6040 0436 1B69     		ldr	r3, [r3, #16]
 6041 0438 9847     		blx	r3
 6042              	.LVL662:
 6043 043a 7C49     		ldr	r1, .L366+4
 6044 043c 0246     		mov	r2, r0
 6045 043e 2FA8     		add	r0, sp, #188
 6046 0440 FFF7FEFF 		bl	sprintf
 6047              	.LVL663:
 287:src/main.cpp  ****   }
 6048              		.loc 13 287 0
 6049 0444 2FA9     		add	r1, sp, #188
 6050 0446 7A48     		ldr	r0, .L366+8
 6051 0448 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8logerrorEPKc
 6052              	.LVL664:
 6053              	.L333:
 290:src/main.cpp  ****   if(!front_right->motorInit()){
 6054              		.loc 13 290 0
 6055 044c 72A8     		add	r0, sp, #456
 6056 044e FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 6057              	.LVL665:
 291:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 6058              		.loc 13 291 0
 6059 0452 0368     		ldr	r3, [r0]
 290:src/main.cpp  ****   if(!front_right->motorInit()){
 6060              		.loc 13 290 0
 6061 0454 C5F84401 		str	r0, [r5, #324]
 291:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 6062              		.loc 13 291 0
 6063 0458 DB68     		ldr	r3, [r3, #12]
 6064 045a 9847     		blx	r3
 6065              	.LVL666:
 6066 045c 70B9     		cbnz	r0, .L334
 292:src/main.cpp  ****     nh.logerror(error);
 6067              		.loc 13 292 0
 6068 045e 724B     		ldr	r3, .L366
 6069 0460 D3F84401 		ldr	r0, [r3, #324]
 6070 0464 0368     		ldr	r3, [r0]
 6071 0466 1B69     		ldr	r3, [r3, #16]
 6072 0468 9847     		blx	r3
 6073              	.LVL667:
 6074 046a 7049     		ldr	r1, .L366+4
 6075 046c 0246     		mov	r2, r0
 6076 046e 2FA8     		add	r0, sp, #188
 6077 0470 FFF7FEFF 		bl	sprintf
 6078              	.LVL668:
 293:src/main.cpp  ****   }
 6079              		.loc 13 293 0
 6080 0474 2FA9     		add	r1, sp, #188
 6081 0476 6E48     		ldr	r0, .L366+8
 6082 0478 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8logerrorEPKc
 6083              	.LVL669:
 6084              	.L334:
 296:src/main.cpp  ****   if(!rear_left->motorInit()){
 6085              		.loc 13 296 0
 6086 047c A6A8     		add	r0, sp, #664
 6087 047e FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 6088              	.LVL670:
 297:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 6089              		.loc 13 297 0
 6090 0482 0368     		ldr	r3, [r0]
 296:src/main.cpp  ****   if(!rear_left->motorInit()){
 6091              		.loc 13 296 0
 6092 0484 C5F84801 		str	r0, [r5, #328]
 297:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 6093              		.loc 13 297 0
 6094 0488 DB68     		ldr	r3, [r3, #12]
 6095 048a 9847     		blx	r3
 6096              	.LVL671:
 6097 048c 70B9     		cbnz	r0, .L335
 298:src/main.cpp  ****     nh.logerror(error);
 6098              		.loc 13 298 0
 6099 048e 664B     		ldr	r3, .L366
 6100 0490 D3F84801 		ldr	r0, [r3, #328]
 6101 0494 0368     		ldr	r3, [r0]
 6102 0496 1B69     		ldr	r3, [r3, #16]
 6103 0498 9847     		blx	r3
 6104              	.LVL672:
 6105 049a 6449     		ldr	r1, .L366+4
 6106 049c 0246     		mov	r2, r0
 6107 049e 2FA8     		add	r0, sp, #188
 6108 04a0 FFF7FEFF 		bl	sprintf
 6109              	.LVL673:
 299:src/main.cpp  ****   }
 6110              		.loc 13 299 0
 6111 04a4 2FA9     		add	r1, sp, #188
 6112 04a6 6248     		ldr	r0, .L366+8
 6113 04a8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8logerrorEPKc
 6114              	.LVL674:
 6115              	.L335:
 302:src/main.cpp  ****   if(!rear_right->motorInit()){
 6116              		.loc 13 302 0
 6117 04ac C0A8     		add	r0, sp, #768
 6118 04ae FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 6119              	.LVL675:
 303:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 6120              		.loc 13 303 0
 6121 04b2 0368     		ldr	r3, [r0]
 302:src/main.cpp  ****   if(!rear_right->motorInit()){
 6122              		.loc 13 302 0
 6123 04b4 C5F84C01 		str	r0, [r5, #332]
 303:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 6124              		.loc 13 303 0
 6125 04b8 DB68     		ldr	r3, [r3, #12]
 6126 04ba 9847     		blx	r3
 6127              	.LVL676:
 6128 04bc 70B9     		cbnz	r0, .L336
 304:src/main.cpp  ****     nh.logerror(error);
 6129              		.loc 13 304 0
 6130 04be 5A4B     		ldr	r3, .L366
 6131 04c0 D3F84C01 		ldr	r0, [r3, #332]
 6132 04c4 0368     		ldr	r3, [r0]
 6133 04c6 1B69     		ldr	r3, [r3, #16]
 6134 04c8 9847     		blx	r3
 6135              	.LVL677:
 6136 04ca 5849     		ldr	r1, .L366+4
 6137 04cc 0246     		mov	r2, r0
 6138 04ce 2FA8     		add	r0, sp, #188
 6139 04d0 FFF7FEFF 		bl	sprintf
 6140              	.LVL678:
 305:src/main.cpp  ****   }
 6141              		.loc 13 305 0
 6142 04d4 2FA9     		add	r1, sp, #188
 6143 04d6 5648     		ldr	r0, .L366+8
 6144 04d8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8logerrorEPKc
 6145              	.LVL679:
 6146              	.L336:
 312:src/main.cpp  ****   servo_right->setReference(135);
 6147              		.loc 13 312 0
 6148 04dc 6069     		ldr	r0, [r4, #20]
 6149 04de 5549     		ldr	r1, .L366+12
 6150 04e0 0368     		ldr	r3, [r0]
 6151 04e2 5B69     		ldr	r3, [r3, #20]
 6152 04e4 9847     		blx	r3
 6153              	.LVL680:
 313:src/main.cpp  ****   front_right->setReference(0);
 6154              		.loc 13 313 0
 6155 04e6 A069     		ldr	r0, [r4, #24]
 6156 04e8 5249     		ldr	r1, .L366+12
 6157 04ea 0368     		ldr	r3, [r0]
 6158 04ec 5B69     		ldr	r3, [r3, #20]
 6159 04ee 9847     		blx	r3
 6160              	.LVL681:
 314:src/main.cpp  ****   front_left->setReference(0);
 6161              		.loc 13 314 0
 6162 04f0 D5F84401 		ldr	r0, [r5, #324]
 6163 04f4 0021     		movs	r1, #0
 6164 04f6 0368     		ldr	r3, [r0]
 6165 04f8 5B69     		ldr	r3, [r3, #20]
 6166 04fa 9847     		blx	r3
 6167              	.LVL682:
 315:src/main.cpp  ****   rear_right->setReference(0);
 6168              		.loc 13 315 0
 6169 04fc D5F84001 		ldr	r0, [r5, #320]
 6170 0500 0021     		movs	r1, #0
 6171 0502 0368     		ldr	r3, [r0]
 6172 0504 5B69     		ldr	r3, [r3, #20]
 6173 0506 9847     		blx	r3
 6174              	.LVL683:
 316:src/main.cpp  ****   rear_left->setReference(0);
 6175              		.loc 13 316 0
 6176 0508 D5F84C01 		ldr	r0, [r5, #332]
 6177 050c 0021     		movs	r1, #0
 6178 050e 0368     		ldr	r3, [r0]
 6179 0510 5B69     		ldr	r3, [r3, #20]
 6180 0512 9847     		blx	r3
 6181              	.LVL684:
 317:src/main.cpp  **** 
 6182              		.loc 13 317 0
 6183 0514 D5F84801 		ldr	r0, [r5, #328]
 6184 0518 0021     		movs	r1, #0
 6185 051a 0368     		ldr	r3, [r0]
 319:src/main.cpp  ****   bool connected = false;
 6186              		.loc 13 319 0
 6187 051c 0025     		movs	r5, #0
 317:src/main.cpp  **** 
 6188              		.loc 13 317 0
 6189 051e 5B69     		ldr	r3, [r3, #20]
 6190 0520 9847     		blx	r3
 6191              	.LVL685:
 6192              	.L340:
 331:src/main.cpp  ****     if(cnt < 50)
 6193              		.loc 13 331 0
 6194 0522 FFF7FEFF 		bl	millis
 6195              	.LVL686:
 332:src/main.cpp  ****       servo_left->update(dt_s, connected, true);
 6196              		.loc 13 332 0
 6197 0526 312D     		cmp	r5, #49
 331:src/main.cpp  ****     if(cnt < 50)
 6198              		.loc 13 331 0
 6199 0528 0646     		mov	r6, r0
 6200              	.LVL687:
 333:src/main.cpp  ****     else
 6201              		.loc 13 333 0
 6202 052a D4BF     		ite	le
 6203 052c 6069     		ldrle	r0, [r4, #20]
 6204              	.LVL688:
 335:src/main.cpp  ****     while( millis() - start_time < dt);
 6205              		.loc 13 335 0
 6206 052e A069     		ldrgt	r0, [r4, #24]
 6207 0530 0022     		movs	r2, #0
 6208 0532 0368     		ldr	r3, [r0]
 6209 0534 4049     		ldr	r1, .L366+16
 6210 0536 DF69     		ldr	r7, [r3, #28]
 6211 0538 0123     		movs	r3, #1
 6212 053a B847     		blx	r7
 6213              	.LVL689:
 6214              	.L338:
 336:src/main.cpp  ****     cnt++;
 6215              		.loc 13 336 0
 6216 053c FFF7FEFF 		bl	millis
 6217              	.LVL690:
 6218 0540 801B     		subs	r0, r0, r6
 6219 0542 1328     		cmp	r0, #19
 6220 0544 FAD9     		bls	.L338
 337:src/main.cpp  ****   }
 6221              		.loc 13 337 0
 6222 0546 0135     		adds	r5, r5, #1
 6223              	.LVL691:
 330:src/main.cpp  ****     start_time = millis();
 6224              		.loc 13 330 0
 6225 0548 642D     		cmp	r5, #100
 6226 054a EAD1     		bne	.L340
 340:src/main.cpp  **** 
 6227              		.loc 13 340 0
 6228 054c FF20     		movs	r0, #255
 6229 054e FFF7FEFF 		bl	led_set
 6230              	.LVL692:
 348:src/main.cpp  **** 
 6231              		.loc 13 348 0
 6232 0552 E068     		ldr	r0, [r4, #12]	@ float
 6233 0554 4FF07C51 		mov	r1, #1056964608
 6234 0558 FFF7FEFF 		bl	__aeabi_fmul
 6235              	.LVL693:
 6236 055c FFF7FEFF 		bl	__aeabi_f2d
 6237              	.LVL694:
 6238 0560 0246     		mov	r2, r0
 6239 0562 0B46     		mov	r3, r1
 6240 0564 FFF7FEFF 		bl	__aeabi_dmul
 6241              	.LVL695:
 6242 0568 0246     		mov	r2, r0
 6243 056a 0B46     		mov	r3, r1
 6244 056c FFF7FEFF 		bl	__aeabi_dadd
 6245              	.LVL696:
 6246 0570 FFF7FEFF 		bl	sqrt
 6247              	.LVL697:
 6248 0574 FFF7FEFF 		bl	__aeabi_d2f
 6249              	.LVL698:
 351:src/main.cpp  ****   uint32_t elapsed;
 6250              		.loc 13 351 0
 6251 0578 304B     		ldr	r3, .L366+20
 6252 057a 1EAD     		add	r5, sp, #120
 348:src/main.cpp  **** 
 6253              		.loc 13 348 0
 6254 057c 1490     		str	r0, [sp, #80]	@ float
 6255              	.LVL699:
 6256              	.LBB438:
 6257              	.LBB439:
 6258              	.LBB440:
 286:./lib/ros_lib/ros/node_handle.h ****       };
 6259              		.loc 11 286 0
 6260 057e DFF8C4B0 		ldr	fp, .L366+28
 6261              	.LBE440:
 6262              	.LBE439:
 6263              	.LBE438:
 351:src/main.cpp  ****   uint32_t elapsed;
 6264              		.loc 13 351 0
 6265 0582 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6266              	.LVL700:
 6267 0584 85E80F00 		stmia	r5, {r0, r1, r2, r3}
 353:src/main.cpp  **** 
 6268              		.loc 13 353 0
 6269 0588 0123     		movs	r3, #1
 6270 058a 2370     		strb	r3, [r4]
 342:src/main.cpp  **** 
 6271              		.loc 13 342 0
 6272 058c 0024     		movs	r4, #0
 6273              	.LVL701:
 6274              	.L349:
 6275              	.LBB458:
 359:src/main.cpp  **** 
 6276              		.loc 13 359 0
 6277 058e FFF7FEFF 		bl	millis
 6278              	.LVL702:
 365:src/main.cpp  ****       debug_toggle();
 6279              		.loc 13 365 0
 6280 0592 631C     		adds	r3, r4, #1
 6281 0594 3222     		movs	r2, #50
 6282 0596 1593     		str	r3, [sp, #84]
 6283 0598 94FBF2F3 		sdiv	r3, r4, r2
 6284 059c 02FB1344 		mls	r4, r2, r3, r4
 6285              	.LVL703:
 359:src/main.cpp  **** 
 6286              		.loc 13 359 0
 6287 05a0 1290     		str	r0, [sp, #72]
 6288              	.LVL704:
 365:src/main.cpp  ****       debug_toggle();
 6289              		.loc 13 365 0
 6290 05a2 0CB9     		cbnz	r4, .L341
 366:src/main.cpp  ****     connected = nh.connected();
 6291              		.loc 13 366 0
 6292 05a4 FFF7FEFF 		bl	debug_toggle
 6293              	.LVL705:
 6294              	.L341:
 6295              	.LBB443:
 6296              	.LBB441:
 286:./lib/ros_lib/ros/node_handle.h ****       };
 6297              		.loc 11 286 0
 6298 05a8 254B     		ldr	r3, .L366+24
 6299              	.LBE441:
 6300              	.LBE443:
 370:src/main.cpp  ****     float sr = servo_right->update(dt_s, connected, true);
 6301              		.loc 13 370 0
 6302 05aa DBF81400 		ldr	r0, [fp, #20]
 6303              	.LBB444:
 6304              	.LBB442:
 286:./lib/ros_lib/ros/node_handle.h ****       };
 6305              		.loc 11 286 0
 6306 05ae 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 6307              	.LVL706:
 6308              	.LBE442:
 6309              	.LBE444:
 370:src/main.cpp  ****     float sr = servo_right->update(dt_s, connected, true);
 6310              		.loc 13 370 0
 6311 05b0 0368     		ldr	r3, [r0]
 6312 05b2 2A46     		mov	r2, r5
 6313 05b4 DC69     		ldr	r4, [r3, #28]
 6314 05b6 2049     		ldr	r1, .L366+16
 6315 05b8 0123     		movs	r3, #1
 6316 05ba A047     		blx	r4
 6317              	.LVL707:
 6318 05bc 8046     		mov	r8, r0
 6319              	.LVL708:
 371:src/main.cpp  **** 
 6320              		.loc 13 371 0
 6321 05be DBF81800 		ldr	r0, [fp, #24]
 6322              	.LVL709:
 6323 05c2 2A46     		mov	r2, r5
 6324 05c4 0368     		ldr	r3, [r0]
 6325 05c6 1C49     		ldr	r1, .L366+16
 6326 05c8 DC69     		ldr	r4, [r3, #28]
 6327 05ca 0123     		movs	r3, #1
 6328 05cc A047     		blx	r4
 6329              	.LVL710:
 373:src/main.cpp  ****     debug_msg.data[1] = (float)sr;
 6330              		.loc 13 373 0
 6331 05ce DBF86438 		ldr	r3, [fp, #2148]
 371:src/main.cpp  **** 
 6332              		.loc 13 371 0
 6333 05d2 0646     		mov	r6, r0
 6334              	.LVL711:
 373:src/main.cpp  ****     debug_msg.data[1] = (float)sr;
 6335              		.loc 13 373 0
 6336 05d4 C3F80080 		str	r8, [r3]	@ float
 374:src/main.cpp  **** 
 6337              		.loc 13 374 0
 6338 05d8 5860     		str	r0, [r3, #4]	@ float
 6339              	.LVL712:
 378:src/main.cpp  ****       waitForServos = false;
 6340              		.loc 13 378 0
 6341 05da 9BF80930 		ldrb	r3, [fp, #9]	@ zero_extendqisi2
 6342 05de 194F     		ldr	r7, .L366+28
 6343 05e0 114C     		ldr	r4, .L366
 6344 05e2 002B     		cmp	r3, #0
 6345 05e4 30D1     		bne	.L342
 6346              	.LVL713:
 6347              	.L345:
 6348 05e6 7B68     		ldr	r3, [r7, #4]
 6349 05e8 129A     		ldr	r2, [sp, #72]
 6350 05ea 03F5FA73 		add	r3, r3, #500
 6351 05ee 9A42     		cmp	r2, r3
 6352 05f0 48D3     		bcc	.L343
 6353              	.LVL714:
 386:src/main.cpp  ****       front_left->setReference(0);
 6354              		.loc 13 386 0
 6355 05f2 D4F84401 		ldr	r0, [r4, #324]
 6356 05f6 0021     		movs	r1, #0
 6357 05f8 0368     		ldr	r3, [r0]
 385:src/main.cpp  ****       front_right->setReference(0);
 6358              		.loc 13 385 0
 6359 05fa 0027     		movs	r7, #0
 386:src/main.cpp  ****       front_left->setReference(0);
 6360              		.loc 13 386 0
 6361 05fc 5B69     		ldr	r3, [r3, #20]
 6362 05fe 9847     		blx	r3
 6363              	.LVL715:
 387:src/main.cpp  ****       rear_left->setReference(0);
 6364              		.loc 13 387 0
 6365 0600 D4F84001 		ldr	r0, [r4, #320]
 6366 0604 0021     		movs	r1, #0
 6367 0606 0368     		ldr	r3, [r0]
 6368 0608 5B69     		ldr	r3, [r3, #20]
 6369 060a 9847     		blx	r3
 6370              	.LVL716:
 388:src/main.cpp  ****       rear_right->setReference(0);
 6371              		.loc 13 388 0
 6372 060c D4F84801 		ldr	r0, [r4, #328]
 6373 0610 0021     		movs	r1, #0
 6374 0612 0368     		ldr	r3, [r0]
 6375 0614 5B69     		ldr	r3, [r3, #20]
 6376 0616 9847     		blx	r3
 6377              	.LVL717:
 389:src/main.cpp  ****     }
 6378              		.loc 13 389 0
 6379 0618 D4F84C01 		ldr	r0, [r4, #332]
 6380 061c 0021     		movs	r1, #0
 6381 061e 0368     		ldr	r3, [r0]
 6382 0620 5B69     		ldr	r3, [r3, #20]
 6383 0622 9847     		blx	r3
 6384              	.LVL718:
 6385 0624 49E0     		b	.L350
 6386              	.L367:
 6387 0626 00BF     		.align	2
 6388              	.L366:
 6389 0628 F8100000 		.word	.LANCHOR2
 6390 062c 6A030000 		.word	.LC38
 6391 0630 98080000 		.word	.LANCHOR1+2200
 6392 0634 00000743 		.word	1124532224
 6393 0638 0BD7A33C 		.word	1017370379
 6394 063c 1C000000 		.word	.LANCHOR0+28
 6395 0640 8C110000 		.word	.LANCHOR1+4492
 6396 0644 00000000 		.word	.LANCHOR1
 6397              	.LVL719:
 6398              	.L342:
 378:src/main.cpp  ****       waitForServos = false;
 6399              		.loc 13 378 0 discriminator 1
 6400 0648 DBF81800 		ldr	r0, [fp, #24]
 6401              	.LVL720:
 6402 064c 0368     		ldr	r3, [r0]
 6403 064e 9B69     		ldr	r3, [r3, #24]
 6404 0650 9847     		blx	r3
 6405              	.LVL721:
 6406 0652 8246     		mov	r10, r0
 6407 0654 3046     		mov	r0, r6
 6408 0656 FFF7FEFF 		bl	__aeabi_f2iz
 6409              	.LVL722:
 6410 065a 8146     		mov	r9, r0
 6411 065c 5046     		mov	r0, r10
 6412 065e FFF7FEFF 		bl	__aeabi_f2iz
 6413              	.LVL723:
 6414 0662 8145     		cmp	r9, r0
 6415 0664 BFD1     		bne	.L345
 378:src/main.cpp  ****       waitForServos = false;
 6416              		.loc 13 378 0 is_stmt 0 discriminator 4
 6417 0666 DBF81400 		ldr	r0, [fp, #20]
 6418 066a 0368     		ldr	r3, [r0]
 6419 066c 9B69     		ldr	r3, [r3, #24]
 6420 066e 9847     		blx	r3
 6421              	.LVL724:
 6422 0670 8246     		mov	r10, r0
 6423 0672 4046     		mov	r0, r8
 6424 0674 FFF7FEFF 		bl	__aeabi_f2iz
 6425              	.LVL725:
 6426 0678 8146     		mov	r9, r0
 6427 067a 5046     		mov	r0, r10
 6428 067c FFF7FEFF 		bl	__aeabi_f2iz
 6429              	.LVL726:
 6430 0680 8145     		cmp	r9, r0
 6431 0682 B0D1     		bne	.L345
 6432              	.L343:
 380:src/main.cpp  ****       front_left->setReference(motorCmd[1]);
 6433              		.loc 13 380 0 is_stmt 1
 6434 0684 D4F84401 		ldr	r0, [r4, #324]
 379:src/main.cpp  ****       front_right->setReference(motorCmd[0]);
 6435              		.loc 13 379 0
 6436 0688 0023     		movs	r3, #0
 6437 068a 7B72     		strb	r3, [r7, #9]
 380:src/main.cpp  ****       front_left->setReference(motorCmd[1]);
 6438              		.loc 13 380 0
 6439 068c 0368     		ldr	r3, [r0]
 6440 068e F969     		ldr	r1, [r7, #28]	@ float
 6441 0690 5B69     		ldr	r3, [r3, #20]
 6442 0692 9847     		blx	r3
 6443              	.LVL727:
 381:src/main.cpp  ****       rear_left->setReference(motorCmd[2]);
 6444              		.loc 13 381 0
 6445 0694 D4F84001 		ldr	r0, [r4, #320]
 6446 0698 396A     		ldr	r1, [r7, #32]	@ float
 6447 069a 0368     		ldr	r3, [r0]
 6448 069c 5B69     		ldr	r3, [r3, #20]
 6449 069e 9847     		blx	r3
 6450              	.LVL728:
 382:src/main.cpp  ****       rear_right->setReference(motorCmd[3]);
 6451              		.loc 13 382 0
 6452 06a0 D4F84801 		ldr	r0, [r4, #328]
 6453 06a4 796A     		ldr	r1, [r7, #36]	@ float
 6454 06a6 0368     		ldr	r3, [r0]
 6455 06a8 5B69     		ldr	r3, [r3, #20]
 6456 06aa 9847     		blx	r3
 6457              	.LVL729:
 383:src/main.cpp  ****     }else{
 6458              		.loc 13 383 0
 6459 06ac D4F84C01 		ldr	r0, [r4, #332]
 6460 06b0 B96A     		ldr	r1, [r7, #40]	@ float
 6461 06b2 0368     		ldr	r3, [r0]
 376:src/main.cpp  **** 
 6462              		.loc 13 376 0
 6463 06b4 0127     		movs	r7, #1
 383:src/main.cpp  ****     }else{
 6464              		.loc 13 383 0
 6465 06b6 5B69     		ldr	r3, [r3, #20]
 6466 06b8 9847     		blx	r3
 6467              	.LVL730:
 6468              	.L350:
 392:src/main.cpp  ****     //udelay(500);
 6469              		.loc 13 392 0
 6470 06ba D4F84401 		ldr	r0, [r4, #324]
 6471 06be 2A46     		mov	r2, r5
 6472 06c0 0368     		ldr	r3, [r0]
 6473 06c2 A549     		ldr	r1, .L368+8
 6474 06c4 D3F81C90 		ldr	r9, [r3, #28]
 6475 06c8 3B46     		mov	r3, r7
 6476 06ca C847     		blx	r9
 6477              	.LVL731:
 6478 06cc 0890     		str	r0, [sp, #32]	@ float
 6479              	.LVL732:
 394:src/main.cpp  ****     //udelay(500);
 6480              		.loc 13 394 0
 6481 06ce D4F84001 		ldr	r0, [r4, #320]
 6482              	.LVL733:
 6483 06d2 2A46     		mov	r2, r5
 6484 06d4 0368     		ldr	r3, [r0]
 6485 06d6 A049     		ldr	r1, .L368+8
 6486 06d8 D3F81C90 		ldr	r9, [r3, #28]
 6487 06dc 3B46     		mov	r3, r7
 6488 06de C847     		blx	r9
 6489              	.LVL734:
 6490 06e0 8246     		mov	r10, r0
 6491              	.LVL735:
 396:src/main.cpp  ****     //udelay(500);
 6492              		.loc 13 396 0
 6493 06e2 D4F84801 		ldr	r0, [r4, #328]
 6494              	.LVL736:
 6495 06e6 2A46     		mov	r2, r5
 6496 06e8 0368     		ldr	r3, [r0]
 6497 06ea 9B49     		ldr	r1, .L368+8
 6498 06ec D3F81C90 		ldr	r9, [r3, #28]
 6499 06f0 3B46     		mov	r3, r7
 6500 06f2 C847     		blx	r9
 6501              	.LVL737:
 6502 06f4 8146     		mov	r9, r0
 6503              	.LVL738:
 398:src/main.cpp  ****     //udelay(1000);
 6504              		.loc 13 398 0
 6505 06f6 D4F84C01 		ldr	r0, [r4, #332]
 6506              	.LVL739:
 6507 06fa 2A46     		mov	r2, r5
 6508 06fc 0368     		ldr	r3, [r0]
 6509 06fe 9649     		ldr	r1, .L368+8
 6510 0700 DC69     		ldr	r4, [r3, #28]
 6511 0702 3B46     		mov	r3, r7
 6512 0704 A047     		blx	r4
 6513              	.LVL740:
 403:src/main.cpp  ****     debug_msg.data[3] = fl;
 6514              		.loc 13 403 0
 6515 0706 DBF86438 		ldr	r3, [fp, #2148]
 6516 070a 089A     		ldr	r2, [sp, #32]	@ float
 404:src/main.cpp  ****     debug_msg.data[4] = rl;
 6517              		.loc 13 404 0
 6518 070c C3F80CA0 		str	r10, [r3, #12]	@ float
 405:src/main.cpp  ****     debug_msg.data[5] = rr;
 6519              		.loc 13 405 0
 6520 0710 C3F81090 		str	r9, [r3, #16]	@ float
 406:src/main.cpp  **** 
 6521              		.loc 13 406 0
 6522 0714 5861     		str	r0, [r3, #20]	@ float
 403:src/main.cpp  ****     debug_msg.data[3] = fl;
 6523              		.loc 13 403 0
 6524 0716 9A60     		str	r2, [r3, #8]	@ float
 408:src/main.cpp  ****     float angles[4] = {sr-90, -sl+90, sl+90, -sr-90};
 6525              		.loc 13 408 0
 6526 0718 2590     		str	r0, [sp, #148]	@ float
 409:src/main.cpp  **** 
 6527              		.loc 13 409 0
 6528 071a 9049     		ldr	r1, .L368+12
 6529 071c 3046     		mov	r0, r6
 6530              	.LVL741:
 408:src/main.cpp  ****     float angles[4] = {sr-90, -sl+90, sl+90, -sr-90};
 6531              		.loc 13 408 0
 6532 071e 2292     		str	r2, [sp, #136]	@ float
 6533 0720 CDF88CA0 		str	r10, [sp, #140]	@ float
 6534 0724 CDF89090 		str	r9, [sp, #144]	@ float
 409:src/main.cpp  **** 
 6535              		.loc 13 409 0
 6536 0728 FFF7FEFF 		bl	__aeabi_fsub
 6537              	.LVL742:
 6538 072c 26AC     		add	r4, sp, #152
 6539 072e 4146     		mov	r1, r8
 6540 0730 2060     		str	r0, [r4]	@ float
 6541 0732 8A48     		ldr	r0, .L368+12
 6542 0734 FFF7FEFF 		bl	__aeabi_fsub
 6543              	.LVL743:
 6544 0738 8849     		ldr	r1, .L368+12
 6545 073a 6060     		str	r0, [r4, #4]	@ float
 6546 073c 4046     		mov	r0, r8
 6547 073e FFF7FEFF 		bl	__aeabi_fadd
 6548              	.LVL744:
 6549 0742 8649     		ldr	r1, .L368+12
 6550 0744 A060     		str	r0, [r4, #8]	@ float
 6551 0746 06F10040 		add	r0, r6, #-2147483648
 6552 074a FFF7FEFF 		bl	__aeabi_fsub
 6553              	.LVL745:
 6554 074e E060     		str	r0, [r4, #12]	@ float
 6555              	.LVL746:
 6556              	.LBB445:
 6557              	.LBB446:
 419:src/main.cpp  ****       //odom_msg.data[i] = motorCmd[i];
 6558              		.loc 13 419 0
 6559 0750 DBF81000 		ldr	r0, [fp, #16]	@ float
 6560 0754 FFF7FEFF 		bl	__aeabi_f2d
 6561              	.LVL747:
 6562              	.LBE446:
 6563              	.LBE445:
 414:src/main.cpp  ****     for(i = 0; i < 4; i++){
 6564              		.loc 13 414 0
 6565 0758 4FF00009 		mov	r9, #0
 6566              	.LVL748:
 413:src/main.cpp  ****     float theta_dot = 0;
 6567              		.loc 13 413 0
 6568 075c CA46     		mov	r10, r9
 6569              	.LVL749:
 412:src/main.cpp  ****     float y_dot = 0;
 6570              		.loc 13 412 0
 6571 075e 4F46     		mov	r7, r9
 6572              	.LVL750:
 6573              	.LBB450:
 6574              	.LBB447:
 419:src/main.cpp  ****       //odom_msg.data[i] = motorCmd[i];
 6575              		.loc 13 419 0
 6576 0760 CDE91001 		strd	r0, [sp, #64]
 6577              	.LBE447:
 6578              	.LBE450:
 408:src/main.cpp  ****     float angles[4] = {sr-90, -sl+90, sl+90, -sr-90};
 6579              		.loc 13 408 0
 6580 0764 22AD     		add	r5, sp, #136
 6581              	.LBB451:
 415:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 6582              		.loc 13 415 0
 6583 0766 4FF00008 		mov	r8, #0
 6584              	.LVL751:
 6585              	.LBB448:
 416:src/main.cpp  ****       x_dot += cos(alpha[i]+angles[i])*speeds[i];
 6586              		.loc 13 416 0
 6587 076a 1394     		str	r4, [sp, #76]
 417:src/main.cpp  ****       y_dot += sin(alpha[i]+angles[i])*speeds[i];
 6588              		.loc 13 417 0
 6589 076c 1795     		str	r5, [sp, #92]
 6590              	.LVL752:
 6591              	.L346:
 416:src/main.cpp  ****       x_dot += cos(alpha[i]+angles[i])*speeds[i];
 6592              		.loc 13 416 0 discriminator 2
 6593 076e 139B     		ldr	r3, [sp, #76]
 6594 0770 53F82800 		ldr	r0, [r3, r8, lsl #2]	@ float
 6595 0774 FFF7FEFF 		bl	__aeabi_f2d
 6596              	.LVL753:
 6597 0778 75A3     		adr	r3, .L368
 6598 077a D3E90023 		ldrd	r2, [r3]
 6599 077e FFF7FEFF 		bl	__aeabi_dmul
 6600              	.LVL754:
 6601 0782 0022     		movs	r2, #0
 6602 0784 764B     		ldr	r3, .L368+16
 6603 0786 FFF7FEFF 		bl	__aeabi_ddiv
 6604              	.LVL755:
 6605 078a FFF7FEFF 		bl	__aeabi_d2f
 6606              	.LVL756:
 6607 078e 139B     		ldr	r3, [sp, #76]
 6608 0790 1690     		str	r0, [sp, #88]	@ float
 6609 0792 43F82800 		str	r0, [r3, r8, lsl #2]	@ float
 417:src/main.cpp  ****       y_dot += sin(alpha[i]+angles[i])*speeds[i];
 6610              		.loc 13 417 0 discriminator 2
 6611 0796 1EAB     		add	r3, sp, #120
 6612 0798 53F82860 		ldr	r6, [r3, r8, lsl #2]	@ float
 6613 079c 3146     		mov	r1, r6
 6614 079e FFF7FEFF 		bl	__aeabi_fadd
 6615              	.LVL757:
 6616 07a2 FFF7FEFF 		bl	__aeabi_f2d
 6617              	.LVL758:
 6618 07a6 CDE90C01 		strd	r0, [sp, #48]
 6619 07aa FFF7FEFF 		bl	cos
 6620              	.LVL759:
 6621 07ae 179B     		ldr	r3, [sp, #92]
 6622 07b0 CDE90A01 		strd	r0, [sp, #40]
 6623 07b4 53F82800 		ldr	r0, [r3, r8, lsl #2]	@ float
 6624 07b8 FFF7FEFF 		bl	__aeabi_f2d
 6625              	.LVL760:
 6626 07bc 0246     		mov	r2, r0
 6627 07be 0B46     		mov	r3, r1
 6628 07c0 CDE90801 		strd	r0, [sp, #32]
 6629 07c4 DDE90A01 		ldrd	r0, [sp, #40]
 6630 07c8 FFF7FEFF 		bl	__aeabi_dmul
 6631              	.LVL761:
 6632 07cc 0446     		mov	r4, r0
 6633 07ce 3846     		mov	r0, r7
 6634 07d0 0D46     		mov	r5, r1
 6635 07d2 FFF7FEFF 		bl	__aeabi_f2d
 6636              	.LVL762:
 6637 07d6 0246     		mov	r2, r0
 6638 07d8 0B46     		mov	r3, r1
 6639 07da 2046     		mov	r0, r4
 6640 07dc 2946     		mov	r1, r5
 6641 07de FFF7FEFF 		bl	__aeabi_dadd
 6642              	.LVL763:
 6643 07e2 FFF7FEFF 		bl	__aeabi_d2f
 6644              	.LVL764:
 6645 07e6 0746     		mov	r7, r0
 6646              	.LVL765:
 418:src/main.cpp  ****       float delta = atan( (l*cos(alpha[i]+d*cos(alpha[i] + angles[i]))) / (l*sin(alpha[i] + d*sin(a
 6647              		.loc 13 418 0 discriminator 2
 6648 07e8 DDE90C01 		ldrd	r0, [sp, #48]
 6649              	.LVL766:
 6650 07ec FFF7FEFF 		bl	sin
 6651              	.LVL767:
 6652 07f0 0246     		mov	r2, r0
 6653 07f2 0B46     		mov	r3, r1
 6654 07f4 CDE90C01 		strd	r0, [sp, #48]
 6655 07f8 DDE90801 		ldrd	r0, [sp, #32]
 6656 07fc FFF7FEFF 		bl	__aeabi_dmul
 6657              	.LVL768:
 6658 0800 0446     		mov	r4, r0
 6659 0802 5046     		mov	r0, r10
 6660 0804 0D46     		mov	r5, r1
 6661 0806 FFF7FEFF 		bl	__aeabi_f2d
 6662              	.LVL769:
 6663 080a 0246     		mov	r2, r0
 6664 080c 0B46     		mov	r3, r1
 6665 080e 2046     		mov	r0, r4
 6666 0810 2946     		mov	r1, r5
 6667 0812 FFF7FEFF 		bl	__aeabi_dadd
 6668              	.LVL770:
 6669 0816 FFF7FEFF 		bl	__aeabi_d2f
 6670              	.LVL771:
 6671 081a 8246     		mov	r10, r0
 6672              	.LVL772:
 419:src/main.cpp  ****       //odom_msg.data[i] = motorCmd[i];
 6673              		.loc 13 419 0 discriminator 2
 6674 081c 1498     		ldr	r0, [sp, #80]	@ float
 6675              	.LVL773:
 6676 081e FFF7FEFF 		bl	__aeabi_f2d
 6677              	.LVL774:
 6678 0822 CDE90E01 		strd	r0, [sp, #56]
 6679 0826 3046     		mov	r0, r6
 6680 0828 FFF7FEFF 		bl	__aeabi_f2d
 6681              	.LVL775:
 6682 082c DDE91023 		ldrd	r2, [sp, #64]
 6683 0830 0446     		mov	r4, r0
 6684 0832 0D46     		mov	r5, r1
 6685 0834 DDE90A01 		ldrd	r0, [sp, #40]
 6686 0838 FFF7FEFF 		bl	__aeabi_dmul
 6687              	.LVL776:
 6688 083c 2246     		mov	r2, r4
 6689 083e 2B46     		mov	r3, r5
 6690 0840 FFF7FEFF 		bl	__aeabi_dadd
 6691              	.LVL777:
 6692 0844 FFF7FEFF 		bl	cos
 6693              	.LVL778:
 6694 0848 DDE91023 		ldrd	r2, [sp, #64]
 6695 084c CDE90A01 		strd	r0, [sp, #40]
 6696 0850 DDE90C01 		ldrd	r0, [sp, #48]
 6697 0854 FFF7FEFF 		bl	__aeabi_dmul
 6698              	.LVL779:
 6699 0858 2246     		mov	r2, r4
 6700 085a 2B46     		mov	r3, r5
 6701 085c FFF7FEFF 		bl	__aeabi_dadd
 6702              	.LVL780:
 6703 0860 FFF7FEFF 		bl	sin
 6704              	.LVL781:
 6705 0864 DDE90A23 		ldrd	r2, [sp, #40]
 6706 0868 CDE90C01 		strd	r0, [sp, #48]
 6707 086c DDE90E01 		ldrd	r0, [sp, #56]
 6708 0870 FFF7FEFF 		bl	__aeabi_dmul
 6709              	.LVL782:
 6710 0874 DDE90C23 		ldrd	r2, [sp, #48]
 6711 0878 0446     		mov	r4, r0
 6712 087a 0D46     		mov	r5, r1
 6713 087c DDE90E01 		ldrd	r0, [sp, #56]
 6714 0880 FFF7FEFF 		bl	__aeabi_dmul
 6715              	.LVL783:
 6716 0884 0246     		mov	r2, r0
 6717 0886 0B46     		mov	r3, r1
 6718 0888 2046     		mov	r0, r4
 6719 088a 2946     		mov	r1, r5
 6720 088c FFF7FEFF 		bl	__aeabi_ddiv
 6721              	.LVL784:
 6722 0890 FFF7FEFF 		bl	atan
 6723              	.LVL785:
 421:src/main.cpp  ****     }
 6724              		.loc 13 421 0 discriminator 2
 6725 0894 FFF7FEFF 		bl	__aeabi_d2f
 6726              	.LVL786:
 6727 0898 0146     		mov	r1, r0
 6728 089a 1698     		ldr	r0, [sp, #88]	@ float
 6729 089c FFF7FEFF 		bl	__aeabi_fsub
 6730              	.LVL787:
 6731 08a0 FFF7FEFF 		bl	__aeabi_f2d
 6732              	.LVL788:
 6733 08a4 FFF7FEFF 		bl	cos
 6734              	.LVL789:
 6735 08a8 0246     		mov	r2, r0
 6736 08aa 0B46     		mov	r3, r1
 6737 08ac DDE90801 		ldrd	r0, [sp, #32]
 6738 08b0 FFF7FEFF 		bl	__aeabi_dmul
 6739              	.LVL790:
 6740 08b4 0446     		mov	r4, r0
 6741 08b6 4846     		mov	r0, r9
 6742 08b8 0D46     		mov	r5, r1
 6743 08ba FFF7FEFF 		bl	__aeabi_f2d
 6744              	.LVL791:
 6745 08be 0246     		mov	r2, r0
 6746 08c0 0B46     		mov	r3, r1
 6747 08c2 2046     		mov	r0, r4
 6748 08c4 2946     		mov	r1, r5
 6749 08c6 FFF7FEFF 		bl	__aeabi_dadd
 6750              	.LVL792:
 6751 08ca FFF7FEFF 		bl	__aeabi_d2f
 6752              	.LVL793:
 6753              	.LBE448:
 415:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 6754              		.loc 13 415 0 discriminator 2
 6755 08ce 08F10108 		add	r8, r8, #1
 6756              	.LVL794:
 6757 08d2 B8F1040F 		cmp	r8, #4
 6758              	.LBB449:
 421:src/main.cpp  ****     }
 6759              		.loc 13 421 0 discriminator 2
 6760 08d6 8146     		mov	r9, r0
 6761              	.LVL795:
 6762              	.LBE449:
 415:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 6763              		.loc 13 415 0 discriminator 2
 6764 08d8 7FF449AF 		bne	.L346
 6765              	.LVL796:
 6766              	.LBE451:
 428:src/main.cpp  ****     odom_msg.data[1] = y_dot;
 6767              		.loc 13 428 0
 6768 08dc 4FF07A51 		mov	r1, #1048576000
 6769 08e0 3846     		mov	r0, r7
 6770              	.LVL797:
 6771 08e2 FFF7FEFF 		bl	__aeabi_fmul
 6772              	.LVL798:
 6773 08e6 DBF89448 		ldr	r4, [fp, #2196]
 429:src/main.cpp  ****     odom_msg.data[2] = theta_dot;
 6774              		.loc 13 429 0
 6775 08ea 4FF07A51 		mov	r1, #1048576000
 428:src/main.cpp  ****     odom_msg.data[1] = y_dot;
 6776              		.loc 13 428 0
 6777 08ee 2060     		str	r0, [r4]	@ float
 429:src/main.cpp  ****     odom_msg.data[2] = theta_dot;
 6778              		.loc 13 429 0
 6779 08f0 5046     		mov	r0, r10
 6780 08f2 FFF7FEFF 		bl	__aeabi_fmul
 6781              	.LVL799:
 430:src/main.cpp  **** 
 6782              		.loc 13 430 0
 6783 08f6 4FF07A51 		mov	r1, #1048576000
 429:src/main.cpp  ****     odom_msg.data[2] = theta_dot;
 6784              		.loc 13 429 0
 6785 08fa 6060     		str	r0, [r4, #4]	@ float
 430:src/main.cpp  **** 
 6786              		.loc 13 430 0
 6787 08fc 4846     		mov	r0, r9
 6788 08fe FFF7FEFF 		bl	__aeabi_fmul
 6789              	.LVL800:
 6790              	.LBB452:
 6791              	.LBB453:
 6792              		.file 18 "./lib/ros_lib/ros/publisher.h"
   1:./lib/ros_lib/ros/publisher.h **** /* 
   2:./lib/ros_lib/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/publisher.h ****  *
   4:./lib/ros_lib/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/publisher.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/publisher.h ****  *
   7:./lib/ros_lib/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/publisher.h ****  * are met:
  10:./lib/ros_lib/ros/publisher.h ****  *
  11:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/publisher.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/publisher.h ****  *
  21:./lib/ros_lib/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/publisher.h ****  */
  34:./lib/ros_lib/ros/publisher.h **** 
  35:./lib/ros_lib/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:./lib/ros_lib/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:./lib/ros_lib/ros/publisher.h **** 
  38:./lib/ros_lib/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/publisher.h **** #include "node_handle.h"
  40:./lib/ros_lib/ros/publisher.h **** 
  41:./lib/ros_lib/ros/publisher.h **** namespace ros {
  42:./lib/ros_lib/ros/publisher.h **** 
  43:./lib/ros_lib/ros/publisher.h ****   /* Generic Publisher */
  44:./lib/ros_lib/ros/publisher.h ****   class Publisher
  45:./lib/ros_lib/ros/publisher.h ****   {
  46:./lib/ros_lib/ros/publisher.h ****     public:
  47:./lib/ros_lib/ros/publisher.h ****       Publisher( const char * topic_name, Msg * msg, int endpoint=rosserial_msgs::TopicInfo::ID_PUB
  48:./lib/ros_lib/ros/publisher.h ****         topic_(topic_name), 
  49:./lib/ros_lib/ros/publisher.h ****         msg_(msg),
  50:./lib/ros_lib/ros/publisher.h ****         endpoint_(endpoint) {};
  51:./lib/ros_lib/ros/publisher.h **** 
  52:./lib/ros_lib/ros/publisher.h ****       int publish( const Msg * msg ) { return nh_->publish(id_, msg); };
 6793              		.loc 18 52 0
 6794 0902 184B     		ldr	r3, .L368+20
 6795              	.LBE453:
 6796              	.LBE452:
 430:src/main.cpp  **** 
 6797              		.loc 13 430 0
 6798 0904 A060     		str	r0, [r4, #8]	@ float
 6799              	.LVL801:
 6800              	.LBB455:
 6801              	.LBB454:
 6802              		.loc 18 52 0
 6803 0906 D3F83801 		ldr	r0, [r3, #312]
 6804 090a D3F83411 		ldr	r1, [r3, #308]
 6805 090e 0268     		ldr	r2, [r0]
 6806 0910 1468     		ldr	r4, [r2]
 6807 0912 154A     		ldr	r2, .L368+24
 6808 0914 A047     		blx	r4
 6809              	.LVL802:
 6810              	.LBE454:
 6811              	.LBE455:
 436:src/main.cpp  **** 
 6812              		.loc 13 436 0
 6813 0916 1548     		ldr	r0, .L368+28
 6814 0918 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv
 6815              	.LVL803:
 438:src/main.cpp  ****     if(elapsed > dt){
 6816              		.loc 13 438 0
 6817 091c FFF7FEFF 		bl	millis
 6818              	.LVL804:
 6819 0920 129B     		ldr	r3, [sp, #72]
 6820 0922 C21A     		subs	r2, r0, r3
 6821              	.LVL805:
 6822              	.LBB456:
 439:src/main.cpp  ****       char elapsed_msg[18];
 6823              		.loc 13 439 0
 6824 0924 142A     		cmp	r2, #20
 6825 0926 08D9     		bls	.L351
 6826              	.LBB457:
 441:src/main.cpp  ****       nh.logerror(elapsed_msg);
 6827              		.loc 13 441 0
 6828 0928 1149     		ldr	r1, .L368+32
 6829 092a 2AA8     		add	r0, sp, #168
 6830 092c FFF7FEFF 		bl	sprintf
 6831              	.LVL806:
 442:src/main.cpp  ****     }else{
 6832              		.loc 13 442 0
 6833 0930 2AA9     		add	r1, sp, #168
 6834 0932 0E48     		ldr	r0, .L368+28
 6835 0934 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8logerrorEPKc
 6836              	.LVL807:
 6837              	.LBE457:
 6838 0938 05E0     		b	.L348
 6839              	.L351:
 447:src/main.cpp  ****     }
 6840              		.loc 13 447 0
 6841 093a FFF7FEFF 		bl	millis
 6842              	.LVL808:
 6843 093e 129B     		ldr	r3, [sp, #72]
 6844 0940 C01A     		subs	r0, r0, r3
 6845 0942 1328     		cmp	r0, #19
 6846 0944 F9D9     		bls	.L351
 6847              	.L348:
 6848              	.LBE456:
 365:src/main.cpp  ****       debug_toggle();
 6849              		.loc 13 365 0 discriminator 1
 6850 0946 159C     		ldr	r4, [sp, #84]
 6851              	.LBE458:
 356:src/main.cpp  ****    //printf("HELLOO!!!!");
 6852              		.loc 13 356 0 discriminator 1
 6853 0948 21E6     		b	.L349
 6854              	.L369:
 6855 094a 00BFAFF3 		.align	3
 6855      0080
 6856              	.L368:
 6857 0950 182D4454 		.word	1413754136
 6858 0954 FB210940 		.word	1074340347
 6859 0958 0BD7A33C 		.word	1017370379
 6860 095c 0000B442 		.word	1119092736
 6861 0960 00806640 		.word	1080459264
 6862 0964 F8100000 		.word	.LANCHOR2
 6863 0968 68080000 		.word	.LANCHOR1+2152
 6864 096c 98080000 		.word	.LANCHOR1+2200
 6865 0970 94030000 		.word	.LC39
 6866              		.cfi_endproc
 6867              	.LFE1281:
 6868              		.fnend
 6870              		.align	1
 6871              		.thumb
 6872              		.thumb_func
 6874              	_GLOBAL__sub_I_USART_FIFO:
 6875              		.fnstart
 6876              	.LFB1339:
 537:src/main.cpp  ****     //nh.spinOnce();
 538:src/main.cpp  ****   }
 539:src/main.cpp  **** }
 6877              		.loc 13 539 0
 6878              		.cfi_startproc
 6879              		@ args = 0, pretend = 0, frame = 0
 6880              		@ frame_needed = 0, uses_anonymous_args = 0
 6881              	.LVL809:
 6882              	.LBB537:
 6883              	.LBB538:
 6884              	.LBB539:
 6885              	.LBB540:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6886              		.loc 11 119 0
 6887 0974 41F28C11 		movw	r1, #4492
 6888 0978 5F4B     		ldr	r3, .L379
 6889 097a 604A     		ldr	r2, .L379+4
 6890              	.LBE540:
 6891              	.LBE539:
 6892              	.LBE538:
 6893              	.LBE537:
 6894              		.loc 13 539 0
 6895 097c F0B5     		push	{r4, r5, r6, r7, lr}
 6896              	.LCFI63:
 6897              		.cfi_def_cfa_offset 20
 6898              		.cfi_offset 4, -20
 6899              		.cfi_offset 5, -16
 6900              		.cfi_offset 6, -12
 6901              		.cfi_offset 7, -8
 6902              		.cfi_offset 14, -4
 6903              	.LBB640:
 6904              	.LBB639:
 6905              	.LBB560:
 6906              	.LBB559:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6907              		.loc 11 119 0
 6908 097e C3F89828 		str	r2, [r3, #2200]
 6909              	.LVL810:
 6910              	.LBB541:
 6911              	.LBB542:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 230400;
 6912              		.loc 15 60 0
 6913 0982 5F4A     		ldr	r2, .L379+8
 6914              	.LBE542:
 6915              	.LBE541:
 6916              	.LBB546:
 6917              	.LBB547:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 6918              		.loc 4 70 0
 6919 0984 5F48     		ldr	r0, .L379+12
 6920              	.LBE547:
 6921              	.LBE546:
 6922              	.LBB550:
 6923              	.LBB543:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 230400;
 6924              		.loc 15 60 0
 6925 0986 C3F89C28 		str	r2, [r3, #2204]
  61:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
 6926              		.loc 15 61 0
 6927 098a 4FF46132 		mov	r2, #230400
 6928 098e C3F8A028 		str	r2, [r3, #2208]
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
 6929              		.loc 15 62 0
 6930 0992 0022     		movs	r2, #0
 6931              	.LBE543:
 6932              	.LBE550:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6933              		.loc 11 119 0
 6934 0994 5A54     		strb	r2, [r3, r1]
 6935              	.LBB551:
 6936              	.LBB548:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 6937              		.loc 4 70 0
 6938 0996 03F58D51 		add	r1, r3, #4512
 6939 099a 0860     		str	r0, [r1]
 6940 099c 41F2A411 		movw	r1, #4516
 6941 09a0 5A54     		strb	r2, [r3, r1]
 6942 09a2 41F2AC11 		movw	r1, #4524
 6943 09a6 5A50     		str	r2, [r3, r1]
 6944 09a8 41F2B011 		movw	r1, #4528
 6945 09ac 5A54     		strb	r2, [r3, r1]
 6946 09ae 41F2B811 		movw	r1, #4536
 6947 09b2 5A50     		str	r2, [r3, r1]
 6948 09b4 41F2BC11 		movw	r1, #4540
 6949 09b8 5A54     		strb	r2, [r3, r1]
 6950 09ba 41F2C411 		movw	r1, #4548
 6951              	.LBE548:
 6952              	.LBE551:
 6953              	.LBB552:
 6954              	.LBB544:
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
 6955              		.loc 15 62 0
 6956 09be 1A63     		str	r2, [r3, #48]
 6957              	.LBE544:
 6958              	.LBE552:
 6959              	.LBB553:
 6960              	.LBB549:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 6961              		.loc 4 70 0
 6962 09c0 5A50     		str	r2, [r3, r1]
 6963              	.LBE549:
 6964              	.LBE553:
 6965              	.LBB554:
 6966              	.LBB545:
  63:./lib/ros_lib/ArduinoHardware.h ****     }
 6967              		.loc 15 63 0
 6968 09c2 DA62     		str	r2, [r3, #44]
 6969              	.LVL811:
 6970 09c4 5049     		ldr	r1, .L379+16
 6971 09c6 514B     		ldr	r3, .L379+20
 6972              	.LVL812:
 6973              	.L371:
 6974              	.LBE545:
 6975              	.LBE554:
 6976              	.LBB555:
 122:./lib/ros_lib/ros/node_handle.h **** 
 6977              		.loc 11 122 0
 6978 09c8 41F8042F 		str	r2, [r1, #4]!
 121:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 6979              		.loc 11 121 0
 6980 09cc 8B42     		cmp	r3, r1
 6981 09ce FBD1     		bne	.L371
 6982 09d0 4F4A     		ldr	r2, .L379+24
 6983              	.LBE555:
 6984              	.LBB556:
 125:./lib/ros_lib/ros/node_handle.h **** 
 6985              		.loc 11 125 0
 6986 09d2 0021     		movs	r1, #0
 6987              	.L372:
 6988 09d4 43F8041F 		str	r1, [r3, #4]!
 6989              	.LVL813:
 124:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 6990              		.loc 11 124 0
 6991 09d8 9342     		cmp	r3, r2
 6992 09da FBD1     		bne	.L372
 6993 09dc 0023     		movs	r3, #0
 6994              	.LBE556:
 6995              	.LBB557:
 128:./lib/ros_lib/ros/node_handle.h **** 
 6996              		.loc 11 128 0
 6997 09de 1946     		mov	r1, r3
 6998 09e0 4C48     		ldr	r0, .L379+28
 6999              	.L373:
 7000              	.LVL814:
 7001 09e2 C218     		adds	r2, r0, r3
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 7002              		.loc 11 127 0
 7003 09e4 0133     		adds	r3, r3, #1
 7004              	.LVL815:
 7005 09e6 B3F5806F 		cmp	r3, #1024
 128:./lib/ros_lib/ros/node_handle.h **** 
 7006              		.loc 11 128 0
 7007 09ea 1176     		strb	r1, [r2, #24]
 7008 09ec 494D     		ldr	r5, .L379+28
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 7009              		.loc 11 127 0
 7010 09ee F8D1     		bne	.L373
 7011 09f0 0023     		movs	r3, #0
 7012              	.LVL816:
 7013              	.LBE557:
 7014              	.LBB558:
 131:./lib/ros_lib/ros/node_handle.h **** 
 7015              		.loc 11 131 0
 7016 09f2 1C46     		mov	r4, r3
 7017              	.L374:
 7018              	.LVL817:
 7019 09f4 E818     		adds	r0, r5, r3
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 7020              		.loc 11 130 0
 7021 09f6 0133     		adds	r3, r3, #1
 7022              	.LVL818:
 7023 09f8 B3F5806F 		cmp	r3, #1024
 131:./lib/ros_lib/ros/node_handle.h **** 
 7024              		.loc 11 131 0
 7025 09fc 3E4A     		ldr	r2, .L379
 7026 09fe 4FF00001 		mov	r1, #0
 7027 0a02 80F81844 		strb	r4, [r0, #1048]
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 7028              		.loc 11 130 0
 7029 0a06 F5D1     		bne	.L374
 7030              	.LVL819:
 7031              	.LBE558:
 7032              	.LBE559:
 7033              	.LBE560:
 7034              	.LBB561:
 7035              	.LBB562:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 7036              		.loc 12 67 0
 7037 0a08 434B     		ldr	r3, .L379+32
 7038 0a0a 4448     		ldr	r0, .L379+36
  69:./lib/ros_lib/ros/subscriber.h ****       };
 7039              		.loc 12 69 0
 7040 0a0c 444D     		ldr	r5, .L379+40
  67:./lib/ros_lib/ros/subscriber.h ****       {
 7041              		.loc 12 67 0
 7042 0a0e C3F8D000 		str	r0, [r3, #208]
 7043              	.LVL820:
 7044              	.LBB563:
 7045              	.LBB564:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 7046              		.loc 10 33 0
 7047 0a12 4448     		ldr	r0, .L379+44
 7048              	.LBE564:
 7049              	.LBE563:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 7050              		.loc 12 69 0
 7051 0a14 C3F8D850 		str	r5, [r3, #216]
 7052              	.LBB579:
 7053              	.LBB575:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 7054              		.loc 10 33 0
 7055 0a18 C3F8DC00 		str	r0, [r3, #220]
 7056              	.LVL821:
 7057              	.LBB565:
 7058              	.LBB566:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 7059              		.loc 9 23 0
 7060 0a1c 4248     		ldr	r0, .L379+48
 7061              	.LBE566:
 7062              	.LBE565:
 7063              	.LBE575:
 7064              	.LBE579:
 7065              	.LBE562:
 7066              	.LBE561:
 7067              	.LBB587:
 7068              	.LBB588:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 7069              		.loc 12 67 0
 7070 0a1e 434D     		ldr	r5, .L379+52
 7071              	.LBE588:
 7072              	.LBE587:
 7073              	.LBB599:
 7074              	.LBB583:
 7075              	.LBB580:
 7076              	.LBB576:
 7077              	.LBB572:
 7078              	.LBB569:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 7079              		.loc 9 23 0
 7080 0a20 C3F8E000 		str	r0, [r3, #224]
 7081              	.LBE569:
 7082              	.LBE572:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 7083              		.loc 10 33 0
 7084 0a24 0020     		movs	r0, #0
 7085 0a26 C3F8F400 		str	r0, [r3, #244]	@ float
 7086 0a2a C3F8F800 		str	r0, [r3, #248]	@ float
 7087 0a2e C3F8FC00 		str	r0, [r3, #252]	@ float
 7088 0a32 C3F80001 		str	r0, [r3, #256]	@ float
 7089              	.LBE576:
 7090              	.LBE580:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 7091              		.loc 12 67 0
 7092 0a36 3E48     		ldr	r0, .L379+56
 7093              	.LBE583:
 7094              	.LBE599:
 7095              	.LBB600:
 7096              	.LBB595:
 7097 0a38 C3F81051 		str	r5, [r3, #272]
 7098              	.LBB589:
 7099              	.LBB590:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 7100              		.loc 8 18 0
 7101 0a3c 3D4D     		ldr	r5, .L379+60
 7102              	.LBE590:
 7103              	.LBE589:
 7104              	.LBE595:
 7105              	.LBE600:
 7106              	.LBB601:
 7107              	.LBB584:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 7108              		.loc 12 67 0
 7109 0a3e C3F80801 		str	r0, [r3, #264]
 7110 0a42 0120     		movs	r0, #1
 7111 0a44 C3F80C01 		str	r0, [r3, #268]
 7112              	.LBE584:
 7113              	.LBE601:
 7114              	.LBB602:
 7115              	.LBB596:
 7116              	.LBB593:
 7117              	.LBB591:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 7118              		.loc 8 18 0
 7119 0a48 C3F81C51 		str	r5, [r3, #284]
 7120              	.LBE591:
 7121              	.LBE593:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 7122              		.loc 12 67 0
 7123 0a4c C3F82801 		str	r0, [r3, #296]
 7124 0a50 394D     		ldr	r5, .L379+64
  69:./lib/ros_lib/ros/subscriber.h ****       };
 7125              		.loc 12 69 0
 7126 0a52 3A48     		ldr	r0, .L379+68
 7127              	.LBE596:
 7128              	.LBE602:
 7129              	.LBB603:
 7130              	.LBB585:
 7131              	.LBB581:
 7132              	.LBB577:
 7133              	.LBB573:
 7134              	.LBB570:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 7135              		.loc 9 23 0
 7136 0a54 3A4C     		ldr	r4, .L379+72
 7137              	.LBE570:
 7138              	.LBE573:
 7139              	.LBE577:
 7140              	.LBE581:
 7141              	.LBE585:
 7142              	.LBE603:
 7143              	.LBB604:
 7144              	.LBB597:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 7145              		.loc 12 67 0
 7146 0a56 C3F82451 		str	r5, [r3, #292]
  69:./lib/ros_lib/ros/subscriber.h ****       };
 7147              		.loc 12 69 0
 7148 0a5a C3F81801 		str	r0, [r3, #280]
 7149              	.LBE597:
 7150              	.LBE604:
 7151              	.LBB605:
 7152              	.LBB606:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 7153              		.loc 7 23 0
 7154 0a5e 394F     		ldr	r7, .L379+76
 7155              	.LBB607:
 7156              	.LBB608:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 7157              		.loc 6 23 0
 7158 0a60 394E     		ldr	r6, .L379+80
 7159              	.LBB609:
 7160              	.LBB610:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 7161              		.loc 5 22 0
 7162 0a62 3A4D     		ldr	r5, .L379+84
 7163              	.LBE610:
 7164              	.LBE609:
 7165              	.LBE608:
 7166              	.LBE607:
 7167              	.LBE606:
 7168              	.LBE605:
 7169              	.LBB616:
 7170              	.LBB617:
  50:./lib/ros_lib/ros/publisher.h **** 
 7171              		.loc 18 50 0
 7172 0a64 3A48     		ldr	r0, .L379+88
 7173              	.LBE617:
 7174              	.LBE616:
 7175              	.LBB621:
 7176              	.LBB615:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 7177              		.loc 7 23 0
 7178 0a66 C2F83878 		str	r7, [r2, #2104]
 7179              	.LBB614:
 7180              	.LBB613:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 7181              		.loc 6 23 0
 7182 0a6a C2F83C68 		str	r6, [r2, #2108]
 7183 0a6e 82F84018 		strb	r1, [r2, #2112]
 7184              	.LBB612:
 7185              	.LBB611:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 7186              		.loc 5 22 0
 7187 0a72 C2F84458 		str	r5, [r2, #2116]
 7188 0a76 C2F84848 		str	r4, [r2, #2120]
 7189 0a7a C2F84C18 		str	r1, [r2, #2124]
 7190 0a7e C2F85018 		str	r1, [r2, #2128]
 7191              	.LBE611:
 7192              	.LBE612:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 7193              		.loc 6 23 0
 7194 0a82 C2F85418 		str	r1, [r2, #2132]
 7195 0a86 C2F85818 		str	r1, [r2, #2136]
 7196              	.LBE613:
 7197              	.LBE614:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 7198              		.loc 7 23 0
 7199 0a8a 82F85C18 		strb	r1, [r2, #2140]
 7200 0a8e C2F86418 		str	r1, [r2, #2148]
 7201              	.LBE615:
 7202              	.LBE621:
 7203              	.LBB622:
 7204              	.LBB586:
 7205              	.LBB582:
 7206              	.LBB578:
 7207              	.LBB574:
 7208              	.LBB571:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 7209              		.loc 9 23 0
 7210 0a92 C3F8E410 		str	r1, [r3, #228]
 7211              	.LVL822:
 7212              	.LBB567:
 7213              	.LBB568:
 7214              		.loc 17 52 0
 7215 0a96 C3F8E810 		str	r1, [r3, #232]
 7216 0a9a C3F8EC10 		str	r1, [r3, #236]
 7217              	.LVL823:
 7218              	.LBE568:
 7219              	.LBE567:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 7220              		.loc 9 23 0
 7221 0a9e C3F8F040 		str	r4, [r3, #240]
 7222              	.LVL824:
 7223              	.LBE571:
 7224              	.LBE574:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 7225              		.loc 10 33 0
 7226 0aa2 83F80411 		strb	r1, [r3, #260]
 7227              	.LVL825:
 7228              	.LBE578:
 7229              	.LBE582:
 7230              	.LBE586:
 7231              	.LBE622:
 7232              	.LBB623:
 7233              	.LBB598:
 7234              	.LBB594:
 7235              	.LBB592:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 7236              		.loc 8 18 0
 7237 0aa6 83F82011 		strb	r1, [r3, #288]
 7238              	.LVL826:
 7239              	.LBE592:
 7240              	.LBE594:
 7241              	.LBE598:
 7242              	.LBE623:
 7243              	.LBB624:
 7244              	.LBB618:
  50:./lib/ros_lib/ros/publisher.h **** 
 7245              		.loc 18 50 0
 7246 0aaa C3F85001 		str	r0, [r3, #336]
 7247 0aae 02F63800 		addw	r0, r2, #2104
 7248              	.LBE618:
 7249              	.LBE624:
 7250              	.LBB625:
 7251              	.LBB626:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 7252              		.loc 7 23 0
 7253 0ab2 C2F86878 		str	r7, [r2, #2152]
 7254              	.LBB627:
 7255              	.LBB628:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 7256              		.loc 6 23 0
 7257 0ab6 C2F86C68 		str	r6, [r2, #2156]
 7258 0aba 82F87018 		strb	r1, [r2, #2160]
 7259              	.LBB629:
 7260              	.LBB630:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 7261              		.loc 5 22 0
 7262 0abe C2F87458 		str	r5, [r2, #2164]
 7263 0ac2 C2F87848 		str	r4, [r2, #2168]
 7264 0ac6 C2F87C18 		str	r1, [r2, #2172]
 7265 0aca C2F88018 		str	r1, [r2, #2176]
 7266              	.LBE630:
 7267              	.LBE629:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 7268              		.loc 6 23 0
 7269 0ace C2F88418 		str	r1, [r2, #2180]
 7270 0ad2 C2F88818 		str	r1, [r2, #2184]
 7271              	.LBE628:
 7272              	.LBE627:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 7273              		.loc 7 23 0
 7274 0ad6 82F88C18 		strb	r1, [r2, #2188]
 7275 0ada C2F89418 		str	r1, [r2, #2196]
 7276              	.LBE626:
 7277              	.LBE625:
 7278              	.LBB631:
 7279              	.LBB632:
  50:./lib/ros_lib/ros/publisher.h **** 
 7280              		.loc 18 50 0
 7281 0ade 1D4A     		ldr	r2, .L379+92
 7282              	.LBE632:
 7283              	.LBE631:
 7284              	.LBB635:
 7285              	.LBB619:
 7286 0ae0 C3F85401 		str	r0, [r3, #340]
 7287              	.LBE619:
 7288              	.LBE635:
 7289              	.LBB636:
 7290              	.LBB633:
 7291 0ae4 3030     		adds	r0, r0, #48
 7292              	.LBE633:
 7293              	.LBE636:
 7294              	.LBB637:
 7295              	.LBB620:
 7296 0ae6 C3F86011 		str	r1, [r3, #352]
 7297              	.LVL827:
 7298              	.LBE620:
 7299              	.LBE637:
 7300              	.LBB638:
 7301              	.LBB634:
 7302 0aea C3F82C21 		str	r2, [r3, #300]
 7303 0aee C3F83001 		str	r0, [r3, #304]
 7304 0af2 C3F83C11 		str	r1, [r3, #316]
 7305              	.LVL828:
 7306 0af6 F0BD     		pop	{r4, r5, r6, r7, pc}
 7307              	.L380:
 7308              		.align	2
 7309              	.L379:
 7310 0af8 00000000 		.word	.LANCHOR1
 7311 0afc 08000000 		.word	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE+8
 7312 0b00 00380140 		.word	1073821696
 7313 0b04 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 7314 0b08 AC100000 		.word	.LANCHOR1+4268
 7315 0b0c 10110000 		.word	.LANCHOR1+4368
 7316 0b10 74110000 		.word	.LANCHOR1+4468
 7317 0b14 98080000 		.word	.LANCHOR1+2200
 7318 0b18 F8100000 		.word	.LANCHOR2
 7319 0b1c 08000000 		.word	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE+8
 7320 0b20 9D030000 		.word	.LC40
 7321 0b24 08000000 		.word	_ZTVN12roberto_msgs10MotorStateE+8
 7322 0b28 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 7323 0b2c 08000000 		.word	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE+8
 7324 0b30 00000000 		.word	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 7325 0b34 08000000 		.word	_ZTVN8std_msgs5UInt8E+8
 7326 0b38 00000000 		.word	_Z6led_cbRKN8std_msgs5UInt8E
 7327 0b3c AF030000 		.word	.LC41
 7328 0b40 67020000 		.word	.LC23
 7329 0b44 08000000 		.word	_ZTVN8std_msgs17Float32MultiArrayE+8
 7330 0b48 08000000 		.word	_ZTVN8std_msgs16MultiArrayLayoutE+8
 7331 0b4c 08000000 		.word	_ZTVN8std_msgs19MultiArrayDimensionE+8
 7332 0b50 B3030000 		.word	.LC42
 7333 0b54 B9030000 		.word	.LC43
 7334              	.LBE634:
 7335              	.LBE638:
 7336              	.LBE639:
 7337              	.LBE640:
 7338              		.cfi_endproc
 7339              	.LFE1339:
 7340              		.cantunwind
 7341              		.fnend
 7343              		.section	.init_array,"aw",%init_array
 7344              		.align	2
 7345 0000 00000000 		.word	_GLOBAL__sub_I_USART_FIFO(target1)
 7346              		.weak	_ZTSN3ros3MsgE
 7347              		.section	.rodata._ZTSN3ros3MsgE,"aG",%progbits,_ZTSN3ros3MsgE,comdat
 7350              	_ZTSN3ros3MsgE:
 7351 0000 4E33726F 		.ascii	"N3ros3MsgE\000"
 7351      73334D73 
 7351      674500
 7352              		.weak	_ZTIN3ros3MsgE
 7353              		.section	.rodata._ZTIN3ros3MsgE,"aG",%progbits,_ZTIN3ros3MsgE,comdat
 7354              		.align	2
 7357              	_ZTIN3ros3MsgE:
 7358 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 7359 0004 00000000 		.word	_ZTSN3ros3MsgE
 7360              		.weak	_ZTSN8std_msgs4TimeE
 7361              		.section	.rodata._ZTSN8std_msgs4TimeE,"aG",%progbits,_ZTSN8std_msgs4TimeE,comdat
 7364              	_ZTSN8std_msgs4TimeE:
 7365 0000 4E387374 		.ascii	"N8std_msgs4TimeE\000"
 7365      645F6D73 
 7365      67733454 
 7365      696D6545 
 7365      00
 7366              		.weak	_ZTIN8std_msgs4TimeE
 7367              		.section	.rodata._ZTIN8std_msgs4TimeE,"aG",%progbits,_ZTIN8std_msgs4TimeE,comdat
 7368              		.align	2
 7371              	_ZTIN8std_msgs4TimeE:
 7372 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7373 0004 00000000 		.word	_ZTSN8std_msgs4TimeE
 7374 0008 00000000 		.word	_ZTIN3ros3MsgE
 7375              		.weak	_ZTSN14rosserial_msgs9TopicInfoE
 7376              		.section	.rodata._ZTSN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTSN14rosserial_msgs9TopicInfoE,
 7379              	_ZTSN14rosserial_msgs9TopicInfoE:
 7380 0000 4E313472 		.ascii	"N14rosserial_msgs9TopicInfoE\000"
 7380      6F737365 
 7380      7269616C 
 7380      5F6D7367 
 7380      7339546F 
 7381              		.weak	_ZTIN14rosserial_msgs9TopicInfoE
 7382              		.section	.rodata._ZTIN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTIN14rosserial_msgs9TopicInfoE,
 7383              		.align	2
 7386              	_ZTIN14rosserial_msgs9TopicInfoE:
 7387 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7388 0004 00000000 		.word	_ZTSN14rosserial_msgs9TopicInfoE
 7389 0008 00000000 		.word	_ZTIN3ros3MsgE
 7390              		.weak	_ZTSN14rosserial_msgs3LogE
 7391              		.section	.rodata._ZTSN14rosserial_msgs3LogE,"aG",%progbits,_ZTSN14rosserial_msgs3LogE,comdat
 7394              	_ZTSN14rosserial_msgs3LogE:
 7395 0000 4E313472 		.ascii	"N14rosserial_msgs3LogE\000"
 7395      6F737365 
 7395      7269616C 
 7395      5F6D7367 
 7395      73334C6F 
 7396              		.weak	_ZTIN14rosserial_msgs3LogE
 7397              		.section	.rodata._ZTIN14rosserial_msgs3LogE,"aG",%progbits,_ZTIN14rosserial_msgs3LogE,comdat
 7398              		.align	2
 7401              	_ZTIN14rosserial_msgs3LogE:
 7402 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7403 0004 00000000 		.word	_ZTSN14rosserial_msgs3LogE
 7404 0008 00000000 		.word	_ZTIN3ros3MsgE
 7405              		.weak	_ZTSN14rosserial_msgs19RequestParamRequestE
 7406              		.section	.rodata._ZTSN14rosserial_msgs19RequestParamRequestE,"aG",%progbits,_ZTSN14rosserial_msgs1
 7409              	_ZTSN14rosserial_msgs19RequestParamRequestE:
 7410 0000 4E313472 		.ascii	"N14rosserial_msgs19RequestParamRequestE\000"
 7410      6F737365 
 7410      7269616C 
 7410      5F6D7367 
 7410      73313952 
 7411              		.weak	_ZTIN14rosserial_msgs19RequestParamRequestE
 7412              		.section	.rodata._ZTIN14rosserial_msgs19RequestParamRequestE,"aG",%progbits,_ZTIN14rosserial_msgs1
 7413              		.align	2
 7416              	_ZTIN14rosserial_msgs19RequestParamRequestE:
 7417 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7418 0004 00000000 		.word	_ZTSN14rosserial_msgs19RequestParamRequestE
 7419 0008 00000000 		.word	_ZTIN3ros3MsgE
 7420              		.weak	_ZTSN14rosserial_msgs20RequestParamResponseE
 7421              		.section	.rodata._ZTSN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTSN14rosserial_msgs
 7424              	_ZTSN14rosserial_msgs20RequestParamResponseE:
 7425 0000 4E313472 		.ascii	"N14rosserial_msgs20RequestParamResponseE\000"
 7425      6F737365 
 7425      7269616C 
 7425      5F6D7367 
 7425      73323052 
 7426              		.weak	_ZTIN14rosserial_msgs20RequestParamResponseE
 7427              		.section	.rodata._ZTIN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTIN14rosserial_msgs
 7428              		.align	2
 7431              	_ZTIN14rosserial_msgs20RequestParamResponseE:
 7432 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7433 0004 00000000 		.word	_ZTSN14rosserial_msgs20RequestParamResponseE
 7434 0008 00000000 		.word	_ZTIN3ros3MsgE
 7435              		.weak	_ZTSN3ros15NodeHandleBase_E
 7436              		.section	.rodata._ZTSN3ros15NodeHandleBase_E,"aG",%progbits,_ZTSN3ros15NodeHandleBase_E,comdat
 7439              	_ZTSN3ros15NodeHandleBase_E:
 7440 0000 4E33726F 		.ascii	"N3ros15NodeHandleBase_E\000"
 7440      7331354E 
 7440      6F646548 
 7440      616E646C 
 7440      65426173 
 7441              		.weak	_ZTIN3ros15NodeHandleBase_E
 7442              		.section	.rodata._ZTIN3ros15NodeHandleBase_E,"aG",%progbits,_ZTIN3ros15NodeHandleBase_E,comdat
 7443              		.align	2
 7446              	_ZTIN3ros15NodeHandleBase_E:
 7447 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 7448 0004 00000000 		.word	_ZTSN3ros15NodeHandleBase_E
 7449              		.weak	_ZTSN3ros11Subscriber_E
 7450              		.section	.rodata._ZTSN3ros11Subscriber_E,"aG",%progbits,_ZTSN3ros11Subscriber_E,comdat
 7453              	_ZTSN3ros11Subscriber_E:
 7454 0000 4E33726F 		.ascii	"N3ros11Subscriber_E\000"
 7454      73313153 
 7454      75627363 
 7454      72696265 
 7454      725F4500 
 7455              		.weak	_ZTIN3ros11Subscriber_E
 7456              		.section	.rodata._ZTIN3ros11Subscriber_E,"aG",%progbits,_ZTIN3ros11Subscriber_E,comdat
 7457              		.align	2
 7460              	_ZTIN3ros11Subscriber_E:
 7461 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 7462 0004 00000000 		.word	_ZTSN3ros11Subscriber_E
 7463              		.weak	_ZTSN8std_msgs19MultiArrayDimensionE
 7464              		.section	.rodata._ZTSN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTSN8std_msgs19MultiArrayDim
 7467              	_ZTSN8std_msgs19MultiArrayDimensionE:
 7468 0000 4E387374 		.ascii	"N8std_msgs19MultiArrayDimensionE\000"
 7468      645F6D73 
 7468      67733139 
 7468      4D756C74 
 7468      69417272 
 7469              		.weak	_ZTIN8std_msgs19MultiArrayDimensionE
 7470              		.section	.rodata._ZTIN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTIN8std_msgs19MultiArrayDim
 7471              		.align	2
 7474              	_ZTIN8std_msgs19MultiArrayDimensionE:
 7475 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7476 0004 00000000 		.word	_ZTSN8std_msgs19MultiArrayDimensionE
 7477 0008 00000000 		.word	_ZTIN3ros3MsgE
 7478              		.weak	_ZTSN8std_msgs16MultiArrayLayoutE
 7479              		.section	.rodata._ZTSN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTSN8std_msgs16MultiArrayLayout
 7482              	_ZTSN8std_msgs16MultiArrayLayoutE:
 7483 0000 4E387374 		.ascii	"N8std_msgs16MultiArrayLayoutE\000"
 7483      645F6D73 
 7483      67733136 
 7483      4D756C74 
 7483      69417272 
 7484              		.weak	_ZTIN8std_msgs16MultiArrayLayoutE
 7485              		.section	.rodata._ZTIN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTIN8std_msgs16MultiArrayLayout
 7486              		.align	2
 7489              	_ZTIN8std_msgs16MultiArrayLayoutE:
 7490 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7491 0004 00000000 		.word	_ZTSN8std_msgs16MultiArrayLayoutE
 7492 0008 00000000 		.word	_ZTIN3ros3MsgE
 7493              		.weak	_ZTSN8std_msgs17Float32MultiArrayE
 7494              		.section	.rodata._ZTSN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTSN8std_msgs17Float32MultiArr
 7497              	_ZTSN8std_msgs17Float32MultiArrayE:
 7498 0000 4E387374 		.ascii	"N8std_msgs17Float32MultiArrayE\000"
 7498      645F6D73 
 7498      67733137 
 7498      466C6F61 
 7498      7433324D 
 7499              		.weak	_ZTIN8std_msgs17Float32MultiArrayE
 7500              		.section	.rodata._ZTIN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTIN8std_msgs17Float32MultiArr
 7501              		.align	2
 7504              	_ZTIN8std_msgs17Float32MultiArrayE:
 7505 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7506 0004 00000000 		.word	_ZTSN8std_msgs17Float32MultiArrayE
 7507 0008 00000000 		.word	_ZTIN3ros3MsgE
 7508              		.weak	_ZTSN8std_msgs5UInt8E
 7509              		.section	.rodata._ZTSN8std_msgs5UInt8E,"aG",%progbits,_ZTSN8std_msgs5UInt8E,comdat
 7512              	_ZTSN8std_msgs5UInt8E:
 7513 0000 4E387374 		.ascii	"N8std_msgs5UInt8E\000"
 7513      645F6D73 
 7513      67733555 
 7513      496E7438 
 7513      4500
 7514              		.weak	_ZTIN8std_msgs5UInt8E
 7515              		.section	.rodata._ZTIN8std_msgs5UInt8E,"aG",%progbits,_ZTIN8std_msgs5UInt8E,comdat
 7516              		.align	2
 7519              	_ZTIN8std_msgs5UInt8E:
 7520 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7521 0004 00000000 		.word	_ZTSN8std_msgs5UInt8E
 7522 0008 00000000 		.word	_ZTIN3ros3MsgE
 7523              		.weak	_ZTSN8std_msgs6HeaderE
 7524              		.section	.rodata._ZTSN8std_msgs6HeaderE,"aG",%progbits,_ZTSN8std_msgs6HeaderE,comdat
 7527              	_ZTSN8std_msgs6HeaderE:
 7528 0000 4E387374 		.ascii	"N8std_msgs6HeaderE\000"
 7528      645F6D73 
 7528      67733648 
 7528      65616465 
 7528      724500
 7529              		.weak	_ZTIN8std_msgs6HeaderE
 7530              		.section	.rodata._ZTIN8std_msgs6HeaderE,"aG",%progbits,_ZTIN8std_msgs6HeaderE,comdat
 7531              		.align	2
 7534              	_ZTIN8std_msgs6HeaderE:
 7535 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7536 0004 00000000 		.word	_ZTSN8std_msgs6HeaderE
 7537 0008 00000000 		.word	_ZTIN3ros3MsgE
 7538              		.weak	_ZTSN12roberto_msgs10MotorStateE
 7539              		.section	.rodata._ZTSN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTSN12roberto_msgs10MotorStateE,
 7542              	_ZTSN12roberto_msgs10MotorStateE:
 7543 0000 4E313272 		.ascii	"N12roberto_msgs10MotorStateE\000"
 7543      6F626572 
 7543      746F5F6D 
 7543      73677331 
 7543      304D6F74 
 7544              		.weak	_ZTIN12roberto_msgs10MotorStateE
 7545              		.section	.rodata._ZTIN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTIN12roberto_msgs10MotorStateE,
 7546              		.align	2
 7549              	_ZTIN12roberto_msgs10MotorStateE:
 7550 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7551 0004 00000000 		.word	_ZTSN12roberto_msgs10MotorStateE
 7552 0008 00000000 		.word	_ZTIN3ros3MsgE
 7553              		.weak	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
 7554              		.section	.rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE,"aG",%progbits
 7557              	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:
 7558 0000 4E33726F 		.ascii	"N3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi102"
 7558      7331314E 
 7558      6F646548 
 7558      616E646C 
 7558      655F4931 
 7559 0033 34454C69 		.ascii	"4ELi1024EEE\000"
 7559      31303234 
 7559      45454500 
 7560              		.weak	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
 7561              		.section	.rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE,"aG",%progbits
 7562              		.align	2
 7565              	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:
 7566 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7567 0004 00000000 		.word	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
 7568 0008 00000000 		.word	_ZTIN3ros15NodeHandleBase_E
 7569              		.weak	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7570              		.section	.rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTSN3ros10Su
 7573              	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 7574 0000 4E33726F 		.ascii	"N3ros10SubscriberIN12roberto_msgs10MotorStateEEE\000"
 7574      73313053 
 7574      75627363 
 7574      72696265 
 7574      72494E31 
 7575              		.weak	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7576              		.section	.rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTIN3ros10Su
 7577              		.align	2
 7580              	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 7581 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7582 0004 00000000 		.word	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7583 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 7584              		.weak	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 7585              		.section	.rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTSN3ros10SubscriberIN8
 7588              	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:
 7589 0000 4E33726F 		.ascii	"N3ros10SubscriberIN8std_msgs5UInt8EEE\000"
 7589      73313053 
 7589      75627363 
 7589      72696265 
 7589      72494E38 
 7590              		.weak	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 7591              		.section	.rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTIN3ros10SubscriberIN8
 7592              		.align	2
 7595              	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:
 7596 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7597 0004 00000000 		.word	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 7598 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 7599              		.weak	_ZTVN8std_msgs4TimeE
 7600              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 7601              		.align	2
 7604              	_ZTVN8std_msgs4TimeE:
 7605 0000 00000000 		.word	0
 7606 0004 00000000 		.word	_ZTIN8std_msgs4TimeE
 7607 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 7608 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 7609 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 7610 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 7611              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 7612              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 7613              		.align	2
 7616              	_ZTVN14rosserial_msgs9TopicInfoE:
 7617 0000 00000000 		.word	0
 7618 0004 00000000 		.word	_ZTIN14rosserial_msgs9TopicInfoE
 7619 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 7620 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 7621 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 7622 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 7623              		.weak	_ZTVN14rosserial_msgs3LogE
 7624              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 7625              		.align	2
 7628              	_ZTVN14rosserial_msgs3LogE:
 7629 0000 00000000 		.word	0
 7630 0004 00000000 		.word	_ZTIN14rosserial_msgs3LogE
 7631 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 7632 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 7633 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 7634 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 7635              		.weak	_ZTVN14rosserial_msgs19RequestParamRequestE
 7636              		.section	.rodata._ZTVN14rosserial_msgs19RequestParamRequestE,"aG",%progbits,_ZTVN14rosserial_msgs1
 7637              		.align	2
 7640              	_ZTVN14rosserial_msgs19RequestParamRequestE:
 7641 0000 00000000 		.word	0
 7642 0004 00000000 		.word	_ZTIN14rosserial_msgs19RequestParamRequestE
 7643 0008 00000000 		.word	_ZNK14rosserial_msgs19RequestParamRequest9serializeEPh
 7644 000c 00000000 		.word	_ZN14rosserial_msgs19RequestParamRequest11deserializeEPh
 7645 0010 00000000 		.word	_ZN14rosserial_msgs19RequestParamRequest7getTypeEv
 7646 0014 00000000 		.word	_ZN14rosserial_msgs19RequestParamRequest6getMD5Ev
 7647              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 7648              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 7649              		.align	2
 7652              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 7653 0000 00000000 		.word	0
 7654 0004 00000000 		.word	_ZTIN14rosserial_msgs20RequestParamResponseE
 7655 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 7656 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 7657 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 7658 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 7659              		.weak	_ZTVN8std_msgs19MultiArrayDimensionE
 7660              		.section	.rodata._ZTVN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTVN8std_msgs19MultiArrayDim
 7661              		.align	2
 7664              	_ZTVN8std_msgs19MultiArrayDimensionE:
 7665 0000 00000000 		.word	0
 7666 0004 00000000 		.word	_ZTIN8std_msgs19MultiArrayDimensionE
 7667 0008 00000000 		.word	_ZNK8std_msgs19MultiArrayDimension9serializeEPh
 7668 000c 00000000 		.word	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 7669 0010 00000000 		.word	_ZN8std_msgs19MultiArrayDimension7getTypeEv
 7670 0014 00000000 		.word	_ZN8std_msgs19MultiArrayDimension6getMD5Ev
 7671              		.weak	_ZTVN8std_msgs16MultiArrayLayoutE
 7672              		.section	.rodata._ZTVN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTVN8std_msgs16MultiArrayLayout
 7673              		.align	2
 7676              	_ZTVN8std_msgs16MultiArrayLayoutE:
 7677 0000 00000000 		.word	0
 7678 0004 00000000 		.word	_ZTIN8std_msgs16MultiArrayLayoutE
 7679 0008 00000000 		.word	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 7680 000c 00000000 		.word	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 7681 0010 00000000 		.word	_ZN8std_msgs16MultiArrayLayout7getTypeEv
 7682 0014 00000000 		.word	_ZN8std_msgs16MultiArrayLayout6getMD5Ev
 7683              		.weak	_ZTVN8std_msgs17Float32MultiArrayE
 7684              		.section	.rodata._ZTVN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTVN8std_msgs17Float32MultiArr
 7685              		.align	2
 7688              	_ZTVN8std_msgs17Float32MultiArrayE:
 7689 0000 00000000 		.word	0
 7690 0004 00000000 		.word	_ZTIN8std_msgs17Float32MultiArrayE
 7691 0008 00000000 		.word	_ZNK8std_msgs17Float32MultiArray9serializeEPh
 7692 000c 00000000 		.word	_ZN8std_msgs17Float32MultiArray11deserializeEPh
 7693 0010 00000000 		.word	_ZN8std_msgs17Float32MultiArray7getTypeEv
 7694 0014 00000000 		.word	_ZN8std_msgs17Float32MultiArray6getMD5Ev
 7695              		.weak	_ZTVN8std_msgs5UInt8E
 7696              		.section	.rodata._ZTVN8std_msgs5UInt8E,"aG",%progbits,_ZTVN8std_msgs5UInt8E,comdat
 7697              		.align	2
 7700              	_ZTVN8std_msgs5UInt8E:
 7701 0000 00000000 		.word	0
 7702 0004 00000000 		.word	_ZTIN8std_msgs5UInt8E
 7703 0008 00000000 		.word	_ZNK8std_msgs5UInt89serializeEPh
 7704 000c 00000000 		.word	_ZN8std_msgs5UInt811deserializeEPh
 7705 0010 00000000 		.word	_ZN8std_msgs5UInt87getTypeEv
 7706 0014 00000000 		.word	_ZN8std_msgs5UInt86getMD5Ev
 7707              		.weak	_ZTVN8std_msgs6HeaderE
 7708              		.section	.rodata._ZTVN8std_msgs6HeaderE,"aG",%progbits,_ZTVN8std_msgs6HeaderE,comdat
 7709              		.align	2
 7712              	_ZTVN8std_msgs6HeaderE:
 7713 0000 00000000 		.word	0
 7714 0004 00000000 		.word	_ZTIN8std_msgs6HeaderE
 7715 0008 00000000 		.word	_ZNK8std_msgs6Header9serializeEPh
 7716 000c 00000000 		.word	_ZN8std_msgs6Header11deserializeEPh
 7717 0010 00000000 		.word	_ZN8std_msgs6Header7getTypeEv
 7718 0014 00000000 		.word	_ZN8std_msgs6Header6getMD5Ev
 7719              		.weak	_ZTVN12roberto_msgs10MotorStateE
 7720              		.section	.rodata._ZTVN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTVN12roberto_msgs10MotorStateE,
 7721              		.align	2
 7724              	_ZTVN12roberto_msgs10MotorStateE:
 7725 0000 00000000 		.word	0
 7726 0004 00000000 		.word	_ZTIN12roberto_msgs10MotorStateE
 7727 0008 00000000 		.word	_ZNK12roberto_msgs10MotorState9serializeEPh
 7728 000c 00000000 		.word	_ZN12roberto_msgs10MotorState11deserializeEPh
 7729 0010 00000000 		.word	_ZN12roberto_msgs10MotorState7getTypeEv
 7730 0014 00000000 		.word	_ZN12roberto_msgs10MotorState6getMD5Ev
 7731              		.weak	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
 7732              		.section	.rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE,"aG",%progbits
 7733              		.align	2
 7736              	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:
 7737 0000 00000000 		.word	0
 7738 0004 00000000 		.word	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
 7739 0008 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE
 7740 000c 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv
 7741 0010 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv
 7742              		.weak	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7743              		.section	.rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTVN3ros10Su
 7744              		.align	2
 7747              	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 7748 0000 00000000 		.word	0
 7749 0004 00000000 		.word	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7750 0008 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 7751 000c 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 7752 0010 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 7753 0014 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 7754              		.weak	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
 7755              		.section	.rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTVN3ros10SubscriberIN8
 7756              		.align	2
 7759              	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:
 7760 0000 00000000 		.word	0
 7761 0004 00000000 		.word	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 7762 0008 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 7763 000c 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 7764 0010 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 7765 0014 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 7766              		.global	odom_pub
 7767              		.global	odom_msg
 7768              		.global	debug_pub
 7769              		.global	debug_msg
 7770              		.global	led_sub
 7771              		.global	motor_sub
 7772              		.global	waitForServos
 7773              		.global	shuttingDown
 7774              		.global	nh
 7775              		.global	initialized
 7776              		.global	lastMsg
 7777              		.global	currentMode
 7778              		.global	motorCmd
 7779              		.global	L
 7780              		.global	d
 7781              		.global	rear_left
 7782              		.global	rear_right
 7783              		.global	front_left
 7784              		.global	front_right
 7785              		.global	servo_right
 7786              		.global	servo_left
 7787              		.global	USART_CNTOUT
 7788              		.global	USART_CNTIN
 7789              		.global	USART_FIFO
 7790              		.section	.rodata
 7791              		.align	2
 7792              		.set	.LANCHOR0,. + 0
 7795              	_ZN14rosserial_msgsL12REQUESTPARAME:
 7796 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 7796      65726961 
 7796      6C5F6D73 
 7796      67732F52 
 7796      65717565 
 7797              	.LC1:
 7798 001c DB0F49BF 		.word	-1085730853
 7799 0020 DB0F493F 		.word	1061752795
 7800 0024 E4CB1640 		.word	1075235812
 7801 0028 E4CB16C0 		.word	-1072247836
 7802              		.section	.rodata.str1.1,"aMS",%progbits,1
 7803              	.LC2:
 7804 0000 7374645F 		.ascii	"std_msgs/Time\000"
 7804      6D736773 
 7804      2F54696D 
 7804      6500
 7805              	.LC3:
 7806 000e 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 7806      36366337 
 7806      34633535 
 7806      32633331 
 7806      31666263 
 7807              	.LC4:
 7808 002f 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 7808      65726961 
 7808      6C5F6D73 
 7808      67732F54 
 7808      6F706963 
 7809              	.LC5:
 7810 0048 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 7810      31663838 
 7810      66633434 
 7810      38393266 
 7810      38633130 
 7811              	.LC6:
 7812 0069 726F7373 		.ascii	"rosserial_msgs/Log\000"
 7812      65726961 
 7812      6C5F6D73 
 7812      67732F4C 
 7812      6F6700
 7813              	.LC7:
 7814 007c 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 7814      64373331 
 7814      63323539 
 7814      33333236 
 7814      31636436 
 7815              	.LC8:
 7816 009d 63316633 		.ascii	"c1f3d28f1b044c871e6eff2e9fc3c667\000"
 7816      64323866 
 7816      31623034 
 7816      34633837 
 7816      31653665 
 7817              	.LC9:
 7818 00be 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 7818      39386264 
 7818      61363539 
 7818      38313938 
 7818      36646466 
 7819              	.LC10:
 7820 00df 7374645F 		.ascii	"std_msgs/MultiArrayDimension\000"
 7820      6D736773 
 7820      2F4D756C 
 7820      74694172 
 7820      72617944 
 7821              	.LC11:
 7822 00fc 34636430 		.ascii	"4cd0c83a8683deae40ecdac60e53bfa8\000"
 7822      63383361 
 7822      38363833 
 7822      64656165 
 7822      34306563 
 7823              	.LC12:
 7824 011d 7374645F 		.ascii	"std_msgs/MultiArrayLayout\000"
 7824      6D736773 
 7824      2F4D756C 
 7824      74694172 
 7824      7261794C 
 7825              	.LC13:
 7826 0137 30666564 		.ascii	"0fed2a11c13e11c5571b4e2a995a91a3\000"
 7826      32613131 
 7826      63313365 
 7826      31316335 
 7826      35373162 
 7827              	.LC14:
 7828 0158 7374645F 		.ascii	"std_msgs/Float32MultiArray\000"
 7828      6D736773 
 7828      2F466C6F 
 7828      61743332 
 7828      4D756C74 
 7829              	.LC15:
 7830 0173 36613430 		.ascii	"6a40e0ffa6a17a503ac3f8616991b1f6\000"
 7830      65306666 
 7830      61366131 
 7830      37613530 
 7830      33616333 
 7831              	.LC16:
 7832 0194 7374645F 		.ascii	"std_msgs/UInt8\000"
 7832      6D736773 
 7832      2F55496E 
 7832      743800
 7833              	.LC17:
 7834 01a3 37633831 		.ascii	"7c8164229e7d2c17eb95e9231617fdee\000"
 7834      36343232 
 7834      39653764 
 7834      32633137 
 7834      65623935 
 7835              	.LC18:
 7836 01c4 7374645F 		.ascii	"std_msgs/Header\000"
 7836      6D736773 
 7836      2F486561 
 7836      64657200 
 7837              	.LC19:
 7838 01d4 32313736 		.ascii	"2176decaecbce78abc3b96ef049fabed\000"
 7838      64656361 
 7838      65636263 
 7838      65373861 
 7838      62633362 
 7839              	.LC20:
 7840 01f5 726F6265 		.ascii	"roberto_msgs/MotorState\000"
 7840      72746F5F 
 7840      6D736773 
 7840      2F4D6F74 
 7840      6F725374 
 7841              	.LC21:
 7842 020d 65386235 		.ascii	"e8b5d1162b85151c49e02b8224796c0e\000"
 7842      64313136 
 7842      32623835 
 7842      31353163 
 7842      34396530 
 7843              	.LC22:
 7844 022e 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 7844      61676520 
 7844      66726F6D 
 7844      20646576 
 7844      69636520 
 7845 0261 66666572 		.ascii	"ffer.\000"
 7845      2E00
 7846              	.LC23:
 7847 0267 00       		.ascii	"\000"
 7848              	.LC24:
 7849 0268 73657269 		.ascii	"serial_node/FF\000"
 7849      616C5F6E 
 7849      6F64652F 
 7849      464600
 7850              	.LC25:
 7851 0277 73657269 		.ascii	"serial_node/KP\000"
 7851      616C5F6E 
 7851      6F64652F 
 7851      4B5000
 7852              	.LC26:
 7853 0286 73657269 		.ascii	"serial_node/KI\000"
 7853      616C5F6E 
 7853      6F64652F 
 7853      4B4900
 7854              	.LC27:
 7855 0295 73657269 		.ascii	"serial_node/KD\000"
 7855      616C5F6E 
 7855      6F64652F 
 7855      4B4400
 7856              	.LC28:
 7857 02a4 73657269 		.ascii	"serial_node/integralSaturation\000"
 7857      616C5F6E 
 7857      6F64652F 
 7857      696E7465 
 7857      6772616C 
 7858              	.LC29:
 7859 02c3 73657269 		.ascii	"serial_node/wheelRadius\000"
 7859      616C5F6E 
 7859      6F64652F 
 7859      77686565 
 7859      6C526164 
 7860              	.LC30:
 7861 02db 73657269 		.ascii	"serial_node/widthBetweenMotorPivotPoints\000"
 7861      616C5F6E 
 7861      6F64652F 
 7861      77696474 
 7861      68426574 
 7862              	.LC31:
 7863 0304 73657269 		.ascii	"serial_node/motorPivotPointToWheel\000"
 7863      616C5F6E 
 7863      6F64652F 
 7863      6D6F746F 
 7863      72506976 
 7864              	.LC32:
 7865 0327 73657276 		.ascii	"servo_left\000"
 7865      6F5F6C65 
 7865      667400
 7866              	.LC33:
 7867 0332 73657276 		.ascii	"servo_right\000"
 7867      6F5F7269 
 7867      67687400 
 7868              	.LC34:
 7869 033e 66726F6E 		.ascii	"front_right\000"
 7869      745F7269 
 7869      67687400 
 7870              	.LC35:
 7871 034a 66726F6E 		.ascii	"front_left\000"
 7871      745F6C65 
 7871      667400
 7872              	.LC36:
 7873 0355 72656172 		.ascii	"rear_left\000"
 7873      5F6C6566 
 7873      7400
 7874              	.LC37:
 7875 035f 72656172 		.ascii	"rear_right\000"
 7875      5F726967 
 7875      687400
 7876              	.LC38:
 7877 036a 556E6162 		.ascii	"Unable to initialize motor: %s - [FAIL]\015\012\000"
 7877      6C652074 
 7877      6F20696E 
 7877      69746961 
 7877      6C697A65 
 7878              	.LC39:
 7879 0394 534C4F57 		.ascii	"SLOW! %u\000"
 7879      21202575 
 7879      00
 7880              	.LC40:
 7881 039d 7468726F 		.ascii	"throttled_joy_vel\000"
 7881      74746C65 
 7881      645F6A6F 
 7881      795F7665 
 7881      6C00
 7882              	.LC41:
 7883 03af 6C656400 		.ascii	"led\000"
 7884              	.LC42:
 7885 03b3 64656275 		.ascii	"debug\000"
 7885      6700
 7886              	.LC43:
 7887 03b9 6F646F6D 		.ascii	"odom\000"
 7887      00
 7888              		.bss
 7889              		.align	2
 7890              		.set	.LANCHOR1,. + 0
 7891              		.set	.LANCHOR2,. + 4344
 7894              	initialized:
 7895 0000 00       		.space	1
 7896 0001 000000   		.space	3
 7899              	lastMsg:
 7900 0004 00000000 		.space	4
 7903              	currentMode:
 7904 0008 00       		.space	1
 7907              	waitForServos:
 7908 0009 00       		.space	1
 7909 000a 0000     		.space	2
 7912              	L:
 7913 000c 00000000 		.space	4
 7916              	d:
 7917 0010 00000000 		.space	4
 7920              	servo_left:
 7921 0014 00000000 		.space	4
 7924              	servo_right:
 7925 0018 00000000 		.space	4
 7928              	motorCmd:
 7929 001c 00000000 		.space	16
 7929      00000000 
 7929      00000000 
 7929      00000000 
 7932              	USART_CNTOUT:
 7933 002c 00000000 		.space	4
 7936              	USART_CNTIN:
 7937 0030 00000000 		.space	4
 7940              	USART_FIFO:
 7941 0034 00000000 		.space	2048
 7941      00000000 
 7941      00000000 
 7941      00000000 
 7941      00000000 
 7944              	shuttingDown:
 7945 0834 00       		.space	1
 7946 0835 000000   		.space	3
 7949              	debug_msg:
 7950 0838 00000000 		.space	48
 7950      00000000 
 7950      00000000 
 7950      00000000 
 7950      00000000 
 7953              	odom_msg:
 7954 0868 00000000 		.space	48
 7954      00000000 
 7954      00000000 
 7954      00000000 
 7954      00000000 
 7957              	nh:
 7958 0898 00000000 		.space	2352
 7958      00000000 
 7958      00000000 
 7958      00000000 
 7958      00000000 
 7961              	motor_sub:
 7962 11c8 00000000 		.space	64
 7962      00000000 
 7962      00000000 
 7962      00000000 
 7962      00000000 
 7965              	led_sub:
 7966 1208 00000000 		.space	28
 7966      00000000 
 7966      00000000 
 7966      00000000 
 7966      00000000 
 7969              	odom_pub:
 7970 1224 00000000 		.space	20
 7970      00000000 
 7970      00000000 
 7970      00000000 
 7970      00000000 
 7973              	front_left:
 7974 1238 00000000 		.space	4
 7977              	front_right:
 7978 123c 00000000 		.space	4
 7981              	rear_left:
 7982 1240 00000000 		.space	4
 7985              	rear_right:
 7986 1244 00000000 		.space	4
 7989              	debug_pub:
 7990 1248 00000000 		.space	20
 7990      00000000 
 7990      00000000 
 7990      00000000 
 7990      00000000 
 7991              		.text
 7992              	.Letext0:
 7993              		.file 19 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 7994              		.file 20 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types.h"
 7995              		.file 21 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 7996              		.file 22 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdint.h"
 7997              		.file 23 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 7998              		.file 24 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_usart.h"
 7999              		.file 25 "/opt/gcc-arm-none-eabi-5_2-2015q4/lib/gcc/arm-none-eabi/5.2.1/include/stddef.h"
 8000              		.file 26 "/opt/gcc-arm-none-eabi-5_2-2015q4/lib/gcc/arm-none-eabi/5.2.1/include/stdarg.h"
 8001              		.file 27 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/lock.h"
 8002              		.file 28 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_types.h"
 8003              		.file 29 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/reent.h"
 8004              		.file 30 "<built-in>"
 8005              		.file 31 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/type_traits"
 8006              		.file 32 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/exception_ptr.h"
 8007              		.file 33 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/arm-none-eabi/armv7-m/
 8008              		.file 34 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/debug/debug.h"
 8009              		.file 35 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/cwchar"
 8010              		.file 36 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/cstdint"
 8011              		.file 37 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/clocale"
 8012              		.file 38 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/stl_pair.h"
 8013              		.file 39 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/uses_allocator.h"
 8014              		.file 40 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/tuple"
 8015              		.file 41 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/predefined_ops.h"
 8016              		.file 42 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/ext/new_allocator.h"
 8017              		.file 43 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/ext/numeric_traits.h"
 8018              		.file 44 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/wchar.h"
 8019              		.file 45 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/locale.h"
 8020              		.file 46 "./inc/motorSettings.h"
 8021              		.file 47 "./lib/ros_lib/ros/duration.h"
 8022              		.file 48 "./lib/ros_lib/ros.h"
 8023              		.file 49 "./lib/ros_lib/geometry_msgs/Point.h"
 8024              		.file 50 "./lib/ros_lib/geometry_msgs/TransformStamped.h"
 8025              		.file 51 "./lib/ros_lib/geometry_msgs/Transform.h"
 8026              		.file 52 "./lib/ros_lib/geometry_msgs/Vector3.h"
 8027              		.file 53 "./lib/ros_lib/geometry_msgs/Quaternion.h"
 8028              		.file 54 "./lib/ros_lib/sensor_msgs/Joy.h"
 8029              		.file 55 "./lib/ros_lib/nav_msgs/Odometry.h"
 8030              		.file 56 "./inc/motor.h"
 8031              		.file 57 "./inc/led.h"
 8032              		.file 58 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/string.h"
 8033              		.file 59 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdlib.h"
 8034              		.file 60 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/math.h"
 8035              		.file 61 "./inc/stm32_time.h"
 8036              		.file 62 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 8037              		.file 63 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_exti.h"
 8038              		.file 64 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdio.h"
 8039              		.file 65 "./inc/encoder.h"
 8040              		.file 66 "./lib/ros_lib/tf/tf.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/ccmz3H8o.s:20     .text._ZNK8std_msgs4Time9serializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:25     .text._ZNK8std_msgs4Time9serializeEPh:00000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:75     .text._ZN8std_msgs4Time11deserializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:80     .text._ZN8std_msgs4Time11deserializeEPh:00000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:131    .text._ZN8std_msgs4Time7getTypeEv:00000000 $t
     /tmp/ccmz3H8o.s:136    .text._ZN8std_msgs4Time7getTypeEv:00000000 _ZN8std_msgs4Time7getTypeEv
     /tmp/ccmz3H8o.s:152    .text._ZN8std_msgs4Time7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:00000000 $d
     /tmp/ccmz3H8o.s:159    .text._ZN8std_msgs4Time6getMD5Ev:00000000 $t
     /tmp/ccmz3H8o.s:164    .text._ZN8std_msgs4Time6getMD5Ev:00000000 _ZN8std_msgs4Time6getMD5Ev
     /tmp/ccmz3H8o.s:180    .text._ZN8std_msgs4Time6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:00000000 $d
     /tmp/ccmz3H8o.s:187    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $t
     /tmp/ccmz3H8o.s:192    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
     /tmp/ccmz3H8o.s:209    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $d
     /tmp/ccmz3H8o.s:216    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $t
     /tmp/ccmz3H8o.s:221    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
     /tmp/ccmz3H8o.s:237    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $d
     /tmp/ccmz3H8o.s:244    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $t
     /tmp/ccmz3H8o.s:249    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 _ZN14rosserial_msgs3Log7getTypeEv
     /tmp/ccmz3H8o.s:266    .text._ZN14rosserial_msgs3Log7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $d
     /tmp/ccmz3H8o.s:273    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $t
     /tmp/ccmz3H8o.s:278    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 _ZN14rosserial_msgs3Log6getMD5Ev
     /tmp/ccmz3H8o.s:294    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $d
     /tmp/ccmz3H8o.s:301    .text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000000 $t
     /tmp/ccmz3H8o.s:306    .text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000000 _ZN14rosserial_msgs19RequestParamRequest7getTypeEv
     /tmp/ccmz3H8o.s:323    .text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000000 $d
     /tmp/ccmz3H8o.s:330    .text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000000 $t
     /tmp/ccmz3H8o.s:335    .text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000000 _ZN14rosserial_msgs19RequestParamRequest6getMD5Ev
     /tmp/ccmz3H8o.s:351    .text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000000 $d
     /tmp/ccmz3H8o.s:358    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $t
     /tmp/ccmz3H8o.s:363    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
     /tmp/ccmz3H8o.s:379    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $d
     /tmp/ccmz3H8o.s:386    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $t
     /tmp/ccmz3H8o.s:391    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
     /tmp/ccmz3H8o.s:407    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $d
     /tmp/ccmz3H8o.s:414    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 $t
     /tmp/ccmz3H8o.s:419    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 _ZN8std_msgs19MultiArrayDimension7getTypeEv
     /tmp/ccmz3H8o.s:436    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 $d
     /tmp/ccmz3H8o.s:443    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 $t
     /tmp/ccmz3H8o.s:448    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 _ZN8std_msgs19MultiArrayDimension6getMD5Ev
     /tmp/ccmz3H8o.s:464    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 $d
     /tmp/ccmz3H8o.s:471    .text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:476    .text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 _ZNK8std_msgs16MultiArrayLayout9serializeEPh
.ARM.exidx.text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:569    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 $t
     /tmp/ccmz3H8o.s:574    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 _ZN8std_msgs16MultiArrayLayout7getTypeEv
     /tmp/ccmz3H8o.s:590    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 $d
     /tmp/ccmz3H8o.s:597    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 $t
     /tmp/ccmz3H8o.s:602    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 _ZN8std_msgs16MultiArrayLayout6getMD5Ev
     /tmp/ccmz3H8o.s:618    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 $d
     /tmp/ccmz3H8o.s:625    .text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:630    .text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 _ZNK8std_msgs17Float32MultiArray9serializeEPh
.ARM.exidx.text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:722    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 $t
     /tmp/ccmz3H8o.s:727    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 _ZN8std_msgs17Float32MultiArray7getTypeEv
     /tmp/ccmz3H8o.s:743    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 $d
     /tmp/ccmz3H8o.s:750    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 $t
     /tmp/ccmz3H8o.s:755    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 _ZN8std_msgs17Float32MultiArray6getMD5Ev
     /tmp/ccmz3H8o.s:771    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 $d
     /tmp/ccmz3H8o.s:778    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:783    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 _ZNK8std_msgs5UInt89serializeEPh
.ARM.exidx.text._ZNK8std_msgs5UInt89serializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:809    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:814    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 _ZN8std_msgs5UInt811deserializeEPh
.ARM.exidx.text._ZN8std_msgs5UInt811deserializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:837    .text._ZN8std_msgs5UInt87getTypeEv:00000000 $t
     /tmp/ccmz3H8o.s:842    .text._ZN8std_msgs5UInt87getTypeEv:00000000 _ZN8std_msgs5UInt87getTypeEv
     /tmp/ccmz3H8o.s:858    .text._ZN8std_msgs5UInt87getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt87getTypeEv:00000000 $d
     /tmp/ccmz3H8o.s:865    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 $t
     /tmp/ccmz3H8o.s:870    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 _ZN8std_msgs5UInt86getMD5Ev
     /tmp/ccmz3H8o.s:886    .text._ZN8std_msgs5UInt86getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt86getMD5Ev:00000000 $d
     /tmp/ccmz3H8o.s:893    .text._ZN8std_msgs6Header7getTypeEv:00000000 $t
     /tmp/ccmz3H8o.s:898    .text._ZN8std_msgs6Header7getTypeEv:00000000 _ZN8std_msgs6Header7getTypeEv
     /tmp/ccmz3H8o.s:915    .text._ZN8std_msgs6Header7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header7getTypeEv:00000000 $d
     /tmp/ccmz3H8o.s:922    .text._ZN8std_msgs6Header6getMD5Ev:00000000 $t
     /tmp/ccmz3H8o.s:927    .text._ZN8std_msgs6Header6getMD5Ev:00000000 _ZN8std_msgs6Header6getMD5Ev
     /tmp/ccmz3H8o.s:943    .text._ZN8std_msgs6Header6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header6getMD5Ev:00000000 $d
     /tmp/ccmz3H8o.s:950    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $t
     /tmp/ccmz3H8o.s:955    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 _ZN12roberto_msgs10MotorState7getTypeEv
     /tmp/ccmz3H8o.s:972    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $d
     /tmp/ccmz3H8o.s:979    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $t
     /tmp/ccmz3H8o.s:984    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 _ZN12roberto_msgs10MotorState6getMD5Ev
     /tmp/ccmz3H8o.s:1000   .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $d
     /tmp/ccmz3H8o.s:1007   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv:00000000 $t
     /tmp/ccmz3H8o.s:1012   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE9connectedEv:00000000 $d
     /tmp/ccmz3H8o.s:1032   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $t
     /tmp/ccmz3H8o.s:1037   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $d
     /tmp/ccmz3H8o.s:1073   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $t
     /tmp/ccmz3H8o.s:1078   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $d
     /tmp/ccmz3H8o.s:1097   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $t
     /tmp/ccmz3H8o.s:1102   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
     /tmp/ccmz3H8o.s:1118   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $d
     /tmp/ccmz3H8o.s:1125   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $t
     /tmp/ccmz3H8o.s:1130   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
     /tmp/ccmz3H8o.s:1146   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $d
     /tmp/ccmz3H8o.s:1153   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $t
     /tmp/ccmz3H8o.s:1158   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $d
     /tmp/ccmz3H8o.s:1177   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $t
     /tmp/ccmz3H8o.s:1182   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
     /tmp/ccmz3H8o.s:1198   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $d
     /tmp/ccmz3H8o.s:1205   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $t
     /tmp/ccmz3H8o.s:1210   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
     /tmp/ccmz3H8o.s:1226   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $d
     /tmp/ccmz3H8o.s:1233   .text:00000000 $t
     /tmp/ccmz3H8o.s:1238   .text:00000000 _Z6led_cbRKN8std_msgs5UInt8E
     /tmp/ccmz3H8o.s:1262   .text:00000010 $d
                       .ARM.exidx:00000000 $d
     /tmp/ccmz3H8o.s:1269   .text._ZNK8std_msgs6Header9serializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:1274   .text._ZNK8std_msgs6Header9serializeEPh:00000000 _ZNK8std_msgs6Header9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6Header9serializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:1373   .text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:1378   .text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 _ZNK8std_msgs19MultiArrayDimension9serializeEPh
.ARM.exidx.text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:1461   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:1466   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:1679   .text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:1684   .text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:00000000 _ZNK14rosserial_msgs19RequestParamRequest9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:1737   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:1742   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:1801   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:1806   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:1941   .text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:1946   .text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:00000000 _ZN14rosserial_msgs19RequestParamRequest11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:2014   .text._ZN8std_msgs6Header11deserializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:2019   .text._ZN8std_msgs6Header11deserializeEPh:00000000 _ZN8std_msgs6Header11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6Header11deserializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:2132   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:2137   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:2325   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:2330   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:2404   .text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:2409   .text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 _ZN8std_msgs19MultiArrayDimension11deserializeEPh
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:2511   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:2516   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:2771   .text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:2776   .text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 _ZN8std_msgs16MultiArrayLayout11deserializeEPh
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:2890   .text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:2895   .text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 _ZN8std_msgs17Float32MultiArray11deserializeEPh
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:3011   .text:00000014 $t
     /tmp/ccmz3H8o.s:3016   .text:00000014 _Z8motor_cbRKN12roberto_msgs10MotorStateE
     /tmp/ccmz3H8o.s:3436   .text:00000238 $d
     /tmp/ccmz3H8o.s:3452   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $t
     /tmp/ccmz3H8o.s:3457   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 _ZN3ros3Msg19serializeAvrFloat64EPhf
.ARM.exidx.text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $d
     /tmp/ccmz3H8o.s:3544   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:3549   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 _ZNK12roberto_msgs10MotorState9serializeEPh
.ARM.exidx.text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:3621   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $t
     /tmp/ccmz3H8o.s:3626   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 _ZN3ros3Msg21deserializeAvrFloat64EPKhPf
.ARM.exidx.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $d
     /tmp/ccmz3H8o.s:3698   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $t
     /tmp/ccmz3H8o.s:3703   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 _ZN12roberto_msgs10MotorState11deserializeEPh
.ARM.exidx.text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $d
     /tmp/ccmz3H8o.s:3777   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $t
     /tmp/ccmz3H8o.s:3782   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $d
     /tmp/ccmz3H8o.s:3826   .text._ZN15ArduinoHardware4initEv:00000000 $t
     /tmp/ccmz3H8o.s:3831   .text._ZN15ArduinoHardware4initEv:00000000 _ZN15ArduinoHardware4initEv
     /tmp/ccmz3H8o.s:3949   .text._ZN15ArduinoHardware4initEv:0000008c $d
.ARM.exidx.text._ZN15ArduinoHardware4initEv:00000000 $d
     /tmp/ccmz3H8o.s:3956   .text:00000264 $t
     /tmp/ccmz3H8o.s:3961   .text:00000264 USART1_IRQHandler
     /tmp/ccmz3H8o.s:4023   .text:000002a8 $d
     /tmp/ccmz3H8o.s:4029   .text:000002b0 $t
     /tmp/ccmz3H8o.s:4034   .text:000002b0 EXTI2_IRQHandler
     /tmp/ccmz3H8o.s:4075   .text:000002d0 $d
                       .ARM.extab:00000000 $d
     /tmp/ccmz3H8o.s:4080   .text:000002d4 $t
     /tmp/ccmz3H8o.s:4085   .text:000002d4 HardFault_Handler
     /tmp/ccmz3H8o.s:4103   .text:000002e4 _MSP
     /tmp/ccmz3H8o.s:4122   .text:000002ec hard_fault_handler_c
     /tmp/ccmz3H8o.s:4143   .text:000002ee _Z13assert_failedPhm
     /tmp/ccmz3H8o.s:4173   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8getParamEPKcPfi:00000000 $t
     /tmp/ccmz3H8o.s:4178   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8getParamEPKcPfi:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8getParamEPKcPfi
     /tmp/ccmz3H8o.s:4326   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8getParamEPKcPfi:0000006c $d
     /tmp/ccmz3H8o.s:7640   .rodata._ZTVN14rosserial_msgs19RequestParamRequestE:00000000 _ZTVN14rosserial_msgs19RequestParamRequestE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8getParamEPKcPfi:00000000 $d
     /tmp/ccmz3H8o.s:4332   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8logerrorEPKc:00000000 $t
     /tmp/ccmz3H8o.s:4337   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8logerrorEPKc:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8logerrorEPKc
     /tmp/ccmz3H8o.s:4391   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8logerrorEPKc:00000020 $d
     /tmp/ccmz3H8o.s:7628   .rodata._ZTVN14rosserial_msgs3LogE:00000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8logerrorEPKc:00000000 $d
     /tmp/ccmz3H8o.s:4397   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:00000000 $t
     /tmp/ccmz3H8o.s:4402   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE
     /tmp/ccmz3H8o.s:4566   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:000000bc $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:00000000 $d
     /tmp/ccmz3H8o.s:4573   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:00000000 $t
     /tmp/ccmz3H8o.s:4578   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
     /tmp/ccmz3H8o.s:4648   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:00000024 $d
     /tmp/ccmz3H8o.s:7604   .rodata._ZTVN8std_msgs4TimeE:00000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:00000000 $d
     /tmp/ccmz3H8o.s:4654   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:00000000 $t
     /tmp/ccmz3H8o.s:4659   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv
     /tmp/ccmz3H8o.s:4821   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:000000b4 $d
     /tmp/ccmz3H8o.s:7616   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 _ZTVN14rosserial_msgs9TopicInfoE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:00000000 $d
     /tmp/ccmz3H8o.s:4828   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:00000000 $t
     /tmp/ccmz3H8o.s:4833   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh
     /tmp/ccmz3H8o.s:4966   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:00000074 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:00000000 $d
     /tmp/ccmz3H8o.s:4974   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:00000000 $t
     /tmp/ccmz3H8o.s:4979   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv
     /tmp/ccmz3H8o.s:5377   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:00000210 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:00000000 $d
     /tmp/ccmz3H8o.s:5385   .text.startup:00000000 $t
     /tmp/ccmz3H8o.s:5390   .text.startup:00000000 main
     /tmp/ccmz3H8o.s:5582   .text.startup:000000e8 $d
     /tmp/ccmz3H8o.s:5590   .text.startup:000000fc $t
     /tmp/ccmz3H8o.s:5982   .text.startup:00000390 $d
     /tmp/ccmz3H8o.s:6014   .text.startup:0000040c $t
     /tmp/ccmz3H8o.s:6389   .text.startup:00000628 $d
     /tmp/ccmz3H8o.s:6400   .text.startup:00000648 $t
     /tmp/ccmz3H8o.s:6857   .text.startup:00000950 $d
          .ARM.exidx.text.startup:00000000 $d
     /tmp/ccmz3H8o.s:6870   .text.startup:00000974 $t
     /tmp/ccmz3H8o.s:6874   .text.startup:00000974 _GLOBAL__sub_I_USART_FIFO
     /tmp/ccmz3H8o.s:7310   .text.startup:00000af8 $d
     /tmp/ccmz3H8o.s:7736   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:00000000 _ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
     /tmp/ccmz3H8o.s:7652   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 _ZTVN14rosserial_msgs20RequestParamResponseE
     /tmp/ccmz3H8o.s:7747   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccmz3H8o.s:7724   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 _ZTVN12roberto_msgs10MotorStateE
     /tmp/ccmz3H8o.s:7712   .rodata._ZTVN8std_msgs6HeaderE:00000000 _ZTVN8std_msgs6HeaderE
     /tmp/ccmz3H8o.s:7759   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/ccmz3H8o.s:7700   .rodata._ZTVN8std_msgs5UInt8E:00000000 _ZTVN8std_msgs5UInt8E
     /tmp/ccmz3H8o.s:7688   .rodata._ZTVN8std_msgs17Float32MultiArrayE:00000000 _ZTVN8std_msgs17Float32MultiArrayE
     /tmp/ccmz3H8o.s:7676   .rodata._ZTVN8std_msgs16MultiArrayLayoutE:00000000 _ZTVN8std_msgs16MultiArrayLayoutE
     /tmp/ccmz3H8o.s:7664   .rodata._ZTVN8std_msgs19MultiArrayDimensionE:00000000 _ZTVN8std_msgs19MultiArrayDimensionE
     /tmp/ccmz3H8o.s:7344   .init_array:00000000 $d
     /tmp/ccmz3H8o.s:7350   .rodata._ZTSN3ros3MsgE:00000000 _ZTSN3ros3MsgE
     /tmp/ccmz3H8o.s:7357   .rodata._ZTIN3ros3MsgE:00000000 _ZTIN3ros3MsgE
     /tmp/ccmz3H8o.s:7354   .rodata._ZTIN3ros3MsgE:00000000 $d
     /tmp/ccmz3H8o.s:7364   .rodata._ZTSN8std_msgs4TimeE:00000000 _ZTSN8std_msgs4TimeE
     /tmp/ccmz3H8o.s:7371   .rodata._ZTIN8std_msgs4TimeE:00000000 _ZTIN8std_msgs4TimeE
     /tmp/ccmz3H8o.s:7368   .rodata._ZTIN8std_msgs4TimeE:00000000 $d
     /tmp/ccmz3H8o.s:7379   .rodata._ZTSN14rosserial_msgs9TopicInfoE:00000000 _ZTSN14rosserial_msgs9TopicInfoE
     /tmp/ccmz3H8o.s:7386   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 _ZTIN14rosserial_msgs9TopicInfoE
     /tmp/ccmz3H8o.s:7383   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/ccmz3H8o.s:7394   .rodata._ZTSN14rosserial_msgs3LogE:00000000 _ZTSN14rosserial_msgs3LogE
     /tmp/ccmz3H8o.s:7401   .rodata._ZTIN14rosserial_msgs3LogE:00000000 _ZTIN14rosserial_msgs3LogE
     /tmp/ccmz3H8o.s:7398   .rodata._ZTIN14rosserial_msgs3LogE:00000000 $d
     /tmp/ccmz3H8o.s:7409   .rodata._ZTSN14rosserial_msgs19RequestParamRequestE:00000000 _ZTSN14rosserial_msgs19RequestParamRequestE
     /tmp/ccmz3H8o.s:7416   .rodata._ZTIN14rosserial_msgs19RequestParamRequestE:00000000 _ZTIN14rosserial_msgs19RequestParamRequestE
     /tmp/ccmz3H8o.s:7413   .rodata._ZTIN14rosserial_msgs19RequestParamRequestE:00000000 $d
     /tmp/ccmz3H8o.s:7424   .rodata._ZTSN14rosserial_msgs20RequestParamResponseE:00000000 _ZTSN14rosserial_msgs20RequestParamResponseE
     /tmp/ccmz3H8o.s:7431   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 _ZTIN14rosserial_msgs20RequestParamResponseE
     /tmp/ccmz3H8o.s:7428   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/ccmz3H8o.s:7439   .rodata._ZTSN3ros15NodeHandleBase_E:00000000 _ZTSN3ros15NodeHandleBase_E
     /tmp/ccmz3H8o.s:7446   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 _ZTIN3ros15NodeHandleBase_E
     /tmp/ccmz3H8o.s:7443   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 $d
     /tmp/ccmz3H8o.s:7453   .rodata._ZTSN3ros11Subscriber_E:00000000 _ZTSN3ros11Subscriber_E
     /tmp/ccmz3H8o.s:7460   .rodata._ZTIN3ros11Subscriber_E:00000000 _ZTIN3ros11Subscriber_E
     /tmp/ccmz3H8o.s:7457   .rodata._ZTIN3ros11Subscriber_E:00000000 $d
     /tmp/ccmz3H8o.s:7467   .rodata._ZTSN8std_msgs19MultiArrayDimensionE:00000000 _ZTSN8std_msgs19MultiArrayDimensionE
     /tmp/ccmz3H8o.s:7474   .rodata._ZTIN8std_msgs19MultiArrayDimensionE:00000000 _ZTIN8std_msgs19MultiArrayDimensionE
     /tmp/ccmz3H8o.s:7471   .rodata._ZTIN8std_msgs19MultiArrayDimensionE:00000000 $d
     /tmp/ccmz3H8o.s:7482   .rodata._ZTSN8std_msgs16MultiArrayLayoutE:00000000 _ZTSN8std_msgs16MultiArrayLayoutE
     /tmp/ccmz3H8o.s:7489   .rodata._ZTIN8std_msgs16MultiArrayLayoutE:00000000 _ZTIN8std_msgs16MultiArrayLayoutE
     /tmp/ccmz3H8o.s:7486   .rodata._ZTIN8std_msgs16MultiArrayLayoutE:00000000 $d
     /tmp/ccmz3H8o.s:7497   .rodata._ZTSN8std_msgs17Float32MultiArrayE:00000000 _ZTSN8std_msgs17Float32MultiArrayE
     /tmp/ccmz3H8o.s:7504   .rodata._ZTIN8std_msgs17Float32MultiArrayE:00000000 _ZTIN8std_msgs17Float32MultiArrayE
     /tmp/ccmz3H8o.s:7501   .rodata._ZTIN8std_msgs17Float32MultiArrayE:00000000 $d
     /tmp/ccmz3H8o.s:7512   .rodata._ZTSN8std_msgs5UInt8E:00000000 _ZTSN8std_msgs5UInt8E
     /tmp/ccmz3H8o.s:7519   .rodata._ZTIN8std_msgs5UInt8E:00000000 _ZTIN8std_msgs5UInt8E
     /tmp/ccmz3H8o.s:7516   .rodata._ZTIN8std_msgs5UInt8E:00000000 $d
     /tmp/ccmz3H8o.s:7527   .rodata._ZTSN8std_msgs6HeaderE:00000000 _ZTSN8std_msgs6HeaderE
     /tmp/ccmz3H8o.s:7534   .rodata._ZTIN8std_msgs6HeaderE:00000000 _ZTIN8std_msgs6HeaderE
     /tmp/ccmz3H8o.s:7531   .rodata._ZTIN8std_msgs6HeaderE:00000000 $d
     /tmp/ccmz3H8o.s:7542   .rodata._ZTSN12roberto_msgs10MotorStateE:00000000 _ZTSN12roberto_msgs10MotorStateE
     /tmp/ccmz3H8o.s:7549   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 _ZTIN12roberto_msgs10MotorStateE
     /tmp/ccmz3H8o.s:7546   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/ccmz3H8o.s:7557   .rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:00000000 _ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
     /tmp/ccmz3H8o.s:7565   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:00000000 _ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE
     /tmp/ccmz3H8o.s:7562   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:00000000 $d
     /tmp/ccmz3H8o.s:7573   .rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccmz3H8o.s:7580   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccmz3H8o.s:7577   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/ccmz3H8o.s:7588   .rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/ccmz3H8o.s:7595   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/ccmz3H8o.s:7592   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/ccmz3H8o.s:7601   .rodata._ZTVN8std_msgs4TimeE:00000000 $d
     /tmp/ccmz3H8o.s:7613   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/ccmz3H8o.s:7625   .rodata._ZTVN14rosserial_msgs3LogE:00000000 $d
     /tmp/ccmz3H8o.s:7637   .rodata._ZTVN14rosserial_msgs19RequestParamRequestE:00000000 $d
     /tmp/ccmz3H8o.s:7649   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/ccmz3H8o.s:7661   .rodata._ZTVN8std_msgs19MultiArrayDimensionE:00000000 $d
     /tmp/ccmz3H8o.s:7673   .rodata._ZTVN8std_msgs16MultiArrayLayoutE:00000000 $d
     /tmp/ccmz3H8o.s:7685   .rodata._ZTVN8std_msgs17Float32MultiArrayE:00000000 $d
     /tmp/ccmz3H8o.s:7697   .rodata._ZTVN8std_msgs5UInt8E:00000000 $d
     /tmp/ccmz3H8o.s:7709   .rodata._ZTVN8std_msgs6HeaderE:00000000 $d
     /tmp/ccmz3H8o.s:7721   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/ccmz3H8o.s:7733   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi1024ELi1024EEE:00000000 $d
     /tmp/ccmz3H8o.s:7744   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/ccmz3H8o.s:7756   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/ccmz3H8o.s:7969   .bss:00001224 odom_pub
     /tmp/ccmz3H8o.s:7953   .bss:00000868 odom_msg
     /tmp/ccmz3H8o.s:7989   .bss:00001248 debug_pub
     /tmp/ccmz3H8o.s:7949   .bss:00000838 debug_msg
     /tmp/ccmz3H8o.s:7965   .bss:00001208 led_sub
     /tmp/ccmz3H8o.s:7961   .bss:000011c8 motor_sub
     /tmp/ccmz3H8o.s:7907   .bss:00000009 waitForServos
     /tmp/ccmz3H8o.s:7944   .bss:00000834 shuttingDown
     /tmp/ccmz3H8o.s:7957   .bss:00000898 nh
     /tmp/ccmz3H8o.s:7894   .bss:00000000 initialized
     /tmp/ccmz3H8o.s:7899   .bss:00000004 lastMsg
     /tmp/ccmz3H8o.s:7903   .bss:00000008 currentMode
     /tmp/ccmz3H8o.s:7928   .bss:0000001c motorCmd
     /tmp/ccmz3H8o.s:7912   .bss:0000000c L
     /tmp/ccmz3H8o.s:7916   .bss:00000010 d
     /tmp/ccmz3H8o.s:7981   .bss:00001240 rear_left
     /tmp/ccmz3H8o.s:7985   .bss:00001244 rear_right
     /tmp/ccmz3H8o.s:7973   .bss:00001238 front_left
     /tmp/ccmz3H8o.s:7977   .bss:0000123c front_right
     /tmp/ccmz3H8o.s:7924   .bss:00000018 servo_right
     /tmp/ccmz3H8o.s:7920   .bss:00000014 servo_left
     /tmp/ccmz3H8o.s:7932   .bss:0000002c USART_CNTOUT
     /tmp/ccmz3H8o.s:7936   .bss:00000030 USART_CNTIN
     /tmp/ccmz3H8o.s:7940   .bss:00000034 USART_FIFO
     /tmp/ccmz3H8o.s:7791   .rodata:00000000 $d
     /tmp/ccmz3H8o.s:7795   .rodata:00000000 _ZN14rosserial_msgsL12REQUESTPARAME
     /tmp/ccmz3H8o.s:7889   .bss:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_unwind_cpp_pr0
led_set
strlen
memcpy
realloc
__aeabi_fcmpeq
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
__aeabi_fadd
__aeabi_fmul
__aeabi_fsub
__aeabi_fdiv
__aeabi_dadd
__aeabi_fcmpgt
__aeabi_fcmplt
millis
sin
atan
RCC_APB2PeriphClockCmd
GPIO_Init
USART_Cmd
USART_Init
USART_ITConfig
USART_GetITStatus
USART_ReceiveData
EXTI_GetITStatus
EXTI_ClearITPendingBit
__aeabi_unwind_cpp_pr1
debug_toggle
delay
USART_SendData
_ZN3ros16normalizeSecNSecERmS0_
__aeabi_f2iz
RCC_Configuration
SysTick_Init
GPIO_PinRemapConfig
I2C1_Init
DEBUG_Init
SHUTDOWN_Init
LED_Init
malloc
_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
_ZN13motorSettings12setRegulatorEfffff
_ZN5motor11createMotorEP13motorSettings
sprintf
sqrt
cos
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
