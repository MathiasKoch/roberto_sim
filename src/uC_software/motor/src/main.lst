   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  20              		.align	1
  21              		.weak	_ZNK8std_msgs4Time9serializeEPh
  22              		.thumb
  23              		.thumb_func
  25              	_ZNK8std_msgs4Time9serializeEPh:
  26              		.fnstart
  27              	.LFB1046:
  28              		.file 1 "./lib/ros_lib/std_msgs/Time.h"
   1:./lib/ros_lib/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:./lib/ros_lib/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:./lib/ros_lib/std_msgs/Time.h **** 
   4:./lib/ros_lib/std_msgs/Time.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Time.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Time.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Time.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Time.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Time.h **** 
  10:./lib/ros_lib/std_msgs/Time.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Time.h **** {
  12:./lib/ros_lib/std_msgs/Time.h **** 
  13:./lib/ros_lib/std_msgs/Time.h ****   class Time : public ros::Msg
  14:./lib/ros_lib/std_msgs/Time.h ****   {
  15:./lib/ros_lib/std_msgs/Time.h ****     public:
  16:./lib/ros_lib/std_msgs/Time.h ****       ros::Time data;
  17:./lib/ros_lib/std_msgs/Time.h **** 
  18:./lib/ros_lib/std_msgs/Time.h ****     Time():
  19:./lib/ros_lib/std_msgs/Time.h ****       data()
  20:./lib/ros_lib/std_msgs/Time.h ****     {
  21:./lib/ros_lib/std_msgs/Time.h ****     }
  22:./lib/ros_lib/std_msgs/Time.h **** 
  23:./lib/ros_lib/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  29              		.loc 1 23 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  24:./lib/ros_lib/std_msgs/Time.h ****     {
  25:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  26:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  35              		.loc 1 26 0
  36 0000 4368     		ldr	r3, [r0, #4]
  37 0002 0B70     		strb	r3, [r1]
  27:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  38              		.loc 1 27 0
  39 0004 4368     		ldr	r3, [r0, #4]
  40 0006 1B0A     		lsrs	r3, r3, #8
  41 0008 4B70     		strb	r3, [r1, #1]
  28:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  42              		.loc 1 28 0
  43 000a C388     		ldrh	r3, [r0, #6]
  44 000c 8B70     		strb	r3, [r1, #2]
  29:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  45              		.loc 1 29 0
  46 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  47 0010 CB70     		strb	r3, [r1, #3]
  48              	.LVL1:
  30:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  31:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  49              		.loc 1 31 0
  50 0012 8368     		ldr	r3, [r0, #8]
  51 0014 0B71     		strb	r3, [r1, #4]
  32:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  52              		.loc 1 32 0
  53 0016 8368     		ldr	r3, [r0, #8]
  54 0018 1B0A     		lsrs	r3, r3, #8
  55 001a 4B71     		strb	r3, [r1, #5]
  33:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  56              		.loc 1 33 0
  57 001c 4389     		ldrh	r3, [r0, #10]
  58 001e 8B71     		strb	r3, [r1, #6]
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  59              		.loc 1 34 0
  60 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  35:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  36:./lib/ros_lib/std_msgs/Time.h ****       return offset;
  37:./lib/ros_lib/std_msgs/Time.h ****     }
  61              		.loc 1 37 0
  62 0022 0820     		movs	r0, #8
  63              	.LVL2:
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  64              		.loc 1 34 0
  65 0024 CB71     		strb	r3, [r1, #7]
  66              	.LVL3:
  67              		.loc 1 37 0
  68 0026 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE1046:
  71              		.cantunwind
  72              		.fnend
  74              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  75              		.align	1
  76              		.weak	_ZN8std_msgs4Time11deserializeEPh
  77              		.thumb
  78              		.thumb_func
  80              	_ZN8std_msgs4Time11deserializeEPh:
  81              		.fnstart
  82              	.LFB1047:
  38:./lib/ros_lib/std_msgs/Time.h **** 
  39:./lib/ros_lib/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  83              		.loc 1 39 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL4:
  40:./lib/ros_lib/std_msgs/Time.h ****     {
  41:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  42:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  89              		.loc 1 42 0
  90 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  91 0002 4360     		str	r3, [r0, #4]
  43:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  92              		.loc 1 43 0
  93 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  94 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  95 000a 4360     		str	r3, [r0, #4]
  44:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  96              		.loc 1 44 0
  97 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  98 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  99 0012 4360     		str	r3, [r0, #4]
  45:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 100              		.loc 1 45 0
 101 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 102 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 103 001a 4360     		str	r3, [r0, #4]
 104              	.LVL5:
  46:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  47:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 105              		.loc 1 47 0
 106 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 107 001e 8360     		str	r3, [r0, #8]
  48:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 108              		.loc 1 48 0
 109 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 110 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 111 0026 8360     		str	r3, [r0, #8]
  49:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 112              		.loc 1 49 0
 113 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 114 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 115 002e 8360     		str	r3, [r0, #8]
  50:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 116              		.loc 1 50 0
 117 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 118 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 119 0036 8360     		str	r3, [r0, #8]
 120              	.LVL6:
  51:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  52:./lib/ros_lib/std_msgs/Time.h ****      return offset;
  53:./lib/ros_lib/std_msgs/Time.h ****     }
 121              		.loc 1 53 0
 122 0038 0820     		movs	r0, #8
 123              	.LVL7:
 124 003a 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE1047:
 127              		.cantunwind
 128              		.fnend
 130              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 131              		.align	1
 132              		.weak	_ZN8std_msgs4Time7getTypeEv
 133              		.thumb
 134              		.thumb_func
 136              	_ZN8std_msgs4Time7getTypeEv:
 137              		.fnstart
 138              	.LFB1048:
  54:./lib/ros_lib/std_msgs/Time.h **** 
  55:./lib/ros_lib/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 139              		.loc 1 55 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144              	.LVL8:
 145              		.loc 1 55 0
 146 0000 0048     		ldr	r0, .L4
 147              	.LVL9:
 148 0002 7047     		bx	lr
 149              	.L5:
 150              		.align	2
 151              	.L4:
 152 0004 00000000 		.word	.LC1
 153              		.cfi_endproc
 154              	.LFE1048:
 155              		.cantunwind
 156              		.fnend
 158              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 159              		.align	1
 160              		.weak	_ZN8std_msgs4Time6getMD5Ev
 161              		.thumb
 162              		.thumb_func
 164              	_ZN8std_msgs4Time6getMD5Ev:
 165              		.fnstart
 166              	.LFB1049:
  56:./lib/ros_lib/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 167              		.loc 1 56 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172              	.LVL10:
 173              		.loc 1 56 0
 174 0000 0048     		ldr	r0, .L7
 175              	.LVL11:
 176 0002 7047     		bx	lr
 177              	.L8:
 178              		.align	2
 179              	.L7:
 180 0004 0E000000 		.word	.LC2
 181              		.cfi_endproc
 182              	.LFE1049:
 183              		.cantunwind
 184              		.fnend
 186              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 187              		.align	1
 188              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 189              		.thumb
 190              		.thumb_func
 192              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 193              		.fnstart
 194              	.LFB1055:
 195              		.file 2 "./lib/ros_lib/rosserial_msgs/TopicInfo.h"
   1:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   4:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   9:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** {
  11:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  12:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   {
  14:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  29:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     TopicInfo():
  30:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_id(0),
  31:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_name(""),
  32:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       message_type(""),
  33:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       md5sum(""),
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       buffer_size(0)
  35:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  36:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  37:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  39:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  40:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  43:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  46:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  51:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  56:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  59:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
  60:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
  61:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  62:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  68:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  69:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       return offset;
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  71:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
  73:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  74:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
  77:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  78:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
  80:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  83:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
  86:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  87:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
  89:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
  92:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
  95:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  96:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
  98:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 101:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 104:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 105:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 106:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
 107:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
 108:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 109:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 110:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 111:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 112:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 113:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 115:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 116:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****      return offset;
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
 118:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 119:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 196              		.loc 2 119 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201              	.LVL12:
 202              		.loc 2 119 0
 203 0000 0048     		ldr	r0, .L10
 204              	.LVL13:
 205 0002 7047     		bx	lr
 206              	.L11:
 207              		.align	2
 208              	.L10:
 209 0004 2F000000 		.word	.LC3
 210              		.cfi_endproc
 211              	.LFE1055:
 212              		.cantunwind
 213              		.fnend
 215              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 216              		.align	1
 217              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 218              		.thumb
 219              		.thumb_func
 221              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 222              		.fnstart
 223              	.LFB1056:
 120:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 224              		.loc 2 120 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL14:
 230              		.loc 2 120 0
 231 0000 0048     		ldr	r0, .L13
 232              	.LVL15:
 233 0002 7047     		bx	lr
 234              	.L14:
 235              		.align	2
 236              	.L13:
 237 0004 48000000 		.word	.LC4
 238              		.cfi_endproc
 239              	.LFE1056:
 240              		.cantunwind
 241              		.fnend
 243              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 244              		.align	1
 245              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 246              		.thumb
 247              		.thumb_func
 249              	_ZN14rosserial_msgs3Log7getTypeEv:
 250              		.fnstart
 251              	.LFB1062:
 252              		.file 3 "./lib/ros_lib/rosserial_msgs/Log.h"
   1:./lib/ros_lib/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:./lib/ros_lib/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:./lib/ros_lib/rosserial_msgs/Log.h **** 
   4:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/Log.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/Log.h **** 
   9:./lib/ros_lib/rosserial_msgs/Log.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/Log.h **** {
  11:./lib/ros_lib/rosserial_msgs/Log.h **** 
  12:./lib/ros_lib/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/Log.h ****   {
  14:./lib/ros_lib/rosserial_msgs/Log.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/Log.h ****       uint8_t level;
  16:./lib/ros_lib/rosserial_msgs/Log.h ****       const char* msg;
  17:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  18:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  19:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  20:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  21:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  22:./lib/ros_lib/rosserial_msgs/Log.h **** 
  23:./lib/ros_lib/rosserial_msgs/Log.h ****     Log():
  24:./lib/ros_lib/rosserial_msgs/Log.h ****       level(0),
  25:./lib/ros_lib/rosserial_msgs/Log.h ****       msg("")
  26:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  27:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  28:./lib/ros_lib/rosserial_msgs/Log.h **** 
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  31:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  33:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  36:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  38:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  39:./lib/ros_lib/rosserial_msgs/Log.h ****       return offset;
  40:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  41:./lib/ros_lib/rosserial_msgs/Log.h **** 
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
  43:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  44:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
  46:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  47:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg;
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
  49:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  50:./lib/ros_lib/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
  51:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
  52:./lib/ros_lib/rosserial_msgs/Log.h ****       }
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
  55:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  56:./lib/ros_lib/rosserial_msgs/Log.h ****      return offset;
  57:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  58:./lib/ros_lib/rosserial_msgs/Log.h **** 
  59:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 253              		.loc 3 59 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL16:
 259              		.loc 3 59 0
 260 0000 0048     		ldr	r0, .L16
 261              	.LVL17:
 262 0002 7047     		bx	lr
 263              	.L17:
 264              		.align	2
 265              	.L16:
 266 0004 69000000 		.word	.LC5
 267              		.cfi_endproc
 268              	.LFE1062:
 269              		.cantunwind
 270              		.fnend
 272              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 273              		.align	1
 274              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 275              		.thumb
 276              		.thumb_func
 278              	_ZN14rosserial_msgs3Log6getMD5Ev:
 279              		.fnstart
 280              	.LFB1063:
  60:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 281              		.loc 3 60 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL18:
 287              		.loc 3 60 0
 288 0000 0048     		ldr	r0, .L19
 289              	.LVL19:
 290 0002 7047     		bx	lr
 291              	.L20:
 292              		.align	2
 293              	.L19:
 294 0004 7C000000 		.word	.LC6
 295              		.cfi_endproc
 296              	.LFE1063:
 297              		.cantunwind
 298              		.fnend
 300              		.section	.text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv,"axG",%progbits,_ZN14rosserial_m
 301              		.align	1
 302              		.weak	_ZN14rosserial_msgs19RequestParamRequest7getTypeEv
 303              		.thumb
 304              		.thumb_func
 306              	_ZN14rosserial_msgs19RequestParamRequest7getTypeEv:
 307              		.fnstart
 308              	.LFB1069:
 309              		.file 4 "./lib/ros_lib/rosserial_msgs/RequestParam.h"
   1:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   4:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <string.h>
   5:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   6:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   7:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
   8:./lib/ros_lib/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
   9:./lib/ros_lib/rosserial_msgs/RequestParam.h **** {
  10:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  11:./lib/ros_lib/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  12:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  13:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  14:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  15:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  16:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       const char* name;
  17:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  18:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamRequest():
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       name("")
  20:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  21:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  22:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  24:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  25:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  28:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  30:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  31:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  33:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  35:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  36:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  37:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  39:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  42:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  45:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  46:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  48:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  49:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 310              		.loc 4 49 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL20:
 316              		.loc 4 49 0
 317 0000 0048     		ldr	r0, .L22
 318              	.LVL21:
 319 0002 7047     		bx	lr
 320              	.L23:
 321              		.align	2
 322              	.L22:
 323 0004 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE1069:
 326              		.cantunwind
 327              		.fnend
 329              		.section	.text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev,"axG",%progbits,_ZN14rosserial_ms
 330              		.align	1
 331              		.weak	_ZN14rosserial_msgs19RequestParamRequest6getMD5Ev
 332              		.thumb
 333              		.thumb_func
 335              	_ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:
 336              		.fnstart
 337              	.LFB1070:
  50:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
 338              		.loc 4 50 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343              	.LVL22:
 344              		.loc 4 50 0
 345 0000 0048     		ldr	r0, .L25
 346              	.LVL23:
 347 0002 7047     		bx	lr
 348              	.L26:
 349              		.align	2
 350              	.L25:
 351 0004 9D000000 		.word	.LC7
 352              		.cfi_endproc
 353              	.LFE1070:
 354              		.cantunwind
 355              		.fnend
 357              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 358              		.align	1
 359              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 360              		.thumb
 361              		.thumb_func
 363              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 364              		.fnstart
 365              	.LFB1076:
  51:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  52:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   };
  53:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  54:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  55:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  56:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  57:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  58:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  59:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  60:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  61:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float st_floats;
  62:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float * floats;
  63:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  64:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* st_strings;
  65:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* * strings;
  66:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  67:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamResponse():
  68:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length(0), ints(NULL),
  69:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length(0), floats(NULL),
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length(0), strings(NULL)
  71:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  72:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  73:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  75:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  76:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  82:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  83:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
  84:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
  85:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_intsi;
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  91:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  92:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  98:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  99:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 100:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 101:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_floatsi;
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 107:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 108:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 116:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 119:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 120:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 122:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 124:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 125:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 129:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 132:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 133:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
 134:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 135:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 136:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 137:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 138:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 139:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 140:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 142:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 144:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 148:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 151:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 152:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 153:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 154:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 155:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 156:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 157:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 158:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 161:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 163:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 170:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 172:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 175:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 178:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 180:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 181:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 183:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 184:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 366              		.loc 4 184 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371              	.LVL24:
 372              		.loc 4 184 0
 373 0000 0048     		ldr	r0, .L28
 374              	.LVL25:
 375 0002 7047     		bx	lr
 376              	.L29:
 377              		.align	2
 378              	.L28:
 379 0004 00000000 		.word	.LANCHOR0
 380              		.cfi_endproc
 381              	.LFE1076:
 382              		.cantunwind
 383              		.fnend
 385              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 386              		.align	1
 387              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 388              		.thumb
 389              		.thumb_func
 391              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 392              		.fnstart
 393              	.LFB1077:
 185:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 394              		.loc 4 185 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 399              	.LVL26:
 400              		.loc 4 185 0
 401 0000 0048     		ldr	r0, .L31
 402              	.LVL27:
 403 0002 7047     		bx	lr
 404              	.L32:
 405              		.align	2
 406              	.L31:
 407 0004 BE000000 		.word	.LC8
 408              		.cfi_endproc
 409              	.LFE1077:
 410              		.cantunwind
 411              		.fnend
 413              		.section	.text._ZN8std_msgs19MultiArrayDimension7getTypeEv,"axG",%progbits,_ZN8std_msgs19MultiArra
 414              		.align	1
 415              		.weak	_ZN8std_msgs19MultiArrayDimension7getTypeEv
 416              		.thumb
 417              		.thumb_func
 419              	_ZN8std_msgs19MultiArrayDimension7getTypeEv:
 420              		.fnstart
 421              	.LFB1146:
 422              		.file 5 "./lib/ros_lib/std_msgs/MultiArrayDimension.h"
   1:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #ifndef _ROS_std_msgs_MultiArrayDimension_h
   2:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #define _ROS_std_msgs_MultiArrayDimension_h
   3:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
   4:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
   9:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** {
  11:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  12:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****   class MultiArrayDimension : public ros::Msg
  13:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****   {
  14:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     public:
  15:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       const char* label;
  16:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t size;
  17:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t stride;
  18:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  19:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     MultiArrayDimension():
  20:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       label(""),
  21:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       size(0),
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       stride(0)
  23:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  24:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  25:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     virtual int serialize(unsigned char *outbuffer) const
  27:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  28:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       int offset = 0;
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t length_label = strlen(this->label);
  30:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
  31:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
  32:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, this->label, length_label);
  33:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
  34:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 0) = (this->size >> (8 * 0)) & 0xFF;
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->size >> (8 * 1)) & 0xFF;
  36:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
  37:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->size >> (8 * 3)) & 0xFF;
  38:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
  39:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 0) = (this->stride >> (8 * 0)) & 0xFF;
  40:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->stride >> (8 * 1)) & 0xFF;
  41:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->stride >> (8 * 2)) & 0xFF;
  42:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->stride >> (8 * 3)) & 0xFF;
  43:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
  44:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       return offset;
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  46:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     virtual int deserialize(unsigned char *inbuffer)
  48:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  49:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       int offset = 0;
  50:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t length_label;
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(&length_label, (inbuffer + offset), sizeof(uint32_t));
  52:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       for(unsigned int k= offset; k< offset+length_label; ++k){
  54:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
  55:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       }
  56:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       inbuffer[offset+length_label-1]=0;
  57:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->label = (char *)(inbuffer + offset-1);
  58:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size =  ((uint32_t) (*(inbuffer + offset)));
  60:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  61:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  62:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  63:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
  64:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride =  ((uint32_t) (*(inbuffer + offset)));
  65:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  66:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  67:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  68:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
  69:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****      return offset;
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  71:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  72:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     const char * getType(){ return "std_msgs/MultiArrayDimension"; };
 423              		.loc 5 72 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 428              	.LVL28:
 429              		.loc 5 72 0
 430 0000 0048     		ldr	r0, .L34
 431              	.LVL29:
 432 0002 7047     		bx	lr
 433              	.L35:
 434              		.align	2
 435              	.L34:
 436 0004 DF000000 		.word	.LC9
 437              		.cfi_endproc
 438              	.LFE1146:
 439              		.cantunwind
 440              		.fnend
 442              		.section	.text._ZN8std_msgs19MultiArrayDimension6getMD5Ev,"axG",%progbits,_ZN8std_msgs19MultiArray
 443              		.align	1
 444              		.weak	_ZN8std_msgs19MultiArrayDimension6getMD5Ev
 445              		.thumb
 446              		.thumb_func
 448              	_ZN8std_msgs19MultiArrayDimension6getMD5Ev:
 449              		.fnstart
 450              	.LFB1147:
  73:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     const char * getMD5(){ return "4cd0c83a8683deae40ecdac60e53bfa8"; };
 451              		.loc 5 73 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              		@ link register save eliminated.
 456              	.LVL30:
 457              		.loc 5 73 0
 458 0000 0048     		ldr	r0, .L37
 459              	.LVL31:
 460 0002 7047     		bx	lr
 461              	.L38:
 462              		.align	2
 463              	.L37:
 464 0004 FC000000 		.word	.LC10
 465              		.cfi_endproc
 466              	.LFE1147:
 467              		.cantunwind
 468              		.fnend
 470              		.section	.text._ZNK8std_msgs16MultiArrayLayout9serializeEPh,"axG",%progbits,_ZNK8std_msgs16MultiAr
 471              		.align	1
 472              		.weak	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 473              		.thumb
 474              		.thumb_func
 476              	_ZNK8std_msgs16MultiArrayLayout9serializeEPh:
 477              		.fnstart
 478              	.LFB1151:
 479              		.file 6 "./lib/ros_lib/std_msgs/MultiArrayLayout.h"
   1:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #ifndef _ROS_std_msgs_MultiArrayLayout_h
   2:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #define _ROS_std_msgs_MultiArrayLayout_h
   3:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
   4:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include "std_msgs/MultiArrayDimension.h"
   9:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  10:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** {
  12:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  13:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****   class MultiArrayLayout : public ros::Msg
  14:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****   {
  15:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     public:
  16:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint8_t dim_length;
  17:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       std_msgs::MultiArrayDimension st_dim;
  18:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       std_msgs::MultiArrayDimension * dim;
  19:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint32_t data_offset;
  20:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  21:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     MultiArrayLayout():
  22:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length(0), dim(NULL),
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       data_offset(0)
  24:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  25:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
  26:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  27:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     virtual int serialize(unsigned char *outbuffer) const
 480              		.loc 6 27 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              	.LVL32:
 485 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 486              		.save {r3, r4, r5, r6, r7, lr}
 487              	.LCFI0:
 488              		.cfi_def_cfa_offset 24
 489              		.cfi_offset 3, -24
 490              		.cfi_offset 4, -20
 491              		.cfi_offset 5, -16
 492              		.cfi_offset 6, -12
 493              		.cfi_offset 7, -8
 494              		.cfi_offset 14, -4
 495              		.loc 6 27 0
 496 0002 0D46     		mov	r5, r1
  28:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  29:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = dim_length;
 497              		.loc 6 30 0
 498 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  27:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 499              		.loc 6 27 0
 500 0006 0446     		mov	r4, r0
  31:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 501              		.loc 6 31 0
 502 0008 0020     		movs	r0, #0
 503              	.LVL33:
  30:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 504              		.loc 6 30 0
 505 000a 0B70     		strb	r3, [r1]
 506              	.LVL34:
 507              		.loc 6 31 0
 508 000c 4870     		strb	r0, [r1, #1]
 509              	.LVL35:
  32:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 510              		.loc 6 32 0
 511 000e 8870     		strb	r0, [r1, #2]
 512              	.LVL36:
  33:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 513              		.loc 6 33 0
 514 0010 C870     		strb	r0, [r1, #3]
 515              	.LVL37:
 516 0012 0426     		movs	r6, #4
 517              	.LVL38:
 518              	.L41:
 519              	.LBB206:
  34:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 520              		.loc 6 34 0 discriminator 3
 521 0014 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 522 0016 471C     		adds	r7, r0, #1
 523 0018 C0B2     		uxtb	r0, r0
 524 001a 8342     		cmp	r3, r0
 525 001c 05EB0601 		add	r1, r5, r6
 526 0020 08D9     		bls	.L40
  35:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->dim[i].serialize(outbuffer + offset);
 527              		.loc 6 35 0 discriminator 2
 528 0022 A369     		ldr	r3, [r4, #24]
 529 0024 0001     		lsls	r0, r0, #4
 530              	.LVL39:
 531 0026 1A58     		ldr	r2, [r3, r0]
 532 0028 1844     		add	r0, r0, r3
 533 002a 1268     		ldr	r2, [r2]
 534 002c 9047     		blx	r2
 535              	.LVL40:
 536 002e 0644     		add	r6, r6, r0
 537              	.LVL41:
  34:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 538              		.loc 6 34 0 discriminator 2
 539 0030 3846     		mov	r0, r7
 540 0032 EFE7     		b	.L41
 541              	.LVL42:
 542              	.L40:
 543              	.LBE206:
  36:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
  37:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 0) = (this->data_offset >> (8 * 0)) & 0xFF;
 544              		.loc 6 37 0
 545 0034 E369     		ldr	r3, [r4, #28]
  38:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
  39:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 2) = (this->data_offset >> (8 * 2)) & 0xFF;
  40:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 3) = (this->data_offset >> (8 * 3)) & 0xFF;
  41:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
  42:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       return offset;
  43:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
 546              		.loc 6 43 0
 547 0036 301D     		adds	r0, r6, #4
 548              	.LVL43:
  37:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
 549              		.loc 6 37 0
 550 0038 AB55     		strb	r3, [r5, r6]
  38:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
 551              		.loc 6 38 0
 552 003a E369     		ldr	r3, [r4, #28]
 553 003c 1B0A     		lsrs	r3, r3, #8
 554 003e 4B70     		strb	r3, [r1, #1]
  39:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 3) = (this->data_offset >> (8 * 3)) & 0xFF;
 555              		.loc 6 39 0
 556 0040 E38B     		ldrh	r3, [r4, #30]
 557 0042 8B70     		strb	r3, [r1, #2]
  40:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
 558              		.loc 6 40 0
 559 0044 E37F     		ldrb	r3, [r4, #31]	@ zero_extendqisi2
 560 0046 CB70     		strb	r3, [r1, #3]
 561              	.LVL44:
 562              		.loc 6 43 0
 563 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 564              		.cfi_endproc
 565              	.LFE1151:
 566              		.fnend
 568              		.section	.text._ZN8std_msgs16MultiArrayLayout7getTypeEv,"axG",%progbits,_ZN8std_msgs16MultiArrayLa
 569              		.align	1
 570              		.weak	_ZN8std_msgs16MultiArrayLayout7getTypeEv
 571              		.thumb
 572              		.thumb_func
 574              	_ZN8std_msgs16MultiArrayLayout7getTypeEv:
 575              		.fnstart
 576              	.LFB1153:
  44:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     virtual int deserialize(unsigned char *inbuffer)
  46:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  47:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       int offset = 0;
  48:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint8_t dim_lengthT = *(inbuffer + offset++);
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       if(dim_lengthT > dim_length)
  50:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
  51:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += 3;
  52:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length = dim_lengthT;
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
  56:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset =  ((uint32_t) (*(inbuffer + offset)));
  58:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  59:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  60:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  61:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
  62:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****      return offset;
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
  64:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  65:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     const char * getType(){ return "std_msgs/MultiArrayLayout"; };
 577              		.loc 6 65 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 582              	.LVL45:
 583              		.loc 6 65 0
 584 0000 0048     		ldr	r0, .L44
 585              	.LVL46:
 586 0002 7047     		bx	lr
 587              	.L45:
 588              		.align	2
 589              	.L44:
 590 0004 1D010000 		.word	.LC11
 591              		.cfi_endproc
 592              	.LFE1153:
 593              		.cantunwind
 594              		.fnend
 596              		.section	.text._ZN8std_msgs16MultiArrayLayout6getMD5Ev,"axG",%progbits,_ZN8std_msgs16MultiArrayLay
 597              		.align	1
 598              		.weak	_ZN8std_msgs16MultiArrayLayout6getMD5Ev
 599              		.thumb
 600              		.thumb_func
 602              	_ZN8std_msgs16MultiArrayLayout6getMD5Ev:
 603              		.fnstart
 604              	.LFB1154:
  66:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     const char * getMD5(){ return "0fed2a11c13e11c5571b4e2a995a91a3"; };
 605              		.loc 6 66 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              		@ link register save eliminated.
 610              	.LVL47:
 611              		.loc 6 66 0
 612 0000 0048     		ldr	r0, .L47
 613              	.LVL48:
 614 0002 7047     		bx	lr
 615              	.L48:
 616              		.align	2
 617              	.L47:
 618 0004 37010000 		.word	.LC12
 619              		.cfi_endproc
 620              	.LFE1154:
 621              		.cantunwind
 622              		.fnend
 624              		.section	.text._ZNK8std_msgs17Float32MultiArray9serializeEPh,"axG",%progbits,_ZNK8std_msgs17Float3
 625              		.align	1
 626              		.weak	_ZNK8std_msgs17Float32MultiArray9serializeEPh
 627              		.thumb
 628              		.thumb_func
 630              	_ZNK8std_msgs17Float32MultiArray9serializeEPh:
 631              		.fnstart
 632              	.LFB1158:
 633              		.file 7 "./lib/ros_lib/std_msgs/Float32MultiArray.h"
   1:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #ifndef _ROS_std_msgs_Float32MultiArray_h
   2:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #define _ROS_std_msgs_Float32MultiArray_h
   3:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
   4:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include "std_msgs/MultiArrayLayout.h"
   9:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  10:./lib/ros_lib/std_msgs/Float32MultiArray.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Float32MultiArray.h **** {
  12:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  13:./lib/ros_lib/std_msgs/Float32MultiArray.h ****   class Float32MultiArray : public ros::Msg
  14:./lib/ros_lib/std_msgs/Float32MultiArray.h ****   {
  15:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     public:
  16:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       std_msgs::MultiArrayLayout layout;
  17:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_length;
  18:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       float st_data;
  19:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       float * data;
  20:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  21:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     Float32MultiArray():
  22:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       layout(),
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       data_length(0), data(NULL)
  24:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  25:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
  26:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  27:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     virtual int serialize(unsigned char *outbuffer) const
 634              		.loc 7 27 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              	.LVL49:
 639 0000 70B5     		push	{r4, r5, r6, lr}
 640              		.save {r4, r5, r6, lr}
 641              	.LCFI1:
 642              		.cfi_def_cfa_offset 16
 643              		.cfi_offset 4, -16
 644              		.cfi_offset 5, -12
 645              		.cfi_offset 6, -8
 646              		.cfi_offset 14, -4
 647              		.loc 7 27 0
 648 0002 0446     		mov	r4, r0
  28:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  29:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += this->layout.serialize(outbuffer + offset);
 649              		.loc 7 30 0
 650 0004 0430     		adds	r0, r0, #4
 651              	.LVL50:
  27:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 652              		.loc 7 27 0
 653 0006 0D46     		mov	r5, r1
 654              		.loc 7 30 0
 655 0008 FFF7FEFF 		bl	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 656              	.LVL51:
  31:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = data_length;
 657              		.loc 7 31 0
 658 000c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
  32:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 659              		.loc 7 32 0
 660 0010 0022     		movs	r2, #0
  31:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = data_length;
 661              		.loc 7 31 0
 662 0012 2B54     		strb	r3, [r5, r0]
 663              	.LVL52:
 664              		.loc 7 32 0
 665 0014 2B18     		adds	r3, r5, r0
 666 0016 0430     		adds	r0, r0, #4
 667              	.LVL53:
 668 0018 5A70     		strb	r2, [r3, #1]
 669              	.LVL54:
  33:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 670              		.loc 7 33 0
 671 001a 9A70     		strb	r2, [r3, #2]
  34:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 672              		.loc 7 34 0
 673 001c DA70     		strb	r2, [r3, #3]
 674              	.LVL55:
 675 001e 2B18     		adds	r3, r5, r0
 676              	.LVL56:
 677              	.L51:
 678              	.LBB207:
  35:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
 679              		.loc 7 35 0 discriminator 3
 680 0020 94F82460 		ldrb	r6, [r4, #36]	@ zero_extendqisi2
 681 0024 511C     		adds	r1, r2, #1
 682 0026 D2B2     		uxtb	r2, r2
 683 0028 9642     		cmp	r6, r2
 684 002a A3EB0500 		sub	r0, r3, r5
 685              	.LVL57:
 686 002e 03F10403 		add	r3, r3, #4
 687 0032 0FD9     		bls	.L50
 688              	.LBB208:
  36:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
  37:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         float real;
  38:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         uint32_t base;
  39:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       } u_datai;
  40:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_datai.real = this->data[i];
 689              		.loc 7 40 0 discriminator 2
 690 0034 E06A     		ldr	r0, [r4, #44]
 691              	.LVL58:
  41:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 0) = (u_datai.base >> (8 * 0)) & 0xFF;
 692              		.loc 7 41 0 discriminator 2
 693 0036 50F82220 		ldr	r2, [r0, r2, lsl #2]
  42:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 1) = (u_datai.base >> (8 * 1)) & 0xFF;
 694              		.loc 7 42 0 discriminator 2
 695 003a 100A     		lsrs	r0, r2, #8
  41:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 0) = (u_datai.base >> (8 * 0)) & 0xFF;
 696              		.loc 7 41 0 discriminator 2
 697 003c 03F8042C 		strb	r2, [r3, #-4]
 698              		.loc 7 42 0 discriminator 2
 699 0040 03F8030C 		strb	r0, [r3, #-3]
  43:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 2) = (u_datai.base >> (8 * 2)) & 0xFF;
 700              		.loc 7 43 0 discriminator 2
 701 0044 100C     		lsrs	r0, r2, #16
  44:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 3) = (u_datai.base >> (8 * 3)) & 0xFF;
 702              		.loc 7 44 0 discriminator 2
 703 0046 120E     		lsrs	r2, r2, #24
 704 0048 03F8012C 		strb	r2, [r3, #-1]
 705              	.LVL59:
  43:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 2) = (u_datai.base >> (8 * 2)) & 0xFF;
 706              		.loc 7 43 0 discriminator 2
 707 004c 03F8020C 		strb	r0, [r3, #-2]
 708              	.LBE208:
  35:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 709              		.loc 7 35 0 discriminator 2
 710 0050 0A46     		mov	r2, r1
 711 0052 E5E7     		b	.L51
 712              	.LVL60:
 713              	.L50:
 714              	.LBE207:
  45:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->data[i]);
  46:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
  47:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       return offset;
  48:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
 715              		.loc 7 48 0
 716 0054 70BD     		pop	{r4, r5, r6, pc}
 717              		.cfi_endproc
 718              	.LFE1158:
 719              		.fnend
 721              		.section	.text._ZN8std_msgs17Float32MultiArray7getTypeEv,"axG",%progbits,_ZN8std_msgs17Float32Mult
 722              		.align	1
 723              		.weak	_ZN8std_msgs17Float32MultiArray7getTypeEv
 724              		.thumb
 725              		.thumb_func
 727              	_ZN8std_msgs17Float32MultiArray7getTypeEv:
 728              		.fnstart
 729              	.LFB1160:
  49:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  52:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       int offset = 0;
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += this->layout.deserialize(inbuffer + offset);
  54:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       if(data_lengthT > data_length)
  56:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
  57:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += 3;
  58:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       data_length = data_lengthT;
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
  60:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
  61:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         float real;
  62:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         uint32_t base;
  63:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       } u_st_data;
  64:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base = 0;
  65:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
  66:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  67:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  68:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  69:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       this->st_data = u_st_data.real;
  70:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->st_data);
  71:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         memcpy( &(this->data[i]), &(this->st_data), sizeof(float));
  72:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
  73:./lib/ros_lib/std_msgs/Float32MultiArray.h ****      return offset;
  74:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
  75:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  76:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     const char * getType(){ return "std_msgs/Float32MultiArray"; };
 730              		.loc 7 76 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              		@ link register save eliminated.
 735              	.LVL61:
 736              		.loc 7 76 0
 737 0000 0048     		ldr	r0, .L53
 738              	.LVL62:
 739 0002 7047     		bx	lr
 740              	.L54:
 741              		.align	2
 742              	.L53:
 743 0004 58010000 		.word	.LC13
 744              		.cfi_endproc
 745              	.LFE1160:
 746              		.cantunwind
 747              		.fnend
 749              		.section	.text._ZN8std_msgs17Float32MultiArray6getMD5Ev,"axG",%progbits,_ZN8std_msgs17Float32Multi
 750              		.align	1
 751              		.weak	_ZN8std_msgs17Float32MultiArray6getMD5Ev
 752              		.thumb
 753              		.thumb_func
 755              	_ZN8std_msgs17Float32MultiArray6getMD5Ev:
 756              		.fnstart
 757              	.LFB1161:
  77:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     const char * getMD5(){ return "6a40e0ffa6a17a503ac3f8616991b1f6"; };
 758              		.loc 7 77 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 763              	.LVL63:
 764              		.loc 7 77 0
 765 0000 0048     		ldr	r0, .L56
 766              	.LVL64:
 767 0002 7047     		bx	lr
 768              	.L57:
 769              		.align	2
 770              	.L56:
 771 0004 73010000 		.word	.LC14
 772              		.cfi_endproc
 773              	.LFE1161:
 774              		.cantunwind
 775              		.fnend
 777              		.section	.text._ZNK8std_msgs5UInt89serializeEPh,"axG",%progbits,_ZNK8std_msgs5UInt89serializeEPh,c
 778              		.align	1
 779              		.weak	_ZNK8std_msgs5UInt89serializeEPh
 780              		.thumb
 781              		.thumb_func
 783              	_ZNK8std_msgs5UInt89serializeEPh:
 784              		.fnstart
 785              	.LFB1165:
 786              		.file 8 "./lib/ros_lib/std_msgs/UInt8.h"
   1:./lib/ros_lib/std_msgs/UInt8.h **** #ifndef _ROS_std_msgs_UInt8_h
   2:./lib/ros_lib/std_msgs/UInt8.h **** #define _ROS_std_msgs_UInt8_h
   3:./lib/ros_lib/std_msgs/UInt8.h **** 
   4:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/UInt8.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/UInt8.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/UInt8.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/UInt8.h **** 
   9:./lib/ros_lib/std_msgs/UInt8.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/UInt8.h **** {
  11:./lib/ros_lib/std_msgs/UInt8.h **** 
  12:./lib/ros_lib/std_msgs/UInt8.h ****   class UInt8 : public ros::Msg
  13:./lib/ros_lib/std_msgs/UInt8.h ****   {
  14:./lib/ros_lib/std_msgs/UInt8.h ****     public:
  15:./lib/ros_lib/std_msgs/UInt8.h ****       uint8_t data;
  16:./lib/ros_lib/std_msgs/UInt8.h **** 
  17:./lib/ros_lib/std_msgs/UInt8.h ****     UInt8():
  18:./lib/ros_lib/std_msgs/UInt8.h ****       data(0)
  19:./lib/ros_lib/std_msgs/UInt8.h ****     {
  20:./lib/ros_lib/std_msgs/UInt8.h ****     }
  21:./lib/ros_lib/std_msgs/UInt8.h **** 
  22:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int serialize(unsigned char *outbuffer) const
 787              		.loc 8 22 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791              		@ link register save eliminated.
 792              	.LVL65:
  23:./lib/ros_lib/std_msgs/UInt8.h ****     {
  24:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  25:./lib/ros_lib/std_msgs/UInt8.h ****       *(outbuffer + offset + 0) = (this->data >> (8 * 0)) & 0xFF;
 793              		.loc 8 25 0
 794 0000 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  26:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  27:./lib/ros_lib/std_msgs/UInt8.h ****       return offset;
  28:./lib/ros_lib/std_msgs/UInt8.h ****     }
 795              		.loc 8 28 0
 796 0002 0120     		movs	r0, #1
 797              	.LVL66:
  25:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 798              		.loc 8 25 0
 799 0004 0B70     		strb	r3, [r1]
 800              	.LVL67:
 801              		.loc 8 28 0
 802 0006 7047     		bx	lr
 803              		.cfi_endproc
 804              	.LFE1165:
 805              		.cantunwind
 806              		.fnend
 808              		.section	.text._ZN8std_msgs5UInt811deserializeEPh,"axG",%progbits,_ZN8std_msgs5UInt811deserializeE
 809              		.align	1
 810              		.weak	_ZN8std_msgs5UInt811deserializeEPh
 811              		.thumb
 812              		.thumb_func
 814              	_ZN8std_msgs5UInt811deserializeEPh:
 815              		.fnstart
 816              	.LFB1166:
  29:./lib/ros_lib/std_msgs/UInt8.h **** 
  30:./lib/ros_lib/std_msgs/UInt8.h ****     virtual int deserialize(unsigned char *inbuffer)
 817              		.loc 8 30 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              		@ link register save eliminated.
 822              	.LVL68:
  31:./lib/ros_lib/std_msgs/UInt8.h ****     {
  32:./lib/ros_lib/std_msgs/UInt8.h ****       int offset = 0;
  33:./lib/ros_lib/std_msgs/UInt8.h ****       this->data =  ((uint8_t) (*(inbuffer + offset)));
 823              		.loc 8 33 0
 824 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 825 0002 0371     		strb	r3, [r0, #4]
 826              	.LVL69:
  34:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
  35:./lib/ros_lib/std_msgs/UInt8.h ****      return offset;
  36:./lib/ros_lib/std_msgs/UInt8.h ****     }
 827              		.loc 8 36 0
 828 0004 0120     		movs	r0, #1
 829              	.LVL70:
 830 0006 7047     		bx	lr
 831              		.cfi_endproc
 832              	.LFE1166:
 833              		.cantunwind
 834              		.fnend
 836              		.section	.text._ZN8std_msgs5UInt87getTypeEv,"axG",%progbits,_ZN8std_msgs5UInt87getTypeEv,comdat
 837              		.align	1
 838              		.weak	_ZN8std_msgs5UInt87getTypeEv
 839              		.thumb
 840              		.thumb_func
 842              	_ZN8std_msgs5UInt87getTypeEv:
 843              		.fnstart
 844              	.LFB1167:
  37:./lib/ros_lib/std_msgs/UInt8.h **** 
  38:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getType(){ return "std_msgs/UInt8"; };
 845              		.loc 8 38 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              		@ link register save eliminated.
 850              	.LVL71:
 851              		.loc 8 38 0
 852 0000 0048     		ldr	r0, .L61
 853              	.LVL72:
 854 0002 7047     		bx	lr
 855              	.L62:
 856              		.align	2
 857              	.L61:
 858 0004 94010000 		.word	.LC15
 859              		.cfi_endproc
 860              	.LFE1167:
 861              		.cantunwind
 862              		.fnend
 864              		.section	.text._ZN8std_msgs5UInt86getMD5Ev,"axG",%progbits,_ZN8std_msgs5UInt86getMD5Ev,comdat
 865              		.align	1
 866              		.weak	_ZN8std_msgs5UInt86getMD5Ev
 867              		.thumb
 868              		.thumb_func
 870              	_ZN8std_msgs5UInt86getMD5Ev:
 871              		.fnstart
 872              	.LFB1168:
  39:./lib/ros_lib/std_msgs/UInt8.h ****     const char * getMD5(){ return "7c8164229e7d2c17eb95e9231617fdee"; };
 873              		.loc 8 39 0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 0
 876              		@ frame_needed = 0, uses_anonymous_args = 0
 877              		@ link register save eliminated.
 878              	.LVL73:
 879              		.loc 8 39 0
 880 0000 0048     		ldr	r0, .L64
 881              	.LVL74:
 882 0002 7047     		bx	lr
 883              	.L65:
 884              		.align	2
 885              	.L64:
 886 0004 A3010000 		.word	.LC16
 887              		.cfi_endproc
 888              	.LFE1168:
 889              		.cantunwind
 890              		.fnend
 892              		.section	.text._ZN8std_msgs6Header7getTypeEv,"axG",%progbits,_ZN8std_msgs6Header7getTypeEv,comdat
 893              		.align	1
 894              		.weak	_ZN8std_msgs6Header7getTypeEv
 895              		.thumb
 896              		.thumb_func
 898              	_ZN8std_msgs6Header7getTypeEv:
 899              		.fnstart
 900              	.LFB1174:
 901              		.file 9 "./lib/ros_lib/std_msgs/Header.h"
   1:./lib/ros_lib/std_msgs/Header.h **** #ifndef _ROS_std_msgs_Header_h
   2:./lib/ros_lib/std_msgs/Header.h **** #define _ROS_std_msgs_Header_h
   3:./lib/ros_lib/std_msgs/Header.h **** 
   4:./lib/ros_lib/std_msgs/Header.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Header.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Header.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Header.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Header.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Header.h **** 
  10:./lib/ros_lib/std_msgs/Header.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Header.h **** {
  12:./lib/ros_lib/std_msgs/Header.h **** 
  13:./lib/ros_lib/std_msgs/Header.h ****   class Header : public ros::Msg
  14:./lib/ros_lib/std_msgs/Header.h ****   {
  15:./lib/ros_lib/std_msgs/Header.h ****     public:
  16:./lib/ros_lib/std_msgs/Header.h ****       uint32_t seq;
  17:./lib/ros_lib/std_msgs/Header.h ****       ros::Time stamp;
  18:./lib/ros_lib/std_msgs/Header.h ****       const char* frame_id;
  19:./lib/ros_lib/std_msgs/Header.h **** 
  20:./lib/ros_lib/std_msgs/Header.h ****     Header():
  21:./lib/ros_lib/std_msgs/Header.h ****       seq(0),
  22:./lib/ros_lib/std_msgs/Header.h ****       stamp(),
  23:./lib/ros_lib/std_msgs/Header.h ****       frame_id("")
  24:./lib/ros_lib/std_msgs/Header.h ****     {
  25:./lib/ros_lib/std_msgs/Header.h ****     }
  26:./lib/ros_lib/std_msgs/Header.h **** 
  27:./lib/ros_lib/std_msgs/Header.h ****     virtual int serialize(unsigned char *outbuffer) const
  28:./lib/ros_lib/std_msgs/Header.h ****     {
  29:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->seq >> (8 * 0)) & 0xFF;
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
  33:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
  34:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
  38:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
  39:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
  43:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
  44:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  45:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id = strlen(this->frame_id);
  46:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
  47:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  48:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, this->frame_id, length_frame_id);
  49:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  50:./lib/ros_lib/std_msgs/Header.h ****       return offset;
  51:./lib/ros_lib/std_msgs/Header.h ****     }
  52:./lib/ros_lib/std_msgs/Header.h **** 
  53:./lib/ros_lib/std_msgs/Header.h ****     virtual int deserialize(unsigned char *inbuffer)
  54:./lib/ros_lib/std_msgs/Header.h ****     {
  55:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq =  ((uint32_t) (*(inbuffer + offset)));
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  59:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  60:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  64:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  65:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  69:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  70:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  71:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id;
  72:./lib/ros_lib/std_msgs/Header.h ****       memcpy(&length_frame_id, (inbuffer + offset), sizeof(uint32_t));
  73:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  74:./lib/ros_lib/std_msgs/Header.h ****       for(unsigned int k= offset; k< offset+length_frame_id; ++k){
  75:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
  76:./lib/ros_lib/std_msgs/Header.h ****       }
  77:./lib/ros_lib/std_msgs/Header.h ****       inbuffer[offset+length_frame_id-1]=0;
  78:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
  79:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  80:./lib/ros_lib/std_msgs/Header.h ****      return offset;
  81:./lib/ros_lib/std_msgs/Header.h ****     }
  82:./lib/ros_lib/std_msgs/Header.h **** 
  83:./lib/ros_lib/std_msgs/Header.h ****     const char * getType(){ return "std_msgs/Header"; };
 902              		.loc 9 83 0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906              		@ link register save eliminated.
 907              	.LVL75:
 908              		.loc 9 83 0
 909 0000 0048     		ldr	r0, .L67
 910              	.LVL76:
 911 0002 7047     		bx	lr
 912              	.L68:
 913              		.align	2
 914              	.L67:
 915 0004 C4010000 		.word	.LC17
 916              		.cfi_endproc
 917              	.LFE1174:
 918              		.cantunwind
 919              		.fnend
 921              		.section	.text._ZN8std_msgs6Header6getMD5Ev,"axG",%progbits,_ZN8std_msgs6Header6getMD5Ev,comdat
 922              		.align	1
 923              		.weak	_ZN8std_msgs6Header6getMD5Ev
 924              		.thumb
 925              		.thumb_func
 927              	_ZN8std_msgs6Header6getMD5Ev:
 928              		.fnstart
 929              	.LFB1175:
  84:./lib/ros_lib/std_msgs/Header.h ****     const char * getMD5(){ return "2176decaecbce78abc3b96ef049fabed"; };
 930              		.loc 9 84 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              		@ link register save eliminated.
 935              	.LVL77:
 936              		.loc 9 84 0
 937 0000 0048     		ldr	r0, .L70
 938              	.LVL78:
 939 0002 7047     		bx	lr
 940              	.L71:
 941              		.align	2
 942              	.L70:
 943 0004 D4010000 		.word	.LC18
 944              		.cfi_endproc
 945              	.LFE1175:
 946              		.cantunwind
 947              		.fnend
 949              		.section	.text._ZN12roberto_msgs10MotorState7getTypeEv,"axG",%progbits,_ZN12roberto_msgs10MotorSta
 950              		.align	1
 951              		.weak	_ZN12roberto_msgs10MotorState7getTypeEv
 952              		.thumb
 953              		.thumb_func
 955              	_ZN12roberto_msgs10MotorState7getTypeEv:
 956              		.fnstart
 957              	.LFB1244:
 958              		.file 10 "./lib/ros_lib/roberto_msgs/MotorState.h"
   1:./lib/ros_lib/roberto_msgs/MotorState.h **** #ifndef _ROS_roberto_msgs_MotorState_h
   2:./lib/ros_lib/roberto_msgs/MotorState.h **** #define _ROS_roberto_msgs_MotorState_h
   3:./lib/ros_lib/roberto_msgs/MotorState.h **** 
   4:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdint.h>
   5:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <string.h>
   6:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdlib.h>
   7:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "ros/msg.h"
   8:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "std_msgs/Header.h"
   9:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  10:./lib/ros_lib/roberto_msgs/MotorState.h **** namespace roberto_msgs
  11:./lib/ros_lib/roberto_msgs/MotorState.h **** {
  12:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  13:./lib/ros_lib/roberto_msgs/MotorState.h ****   class MotorState : public ros::Msg
  14:./lib/ros_lib/roberto_msgs/MotorState.h ****   {
  15:./lib/ros_lib/roberto_msgs/MotorState.h ****     public:
  16:./lib/ros_lib/roberto_msgs/MotorState.h ****       std_msgs::Header header;
  17:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_angle;
  18:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_velocity;
  19:./lib/ros_lib/roberto_msgs/MotorState.h ****       float speed;
  20:./lib/ros_lib/roberto_msgs/MotorState.h ****       float acceleration;
  21:./lib/ros_lib/roberto_msgs/MotorState.h ****       uint8_t mode;
  22:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_AUTO = 0 };
  23:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_PIVOT = 1 };
  24:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SPIN = 2 };
  25:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SIDEWAYS = 3 };
  26:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  27:./lib/ros_lib/roberto_msgs/MotorState.h ****     MotorState():
  28:./lib/ros_lib/roberto_msgs/MotorState.h ****       header(),
  29:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_angle(0),
  30:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_velocity(0),
  31:./lib/ros_lib/roberto_msgs/MotorState.h ****       speed(0),
  32:./lib/ros_lib/roberto_msgs/MotorState.h ****       acceleration(0),
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****       mode(0)
  34:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  35:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  36:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int serialize(unsigned char *outbuffer) const
  38:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  39:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.serialize(outbuffer + offset);
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
  46:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  47:./lib/ros_lib/roberto_msgs/MotorState.h ****       return offset;
  48:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  49:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  52:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.deserialize(inbuffer + offset);
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
  59:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  60:./lib/ros_lib/roberto_msgs/MotorState.h ****      return offset;
  61:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  62:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  63:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getType(){ return "roberto_msgs/MotorState"; };
 959              		.loc 10 63 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 0, uses_anonymous_args = 0
 963              		@ link register save eliminated.
 964              	.LVL79:
 965              		.loc 10 63 0
 966 0000 0048     		ldr	r0, .L73
 967              	.LVL80:
 968 0002 7047     		bx	lr
 969              	.L74:
 970              		.align	2
 971              	.L73:
 972 0004 F5010000 		.word	.LC19
 973              		.cfi_endproc
 974              	.LFE1244:
 975              		.cantunwind
 976              		.fnend
 978              		.section	.text._ZN12roberto_msgs10MotorState6getMD5Ev,"axG",%progbits,_ZN12roberto_msgs10MotorStat
 979              		.align	1
 980              		.weak	_ZN12roberto_msgs10MotorState6getMD5Ev
 981              		.thumb
 982              		.thumb_func
 984              	_ZN12roberto_msgs10MotorState6getMD5Ev:
 985              		.fnstart
 986              	.LFB1245:
  64:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getMD5(){ return "e8b5d1162b85151c49e02b8224796c0e"; };
 987              		.loc 10 64 0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
 991              		@ link register save eliminated.
 992              	.LVL81:
 993              		.loc 10 64 0
 994 0000 0048     		ldr	r0, .L76
 995              	.LVL82:
 996 0002 7047     		bx	lr
 997              	.L77:
 998              		.align	2
 999              	.L76:
 1000 0004 0D020000 		.word	.LC20
 1001              		.cfi_endproc
 1002              	.LFE1245:
 1003              		.cantunwind
 1004              		.fnend
 1006              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv,"axG",%pr
 1007              		.align	1
 1008              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
 1009              		.thumb
 1010              		.thumb_func
 1012              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:
 1013              		.fnstart
 1014              	.LFB1317:
 1015              		.file 11 "./lib/ros_lib/ros/node_handle.h"
   1:./lib/ros_lib/ros/node_handle.h **** /*
   2:./lib/ros_lib/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/node_handle.h ****  *
   4:./lib/ros_lib/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/node_handle.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/node_handle.h ****  *
   7:./lib/ros_lib/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/node_handle.h ****  * are met:
  10:./lib/ros_lib/ros/node_handle.h ****  *
  11:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/node_handle.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/node_handle.h ****  *
  21:./lib/ros_lib/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/node_handle.h ****  */
  34:./lib/ros_lib/ros/node_handle.h **** 
  35:./lib/ros_lib/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:./lib/ros_lib/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:./lib/ros_lib/ros/node_handle.h **** 
  38:./lib/ros_lib/ros/node_handle.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/node_handle.h **** 
  40:./lib/ros_lib/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:./lib/ros_lib/ros/node_handle.h **** 
  45:./lib/ros_lib/ros/node_handle.h **** #define SYNC_SECONDS        5
  46:./lib/ros_lib/ros/node_handle.h **** 
  47:./lib/ros_lib/ros/node_handle.h **** #define MODE_FIRST_FF       0
  48:./lib/ros_lib/ros/node_handle.h **** /*
  49:./lib/ros_lib/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  50:./lib/ros_lib/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  51:./lib/ros_lib/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  52:./lib/ros_lib/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  53:./lib/ros_lib/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  54:./lib/ros_lib/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  55:./lib/ros_lib/ros/node_handle.h ****  */
  56:./lib/ros_lib/ros/node_handle.h **** #define MODE_PROTOCOL_VER   1
  57:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER1		0xff // through groovy
  58:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER2		0xfe // in hydro
  59:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER 		PROTOCOL_VER2
  60:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_L         2
  61:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_H         3
  62:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_CHECKSUM  4   // checksum for msg size received from size L and H
  63:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_L        5   // waiting for topic id
  64:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_H        6
  65:./lib/ros_lib/ros/node_handle.h **** #define MODE_MESSAGE        7
  66:./lib/ros_lib/ros/node_handle.h **** #define MODE_MSG_CHECKSUM   8   // checksum for msg and topic id
  67:./lib/ros_lib/ros/node_handle.h **** 
  68:./lib/ros_lib/ros/node_handle.h **** 
  69:./lib/ros_lib/ros/node_handle.h **** #define MSG_TIMEOUT 20  //20 milliseconds to recieve all of message data
  70:./lib/ros_lib/ros/node_handle.h **** 
  71:./lib/ros_lib/ros/node_handle.h **** #include "msg.h"
  72:./lib/ros_lib/ros/node_handle.h **** 
  73:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  74:./lib/ros_lib/ros/node_handle.h **** 
  75:./lib/ros_lib/ros/node_handle.h ****   class NodeHandleBase_{
  76:./lib/ros_lib/ros/node_handle.h ****     public:
  77:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg* msg)=0;
  78:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce()=0;
  79:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected()=0;
  80:./lib/ros_lib/ros/node_handle.h ****     };
  81:./lib/ros_lib/ros/node_handle.h **** }
  82:./lib/ros_lib/ros/node_handle.h **** 
  83:./lib/ros_lib/ros/node_handle.h **** #include "publisher.h"
  84:./lib/ros_lib/ros/node_handle.h **** #include "subscriber.h"
  85:./lib/ros_lib/ros/node_handle.h **** #include "service_server.h"
  86:./lib/ros_lib/ros/node_handle.h **** #include "service_client.h"
  87:./lib/ros_lib/ros/node_handle.h **** 
  88:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  89:./lib/ros_lib/ros/node_handle.h **** 
  90:./lib/ros_lib/ros/node_handle.h ****   using rosserial_msgs::TopicInfo;
  91:./lib/ros_lib/ros/node_handle.h **** 
  92:./lib/ros_lib/ros/node_handle.h ****   /* Node Handle */
  93:./lib/ros_lib/ros/node_handle.h ****   template<class Hardware,
  94:./lib/ros_lib/ros/node_handle.h ****            int MAX_SUBSCRIBERS=25,
  95:./lib/ros_lib/ros/node_handle.h ****            int MAX_PUBLISHERS=25,
  96:./lib/ros_lib/ros/node_handle.h ****            int INPUT_SIZE=512,
  97:./lib/ros_lib/ros/node_handle.h ****            int OUTPUT_SIZE=512>
  98:./lib/ros_lib/ros/node_handle.h ****   class NodeHandle_ : public NodeHandleBase_
  99:./lib/ros_lib/ros/node_handle.h ****   {
 100:./lib/ros_lib/ros/node_handle.h ****     protected:
 101:./lib/ros_lib/ros/node_handle.h ****       Hardware hardware_;
 102:./lib/ros_lib/ros/node_handle.h **** 
 103:./lib/ros_lib/ros/node_handle.h ****       /* time used for syncing */
 104:./lib/ros_lib/ros/node_handle.h ****       uint32_t rt_time;
 105:./lib/ros_lib/ros/node_handle.h **** 
 106:./lib/ros_lib/ros/node_handle.h ****       /* used for computing current time */
 107:./lib/ros_lib/ros/node_handle.h ****       uint32_t sec_offset, nsec_offset;
 108:./lib/ros_lib/ros/node_handle.h **** 
 109:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_in[INPUT_SIZE];
 110:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_out[OUTPUT_SIZE];
 111:./lib/ros_lib/ros/node_handle.h **** 
 112:./lib/ros_lib/ros/node_handle.h ****       Publisher * publishers[MAX_PUBLISHERS];
 113:./lib/ros_lib/ros/node_handle.h ****       Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 114:./lib/ros_lib/ros/node_handle.h **** 
 115:./lib/ros_lib/ros/node_handle.h ****       /*
 116:./lib/ros_lib/ros/node_handle.h ****        * Setup Functions
 117:./lib/ros_lib/ros/node_handle.h ****        */
 118:./lib/ros_lib/ros/node_handle.h ****     public:
 119:./lib/ros_lib/ros/node_handle.h ****       NodeHandle_() : configured_(false) {
 120:./lib/ros_lib/ros/node_handle.h **** 
 121:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_PUBLISHERS; i++)
 122:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 123:./lib/ros_lib/ros/node_handle.h **** 
 124:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_SUBSCRIBERS; i++)
 125:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 126:./lib/ros_lib/ros/node_handle.h **** 
 127:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< INPUT_SIZE; i++)
 128:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 129:./lib/ros_lib/ros/node_handle.h **** 
 130:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< OUTPUT_SIZE; i++)
 131:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 132:./lib/ros_lib/ros/node_handle.h **** 
 133:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 134:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 135:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats_length = 0;
 136:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats = NULL;
 137:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 138:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 139:./lib/ros_lib/ros/node_handle.h ****       }
 140:./lib/ros_lib/ros/node_handle.h **** 
 141:./lib/ros_lib/ros/node_handle.h ****       Hardware* getHardware(){
 142:./lib/ros_lib/ros/node_handle.h ****         return &hardware_;
 143:./lib/ros_lib/ros/node_handle.h ****       }
 144:./lib/ros_lib/ros/node_handle.h **** 
 145:./lib/ros_lib/ros/node_handle.h ****       /* Start serial, initialize buffers */
 146:./lib/ros_lib/ros/node_handle.h ****       void initNode(){
 147:./lib/ros_lib/ros/node_handle.h ****         hardware_.init();
 148:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 149:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 150:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 151:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 152:./lib/ros_lib/ros/node_handle.h ****       };
 153:./lib/ros_lib/ros/node_handle.h **** 
 154:./lib/ros_lib/ros/node_handle.h ****       /* Start a named port, which may be network server IP, initialize buffers */
 155:./lib/ros_lib/ros/node_handle.h ****       void initNode(char *portName){
 156:./lib/ros_lib/ros/node_handle.h ****         hardware_.init(portName);
 157:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 158:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 159:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 160:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 161:./lib/ros_lib/ros/node_handle.h ****       };
 162:./lib/ros_lib/ros/node_handle.h **** 
 163:./lib/ros_lib/ros/node_handle.h ****     protected:
 164:./lib/ros_lib/ros/node_handle.h ****       //State machine variables for spinOnce
 165:./lib/ros_lib/ros/node_handle.h ****       int mode_;
 166:./lib/ros_lib/ros/node_handle.h ****       int bytes_;
 167:./lib/ros_lib/ros/node_handle.h ****       int topic_;
 168:./lib/ros_lib/ros/node_handle.h ****       int index_;
 169:./lib/ros_lib/ros/node_handle.h ****       int checksum_;
 170:./lib/ros_lib/ros/node_handle.h **** 
 171:./lib/ros_lib/ros/node_handle.h ****       bool configured_;
 172:./lib/ros_lib/ros/node_handle.h **** 
 173:./lib/ros_lib/ros/node_handle.h ****       /* used for syncing the time */
 174:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_time;
 175:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_receive_time;
 176:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_msg_timeout_time;
 177:./lib/ros_lib/ros/node_handle.h **** 
 178:./lib/ros_lib/ros/node_handle.h ****     public:
 179:./lib/ros_lib/ros/node_handle.h ****       /* This function goes in your loop() function, it handles
 180:./lib/ros_lib/ros/node_handle.h ****        *  serial input and callbacks for subscribers.
 181:./lib/ros_lib/ros/node_handle.h ****        */
 182:./lib/ros_lib/ros/node_handle.h **** 
 183:./lib/ros_lib/ros/node_handle.h **** 
 184:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce(){
 185:./lib/ros_lib/ros/node_handle.h **** 
 186:./lib/ros_lib/ros/node_handle.h ****         /* restart if timed out */
 187:./lib/ros_lib/ros/node_handle.h ****         uint32_t c_time = hardware_.time();
 188:./lib/ros_lib/ros/node_handle.h ****         if( (c_time - last_sync_receive_time) > (SYNC_SECONDS*2200) ){
 189:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 190:./lib/ros_lib/ros/node_handle.h ****          }
 191:./lib/ros_lib/ros/node_handle.h **** 
 192:./lib/ros_lib/ros/node_handle.h ****         /* reset if message has timed out */
 193:./lib/ros_lib/ros/node_handle.h ****         if ( mode_ != MODE_FIRST_FF){
 194:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 195:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 196:./lib/ros_lib/ros/node_handle.h ****           }
 197:./lib/ros_lib/ros/node_handle.h ****         }
 198:./lib/ros_lib/ros/node_handle.h ****         /* while available buffer, read data */
 199:./lib/ros_lib/ros/node_handle.h ****         while( true )
 200:./lib/ros_lib/ros/node_handle.h ****         {
 201:./lib/ros_lib/ros/node_handle.h ****           int data = hardware_.read();
 202:./lib/ros_lib/ros/node_handle.h ****           if( data < 0 )
 203:./lib/ros_lib/ros/node_handle.h ****             break;
 204:./lib/ros_lib/ros/node_handle.h ****           checksum_ += data;
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 207:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 208:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 209:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 210:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 211:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 212:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 213:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 214:./lib/ros_lib/ros/node_handle.h ****             }
 215:./lib/ros_lib/ros/node_handle.h ****             else if( hardware_.time() - c_time > (SYNC_SECONDS)){
 216:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 217:./lib/ros_lib/ros/node_handle.h ****               configured_=false;
 218:./lib/ros_lib/ros/node_handle.h ****               return -2;
 219:./lib/ros_lib/ros/node_handle.h ****             }
 220:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_PROTOCOL_VER ){
 221:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 222:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 223:./lib/ros_lib/ros/node_handle.h ****             }else{
 224:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_FIRST_FF;
 225:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 227:./lib/ros_lib/ros/node_handle.h ****             }
 228:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_SIZE_L ){   /* bottom half of message size */
 229:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 230:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 231:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 232:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 233:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_H ){   /* top half of message size */
 234:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 235:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 236:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 237:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 238:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 239:./lib/ros_lib/ros/node_handle.h **** 	    else
 240:./lib/ros_lib/ros/node_handle.h **** 	      mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 241:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 242:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 243:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 244:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 245:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 246:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 247:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 248:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 249:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 250:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_MSG_CHECKSUM ){ /* do checksum */
 251:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 254:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 255:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 258:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 259:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 260:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 261:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 262:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 263:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 264:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 265:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 266:./lib/ros_lib/ros/node_handle.h ****               }else{
 267:./lib/ros_lib/ros/node_handle.h ****                 if(subscribers[topic_-100])
 268:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 269:./lib/ros_lib/ros/node_handle.h ****               }
 270:./lib/ros_lib/ros/node_handle.h ****             }
 271:./lib/ros_lib/ros/node_handle.h ****           }
 272:./lib/ros_lib/ros/node_handle.h ****         }
 273:./lib/ros_lib/ros/node_handle.h **** 
 274:./lib/ros_lib/ros/node_handle.h ****         /* occasionally sync time */
 275:./lib/ros_lib/ros/node_handle.h ****         if( configured_ && ((c_time-last_sync_time) > (SYNC_SECONDS*500) )){
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 277:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 278:./lib/ros_lib/ros/node_handle.h ****         }
 279:./lib/ros_lib/ros/node_handle.h **** 
 280:./lib/ros_lib/ros/node_handle.h ****         return 0;
 281:./lib/ros_lib/ros/node_handle.h ****       }
 282:./lib/ros_lib/ros/node_handle.h **** 
 283:./lib/ros_lib/ros/node_handle.h **** 
 284:./lib/ros_lib/ros/node_handle.h ****       /* Are we connected to the PC? */
 285:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected() {
 1016              		.loc 11 285 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              		@ link register save eliminated.
 1021              	.LVL83:
 286:./lib/ros_lib/ros/node_handle.h ****         return configured_;
 287:./lib/ros_lib/ros/node_handle.h ****       };
 1022              		.loc 11 287 0
 1023 0000 90F8F404 		ldrb	r0, [r0, #1268]	@ zero_extendqisi2
 1024              	.LVL84:
 1025 0004 7047     		bx	lr
 1026              		.cfi_endproc
 1027              	.LFE1317:
 1028              		.cantunwind
 1029              		.fnend
 1031              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh,"axG",%progbits,_ZN3ros10Subscri
 1032              		.align	1
 1033              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 1034              		.thumb
 1035              		.thumb_func
 1037              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:
 1038              		.fnstart
 1039              	.LFB1331:
 1040              		.file 12 "./lib/ros_lib/ros/subscriber.h"
   1:./lib/ros_lib/ros/subscriber.h **** /* 
   2:./lib/ros_lib/ros/subscriber.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/subscriber.h ****  *
   4:./lib/ros_lib/ros/subscriber.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/subscriber.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/subscriber.h ****  *
   7:./lib/ros_lib/ros/subscriber.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/subscriber.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/subscriber.h ****  * are met:
  10:./lib/ros_lib/ros/subscriber.h ****  *
  11:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/subscriber.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/subscriber.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/subscriber.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/subscriber.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/subscriber.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/subscriber.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/subscriber.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/subscriber.h ****  *
  21:./lib/ros_lib/ros/subscriber.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/subscriber.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/subscriber.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/subscriber.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/subscriber.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/subscriber.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/subscriber.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/subscriber.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/subscriber.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/subscriber.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/subscriber.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/subscriber.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/subscriber.h ****  */
  34:./lib/ros_lib/ros/subscriber.h **** 
  35:./lib/ros_lib/ros/subscriber.h **** #ifndef ROS_SUBSCRIBER_H_
  36:./lib/ros_lib/ros/subscriber.h **** #define ROS_SUBSCRIBER_H_
  37:./lib/ros_lib/ros/subscriber.h **** 
  38:./lib/ros_lib/ros/subscriber.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/subscriber.h **** 
  40:./lib/ros_lib/ros/subscriber.h **** namespace ros {
  41:./lib/ros_lib/ros/subscriber.h **** 
  42:./lib/ros_lib/ros/subscriber.h ****   /* Base class for objects subscribers. */
  43:./lib/ros_lib/ros/subscriber.h ****   class Subscriber_
  44:./lib/ros_lib/ros/subscriber.h ****   {
  45:./lib/ros_lib/ros/subscriber.h ****     public:
  46:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char *data)=0;
  47:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType()=0;
  48:./lib/ros_lib/ros/subscriber.h **** 
  49:./lib/ros_lib/ros/subscriber.h ****       // id_ is set by NodeHandle when we advertise 
  50:./lib/ros_lib/ros/subscriber.h ****       int id_;
  51:./lib/ros_lib/ros/subscriber.h **** 
  52:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType()=0;
  53:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5()=0;
  54:./lib/ros_lib/ros/subscriber.h ****       const char * topic_;
  55:./lib/ros_lib/ros/subscriber.h ****   };
  56:./lib/ros_lib/ros/subscriber.h **** 
  57:./lib/ros_lib/ros/subscriber.h **** 
  58:./lib/ros_lib/ros/subscriber.h ****   /* Actual subscriber, templated on message type. */
  59:./lib/ros_lib/ros/subscriber.h ****   template<typename MsgT>
  60:./lib/ros_lib/ros/subscriber.h ****   class Subscriber: public Subscriber_{
  61:./lib/ros_lib/ros/subscriber.h ****     public:
  62:./lib/ros_lib/ros/subscriber.h ****       typedef void(*CallbackT)(const MsgT&);
  63:./lib/ros_lib/ros/subscriber.h ****       MsgT msg;
  64:./lib/ros_lib/ros/subscriber.h **** 
  65:./lib/ros_lib/ros/subscriber.h ****       Subscriber(const char * topic_name, CallbackT cb, int endpoint=rosserial_msgs::TopicInfo::ID_
  66:./lib/ros_lib/ros/subscriber.h ****         cb_(cb),
  67:./lib/ros_lib/ros/subscriber.h ****         endpoint_(endpoint)
  68:./lib/ros_lib/ros/subscriber.h ****       {
  69:./lib/ros_lib/ros/subscriber.h ****         topic_ = topic_name;
  70:./lib/ros_lib/ros/subscriber.h ****       };
  71:./lib/ros_lib/ros/subscriber.h **** 
  72:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char* data){
 1041              		.loc 12 72 0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 1045              		@ link register save eliminated.
 1046              	.LVL85:
 1047              	.LBB209:
 1048              	.LBB210:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 1049              		.loc 8 33 0
 1050 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1051              	.LBE210:
 1052              	.LBE209:
  73:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
  74:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 1053              		.loc 12 74 0
 1054 0002 0C30     		adds	r0, r0, #12
 1055              	.LVL86:
 1056              	.LBB212:
 1057              	.LBB211:
  33:./lib/ros_lib/std_msgs/UInt8.h ****       offset += sizeof(this->data);
 1058              		.loc 8 33 0
 1059 0004 0371     		strb	r3, [r0, #4]
 1060              	.LVL87:
 1061              	.LBE211:
 1062              	.LBE212:
 1063              		.loc 12 74 0
 1064 0006 8368     		ldr	r3, [r0, #8]
 1065 0008 1847     		bx	r3	@ indirect register sibling call
 1066              	.LVL88:
 1067              		.cfi_endproc
 1068              	.LFE1331:
 1069              		.cantunwind
 1070              		.fnend
 1072              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv,"axG",%progbits,_ZN3ros10
 1073              		.align	1
 1074              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 1075              		.thumb
 1076              		.thumb_func
 1078              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:
 1079              		.fnstart
 1080              	.LFB1332:
  75:./lib/ros_lib/ros/subscriber.h ****       }
  76:./lib/ros_lib/ros/subscriber.h **** 
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType(){ return this->msg.getType(); }
  78:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
  79:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1081              		.loc 12 79 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 0
 1084              		@ frame_needed = 0, uses_anonymous_args = 0
 1085              		@ link register save eliminated.
 1086              	.LVL89:
 1087              		.loc 12 79 0
 1088 0000 8069     		ldr	r0, [r0, #24]
 1089              	.LVL90:
 1090 0002 7047     		bx	lr
 1091              		.cfi_endproc
 1092              	.LFE1332:
 1093              		.cantunwind
 1094              		.fnend
 1096              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv,"axG",%progbits,_ZN3ros10Subsc
 1097              		.align	1
 1098              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 1099              		.thumb
 1100              		.thumb_func
 1102              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:
 1103              		.fnstart
 1104              	.LFB1333:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1105              		.loc 12 77 0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 0
 1108              		@ frame_needed = 0, uses_anonymous_args = 0
 1109              		@ link register save eliminated.
 1110              	.LVL91:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1111              		.loc 12 77 0
 1112 0000 0048     		ldr	r0, .L82
 1113              	.LVL92:
 1114 0002 7047     		bx	lr
 1115              	.L83:
 1116              		.align	2
 1117              	.L82:
 1118 0004 94010000 		.word	.LC15
 1119              		.cfi_endproc
 1120              	.LFE1333:
 1121              		.cantunwind
 1122              		.fnend
 1124              		.section	.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev,"axG",%progbits,_ZN3ros10Subscri
 1125              		.align	1
 1126              		.weak	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 1127              		.thumb
 1128              		.thumb_func
 1130              	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:
 1131              		.fnstart
 1132              	.LFB1334:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1133              		.loc 12 78 0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 1137              		@ link register save eliminated.
 1138              	.LVL93:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1139              		.loc 12 78 0
 1140 0000 0048     		ldr	r0, .L85
 1141              	.LVL94:
 1142 0002 7047     		bx	lr
 1143              	.L86:
 1144              		.align	2
 1145              	.L85:
 1146 0004 A3010000 		.word	.LC16
 1147              		.cfi_endproc
 1148              	.LFE1334:
 1149              		.cantunwind
 1150              		.fnend
 1152              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv,"axG",%progbit
 1153              		.align	1
 1154              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 1155              		.thumb
 1156              		.thumb_func
 1158              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:
 1159              		.fnstart
 1160              	.LFB1336:
 1161              		.loc 12 79 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 0, uses_anonymous_args = 0
 1165              		@ link register save eliminated.
 1166              	.LVL95:
 1167              		.loc 12 79 0
 1168 0000 C06B     		ldr	r0, [r0, #60]
 1169              	.LVL96:
 1170 0002 7047     		bx	lr
 1171              		.cfi_endproc
 1172              	.LFE1336:
 1173              		.cantunwind
 1174              		.fnend
 1176              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv,"axG",%progbits,_ZN
 1177              		.align	1
 1178              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 1179              		.thumb
 1180              		.thumb_func
 1182              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:
 1183              		.fnstart
 1184              	.LFB1337:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1185              		.loc 12 77 0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 0
 1188              		@ frame_needed = 0, uses_anonymous_args = 0
 1189              		@ link register save eliminated.
 1190              	.LVL97:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1191              		.loc 12 77 0
 1192 0000 0048     		ldr	r0, .L89
 1193              	.LVL98:
 1194 0002 7047     		bx	lr
 1195              	.L90:
 1196              		.align	2
 1197              	.L89:
 1198 0004 F5010000 		.word	.LC19
 1199              		.cfi_endproc
 1200              	.LFE1337:
 1201              		.cantunwind
 1202              		.fnend
 1204              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev,"axG",%progbits,_ZN3r
 1205              		.align	1
 1206              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 1207              		.thumb
 1208              		.thumb_func
 1210              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:
 1211              		.fnstart
 1212              	.LFB1338:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1213              		.loc 12 78 0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217              		@ link register save eliminated.
 1218              	.LVL99:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1219              		.loc 12 78 0
 1220 0000 0048     		ldr	r0, .L92
 1221              	.LVL100:
 1222 0002 7047     		bx	lr
 1223              	.L93:
 1224              		.align	2
 1225              	.L92:
 1226 0004 0D020000 		.word	.LC20
 1227              		.cfi_endproc
 1228              	.LFE1338:
 1229              		.cantunwind
 1230              		.fnend
 1232              		.text
 1233              		.align	1
 1234              		.global	_Z6led_cbRKN8std_msgs5UInt8E
 1235              		.thumb
 1236              		.thumb_func
 1238              	_Z6led_cbRKN8std_msgs5UInt8E:
 1239              		.fnstart
 1240              	.LFB1279:
 1241              		.file 13 "src/main.cpp"
   1:src/main.cpp  **** #include <stm32f10x.h>
   2:src/main.cpp  **** 
   3:src/main.cpp  **** #include <stdio.h>
   4:src/main.cpp  **** #include <math.h>
   5:src/main.cpp  **** 
   6:src/main.cpp  **** #include "motor.h"
   7:src/main.cpp  **** #include "motorSettings.h"
   8:src/main.cpp  **** #include "led.h"
   9:src/main.cpp  **** #include "encoder.h"
  10:src/main.cpp  **** #include "stm32_time.h"
  11:src/main.cpp  **** 
  12:src/main.cpp  **** 
  13:src/main.cpp  **** #include <ros.h>
  14:src/main.cpp  **** #include <std_msgs/MultiArrayDimension.h>
  15:src/main.cpp  **** #include <std_msgs/Float32MultiArray.h>
  16:src/main.cpp  **** #include <std_msgs/UInt8.h>
  17:src/main.cpp  **** #include <nav_msgs/Odometry.h>
  18:src/main.cpp  **** #include <sensor_msgs/Joy.h>
  19:src/main.cpp  **** #include <roberto_msgs/MotorState.h>
  20:src/main.cpp  **** #include <tf/tf.h>
  21:src/main.cpp  **** #include <tf/transform_broadcaster.h>
  22:src/main.cpp  **** #include <ros/time.h>
  23:src/main.cpp  **** 
  24:src/main.cpp  **** #define CMDMSGTIMEOUT 500 // ms
  25:src/main.cpp  **** //#define DEBUG
  26:src/main.cpp  **** 
  27:src/main.cpp  **** /* Private function prototypes -----------------------------------------------*/
  28:src/main.cpp  **** #ifdef DEBUG
  29:src/main.cpp  **** extern "C"{
  30:src/main.cpp  ****   extern void initialise_monitor_handles(void);
  31:src/main.cpp  **** }
  32:src/main.cpp  **** #else
  33:src/main.cpp  **** #define printf(...) 
  34:src/main.cpp  **** #endif
  35:src/main.cpp  **** 
  36:src/main.cpp  **** 
  37:src/main.cpp  **** 
  38:src/main.cpp  **** motor *servo_left;
  39:src/main.cpp  **** motor *servo_right;
  40:src/main.cpp  **** motor *front_right;
  41:src/main.cpp  **** motor *front_left;
  42:src/main.cpp  **** motor *rear_right;
  43:src/main.cpp  **** motor *rear_left;
  44:src/main.cpp  **** 
  45:src/main.cpp  **** float d, L;
  46:src/main.cpp  **** 
  47:src/main.cpp  **** float motorCmd[4];
  48:src/main.cpp  **** uint8_t currentMode;
  49:src/main.cpp  **** uint32_t lastMsg;
  50:src/main.cpp  **** bool initialized = false;
  51:src/main.cpp  **** 
  52:src/main.cpp  **** ros::NodeHandle nh;
  53:src/main.cpp  **** 
  54:src/main.cpp  **** __IO bool shuttingDown = false;
  55:src/main.cpp  **** __IO bool waitForServos = false;
  56:src/main.cpp  **** 
  57:src/main.cpp  **** void led_cb( const std_msgs::UInt8& cmd_msg){
 1242              		.loc 13 57 0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 0
 1245              		@ frame_needed = 0, uses_anonymous_args = 0
 1246              		@ link register save eliminated.
 1247              	.LVL101:
  58:src/main.cpp  ****   if(!initialized)
 1248              		.loc 13 58 0
 1249 0000 034B     		ldr	r3, .L96
 1250 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1251 0004 13B1     		cbz	r3, .L94
  59:src/main.cpp  ****     return;
  60:src/main.cpp  ****   led_set(cmd_msg.data);
 1252              		.loc 13 60 0
 1253 0006 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 1254              	.LVL102:
 1255 0008 FFF7FEBF 		b	led_set
 1256              	.LVL103:
 1257              	.L94:
 1258 000c 7047     		bx	lr
 1259              	.L97:
 1260 000e 00BF     		.align	2
 1261              	.L96:
 1262 0010 00000000 		.word	.LANCHOR1
 1263              		.cfi_endproc
 1264              	.LFE1279:
 1265              		.cantunwind
 1266              		.fnend
 1268              		.section	.text._ZNK8std_msgs6Header9serializeEPh,"axG",%progbits,_ZNK8std_msgs6Header9serializeEPh
 1269              		.align	1
 1270              		.weak	_ZNK8std_msgs6Header9serializeEPh
 1271              		.thumb
 1272              		.thumb_func
 1274              	_ZNK8std_msgs6Header9serializeEPh:
 1275              		.fnstart
 1276              	.LFB1172:
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1277              		.loc 9 27 0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 8
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
 1281              	.LVL104:
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1282              		.loc 9 30 0
 1283 0000 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1284              		.loc 9 27 0
 1285 0002 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1286              	.LCFI2:
 1287              		.cfi_def_cfa_offset 24
 1288              		.cfi_offset 4, -16
 1289              		.cfi_offset 5, -12
 1290              		.cfi_offset 6, -8
 1291              		.cfi_offset 14, -4
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1292              		.loc 9 30 0
 1293 0004 0B70     		strb	r3, [r1]
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1294              		.loc 9 31 0
 1295 0006 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1296              		.loc 9 27 0
 1297 0008 0546     		mov	r5, r0
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1298              		.loc 9 31 0
 1299 000a 1B0A     		lsrs	r3, r3, #8
 1300 000c 4B70     		strb	r3, [r1, #1]
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1301              		.loc 9 32 0
 1302 000e C388     		ldrh	r3, [r0, #6]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1303              		.loc 9 27 0
 1304 0010 0C46     		mov	r4, r1
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1305              		.loc 9 32 0
 1306 0012 8B70     		strb	r3, [r1, #2]
  33:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1307              		.loc 9 33 0
 1308 0014 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 1309 0016 CB70     		strb	r3, [r1, #3]
 1310              	.LVL105:
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 1311              		.loc 9 35 0
 1312 0018 8368     		ldr	r3, [r0, #8]
 1313 001a 0B71     		strb	r3, [r1, #4]
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 1314              		.loc 9 36 0
 1315 001c 8368     		ldr	r3, [r0, #8]
 1316 001e 1B0A     		lsrs	r3, r3, #8
 1317 0020 4B71     		strb	r3, [r1, #5]
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 1318              		.loc 9 37 0
 1319 0022 4389     		ldrh	r3, [r0, #10]
 1320 0024 8B71     		strb	r3, [r1, #6]
  38:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1321              		.loc 9 38 0
 1322 0026 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1323 0028 CB71     		strb	r3, [r1, #7]
 1324              	.LVL106:
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 1325              		.loc 9 40 0
 1326 002a C368     		ldr	r3, [r0, #12]
 1327 002c 0B72     		strb	r3, [r1, #8]
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 1328              		.loc 9 41 0
 1329 002e C368     		ldr	r3, [r0, #12]
 1330 0030 1B0A     		lsrs	r3, r3, #8
 1331 0032 4B72     		strb	r3, [r1, #9]
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 1332              		.loc 9 42 0
 1333 0034 C389     		ldrh	r3, [r0, #14]
 1334 0036 8B72     		strb	r3, [r1, #10]
  43:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1335              		.loc 9 43 0
 1336 0038 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 1337 003a CB72     		strb	r3, [r1, #11]
 1338              	.LVL107:
  45:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 1339              		.loc 9 45 0
 1340 003c 0069     		ldr	r0, [r0, #16]
 1341              	.LVL108:
 1342 003e FFF7FEFF 		bl	strlen
 1343              	.LVL109:
 1344 0042 0646     		mov	r6, r0
 1345 0044 02AB     		add	r3, sp, #8
 1346 0046 43F8040D 		str	r0, [r3, #-4]!
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1347              		.loc 9 46 0
 1348 004a 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1349              		.loc 9 48 0
 1350 004c 3246     		mov	r2, r6
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1351              		.loc 9 46 0
 1352 004e E060     		str	r0, [r4, #12]	@ unaligned
 1353              	.LVL110:
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1354              		.loc 9 48 0
 1355 0050 2969     		ldr	r1, [r5, #16]
 1356 0052 04F11000 		add	r0, r4, #16
 1357 0056 FFF7FEFF 		bl	memcpy
 1358              	.LVL111:
  51:./lib/ros_lib/std_msgs/Header.h **** 
 1359              		.loc 9 51 0
 1360 005a 06F11000 		add	r0, r6, #16
 1361              	.LVL112:
 1362 005e 02B0     		add	sp, sp, #8
 1363              	.LCFI3:
 1364              		.cfi_def_cfa_offset 16
 1365              		@ sp needed
 1366 0060 70BD     		pop	{r4, r5, r6, pc}
 1367              		.cfi_endproc
 1368              	.LFE1172:
 1369              		.cantunwind
 1370              		.fnend
 1372              		.section	.text._ZNK8std_msgs19MultiArrayDimension9serializeEPh,"axG",%progbits,_ZNK8std_msgs19Mult
 1373              		.align	1
 1374              		.weak	_ZNK8std_msgs19MultiArrayDimension9serializeEPh
 1375              		.thumb
 1376              		.thumb_func
 1378              	_ZNK8std_msgs19MultiArrayDimension9serializeEPh:
 1379              		.fnstart
 1380              	.LFB1144:
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1381              		.loc 5 26 0
 1382              		.cfi_startproc
 1383              		@ args = 0, pretend = 0, frame = 8
 1384              		@ frame_needed = 0, uses_anonymous_args = 0
 1385              	.LVL113:
 1386 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1387              	.LCFI4:
 1388              		.cfi_def_cfa_offset 24
 1389              		.cfi_offset 4, -16
 1390              		.cfi_offset 5, -12
 1391              		.cfi_offset 6, -8
 1392              		.cfi_offset 14, -4
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1393              		.loc 5 26 0
 1394 0002 0546     		mov	r5, r0
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
 1395              		.loc 5 29 0
 1396 0004 4068     		ldr	r0, [r0, #4]
 1397              	.LVL114:
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1398              		.loc 5 26 0
 1399 0006 0C46     		mov	r4, r1
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
 1400              		.loc 5 29 0
 1401 0008 FFF7FEFF 		bl	strlen
 1402              	.LVL115:
 1403 000c 02AB     		add	r3, sp, #8
 1404 000e 43F8040D 		str	r0, [r3, #-4]!
 1405 0012 0646     		mov	r6, r0
  30:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 1406              		.loc 5 30 0
 1407 0014 1868     		ldr	r0, [r3]	@ unaligned
 1408 0016 2346     		mov	r3, r4
 1409 0018 43F8040B 		str	r0, [r3], #4	@ unaligned
 1410              	.LVL116:
  32:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
 1411              		.loc 5 32 0
 1412 001c 6968     		ldr	r1, [r5, #4]
 1413 001e 3246     		mov	r2, r6
 1414 0020 1846     		mov	r0, r3
 1415 0022 FFF7FEFF 		bl	memcpy
 1416              	.LVL117:
  34:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->size >> (8 * 1)) & 0xFF;
 1417              		.loc 5 34 0
 1418 0026 AB68     		ldr	r3, [r5, #8]
 1419 0028 A119     		adds	r1, r4, r6
 1420 002a 0B71     		strb	r3, [r1, #4]
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
 1421              		.loc 5 35 0
 1422 002c AB68     		ldr	r3, [r5, #8]
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 1423              		.loc 5 45 0
 1424 002e 06F10C00 		add	r0, r6, #12
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
 1425              		.loc 5 35 0
 1426 0032 1B0A     		lsrs	r3, r3, #8
 1427 0034 4B71     		strb	r3, [r1, #5]
  36:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->size >> (8 * 3)) & 0xFF;
 1428              		.loc 5 36 0
 1429 0036 6B89     		ldrh	r3, [r5, #10]
 1430 0038 8B71     		strb	r3, [r1, #6]
  37:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
 1431              		.loc 5 37 0
 1432 003a EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 1433 003c CB71     		strb	r3, [r1, #7]
 1434              	.LVL118:
  39:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->stride >> (8 * 1)) & 0xFF;
 1435              		.loc 5 39 0
 1436 003e EB68     		ldr	r3, [r5, #12]
 1437 0040 0B72     		strb	r3, [r1, #8]
  40:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->stride >> (8 * 2)) & 0xFF;
 1438              		.loc 5 40 0
 1439 0042 EB68     		ldr	r3, [r5, #12]
 1440 0044 1B0A     		lsrs	r3, r3, #8
 1441 0046 4B72     		strb	r3, [r1, #9]
  41:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->stride >> (8 * 3)) & 0xFF;
 1442              		.loc 5 41 0
 1443 0048 EB89     		ldrh	r3, [r5, #14]
 1444 004a 8B72     		strb	r3, [r1, #10]
  42:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
 1445              		.loc 5 42 0
 1446 004c EB7B     		ldrb	r3, [r5, #15]	@ zero_extendqisi2
 1447 004e CB72     		strb	r3, [r1, #11]
 1448              	.LVL119:
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 1449              		.loc 5 45 0
 1450 0050 02B0     		add	sp, sp, #8
 1451              	.LCFI5:
 1452              		.cfi_def_cfa_offset 16
 1453              		@ sp needed
 1454 0052 70BD     		pop	{r4, r5, r6, pc}
 1455              		.cfi_endproc
 1456              	.LFE1144:
 1457              		.cantunwind
 1458              		.fnend
 1460              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 1461              		.align	1
 1462              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1463              		.thumb
 1464              		.thumb_func
 1466              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1467              		.fnstart
 1468              	.LFB1074:
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1469              		.loc 4 74 0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 8
 1472              		@ frame_needed = 0, uses_anonymous_args = 0
 1473              	.LVL120:
 1474 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 1475              	.LCFI6:
 1476              		.cfi_def_cfa_offset 40
 1477              		.cfi_offset 4, -28
 1478              		.cfi_offset 5, -24
 1479              		.cfi_offset 6, -20
 1480              		.cfi_offset 7, -16
 1481              		.cfi_offset 8, -12
 1482              		.cfi_offset 9, -8
 1483              		.cfi_offset 14, -4
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1484              		.loc 4 77 0
 1485 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1486              		.loc 4 74 0
 1487 0006 0746     		mov	r7, r0
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1488              		.loc 4 77 0
 1489 0008 0B70     		strb	r3, [r1]
 1490              	.LVL121:
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1491              		.loc 4 78 0
 1492 000a 0023     		movs	r3, #0
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1493              		.loc 4 80 0
 1494 000c 1A46     		mov	r2, r3
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1495              		.loc 4 74 0
 1496 000e 0C46     		mov	r4, r1
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1497              		.loc 4 78 0
 1498 0010 4B70     		strb	r3, [r1, #1]
 1499              	.LVL122:
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1500              		.loc 4 79 0
 1501 0012 8B70     		strb	r3, [r1, #2]
 1502              	.LVL123:
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1503              		.loc 4 80 0
 1504 0014 CB70     		strb	r3, [r1, #3]
 1505              	.LVL124:
 1506 0016 0431     		adds	r1, r1, #4
 1507              	.LVL125:
 1508              	.L102:
 1509              	.LBB213:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1510              		.loc 4 81 0 discriminator 3
 1511 0018 3D79     		ldrb	r5, [r7, #4]	@ zero_extendqisi2
 1512 001a 501C     		adds	r0, r2, #1
 1513 001c D2B2     		uxtb	r2, r2
 1514 001e 9542     		cmp	r5, r2
 1515 0020 A1EB0403 		sub	r3, r1, r4
 1516              	.LVL126:
 1517 0024 01F10401 		add	r1, r1, #4
 1518 0028 0FD9     		bls	.L101
 1519              	.LBB214:
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1520              		.loc 4 86 0 discriminator 2
 1521 002a FB68     		ldr	r3, [r7, #12]
 1522              	.LVL127:
 1523 002c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1524              	.LVL128:
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1525              		.loc 4 88 0 discriminator 2
 1526 0030 1A0A     		lsrs	r2, r3, #8
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1527              		.loc 4 87 0 discriminator 2
 1528 0032 01F8043C 		strb	r3, [r1, #-4]
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1529              		.loc 4 88 0 discriminator 2
 1530 0036 01F8032C 		strb	r2, [r1, #-3]
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1531              		.loc 4 89 0 discriminator 2
 1532 003a 1A0C     		lsrs	r2, r3, #16
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1533              		.loc 4 90 0 discriminator 2
 1534 003c 1B0E     		lsrs	r3, r3, #24
 1535              	.LVL129:
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1536              		.loc 4 89 0 discriminator 2
 1537 003e 01F8022C 		strb	r2, [r1, #-2]
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1538              		.loc 4 90 0 discriminator 2
 1539 0042 01F8013C 		strb	r3, [r1, #-1]
 1540              	.LVL130:
 1541              	.LBE214:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1542              		.loc 4 81 0 discriminator 2
 1543 0046 0246     		mov	r2, r0
 1544 0048 E6E7     		b	.L102
 1545              	.LVL131:
 1546              	.L101:
 1547              	.LBE213:
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1548              		.loc 4 93 0
 1549 004a 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1550              		.loc 4 94 0
 1551 004c E118     		adds	r1, r4, r3
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1552              		.loc 4 93 0
 1553 004e E254     		strb	r2, [r4, r3]
 1554              	.LVL132:
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1555              		.loc 4 94 0
 1556 0050 0022     		movs	r2, #0
 1557 0052 0433     		adds	r3, r3, #4
 1558              	.LVL133:
 1559 0054 4A70     		strb	r2, [r1, #1]
 1560              	.LVL134:
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1561              		.loc 4 95 0
 1562 0056 8A70     		strb	r2, [r1, #2]
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1563              		.loc 4 96 0
 1564 0058 CA70     		strb	r2, [r1, #3]
 1565              	.LVL135:
 1566 005a 2344     		add	r3, r3, r4
 1567              	.LVL136:
 1568              	.L104:
 1569              	.LBB215:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1570              		.loc 4 97 0 discriminator 3
 1571 005c 387C     		ldrb	r0, [r7, #16]	@ zero_extendqisi2
 1572 005e 511C     		adds	r1, r2, #1
 1573 0060 D2B2     		uxtb	r2, r2
 1574 0062 9042     		cmp	r0, r2
 1575 0064 A3EB0406 		sub	r6, r3, r4
 1576              	.LVL137:
 1577 0068 03F10403 		add	r3, r3, #4
 1578 006c 0FD9     		bls	.L103
 1579              	.LBB216:
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1580              		.loc 4 102 0 discriminator 2
 1581 006e B869     		ldr	r0, [r7, #24]
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1582              		.loc 4 103 0 discriminator 2
 1583 0070 50F82220 		ldr	r2, [r0, r2, lsl #2]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1584              		.loc 4 104 0 discriminator 2
 1585 0074 100A     		lsrs	r0, r2, #8
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1586              		.loc 4 103 0 discriminator 2
 1587 0076 03F8042C 		strb	r2, [r3, #-4]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1588              		.loc 4 104 0 discriminator 2
 1589 007a 03F8030C 		strb	r0, [r3, #-3]
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1590              		.loc 4 105 0 discriminator 2
 1591 007e 100C     		lsrs	r0, r2, #16
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1592              		.loc 4 106 0 discriminator 2
 1593 0080 120E     		lsrs	r2, r2, #24
 1594 0082 03F8012C 		strb	r2, [r3, #-1]
 1595              	.LVL138:
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1596              		.loc 4 105 0 discriminator 2
 1597 0086 03F8020C 		strb	r0, [r3, #-2]
 1598              	.LBE216:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1599              		.loc 4 97 0 discriminator 2
 1600 008a 0A46     		mov	r2, r1
 1601 008c E6E7     		b	.L104
 1602              	.LVL139:
 1603              	.L103:
 1604              	.LBE215:
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1605              		.loc 4 109 0
 1606 008e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1607              		.loc 4 110 0
 1608 0090 A219     		adds	r2, r4, r6
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1609              		.loc 4 109 0
 1610 0092 A355     		strb	r3, [r4, r6]
 1611              	.LVL140:
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1612              		.loc 4 110 0
 1613 0094 0023     		movs	r3, #0
 1614 0096 5370     		strb	r3, [r2, #1]
 1615              	.LVL141:
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1616              		.loc 4 111 0
 1617 0098 9370     		strb	r3, [r2, #2]
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1618              		.loc 4 112 0
 1619 009a 0436     		adds	r6, r6, #4
 1620              	.LVL142:
 1621 009c D370     		strb	r3, [r2, #3]
 1622              	.LVL143:
 1623              	.L106:
 1624              	.LBB217:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1625              		.loc 4 113 0 discriminator 3
 1626 009e 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 1627 00a0 DDB2     		uxtb	r5, r3
 1628 00a2 AA42     		cmp	r2, r5
 1629 00a4 03F10109 		add	r9, r3, #1
 1630 00a8 15D9     		bls	.L105
 1631              	.LBB218:
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1632              		.loc 4 114 0 discriminator 2
 1633 00aa 7B6A     		ldr	r3, [r7, #36]
 1634              	.LVL144:
 1635 00ac 53F82500 		ldr	r0, [r3, r5, lsl #2]
 1636 00b0 FFF7FEFF 		bl	strlen
 1637              	.LVL145:
 1638 00b4 8046     		mov	r8, r0
 1639 00b6 02AB     		add	r3, sp, #8
 1640 00b8 43F8040D 		str	r0, [r3, #-4]!
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1641              		.loc 4 115 0 discriminator 2
 1642 00bc 1868     		ldr	r0, [r3]	@ unaligned
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1643              		.loc 4 117 0 discriminator 2
 1644 00be 4246     		mov	r2, r8
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1645              		.loc 4 115 0 discriminator 2
 1646 00c0 A051     		str	r0, [r4, r6]	@ unaligned
 1647              	.LVL146:
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1648              		.loc 4 117 0 discriminator 2
 1649 00c2 7B6A     		ldr	r3, [r7, #36]
 1650 00c4 0436     		adds	r6, r6, #4
 1651              	.LVL147:
 1652 00c6 53F82510 		ldr	r1, [r3, r5, lsl #2]
 1653 00ca A019     		adds	r0, r4, r6
 1654 00cc FFF7FEFF 		bl	memcpy
 1655              	.LVL148:
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 1656              		.loc 4 118 0 discriminator 2
 1657 00d0 4644     		add	r6, r6, r8
 1658              	.LVL149:
 1659              	.LBE218:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1660              		.loc 4 113 0 discriminator 2
 1661 00d2 4B46     		mov	r3, r9
 1662 00d4 E3E7     		b	.L106
 1663              	.LVL150:
 1664              	.L105:
 1665              	.LBE217:
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 1666              		.loc 4 121 0
 1667 00d6 3046     		mov	r0, r6
 1668 00d8 03B0     		add	sp, sp, #12
 1669              	.LCFI7:
 1670              		.cfi_def_cfa_offset 28
 1671              		@ sp needed
 1672 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1673              		.cfi_endproc
 1674              	.LFE1074:
 1675              		.cantunwind
 1676              		.fnend
 1678              		.section	.text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh,"axG",%progbits,_ZNK14rosser
 1679              		.align	1
 1680              		.weak	_ZNK14rosserial_msgs19RequestParamRequest9serializeEPh
 1681              		.thumb
 1682              		.thumb_func
 1684              	_ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:
 1685              		.fnstart
 1686              	.LFB1067:
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1687              		.loc 4 23 0
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 8
 1690              		@ frame_needed = 0, uses_anonymous_args = 0
 1691              	.LVL151:
 1692 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1693              	.LCFI8:
 1694              		.cfi_def_cfa_offset 24
 1695              		.cfi_offset 4, -16
 1696              		.cfi_offset 5, -12
 1697              		.cfi_offset 6, -8
 1698              		.cfi_offset 14, -4
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1699              		.loc 4 23 0
 1700 0002 0646     		mov	r6, r0
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
 1701              		.loc 4 26 0
 1702 0004 4068     		ldr	r0, [r0, #4]
 1703              	.LVL152:
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1704              		.loc 4 23 0
 1705 0006 0C46     		mov	r4, r1
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
 1706              		.loc 4 26 0
 1707 0008 FFF7FEFF 		bl	strlen
 1708              	.LVL153:
 1709 000c 02AB     		add	r3, sp, #8
 1710 000e 43F8040D 		str	r0, [r3, #-4]!
 1711 0012 0546     		mov	r5, r0
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1712              		.loc 4 27 0
 1713 0014 1868     		ldr	r0, [r3]	@ unaligned
 1714 0016 2346     		mov	r3, r4
 1715 0018 43F8040B 		str	r0, [r3], #4	@ unaligned
 1716              	.LVL154:
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
 1717              		.loc 4 29 0
 1718 001c 2A46     		mov	r2, r5
 1719 001e 7168     		ldr	r1, [r6, #4]
 1720 0020 1846     		mov	r0, r3
 1721 0022 FFF7FEFF 		bl	memcpy
 1722              	.LVL155:
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 1723              		.loc 4 32 0
 1724 0026 281D     		adds	r0, r5, #4
 1725              	.LVL156:
 1726 0028 02B0     		add	sp, sp, #8
 1727              	.LCFI9:
 1728              		.cfi_def_cfa_offset 16
 1729              		@ sp needed
 1730 002a 70BD     		pop	{r4, r5, r6, pc}
 1731              		.cfi_endproc
 1732              	.LFE1067:
 1733              		.cantunwind
 1734              		.fnend
 1736              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 1737              		.align	1
 1738              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1739              		.thumb
 1740              		.thumb_func
 1742              	_ZNK14rosserial_msgs3Log9serializeEPh:
 1743              		.fnstart
 1744              	.LFB1060:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1745              		.loc 3 29 0
 1746              		.cfi_startproc
 1747              		@ args = 0, pretend = 0, frame = 8
 1748              		@ frame_needed = 0, uses_anonymous_args = 0
 1749              	.LVL157:
 1750 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1751              	.LCFI10:
 1752              		.cfi_def_cfa_offset 24
 1753              		.cfi_offset 4, -16
 1754              		.cfi_offset 5, -12
 1755              		.cfi_offset 6, -8
 1756              		.cfi_offset 14, -4
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1757              		.loc 3 32 0
 1758 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1759              		.loc 3 29 0
 1760 0004 0646     		mov	r6, r0
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1761              		.loc 3 32 0
 1762 0006 0B70     		strb	r3, [r1]
 1763              	.LVL158:
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1764              		.loc 3 34 0
 1765 0008 8068     		ldr	r0, [r0, #8]
 1766              	.LVL159:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1767              		.loc 3 29 0
 1768 000a 0D46     		mov	r5, r1
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1769              		.loc 3 34 0
 1770 000c FFF7FEFF 		bl	strlen
 1771              	.LVL160:
 1772 0010 0446     		mov	r4, r0
 1773 0012 02AB     		add	r3, sp, #8
 1774 0014 43F8040D 		str	r0, [r3, #-4]!
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1775              		.loc 3 35 0
 1776 0018 1868     		ldr	r0, [r3]	@ unaligned
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1777              		.loc 3 37 0
 1778 001a 2246     		mov	r2, r4
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1779              		.loc 3 35 0
 1780 001c C5F80100 		str	r0, [r5, #1]	@ unaligned
 1781              	.LVL161:
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1782              		.loc 3 37 0
 1783 0020 B168     		ldr	r1, [r6, #8]
 1784 0022 681D     		adds	r0, r5, #5
 1785 0024 FFF7FEFF 		bl	memcpy
 1786              	.LVL162:
  40:./lib/ros_lib/rosserial_msgs/Log.h **** 
 1787              		.loc 3 40 0
 1788 0028 601D     		adds	r0, r4, #5
 1789              	.LVL163:
 1790 002a 02B0     		add	sp, sp, #8
 1791              	.LCFI11:
 1792              		.cfi_def_cfa_offset 16
 1793              		@ sp needed
 1794 002c 70BD     		pop	{r4, r5, r6, pc}
 1795              		.cfi_endproc
 1796              	.LFE1060:
 1797              		.cantunwind
 1798              		.fnend
 1800              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 1801              		.align	1
 1802              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 1803              		.thumb
 1804              		.thumb_func
 1806              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 1807              		.fnstart
 1808              	.LFB1053:
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1809              		.loc 2 38 0
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 16
 1812              		@ frame_needed = 0, uses_anonymous_args = 0
 1813              	.LVL164:
 1814 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 1815              	.LCFI12:
 1816              		.cfi_def_cfa_offset 40
 1817              		.cfi_offset 4, -24
 1818              		.cfi_offset 5, -20
 1819              		.cfi_offset 6, -16
 1820              		.cfi_offset 7, -12
 1821              		.cfi_offset 8, -8
 1822              		.cfi_offset 14, -4
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1823              		.loc 2 41 0
 1824 0004 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1825              		.loc 2 38 0
 1826 0006 0646     		mov	r6, r0
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1827              		.loc 2 41 0
 1828 0008 0B70     		strb	r3, [r1]
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1829              		.loc 2 42 0
 1830 000a 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1831              		.loc 2 38 0
 1832 000c 0D46     		mov	r5, r1
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1833              		.loc 2 42 0
 1834 000e 1B0A     		lsrs	r3, r3, #8
 1835 0010 4B70     		strb	r3, [r1, #1]
 1836              	.LVL165:
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1837              		.loc 2 44 0
 1838 0012 8068     		ldr	r0, [r0, #8]
 1839              	.LVL166:
 1840 0014 FFF7FEFF 		bl	strlen
 1841              	.LVL167:
 1842 0018 0446     		mov	r4, r0
 1843 001a 04AB     		add	r3, sp, #16
 1844 001c 43F80C0D 		str	r0, [r3, #-12]!
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1845              		.loc 2 45 0
 1846 0020 1868     		ldr	r0, [r3]	@ unaligned
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1847              		.loc 2 47 0
 1848 0022 2246     		mov	r2, r4
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1849              		.loc 2 45 0
 1850 0024 C5F80200 		str	r0, [r5, #2]	@ unaligned
 1851              	.LVL168:
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1852              		.loc 2 47 0
 1853 0028 B168     		ldr	r1, [r6, #8]
 1854 002a A81D     		adds	r0, r5, #6
 1855 002c FFF7FEFF 		bl	memcpy
 1856              	.LVL169:
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 1857              		.loc 2 49 0
 1858 0030 F068     		ldr	r0, [r6, #12]
 1859 0032 FFF7FEFF 		bl	strlen
 1860              	.LVL170:
 1861 0036 0746     		mov	r7, r0
 1862 0038 04AB     		add	r3, sp, #16
 1863 003a 43F8080D 		str	r0, [r3, #-8]!
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1864              		.loc 2 50 0
 1865 003e 1868     		ldr	r0, [r3]	@ unaligned
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 1866              		.loc 2 48 0
 1867 0040 04F10608 		add	r8, r4, #6
 1868              	.LVL171:
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1869              		.loc 2 50 0
 1870 0044 45F80800 		str	r0, [r5, r8]	@ unaligned
 1871              	.LVL172:
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1872              		.loc 2 52 0
 1873 0048 0A34     		adds	r4, r4, #10
 1874 004a 3A46     		mov	r2, r7
 1875 004c F168     		ldr	r1, [r6, #12]
 1876 004e 2819     		adds	r0, r5, r4
 1877 0050 FFF7FEFF 		bl	memcpy
 1878              	.LVL173:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1879              		.loc 2 54 0
 1880 0054 3069     		ldr	r0, [r6, #16]
 1881 0056 FFF7FEFF 		bl	strlen
 1882              	.LVL174:
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 1883              		.loc 2 53 0
 1884 005a 3C44     		add	r4, r4, r7
 1885              	.LVL175:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1886              		.loc 2 54 0
 1887 005c 0746     		mov	r7, r0
 1888 005e 04AB     		add	r3, sp, #16
 1889 0060 43F8040D 		str	r0, [r3, #-4]!
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1890              		.loc 2 55 0
 1891 0064 1868     		ldr	r0, [r3]	@ unaligned
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1892              		.loc 2 57 0
 1893 0066 3A46     		mov	r2, r7
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1894              		.loc 2 55 0
 1895 0068 2851     		str	r0, [r5, r4]	@ unaligned
 1896              	.LVL176:
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 1897              		.loc 2 57 0
 1898 006a 0434     		adds	r4, r4, #4
 1899              	.LVL177:
 1900 006c 2819     		adds	r0, r5, r4
 1901 006e 3169     		ldr	r1, [r6, #16]
 1902 0070 FFF7FEFF 		bl	memcpy
 1903              	.LVL178:
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 1904              		.loc 2 63 0
 1905 0074 7369     		ldr	r3, [r6, #20]
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 1906              		.loc 2 58 0
 1907 0076 3819     		adds	r0, r7, r4
 1908              	.LVL179:
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 1909              		.loc 2 64 0
 1910 0078 2B54     		strb	r3, [r5, r0]
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 1911              		.loc 2 65 0
 1912 007a 1A0A     		lsrs	r2, r3, #8
 1913 007c 0544     		add	r5, r5, r0
 1914              	.LVL180:
 1915 007e 6A70     		strb	r2, [r5, #1]
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1916              		.loc 2 70 0
 1917 0080 0430     		adds	r0, r0, #4
 1918              	.LVL181:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1919              		.loc 2 66 0
 1920 0082 1A0C     		lsrs	r2, r3, #16
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1921              		.loc 2 67 0
 1922 0084 1B0E     		lsrs	r3, r3, #24
 1923              	.LVL182:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 1924              		.loc 2 66 0
 1925 0086 AA70     		strb	r2, [r5, #2]
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 1926              		.loc 2 67 0
 1927 0088 EB70     		strb	r3, [r5, #3]
 1928              	.LVL183:
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 1929              		.loc 2 70 0
 1930 008a 04B0     		add	sp, sp, #16
 1931              	.LCFI13:
 1932              		.cfi_def_cfa_offset 24
 1933              		@ sp needed
 1934 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1935              		.cfi_endproc
 1936              	.LFE1053:
 1937              		.cantunwind
 1938              		.fnend
 1940              		.section	.text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh,"axG",%progbits,_ZN14rosse
 1941              		.align	1
 1942              		.weak	_ZN14rosserial_msgs19RequestParamRequest11deserializeEPh
 1943              		.thumb
 1944              		.thumb_func
 1946              	_ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:
 1947              		.fnstart
 1948              	.LFB1068:
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1949              		.loc 4 34 0
 1950              		.cfi_startproc
 1951              		@ args = 0, pretend = 0, frame = 8
 1952              		@ frame_needed = 0, uses_anonymous_args = 0
 1953              	.LVL184:
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1954              		.loc 4 38 0
 1955 0000 0B46     		mov	r3, r1
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1956              		.loc 4 34 0
 1957 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1958              	.LCFI14:
 1959              		.cfi_def_cfa_offset 24
 1960              		.cfi_offset 4, -12
 1961              		.cfi_offset 5, -8
 1962              		.cfi_offset 14, -4
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1963              		.loc 4 34 0
 1964 0004 0446     		mov	r4, r0
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1965              		.loc 4 38 0
 1966 0006 53F8040B 		ldr	r0, [r3], #4	@ unaligned
 1967              	.LVL185:
 1968 000a 0190     		str	r0, [sp, #4]	@ unaligned
 1969              	.LVL186:
 1970              	.LBB219:
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1971              		.loc 4 40 0
 1972 000c 019A     		ldr	r2, [sp, #4]
 1973 000e 101D     		adds	r0, r2, #4
 1974              	.LVL187:
 1975              	.L112:
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1976              		.loc 4 40 0 is_stmt 0 discriminator 3
 1977 0010 5D1A     		subs	r5, r3, r1
 1978              	.LVL188:
 1979 0012 A842     		cmp	r0, r5
 1980 0014 04D9     		bls	.L111
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 1981              		.loc 4 41 0 is_stmt 1 discriminator 2
 1982 0016 13F8015B 		ldrb	r5, [r3], #1	@ zero_extendqisi2
 1983              	.LVL189:
 1984 001a 03F8025C 		strb	r5, [r3, #-2]
 1985              	.LVL190:
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 1986              		.loc 4 40 0 discriminator 2
 1987 001e F7E7     		b	.L112
 1988              	.LVL191:
 1989              	.L111:
 1990              	.LBE219:
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
 1991              		.loc 4 43 0
 1992 0020 0A44     		add	r2, r2, r1
 1993 0022 0023     		movs	r3, #0
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
 1994              		.loc 4 44 0
 1995 0024 0331     		adds	r1, r1, #3
 1996              	.LVL192:
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
 1997              		.loc 4 43 0
 1998 0026 D370     		strb	r3, [r2, #3]
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
 1999              		.loc 4 44 0
 2000 0028 6160     		str	r1, [r4, #4]
 2001              	.LVL193:
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2002              		.loc 4 47 0
 2003 002a 03B0     		add	sp, sp, #12
 2004              	.LCFI15:
 2005              		.cfi_def_cfa_offset 12
 2006              		@ sp needed
 2007 002c 30BD     		pop	{r4, r5, pc}
 2008              		.cfi_endproc
 2009              	.LFE1068:
 2010              		.cantunwind
 2011              		.fnend
 2013              		.section	.text._ZN8std_msgs6Header11deserializeEPh,"axG",%progbits,_ZN8std_msgs6Header11deserializ
 2014              		.align	1
 2015              		.weak	_ZN8std_msgs6Header11deserializeEPh
 2016              		.thumb
 2017              		.thumb_func
 2019              	_ZN8std_msgs6Header11deserializeEPh:
 2020              		.fnstart
 2021              	.LFB1173:
  53:./lib/ros_lib/std_msgs/Header.h ****     {
 2022              		.loc 9 53 0
 2023              		.cfi_startproc
 2024              		@ args = 0, pretend = 0, frame = 8
 2025              		@ frame_needed = 0, uses_anonymous_args = 0
 2026              	.LVL194:
 2027 0000 0346     		mov	r3, r0
 2028 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2029              	.LCFI16:
 2030              		.cfi_def_cfa_offset 24
 2031              		.cfi_offset 4, -12
 2032              		.cfi_offset 5, -8
 2033              		.cfi_offset 14, -4
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2034              		.loc 9 56 0
 2035 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 2036 0006 01F11004 		add	r4, r1, #16
 2037 000a 4260     		str	r2, [r0, #4]
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2038              		.loc 9 57 0
 2039 000c 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 2040              	.LVL195:
 2041 000e 42EA0022 		orr	r2, r2, r0, lsl #8
 2042 0012 5A60     		str	r2, [r3, #4]
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2043              		.loc 9 58 0
 2044 0014 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 2045 0016 42EA0042 		orr	r2, r2, r0, lsl #16
 2046 001a 5A60     		str	r2, [r3, #4]
  59:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 2047              		.loc 9 59 0
 2048 001c C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 2049 001e 42EA0062 		orr	r2, r2, r0, lsl #24
 2050 0022 5A60     		str	r2, [r3, #4]
 2051              	.LVL196:
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2052              		.loc 9 61 0
 2053 0024 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 2054 0026 9A60     		str	r2, [r3, #8]
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2055              		.loc 9 62 0
 2056 0028 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 2057 002a 42EA0022 		orr	r2, r2, r0, lsl #8
 2058 002e 9A60     		str	r2, [r3, #8]
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2059              		.loc 9 63 0
 2060 0030 8879     		ldrb	r0, [r1, #6]	@ zero_extendqisi2
 2061 0032 42EA0042 		orr	r2, r2, r0, lsl #16
 2062 0036 9A60     		str	r2, [r3, #8]
  64:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 2063              		.loc 9 64 0
 2064 0038 C879     		ldrb	r0, [r1, #7]	@ zero_extendqisi2
 2065 003a 42EA0062 		orr	r2, r2, r0, lsl #24
 2066 003e 9A60     		str	r2, [r3, #8]
 2067              	.LVL197:
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2068              		.loc 9 66 0
 2069 0040 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 2070 0042 DA60     		str	r2, [r3, #12]
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2071              		.loc 9 67 0
 2072 0044 487A     		ldrb	r0, [r1, #9]	@ zero_extendqisi2
 2073 0046 42EA0022 		orr	r2, r2, r0, lsl #8
 2074 004a DA60     		str	r2, [r3, #12]
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2075              		.loc 9 68 0
 2076 004c 887A     		ldrb	r0, [r1, #10]	@ zero_extendqisi2
 2077 004e 42EA0042 		orr	r2, r2, r0, lsl #16
 2078 0052 DA60     		str	r2, [r3, #12]
  69:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 2079              		.loc 9 69 0
 2080 0054 C87A     		ldrb	r0, [r1, #11]	@ zero_extendqisi2
 2081 0056 42EA0062 		orr	r2, r2, r0, lsl #24
 2082 005a DA60     		str	r2, [r3, #12]
 2083              	.LVL198:
  72:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 2084              		.loc 9 72 0
 2085 005c C868     		ldr	r0, [r1, #12]	@ unaligned
 2086 005e 0190     		str	r0, [sp, #4]	@ unaligned
 2087              	.LVL199:
 2088              	.LBB220:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2089              		.loc 9 74 0
 2090 0060 019A     		ldr	r2, [sp, #4]
 2091 0062 02F11000 		add	r0, r2, #16
 2092              	.LVL200:
 2093              	.L116:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2094              		.loc 9 74 0 is_stmt 0 discriminator 3
 2095 0066 651A     		subs	r5, r4, r1
 2096              	.LVL201:
 2097 0068 A842     		cmp	r0, r5
 2098 006a 04D9     		bls	.L115
  75:./lib/ros_lib/std_msgs/Header.h ****       }
 2099              		.loc 9 75 0 is_stmt 1 discriminator 2
 2100 006c 14F8015B 		ldrb	r5, [r4], #1	@ zero_extendqisi2
 2101              	.LVL202:
 2102 0070 04F8025C 		strb	r5, [r4, #-2]
 2103              	.LVL203:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 2104              		.loc 9 74 0 discriminator 2
 2105 0074 F7E7     		b	.L116
 2106              	.LVL204:
 2107              	.L115:
 2108              	.LBE220:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 2109              		.loc 9 77 0
 2110 0076 0A44     		add	r2, r2, r1
 2111 0078 0024     		movs	r4, #0
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 2112              		.loc 9 78 0
 2113 007a 0F31     		adds	r1, r1, #15
 2114              	.LVL205:
  77:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 2115              		.loc 9 77 0
 2116 007c D473     		strb	r4, [r2, #15]
  78:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 2117              		.loc 9 78 0
 2118 007e 1961     		str	r1, [r3, #16]
 2119              	.LVL206:
  81:./lib/ros_lib/std_msgs/Header.h **** 
 2120              		.loc 9 81 0
 2121 0080 03B0     		add	sp, sp, #12
 2122              	.LCFI17:
 2123              		.cfi_def_cfa_offset 12
 2124              		@ sp needed
 2125 0082 30BD     		pop	{r4, r5, pc}
 2126              		.cfi_endproc
 2127              	.LFE1173:
 2128              		.cantunwind
 2129              		.fnend
 2131              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 2132              		.align	1
 2133              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 2134              		.thumb
 2135              		.thumb_func
 2137              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 2138              		.fnstart
 2139              	.LFB1054:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2140              		.loc 2 72 0
 2141              		.cfi_startproc
 2142              		@ args = 0, pretend = 0, frame = 16
 2143              		@ frame_needed = 0, uses_anonymous_args = 0
 2144              	.LVL207:
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2145              		.loc 2 75 0
 2146 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2147              		.loc 2 72 0
 2148 0002 30B5     		push	{r4, r5, lr}
 2149              	.LCFI18:
 2150              		.cfi_def_cfa_offset 12
 2151              		.cfi_offset 4, -12
 2152              		.cfi_offset 5, -8
 2153              		.cfi_offset 14, -4
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2154              		.loc 2 75 0
 2155 0004 8380     		strh	r3, [r0, #4]	@ movhi
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2156              		.loc 2 76 0
 2157 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2158              		.loc 2 72 0
 2159 0008 0446     		mov	r4, r0
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 2160              		.loc 2 76 0
 2161 000a 43EA0223 		orr	r3, r3, r2, lsl #8
 2162 000e 8380     		strh	r3, [r0, #4]	@ movhi
 2163              	.LVL208:
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2164              		.loc 2 79 0
 2165 0010 D1F80200 		ldr	r0, [r1, #2]	@ unaligned
 2166              	.LVL209:
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 2167              		.loc 2 72 0
 2168 0014 85B0     		sub	sp, sp, #20
 2169              	.LCFI19:
 2170              		.cfi_def_cfa_offset 32
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2171              		.loc 2 79 0
 2172 0016 0190     		str	r0, [sp, #4]	@ unaligned
 2173              	.LVL210:
 2174              	.LBB221:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2175              		.loc 2 81 0
 2176 0018 019D     		ldr	r5, [sp, #4]
 2177 001a 8A1D     		adds	r2, r1, #6
 2178 001c AB1D     		adds	r3, r5, #6
 2179              	.LVL211:
 2180              	.L120:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2181              		.loc 2 81 0 is_stmt 0 discriminator 3
 2182 001e 501A     		subs	r0, r2, r1
 2183              	.LVL212:
 2184 0020 8342     		cmp	r3, r0
 2185 0022 04D9     		bls	.L119
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2186              		.loc 2 82 0 is_stmt 1 discriminator 2
 2187 0024 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 2188              	.LVL213:
 2189 0028 02F8020C 		strb	r0, [r2, #-2]
 2190              	.LVL214:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2191              		.loc 2 81 0 discriminator 2
 2192 002c F7E7     		b	.L120
 2193              	.LVL215:
 2194              	.L119:
 2195              	.LBE221:
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 2196              		.loc 2 84 0
 2197 002e 4A19     		adds	r2, r1, r5
 2198 0030 0020     		movs	r0, #0
 2199              	.LVL216:
 2200 0032 5071     		strb	r0, [r2, #5]
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 2201              		.loc 2 85 0
 2202 0034 4A1D     		adds	r2, r1, #5
 2203 0036 A260     		str	r2, [r4, #8]
 2204              	.LVL217:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2205              		.loc 2 88 0
 2206 0038 C858     		ldr	r0, [r1, r3]	@ unaligned
 2207              	.LBB222:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2208              		.loc 2 90 0
 2209 003a 1A1D     		adds	r2, r3, #4
 2210              	.LBE222:
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2211              		.loc 2 88 0
 2212 003c 0290     		str	r0, [sp, #8]	@ unaligned
 2213              	.LVL218:
 2214              	.LBB223:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2215              		.loc 2 90 0
 2216 003e 029B     		ldr	r3, [sp, #8]
 2217 0040 05F10A00 		add	r0, r5, #10
 2218 0044 1344     		add	r3, r3, r2
 2219 0046 0844     		add	r0, r0, r1
 2220              	.LVL219:
 2221              	.L122:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2222              		.loc 2 90 0 is_stmt 0 discriminator 3
 2223 0048 451A     		subs	r5, r0, r1
 2224              	.LVL220:
 2225 004a AB42     		cmp	r3, r5
 2226 004c 04D9     		bls	.L121
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2227              		.loc 2 91 0 is_stmt 1 discriminator 2
 2228 004e 10F8015B 		ldrb	r5, [r0], #1	@ zero_extendqisi2
 2229              	.LVL221:
 2230 0052 00F8025C 		strb	r5, [r0, #-2]
 2231              	.LVL222:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2232              		.loc 2 90 0 discriminator 2
 2233 0056 F7E7     		b	.L122
 2234              	.LVL223:
 2235              	.L121:
 2236              	.LBE223:
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2237              		.loc 2 94 0
 2238 0058 013A     		subs	r2, r2, #1
 2239              	.LVL224:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 2240              		.loc 2 93 0
 2241 005a C818     		adds	r0, r1, r3
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2242              		.loc 2 94 0
 2243 005c 0A44     		add	r2, r2, r1
 2244              	.LVL225:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 2245              		.loc 2 93 0
 2246 005e 0025     		movs	r5, #0
 2247              	.LVL226:
 2248 0060 00F8015C 		strb	r5, [r0, #-1]
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 2249              		.loc 2 94 0
 2250 0064 E260     		str	r2, [r4, #12]
 2251              	.LVL227:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2252              		.loc 2 97 0
 2253 0066 0068     		ldr	r0, [r0]	@ unaligned
 2254              	.LBB224:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2255              		.loc 2 99 0
 2256 0068 0433     		adds	r3, r3, #4
 2257              	.LVL228:
 2258              	.LBE224:
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2259              		.loc 2 97 0
 2260 006a 0390     		str	r0, [sp, #12]	@ unaligned
 2261              	.LVL229:
 2262              	.LBB225:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2263              		.loc 2 99 0
 2264 006c 0398     		ldr	r0, [sp, #12]
 2265 006e CA18     		adds	r2, r1, r3
 2266 0070 1844     		add	r0, r0, r3
 2267              	.LVL230:
 2268              	.L124:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2269              		.loc 2 99 0 is_stmt 0 discriminator 3
 2270 0072 551A     		subs	r5, r2, r1
 2271              	.LVL231:
 2272 0074 A842     		cmp	r0, r5
 2273 0076 04D9     		bls	.L123
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 2274              		.loc 2 100 0 is_stmt 1 discriminator 2
 2275 0078 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 2276              	.LVL232:
 2277 007c 02F8025C 		strb	r5, [r2, #-2]
 2278              	.LVL233:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 2279              		.loc 2 99 0 discriminator 2
 2280 0080 F7E7     		b	.L124
 2281              	.LVL234:
 2282              	.L123:
 2283              	.LBE225:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2284              		.loc 2 103 0
 2285 0082 013B     		subs	r3, r3, #1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 2286              		.loc 2 102 0
 2287 0084 0D18     		adds	r5, r1, r0
 2288              	.LVL235:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2289              		.loc 2 103 0
 2290 0086 0B44     		add	r3, r3, r1
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 2291              		.loc 2 102 0
 2292 0088 0022     		movs	r2, #0
 2293              	.LVL236:
 2294 008a 05F8012C 		strb	r2, [r5, #-1]
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2295              		.loc 2 103 0
 2296 008e 2361     		str	r3, [r4, #16]
 2297              	.LVL237:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2298              		.loc 2 114 0
 2299 0090 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 2300 0092 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 2301 0094 1B04     		lsls	r3, r3, #16
 2302 0096 43EA0223 		orr	r3, r3, r2, lsl #8
 2303 009a 0A5C     		ldrb	r2, [r1, r0]	@ zero_extendqisi2
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2304              		.loc 2 117 0
 2305 009c 0430     		adds	r0, r0, #4
 2306              	.LVL238:
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2307              		.loc 2 114 0
 2308 009e 1343     		orrs	r3, r3, r2
 2309 00a0 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 2310 00a2 43EA0263 		orr	r3, r3, r2, lsl #24
 2311 00a6 6361     		str	r3, [r4, #20]
 2312              	.LVL239:
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2313              		.loc 2 117 0
 2314 00a8 05B0     		add	sp, sp, #20
 2315              	.LCFI20:
 2316              		.cfi_def_cfa_offset 12
 2317              		@ sp needed
 2318 00aa 30BD     		pop	{r4, r5, pc}
 2319              		.cfi_endproc
 2320              	.LFE1054:
 2321              		.cantunwind
 2322              		.fnend
 2324              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
 2325              		.align	1
 2326              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 2327              		.thumb
 2328              		.thumb_func
 2330              	_ZN14rosserial_msgs3Log11deserializeEPh:
 2331              		.fnstart
 2332              	.LFB1061:
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2333              		.loc 3 42 0
 2334              		.cfi_startproc
 2335              		@ args = 0, pretend = 0, frame = 8
 2336              		@ frame_needed = 0, uses_anonymous_args = 0
 2337              	.LVL240:
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2338              		.loc 3 45 0
 2339 0000 0B46     		mov	r3, r1
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2340              		.loc 3 42 0
 2341 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2342              	.LCFI21:
 2343              		.cfi_def_cfa_offset 24
 2344              		.cfi_offset 4, -12
 2345              		.cfi_offset 5, -8
 2346              		.cfi_offset 14, -4
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2347              		.loc 3 45 0
 2348 0004 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 2349              		.loc 3 42 0
 2350 0008 0446     		mov	r4, r0
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 2351              		.loc 3 45 0
 2352 000a 0271     		strb	r2, [r0, #4]
 2353              	.LVL241:
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 2354              		.loc 3 48 0
 2355 000c 1868     		ldr	r0, [r3]	@ unaligned
 2356              	.LVL242:
 2357 000e 4A1D     		adds	r2, r1, #5
 2358 0010 0190     		str	r0, [sp, #4]	@ unaligned
 2359              	.LVL243:
 2360              	.LBB226:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2361              		.loc 3 50 0
 2362 0012 019B     		ldr	r3, [sp, #4]
 2363 0014 581D     		adds	r0, r3, #5
 2364              	.LVL244:
 2365              	.L130:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2366              		.loc 3 50 0 is_stmt 0 discriminator 3
 2367 0016 551A     		subs	r5, r2, r1
 2368              	.LVL245:
 2369 0018 A842     		cmp	r0, r5
 2370 001a 04D9     		bls	.L129
  51:./lib/ros_lib/rosserial_msgs/Log.h ****       }
 2371              		.loc 3 51 0 is_stmt 1 discriminator 2
 2372 001c 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 2373              	.LVL246:
 2374 0020 02F8025C 		strb	r5, [r2, #-2]
 2375              	.LVL247:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 2376              		.loc 3 50 0 discriminator 2
 2377 0024 F7E7     		b	.L130
 2378              	.LVL248:
 2379              	.L129:
 2380              	.LBE226:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 2381              		.loc 3 53 0
 2382 0026 0B44     		add	r3, r3, r1
 2383 0028 0022     		movs	r2, #0
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2384              		.loc 3 54 0
 2385 002a 0431     		adds	r1, r1, #4
 2386              	.LVL249:
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 2387              		.loc 3 53 0
 2388 002c 1A71     		strb	r2, [r3, #4]
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 2389              		.loc 3 54 0
 2390 002e A160     		str	r1, [r4, #8]
 2391              	.LVL250:
  57:./lib/ros_lib/rosserial_msgs/Log.h **** 
 2392              		.loc 3 57 0
 2393 0030 03B0     		add	sp, sp, #12
 2394              	.LCFI22:
 2395              		.cfi_def_cfa_offset 12
 2396              		@ sp needed
 2397 0032 30BD     		pop	{r4, r5, pc}
 2398              		.cfi_endproc
 2399              	.LFE1061:
 2400              		.cantunwind
 2401              		.fnend
 2403              		.section	.text._ZN8std_msgs19MultiArrayDimension11deserializeEPh,"axG",%progbits,_ZN8std_msgs19Mul
 2404              		.align	1
 2405              		.weak	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 2406              		.thumb
 2407              		.thumb_func
 2409              	_ZN8std_msgs19MultiArrayDimension11deserializeEPh:
 2410              		.fnstart
 2411              	.LFB1145:
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 2412              		.loc 5 47 0
 2413              		.cfi_startproc
 2414              		@ args = 0, pretend = 0, frame = 8
 2415              		@ frame_needed = 0, uses_anonymous_args = 0
 2416              	.LVL251:
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 2417              		.loc 5 51 0
 2418 0000 0B46     		mov	r3, r1
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 2419              		.loc 5 47 0
 2420 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 2421              	.LCFI23:
 2422              		.cfi_def_cfa_offset 24
 2423              		.cfi_offset 4, -12
 2424              		.cfi_offset 5, -8
 2425              		.cfi_offset 14, -4
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 2426              		.loc 5 47 0
 2427 0004 0246     		mov	r2, r0
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 2428              		.loc 5 51 0
 2429 0006 53F8040B 		ldr	r0, [r3], #4	@ unaligned
 2430              	.LVL252:
 2431 000a 0190     		str	r0, [sp, #4]	@ unaligned
 2432              	.LVL253:
 2433              	.LBB227:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 2434              		.loc 5 53 0
 2435 000c 0198     		ldr	r0, [sp, #4]
 2436 000e 051D     		adds	r5, r0, #4
 2437              	.LVL254:
 2438              	.L134:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 2439              		.loc 5 53 0 is_stmt 0 discriminator 3
 2440 0010 5C1A     		subs	r4, r3, r1
 2441              	.LVL255:
 2442 0012 A542     		cmp	r5, r4
 2443 0014 04D9     		bls	.L133
  54:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       }
 2444              		.loc 5 54 0 is_stmt 1 discriminator 2
 2445 0016 13F8014B 		ldrb	r4, [r3], #1	@ zero_extendqisi2
 2446              	.LVL256:
 2447 001a 03F8024C 		strb	r4, [r3, #-2]
 2448              	.LVL257:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 2449              		.loc 5 53 0 discriminator 2
 2450 001e F7E7     		b	.L134
 2451              	.LVL258:
 2452              	.L133:
 2453              	.LBE227:
  56:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->label = (char *)(inbuffer + offset-1);
 2454              		.loc 5 56 0
 2455 0020 0C18     		adds	r4, r1, r0
 2456              	.LVL259:
 2457 0022 0023     		movs	r3, #0
 2458              	.LVL260:
 2459 0024 E370     		strb	r3, [r4, #3]
  57:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
 2460              		.loc 5 57 0
 2461 0026 CB1C     		adds	r3, r1, #3
 2462 0028 5360     		str	r3, [r2, #4]
 2463              	.LVL261:
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2464              		.loc 5 59 0
 2465 002a 4B5D     		ldrb	r3, [r1, r5]	@ zero_extendqisi2
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 2466              		.loc 5 70 0
 2467 002c 0C30     		adds	r0, r0, #12
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2468              		.loc 5 59 0
 2469 002e 9360     		str	r3, [r2, #8]
  60:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2470              		.loc 5 60 0
 2471 0030 6179     		ldrb	r1, [r4, #5]	@ zero_extendqisi2
 2472              	.LVL262:
 2473 0032 43EA0123 		orr	r3, r3, r1, lsl #8
 2474 0036 9360     		str	r3, [r2, #8]
  61:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2475              		.loc 5 61 0
 2476 0038 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 2477 003a 43EA0143 		orr	r3, r3, r1, lsl #16
 2478 003e 9360     		str	r3, [r2, #8]
  62:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
 2479              		.loc 5 62 0
 2480 0040 E179     		ldrb	r1, [r4, #7]	@ zero_extendqisi2
 2481 0042 43EA0163 		orr	r3, r3, r1, lsl #24
 2482 0046 9360     		str	r3, [r2, #8]
 2483              	.LVL263:
  64:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2484              		.loc 5 64 0
 2485 0048 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 2486 004a D360     		str	r3, [r2, #12]
  65:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2487              		.loc 5 65 0
 2488 004c 617A     		ldrb	r1, [r4, #9]	@ zero_extendqisi2
 2489 004e 43EA0123 		orr	r3, r3, r1, lsl #8
 2490 0052 D360     		str	r3, [r2, #12]
  66:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2491              		.loc 5 66 0
 2492 0054 A17A     		ldrb	r1, [r4, #10]	@ zero_extendqisi2
 2493 0056 43EA0143 		orr	r3, r3, r1, lsl #16
 2494 005a D360     		str	r3, [r2, #12]
  67:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
 2495              		.loc 5 67 0
 2496 005c E17A     		ldrb	r1, [r4, #11]	@ zero_extendqisi2
 2497 005e 43EA0163 		orr	r3, r3, r1, lsl #24
 2498 0062 D360     		str	r3, [r2, #12]
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 2499              		.loc 5 70 0
 2500 0064 03B0     		add	sp, sp, #12
 2501              	.LCFI24:
 2502              		.cfi_def_cfa_offset 12
 2503              		@ sp needed
 2504 0066 30BD     		pop	{r4, r5, pc}
 2505              		.cfi_endproc
 2506              	.LFE1145:
 2507              		.cantunwind
 2508              		.fnend
 2510              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 2511              		.align	1
 2512              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 2513              		.thumb
 2514              		.thumb_func
 2516              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 2517              		.fnstart
 2518              	.LFB1075:
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2519              		.loc 4 123 0
 2520              		.cfi_startproc
 2521              		@ args = 0, pretend = 0, frame = 8
 2522              		@ frame_needed = 0, uses_anonymous_args = 0
 2523              	.LVL264:
 2524 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2525              	.LCFI25:
 2526              		.cfi_def_cfa_offset 32
 2527              		.cfi_offset 4, -20
 2528              		.cfi_offset 5, -16
 2529              		.cfi_offset 6, -12
 2530              		.cfi_offset 7, -8
 2531              		.cfi_offset 14, -4
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 2532              		.loc 4 126 0
 2533 0002 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 2534              	.LVL265:
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2535              		.loc 4 127 0
 2536 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2537              		.loc 4 123 0
 2538 0006 0446     		mov	r4, r0
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2539              		.loc 4 127 0
 2540 0008 AB42     		cmp	r3, r5
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2541              		.loc 4 123 0
 2542 000a 0E46     		mov	r6, r1
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2543              		.loc 4 127 0
 2544 000c 04D2     		bcs	.L137
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2545              		.loc 4 128 0
 2546 000e A900     		lsls	r1, r5, #2
 2547              	.LVL266:
 2548 0010 C068     		ldr	r0, [r0, #12]
 2549              	.LVL267:
 2550 0012 FFF7FEFF 		bl	realloc
 2551              	.LVL268:
 2552 0016 E060     		str	r0, [r4, #12]
 2553              	.L137:
 2554              	.LVL269:
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 2555              		.loc 4 130 0
 2556 0018 2571     		strb	r5, [r4, #4]
 2557              	.LVL270:
 2558 001a 321D     		adds	r2, r6, #4
 2559 001c 0021     		movs	r1, #0
 2560              	.LVL271:
 2561              	.L139:
 2562              	.LBB228:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2563              		.loc 4 131 0 discriminator 3
 2564 001e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2565 0020 4F1C     		adds	r7, r1, #1
 2566 0022 C9B2     		uxtb	r1, r1
 2567 0024 8B42     		cmp	r3, r1
 2568 0026 A2EB0605 		sub	r5, r2, r6
 2569              	.LVL272:
 2570 002a 02F10402 		add	r2, r2, #4
 2571 002e 14D9     		bls	.L138
 2572              	.LVL273:
 2573              	.LBB229:
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 2574              		.loc 4 141 0 discriminator 2
 2575 0030 12F8023C 		ldrb	r3, [r2, #-2]	@ zero_extendqisi2
 2576              	.LVL274:
 2577 0034 12F8030C 		ldrb	r0, [r2, #-3]	@ zero_extendqisi2
 2578              	.LVL275:
 2579 0038 1B04     		lsls	r3, r3, #16
 2580              	.LVL276:
 2581 003a 43EA0023 		orr	r3, r3, r0, lsl #8
 2582 003e 12F8040C 		ldrb	r0, [r2, #-4]	@ zero_extendqisi2
 2583              	.LVL277:
 2584 0042 0343     		orrs	r3, r3, r0
 2585 0044 12F8010C 		ldrb	r0, [r2, #-1]	@ zero_extendqisi2
 2586 0048 43EA0063 		orr	r3, r3, r0, lsl #24
 2587 004c A360     		str	r3, [r4, #8]
 2588              	.LVL278:
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2589              		.loc 4 143 0 discriminator 2
 2590 004e A068     		ldr	r0, [r4, #8]	@ unaligned
 2591 0050 E368     		ldr	r3, [r4, #12]
 2592 0052 43F82100 		str	r0, [r3, r1, lsl #2]	@ unaligned
 2593              	.LVL279:
 2594              	.LBE229:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2595              		.loc 4 131 0 discriminator 2
 2596 0056 3946     		mov	r1, r7
 2597 0058 E1E7     		b	.L139
 2598              	.LVL280:
 2599              	.L138:
 2600              	.LBE228:
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 2601              		.loc 4 145 0
 2602 005a 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2603              	.LVL281:
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 2604              		.loc 4 146 0
 2605 005c 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 2606 005e BB42     		cmp	r3, r7
 2607 0060 04D2     		bcs	.L140
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2608              		.loc 4 147 0
 2609 0062 B900     		lsls	r1, r7, #2
 2610 0064 A069     		ldr	r0, [r4, #24]
 2611 0066 FFF7FEFF 		bl	realloc
 2612              	.LVL282:
 2613 006a A061     		str	r0, [r4, #24]
 2614              	.L140:
 2615              	.LVL283:
 2616 006c 2B1D     		adds	r3, r5, #4
 2617              	.LVL284:
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 2618              		.loc 4 149 0
 2619 006e 2774     		strb	r7, [r4, #16]
 2620              	.LVL285:
 2621 0070 3344     		add	r3, r3, r6
 2622              	.LVL286:
 2623 0072 0022     		movs	r2, #0
 2624              	.LVL287:
 2625              	.L142:
 2626              	.LBB230:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2627              		.loc 4 150 0 discriminator 3
 2628 0074 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 2629 0076 571C     		adds	r7, r2, #1
 2630 0078 D2B2     		uxtb	r2, r2
 2631 007a 9142     		cmp	r1, r2
 2632 007c A3EB0605 		sub	r5, r3, r6
 2633              	.LVL288:
 2634 0080 03F10403 		add	r3, r3, #4
 2635 0084 14D9     		bls	.L141
 2636              	.LVL289:
 2637              	.LBB231:
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 2638              		.loc 4 159 0 discriminator 2
 2639 0086 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 2640 008a 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2641 008e 0904     		lsls	r1, r1, #16
 2642              	.LVL290:
 2643 0090 41EA0021 		orr	r1, r1, r0, lsl #8
 2644              	.LVL291:
 2645 0094 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2646 0098 0143     		orrs	r1, r1, r0
 2647 009a 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2648              	.LVL292:
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 2649              		.loc 4 160 0 discriminator 2
 2650 009e 41EA0061 		orr	r1, r1, r0, lsl #24
 2651 00a2 6161     		str	r1, [r4, #20]	@ float
 2652              	.LVL293:
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2653              		.loc 4 162 0 discriminator 2
 2654 00a4 6069     		ldr	r0, [r4, #20]	@ unaligned
 2655 00a6 A169     		ldr	r1, [r4, #24]
 2656 00a8 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 2657              	.LVL294:
 2658              	.LBE231:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2659              		.loc 4 150 0 discriminator 2
 2660 00ac 3A46     		mov	r2, r7
 2661 00ae E1E7     		b	.L142
 2662              	.LVL295:
 2663              	.L141:
 2664              	.LBE230:
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 2665              		.loc 4 164 0
 2666 00b0 775D     		ldrb	r7, [r6, r5]	@ zero_extendqisi2
 2667              	.LVL296:
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 2668              		.loc 4 165 0
 2669 00b2 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 2670 00b4 BB42     		cmp	r3, r7
 2671 00b6 04D2     		bcs	.L143
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2672              		.loc 4 166 0
 2673 00b8 B900     		lsls	r1, r7, #2
 2674 00ba 606A     		ldr	r0, [r4, #36]
 2675 00bc FFF7FEFF 		bl	realloc
 2676              	.LVL297:
 2677 00c0 6062     		str	r0, [r4, #36]
 2678              	.L143:
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 2679              		.loc 4 167 0
 2680 00c2 2B1D     		adds	r3, r5, #4
 2681              	.LVL298:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2682              		.loc 4 168 0
 2683 00c4 0025     		movs	r5, #0
 2684              	.LBB232:
 2685              	.LBB233:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2686              		.loc 4 176 0
 2687 00c6 AE46     		mov	lr, r5
 2688              	.LBE233:
 2689              	.LBE232:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2690              		.loc 4 168 0
 2691 00c8 2777     		strb	r7, [r4, #28]
 2692              	.LVL299:
 2693              	.L147:
 2694              	.LBB237:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2695              		.loc 4 169 0 discriminator 1
 2696 00ca 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 2697 00cc EFB2     		uxtb	r7, r5
 2698 00ce BA42     		cmp	r2, r7
 2699 00d0 19D9     		bls	.L144
 2700              	.LBB236:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2701              		.loc 4 171 0
 2702 00d2 F058     		ldr	r0, [r6, r3]	@ unaligned
 2703              	.LBB234:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2704              		.loc 4 173 0
 2705 00d4 1A1D     		adds	r2, r3, #4
 2706              	.LBE234:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2707              		.loc 4 171 0
 2708 00d6 0190     		str	r0, [sp, #4]	@ unaligned
 2709              	.LVL300:
 2710              	.LBB235:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2711              		.loc 4 173 0
 2712 00d8 019B     		ldr	r3, [sp, #4]
 2713 00da B118     		adds	r1, r6, r2
 2714 00dc 1344     		add	r3, r3, r2
 2715              	.LVL301:
 2716              	.L146:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2717              		.loc 4 173 0 is_stmt 0 discriminator 3
 2718 00de 881B     		subs	r0, r1, r6
 2719              	.LVL302:
 2720 00e0 8342     		cmp	r3, r0
 2721 00e2 04D9     		bls	.L145
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2722              		.loc 4 174 0 is_stmt 1 discriminator 2
 2723 00e4 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 2724              	.LVL303:
 2725 00e8 01F8020C 		strb	r0, [r1, #-2]
 2726              	.LVL304:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2727              		.loc 4 173 0 discriminator 2
 2728 00ec F7E7     		b	.L146
 2729              	.LVL305:
 2730              	.L145:
 2731              	.LBE235:
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2732              		.loc 4 177 0 discriminator 2
 2733 00ee 013A     		subs	r2, r2, #1
 2734              	.LVL306:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2735              		.loc 4 176 0 discriminator 2
 2736 00f0 F118     		adds	r1, r6, r3
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2737              		.loc 4 177 0 discriminator 2
 2738 00f2 3244     		add	r2, r2, r6
 2739              	.LVL307:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2740              		.loc 4 176 0 discriminator 2
 2741 00f4 01F801EC 		strb	lr, [r1, #-1]
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2742              		.loc 4 177 0 discriminator 2
 2743 00f8 2262     		str	r2, [r4, #32]
 2744              	.LVL308:
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2745              		.loc 4 179 0 discriminator 2
 2746 00fa 216A     		ldr	r1, [r4, #32]	@ unaligned
 2747 00fc 626A     		ldr	r2, [r4, #36]
 2748 00fe 0135     		adds	r5, r5, #1
 2749              	.LVL309:
 2750 0100 42F82710 		str	r1, [r2, r7, lsl #2]	@ unaligned
 2751              	.LVL310:
 2752              	.LBE236:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2753              		.loc 4 169 0 discriminator 2
 2754 0104 E1E7     		b	.L147
 2755              	.LVL311:
 2756              	.L144:
 2757              	.LBE237:
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2758              		.loc 4 182 0
 2759 0106 1846     		mov	r0, r3
 2760 0108 03B0     		add	sp, sp, #12
 2761              	.LCFI26:
 2762              		.cfi_def_cfa_offset 20
 2763              		@ sp needed
 2764 010a F0BD     		pop	{r4, r5, r6, r7, pc}
 2765              		.cfi_endproc
 2766              	.LFE1075:
 2767              		.cantunwind
 2768              		.fnend
 2770              		.section	.text._ZN8std_msgs16MultiArrayLayout11deserializeEPh,"axG",%progbits,_ZN8std_msgs16MultiA
 2771              		.align	1
 2772              		.weak	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 2773              		.thumb
 2774              		.thumb_func
 2776              	_ZN8std_msgs16MultiArrayLayout11deserializeEPh:
 2777              		.fnstart
 2778              	.LFB1152:
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2779              		.loc 6 45 0
 2780              		.cfi_startproc
 2781              		@ args = 0, pretend = 0, frame = 0
 2782              		@ frame_needed = 0, uses_anonymous_args = 0
 2783              	.LVL312:
 2784 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2785              	.LCFI27:
 2786              		.cfi_def_cfa_offset 32
 2787              		.cfi_offset 4, -32
 2788              		.cfi_offset 5, -28
 2789              		.cfi_offset 6, -24
 2790              		.cfi_offset 7, -20
 2791              		.cfi_offset 8, -16
 2792              		.cfi_offset 9, -12
 2793              		.cfi_offset 10, -8
 2794              		.cfi_offset 14, -4
  48:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       if(dim_lengthT > dim_length)
 2795              		.loc 6 48 0
 2796 0004 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 2797              	.LVL313:
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2798              		.loc 6 49 0
 2799 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2800              		.loc 6 45 0
 2801 0008 0446     		mov	r4, r0
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2802              		.loc 6 49 0
 2803 000a AB42     		cmp	r3, r5
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2804              		.loc 6 45 0
 2805 000c 0F46     		mov	r7, r1
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2806              		.loc 6 49 0
 2807 000e 04D2     		bcs	.L150
  50:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += 3;
 2808              		.loc 6 50 0
 2809 0010 2901     		lsls	r1, r5, #4
 2810              	.LVL314:
 2811 0012 8069     		ldr	r0, [r0, #24]
 2812              	.LVL315:
 2813 0014 FFF7FEFF 		bl	realloc
 2814              	.LVL316:
 2815 0018 A061     		str	r0, [r4, #24]
 2816              	.L150:
 2817              	.LVL317:
  52:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 2818              		.loc 6 52 0
 2819 001a 2571     		strb	r5, [r4, #4]
 2820              	.LVL318:
 2821 001c 0023     		movs	r3, #0
  51:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length = dim_lengthT;
 2822              		.loc 6 51 0
 2823 001e 0426     		movs	r6, #4
 2824              	.LBB238:
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2825              		.loc 6 54 0
 2826 0020 04F10808 		add	r8, r4, #8
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2827              		.loc 6 55 0
 2828 0024 04F1180A 		add	r10, r4, #24
 2829              	.LVL319:
 2830              	.L153:
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
 2831              		.loc 6 53 0 discriminator 3
 2832 0028 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 2833 002a DDB2     		uxtb	r5, r3
 2834 002c AA42     		cmp	r2, r5
 2835 002e 03F10109 		add	r9, r3, #1
 2836 0032 07EB0601 		add	r1, r7, r6
 2837 0036 0FD9     		bls	.L151
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2838              		.loc 6 54 0 discriminator 2
 2839 0038 4046     		mov	r0, r8
 2840 003a FFF7FEFF 		bl	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 2841              	.LVL320:
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2842              		.loc 6 55 0 discriminator 2
 2843 003e 4246     		mov	r2, r8
 2844 0040 A369     		ldr	r3, [r4, #24]
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2845              		.loc 6 54 0 discriminator 2
 2846 0042 0644     		add	r6, r6, r0
 2847              	.LVL321:
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2848              		.loc 6 55 0 discriminator 2
 2849 0044 03EB0513 		add	r3, r3, r5, lsl #4
 2850              	.L152:
 2851 0048 52F8041B 		ldr	r1, [r2], #4	@ unaligned
 2852 004c 5245     		cmp	r2, r10
 2853 004e 43F8041B 		str	r1, [r3], #4	@ unaligned
 2854 0052 F9D1     		bne	.L152
 2855              	.LVL322:
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
 2856              		.loc 6 53 0 discriminator 2
 2857 0054 4B46     		mov	r3, r9
 2858 0056 E7E7     		b	.L153
 2859              	.LVL323:
 2860              	.L151:
 2861              	.LBE238:
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2862              		.loc 6 57 0
 2863 0058 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
 2864              	.LVL324:
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
 2865              		.loc 6 63 0
 2866 005a 301D     		adds	r0, r6, #4
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2867              		.loc 6 57 0
 2868 005c E361     		str	r3, [r4, #28]
  58:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2869              		.loc 6 58 0
 2870 005e 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 2871 0060 43EA0223 		orr	r3, r3, r2, lsl #8
 2872 0064 E361     		str	r3, [r4, #28]
  59:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2873              		.loc 6 59 0
 2874 0066 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 2875 0068 43EA0243 		orr	r3, r3, r2, lsl #16
 2876 006c E361     		str	r3, [r4, #28]
  60:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
 2877              		.loc 6 60 0
 2878 006e CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 2879 0070 43EA0263 		orr	r3, r3, r2, lsl #24
 2880 0074 E361     		str	r3, [r4, #28]
 2881              	.LVL325:
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
 2882              		.loc 6 63 0
 2883 0076 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2884              		.cfi_endproc
 2885              	.LFE1152:
 2886              		.cantunwind
 2887              		.fnend
 2889              		.section	.text._ZN8std_msgs17Float32MultiArray11deserializeEPh,"axG",%progbits,_ZN8std_msgs17Float
 2890              		.align	1
 2891              		.weak	_ZN8std_msgs17Float32MultiArray11deserializeEPh
 2892              		.thumb
 2893              		.thumb_func
 2895              	_ZN8std_msgs17Float32MultiArray11deserializeEPh:
 2896              		.fnstart
 2897              	.LFB1159:
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2898              		.loc 7 50 0
 2899              		.cfi_startproc
 2900              		@ args = 0, pretend = 0, frame = 0
 2901              		@ frame_needed = 0, uses_anonymous_args = 0
 2902              	.LVL326:
 2903 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2904              	.LCFI28:
 2905              		.cfi_def_cfa_offset 24
 2906              		.cfi_offset 3, -24
 2907              		.cfi_offset 4, -20
 2908              		.cfi_offset 5, -16
 2909              		.cfi_offset 6, -12
 2910              		.cfi_offset 7, -8
 2911              		.cfi_offset 14, -4
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2912              		.loc 7 50 0
 2913 0002 0446     		mov	r4, r0
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2914              		.loc 7 53 0
 2915 0004 0430     		adds	r0, r0, #4
 2916              	.LVL327:
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2917              		.loc 7 50 0
 2918 0006 0D46     		mov	r5, r1
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2919              		.loc 7 53 0
 2920 0008 FFF7FEFF 		bl	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 2921              	.LVL328:
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
 2922              		.loc 7 55 0
 2923 000c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
  54:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       if(data_lengthT > data_length)
 2924              		.loc 7 54 0
 2925 0010 2F5C     		ldrb	r7, [r5, r0]	@ zero_extendqisi2
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2926              		.loc 7 53 0
 2927 0012 0646     		mov	r6, r0
 2928              	.LVL329:
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
 2929              		.loc 7 55 0
 2930 0014 BB42     		cmp	r3, r7
 2931 0016 04D2     		bcs	.L156
  56:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += 3;
 2932              		.loc 7 56 0
 2933 0018 B900     		lsls	r1, r7, #2
 2934 001a E06A     		ldr	r0, [r4, #44]
 2935              	.LVL330:
 2936 001c FFF7FEFF 		bl	realloc
 2937              	.LVL331:
 2938 0020 E062     		str	r0, [r4, #44]
 2939              	.L156:
 2940              	.LVL332:
 2941 0022 331D     		adds	r3, r6, #4
 2942              	.LVL333:
  58:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
 2943              		.loc 7 58 0
 2944 0024 84F82470 		strb	r7, [r4, #36]
 2945              	.LVL334:
 2946 0028 2B44     		add	r3, r3, r5
 2947              	.LVL335:
 2948 002a 0022     		movs	r2, #0
 2949              	.LVL336:
 2950              	.L158:
 2951              	.LBB239:
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 2952              		.loc 7 59 0 discriminator 3
 2953 002c 94F82410 		ldrb	r1, [r4, #36]	@ zero_extendqisi2
 2954 0030 561C     		adds	r6, r2, #1
 2955 0032 D2B2     		uxtb	r2, r2
 2956 0034 9142     		cmp	r1, r2
 2957 0036 A3EB0500 		sub	r0, r3, r5
 2958              	.LVL337:
 2959 003a 03F10403 		add	r3, r3, #4
 2960 003e 14D9     		bls	.L157
 2961              	.LVL338:
 2962              	.LBB240:
  68:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       this->st_data = u_st_data.real;
 2963              		.loc 7 68 0 discriminator 2
 2964 0040 13F8021C 		ldrb	r1, [r3, #-2]	@ zero_extendqisi2
 2965 0044 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2966              	.LVL339:
 2967 0048 0904     		lsls	r1, r1, #16
 2968              	.LVL340:
 2969 004a 41EA0021 		orr	r1, r1, r0, lsl #8
 2970              	.LVL341:
 2971 004e 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2972 0052 0143     		orrs	r1, r1, r0
 2973 0054 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2974              	.LVL342:
  69:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->st_data);
 2975              		.loc 7 69 0 discriminator 2
 2976 0058 41EA0061 		orr	r1, r1, r0, lsl #24
 2977 005c A162     		str	r1, [r4, #40]	@ float
 2978              	.LVL343:
  71:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
 2979              		.loc 7 71 0 discriminator 2
 2980 005e A06A     		ldr	r0, [r4, #40]	@ unaligned
 2981 0060 E16A     		ldr	r1, [r4, #44]
 2982 0062 41F82200 		str	r0, [r1, r2, lsl #2]	@ unaligned
 2983              	.LVL344:
 2984              	.LBE240:
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 2985              		.loc 7 59 0 discriminator 2
 2986 0066 3246     		mov	r2, r6
 2987 0068 E0E7     		b	.L158
 2988              	.LVL345:
 2989              	.L157:
 2990              	.LBE239:
  74:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
 2991              		.loc 7 74 0
 2992 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2993              		.cfi_endproc
 2994              	.LFE1159:
 2995              		.cantunwind
 2996              		.fnend
 2998              		.global	__aeabi_fcmpgt
 2999              		.global	__aeabi_fcmplt
 3000              		.global	__aeabi_fadd
 3001              		.global	__aeabi_fsub
 3002              		.text
 3003              		.align	1
 3004              		.global	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 3005              		.thumb
 3006              		.thumb_func
 3008              	_Z8motor_cbRKN12roberto_msgs10MotorStateE:
 3009              		.fnstart
 3010              	.LFB1280:
  61:src/main.cpp  **** }
  62:src/main.cpp  **** 
  63:src/main.cpp  **** 
  64:src/main.cpp  **** 
  65:src/main.cpp  **** void motor_cb( const roberto_msgs::MotorState& cmd_msg){
 3011              		.loc 13 65 0
 3012              		.cfi_startproc
 3013              		@ args = 0, pretend = 0, frame = 0
 3014              		@ frame_needed = 0, uses_anonymous_args = 0
 3015              	.LVL346:
 3016 0014 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3017              		.save {r4, r5, r6, r7, r8, lr}
 3018              	.LCFI29:
 3019              		.cfi_def_cfa_offset 24
 3020              		.cfi_offset 4, -24
 3021              		.cfi_offset 5, -20
 3022              		.cfi_offset 6, -16
 3023              		.cfi_offset 7, -12
 3024              		.cfi_offset 8, -8
 3025              		.cfi_offset 14, -4
  66:src/main.cpp  ****   if(!initialized)
 3026              		.loc 13 66 0
 3027 0018 3A4C     		ldr	r4, .L174
  65:src/main.cpp  ****   if(!initialized)
 3028              		.loc 13 65 0
 3029 001a 0546     		mov	r5, r0
 3030              		.loc 13 66 0
 3031 001c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3032 001e 002B     		cmp	r3, #0
 3033 0020 6DD0     		beq	.L159
 3034              	.LVL347:
 3035              	.LBB249:
 3036              	.LBB250:
  67:src/main.cpp  ****     return;
  68:src/main.cpp  ****   lastMsg = millis();
 3037              		.loc 13 68 0
 3038 0022 FFF7FEFF 		bl	millis
 3039              	.LVL348:
  69:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
  70:src/main.cpp  ****   if(intMode == cmd_msg.DRIVE_MODE_AUTO){
  71:src/main.cpp  **** 
  72:src/main.cpp  ****   }
  73:src/main.cpp  **** 
  74:src/main.cpp  ****   if(currentMode != intMode){
 3040              		.loc 13 74 0
 3041 0026 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
  69:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
 3042              		.loc 13 69 0
 3043 0028 95F82860 		ldrb	r6, [r5, #40]	@ zero_extendqisi2
 3044              	.LVL349:
  68:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
 3045              		.loc 13 68 0
 3046 002c 6060     		str	r0, [r4, #4]
 3047              		.loc 13 74 0
 3048 002e B342     		cmp	r3, r6
  75:src/main.cpp  ****     waitForServos = true;
 3049              		.loc 13 75 0
 3050 0030 1CBF     		itt	ne
 3051 0032 0123     		movne	r3, #1
 3052 0034 6372     		strbne	r3, [r4, #9]
 3053              	.LBB251:
  76:src/main.cpp  ****   }
  77:src/main.cpp  **** 
  78:src/main.cpp  ****   if(intMode == cmd_msg.DRIVE_MODE_PIVOT){
 3054              		.loc 13 78 0
 3055 0036 012E     		cmp	r6, #1
 3056 0038 39D1     		bne	.L162
 3057              	.LVL350:
 3058              	.LBB252:
  79:src/main.cpp  ****     float speedMult = 1;
  80:src/main.cpp  ****     float angle[2] = {0, 0};
  81:src/main.cpp  ****     /*if (cmd_msg.heading_angle != 0){
  82:src/main.cpp  ****       float R = (1+cmd_msg.heading_angle*cmd_msg.heading_angle)/(2*cmd_msg.heading_angle);
  83:src/main.cpp  ****       //angle[0] = atan(L/(B+R));   // B=L as robot is quadratic
  84:src/main.cpp  ****       angle[0] = cmd_msg.heading_angle - atan(L/(L+R));
  85:src/main.cpp  ****       angle[1] = cmd_msg.heading_angle + atan(L/(L-R));
  86:src/main.cpp  ****     }else{
  87:src/main.cpp  ****       angle[0] = 0;
  88:src/main.cpp  ****       angle[1] = 0;
  89:src/main.cpp  ****     }
  90:src/main.cpp  **** 
  91:src/main.cpp  **** 
  92:src/main.cpp  ****     if(cmd_msg.heading_angle > 0){
  93:src/main.cpp  ****       servo_left->setReference(angle[0]+135);
  94:src/main.cpp  ****       servo_right->setReference(-angle[1]+135);
  95:src/main.cpp  **** 
  96:src/main.cpp  ****     }else{
  97:src/main.cpp  ****       servo_left->setReference(angle[1]+135);
  98:src/main.cpp  ****       servo_right->setReference(-angle[0]+135);
  99:src/main.cpp  ****     }*/
 100:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed*speedMult;
 3059              		.loc 13 100 0
 3060 003a 2B6A     		ldr	r3, [r5, #32]	@ float
 101:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult;
 102:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed*speedMult;
 103:src/main.cpp  ****     motorCmd[3] = cmd_msg.speed*speedMult;
 104:src/main.cpp  ****     angle[0] = cmd_msg.heading_angle;
 3061              		.loc 13 104 0
 3062 003c AD69     		ldr	r5, [r5, #24]	@ float
 3063              	.LVL351:
 100:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult;
 3064              		.loc 13 100 0
 3065 003e E360     		str	r3, [r4, #12]	@ float
 101:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult;
 3066              		.loc 13 101 0
 3067 0040 2361     		str	r3, [r4, #16]	@ float
 102:src/main.cpp  ****     motorCmd[3] = cmd_msg.speed*speedMult;
 3068              		.loc 13 102 0
 3069 0042 6361     		str	r3, [r4, #20]	@ float
 103:src/main.cpp  ****     angle[0] = cmd_msg.heading_angle;
 3070              		.loc 13 103 0
 3071 0044 A361     		str	r3, [r4, #24]	@ float
 105:src/main.cpp  ****     angle[1] = cmd_msg.heading_angle;
 106:src/main.cpp  ****     angle[0] = angle[0] > MAX_ANGLE_PIVOT? MAX_ANGLE_PIVOT : ( angle[0] < -MAX_ANGLE_PIVOT? -MAX_AN
 3072              		.loc 13 106 0
 3073 0046 3049     		ldr	r1, .L174+4
 3074 0048 2846     		mov	r0, r5
 3075 004a FFF7FEFF 		bl	__aeabi_fcmpgt
 3076              	.LVL352:
 3077 004e 98B9     		cbnz	r0, .L167
 3078 0050 2E49     		ldr	r1, .L174+8
 3079 0052 2846     		mov	r0, r5
 3080 0054 FFF7FEFF 		bl	__aeabi_fcmplt
 3081              	.LVL353:
 3082 0058 08B9     		cbnz	r0, .L168
 3083 005a 2F46     		mov	r7, r5
 3084 005c 00E0     		b	.L164
 3085              	.L168:
 3086 005e 2B4F     		ldr	r7, .L174+8
 3087              	.L164:
 3088              	.LVL354:
 107:src/main.cpp  ****     angle[1] = angle[1] > MAX_ANGLE_PIVOT? MAX_ANGLE_PIVOT : ( angle[1] < -MAX_ANGLE_PIVOT? -MAX_AN
 3089              		.loc 13 107 0
 3090 0060 2949     		ldr	r1, .L174+4
 3091 0062 2846     		mov	r0, r5
 3092 0064 FFF7FEFF 		bl	__aeabi_fcmpgt
 3093              	.LVL355:
 3094 0068 48B9     		cbnz	r0, .L169
 3095 006a 2849     		ldr	r1, .L174+8
 3096 006c 2846     		mov	r0, r5
 3097 006e FFF7FEFF 		bl	__aeabi_fcmplt
 3098              	.LVL356:
 3099 0072 28B1     		cbz	r0, .L163
 3100 0074 254D     		ldr	r5, .L174+8
 3101              	.LVL357:
 3102 0076 03E0     		b	.L163
 3103              	.LVL358:
 3104              	.L167:
 106:src/main.cpp  ****     angle[1] = angle[1] > MAX_ANGLE_PIVOT? MAX_ANGLE_PIVOT : ( angle[1] < -MAX_ANGLE_PIVOT? -MAX_AN
 3105              		.loc 13 106 0
 3106 0078 234F     		ldr	r7, .L174+4
 3107              		.loc 13 107 0
 3108 007a 3D46     		mov	r5, r7
 3109              	.LVL359:
 3110 007c 00E0     		b	.L163
 3111              	.LVL360:
 3112              	.L169:
 3113 007e 224D     		ldr	r5, .L174+4
 3114              	.LVL361:
 3115              	.L163:
 108:src/main.cpp  ****     servo_left->setReference(135+angle[0]);
 3116              		.loc 13 108 0
 3117 0080 2349     		ldr	r1, .L174+12
 3118 0082 3846     		mov	r0, r7
 3119 0084 FFF7FEFF 		bl	__aeabi_fadd
 3120              	.LVL362:
 3121 0088 D4F81C80 		ldr	r8, [r4, #28]
 3122 008c 0146     		mov	r1, r0
 3123 008e D8F80030 		ldr	r3, [r8]
 3124 0092 4046     		mov	r0, r8
 3125 0094 5B69     		ldr	r3, [r3, #20]
 3126 0096 9847     		blx	r3
 3127              	.LVL363:
 109:src/main.cpp  ****     servo_right->setReference(135-angle[1]);
 3128              		.loc 13 109 0
 3129 0098 2946     		mov	r1, r5
 3130 009a 1D48     		ldr	r0, .L174+12
 3131 009c FFF7FEFF 		bl	__aeabi_fsub
 3132              	.LVL364:
 3133 00a0 276A     		ldr	r7, [r4, #32]
 3134 00a2 0146     		mov	r1, r0
 3135 00a4 3B68     		ldr	r3, [r7]
 3136 00a6 3846     		mov	r0, r7
 3137 00a8 5B69     		ldr	r3, [r3, #20]
 3138 00aa 9847     		blx	r3
 3139              	.LVL365:
 3140 00ac 26E0     		b	.L165
 3141              	.LVL366:
 3142              	.L162:
 3143              	.LBE252:
 3144              	.LBB253:
 110:src/main.cpp  **** 
 111:src/main.cpp  ****   }else if(intMode == cmd_msg.DRIVE_MODE_SPIN){
 3145              		.loc 13 111 0
 3146 00ae 022E     		cmp	r6, #2
 3147 00b0 11D1     		bne	.L166
 3148              	.LVL367:
 3149              	.LBB254:
 112:src/main.cpp  ****     float h = 90;
 113:src/main.cpp  ****     servo_left->setReference(h);
 3150              		.loc 13 113 0
 3151 00b2 E069     		ldr	r0, [r4, #28]
 3152 00b4 1749     		ldr	r1, .L174+16
 3153 00b6 0368     		ldr	r3, [r0]
 3154 00b8 5B69     		ldr	r3, [r3, #20]
 3155 00ba 9847     		blx	r3
 3156              	.LVL368:
 114:src/main.cpp  ****     servo_right->setReference(h);
 3157              		.loc 13 114 0
 3158 00bc 206A     		ldr	r0, [r4, #32]
 3159 00be 1549     		ldr	r1, .L174+16
 3160 00c0 0368     		ldr	r3, [r0]
 3161 00c2 5B69     		ldr	r3, [r3, #20]
 3162 00c4 9847     		blx	r3
 3163              	.LVL369:
 115:src/main.cpp  **** 
 116:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed;
 3164              		.loc 13 116 0
 3165 00c6 2B6A     		ldr	r3, [r5, #32]	@ float
 117:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed;
 3166              		.loc 13 117 0
 3167 00c8 03F10042 		add	r2, r3, #-2147483648
 116:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed;
 3168              		.loc 13 116 0
 3169 00cc E360     		str	r3, [r4, #12]	@ float
 3170              		.loc 13 117 0
 3171 00ce 2261     		str	r2, [r4, #16]	@ float
 118:src/main.cpp  ****     motorCmd[2] = -cmd_msg.speed;
 3172              		.loc 13 118 0
 3173 00d0 6261     		str	r2, [r4, #20]	@ float
 119:src/main.cpp  ****     motorCmd[3] = cmd_msg.speed;
 3174              		.loc 13 119 0
 3175 00d2 A361     		str	r3, [r4, #24]	@ float
 3176 00d4 12E0     		b	.L165
 3177              	.LVL370:
 3178              	.L166:
 3179              	.LBE254:
 3180              	.LBB255:
 120:src/main.cpp  **** 
 121:src/main.cpp  ****   }else if(intMode == cmd_msg.DRIVE_MODE_SIDEWAYS){
 3181              		.loc 13 121 0
 3182 00d6 032E     		cmp	r6, #3
 3183 00d8 10D1     		bne	.L165
 3184              	.LVL371:
 3185              	.LBB256:
 122:src/main.cpp  ****     float h = 45;
 123:src/main.cpp  ****     servo_left->setReference(h);
 3186              		.loc 13 123 0
 3187 00da E069     		ldr	r0, [r4, #28]
 3188 00dc 0E49     		ldr	r1, .L174+20
 3189 00de 0368     		ldr	r3, [r0]
 3190 00e0 5B69     		ldr	r3, [r3, #20]
 3191 00e2 9847     		blx	r3
 3192              	.LVL372:
 124:src/main.cpp  ****     servo_right->setReference(h);
 3193              		.loc 13 124 0
 3194 00e4 206A     		ldr	r0, [r4, #32]
 3195 00e6 0C49     		ldr	r1, .L174+20
 3196 00e8 0368     		ldr	r3, [r0]
 3197 00ea 5B69     		ldr	r3, [r3, #20]
 3198 00ec 9847     		blx	r3
 3199              	.LVL373:
 125:src/main.cpp  **** 
 126:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed;  //FR
 3200              		.loc 13 126 0
 3201 00ee 2B6A     		ldr	r3, [r5, #32]	@ float
 127:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed; //FL
 3202              		.loc 13 127 0
 3203 00f0 03F10042 		add	r2, r3, #-2147483648
 126:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed; //FL
 3204              		.loc 13 126 0
 3205 00f4 E360     		str	r3, [r4, #12]	@ float
 3206              		.loc 13 127 0
 3207 00f6 2261     		str	r2, [r4, #16]	@ float
 128:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed; //RL
 3208              		.loc 13 128 0
 3209 00f8 6361     		str	r3, [r4, #20]	@ float
 129:src/main.cpp  ****     motorCmd[3] = -cmd_msg.speed;  //RR
 3210              		.loc 13 129 0
 3211 00fa A261     		str	r2, [r4, #24]	@ float
 3212              	.LVL374:
 3213              	.L165:
 3214              	.LBE256:
 3215              	.LBE255:
 3216              	.LBE253:
 3217              	.LBE251:
 130:src/main.cpp  ****   }
 131:src/main.cpp  ****   currentMode = intMode;
 3218              		.loc 13 131 0
 3219 00fc 2672     		strb	r6, [r4, #8]
 3220              	.LVL375:
 3221              	.L159:
 3222 00fe BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3223              	.L175:
 3224 0102 00BF     		.align	2
 3225              	.L174:
 3226 0104 00000000 		.word	.LANCHOR1
 3227 0108 00007041 		.word	1097859072
 3228 010c 000070C1 		.word	-1049624576
 3229 0110 00000743 		.word	1124532224
 3230 0114 0000B442 		.word	1119092736
 3231 0118 00003442 		.word	1110704128
 3232              	.LBE250:
 3233              	.LBE249:
 3234              		.cfi_endproc
 3235              	.LFE1280:
 3236              		.fnend
 3238              		.section	.text._ZN3ros3Msg19serializeAvrFloat64EPhf,"axG",%progbits,_ZN3ros3Msg19serializeAvrFloat
 3239              		.align	1
 3240              		.weak	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3241              		.thumb
 3242              		.thumb_func
 3244              	_ZN3ros3Msg19serializeAvrFloat64EPhf:
 3245              		.fnstart
 3246              	.LFB1021:
 3247              		.file 14 "./lib/ros_lib/ros/msg.h"
   1:./lib/ros_lib/ros/msg.h **** /* 
   2:./lib/ros_lib/ros/msg.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/msg.h ****  *
   4:./lib/ros_lib/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/msg.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/msg.h ****  *
   7:./lib/ros_lib/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/msg.h ****  * are met:
  10:./lib/ros_lib/ros/msg.h ****  *
  11:./lib/ros_lib/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/msg.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/msg.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/msg.h ****  *
  21:./lib/ros_lib/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/msg.h ****  */
  34:./lib/ros_lib/ros/msg.h **** 
  35:./lib/ros_lib/ros/msg.h **** #ifndef _ROS_MSG_H_
  36:./lib/ros_lib/ros/msg.h **** #define _ROS_MSG_H_
  37:./lib/ros_lib/ros/msg.h **** 
  38:./lib/ros_lib/ros/msg.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/msg.h **** 
  40:./lib/ros_lib/ros/msg.h **** namespace ros {
  41:./lib/ros_lib/ros/msg.h **** 
  42:./lib/ros_lib/ros/msg.h **** /* Base Message Type */
  43:./lib/ros_lib/ros/msg.h **** class Msg
  44:./lib/ros_lib/ros/msg.h **** {
  45:./lib/ros_lib/ros/msg.h **** public:
  46:./lib/ros_lib/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  47:./lib/ros_lib/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  48:./lib/ros_lib/ros/msg.h ****   virtual const char * getType() = 0;
  49:./lib/ros_lib/ros/msg.h ****   virtual const char * getMD5() = 0;
  50:./lib/ros_lib/ros/msg.h **** 
  51:./lib/ros_lib/ros/msg.h ****   /**
  52:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  53:./lib/ros_lib/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  54:./lib/ros_lib/ros/msg.h ****    *        fields, despite AVV having no native support for double.
  55:./lib/ros_lib/ros/msg.h ****    *
  56:./lib/ros_lib/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  57:./lib/ros_lib/ros/msg.h ****    * @param[in] f value to serialize.
  58:./lib/ros_lib/ros/msg.h ****    *
  59:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  60:./lib/ros_lib/ros/msg.h ****    *
  61:./lib/ros_lib/ros/msg.h ****    */
  62:./lib/ros_lib/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
 3248              		.loc 14 62 0
 3249              		.cfi_startproc
 3250              		@ args = 0, pretend = 0, frame = 0
 3251              		@ frame_needed = 0, uses_anonymous_args = 0
 3252              	.LVL376:
 3253 0000 38B5     		push	{r3, r4, r5, lr}
 3254              	.LCFI30:
 3255              		.cfi_def_cfa_offset 16
 3256              		.cfi_offset 3, -16
 3257              		.cfi_offset 4, -12
 3258              		.cfi_offset 5, -8
 3259              		.cfi_offset 14, -4
  63:./lib/ros_lib/ros/msg.h ****   {
  64:./lib/ros_lib/ros/msg.h ****     const int32_t* val = (int32_t*) &f;
  65:./lib/ros_lib/ros/msg.h ****     int32_t exp = ((*val >> 23) & 255);
 3260              		.loc 14 65 0
 3261 0002 C1F3C753 		ubfx	r3, r1, #23, #8
 3262              	.LVL377:
  62:./lib/ros_lib/ros/msg.h ****   {
 3263              		.loc 14 62 0
 3264 0006 0546     		mov	r5, r0
 3265              		.loc 14 65 0
 3266 0008 0A46     		mov	r2, r1
  62:./lib/ros_lib/ros/msg.h ****   {
 3267              		.loc 14 62 0
 3268 000a 0846     		mov	r0, r1
 3269              	.LVL378:
  66:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 3270              		.loc 14 66 0
 3271 000c 0BB1     		cbz	r3, .L177
  67:./lib/ros_lib/ros/msg.h ****     {
  68:./lib/ros_lib/ros/msg.h ****       exp += 1023 - 127;
 3272              		.loc 14 68 0
 3273 000e 03F56073 		add	r3, r3, #896
 3274              	.LVL379:
 3275              	.L177:
  69:./lib/ros_lib/ros/msg.h ****     }
  70:./lib/ros_lib/ros/msg.h **** 
  71:./lib/ros_lib/ros/msg.h ****     int32_t sig = *val;
  72:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3276              		.loc 14 72 0
 3277 0012 0021     		movs	r1, #0
 3278              	.LVL380:
 3279 0014 2970     		strb	r1, [r5]
 3280              	.LVL381:
  73:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3281              		.loc 14 73 0
 3282 0016 6970     		strb	r1, [r5, #1]
 3283              	.LVL382:
  74:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3284              		.loc 14 74 0
 3285 0018 A970     		strb	r1, [r5, #2]
 3286              	.LVL383:
  75:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 3287              		.loc 14 75 0
 3288 001a 5101     		lsls	r1, r2, #5
 3289 001c E970     		strb	r1, [r5, #3]
 3290              	.LVL384:
  76:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 3291              		.loc 14 76 0
 3292 001e D110     		asrs	r1, r2, #3
 3293 0020 2971     		strb	r1, [r5, #4]
 3294              	.LVL385:
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 3295              		.loc 14 77 0
 3296 0022 D112     		asrs	r1, r2, #11
  78:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 3297              		.loc 14 78 0
 3298 0024 C2F3C342 		ubfx	r2, r2, #19, #4
 3299 0028 42EA0312 		orr	r2, r2, r3, lsl #4
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 3300              		.loc 14 77 0
 3301 002c 6971     		strb	r1, [r5, #5]
 3302              	.LVL386:
 3303              		.loc 14 78 0
 3304 002e AA71     		strb	r2, [r5, #6]
 3305              	.LVL387:
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
  80:./lib/ros_lib/ros/msg.h **** 
  81:./lib/ros_lib/ros/msg.h ****     // Mark negative bit as necessary.
  82:./lib/ros_lib/ros/msg.h ****     if (f < 0)
 3306              		.loc 14 82 0
 3307 0030 0021     		movs	r1, #0
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 3308              		.loc 14 79 0
 3309 0032 C3F30714 		ubfx	r4, r3, #4, #8
 3310              		.loc 14 82 0
 3311 0036 FFF7FEFF 		bl	__aeabi_fcmplt
 3312              	.LVL388:
 3313 003a 08B9     		cbnz	r0, .L178
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 3314              		.loc 14 79 0
 3315 003c EC71     		strb	r4, [r5, #7]
 3316 003e 02E0     		b	.L179
 3317              	.L178:
  83:./lib/ros_lib/ros/msg.h ****     {
  84:./lib/ros_lib/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
 3318              		.loc 14 84 0
 3319 0040 64F07F03 		orn	r3, r4, #127
 3320 0044 EB71     		strb	r3, [r5, #7]
 3321              	.L179:
  85:./lib/ros_lib/ros/msg.h ****     }
  86:./lib/ros_lib/ros/msg.h **** 
  87:./lib/ros_lib/ros/msg.h ****     return 8;
  88:./lib/ros_lib/ros/msg.h ****   }
 3322              		.loc 14 88 0
 3323 0046 0820     		movs	r0, #8
 3324 0048 38BD     		pop	{r3, r4, r5, pc}
 3325              		.cfi_endproc
 3326              	.LFE1021:
 3327              		.cantunwind
 3328              		.fnend
 3330              		.section	.text._ZNK12roberto_msgs10MotorState9serializeEPh,"axG",%progbits,_ZNK12roberto_msgs10Mot
 3331              		.align	1
 3332              		.weak	_ZNK12roberto_msgs10MotorState9serializeEPh
 3333              		.thumb
 3334              		.thumb_func
 3336              	_ZNK12roberto_msgs10MotorState9serializeEPh:
 3337              		.fnstart
 3338              	.LFB1242:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3339              		.loc 10 37 0
 3340              		.cfi_startproc
 3341              		@ args = 0, pretend = 0, frame = 0
 3342              		@ frame_needed = 0, uses_anonymous_args = 0
 3343              	.LVL389:
 3344 0000 70B5     		push	{r4, r5, r6, lr}
 3345              	.LCFI31:
 3346              		.cfi_def_cfa_offset 16
 3347              		.cfi_offset 4, -16
 3348              		.cfi_offset 5, -12
 3349              		.cfi_offset 6, -8
 3350              		.cfi_offset 14, -4
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3351              		.loc 10 37 0
 3352 0002 0546     		mov	r5, r0
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3353              		.loc 10 40 0
 3354 0004 0430     		adds	r0, r0, #4
 3355              	.LVL390:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3356              		.loc 10 37 0
 3357 0006 0E46     		mov	r6, r1
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3358              		.loc 10 40 0
 3359 0008 FFF7FEFF 		bl	_ZNK8std_msgs6Header9serializeEPh
 3360              	.LVL391:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 3361              		.loc 10 41 0
 3362 000c A969     		ldr	r1, [r5, #24]	@ float
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3363              		.loc 10 40 0
 3364 000e 0446     		mov	r4, r0
 3365              	.LVL392:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 3366              		.loc 10 41 0
 3367 0010 3018     		adds	r0, r6, r0
 3368              	.LVL393:
 3369 0012 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3370              	.LVL394:
 3371 0016 0444     		add	r4, r4, r0
 3372              	.LVL395:
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
 3373              		.loc 10 42 0
 3374 0018 E969     		ldr	r1, [r5, #28]	@ float
 3375 001a 3019     		adds	r0, r6, r4
 3376 001c FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3377              	.LVL396:
 3378 0020 0444     		add	r4, r4, r0
 3379              	.LVL397:
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
 3380              		.loc 10 43 0
 3381 0022 296A     		ldr	r1, [r5, #32]	@ float
 3382 0024 3019     		adds	r0, r6, r4
 3383 0026 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3384              	.LVL398:
 3385 002a 0444     		add	r4, r4, r0
 3386              	.LVL399:
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
 3387              		.loc 10 44 0
 3388 002c 696A     		ldr	r1, [r5, #36]	@ float
 3389 002e 3019     		adds	r0, r6, r4
 3390 0030 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3391              	.LVL400:
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3392              		.loc 10 45 0
 3393 0034 95F82830 		ldrb	r3, [r5, #40]	@ zero_extendqisi2
 3394 0038 2044     		add	r0, r0, r4
 3395              	.LVL401:
 3396 003a 3354     		strb	r3, [r6, r0]
 3397              	.LVL402:
  48:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3398              		.loc 10 48 0
 3399 003c 0130     		adds	r0, r0, #1
 3400              	.LVL403:
 3401 003e 70BD     		pop	{r4, r5, r6, pc}
 3402              		.cfi_endproc
 3403              	.LFE1242:
 3404              		.cantunwind
 3405              		.fnend
 3407              		.section	.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf,"axG",%progbits,_ZN3ros3Msg21deserializeAv
 3408              		.align	1
 3409              		.weak	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3410              		.thumb
 3411              		.thumb_func
 3413              	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf:
 3414              		.fnstart
 3415              	.LFB1022:
  89:./lib/ros_lib/ros/msg.h **** 
  90:./lib/ros_lib/ros/msg.h ****   /**
  91:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
  92:./lib/ros_lib/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
  93:./lib/ros_lib/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
  94:./lib/ros_lib/ros/msg.h ****    *
  95:./lib/ros_lib/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
  96:./lib/ros_lib/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
  97:./lib/ros_lib/ros/msg.h ****    *
  98:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  99:./lib/ros_lib/ros/msg.h ****    */
 100:./lib/ros_lib/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 3416              		.loc 14 100 0
 3417              		.cfi_startproc
 3418              		@ args = 0, pretend = 0, frame = 0
 3419              		@ frame_needed = 0, uses_anonymous_args = 0
 3420              	.LVL404:
 3421 0000 30B5     		push	{r4, r5, lr}
 3422              	.LCFI32:
 3423              		.cfi_def_cfa_offset 12
 3424              		.cfi_offset 4, -12
 3425              		.cfi_offset 5, -8
 3426              		.cfi_offset 14, -4
 101:./lib/ros_lib/ros/msg.h ****   {
 102:./lib/ros_lib/ros/msg.h ****     uint32_t* val = (uint32_t*)f;
 103:./lib/ros_lib/ros/msg.h ****     inbuffer += 3;
 104:./lib/ros_lib/ros/msg.h **** 
 105:./lib/ros_lib/ros/msg.h ****     // Copy truncated mantissa.
 106:./lib/ros_lib/ros/msg.h ****     *val = ((uint32_t)(*(inbuffer++)) >> 5 & 0x07);
 3427              		.loc 14 106 0
 3428 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 3429 0004 5B09     		lsrs	r3, r3, #5
 3430 0006 0B60     		str	r3, [r1]
 3431              	.LVL405:
 107:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 3432              		.loc 14 107 0
 3433 0008 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 3434 000a 43EAC203 		orr	r3, r3, r2, lsl #3
 3435 000e 0B60     		str	r3, [r1]
 3436              	.LVL406:
 108:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 3437              		.loc 14 108 0
 3438 0010 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 3439 0012 43EAC222 		orr	r2, r3, r2, lsl #11
 3440 0016 0A60     		str	r2, [r1]
 109:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 3441              		.loc 14 109 0
 3442 0018 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 3443 001a DB04     		lsls	r3, r3, #19
 3444 001c 03F4F003 		and	r3, r3, #7864320
 3445 0020 1343     		orrs	r3, r3, r2
 3446 0022 0B60     		str	r3, [r1]
 3447              	.LVL407:
 110:./lib/ros_lib/ros/msg.h **** 
 111:./lib/ros_lib/ros/msg.h ****     // Copy truncated exponent.
 112:./lib/ros_lib/ros/msg.h ****     uint32_t exp = ((uint32_t)(*(inbuffer++)) & 0xf0)>>4;
 113:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 3448              		.loc 14 113 0
 3449 0024 C479     		ldrb	r4, [r0, #7]	@ zero_extendqisi2
 112:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 3450              		.loc 14 112 0
 3451 0026 8579     		ldrb	r5, [r0, #6]	@ zero_extendqisi2
 3452              	.LVL408:
 3453              		.loc 14 113 0
 3454 0028 2401     		lsls	r4, r4, #4
 3455 002a 04F4FE62 		and	r2, r4, #2032
 3456              	.LVL409:
 114:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 3457              		.loc 14 114 0
 3458 002e 52EA1512 		orrs	r2, r2, r5, lsr #4
 3459              	.LVL410:
 115:./lib/ros_lib/ros/msg.h ****     {
 116:./lib/ros_lib/ros/msg.h ****       *val |= ((exp) - 1023 + 127) << 23;
 3460              		.loc 14 116 0
 3461 0032 1EBF     		ittt	ne
 3462 0034 A2F56072 		subne	r2, r2, #896
 3463              	.LVL411:
 3464 0038 43EAC253 		orrne	r3, r3, r2, lsl #23
 3465 003c 0B60     		strne	r3, [r1]
 3466              	.LVL412:
 117:./lib/ros_lib/ros/msg.h ****     }  
 118:./lib/ros_lib/ros/msg.h **** 
 119:./lib/ros_lib/ros/msg.h ****     // Copy negative sign.
 120:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0x80) << 24;
 3467              		.loc 14 120 0
 3468 003e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 121:./lib/ros_lib/ros/msg.h **** 
 122:./lib/ros_lib/ros/msg.h ****     return 8;
 123:./lib/ros_lib/ros/msg.h ****   }
 3469              		.loc 14 123 0
 3470 0040 0820     		movs	r0, #8
 3471              	.LVL413:
 120:./lib/ros_lib/ros/msg.h **** 
 3472              		.loc 14 120 0
 3473 0042 23F07F02 		bic	r2, r3, #127
 3474 0046 0B68     		ldr	r3, [r1]
 3475 0048 43EA0263 		orr	r3, r3, r2, lsl #24
 3476 004c 0B60     		str	r3, [r1]
 3477              		.loc 14 123 0
 3478 004e 30BD     		pop	{r4, r5, pc}
 3479              		.cfi_endproc
 3480              	.LFE1022:
 3481              		.cantunwind
 3482              		.fnend
 3484              		.section	.text._ZN12roberto_msgs10MotorState11deserializeEPh,"axG",%progbits,_ZN12roberto_msgs10Mo
 3485              		.align	1
 3486              		.weak	_ZN12roberto_msgs10MotorState11deserializeEPh
 3487              		.thumb
 3488              		.thumb_func
 3490              	_ZN12roberto_msgs10MotorState11deserializeEPh:
 3491              		.fnstart
 3492              	.LFB1243:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3493              		.loc 10 50 0
 3494              		.cfi_startproc
 3495              		@ args = 0, pretend = 0, frame = 0
 3496              		@ frame_needed = 0, uses_anonymous_args = 0
 3497              	.LVL414:
 3498 0000 70B5     		push	{r4, r5, r6, lr}
 3499              	.LCFI33:
 3500              		.cfi_def_cfa_offset 16
 3501              		.cfi_offset 4, -16
 3502              		.cfi_offset 5, -12
 3503              		.cfi_offset 6, -8
 3504              		.cfi_offset 14, -4
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3505              		.loc 10 50 0
 3506 0002 0546     		mov	r5, r0
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3507              		.loc 10 53 0
 3508 0004 0430     		adds	r0, r0, #4
 3509              	.LVL415:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3510              		.loc 10 50 0
 3511 0006 0E46     		mov	r6, r1
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3512              		.loc 10 53 0
 3513 0008 FFF7FEFF 		bl	_ZN8std_msgs6Header11deserializeEPh
 3514              	.LVL416:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 3515              		.loc 10 54 0
 3516 000c 05F11801 		add	r1, r5, #24
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3517              		.loc 10 53 0
 3518 0010 0446     		mov	r4, r0
 3519              	.LVL417:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 3520              		.loc 10 54 0
 3521 0012 3018     		adds	r0, r6, r0
 3522              	.LVL418:
 3523 0014 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3524              	.LVL419:
 3525 0018 0444     		add	r4, r4, r0
 3526              	.LVL420:
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
 3527              		.loc 10 55 0
 3528 001a 05F11C01 		add	r1, r5, #28
 3529 001e 3019     		adds	r0, r6, r4
 3530 0020 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3531              	.LVL421:
 3532 0024 0444     		add	r4, r4, r0
 3533              	.LVL422:
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
 3534              		.loc 10 56 0
 3535 0026 05F12001 		add	r1, r5, #32
 3536 002a 3019     		adds	r0, r6, r4
 3537 002c FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3538              	.LVL423:
 3539 0030 0444     		add	r4, r4, r0
 3540              	.LVL424:
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
 3541              		.loc 10 57 0
 3542 0032 05F12401 		add	r1, r5, #36
 3543 0036 3019     		adds	r0, r6, r4
 3544 0038 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3545              	.LVL425:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3546              		.loc 10 58 0
 3547 003c 2044     		add	r0, r0, r4
 3548              	.LVL426:
 3549 003e 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3550              		.loc 10 61 0
 3551 0040 0130     		adds	r0, r0, #1
 3552              	.LVL427:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3553              		.loc 10 58 0
 3554 0042 85F82830 		strb	r3, [r5, #40]
 3555              	.LVL428:
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3556              		.loc 10 61 0
 3557 0046 70BD     		pop	{r4, r5, r6, pc}
 3558              		.cfi_endproc
 3559              	.LFE1243:
 3560              		.cantunwind
 3561              		.fnend
 3563              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh,"axG",%progbits,_ZN3r
 3564              		.align	1
 3565              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 3566              		.thumb
 3567              		.thumb_func
 3569              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:
 3570              		.fnstart
 3571              	.LFB1335:
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 3572              		.loc 12 72 0
 3573              		.cfi_startproc
 3574              		@ args = 0, pretend = 0, frame = 0
 3575              		@ frame_needed = 0, uses_anonymous_args = 0
 3576              	.LVL429:
 3577 0000 70B5     		push	{r4, r5, r6, lr}
 3578              	.LCFI34:
 3579              		.cfi_def_cfa_offset 16
 3580              		.cfi_offset 4, -16
 3581              		.cfi_offset 5, -12
 3582              		.cfi_offset 6, -8
 3583              		.cfi_offset 14, -4
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 3584              		.loc 12 72 0
 3585 0002 0546     		mov	r5, r0
  73:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 3586              		.loc 12 73 0
 3587 0004 00F10C04 		add	r4, r0, #12
 3588 0008 2046     		mov	r0, r4
 3589              	.LVL430:
 3590 000a FFF7FEFF 		bl	_ZN12roberto_msgs10MotorState11deserializeEPh
 3591              	.LVL431:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 3592              		.loc 12 74 0
 3593 000e AB6B     		ldr	r3, [r5, #56]
 3594 0010 2046     		mov	r0, r4
  75:./lib/ros_lib/ros/subscriber.h **** 
 3595              		.loc 12 75 0
 3596 0012 BDE87040 		pop	{r4, r5, r6, lr}
 3597              	.LCFI35:
 3598              		.cfi_restore 14
 3599              		.cfi_restore 6
 3600              		.cfi_restore 5
 3601              		.cfi_restore 4
 3602              		.cfi_def_cfa_offset 0
 3603              	.LVL432:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 3604              		.loc 12 74 0
 3605 0016 1847     		bx	r3	@ indirect register sibling call
 3606              	.LVL433:
 3607              		.cfi_endproc
 3608              	.LFE1335:
 3609              		.cantunwind
 3610              		.fnend
 3612              		.section	.text._ZN15ArduinoHardware4initEv,"axG",%progbits,_ZN15ArduinoHardware4initEv,comdat
 3613              		.align	1
 3614              		.weak	_ZN15ArduinoHardware4initEv
 3615              		.thumb
 3616              		.thumb_func
 3618              	_ZN15ArduinoHardware4initEv:
 3619              		.fnstart
 3620              	.LFB1136:
 3621              		.file 15 "./lib/ros_lib/ArduinoHardware.h"
   1:./lib/ros_lib/ArduinoHardware.h **** /* 
   2:./lib/ros_lib/ArduinoHardware.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ArduinoHardware.h ****  *
   4:./lib/ros_lib/ArduinoHardware.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ArduinoHardware.h ****  * All rights reserved.
   6:./lib/ros_lib/ArduinoHardware.h ****  *
   7:./lib/ros_lib/ArduinoHardware.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ArduinoHardware.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ArduinoHardware.h ****  * are met:
  10:./lib/ros_lib/ArduinoHardware.h ****  *
  11:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ArduinoHardware.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ArduinoHardware.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ArduinoHardware.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ArduinoHardware.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ArduinoHardware.h ****  *    with the distribution.
  17:./lib/ros_lib/ArduinoHardware.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ArduinoHardware.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ArduinoHardware.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ArduinoHardware.h ****  *
  21:./lib/ros_lib/ArduinoHardware.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ArduinoHardware.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ArduinoHardware.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ArduinoHardware.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ArduinoHardware.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ArduinoHardware.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ArduinoHardware.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ArduinoHardware.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ArduinoHardware.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ArduinoHardware.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ArduinoHardware.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ArduinoHardware.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ArduinoHardware.h ****  */
  34:./lib/ros_lib/ArduinoHardware.h **** 
  35:./lib/ros_lib/ArduinoHardware.h **** #ifndef ROS_ARDUINO_HARDWARE_H_
  36:./lib/ros_lib/ArduinoHardware.h **** #define ROS_ARDUINO_HARDWARE_H_
  37:./lib/ros_lib/ArduinoHardware.h **** 
  38:./lib/ros_lib/ArduinoHardware.h **** #include "stm32f10x.h"
  39:./lib/ros_lib/ArduinoHardware.h **** #include "stm32_time.h"
  40:./lib/ros_lib/ArduinoHardware.h **** #include "led.h"
  41:./lib/ros_lib/ArduinoHardware.h **** 
  42:./lib/ros_lib/ArduinoHardware.h **** #define BUFFER_SIZE 512
  43:./lib/ros_lib/ArduinoHardware.h **** 
  44:./lib/ros_lib/ArduinoHardware.h **** 
  45:./lib/ros_lib/ArduinoHardware.h **** volatile uint16_t USART_FIFO[BUFFER_SIZE];
  46:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTIN;
  47:./lib/ros_lib/ArduinoHardware.h **** volatile uint32_t USART_CNTOUT;
  48:./lib/ros_lib/ArduinoHardware.h **** 
  49:./lib/ros_lib/ArduinoHardware.h **** class ArduinoHardware {
  50:./lib/ros_lib/ArduinoHardware.h ****   public:
  51:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(USART_TypeDef* io , long baud=115200){
  52:./lib/ros_lib/ArduinoHardware.h ****       iostream = io;
  53:./lib/ros_lib/ArduinoHardware.h ****       baud_ = baud;
  54:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  55:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  56:./lib/ros_lib/ArduinoHardware.h ****     }
  57:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware()
  58:./lib/ros_lib/ArduinoHardware.h ****     {
  59:./lib/ros_lib/ArduinoHardware.h ****       /* Leonardo support */
  60:./lib/ros_lib/ArduinoHardware.h ****       iostream = USART1;
  61:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  63:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  64:./lib/ros_lib/ArduinoHardware.h ****     }
  65:./lib/ros_lib/ArduinoHardware.h ****     ArduinoHardware(ArduinoHardware& h){
  66:./lib/ros_lib/ArduinoHardware.h ****       this->iostream = iostream;
  67:./lib/ros_lib/ArduinoHardware.h ****       this->baud_ = h.baud_;
  68:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
  69:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
  70:./lib/ros_lib/ArduinoHardware.h ****     }
  71:./lib/ros_lib/ArduinoHardware.h ****   
  72:./lib/ros_lib/ArduinoHardware.h ****     void setBaud(long baud){
  73:./lib/ros_lib/ArduinoHardware.h ****       this->baud_= baud;
  74:./lib/ros_lib/ArduinoHardware.h ****     }
  75:./lib/ros_lib/ArduinoHardware.h ****   
  76:./lib/ros_lib/ArduinoHardware.h ****     int getBaud(){return baud_;}
  77:./lib/ros_lib/ArduinoHardware.h **** 
  78:./lib/ros_lib/ArduinoHardware.h ****     void init(){
 3622              		.loc 15 78 0
 3623              		.cfi_startproc
 3624              		@ args = 0, pretend = 0, frame = 24
 3625              		@ frame_needed = 0, uses_anonymous_args = 0
 3626              	.LVL434:
 3627 0000 70B5     		push	{r4, r5, r6, lr}
 3628              		.save {r4, r5, r6, lr}
 3629              	.LCFI36:
 3630              		.cfi_def_cfa_offset 16
 3631              		.cfi_offset 4, -16
 3632              		.cfi_offset 5, -12
 3633              		.cfi_offset 6, -8
 3634              		.cfi_offset 14, -4
 3635 0002 0446     		mov	r4, r0
 3636              		.pad #24
 3637 0004 86B0     		sub	sp, sp, #24
 3638              	.LCFI37:
 3639              		.cfi_def_cfa_offset 40
  79:./lib/ros_lib/ArduinoHardware.h ****       USART_InitTypeDef usart1_init_struct;
  80:./lib/ros_lib/ArduinoHardware.h ****       /* Bit configuration structure for GPIOA PIN9 and PIN10 */
  81:./lib/ros_lib/ArduinoHardware.h ****       GPIO_InitTypeDef gpioa_init_struct;
  82:./lib/ros_lib/ArduinoHardware.h **** 
  83:./lib/ros_lib/ArduinoHardware.h ****       /* Enalbe clock for USART1, AFIO and GPIOA */
  84:./lib/ros_lib/ArduinoHardware.h ****       RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1 | RCC_APB2Periph_AFIO | 
  85:./lib/ros_lib/ArduinoHardware.h ****                            RCC_APB2Periph_GPIOA, ENABLE);
  86:./lib/ros_lib/ArduinoHardware.h ****                             
  87:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Tx */
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_9;
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  90:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
  91:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3640              		.loc 15 91 0
 3641 0006 214D     		ldr	r5, .L192
  85:./lib/ros_lib/ArduinoHardware.h ****                             
 3642              		.loc 15 85 0
 3643 0008 0121     		movs	r1, #1
 3644 000a 44F20500 		movw	r0, #16389
 3645              	.LVL435:
 3646 000e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 3647              	.LVL436:
  88:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 3648              		.loc 15 88 0
 3649 0012 4FF40073 		mov	r3, #512
 3650 0016 ADF80430 		strh	r3, [sp, #4]	@ movhi
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 3651              		.loc 15 89 0
 3652 001a 0326     		movs	r6, #3
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3653              		.loc 15 90 0
 3654 001c 1823     		movs	r3, #24
 3655              		.loc 15 91 0
 3656 001e 01A9     		add	r1, sp, #4
 3657 0020 2846     		mov	r0, r5
  90:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3658              		.loc 15 90 0
 3659 0022 8DF80730 		strb	r3, [sp, #7]
  89:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 3660              		.loc 15 89 0
 3661 0026 8DF80660 		strb	r6, [sp, #6]
 3662              		.loc 15 91 0
 3663 002a FFF7FEFF 		bl	GPIO_Init
 3664              	.LVL437:
  92:./lib/ros_lib/ArduinoHardware.h ****       /* GPIOA PIN9 alternative function Rx */
  93:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Pin = GPIO_Pin_10;
 3665              		.loc 15 93 0
 3666 002e 4FF48063 		mov	r3, #1024
 3667 0032 ADF80430 		strh	r3, [sp, #4]	@ movhi
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  95:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 3668              		.loc 15 95 0
 3669 0036 0423     		movs	r3, #4
  96:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3670              		.loc 15 96 0
 3671 0038 0DEB0301 		add	r1, sp, r3
 3672 003c 2846     		mov	r0, r5
  95:./lib/ros_lib/ArduinoHardware.h ****       GPIO_Init(GPIOA, &gpioa_init_struct);
 3673              		.loc 15 95 0
 3674 003e 8DF80730 		strb	r3, [sp, #7]
  94:./lib/ros_lib/ArduinoHardware.h ****       gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 3675              		.loc 15 94 0
 3676 0042 8DF80660 		strb	r6, [sp, #6]
 3677              		.loc 15 96 0
 3678 0046 FFF7FEFF 		bl	GPIO_Init
 3679              	.LVL438:
  97:./lib/ros_lib/ArduinoHardware.h **** 
  98:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 */
  99:./lib/ros_lib/ArduinoHardware.h ****       USART_Cmd(iostream, ENABLE);  
 3680              		.loc 15 99 0
 3681 004a 2068     		ldr	r0, [r4]
 3682 004c 0121     		movs	r1, #1
 3683 004e FFF7FEFF 		bl	USART_Cmd
 3684              	.LVL439:
 100:./lib/ros_lib/ArduinoHardware.h ****       /* Baud rate 230400, 8-bit data, One stop bit
 101:./lib/ros_lib/ArduinoHardware.h ****       * No parity, Do both Rx and Tx, No HW flow control
 102:./lib/ros_lib/ArduinoHardware.h ****       */
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_BaudRate = baud_;   
 3685              		.loc 15 103 0
 3686 0052 6368     		ldr	r3, [r4, #4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 3687              		.loc 15 107 0
 3688 0054 0C22     		movs	r2, #12
 103:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 3689              		.loc 15 103 0
 3690 0056 0293     		str	r3, [sp, #8]
 108:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 109:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 110:./lib/ros_lib/ArduinoHardware.h ****       USART_Init(iostream, &usart1_init_struct);
 3691              		.loc 15 110 0
 3692 0058 02A9     		add	r1, sp, #8
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 3693              		.loc 15 104 0
 3694 005a 0023     		movs	r3, #0
 3695              		.loc 15 110 0
 3696 005c 2068     		ldr	r0, [r4]
 104:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 3697              		.loc 15 104 0
 3698 005e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 105:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Parity = USART_Parity_No ;
 3699              		.loc 15 105 0
 3700 0062 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 106:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 3701              		.loc 15 106 0
 3702 0066 ADF81030 		strh	r3, [sp, #16]	@ movhi
 108:./lib/ros_lib/ArduinoHardware.h ****       /* Configure USART1 */
 3703              		.loc 15 108 0
 3704 006a ADF81430 		strh	r3, [sp, #20]	@ movhi
 107:./lib/ros_lib/ArduinoHardware.h ****       usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 3705              		.loc 15 107 0
 3706 006e ADF81220 		strh	r2, [sp, #18]	@ movhi
 3707              		.loc 15 110 0
 3708 0072 FFF7FEFF 		bl	USART_Init
 3709              	.LVL440:
 111:./lib/ros_lib/ArduinoHardware.h ****       /* Enable RXNE interrupt */
 112:./lib/ros_lib/ArduinoHardware.h ****       USART_ITConfig(iostream, USART_IT_RXNE, ENABLE);
 3710              		.loc 15 112 0
 3711 0076 0122     		movs	r2, #1
 3712 0078 40F22551 		movw	r1, #1317
 3713 007c 2068     		ldr	r0, [r4]
 3714 007e FFF7FEFF 		bl	USART_ITConfig
 3715              	.LVL441:
 3716              	.LBB257:
 3717              	.LBB258:
 3718              		.file 16 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
   1:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**************************************************************************//**
   2:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @file     core_cm3.h
   3:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @version  V1.30
   5:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @date     30. October 2009
   6:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
   7:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @note
   8:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  10:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  11:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  15:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  16:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  22:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
  23:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  24:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CORE_H__
  26:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  27:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  29:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 10: \n
  31:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  34:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 530: \n
  35:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     return(__regBasePri); \n
  36:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * . 
  38:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 550: \n
  39:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  42:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 754: \n
  43:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  46:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 750: \n
  47:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  50:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 528: \n
  51:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  54:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 751: \n
  55:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  58:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  60:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  61:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  62:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -save */
  63:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e10  */
  64:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e530 */
  65:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e550 */
  66:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e754 */
  67:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e750 */
  68:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e528 */
  69:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e751 */
  70:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  71:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  72:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - CMSIS version number
  75:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
  78:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  79:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  80:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
  81:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  extern "C" {
  82:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif 
  83:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  84:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  88:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  90:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  92:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__ICCARM__)
  93:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
  95:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  96:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  97:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * IO definitions
 106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
 111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                 Register Abstraction
 122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  @{
 125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
 126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }  NVIC_Type;                                               
 148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SCB_Type;                                                
 177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                                      
 314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for SysTick
 363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SysTick_Type;
 372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  union  
 413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   {
 414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } ITM_Type;                                                
 445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 505:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0;
 506:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 510:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1;
 511:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 512:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } InterruptType_Type;
 513:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 514:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 518:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 522:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 525:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 529:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 530:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 534:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 535:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 536:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 537:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } MPU_Type;                                                
 549:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 550:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Type Register */
 551:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 554:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 557:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 560:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Control Register */
 561:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 564:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 567:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 570:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Number Register */
 571:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 574:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Base Address Register */
 575:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 578:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 581:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 584:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 588:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 591:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 594:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 597:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 600:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 603:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 606:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 609:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 612:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 614:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 615:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 616:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 619:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 620:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 621:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 622:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } CoreDebug_Type;
 627:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 628:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 632:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 635:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 638:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 641:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 644:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 647:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 650:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 653:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 656:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 659:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 662:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 665:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 669:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 672:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 676:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 679:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 682:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 685:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 688:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 691:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 694:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 697:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 700:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 703:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 706:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 709:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 713:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 714:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 722:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 729:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 733:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 734:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 736:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 737:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 738:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 740:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 741:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 745:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 749:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 753:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 757:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 758:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 759:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 760:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 762:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ARM armcc specific functions */
 764:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 765:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 768:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                             __nop
 769:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFI                             __wfi
 770:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFE                             __wfe
 771:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __SEV                             __sev
 772:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __REV                             __rev
 776:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __RBIT                            __rbit
 777:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 784:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 785:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 790:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 791:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 792:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 794:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
 795:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 796:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
 797:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 798:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 800:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 801:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 803:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 805:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 808:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 810:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 811:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 813:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
 814:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 815:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
 817:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 818:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 820:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 821:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 823:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 825:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 828:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 830:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 831:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 833:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 834:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 835:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 836:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 838:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 840:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 841:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 843:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 844:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 845:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 846:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 848:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 850:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 851:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 853:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 854:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 856:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 858:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __CLREX(void);
 859:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 860:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 861:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 863:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 864:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 865:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 866:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 867:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 869:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 870:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 872:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 873:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 874:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 875:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 876:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 878:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 879:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 881:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 882:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 883:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 885:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 887:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 888:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 890:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   priMask  PriMask
 891:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 892:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 894:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 896:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 897:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 899:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 900:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 901:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 902:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 903:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 905:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 906:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 908:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask faultMask value
 909:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 910:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
 911:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 912:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 914:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 915:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
 916:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
 917:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
 918:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 919:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
 920:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 921:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 923:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 924:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
 925:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 926:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
 927:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 928:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
 929:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 930:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 932:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 934:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 935:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 937:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 939:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CLREX                           __clrex
 940:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 941:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 942:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 944:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 945:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 946:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 947:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 948:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 950:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regBasePri);
 952:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 953:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 954:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 955:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 957:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 958:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 959:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 960:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 961:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 963:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 966:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 967:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 968:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 970:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 971:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 972:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 974:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 976:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regPriMask);
 978:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 979:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 980:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 981:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 983:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
 984:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 985:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 987:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 989:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regPriMask = (priMask);
 991:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 992:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 993:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 994:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 996:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 997:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 998:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 999:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1000:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1002:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regFaultMask);
1004:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1005:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1006:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1007:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1009:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1011:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1012:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1013:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1015:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1018:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1019:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1020:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1021:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1022:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
1023:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1024:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1025:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1026:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1028:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regControl);
1030:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1031:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1032:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1033:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1034:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1035:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1036:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1037:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1038:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1039:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1041:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regControl = control;
1043:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1044:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1045:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1047:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1048:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1049:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* IAR iccarm specific functions */
1051:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1052:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1055:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1058:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1064:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1076:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1077:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1078:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1080:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1081:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1082:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1083:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1084:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1086:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1087:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1089:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1091:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1094:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1096:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1097:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1099:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* GNU gcc specific functions */
1203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
1206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
1261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
1263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
1265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
1270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
1272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
1274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
1281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
1290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
1299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
1301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** * 
1316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** *  @return Control value
1317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in integer value
1338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* TASKING carm specific functions */
1437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*
1439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Including the CMSIS ones.
1442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
1445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   Core  Function Interface containing:
1449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core NVIC Functions
1450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core SysTick Functions
1451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core Reset Functions
1452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
1453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@{*/
1454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t reg_value;
1471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   
1473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return priority grouping field 
1485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 3719              		.loc 16 1504 0
 3720 0082 034B     		ldr	r3, .L192+4
 3721 0084 2022     		movs	r2, #32
 3722 0086 5A60     		str	r2, [r3, #4]
 3723              	.LVL442:
 3724              	.LBE258:
 3725              	.LBE257:
 113:./lib/ros_lib/ArduinoHardware.h ****       /* Enable USART1 global interrupt */
 114:./lib/ros_lib/ArduinoHardware.h ****       NVIC_EnableIRQ(USART1_IRQn);
 115:./lib/ros_lib/ArduinoHardware.h ****     }
 3726              		.loc 15 115 0
 3727 0088 06B0     		add	sp, sp, #24
 3728              	.LCFI38:
 3729              		.cfi_def_cfa_offset 16
 3730              		@ sp needed
 3731 008a 70BD     		pop	{r4, r5, r6, pc}
 3732              	.LVL443:
 3733              	.L193:
 3734              		.align	2
 3735              	.L192:
 3736 008c 00080140 		.word	1073809408
 3737 0090 00E100E0 		.word	-536813312
 3738              		.cfi_endproc
 3739              	.LFE1136:
 3740              		.fnend
 3742              		.text
 3743              		.align	1
 3744              		.global	USART1_IRQHandler
 3745              		.thumb
 3746              		.thumb_func
 3748              	USART1_IRQHandler:
 3749              		.fnstart
 3750              	.LFB1140:
 116:./lib/ros_lib/ArduinoHardware.h **** 
 117:./lib/ros_lib/ArduinoHardware.h ****     int read(){
 118:./lib/ros_lib/ArduinoHardware.h ****       __disable_irq();
 119:./lib/ros_lib/ArduinoHardware.h ****       if(USART_CNTIN == USART_CNTOUT){
 120:./lib/ros_lib/ArduinoHardware.h ****         __enable_irq();
 121:./lib/ros_lib/ArduinoHardware.h ****         return -1;
 122:./lib/ros_lib/ArduinoHardware.h ****       }
 123:./lib/ros_lib/ArduinoHardware.h ****       
 124:./lib/ros_lib/ArduinoHardware.h ****       int returnVal = USART_FIFO[USART_CNTOUT];
 125:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 126:./lib/ros_lib/ArduinoHardware.h ****       __enable_irq();
 127:./lib/ros_lib/ArduinoHardware.h ****       return returnVal;
 128:./lib/ros_lib/ArduinoHardware.h ****     }
 129:./lib/ros_lib/ArduinoHardware.h **** 
 130:./lib/ros_lib/ArduinoHardware.h ****     void write(uint8_t* data, int length){
 131:./lib/ros_lib/ArduinoHardware.h ****       for(int i=0; i<length; i++){
 132:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 133:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 134:./lib/ros_lib/ArduinoHardware.h ****       }
 135:./lib/ros_lib/ArduinoHardware.h ****     }
 136:./lib/ros_lib/ArduinoHardware.h **** 
 137:./lib/ros_lib/ArduinoHardware.h ****     uint32_t time(){
 138:./lib/ros_lib/ArduinoHardware.h ****       return millis();
 139:./lib/ros_lib/ArduinoHardware.h ****     }
 140:./lib/ros_lib/ArduinoHardware.h **** 
 141:./lib/ros_lib/ArduinoHardware.h ****   protected:
 142:./lib/ros_lib/ArduinoHardware.h ****     USART_TypeDef* iostream;
 143:./lib/ros_lib/ArduinoHardware.h ****     long baud_;
 144:./lib/ros_lib/ArduinoHardware.h **** 
 145:./lib/ros_lib/ArduinoHardware.h **** };
 146:./lib/ros_lib/ArduinoHardware.h **** 
 147:./lib/ros_lib/ArduinoHardware.h **** 
 148:./lib/ros_lib/ArduinoHardware.h **** 
 149:./lib/ros_lib/ArduinoHardware.h **** extern "C"{
 150:./lib/ros_lib/ArduinoHardware.h ****   void USART1_IRQHandler(void){
 3751              		.loc 15 150 0
 3752              		.cfi_startproc
 3753              		@ args = 0, pretend = 0, frame = 0
 3754              		@ frame_needed = 0, uses_anonymous_args = 0
 3755 011c 38B5     		push	{r3, r4, r5, lr}
 3756              		.save {r3, r4, r5, lr}
 3757              	.LCFI39:
 3758              		.cfi_def_cfa_offset 16
 3759              		.cfi_offset 3, -16
 3760              		.cfi_offset 4, -12
 3761              		.cfi_offset 5, -8
 3762              		.cfi_offset 14, -4
 151:./lib/ros_lib/ArduinoHardware.h **** 
 152:./lib/ros_lib/ArduinoHardware.h ****     if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET && USART_CNTIN != (( USART_CNTOUT - 1 + BU
 3763              		.loc 15 152 0
 3764 011e 40F22551 		movw	r1, #1317
 3765 0122 0F48     		ldr	r0, .L201
 3766 0124 FFF7FEFF 		bl	USART_GetITStatus
 3767              	.LVL444:
 3768 0128 40B1     		cbz	r0, .L195
 3769              		.loc 15 152 0 is_stmt 0 discriminator 1
 3770 012a 0E4C     		ldr	r4, .L201+4
 3771 012c 636A     		ldr	r3, [r4, #36]
 3772 012e A26A     		ldr	r2, [r4, #40]
 3773 0130 03F2FF13 		addw	r3, r3, #511
 3774 0134 C3F30803 		ubfx	r3, r3, #0, #9
 3775 0138 9342     		cmp	r3, r2
 3776 013a 04D1     		bne	.L196
 3777              	.L195:
 153:./lib/ros_lib/ArduinoHardware.h **** 
 154:./lib/ros_lib/ArduinoHardware.h ****       USART_FIFO[USART_CNTIN] = USART_ReceiveData(USART1);
 155:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 156:./lib/ros_lib/ArduinoHardware.h ****     }else{
 157:./lib/ros_lib/ArduinoHardware.h ****       // Should NEVER reach this point!
 158:./lib/ros_lib/ArduinoHardware.h ****       (void)USART_ReceiveData(USART1);  // Clear inerrupt flag by reading byte
 159:./lib/ros_lib/ArduinoHardware.h ****     }
 160:./lib/ros_lib/ArduinoHardware.h ****   }   
 3778              		.loc 15 160 0 is_stmt 1
 3779 013c BDE83840 		pop	{r3, r4, r5, lr}
 3780              	.LCFI40:
 3781              		.cfi_remember_state
 3782              		.cfi_restore 14
 3783              		.cfi_restore 5
 3784              		.cfi_restore 4
 3785              		.cfi_restore 3
 3786              		.cfi_def_cfa_offset 0
 158:./lib/ros_lib/ArduinoHardware.h ****     }
 3787              		.loc 15 158 0
 3788 0140 0748     		ldr	r0, .L201
 3789 0142 FFF7FEBF 		b	USART_ReceiveData
 3790              	.LVL445:
 3791              	.L196:
 3792              	.LCFI41:
 3793              		.cfi_restore_state
 154:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = (USART_CNTIN + 1) % BUFFER_SIZE;
 3794              		.loc 15 154 0
 3795 0146 0648     		ldr	r0, .L201
 3796 0148 A56A     		ldr	r5, [r4, #40]
 3797 014a FFF7FEFF 		bl	USART_ReceiveData
 3798              	.LVL446:
 3799 014e 04EB4505 		add	r5, r4, r5, lsl #1
 3800 0152 A885     		strh	r0, [r5, #44]	@ movhi
 155:./lib/ros_lib/ArduinoHardware.h ****     }else{
 3801              		.loc 15 155 0
 3802 0154 A36A     		ldr	r3, [r4, #40]
 3803 0156 0133     		adds	r3, r3, #1
 3804 0158 C3F30803 		ubfx	r3, r3, #0, #9
 3805 015c A362     		str	r3, [r4, #40]
 3806 015e 38BD     		pop	{r3, r4, r5, pc}
 3807              	.L202:
 3808              		.align	2
 3809              	.L201:
 3810 0160 00380140 		.word	1073821696
 3811 0164 00000000 		.word	.LANCHOR1
 3812              		.cfi_endproc
 3813              	.LFE1140:
 3814              		.fnend
 3816              		.align	1
 3817              		.global	EXTI2_IRQHandler
 3818              		.thumb
 3819              		.thumb_func
 3821              	EXTI2_IRQHandler:
 3822              		.fnstart
 3823              	.LFB1282:
 132:src/main.cpp  **** }
 133:src/main.cpp  **** 
 134:src/main.cpp  **** 
 135:src/main.cpp  **** ros::Subscriber<roberto_msgs::MotorState> motor_sub("throttled_joy_vel", &motor_cb);
 136:src/main.cpp  **** //ros::Subscriber<sensor_msgs::Joy> motor_sub("joy", &motor_cb);
 137:src/main.cpp  **** ros::Subscriber<std_msgs::UInt8> led_sub("led", &led_cb);
 138:src/main.cpp  **** 
 139:src/main.cpp  **** //geometry_msgs::TransformStamped odom_trans;
 140:src/main.cpp  **** //tf::TransformBroadcaster odom_broadcaster;
 141:src/main.cpp  **** 
 142:src/main.cpp  **** 
 143:src/main.cpp  **** /*nav_msgs::Odometry odom;
 144:src/main.cpp  **** ros::Publisher odom_pub("odom", &odom);*/
 145:src/main.cpp  **** 
 146:src/main.cpp  **** std_msgs::Float32MultiArray debug_msg;
 147:src/main.cpp  **** ros::Publisher debug_pub("debug", &debug_msg);
 148:src/main.cpp  **** 
 149:src/main.cpp  **** std_msgs::Float32MultiArray odom_msg;
 150:src/main.cpp  **** ros::Publisher odom_pub("odom", &odom_msg);
 151:src/main.cpp  **** 
 152:src/main.cpp  **** int main(){
 153:src/main.cpp  ****   #ifdef DEBUG
 154:src/main.cpp  ****   initialise_monitor_handles(); /* initialize handles */
 155:src/main.cpp  ****   #endif
 156:src/main.cpp  ****   /* System Clocks Configuration */
 157:src/main.cpp  ****   RCC_Configuration();
 158:src/main.cpp  ****   SysTick_Init();
 159:src/main.cpp  **** 
 160:src/main.cpp  ****   GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
 161:src/main.cpp  ****   I2C1_Init();
 162:src/main.cpp  ****   DEBUG_Init();
 163:src/main.cpp  ****   SHUTDOWN_Init();
 164:src/main.cpp  ****   LED_Init();
 165:src/main.cpp  **** 
 166:src/main.cpp  ****   debug_msg.data = (float *)malloc(sizeof(float)*6);
 167:src/main.cpp  ****   debug_msg.data_length = 6;
 168:src/main.cpp  **** 
 169:src/main.cpp  ****   odom_msg.data = (float *)malloc(sizeof(float)*4);
 170:src/main.cpp  ****   odom_msg.data_length = 4;
 171:src/main.cpp  **** 
 172:src/main.cpp  ****   nh.initNode();
 173:src/main.cpp  **** 
 174:src/main.cpp  **** 
 175:src/main.cpp  ****   nh.subscribe(motor_sub);
 176:src/main.cpp  ****   nh.subscribe(led_sub);
 177:src/main.cpp  ****   nh.advertise(odom_pub);
 178:src/main.cpp  ****   nh.advertise(debug_pub);
 179:src/main.cpp  ****   //odom_broadcaster.init(nh);
 180:src/main.cpp  **** 
 181:src/main.cpp  ****   /*while(!nh.connected()){
 182:src/main.cpp  ****     nh.spinOnce();
 183:src/main.cpp  ****   }*/
 184:src/main.cpp  **** 
 185:src/main.cpp  ****   shuttingDown = false;
 186:src/main.cpp  **** 
 187:src/main.cpp  ****   
 188:src/main.cpp  ****   float FF;
 189:src/main.cpp  ****   if(!nh.getParam("serial_node/FF", &FF, 1)){
 190:src/main.cpp  ****     FF = 3200;
 191:src/main.cpp  ****   }
 192:src/main.cpp  ****   float KP;
 193:src/main.cpp  ****   if(!nh.getParam("serial_node/KP", &KP, 1)){
 194:src/main.cpp  ****     KP = 3000;
 195:src/main.cpp  ****   }
 196:src/main.cpp  ****   float KI;
 197:src/main.cpp  ****   if(!nh.getParam("serial_node/KI", &KI, 1)){
 198:src/main.cpp  ****     KI = 2000;
 199:src/main.cpp  ****   }
 200:src/main.cpp  ****   float KD;
 201:src/main.cpp  ****   if(!nh.getParam("serial_node/KD", &KD, 1)){
 202:src/main.cpp  ****     KD = 40;
 203:src/main.cpp  ****   }
 204:src/main.cpp  **** 
 205:src/main.cpp  **** 
 206:src/main.cpp  ****   float integralSaturation;
 207:src/main.cpp  ****   if(!nh.getParam("serial_node/integralSaturation", &integralSaturation, 1)){
 208:src/main.cpp  ****     integralSaturation = 10;
 209:src/main.cpp  ****   }
 210:src/main.cpp  ****   float wheelRadius;
 211:src/main.cpp  ****   if(!nh.getParam("serial_node/wheelRadius", &wheelRadius, 1)){
 212:src/main.cpp  ****     wheelRadius = 0.04;
 213:src/main.cpp  ****   }
 214:src/main.cpp  **** 
 215:src/main.cpp  ****   if(!nh.getParam("serial_node/widthBetweenMotorPivotPoints", &L, 1)){
 216:src/main.cpp  ****     L = 0.17;
 217:src/main.cpp  ****   }
 218:src/main.cpp  **** 
 219:src/main.cpp  ****   if(!nh.getParam("serial_node/motorPivotPointToWheel", &d, 1)){
 220:src/main.cpp  ****     d = 0.045;
 221:src/main.cpp  ****   }
 222:src/main.cpp  **** 
 223:src/main.cpp  ****   delay(1000);
 224:src/main.cpp  **** 
 225:src/main.cpp  **** 
 226:src/main.cpp  ****   motorSettings SL(MOTOR_TYPE_SERVO, "servo_left", TIM4, 4);
 227:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 228:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 229:src/main.cpp  ****   SL.m_ServoLimitMax = 2025;
 230:src/main.cpp  ****   SL.m_ServoLimitMin = 7925;
 231:src/main.cpp  **** 
 232:src/main.cpp  ****   motorSettings SR(MOTOR_TYPE_SERVO, "servo_right", TIM4, 3);
 233:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 234:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 235:src/main.cpp  ****   SR.m_ServoLimitMax = 7925;
 236:src/main.cpp  ****   SR.m_ServoLimitMin = 2025;
 237:src/main.cpp  **** 
 238:src/main.cpp  ****   motorSettings FR(MOTOR_TYPE_DC_MOTOR, "front_right", TIM1, 1);
 239:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 240:src/main.cpp  ****               GPIO_Pin_15, GPIOC, GPIO_Pin_0, GPIOA,
 241:src/main.cpp  ****               GPIO_Pin_8, GPIOA);
 242:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 243:src/main.cpp  ****   FR.setRegulator(FF,KP,KI,KD,integralSaturation);
 244:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 245:src/main.cpp  **** 
 246:src/main.cpp  ****   motorSettings FL(MOTOR_TYPE_DC_MOTOR, "front_left", TIM3, 4);
 247:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 248:src/main.cpp  ****               GPIO_Pin_4, GPIOA,GPIO_Pin_10,GPIOB,
 249:src/main.cpp  ****               GPIO_Pin_1, GPIOB);
 250:src/main.cpp  ****   FL.encoderAddr = (0x10);
 251:src/main.cpp  ****   FL.setRegulator(FF,KP,KI,KD,integralSaturation);
 252:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 253:src/main.cpp  **** 
 254:src/main.cpp  ****   motorSettings RL(MOTOR_TYPE_DC_MOTOR, "rear_left", TIM2, 4);
 255:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 256:src/main.cpp  ****     GPIO_Pin_13, GPIOB, GPIO_Pin_14, GPIOB,
 257:src/main.cpp  ****     GPIO_Pin_3, GPIOA);
 258:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 259:src/main.cpp  ****   RL.setRegulator(FF,KP,KI,KD,integralSaturation);
 260:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 261:src/main.cpp  **** 
 262:src/main.cpp  ****   motorSettings RR(MOTOR_TYPE_DC_MOTOR, "rear_right", TIM1, 4);
 263:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 264:src/main.cpp  ****               GPIO_Pin_15, GPIOA, GPIO_Pin_3, GPIOB,
 265:src/main.cpp  ****               GPIO_Pin_11, GPIOA);
 266:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 267:src/main.cpp  ****   RR.setRegulator(FF,KP,KI,KD,integralSaturation);
 268:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 269:src/main.cpp  **** 
 270:src/main.cpp  ****   char error[60];
 271:src/main.cpp  ****   servo_left = motor::createMotor(&SL);
 272:src/main.cpp  ****   if(!servo_left->motorInit()){
 273:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 274:src/main.cpp  ****     nh.logerror(error);
 275:src/main.cpp  ****   }
 276:src/main.cpp  **** 
 277:src/main.cpp  ****   servo_right = motor::createMotor(&SR);
 278:src/main.cpp  ****   if(!servo_right->motorInit()){
 279:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 280:src/main.cpp  ****     nh.logerror(error);
 281:src/main.cpp  ****   }
 282:src/main.cpp  **** 
 283:src/main.cpp  ****   front_left = motor::createMotor(&FL);
 284:src/main.cpp  ****   if(!front_left->motorInit()){
 285:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 286:src/main.cpp  ****     nh.logerror(error);
 287:src/main.cpp  ****   }
 288:src/main.cpp  **** 
 289:src/main.cpp  ****   front_right = motor::createMotor(&FR);
 290:src/main.cpp  ****   if(!front_right->motorInit()){
 291:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 292:src/main.cpp  ****     nh.logerror(error);
 293:src/main.cpp  ****   }
 294:src/main.cpp  **** 
 295:src/main.cpp  ****   rear_left = motor::createMotor(&RL);
 296:src/main.cpp  ****   if(!rear_left->motorInit()){
 297:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 298:src/main.cpp  ****     nh.logerror(error);
 299:src/main.cpp  ****   }
 300:src/main.cpp  **** 
 301:src/main.cpp  ****   rear_right = motor::createMotor(&RR);
 302:src/main.cpp  ****   if(!rear_right->motorInit()){
 303:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 304:src/main.cpp  ****     nh.logerror(error);
 305:src/main.cpp  ****   }
 306:src/main.cpp  **** 
 307:src/main.cpp  **** 
 308:src/main.cpp  ****   
 309:src/main.cpp  ****   
 310:src/main.cpp  **** 
 311:src/main.cpp  ****   servo_left->setReference(135);
 312:src/main.cpp  ****   servo_right->setReference(135);
 313:src/main.cpp  ****   front_right->setReference(0);
 314:src/main.cpp  ****   front_left->setReference(0);
 315:src/main.cpp  ****   rear_right->setReference(0);
 316:src/main.cpp  ****   rear_left->setReference(0);
 317:src/main.cpp  **** 
 318:src/main.cpp  ****   int cnt = 0;
 319:src/main.cpp  ****   bool connected = false;
 320:src/main.cpp  **** 
 321:src/main.cpp  ****   uint32_t start_time;
 322:src/main.cpp  ****   uint32_t dt = 20;
 323:src/main.cpp  ****   float dt_s = ((int)dt*0.001f);
 324:src/main.cpp  **** 
 325:src/main.cpp  ****   //debug_toggle();
 326:src/main.cpp  **** 
 327:src/main.cpp  **** 
 328:src/main.cpp  ****   // Initialize the servos one by one in order not to kill the ODroid
 329:src/main.cpp  ****   while(cnt < 100){
 330:src/main.cpp  ****     start_time = millis();
 331:src/main.cpp  ****     if(cnt < 50)
 332:src/main.cpp  ****       servo_left->update(dt_s, connected, true);
 333:src/main.cpp  ****     else
 334:src/main.cpp  ****       servo_right->update(dt_s, connected, true);
 335:src/main.cpp  ****     while( millis() - start_time < dt);
 336:src/main.cpp  ****     cnt++;
 337:src/main.cpp  ****   }
 338:src/main.cpp  **** 
 339:src/main.cpp  ****   cnt = 0;
 340:src/main.cpp  **** 
 341:src/main.cpp  **** 
 342:src/main.cpp  ****   double x = 0.0;
 343:src/main.cpp  ****   double y = 0.0;
 344:src/main.cpp  ****   double th = 0.0;
 345:src/main.cpp  ****   float l = sqrt(pow((L/2),2)*2);
 346:src/main.cpp  **** 
 347:src/main.cpp  ****   //{fr, fl, rl, rr};
 348:src/main.cpp  ****   float alpha[4] = {-M_PI/4, M_PI/4, 3*M_PI/4, -3*M_PI/4};
 349:src/main.cpp  ****   uint32_t elapsed;
 350:src/main.cpp  ****   initialized = true;
 351:src/main.cpp  **** 
 352:src/main.cpp  **** 
 353:src/main.cpp  ****   while (1){
 354:src/main.cpp  ****    //printf("HELLOO!!!!");
 355:src/main.cpp  **** 
 356:src/main.cpp  ****     start_time = millis();
 357:src/main.cpp  **** 
 358:src/main.cpp  ****     /*if(shuttingDown){
 359:src/main.cpp  ****       connected = false;
 360:src/main.cpp  ****       // TODO: Advertise shutdown??
 361:src/main.cpp  ****     }else{*/
 362:src/main.cpp  ****     if(cnt++%50 == 0)
 363:src/main.cpp  ****       debug_toggle();
 364:src/main.cpp  ****     connected = nh.connected();
 365:src/main.cpp  ****     //}
 366:src/main.cpp  **** 
 367:src/main.cpp  ****     float sl = servo_left->update(dt_s, connected, true);
 368:src/main.cpp  ****     float sr = servo_right->update(dt_s, connected, true);
 369:src/main.cpp  **** 
 370:src/main.cpp  ****     debug_msg.data[0] = (float)sl;
 371:src/main.cpp  ****     debug_msg.data[1] = (float)sr;
 372:src/main.cpp  **** 
 373:src/main.cpp  ****     bool enable = true;
 374:src/main.cpp  **** 
 375:src/main.cpp  ****     if((waitForServos && ((int)sr == (int)servo_right->getReference() && (int)sl == (int)servo_left
 376:src/main.cpp  ****       waitForServos = false;
 377:src/main.cpp  ****       front_right->setReference(motorCmd[0]);
 378:src/main.cpp  ****       front_left->setReference(motorCmd[1]);
 379:src/main.cpp  ****       rear_left->setReference(motorCmd[2]);
 380:src/main.cpp  ****       rear_right->setReference(motorCmd[3]);
 381:src/main.cpp  ****     }else{
 382:src/main.cpp  ****       enable = false;
 383:src/main.cpp  ****       front_right->setReference(0);
 384:src/main.cpp  ****       front_left->setReference(0);
 385:src/main.cpp  ****       rear_left->setReference(0);
 386:src/main.cpp  ****       rear_right->setReference(0);
 387:src/main.cpp  ****     }
 388:src/main.cpp  ****     
 389:src/main.cpp  ****     float fr = front_right->update(dt_s, connected, enable);
 390:src/main.cpp  ****     //udelay(500);
 391:src/main.cpp  ****     float fl = front_left->update(dt_s, connected, enable);
 392:src/main.cpp  ****     //udelay(500);
 393:src/main.cpp  ****     float rl = rear_left->update(dt_s, connected, enable);
 394:src/main.cpp  ****     //udelay(500);
 395:src/main.cpp  ****     float rr = rear_right->update(dt_s, connected, enable);
 396:src/main.cpp  ****     //udelay(1000);
 397:src/main.cpp  **** 
 398:src/main.cpp  **** 
 399:src/main.cpp  **** 
 400:src/main.cpp  ****     debug_msg.data[2] = fr;
 401:src/main.cpp  ****     debug_msg.data[3] = fl;
 402:src/main.cpp  ****     debug_msg.data[4] = rl;
 403:src/main.cpp  ****     debug_msg.data[5] = rr;
 404:src/main.cpp  **** 
 405:src/main.cpp  ****     float speeds[4] = {fr, fl, rl, rr};
 406:src/main.cpp  ****     float angles[4] = {sr-90, -sl+90, sl+90, -sr-90};
 407:src/main.cpp  **** 
 408:src/main.cpp  ****     int i;
 409:src/main.cpp  ****     float x_dot = 0;
 410:src/main.cpp  ****     float y_dot = 0;
 411:src/main.cpp  ****     float theta_dot = 0;
 412:src/main.cpp  ****     for(i = 0; i < 4; i++){
 413:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 414:src/main.cpp  ****       x_dot += cos(alpha[i]+angles[i])*speeds[i];
 415:src/main.cpp  ****       y_dot += sin(alpha[i]+angles[i])*speeds[i];
 416:src/main.cpp  ****       float delta = atan( (l*cos(alpha[i]+d*cos(alpha[i] + angles[i]))) / (l*sin(alpha[i] + d*sin(a
 417:src/main.cpp  ****       odom_msg.data[i] = delta*180/M_PI;
 418:src/main.cpp  ****       theta_dot += cos(angles[i] - delta)*speeds[i];
 419:src/main.cpp  ****     }
 420:src/main.cpp  ****     x_dot /= 4;
 421:src/main.cpp  ****     y_dot /= 4;
 422:src/main.cpp  ****     theta_dot /= 4;
 423:src/main.cpp  **** 
 424:src/main.cpp  **** 
 425:src/main.cpp  ****     /*odom_msg.data[0] = x_dot;
 426:src/main.cpp  ****     odom_msg.data[1] = y_dot;
 427:src/main.cpp  ****     odom_msg.data[2] = theta_dot;*/
 428:src/main.cpp  **** 
 429:src/main.cpp  **** 
 430:src/main.cpp  ****     odom_pub.publish(&odom_msg);
 431:src/main.cpp  ****     //debug_pub.publish(&debug_msg);
 432:src/main.cpp  **** 
 433:src/main.cpp  ****     nh.spinOnce();
 434:src/main.cpp  **** 
 435:src/main.cpp  ****     elapsed = millis() - start_time;
 436:src/main.cpp  ****     if(elapsed > dt){
 437:src/main.cpp  ****       char elapsed_msg[18];
 438:src/main.cpp  ****       sprintf(elapsed_msg, "SLOW! %u", elapsed);
 439:src/main.cpp  ****       nh.logerror(elapsed_msg);
 440:src/main.cpp  ****     }else{
 441:src/main.cpp  ****       /*char elapsed_msg2[8];
 442:src/main.cpp  ****       sprintf(elapsed_msg2, "%u", elapsed);
 443:src/main.cpp  ****       nh.logerror(elapsed_msg2);*/
 444:src/main.cpp  ****       while( (millis() - start_time) < dt){}
 445:src/main.cpp  ****     }
 446:src/main.cpp  ****   }
 447:src/main.cpp  ****   return 0;
 448:src/main.cpp  **** }
 449:src/main.cpp  **** 
 450:src/main.cpp  **** 
 451:src/main.cpp  **** 
 452:src/main.cpp  **** extern "C" void EXTI2_IRQHandler(void){
 3824              		.loc 13 452 0
 3825              		.cfi_startproc
 3826              		@ args = 0, pretend = 0, frame = 0
 3827              		@ frame_needed = 0, uses_anonymous_args = 0
 3828 0168 08B5     		push	{r3, lr}
 3829              		.save {r3, lr}
 3830              	.LCFI42:
 3831              		.cfi_def_cfa_offset 8
 3832              		.cfi_offset 3, -8
 3833              		.cfi_offset 14, -4
 453:src/main.cpp  ****   if(EXTI_GetITStatus(EXTI_Line2) != RESET){
 3834              		.loc 13 453 0
 3835 016a 0420     		movs	r0, #4
 3836 016c FFF7FEFF 		bl	EXTI_GetITStatus
 3837              	.LVL447:
 3838 0170 40B1     		cbz	r0, .L203
 454:src/main.cpp  ****     shuttingDown = true;
 3839              		.loc 13 454 0
 3840 0172 054B     		ldr	r3, .L205
 3841 0174 0122     		movs	r2, #1
 3842 0176 83F82C24 		strb	r2, [r3, #1068]
 455:src/main.cpp  ****     EXTI_ClearITPendingBit(EXTI_Line2);
 3843              		.loc 13 455 0
 3844 017a 0420     		movs	r0, #4
 456:src/main.cpp  ****   }
 457:src/main.cpp  **** }
 3845              		.loc 13 457 0
 3846 017c BDE80840 		pop	{r3, lr}
 3847              	.LCFI43:
 3848              		.cfi_remember_state
 3849              		.cfi_restore 14
 3850              		.cfi_restore 3
 3851              		.cfi_def_cfa_offset 0
 455:src/main.cpp  ****     EXTI_ClearITPendingBit(EXTI_Line2);
 3852              		.loc 13 455 0
 3853 0180 FFF7FEBF 		b	EXTI_ClearITPendingBit
 3854              	.LVL448:
 3855              	.L203:
 3856              	.LCFI44:
 3857              		.cfi_restore_state
 3858 0184 08BD     		pop	{r3, pc}
 3859              	.L206:
 3860 0186 00BF     		.align	2
 3861              	.L205:
 3862 0188 00000000 		.word	.LANCHOR1
 3863              		.cfi_endproc
 3864              	.LFE1282:
 3865              		.fnend
 3867              		.align	1
 3868              		.global	HardFault_Handler
 3869              		.thumb
 3870              		.thumb_func
 3872              	HardFault_Handler:
 3873              		.fnstart
 3874              	.LFB1283:
 458:src/main.cpp  **** 
 459:src/main.cpp  **** 
 460:src/main.cpp  **** extern "C" __attribute__((naked)) void HardFault_Handler(void){
 3875              		.loc 13 460 0
 3876              		.cfi_startproc
 3877              		@ Naked Function: prologue and epilogue provided by programmer.
 3878              		@ args = 0, pretend = 0, frame = 0
 3879              		@ frame_needed = 0, uses_anonymous_args = 0
 461:src/main.cpp  ****         /*
 462:src/main.cpp  ****          * Get the appropriate stack pointer, depending on our mode,
 463:src/main.cpp  ****          * and use it as the parameter to the C handler. This function
 464:src/main.cpp  ****          * will never return
 465:src/main.cpp  ****          */
 466:src/main.cpp  **** 
 467:src/main.cpp  ****          // TODO: CUT MOTOR POWER!
 468:src/main.cpp  **** 
 469:src/main.cpp  ****         __asm(  ".syntax unified\n"
 470:src/main.cpp  ****                         "MOVS   R0, #4  \n"
 471:src/main.cpp  ****                         "MOV    R1, LR  \n"
 472:src/main.cpp  ****                         "TST    R0, R1  \n"
 473:src/main.cpp  ****                         "BEQ    _MSP    \n"
 474:src/main.cpp  ****                         "MRS    R0, PSP \n"
 475:src/main.cpp  ****                         "B      hard_fault_handler_c      \n"
 476:src/main.cpp  ****                 "_MSP:  \n"
 477:src/main.cpp  ****                         "MRS    R0, MSP \n"
 478:src/main.cpp  ****                         "B      hard_fault_handler_c      \n"
 479:src/main.cpp  ****                 ".syntax divided\n") ;
 3880              		.loc 13 479 0
 3881              		.syntax unified
 3882              	@ 479 "src/main.cpp" 1
 3883              		.syntax unified
 3884 018c 0420     	MOVS   R0, #4  
 3885 018e 7146     	MOV    R1, LR  
 3886 0190 0842     	TST    R0, R1  
 3887 0192 03D0     	BEQ    _MSP    
 3888 0194 EFF30980 	MRS    R0, PSP 
 3889 0198 FFF7FEBF 	B      hard_fault_handler_c      
 3890              	_MSP:  
 3891 019c EFF30880 	MRS    R0, MSP 
 3892 01a0 FFF7FEBF 	B      hard_fault_handler_c      
 3893              	.syntax divided
 3894              	
 3895              	@ 0 "" 2
 480:src/main.cpp  **** }
 3896              		.loc 13 480 0
 3897              		.thumb
 3898              		.syntax unified
 3899              		.cfi_endproc
 3900              	.LFE1283:
 3901              		.cantunwind
 3902              		.fnend
 3904              		.align	1
 3905              		.global	hard_fault_handler_c
 3906              		.thumb
 3907              		.thumb_func
 3909              	hard_fault_handler_c:
 3910              		.fnstart
 3911              	.LFB1284:
 481:src/main.cpp  **** 
 482:src/main.cpp  **** 
 483:src/main.cpp  **** extern "C" void hard_fault_handler_c (unsigned int * hardfault_args)
 484:src/main.cpp  **** {
 3912              		.loc 13 484 0
 3913              		.cfi_startproc
 3914              		@ args = 0, pretend = 0, frame = 0
 3915              		@ frame_needed = 0, uses_anonymous_args = 0
 3916              		@ link register save eliminated.
 3917              	.LVL449:
 3918              	.L209:
 3919 01a4 FEE7     		b	.L209
 3920              		.cfi_endproc
 3921              	.LFE1284:
 3922              		.cantunwind
 3923              		.fnend
 3925              		.align	1
 3926              		.global	_Z13assert_failedPhm
 3927              		.thumb
 3928              		.thumb_func
 3930              	_Z13assert_failedPhm:
 3931              		.fnstart
 3932              	.LFB1285:
 485:src/main.cpp  ****   unsigned int stacked_r0;
 486:src/main.cpp  ****   unsigned int stacked_r1;
 487:src/main.cpp  ****   unsigned int stacked_r2;
 488:src/main.cpp  ****   unsigned int stacked_r3;
 489:src/main.cpp  ****   unsigned int stacked_r12;
 490:src/main.cpp  ****   unsigned int stacked_lr;
 491:src/main.cpp  ****   unsigned int stacked_pc;
 492:src/main.cpp  ****   unsigned int stacked_psr;
 493:src/main.cpp  ****  
 494:src/main.cpp  ****   stacked_r0 = ((unsigned long) hardfault_args[0]);
 495:src/main.cpp  ****   stacked_r1 = ((unsigned long) hardfault_args[1]);
 496:src/main.cpp  ****   stacked_r2 = ((unsigned long) hardfault_args[2]);
 497:src/main.cpp  ****   stacked_r3 = ((unsigned long) hardfault_args[3]);
 498:src/main.cpp  ****  
 499:src/main.cpp  ****   stacked_r12 = ((unsigned long) hardfault_args[4]);
 500:src/main.cpp  ****   stacked_lr = ((unsigned long) hardfault_args[5]);
 501:src/main.cpp  ****   stacked_pc = ((unsigned long) hardfault_args[6]);
 502:src/main.cpp  ****   stacked_psr = ((unsigned long) hardfault_args[7]);
 503:src/main.cpp  ****  
 504:src/main.cpp  ****   printf ("\n\n[Hard fault handler - all numbers in hex]\n");
 505:src/main.cpp  ****   printf ("R0 = %x\n", stacked_r0);
 506:src/main.cpp  ****   printf ("R1 = %x\n", stacked_r1);
 507:src/main.cpp  ****   printf ("R2 = %x\n", stacked_r2);
 508:src/main.cpp  ****   printf ("R3 = %x\n", stacked_r3);
 509:src/main.cpp  ****   printf ("R12 = %x\n", stacked_r12);
 510:src/main.cpp  ****   printf ("LR [R14] = %x  subroutine call return address\n", stacked_lr);
 511:src/main.cpp  ****   printf ("PC [R15] = %x  program counter\n", stacked_pc);
 512:src/main.cpp  ****   printf ("PSR = %x\n", stacked_psr);
 513:src/main.cpp  ****   printf ("BFAR = %x\n", (*((volatile unsigned long *)(0xE000ED38))));
 514:src/main.cpp  ****   printf ("CFSR = %x\n", (*((volatile unsigned long *)(0xE000ED28))));
 515:src/main.cpp  ****   printf ("HFSR = %x\n", (*((volatile unsigned long *)(0xE000ED2C))));
 516:src/main.cpp  ****   printf ("DFSR = %x\n", (*((volatile unsigned long *)(0xE000ED30))));
 517:src/main.cpp  ****   printf ("AFSR = %x\n", (*((volatile unsigned long *)(0xE000ED3C))));
 518:src/main.cpp  ****   printf ("SCB_SHCSR = %x\n", SCB->SHCSR);
 519:src/main.cpp  ****   
 520:src/main.cpp  ****   while (1);
 521:src/main.cpp  **** }
 522:src/main.cpp  **** 
 523:src/main.cpp  **** 
 524:src/main.cpp  **** void assert_failed(uint8_t* file, uint32_t line){
 3933              		.loc 13 524 0
 3934              		.cfi_startproc
 3935              		@ args = 0, pretend = 0, frame = 0
 3936              		@ frame_needed = 0, uses_anonymous_args = 0
 3937              	.LVL450:
 3938              		.loc 13 524 0
 3939 01a6 08B5     		push	{r3, lr}
 3940              		.save {r3, lr}
 3941              	.LCFI45:
 3942              		.cfi_def_cfa_offset 8
 3943              		.cfi_offset 3, -8
 3944              		.cfi_offset 14, -4
 3945              	.LVL451:
 3946              	.L211:
 525:src/main.cpp  ****   /* User can add his own implementation to report the file name and line number,
 526:src/main.cpp  ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 527:src/main.cpp  ****   /*char str[150];
 528:src/main.cpp  **** 
 529:src/main.cpp  ****   sprintf(str, "Wrong parameters value: file %s on line %u\r\n", file, (unsigned int)line);
 530:src/main.cpp  ****   nh.logerror(str);*/
 531:src/main.cpp  ****   while (1){
 532:src/main.cpp  ****     debug_toggle();
 3947              		.loc 13 532 0 discriminator 1
 3948 01a8 FFF7FEFF 		bl	debug_toggle
 3949              	.LVL452:
 533:src/main.cpp  ****     delay(100);
 3950              		.loc 13 533 0 discriminator 1
 3951 01ac 6420     		movs	r0, #100
 3952 01ae FFF7FEFF 		bl	delay
 3953              	.LVL453:
 3954 01b2 F9E7     		b	.L211
 3955              		.cfi_endproc
 3956              	.LFE1285:
 3957              		.fnend
 3959              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi,"axG"
 3960              		.align	1
 3961              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 3962              		.thumb
 3963              		.thumb_func
 3965              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:
 3966              		.fnstart
 3967              	.LFB1315:
 288:./lib/ros_lib/ros/node_handle.h **** 
 289:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 290:./lib/ros_lib/ros/node_handle.h ****        * Time functions
 291:./lib/ros_lib/ros/node_handle.h ****        */
 292:./lib/ros_lib/ros/node_handle.h **** 
 293:./lib/ros_lib/ros/node_handle.h ****       void requestSyncTime()
 294:./lib/ros_lib/ros/node_handle.h ****       {
 295:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 296:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_TIME, &t);
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 298:./lib/ros_lib/ros/node_handle.h ****       }
 299:./lib/ros_lib/ros/node_handle.h **** 
 300:./lib/ros_lib/ros/node_handle.h ****       void syncTime(uint8_t * data)
 301:./lib/ros_lib/ros/node_handle.h ****       {
 302:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 303:./lib/ros_lib/ros/node_handle.h ****         uint32_t offset = hardware_.time() - rt_time;
 304:./lib/ros_lib/ros/node_handle.h **** 
 305:./lib/ros_lib/ros/node_handle.h ****         t.deserialize(data);
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 308:./lib/ros_lib/ros/node_handle.h **** 
 309:./lib/ros_lib/ros/node_handle.h ****         this->setNow(t.data);
 310:./lib/ros_lib/ros/node_handle.h ****         last_sync_receive_time = hardware_.time();
 311:./lib/ros_lib/ros/node_handle.h ****       }
 312:./lib/ros_lib/ros/node_handle.h **** 
 313:./lib/ros_lib/ros/node_handle.h ****       Time now()
 314:./lib/ros_lib/ros/node_handle.h ****       {
 315:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 316:./lib/ros_lib/ros/node_handle.h ****         Time current_time;
 317:./lib/ros_lib/ros/node_handle.h ****         current_time.sec = ms/1000 + sec_offset;
 318:./lib/ros_lib/ros/node_handle.h ****         current_time.nsec = (ms%1000)*1000000UL + nsec_offset;
 319:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(current_time.sec, current_time.nsec);
 320:./lib/ros_lib/ros/node_handle.h ****         return current_time;
 321:./lib/ros_lib/ros/node_handle.h ****       }
 322:./lib/ros_lib/ros/node_handle.h **** 
 323:./lib/ros_lib/ros/node_handle.h ****       void setNow( Time & new_now )
 324:./lib/ros_lib/ros/node_handle.h ****       {
 325:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 326:./lib/ros_lib/ros/node_handle.h ****         sec_offset = new_now.sec - ms/1000 - 1;
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 329:./lib/ros_lib/ros/node_handle.h ****       }
 330:./lib/ros_lib/ros/node_handle.h **** 
 331:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 332:./lib/ros_lib/ros/node_handle.h ****        * Topic Management
 333:./lib/ros_lib/ros/node_handle.h ****        */
 334:./lib/ros_lib/ros/node_handle.h **** 
 335:./lib/ros_lib/ros/node_handle.h ****       /* Register a new publisher */
 336:./lib/ros_lib/ros/node_handle.h ****       bool advertise(Publisher & p)
 337:./lib/ros_lib/ros/node_handle.h ****       {
 338:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_PUBLISHERS; i++){
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 340:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 341:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 344:./lib/ros_lib/ros/node_handle.h ****           }
 345:./lib/ros_lib/ros/node_handle.h ****         }
 346:./lib/ros_lib/ros/node_handle.h ****         return false;
 347:./lib/ros_lib/ros/node_handle.h ****       }
 348:./lib/ros_lib/ros/node_handle.h **** 
 349:./lib/ros_lib/ros/node_handle.h ****       /* Register a new subscriber */
 350:./lib/ros_lib/ros/node_handle.h ****       template<typename MsgT>
 351:./lib/ros_lib/ros/node_handle.h ****       bool subscribe(Subscriber< MsgT> & s){
 352:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 357:./lib/ros_lib/ros/node_handle.h ****           }
 358:./lib/ros_lib/ros/node_handle.h ****         }
 359:./lib/ros_lib/ros/node_handle.h ****         return false;
 360:./lib/ros_lib/ros/node_handle.h ****       }
 361:./lib/ros_lib/ros/node_handle.h **** 
 362:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Server */
 363:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 364:./lib/ros_lib/ros/node_handle.h ****       bool advertiseService(ServiceServer<MReq,MRes>& srv){
 365:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 366:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 367:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 368:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 369:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 370:./lib/ros_lib/ros/node_handle.h ****             return v;
 371:./lib/ros_lib/ros/node_handle.h ****           }
 372:./lib/ros_lib/ros/node_handle.h ****         }
 373:./lib/ros_lib/ros/node_handle.h ****         return false;
 374:./lib/ros_lib/ros/node_handle.h ****       }
 375:./lib/ros_lib/ros/node_handle.h **** 
 376:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Client */
 377:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 378:./lib/ros_lib/ros/node_handle.h ****       bool serviceClient(ServiceClient<MReq, MRes>& srv){
 379:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 380:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 381:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 382:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 383:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 384:./lib/ros_lib/ros/node_handle.h ****             return v;
 385:./lib/ros_lib/ros/node_handle.h ****           }
 386:./lib/ros_lib/ros/node_handle.h ****         }
 387:./lib/ros_lib/ros/node_handle.h ****         return false;
 388:./lib/ros_lib/ros/node_handle.h ****       }
 389:./lib/ros_lib/ros/node_handle.h **** 
 390:./lib/ros_lib/ros/node_handle.h ****       void negotiateTopics()
 391:./lib/ros_lib/ros/node_handle.h ****       {
 392:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::TopicInfo ti;
 393:./lib/ros_lib/ros/node_handle.h ****         int i;
 394:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_PUBLISHERS; i++)
 395:./lib/ros_lib/ros/node_handle.h ****         {
 396:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] != 0) // non-empty slot
 397:./lib/ros_lib/ros/node_handle.h ****           {
 398:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = publishers[i]->id_;
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 404:./lib/ros_lib/ros/node_handle.h ****           }
 405:./lib/ros_lib/ros/node_handle.h ****         }
 406:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_SUBSCRIBERS; i++)
 407:./lib/ros_lib/ros/node_handle.h ****         {
 408:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] != 0) // non-empty slot
 409:./lib/ros_lib/ros/node_handle.h ****           {
 410:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = subscribers[i]->id_;
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 412:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 413:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 416:./lib/ros_lib/ros/node_handle.h ****           }
 417:./lib/ros_lib/ros/node_handle.h ****         }
 418:./lib/ros_lib/ros/node_handle.h ****         configured_ = true;
 419:./lib/ros_lib/ros/node_handle.h ****       }
 420:./lib/ros_lib/ros/node_handle.h **** 
 421:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg * msg)
 422:./lib/ros_lib/ros/node_handle.h ****       {
 423:./lib/ros_lib/ros/node_handle.h ****         if(id >= 100 && !configured_)
 424:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 425:./lib/ros_lib/ros/node_handle.h **** 
 426:./lib/ros_lib/ros/node_handle.h ****         /* serialize message */
 427:./lib/ros_lib/ros/node_handle.h ****         uint16_t l = msg->serialize(message_out+7);
 428:./lib/ros_lib/ros/node_handle.h **** 
 429:./lib/ros_lib/ros/node_handle.h ****         /* setup the header */
 430:./lib/ros_lib/ros/node_handle.h ****         message_out[0] = 0xff;
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 434:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 437:./lib/ros_lib/ros/node_handle.h **** 
 438:./lib/ros_lib/ros/node_handle.h ****         /* calculate checksum */
 439:./lib/ros_lib/ros/node_handle.h ****         int chk = 0;
 440:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 443:./lib/ros_lib/ros/node_handle.h ****         message_out[l++] = 255 - (chk%256);
 444:./lib/ros_lib/ros/node_handle.h **** 
 445:./lib/ros_lib/ros/node_handle.h ****         if( l <= OUTPUT_SIZE ){
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 447:./lib/ros_lib/ros/node_handle.h ****           return l;
 448:./lib/ros_lib/ros/node_handle.h ****         }else{
 449:./lib/ros_lib/ros/node_handle.h ****           logerror("Message from device dropped: message larger than buffer.");
 450:./lib/ros_lib/ros/node_handle.h ****           return -1;
 451:./lib/ros_lib/ros/node_handle.h ****         }
 452:./lib/ros_lib/ros/node_handle.h ****       }
 453:./lib/ros_lib/ros/node_handle.h **** 
 454:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 455:./lib/ros_lib/ros/node_handle.h ****        * Logging
 456:./lib/ros_lib/ros/node_handle.h ****        */
 457:./lib/ros_lib/ros/node_handle.h **** 
 458:./lib/ros_lib/ros/node_handle.h ****     private:
 459:./lib/ros_lib/ros/node_handle.h ****       void log(char byte, const char * msg){
 460:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::Log l;
 461:./lib/ros_lib/ros/node_handle.h ****         l.level= byte;
 462:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 463:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 464:./lib/ros_lib/ros/node_handle.h ****       }
 465:./lib/ros_lib/ros/node_handle.h **** 
 466:./lib/ros_lib/ros/node_handle.h ****     public:
 467:./lib/ros_lib/ros/node_handle.h ****       void logdebug(const char* msg){
 468:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ROSDEBUG, msg);
 469:./lib/ros_lib/ros/node_handle.h ****       }
 470:./lib/ros_lib/ros/node_handle.h ****       void loginfo(const char * msg){
 471:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::INFO, msg);
 472:./lib/ros_lib/ros/node_handle.h ****       }
 473:./lib/ros_lib/ros/node_handle.h ****       void logwarn(const char *msg){
 474:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::WARN, msg);
 475:./lib/ros_lib/ros/node_handle.h ****       }
 476:./lib/ros_lib/ros/node_handle.h ****       void logerror(const char*msg){
 477:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ERROR, msg);
 478:./lib/ros_lib/ros/node_handle.h ****       }
 479:./lib/ros_lib/ros/node_handle.h ****       void logfatal(const char*msg){
 480:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::FATAL, msg);
 481:./lib/ros_lib/ros/node_handle.h ****       }
 482:./lib/ros_lib/ros/node_handle.h **** 
 483:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 484:./lib/ros_lib/ros/node_handle.h ****        * Parameters
 485:./lib/ros_lib/ros/node_handle.h ****        */
 486:./lib/ros_lib/ros/node_handle.h **** 
 487:./lib/ros_lib/ros/node_handle.h ****     private:
 488:./lib/ros_lib/ros/node_handle.h ****       bool param_recieved;
 489:./lib/ros_lib/ros/node_handle.h ****       rosserial_msgs::RequestParamResponse req_param_resp;
 490:./lib/ros_lib/ros/node_handle.h **** 
 491:./lib/ros_lib/ros/node_handle.h ****       bool requestParam(const char * name, int time_out =  1000){
 492:./lib/ros_lib/ros/node_handle.h ****         param_recieved = false;
 493:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::RequestParamRequest req;
 494:./lib/ros_lib/ros/node_handle.h ****         req.name  = (char*)name;
 495:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_PARAMETER_REQUEST, &req);
 496:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 497:./lib/ros_lib/ros/node_handle.h ****         while(!param_recieved ){
 498:./lib/ros_lib/ros/node_handle.h ****           spinOnce();
 499:./lib/ros_lib/ros/node_handle.h ****           if (hardware_.time() > end_time) return false;
 500:./lib/ros_lib/ros/node_handle.h ****         }
 501:./lib/ros_lib/ros/node_handle.h ****         return true;
 502:./lib/ros_lib/ros/node_handle.h ****       }
 503:./lib/ros_lib/ros/node_handle.h **** 
 504:./lib/ros_lib/ros/node_handle.h ****     public:
 505:./lib/ros_lib/ros/node_handle.h ****       bool getParam(const char* name, int* param, int length =1){
 506:./lib/ros_lib/ros/node_handle.h ****         if (requestParam(name) ){
 507:./lib/ros_lib/ros/node_handle.h ****           if (length == req_param_resp.ints_length){
 508:./lib/ros_lib/ros/node_handle.h ****             //copy it over
 509:./lib/ros_lib/ros/node_handle.h ****             for(int i=0; i<length; i++)
 510:./lib/ros_lib/ros/node_handle.h ****               param[i] = req_param_resp.ints[i];
 511:./lib/ros_lib/ros/node_handle.h ****             return true;
 512:./lib/ros_lib/ros/node_handle.h ****           }
 513:./lib/ros_lib/ros/node_handle.h ****         }
 514:./lib/ros_lib/ros/node_handle.h ****         return false;
 515:./lib/ros_lib/ros/node_handle.h ****       }
 516:./lib/ros_lib/ros/node_handle.h ****       bool getParam(const char* name, float* param, int length=1){
 3968              		.loc 11 516 0
 3969              		.cfi_startproc
 3970              		@ args = 0, pretend = 0, frame = 8
 3971              		@ frame_needed = 0, uses_anonymous_args = 0
 3972              	.LVL454:
 3973 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 3974              		.save {r4, r5, r6, r7, r8, lr}
 3975              		.pad #8
 3976              	.LCFI46:
 3977              		.cfi_def_cfa_offset 32
 3978              		.cfi_offset 4, -24
 3979              		.cfi_offset 5, -20
 3980              		.cfi_offset 6, -16
 3981              		.cfi_offset 7, -12
 3982              		.cfi_offset 8, -8
 3983              		.cfi_offset 14, -4
 3984              		.loc 11 516 0
 3985 0004 9846     		mov	r8, r3
 3986              	.LBB278:
 3987              	.LBB279:
 3988              	.LBB280:
 492:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::RequestParamRequest req;
 3989              		.loc 11 492 0
 3990 0006 0023     		movs	r3, #0
 3991              	.LVL455:
 3992 0008 80F80435 		strb	r3, [r0, #1284]
 3993              	.LVL456:
 3994              	.LBB281:
 3995              	.LBB282:
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 3996              		.loc 4 19 0
 3997 000c 174B     		ldr	r3, .L221
 3998              	.LBE282:
 3999              	.LBE281:
 494:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_PARAMETER_REQUEST, &req);
 4000              		.loc 11 494 0
 4001 000e 0191     		str	r1, [sp, #4]
 4002              	.LBB284:
 4003              	.LBB283:
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 4004              		.loc 4 19 0
 4005 0010 0093     		str	r3, [sp]
 4006              	.LVL457:
 4007              	.LBE283:
 4008              	.LBE284:
 495:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 4009              		.loc 11 495 0
 4010 0012 0368     		ldr	r3, [r0]
 4011 0014 0621     		movs	r1, #6
 4012              	.LVL458:
 4013 0016 1B68     		ldr	r3, [r3]
 4014              	.LBE280:
 4015              	.LBE279:
 4016              	.LBE278:
 4017              		.loc 11 516 0
 4018 0018 1746     		mov	r7, r2
 4019              	.LBB294:
 4020              	.LBB291:
 4021              	.LBB289:
 495:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 4022              		.loc 11 495 0
 4023 001a 6A46     		mov	r2, sp
 4024              	.LVL459:
 4025              	.LBE289:
 4026              	.LBE291:
 4027              	.LBE294:
 4028              		.loc 11 516 0
 4029 001c 0446     		mov	r4, r0
 4030              	.LBB295:
 4031              	.LBB292:
 4032              	.LBB290:
 495:./lib/ros_lib/ros/node_handle.h ****         uint16_t end_time = hardware_.time() + time_out;
 4033              		.loc 11 495 0
 4034 001e 9847     		blx	r3
 4035              	.LVL460:
 4036              	.LBB285:
 4037              	.LBB286:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 4038              		.loc 15 138 0
 4039 0020 FFF7FEFF 		bl	millis
 4040              	.LVL461:
 4041              	.LBE286:
 4042              	.LBE285:
 496:./lib/ros_lib/ros/node_handle.h ****         while(!param_recieved ){
 4043              		.loc 11 496 0
 4044 0024 00F57A70 		add	r0, r0, #1000
 4045 0028 86B2     		uxth	r6, r0
 4046              	.LVL462:
 4047              	.L214:
 497:./lib/ros_lib/ros/node_handle.h ****           spinOnce();
 4048              		.loc 11 497 0
 4049 002a 94F80455 		ldrb	r5, [r4, #1284]	@ zero_extendqisi2
 4050 002e 45B9     		cbnz	r5, .L218
 498:./lib/ros_lib/ros/node_handle.h ****           if (hardware_.time() > end_time) return false;
 4051              		.loc 11 498 0
 4052 0030 2368     		ldr	r3, [r4]
 4053 0032 2046     		mov	r0, r4
 4054 0034 5B68     		ldr	r3, [r3, #4]
 4055 0036 9847     		blx	r3
 4056              	.LVL463:
 4057              	.LBB287:
 4058              	.LBB288:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 4059              		.loc 15 138 0
 4060 0038 FFF7FEFF 		bl	millis
 4061              	.LVL464:
 4062              	.LBE288:
 4063              	.LBE287:
 499:./lib/ros_lib/ros/node_handle.h ****         }
 4064              		.loc 11 499 0
 4065 003c B042     		cmp	r0, r6
 4066 003e F4D9     		bls	.L214
 4067 0040 0FE0     		b	.L215
 4068              	.LVL465:
 4069              	.L218:
 4070              	.LBE290:
 4071              	.LBE292:
 4072              	.LBB293:
 517:./lib/ros_lib/ros/node_handle.h ****         if (requestParam(name) ){
 518:./lib/ros_lib/ros/node_handle.h ****           if (length == req_param_resp.floats_length){
 4073              		.loc 11 518 0
 4074 0042 94F81825 		ldrb	r2, [r4, #1304]	@ zero_extendqisi2
 4075 0046 4245     		cmp	r2, r8
 4076 0048 0AD1     		bne	.L217
 4077 004a 0023     		movs	r3, #0
 4078              	.L216:
 4079              	.LVL466:
 4080              	.LBE293:
 4081              	.LBE295:
 4082              	.LBB296:
 4083              	.LBB297:
 519:./lib/ros_lib/ros/node_handle.h ****             //copy it over
 520:./lib/ros_lib/ros/node_handle.h ****             for(int i=0; i<length; i++)
 4084              		.loc 11 520 0
 4085 004c 9342     		cmp	r3, r2
 4086 004e 08DA     		bge	.L215
 521:./lib/ros_lib/ros/node_handle.h ****               param[i] = req_param_resp.floats[i];
 4087              		.loc 11 521 0
 4088 0050 D4F82015 		ldr	r1, [r4, #1312]
 4089 0054 51F82310 		ldr	r1, [r1, r3, lsl #2]	@ float
 4090 0058 47F82310 		str	r1, [r7, r3, lsl #2]	@ float
 520:./lib/ros_lib/ros/node_handle.h ****               param[i] = req_param_resp.floats[i];
 4091              		.loc 11 520 0
 4092 005c 0133     		adds	r3, r3, #1
 4093              	.LVL467:
 4094 005e F5E7     		b	.L216
 4095              	.LVL468:
 4096              	.L217:
 4097              	.LBE297:
 4098              	.LBE296:
 522:./lib/ros_lib/ros/node_handle.h ****             return true;
 523:./lib/ros_lib/ros/node_handle.h ****           }
 524:./lib/ros_lib/ros/node_handle.h ****         }
 525:./lib/ros_lib/ros/node_handle.h ****         return false;
 4099              		.loc 11 525 0
 4100 0060 0025     		movs	r5, #0
 4101              	.L215:
 526:./lib/ros_lib/ros/node_handle.h ****       }
 4102              		.loc 11 526 0
 4103 0062 2846     		mov	r0, r5
 4104 0064 02B0     		add	sp, sp, #8
 4105              	.LCFI47:
 4106              		.cfi_def_cfa_offset 24
 4107              		@ sp needed
 4108 0066 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4109              	.LVL469:
 4110              	.L222:
 4111 006a 00BF     		.align	2
 4112              	.L221:
 4113 006c 08000000 		.word	_ZTVN14rosserial_msgs19RequestParamRequestE+8
 4114              		.cfi_endproc
 4115              	.LFE1315:
 4116              		.fnend
 4118              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc,"axG",%p
 4119              		.align	1
 4120              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4121              		.thumb
 4122              		.thumb_func
 4124              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:
 4125              		.fnstart
 4126              	.LFB1316:
 476:./lib/ros_lib/ros/node_handle.h ****         log(rosserial_msgs::Log::ERROR, msg);
 4127              		.loc 11 476 0
 4128              		.cfi_startproc
 4129              		@ args = 0, pretend = 0, frame = 16
 4130              		@ frame_needed = 0, uses_anonymous_args = 0
 4131              	.LVL470:
 4132 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 4133              		.save {lr}
 4134              		.pad #20
 4135              	.LCFI48:
 4136              		.cfi_def_cfa_offset 24
 4137              		.cfi_offset 14, -4
 4138              	.LVL471:
 4139              	.LBB304:
 4140              	.LBB305:
 4141              	.LBB306:
 4142              	.LBB307:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 4143              		.loc 3 25 0
 4144 0002 074B     		ldr	r3, .L224
 4145              	.LBE307:
 4146              	.LBE306:
 462:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 4147              		.loc 11 462 0
 4148 0004 0391     		str	r1, [sp, #12]
 4149              	.LBB309:
 4150              	.LBB308:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 4151              		.loc 3 25 0
 4152 0006 0193     		str	r3, [sp, #4]
 4153              	.LVL472:
 4154              	.LBE308:
 4155              	.LBE309:
 461:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 4156              		.loc 11 461 0
 4157 0008 0323     		movs	r3, #3
 4158 000a 8DF80830 		strb	r3, [sp, #8]
 463:./lib/ros_lib/ros/node_handle.h ****       }
 4159              		.loc 11 463 0
 4160 000e 0368     		ldr	r3, [r0]
 4161 0010 01AA     		add	r2, sp, #4
 4162 0012 1B68     		ldr	r3, [r3]
 4163 0014 0721     		movs	r1, #7
 4164              	.LVL473:
 4165 0016 9847     		blx	r3
 4166              	.LVL474:
 4167              	.LBE305:
 4168              	.LBE304:
 478:./lib/ros_lib/ros/node_handle.h ****       void logfatal(const char*msg){
 4169              		.loc 11 478 0
 4170 0018 05B0     		add	sp, sp, #20
 4171              	.LCFI49:
 4172              		.cfi_def_cfa_offset 4
 4173              		@ sp needed
 4174 001a 5DF804FB 		ldr	pc, [sp], #4
 4175              	.L225:
 4176 001e 00BF     		.align	2
 4177              	.L224:
 4178 0020 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 4179              		.cfi_endproc
 4180              	.LFE1316:
 4181              		.fnend
 4183              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE,"
 4184              		.align	1
 4185              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 4186              		.thumb
 4187              		.thumb_func
 4189              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:
 4190              		.fnstart
 4191              	.LFB1328:
 421:./lib/ros_lib/ros/node_handle.h ****       {
 4192              		.loc 11 421 0
 4193              		.cfi_startproc
 4194              		@ args = 0, pretend = 0, frame = 0
 4195              		@ frame_needed = 0, uses_anonymous_args = 0
 4196              	.LVL475:
 423:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 4197              		.loc 11 423 0
 4198 0000 6329     		cmp	r1, #99
 421:./lib/ros_lib/ros/node_handle.h ****       {
 4199              		.loc 11 421 0
 4200 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4201              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 4202              	.LCFI50:
 4203              		.cfi_def_cfa_offset 32
 4204              		.cfi_offset 3, -32
 4205              		.cfi_offset 4, -28
 4206              		.cfi_offset 5, -24
 4207              		.cfi_offset 6, -20
 4208              		.cfi_offset 7, -16
 4209              		.cfi_offset 8, -12
 4210              		.cfi_offset 9, -8
 4211              		.cfi_offset 14, -4
 421:./lib/ros_lib/ros/node_handle.h ****       {
 4212              		.loc 11 421 0
 4213 0006 0446     		mov	r4, r0
 4214 0008 0E46     		mov	r6, r1
 423:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 4215              		.loc 11 423 0
 4216 000a 03DD     		ble	.L227
 423:./lib/ros_lib/ros/node_handle.h **** 	  return 0;
 4217              		.loc 11 423 0 is_stmt 0 discriminator 1
 4218 000c 90F8F454 		ldrb	r5, [r0, #1268]	@ zero_extendqisi2
 4219 0010 002D     		cmp	r5, #0
 4220 0012 4FD0     		beq	.L228
 4221              	.L227:
 427:./lib/ros_lib/ros/node_handle.h **** 
 4222              		.loc 11 427 0 is_stmt 1
 4223 0014 1368     		ldr	r3, [r2]
 4224 0016 04F21F21 		addw	r1, r4, #543
 4225              	.LVL476:
 4226 001a 1B68     		ldr	r3, [r3]
 4227 001c 1046     		mov	r0, r2
 4228              	.LVL477:
 4229 001e 9847     		blx	r3
 4230              	.LVL478:
 430:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 4231              		.loc 11 430 0
 4232 0020 FF22     		movs	r2, #255
 4233 0022 84F81822 		strb	r2, [r4, #536]
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 4234              		.loc 11 431 0
 4235 0026 FE22     		movs	r2, #254
 427:./lib/ros_lib/ros/node_handle.h **** 
 4236              		.loc 11 427 0
 4237 0028 83B2     		uxth	r3, r0
 4238              	.LVL479:
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 4239              		.loc 11 431 0
 4240 002a 84F81922 		strb	r2, [r4, #537]
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 4241              		.loc 11 432 0
 4242 002e C2B2     		uxtb	r2, r0
 433:./lib/ros_lib/ros/node_handle.h **** 	message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 4243              		.loc 11 433 0
 4244 0030 C0F30720 		ubfx	r0, r0, #8, #8
 4245 0034 84F81B02 		strb	r0, [r4, #539]
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 4246              		.loc 11 434 0
 4247 0038 1044     		add	r0, r0, r2
 4248 003a C043     		mvns	r0, r0
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 4249              		.loc 11 435 0
 4250 003c 84F81D62 		strb	r6, [r4, #541]
 436:./lib/ros_lib/ros/node_handle.h **** 
 4251              		.loc 11 436 0
 4252 0040 46F30726 		sbfx	r6, r6, #8, #8
 4253              	.LVL480:
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 4254              		.loc 11 432 0
 4255 0044 84F81A22 		strb	r2, [r4, #538]
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 4256              		.loc 11 434 0
 4257 0048 84F81C02 		strb	r0, [r4, #540]
 436:./lib/ros_lib/ros/node_handle.h **** 
 4258              		.loc 11 436 0
 4259 004c 84F81E62 		strb	r6, [r4, #542]
 4260              	.LVL481:
 4261 0050 04F50770 		add	r0, r4, #540
 4262              	.LBB314:
 440:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 4263              		.loc 11 440 0
 4264 0054 0521     		movs	r1, #5
 4265              	.LBE314:
 439:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 4266              		.loc 11 439 0
 4267 0056 0022     		movs	r2, #0
 4268              	.LBB315:
 440:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 4269              		.loc 11 440 0
 4270 0058 9E1D     		adds	r6, r3, #6
 4271              	.LVL482:
 4272              	.L230:
 440:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 4273              		.loc 11 440 0 is_stmt 0 discriminator 3
 4274 005a B142     		cmp	r1, r6
 4275 005c 04DC     		bgt	.L229
 441:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 4276              		.loc 11 441 0 is_stmt 1 discriminator 2
 4277 005e 10F8015F 		ldrb	r5, [r0, #1]!	@ zero_extendqisi2
 440:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 4278              		.loc 11 440 0 discriminator 2
 4279 0062 0131     		adds	r1, r1, #1
 4280              	.LVL483:
 441:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 4281              		.loc 11 441 0 discriminator 2
 4282 0064 2A44     		add	r2, r2, r5
 4283              	.LVL484:
 440:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 4284              		.loc 11 440 0 discriminator 2
 4285 0066 F8E7     		b	.L230
 4286              	.L229:
 4287              	.LVL485:
 4288              	.LBE315:
 443:./lib/ros_lib/ros/node_handle.h **** 
 4289              		.loc 11 443 0
 4290 0068 D243     		mvns	r2, r2
 4291              	.LVL486:
 4292 006a 03F10806 		add	r6, r3, #8
 4293 006e 0733     		adds	r3, r3, #7
 4294              	.LVL487:
 4295 0070 B6B2     		uxth	r6, r6
 4296              	.LVL488:
 4297 0072 9BB2     		uxth	r3, r3
 4298 0074 2344     		add	r3, r3, r4
 445:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 4299              		.loc 11 445 0
 4300 0076 B6F5007F 		cmp	r6, #512
 443:./lib/ros_lib/ros/node_handle.h **** 
 4301              		.loc 11 443 0
 4302 007a 83F81822 		strb	r2, [r3, #536]
 445:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 4303              		.loc 11 445 0
 4304 007e 13D8     		bhi	.L231
 446:./lib/ros_lib/ros/node_handle.h ****           return l;
 4305              		.loc 11 446 0
 4306 0080 04F50678 		add	r8, r4, #536
 4307 0084 3546     		mov	r5, r6
 4308              	.LVL489:
 4309 0086 4746     		mov	r7, r8
 4310              	.LBB316:
 4311              	.LBB317:
 132:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 4312              		.loc 15 132 0
 4313 0088 DFF83490 		ldr	r9, .L238+4
 4314              	.LVL490:
 4315              	.L233:
 131:./lib/ros_lib/ArduinoHardware.h ****         while( !(USART1->SR & 0x00000040) );
 4316              		.loc 15 131 0
 4317 008c C8EB0703 		rsb	r3, r8, r7
 4318 0090 9E42     		cmp	r6, r3
 4319 0092 0FDD     		ble	.L228
 4320              	.L236:
 132:./lib/ros_lib/ArduinoHardware.h ****         USART_SendData(iostream, data[i]);
 4321              		.loc 15 132 0
 4322 0094 B9F80030 		ldrh	r3, [r9]
 4323 0098 5B06     		lsls	r3, r3, #25
 4324 009a FBD5     		bpl	.L236
 133:./lib/ros_lib/ArduinoHardware.h ****       }
 4325              		.loc 15 133 0
 4326 009c 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 4327              	.LVL491:
 4328 00a0 6068     		ldr	r0, [r4, #4]
 4329 00a2 FFF7FEFF 		bl	USART_SendData
 4330              	.LVL492:
 4331 00a6 F1E7     		b	.L233
 4332              	.LVL493:
 4333              	.L231:
 4334              	.LBE317:
 4335              	.LBE316:
 449:./lib/ros_lib/ros/node_handle.h ****           return -1;
 4336              		.loc 11 449 0
 4337 00a8 0449     		ldr	r1, .L238
 4338              	.LVL494:
 4339 00aa 2046     		mov	r0, r4
 4340 00ac FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 4341              	.LVL495:
 450:./lib/ros_lib/ros/node_handle.h ****         }
 4342              		.loc 11 450 0
 4343 00b0 4FF0FF35 		mov	r5, #-1
 4344              	.LVL496:
 4345              	.L228:
 452:./lib/ros_lib/ros/node_handle.h **** 
 4346              		.loc 11 452 0
 4347 00b4 2846     		mov	r0, r5
 4348 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4349              	.LVL497:
 4350              	.L239:
 4351 00ba 00BF     		.align	2
 4352              	.L238:
 4353 00bc 2E020000 		.word	.LC21
 4354 00c0 00380140 		.word	1073821696
 4355              		.cfi_endproc
 4356              	.LFE1328:
 4357              		.fnend
 4359              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv,"a
 4360              		.align	1
 4361              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 4362              		.thumb
 4363              		.thumb_func
 4365              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:
 4366              		.fnstart
 4367              	.LFB1325:
 293:./lib/ros_lib/ros/node_handle.h ****       {
 4368              		.loc 11 293 0
 4369              		.cfi_startproc
 4370              		@ args = 0, pretend = 0, frame = 16
 4371              		@ frame_needed = 0, uses_anonymous_args = 0
 4372              	.LVL498:
 4373 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 4374              		.save {r4, lr}
 4375              		.pad #16
 4376              	.LCFI51:
 4377              		.cfi_def_cfa_offset 24
 4378              		.cfi_offset 4, -8
 4379              		.cfi_offset 14, -4
 4380              	.LVL499:
 4381              	.LBB318:
 4382              	.LBB319:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4383              		.loc 1 19 0
 4384 0002 084B     		ldr	r3, .L241
 4385              	.LBE319:
 4386              	.LBE318:
 296:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4387              		.loc 11 296 0
 4388 0004 01AA     		add	r2, sp, #4
 4389              	.LVL500:
 4390              	.LBB323:
 4391              	.LBB322:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4392              		.loc 1 19 0
 4393 0006 0193     		str	r3, [sp, #4]
 4394              	.LVL501:
 4395              	.LBB320:
 4396              	.LBB321:
 4397              		.file 17 "./lib/ros_lib/ros/time.h"
   1:./lib/ros_lib/ros/time.h **** /*
   2:./lib/ros_lib/ros/time.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/time.h ****  *
   4:./lib/ros_lib/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/time.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/time.h ****  *
   7:./lib/ros_lib/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/time.h ****  * are met:
  10:./lib/ros_lib/ros/time.h ****  *
  11:./lib/ros_lib/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/time.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/time.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/time.h ****  *
  21:./lib/ros_lib/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/time.h ****  */
  34:./lib/ros_lib/ros/time.h **** 
  35:./lib/ros_lib/ros/time.h **** #ifndef ROS_TIME_H_
  36:./lib/ros_lib/ros/time.h **** #define ROS_TIME_H_
  37:./lib/ros_lib/ros/time.h **** 
  38:./lib/ros_lib/ros/time.h **** #include <math.h>
  39:./lib/ros_lib/ros/time.h **** #include <stdint.h>
  40:./lib/ros_lib/ros/time.h **** 
  41:./lib/ros_lib/ros/time.h **** #include "ros/duration.h"
  42:./lib/ros_lib/ros/time.h **** 
  43:./lib/ros_lib/ros/time.h **** namespace ros
  44:./lib/ros_lib/ros/time.h **** {
  45:./lib/ros_lib/ros/time.h ****   void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  46:./lib/ros_lib/ros/time.h **** 
  47:./lib/ros_lib/ros/time.h ****   class Time
  48:./lib/ros_lib/ros/time.h ****   {
  49:./lib/ros_lib/ros/time.h ****     public:
  50:./lib/ros_lib/ros/time.h ****       uint32_t sec, nsec;
  51:./lib/ros_lib/ros/time.h **** 
  52:./lib/ros_lib/ros/time.h ****       Time() : sec(0), nsec(0) {}
 4398              		.loc 17 52 0
 4399 0008 0023     		movs	r3, #0
 4400 000a 0293     		str	r3, [sp, #8]
 4401 000c 0393     		str	r3, [sp, #12]
 4402              	.LVL502:
 4403              	.LBE321:
 4404              	.LBE320:
 4405              	.LBE322:
 4406              	.LBE323:
 296:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4407              		.loc 11 296 0
 4408 000e 0368     		ldr	r3, [r0]
 4409 0010 0A21     		movs	r1, #10
 4410 0012 1B68     		ldr	r3, [r3]
 293:./lib/ros_lib/ros/node_handle.h ****       {
 4411              		.loc 11 293 0
 4412 0014 0446     		mov	r4, r0
 296:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4413              		.loc 11 296 0
 4414 0016 9847     		blx	r3
 4415              	.LVL503:
 4416              	.LBB324:
 4417              	.LBB325:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 4418              		.loc 15 138 0
 4419 0018 FFF7FEFF 		bl	millis
 4420              	.LVL504:
 4421              	.LBE325:
 4422              	.LBE324:
 297:./lib/ros_lib/ros/node_handle.h ****       }
 4423              		.loc 11 297 0
 4424 001c E060     		str	r0, [r4, #12]
 298:./lib/ros_lib/ros/node_handle.h **** 
 4425              		.loc 11 298 0
 4426 001e 04B0     		add	sp, sp, #16
 4427              	.LCFI52:
 4428              		.cfi_def_cfa_offset 8
 4429              		@ sp needed
 4430 0020 10BD     		pop	{r4, pc}
 4431              	.LVL505:
 4432              	.L242:
 4433 0022 00BF     		.align	2
 4434              	.L241:
 4435 0024 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4436              		.cfi_endproc
 4437              	.LFE1325:
 4438              		.fnend
 4440              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv,"a
 4441              		.align	1
 4442              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 4443              		.thumb
 4444              		.thumb_func
 4446              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:
 4447              		.fnstart
 4448              	.LFB1326:
 390:./lib/ros_lib/ros/node_handle.h ****       {
 4449              		.loc 11 390 0
 4450              		.cfi_startproc
 4451              		@ args = 0, pretend = 0, frame = 24
 4452              		@ frame_needed = 0, uses_anonymous_args = 0
 4453              	.LVL506:
 4454 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4455              		.save {r4, r5, r6, r7, r8, lr}
 4456              	.LCFI53:
 4457              		.cfi_def_cfa_offset 24
 4458              		.cfi_offset 4, -24
 4459              		.cfi_offset 5, -20
 4460              		.cfi_offset 6, -16
 4461              		.cfi_offset 7, -12
 4462              		.cfi_offset 8, -8
 4463              		.cfi_offset 14, -4
 4464 0004 0446     		mov	r4, r0
 4465              	.LBB331:
 4466              	.LBB332:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 4467              		.loc 2 34 0
 4468 0006 2B4B     		ldr	r3, .L256
 4469              	.LBE332:
 4470              	.LBE331:
 390:./lib/ros_lib/ros/node_handle.h ****       {
 4471              		.loc 11 390 0
 4472              		.pad #24
 4473 0008 86B0     		sub	sp, sp, #24
 4474              	.LCFI54:
 4475              		.cfi_def_cfa_offset 48
 4476              	.LVL507:
 4477              	.LBB334:
 4478              	.LBB333:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 4479              		.loc 2 34 0
 4480 000a 0093     		str	r3, [sp]
 4481 000c 2A4B     		ldr	r3, .L256+4
 4482 000e 0022     		movs	r2, #0
 4483 0010 ADF80420 		strh	r2, [sp, #4]	@ movhi
 4484 0014 0293     		str	r3, [sp, #8]
 4485 0016 0393     		str	r3, [sp, #12]
 4486 0018 0493     		str	r3, [sp, #16]
 4487 001a 0592     		str	r2, [sp, #20]
 4488              	.LVL508:
 4489 001c 00F21446 		addw	r6, r0, #1044
 4490 0020 00F58F65 		add	r5, r0, #1144
 4491              	.LBE333:
 4492              	.LBE334:
 402:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 4493              		.loc 11 402 0
 4494 0024 4FF40077 		mov	r7, #512
 4495              	.LVL509:
 4496              	.L245:
 396:./lib/ros_lib/ros/node_handle.h ****           {
 4497              		.loc 11 396 0
 4498 0028 56F8043F 		ldr	r3, [r6, #4]!
 4499 002c BBB1     		cbz	r3, .L244
 398:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 4500              		.loc 11 398 0
 4501 002e 9A68     		ldr	r2, [r3, #8]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4502              		.loc 11 400 0
 4503 0030 5868     		ldr	r0, [r3, #4]
 398:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 4504              		.loc 11 398 0
 4505 0032 ADF80420 		strh	r2, [sp, #4]	@ movhi
 399:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 4506              		.loc 11 399 0
 4507 0036 1A68     		ldr	r2, [r3]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4508              		.loc 11 400 0
 4509 0038 0368     		ldr	r3, [r0]
 399:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 4510              		.loc 11 399 0
 4511 003a 0292     		str	r2, [sp, #8]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4512              		.loc 11 400 0
 4513 003c 9B68     		ldr	r3, [r3, #8]
 4514 003e 9847     		blx	r3
 4515              	.LVL510:
 401:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4516              		.loc 11 401 0
 4517 0040 3368     		ldr	r3, [r6]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4518              		.loc 11 400 0
 4519 0042 0390     		str	r0, [sp, #12]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4520              		.loc 11 401 0
 4521 0044 5868     		ldr	r0, [r3, #4]
 4522 0046 0368     		ldr	r3, [r0]
 4523 0048 DB68     		ldr	r3, [r3, #12]
 4524 004a 9847     		blx	r3
 4525              	.LVL511:
 4526 004c 3168     		ldr	r1, [r6]
 403:./lib/ros_lib/ros/node_handle.h ****           }
 4527              		.loc 11 403 0
 4528 004e 2368     		ldr	r3, [r4]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4529              		.loc 11 401 0
 4530 0050 0490     		str	r0, [sp, #16]
 402:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 4531              		.loc 11 402 0
 4532 0052 0597     		str	r7, [sp, #20]
 4533              	.LVL512:
 403:./lib/ros_lib/ros/node_handle.h ****           }
 4534              		.loc 11 403 0
 4535 0054 1B68     		ldr	r3, [r3]
 4536 0056 6A46     		mov	r2, sp
 4537 0058 0969     		ldr	r1, [r1, #16]
 4538              	.LVL513:
 4539 005a 2046     		mov	r0, r4
 4540 005c 9847     		blx	r3
 4541              	.LVL514:
 4542              	.L244:
 394:./lib/ros_lib/ros/node_handle.h ****         {
 4543              		.loc 11 394 0 discriminator 2
 4544 005e AE42     		cmp	r6, r5
 4545 0060 E2D1     		bne	.L245
 4546 0062 04F2DC46 		addw	r6, r4, #1244
 414:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 4547              		.loc 11 414 0
 4548 0066 4FF40077 		mov	r7, #512
 4549              	.L247:
 408:./lib/ros_lib/ros/node_handle.h ****           {
 4550              		.loc 11 408 0
 4551 006a 55F8040F 		ldr	r0, [r5, #4]!
 4552 006e C8B1     		cbz	r0, .L246
 410:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 4553              		.loc 11 410 0
 4554 0070 4368     		ldr	r3, [r0, #4]
 4555 0072 ADF80430 		strh	r3, [sp, #4]	@ movhi
 411:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 4556              		.loc 11 411 0
 4557 0076 8368     		ldr	r3, [r0, #8]
 4558 0078 0293     		str	r3, [sp, #8]
 412:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 4559              		.loc 11 412 0
 4560 007a 0368     		ldr	r3, [r0]
 4561 007c 9B68     		ldr	r3, [r3, #8]
 4562 007e 9847     		blx	r3
 4563              	.LVL515:
 4564 0080 0390     		str	r0, [sp, #12]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 4565              		.loc 11 413 0
 4566 0082 2868     		ldr	r0, [r5]
 4567 0084 0368     		ldr	r3, [r0]
 4568 0086 DB68     		ldr	r3, [r3, #12]
 4569 0088 9847     		blx	r3
 4570              	.LVL516:
 415:./lib/ros_lib/ros/node_handle.h ****           }
 4571              		.loc 11 415 0
 4572 008a 2368     		ldr	r3, [r4]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 4573              		.loc 11 413 0
 4574 008c 0490     		str	r0, [sp, #16]
 415:./lib/ros_lib/ros/node_handle.h ****           }
 4575              		.loc 11 415 0
 4576 008e 2868     		ldr	r0, [r5]
 4577 0090 D3F80080 		ldr	r8, [r3]
 4578 0094 0368     		ldr	r3, [r0]
 414:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 4579              		.loc 11 414 0
 4580 0096 0597     		str	r7, [sp, #20]
 415:./lib/ros_lib/ros/node_handle.h ****           }
 4581              		.loc 11 415 0
 4582 0098 5B68     		ldr	r3, [r3, #4]
 4583 009a 9847     		blx	r3
 4584              	.LVL517:
 4585 009c 6A46     		mov	r2, sp
 4586 009e 0146     		mov	r1, r0
 4587 00a0 2046     		mov	r0, r4
 4588 00a2 C047     		blx	r8
 4589              	.LVL518:
 4590              	.L246:
 406:./lib/ros_lib/ros/node_handle.h ****         {
 4591              		.loc 11 406 0 discriminator 2
 4592 00a4 AE42     		cmp	r6, r5
 4593 00a6 E0D1     		bne	.L247
 418:./lib/ros_lib/ros/node_handle.h ****       }
 4594              		.loc 11 418 0
 4595 00a8 0123     		movs	r3, #1
 4596 00aa 84F8F434 		strb	r3, [r4, #1268]
 419:./lib/ros_lib/ros/node_handle.h **** 
 4597              		.loc 11 419 0
 4598 00ae 06B0     		add	sp, sp, #24
 4599              	.LCFI55:
 4600              		.cfi_def_cfa_offset 24
 4601              	.LVL519:
 4602              		@ sp needed
 4603 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4604              	.LVL520:
 4605              	.L257:
 4606              		.align	2
 4607              	.L256:
 4608 00b4 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 4609 00b8 67020000 		.word	.LC22
 4610              		.cfi_endproc
 4611              	.LFE1326:
 4612              		.fnend
 4614              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh,"axG",%pr
 4615              		.align	1
 4616              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 4617              		.thumb
 4618              		.thumb_func
 4620              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:
 4621              		.fnstart
 4622              	.LFB1327:
 300:./lib/ros_lib/ros/node_handle.h ****       {
 4623              		.loc 11 300 0
 4624              		.cfi_startproc
 4625              		@ args = 0, pretend = 0, frame = 16
 4626              		@ frame_needed = 0, uses_anonymous_args = 0
 4627              	.LVL521:
 4628 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 4629              		.save {r4, r5, r6, lr}
 4630              		.pad #16
 4631              	.LCFI56:
 4632              		.cfi_def_cfa_offset 32
 4633              		.cfi_offset 4, -16
 4634              		.cfi_offset 5, -12
 4635              		.cfi_offset 6, -8
 4636              		.cfi_offset 14, -4
 4637              	.LVL522:
 4638              	.LBB349:
 4639              	.LBB350:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4640              		.loc 1 19 0
 4641 0002 1C4B     		ldr	r3, .L259
 4642              	.LBE350:
 4643              	.LBE349:
 300:./lib/ros_lib/ros/node_handle.h ****       {
 4644              		.loc 11 300 0
 4645 0004 0446     		mov	r4, r0
 4646              	.LBB354:
 4647              	.LBB353:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4648              		.loc 1 19 0
 4649 0006 0193     		str	r3, [sp, #4]
 4650              	.LVL523:
 4651              	.LBB351:
 4652              	.LBB352:
 4653              		.loc 17 52 0
 4654 0008 0023     		movs	r3, #0
 4655 000a 0293     		str	r3, [sp, #8]
 4656 000c 0393     		str	r3, [sp, #12]
 4657              	.LVL524:
 4658              	.LBE352:
 4659              	.LBE351:
 4660              	.LBE353:
 4661              	.LBE354:
 300:./lib/ros_lib/ros/node_handle.h ****       {
 4662              		.loc 11 300 0
 4663 000e 0D46     		mov	r5, r1
 4664              	.LBB355:
 4665              	.LBB356:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 4666              		.loc 15 138 0
 4667 0010 FFF7FEFF 		bl	millis
 4668              	.LVL525:
 4669              	.LBE356:
 4670              	.LBE355:
 303:./lib/ros_lib/ros/node_handle.h **** 
 4671              		.loc 11 303 0
 4672 0014 E268     		ldr	r2, [r4, #12]
 305:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 4673              		.loc 11 305 0
 4674 0016 2946     		mov	r1, r5
 303:./lib/ros_lib/ros/node_handle.h **** 
 4675              		.loc 11 303 0
 4676 0018 861A     		subs	r6, r0, r2
 4677              	.LVL526:
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4678              		.loc 11 306 0
 4679 001a 4FF47A75 		mov	r5, #1000
 4680              	.LVL527:
 305:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 4681              		.loc 11 305 0
 4682 001e 01A8     		add	r0, sp, #4
 4683 0020 FFF7FEFF 		bl	_ZN8std_msgs4Time11deserializeEPh
 4684              	.LVL528:
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4685              		.loc 11 306 0
 4686 0024 B6FBF5F2 		udiv	r2, r6, r5
 4687 0028 029B     		ldr	r3, [sp, #8]
 4688 002a 1344     		add	r3, r3, r2
 307:./lib/ros_lib/ros/node_handle.h **** 
 4689              		.loc 11 307 0
 4690 002c 05FB1262 		mls	r2, r5, r2, r6
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4691              		.loc 11 306 0
 4692 0030 0293     		str	r3, [sp, #8]
 307:./lib/ros_lib/ros/node_handle.h **** 
 4693              		.loc 11 307 0
 4694 0032 114E     		ldr	r6, .L259+4
 4695              	.LVL529:
 4696 0034 039B     		ldr	r3, [sp, #12]
 4697 0036 06FB0232 		mla	r2, r6, r2, r3
 4698 003a 0392     		str	r2, [sp, #12]
 4699              	.LVL530:
 4700              	.LBB357:
 4701              	.LBB358:
 4702              	.LBB359:
 4703              	.LBB360:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 4704              		.loc 15 138 0
 4705 003c FFF7FEFF 		bl	millis
 4706              	.LVL531:
 4707              	.LBE360:
 4708              	.LBE359:
 326:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 4709              		.loc 11 326 0
 4710 0040 B0FBF5F3 		udiv	r3, r0, r5
 4711 0044 029A     		ldr	r2, [sp, #8]
 327:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4712              		.loc 11 327 0
 4713 0046 0399     		ldr	r1, [sp, #12]
 326:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 4714              		.loc 11 326 0
 4715 0048 013A     		subs	r2, r2, #1
 4716 004a D21A     		subs	r2, r2, r3
 4717 004c 2261     		str	r2, [r4, #16]
 327:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4718              		.loc 11 327 0
 4719 004e 0B4A     		ldr	r2, .L259+8
 4720 0050 05FB1300 		mls	r0, r5, r3, r0
 4721              	.LVL532:
 4722 0054 0A44     		add	r2, r2, r1
 4723 0056 2146     		mov	r1, r4
 4724 0058 06FB1023 		mls	r3, r6, r0, r2
 328:./lib/ros_lib/ros/node_handle.h ****       }
 4725              		.loc 11 328 0
 4726 005c 04F11000 		add	r0, r4, #16
 327:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4727              		.loc 11 327 0
 4728 0060 41F8143F 		str	r3, [r1, #20]!
 328:./lib/ros_lib/ros/node_handle.h ****       }
 4729              		.loc 11 328 0
 4730 0064 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 4731              	.LVL533:
 4732              	.LBE358:
 4733              	.LBE357:
 4734              	.LBB361:
 4735              	.LBB362:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 4736              		.loc 15 138 0
 4737 0068 FFF7FEFF 		bl	millis
 4738              	.LVL534:
 4739              	.LBE362:
 4740              	.LBE361:
 310:./lib/ros_lib/ros/node_handle.h ****       }
 4741              		.loc 11 310 0
 4742 006c C4F8FC04 		str	r0, [r4, #1276]
 311:./lib/ros_lib/ros/node_handle.h **** 
 4743              		.loc 11 311 0
 4744 0070 04B0     		add	sp, sp, #16
 4745              	.LCFI57:
 4746              		.cfi_def_cfa_offset 16
 4747              		@ sp needed
 4748 0072 70BD     		pop	{r4, r5, r6, pc}
 4749              	.LVL535:
 4750              	.L260:
 4751              		.align	2
 4752              	.L259:
 4753 0074 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4754 0078 40420F00 		.word	1000000
 4755 007c 00CA9A3B 		.word	1000000000
 4756              		.cfi_endproc
 4757              	.LFE1327:
 4758              		.fnend
 4760              		.section	.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv,"axG",%pro
 4761              		.align	1
 4762              		.weak	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 4763              		.thumb
 4764              		.thumb_func
 4766              	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:
 4767              		.fnstart
 4768              	.LFB1318:
 184:./lib/ros_lib/ros/node_handle.h **** 
 4769              		.loc 11 184 0
 4770              		.cfi_startproc
 4771              		@ args = 0, pretend = 0, frame = 0
 4772              		@ frame_needed = 0, uses_anonymous_args = 0
 4773              	.LVL536:
 4774 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4775              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 4776              	.LCFI58:
 4777              		.cfi_def_cfa_offset 32
 4778              		.cfi_offset 3, -32
 4779              		.cfi_offset 4, -28
 4780              		.cfi_offset 5, -24
 4781              		.cfi_offset 6, -20
 4782              		.cfi_offset 7, -16
 4783              		.cfi_offset 8, -12
 4784              		.cfi_offset 9, -8
 4785              		.cfi_offset 14, -4
 184:./lib/ros_lib/ros/node_handle.h **** 
 4786              		.loc 11 184 0
 4787 0004 0446     		mov	r4, r0
 4788              	.LVL537:
 4789              	.LBB376:
 4790              	.LBB377:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 4791              		.loc 15 138 0
 4792 0006 FFF7FEFF 		bl	millis
 4793              	.LVL538:
 4794              	.LBE377:
 4795              	.LBE376:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 4796              		.loc 11 188 0
 4797 000a 42F6F822 		movw	r2, #11000
 4798 000e D4F8FC34 		ldr	r3, [r4, #1276]
 4799              	.LBB379:
 4800              	.LBB378:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 4801              		.loc 15 138 0
 4802 0012 0646     		mov	r6, r0
 4803              	.LVL539:
 4804              	.LBE378:
 4805              	.LBE379:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 4806              		.loc 11 188 0
 4807 0014 C31A     		subs	r3, r0, r3
 4808 0016 9342     		cmp	r3, r2
 189:./lib/ros_lib/ros/node_handle.h ****          }
 4809              		.loc 11 189 0
 4810 0018 84BF     		itt	hi
 4811 001a 0023     		movhi	r3, #0
 4812 001c 84F8F434 		strbhi	r3, [r4, #1268]
 193:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 4813              		.loc 11 193 0
 4814 0020 D4F8E034 		ldr	r3, [r4, #1248]
 4815 0024 33B1     		cbz	r3, .L263
 194:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 4816              		.loc 11 194 0
 4817 0026 D4F80035 		ldr	r3, [r4, #1280]
 4818 002a 8342     		cmp	r3, r0
 195:./lib/ros_lib/ros/node_handle.h ****           }
 4819              		.loc 11 195 0
 4820 002c 3CBF     		itt	cc
 4821 002e 0023     		movcc	r3, #0
 4822 0030 C4F8E034 		strcc	r3, [r4, #1248]
 4823              	.L263:
 4824              	.LBB380:
 4825              	.LBB381:
 4826              	.LBB382:
 119:./lib/ros_lib/ArduinoHardware.h ****         __enable_irq();
 4827              		.loc 15 119 0
 4828 0034 764F     		ldr	r7, .L301
 4829              	.LBE382:
 4830              	.LBE381:
 251:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 4831              		.loc 11 251 0
 4832 0036 4FF00008 		mov	r8, #0
 268:./lib/ros_lib/ros/node_handle.h ****               }
 4833              		.loc 11 268 0
 4834 003a 04F11809 		add	r9, r4, #24
 4835              	.LVL540:
 4836              	.L264:
 4837              	.LBB391:
 4838              	.LBB389:
 4839              	.LBB383:
 4840              	.LBB384:
1205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 4841              		.loc 16 1205 0
 4842              		.syntax unified
 4843              	@ 1205 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h" 1
 4844 003e 72B6     		cpsid i
 4845              	@ 0 "" 2
 4846              		.thumb
 4847              		.syntax unified
 4848              	.LBE384:
 4849              	.LBE383:
 119:./lib/ros_lib/ArduinoHardware.h ****         __enable_irq();
 4850              		.loc 15 119 0
 4851 0040 BA6A     		ldr	r2, [r7, #40]
 4852 0042 7B6A     		ldr	r3, [r7, #36]
 4853 0044 9A42     		cmp	r2, r3
 4854 0046 07D1     		bne	.L265
 4855              	.LBB385:
 4856              	.LBB386:
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
 4857              		.loc 16 1204 0
 4858              		.syntax unified
 4859              	@ 1204 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h" 1
 4860 0048 62B6     		cpsie i
 4861              	@ 0 "" 2
 4862              		.thumb
 4863              		.syntax unified
 4864              	.LBE386:
 4865              	.LBE385:
 4866              	.LBE389:
 4867              	.LBE391:
 4868              	.LBE380:
 275:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 4869              		.loc 11 275 0
 4870 004a 94F8F404 		ldrb	r0, [r4, #1268]	@ zero_extendqisi2
 4871 004e 0028     		cmp	r0, #0
 4872 0050 40F0CF80 		bne	.L266
 4873 0054 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4874              	.LVL541:
 4875              	.L265:
 4876              	.LBB395:
 4877              	.LBB392:
 4878              	.LBB390:
 124:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 4879              		.loc 15 124 0
 4880 0058 7B6A     		ldr	r3, [r7, #36]
 4881 005a 07EB4303 		add	r3, r7, r3, lsl #1
 4882 005e 9B8D     		ldrh	r3, [r3, #44]
 125:./lib/ros_lib/ArduinoHardware.h ****       __enable_irq();
 4883              		.loc 15 125 0
 4884 0060 7A6A     		ldr	r2, [r7, #36]
 124:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = (USART_CNTOUT + 1) % BUFFER_SIZE;
 4885              		.loc 15 124 0
 4886 0062 9BB2     		uxth	r3, r3
 4887              	.LVL542:
 125:./lib/ros_lib/ArduinoHardware.h ****       __enable_irq();
 4888              		.loc 15 125 0
 4889 0064 0132     		adds	r2, r2, #1
 4890 0066 C2F30802 		ubfx	r2, r2, #0, #9
 4891 006a 7A62     		str	r2, [r7, #36]
 4892              	.LBB387:
 4893              	.LBB388:
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
 4894              		.loc 16 1204 0
 4895              		.syntax unified
 4896              	@ 1204 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h" 1
 4897 006c 62B6     		cpsie i
 4898              	@ 0 "" 2
 4899              	.LVL543:
 4900              		.thumb
 4901              		.syntax unified
 4902              	.LBE388:
 4903              	.LBE387:
 4904              	.LBE390:
 4905              	.LBE392:
 204:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 4906              		.loc 11 204 0
 4907 006e D4F8F024 		ldr	r2, [r4, #1264]
 205:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4908              		.loc 11 205 0
 4909 0072 D4F8E054 		ldr	r5, [r4, #1248]
 204:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 4910              		.loc 11 204 0
 4911 0076 1A44     		add	r2, r2, r3
 205:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4912              		.loc 11 205 0
 4913 0078 072D     		cmp	r5, #7
 204:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 4914              		.loc 11 204 0
 4915 007a C4F8F024 		str	r2, [r4, #1264]
 205:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4916              		.loc 11 205 0
 4917 007e 0FD1     		bne	.L268
 206:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 4918              		.loc 11 206 0
 4919 0080 D4F8EC24 		ldr	r2, [r4, #1260]
 4920 0084 511C     		adds	r1, r2, #1
 4921 0086 2244     		add	r2, r2, r4
 4922 0088 C4F8EC14 		str	r1, [r4, #1260]
 4923 008c 1376     		strb	r3, [r2, #24]
 207:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 4924              		.loc 11 207 0
 4925 008e D4F8E434 		ldr	r3, [r4, #1252]
 4926 0092 013B     		subs	r3, r3, #1
 4927 0094 C4F8E434 		str	r3, [r4, #1252]
 4928              	.L300:
 208:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 4929              		.loc 11 208 0
 4930 0098 002B     		cmp	r3, #0
 4931 009a D0D1     		bne	.L264
 209:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 4932              		.loc 11 209 0
 4933 009c 0823     		movs	r3, #8
 4934 009e 1AE0     		b	.L298
 4935              	.L268:
 210:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 4936              		.loc 11 210 0
 4937 00a0 A5B9     		cbnz	r5, .L271
 211:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 4938              		.loc 11 211 0
 4939 00a2 FF2B     		cmp	r3, #255
 4940 00a4 07D1     		bne	.L272
 212:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 4941              		.loc 11 212 0
 4942 00a6 0123     		movs	r3, #1
 4943 00a8 C4F8E034 		str	r3, [r4, #1248]
 213:./lib/ros_lib/ros/node_handle.h ****             }
 4944              		.loc 11 213 0
 4945 00ac 06F11403 		add	r3, r6, #20
 4946 00b0 C4F80035 		str	r3, [r4, #1280]
 4947 00b4 C3E7     		b	.L264
 4948              	.L272:
 4949              	.LVL544:
 4950              	.LBB393:
 4951              	.LBB394:
 138:./lib/ros_lib/ArduinoHardware.h ****     }
 4952              		.loc 15 138 0
 4953 00b6 FFF7FEFF 		bl	millis
 4954              	.LVL545:
 4955              	.LBE394:
 4956              	.LBE393:
 215:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 4957              		.loc 11 215 0
 4958 00ba 801B     		subs	r0, r0, r6
 4959 00bc 0528     		cmp	r0, #5
 4960 00be BED9     		bls	.L264
 217:./lib/ros_lib/ros/node_handle.h ****               return -2;
 4961              		.loc 11 217 0
 4962 00c0 84F8F454 		strb	r5, [r4, #1268]
 218:./lib/ros_lib/ros/node_handle.h ****             }
 4963              		.loc 11 218 0
 4964 00c4 6FF00100 		mvn	r0, #1
 4965 00c8 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4966              	.LVL546:
 4967              	.L271:
 220:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 4968              		.loc 11 220 0
 4969 00cc 012D     		cmp	r5, #1
 4970 00ce 0FD1     		bne	.L273
 221:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 4971              		.loc 11 221 0
 4972 00d0 FE2B     		cmp	r3, #254
 4973 00d2 03D1     		bne	.L274
 222:./lib/ros_lib/ros/node_handle.h ****             }else{
 4974              		.loc 11 222 0
 4975 00d4 0223     		movs	r3, #2
 4976              	.L298:
 4977 00d6 C4F8E034 		str	r3, [r4, #1248]
 4978 00da B0E7     		b	.L264
 4979              	.L274:
 225:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 4980              		.loc 11 225 0
 4981 00dc 94F8F434 		ldrb	r3, [r4, #1268]	@ zero_extendqisi2
 224:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 4982              		.loc 11 224 0
 4983 00e0 C4F8E084 		str	r8, [r4, #1248]
 225:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 4984              		.loc 11 225 0
 4985 00e4 002B     		cmp	r3, #0
 4986 00e6 AAD1     		bne	.L264
 226:./lib/ros_lib/ros/node_handle.h ****             }
 4987              		.loc 11 226 0
 4988 00e8 2046     		mov	r0, r4
 4989 00ea FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 4990              	.LVL547:
 4991 00ee A6E7     		b	.L264
 4992              	.L273:
 228:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 4993              		.loc 11 228 0
 4994 00f0 022D     		cmp	r5, #2
 4995 00f2 05D1     		bne	.L275
 229:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 4996              		.loc 11 229 0
 4997 00f4 C4F8E434 		str	r3, [r4, #1252]
 230:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 4998              		.loc 11 230 0
 4999 00f8 C4F8EC84 		str	r8, [r4, #1260]
 231:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 5000              		.loc 11 231 0
 5001 00fc 0322     		movs	r2, #3
 5002 00fe 20E0     		b	.L299
 5003              	.L275:
 233:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 5004              		.loc 11 233 0
 5005 0100 032D     		cmp	r5, #3
 5006 0102 07D1     		bne	.L276
 234:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 5007              		.loc 11 234 0
 5008 0104 D4F8E424 		ldr	r2, [r4, #1252]
 5009 0108 02EB0323 		add	r3, r2, r3, lsl #8
 5010 010c C4F8E434 		str	r3, [r4, #1252]
 235:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 5011              		.loc 11 235 0
 5012 0110 0423     		movs	r3, #4
 5013 0112 E0E7     		b	.L298
 5014              	.L276:
 236:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 5015              		.loc 11 236 0
 5016 0114 042D     		cmp	r5, #4
 5017 0116 0FD1     		bne	.L277
 237:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 5018              		.loc 11 237 0
 5019 0118 3E4B     		ldr	r3, .L301+4
 5020 011a 1340     		ands	r3, r3, r2
 5021 011c 002B     		cmp	r3, #0
 5022 011e BEBF     		ittt	lt
 5023 0120 03F1FF33 		addlt	r3, r3, #-1
 5024 0124 63F0FF03 		ornlt	r3, r3, #255
 5025 0128 0133     		addlt	r3, r3, #1
 5026 012a FF2B     		cmp	r3, #255
 5027 012c 01D1     		bne	.L278
 238:./lib/ros_lib/ros/node_handle.h **** 	    else
 5028              		.loc 11 238 0
 5029 012e 0523     		movs	r3, #5
 5030 0130 D1E7     		b	.L298
 5031              	.L278:
 240:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 5032              		.loc 11 240 0
 5033 0132 C4F8E084 		str	r8, [r4, #1248]
 5034 0136 82E7     		b	.L264
 5035              	.L277:
 241:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 5036              		.loc 11 241 0
 5037 0138 052D     		cmp	r5, #5
 5038 013a 07D1     		bne	.L280
 242:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 5039              		.loc 11 242 0
 5040 013c C4F8E834 		str	r3, [r4, #1256]
 243:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 5041              		.loc 11 243 0
 5042 0140 0622     		movs	r2, #6
 5043              	.L299:
 5044 0142 C4F8E024 		str	r2, [r4, #1248]
 244:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 5045              		.loc 11 244 0
 5046 0146 C4F8F034 		str	r3, [r4, #1264]
 5047 014a 78E7     		b	.L264
 5048              	.L280:
 245:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 5049              		.loc 11 245 0
 5050 014c 062D     		cmp	r5, #6
 5051 014e 0BD1     		bne	.L281
 246:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 5052              		.loc 11 246 0
 5053 0150 D4F8E824 		ldr	r2, [r4, #1256]
 5054 0154 02EB0323 		add	r3, r2, r3, lsl #8
 5055 0158 C4F8E834 		str	r3, [r4, #1256]
 247:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 5056              		.loc 11 247 0
 5057 015c 0723     		movs	r3, #7
 5058 015e C4F8E034 		str	r3, [r4, #1248]
 248:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 5059              		.loc 11 248 0
 5060 0162 D4F8E434 		ldr	r3, [r4, #1252]
 5061 0166 97E7     		b	.L300
 5062              	.L281:
 250:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 5063              		.loc 11 250 0
 5064 0168 082D     		cmp	r5, #8
 5065 016a 7FF468AF 		bne	.L264
 252:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 5066              		.loc 11 252 0
 5067 016e 294B     		ldr	r3, .L301+4
 251:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 5068              		.loc 11 251 0
 5069 0170 C4F8E084 		str	r8, [r4, #1248]
 252:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 5070              		.loc 11 252 0
 5071 0174 1340     		ands	r3, r3, r2
 5072 0176 002B     		cmp	r3, #0
 5073 0178 BEBF     		ittt	lt
 5074 017a 03F1FF33 		addlt	r3, r3, #-1
 5075 017e 63F0FF03 		ornlt	r3, r3, #255
 5076 0182 0133     		addlt	r3, r3, #1
 5077 0184 FF2B     		cmp	r3, #255
 5078 0186 7FF45AAF 		bne	.L264
 253:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 5079              		.loc 11 253 0
 5080 018a D4F8E834 		ldr	r3, [r4, #1256]
 5081 018e 6BB9     		cbnz	r3, .L284
 254:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 5082              		.loc 11 254 0
 5083 0190 2046     		mov	r0, r4
 5084 0192 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 5085              	.LVL548:
 255:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 5086              		.loc 11 255 0
 5087 0196 2046     		mov	r0, r4
 5088 0198 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
 5089              	.LVL549:
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 5090              		.loc 11 256 0
 5091 019c C4F8F864 		str	r6, [r4, #1272]
 257:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 5092              		.loc 11 257 0
 5093 01a0 C4F8FC64 		str	r6, [r4, #1276]
 258:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 5094              		.loc 11 258 0
 5095 01a4 4FF0FF30 		mov	r0, #-1
 5096 01a8 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5097              	.LVL550:
 5098              	.L284:
 259:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 5099              		.loc 11 259 0
 5100 01ac 0A2B     		cmp	r3, #10
 5101 01ae 04D1     		bne	.L285
 260:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 5102              		.loc 11 260 0
 5103 01b0 4946     		mov	r1, r9
 5104 01b2 2046     		mov	r0, r4
 5105 01b4 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
 5106              	.LVL551:
 5107 01b8 41E7     		b	.L264
 5108              	.L285:
 261:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 5109              		.loc 11 261 0
 5110 01ba 062B     		cmp	r3, #6
 5111 01bc 08D1     		bne	.L286
 262:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 5112              		.loc 11 262 0
 5113 01be 4946     		mov	r1, r9
 5114 01c0 04F5A160 		add	r0, r4, #1288
 5115 01c4 FFF7FEFF 		bl	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 5116              	.LVL552:
 263:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 5117              		.loc 11 263 0
 5118 01c8 0123     		movs	r3, #1
 5119 01ca 84F80435 		strb	r3, [r4, #1284]
 5120 01ce 36E7     		b	.L264
 5121              	.L286:
 264:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 5122              		.loc 11 264 0
 5123 01d0 0B2B     		cmp	r3, #11
 5124 01d2 02D1     		bne	.L287
 265:./lib/ros_lib/ros/node_handle.h ****               }else{
 5125              		.loc 11 265 0
 5126 01d4 84F8F484 		strb	r8, [r4, #1268]
 5127 01d8 31E7     		b	.L264
 5128              	.L287:
 267:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 5129              		.loc 11 267 0
 5130 01da 04EB8303 		add	r3, r4, r3, lsl #2
 5131 01de D3F8EC02 		ldr	r0, [r3, #748]
 5132 01e2 0028     		cmp	r0, #0
 5133 01e4 3FF42BAF 		beq	.L264
 268:./lib/ros_lib/ros/node_handle.h ****               }
 5134              		.loc 11 268 0
 5135 01e8 0368     		ldr	r3, [r0]
 5136 01ea 4946     		mov	r1, r9
 5137 01ec 1B68     		ldr	r3, [r3]
 5138 01ee 9847     		blx	r3
 5139              	.LVL553:
 5140 01f0 25E7     		b	.L264
 5141              	.L266:
 5142              	.LBE395:
 275:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 5143              		.loc 11 275 0 discriminator 1
 5144 01f2 40F6C412 		movw	r2, #2500
 5145 01f6 D4F8F834 		ldr	r3, [r4, #1272]
 5146 01fa F31A     		subs	r3, r6, r3
 5147 01fc 9342     		cmp	r3, r2
 5148 01fe 04D9     		bls	.L288
 276:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 5149              		.loc 11 276 0
 5150 0200 2046     		mov	r0, r4
 5151 0202 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
 5152              	.LVL554:
 277:./lib/ros_lib/ros/node_handle.h ****         }
 5153              		.loc 11 277 0
 5154 0206 C4F8F864 		str	r6, [r4, #1272]
 5155              	.L288:
 280:./lib/ros_lib/ros/node_handle.h ****       }
 5156              		.loc 11 280 0
 5157 020a 0020     		movs	r0, #0
 281:./lib/ros_lib/ros/node_handle.h **** 
 5158              		.loc 11 281 0
 5159 020c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5160              	.LVL555:
 5161              	.L302:
 5162              		.align	2
 5163              	.L301:
 5164 0210 00000000 		.word	.LANCHOR1
 5165 0214 FF000080 		.word	-2147483393
 5166              		.cfi_endproc
 5167              	.LFE1318:
 5168              		.fnend
 5170              		.global	__aeabi_fmul
 5171              		.global	__aeabi_f2d
 5172              		.global	__aeabi_dmul
 5173              		.global	__aeabi_dadd
 5174              		.global	__aeabi_d2f
 5175              		.global	__aeabi_f2iz
 5176              		.global	__aeabi_ddiv
 5177              		.section	.text.startup,"ax",%progbits
 5178              		.align	1
 5179              		.global	main
 5180              		.thumb
 5181              		.thumb_func
 5183              	main:
 5184              		.fnstart
 5185              	.LFB1281:
 152:src/main.cpp  ****   #ifdef DEBUG
 5186              		.loc 13 152 0
 5187              		.cfi_startproc
 5188              		@ args = 0, pretend = 0, frame = 800
 5189              		@ frame_needed = 0, uses_anonymous_args = 0
 5190 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5191              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5192              	.LCFI59:
 5193              		.cfi_def_cfa_offset 36
 5194              		.cfi_offset 4, -36
 5195              		.cfi_offset 5, -32
 5196              		.cfi_offset 6, -28
 5197              		.cfi_offset 7, -24
 5198              		.cfi_offset 8, -20
 5199              		.cfi_offset 9, -16
 5200              		.cfi_offset 10, -12
 5201              		.cfi_offset 11, -8
 5202              		.cfi_offset 14, -4
 5203              		.pad #836
 5204 0004 ADF5517D 		sub	sp, sp, #836
 5205              	.LCFI60:
 5206              		.cfi_def_cfa_offset 872
 157:src/main.cpp  ****   SysTick_Init();
 5207              		.loc 13 157 0
 5208 0008 FFF7FEFF 		bl	RCC_Configuration
 5209              	.LVL556:
 158:src/main.cpp  **** 
 5210              		.loc 13 158 0
 5211 000c FFF7FEFF 		bl	SysTick_Init
 5212              	.LVL557:
 160:src/main.cpp  ****   I2C1_Init();
 5213              		.loc 13 160 0
 5214 0010 0121     		movs	r1, #1
 5215 0012 3948     		ldr	r0, .L356
 5216 0014 FFF7FEFF 		bl	GPIO_PinRemapConfig
 5217              	.LVL558:
 161:src/main.cpp  ****   DEBUG_Init();
 5218              		.loc 13 161 0
 5219 0018 FFF7FEFF 		bl	I2C1_Init
 5220              	.LVL559:
 162:src/main.cpp  ****   SHUTDOWN_Init();
 5221              		.loc 13 162 0
 5222 001c FFF7FEFF 		bl	DEBUG_Init
 5223              	.LVL560:
 163:src/main.cpp  ****   LED_Init();
 5224              		.loc 13 163 0
 5225 0020 FFF7FEFF 		bl	SHUTDOWN_Init
 5226              	.LVL561:
 164:src/main.cpp  **** 
 5227              		.loc 13 164 0
 5228 0024 FFF7FEFF 		bl	LED_Init
 5229              	.LVL562:
 166:src/main.cpp  ****   debug_msg.data_length = 6;
 5230              		.loc 13 166 0
 5231 0028 1820     		movs	r0, #24
 5232 002a FFF7FEFF 		bl	malloc
 5233              	.LVL563:
 5234 002e 334C     		ldr	r4, .L356+4
 167:src/main.cpp  **** 
 5235              		.loc 13 167 0
 5236 0030 0623     		movs	r3, #6
 166:src/main.cpp  ****   debug_msg.data_length = 6;
 5237              		.loc 13 166 0
 5238 0032 C4F85C04 		str	r0, [r4, #1116]
 169:src/main.cpp  ****   odom_msg.data_length = 4;
 5239              		.loc 13 169 0
 5240 0036 1020     		movs	r0, #16
 167:src/main.cpp  **** 
 5241              		.loc 13 167 0
 5242 0038 84F85434 		strb	r3, [r4, #1108]
 169:src/main.cpp  ****   odom_msg.data_length = 4;
 5243              		.loc 13 169 0
 5244 003c FFF7FEFF 		bl	malloc
 5245              	.LVL564:
 170:src/main.cpp  **** 
 5246              		.loc 13 170 0
 5247 0040 0423     		movs	r3, #4
 169:src/main.cpp  ****   odom_msg.data_length = 4;
 5248              		.loc 13 169 0
 5249 0042 C4F88C04 		str	r0, [r4, #1164]
 5250              	.LBB419:
 5251              	.LBB420:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 5252              		.loc 11 147 0
 5253 0046 04F29440 		addw	r0, r4, #1172
 5254              	.LBE420:
 5255              	.LBE419:
 170:src/main.cpp  **** 
 5256              		.loc 13 170 0
 5257 004a 84F88434 		strb	r3, [r4, #1156]
 5258              	.LVL565:
 5259              	.LBB422:
 5260              	.LBB421:
 147:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 5261              		.loc 11 147 0
 5262 004e FFF7FEFF 		bl	_ZN15ArduinoHardware4initEv
 5263              	.LVL566:
 5264 0052 04F60812 		addw	r2, r4, #2312
 151:./lib/ros_lib/ros/node_handle.h ****       };
 5265              		.loc 11 151 0
 5266 0056 1146     		mov	r1, r2
 148:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 5267              		.loc 11 148 0
 5268 0058 0023     		movs	r3, #0
 5269 005a C4F87039 		str	r3, [r4, #2416]
 149:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 5270              		.loc 11 149 0
 5271 005e C4F87439 		str	r3, [r4, #2420]
 150:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 5272              		.loc 11 150 0
 5273 0062 C4F87C39 		str	r3, [r4, #2428]
 151:./lib/ros_lib/ros/node_handle.h ****       };
 5274              		.loc 11 151 0
 5275 0066 C4F87839 		str	r3, [r4, #2424]
 5276              	.LVL567:
 5277              	.L306:
 5278              	.LBE421:
 5279              	.LBE422:
 5280              	.LBB423:
 5281              	.LBB424:
 353:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 5282              		.loc 11 353 0
 5283 006a 51F8040F 		ldr	r0, [r1, #4]!
 5284 006e 40B9     		cbnz	r0, .L304
 354:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 5285              		.loc 11 354 0
 5286 0070 2348     		ldr	r0, .L356+8
 5287 0072 04EB8301 		add	r1, r4, r3, lsl #2
 355:./lib/ros_lib/ros/node_handle.h ****             return true;
 5288              		.loc 11 355 0
 5289 0076 6433     		adds	r3, r3, #100
 5290              	.LVL568:
 354:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 5291              		.loc 11 354 0
 5292 0078 C1F80C09 		str	r0, [r1, #2316]
 355:./lib/ros_lib/ros/node_handle.h ****             return true;
 5293              		.loc 11 355 0
 5294 007c C4F8C439 		str	r3, [r4, #2500]
 5295 0080 02E0     		b	.L305
 5296              	.LVL569:
 5297              	.L304:
 352:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 5298              		.loc 11 352 0
 5299 0082 0133     		adds	r3, r3, #1
 5300              	.LVL570:
 5301 0084 192B     		cmp	r3, #25
 5302 0086 F0D1     		bne	.L306
 5303              	.LVL571:
 5304              	.L305:
 5305              	.LBE424:
 5306              	.LBE423:
 5307              	.LBB425:
 5308              	.LBB426:
 5309 0088 0023     		movs	r3, #0
 5310              	.LVL572:
 5311              	.L309:
 353:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 5312              		.loc 11 353 0
 5313 008a 52F8041F 		ldr	r1, [r2, #4]!
 5314 008e 41B9     		cbnz	r1, .L307
 354:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 5315              		.loc 11 354 0
 5316 0090 1C49     		ldr	r1, .L356+12
 5317 0092 04EB8302 		add	r2, r4, r3, lsl #2
 355:./lib/ros_lib/ros/node_handle.h ****             return true;
 5318              		.loc 11 355 0
 5319 0096 6433     		adds	r3, r3, #100
 5320              	.LVL573:
 354:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 5321              		.loc 11 354 0
 5322 0098 C2F80C19 		str	r1, [r2, #2316]
 355:./lib/ros_lib/ros/node_handle.h ****             return true;
 5323              		.loc 11 355 0
 5324 009c C4F8043A 		str	r3, [r4, #2564]
 5325 00a0 02E0     		b	.L308
 5326              	.LVL574:
 5327              	.L307:
 352:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 5328              		.loc 11 352 0
 5329 00a2 0133     		adds	r3, r3, #1
 5330              	.LVL575:
 5331 00a4 192B     		cmp	r3, #25
 5332 00a6 F0D1     		bne	.L309
 5333              	.LVL576:
 5334              	.L308:
 5335 00a8 1749     		ldr	r1, .L356+16
 5336              	.LBE426:
 5337              	.LBE425:
 5338              	.LBB428:
 5339              	.LBB429:
 338:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 5340              		.loc 11 338 0
 5341 00aa 0023     		movs	r3, #0
 5342              	.LBE429:
 5343              	.LBE428:
 5344              	.LBB431:
 5345              	.LBB427:
 352:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 5346              		.loc 11 352 0
 5347 00ac 0A46     		mov	r2, r1
 5348              	.LVL577:
 5349              	.L312:
 5350              	.LBE427:
 5351              	.LBE431:
 5352              	.LBB432:
 5353              	.LBB430:
 339:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 5354              		.loc 11 339 0
 5355 00ae 52F8040F 		ldr	r0, [r2, #4]!
 5356 00b2 60B9     		cbnz	r0, .L310
 340:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 5357              		.loc 11 340 0
 5358 00b4 154A     		ldr	r2, .L356+20
 5359 00b6 04EB8300 		add	r0, r4, r3, lsl #2
 5360 00ba C0F8A828 		str	r2, [r0, #2216]
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 5361              		.loc 11 341 0
 5362 00be 7D33     		adds	r3, r3, #125
 5363              	.LVL578:
 342:./lib/ros_lib/ros/node_handle.h ****             return true;
 5364              		.loc 11 342 0
 5365 00c0 A2F28C52 		subw	r2, r2, #1420
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 5366              		.loc 11 341 0
 5367 00c4 C4F8243A 		str	r3, [r4, #2596]
 342:./lib/ros_lib/ros/node_handle.h ****             return true;
 5368              		.loc 11 342 0
 5369 00c8 C4F8282A 		str	r2, [r4, #2600]
 5370 00cc 02E0     		b	.L311
 5371              	.LVL579:
 5372              	.L310:
 338:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 5373              		.loc 11 338 0
 5374 00ce 0133     		adds	r3, r3, #1
 5375              	.LVL580:
 5376 00d0 192B     		cmp	r3, #25
 5377 00d2 ECD1     		bne	.L312
 5378              	.LVL581:
 5379              	.L311:
 5380              	.LBE430:
 5381              	.LBE432:
 5382              	.LBB433:
 5383              	.LBB434:
 5384 00d4 0023     		movs	r3, #0
 5385              	.LVL582:
 5386              	.L315:
 339:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 5387              		.loc 11 339 0
 5388 00d6 51F8042F 		ldr	r2, [r1, #4]!
 5389 00da DAB9     		cbnz	r2, .L313
 340:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 5390              		.loc 11 340 0
 5391 00dc 0C4A     		ldr	r2, .L356+24
 5392 00de 04EB8301 		add	r1, r4, r3, lsl #2
 5393 00e2 C1F8A828 		str	r2, [r1, #2216]
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 5394              		.loc 11 341 0
 5395 00e6 7D33     		adds	r3, r3, #125
 5396              	.LVL583:
 342:./lib/ros_lib/ros/node_handle.h ****             return true;
 5397              		.loc 11 342 0
 5398 00e8 A2F5B462 		sub	r2, r2, #1440
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 5399              		.loc 11 341 0
 5400 00ec C4F8383A 		str	r3, [r4, #2616]
 342:./lib/ros_lib/ros/node_handle.h ****             return true;
 5401              		.loc 11 342 0
 5402 00f0 C4F83C2A 		str	r2, [r4, #2620]
 5403 00f4 11E0     		b	.L314
 5404              	.L357:
 5405 00f6 00BF     		.align	2
 5406              	.L356:
 5407 00f8 00023000 		.word	3146240
 5408 00fc 00000000 		.word	.LANCHOR1
 5409 0100 C0090000 		.word	.LANCHOR1+2496
 5410 0104 000A0000 		.word	.LANCHOR1+2560
 5411 0108 A4080000 		.word	.LANCHOR1+2212
 5412 010c 1C0A0000 		.word	.LANCHOR1+2588
 5413 0110 300A0000 		.word	.LANCHOR1+2608
 5414              	.LVL584:
 5415              	.L313:
 338:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 5416              		.loc 11 338 0
 5417 0114 0133     		adds	r3, r3, #1
 5418              	.LVL585:
 5419 0116 192B     		cmp	r3, #25
 5420 0118 DDD1     		bne	.L315
 5421              	.LVL586:
 5422              	.L314:
 5423              	.LBE434:
 5424              	.LBE433:
 185:src/main.cpp  **** 
 5425              		.loc 13 185 0
 5426 011a 0023     		movs	r3, #0
 5427 011c 84F82C34 		strb	r3, [r4, #1068]
 189:src/main.cpp  ****     FF = 3200;
 5428              		.loc 13 189 0
 5429 0120 12AA     		add	r2, sp, #72
 5430 0122 0123     		movs	r3, #1
 5431 0124 A149     		ldr	r1, .L358
 5432 0126 A248     		ldr	r0, .L358+4
 5433 0128 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 5434              	.LVL587:
 5435 012c 08B9     		cbnz	r0, .L316
 190:src/main.cpp  ****   }
 5436              		.loc 13 190 0
 5437 012e A14B     		ldr	r3, .L358+8
 5438 0130 1293     		str	r3, [sp, #72]	@ float
 5439              	.L316:
 193:src/main.cpp  ****     KP = 3000;
 5440              		.loc 13 193 0
 5441 0132 0123     		movs	r3, #1
 5442 0134 13AA     		add	r2, sp, #76
 5443 0136 A049     		ldr	r1, .L358+12
 5444 0138 9D48     		ldr	r0, .L358+4
 5445 013a FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 5446              	.LVL588:
 5447 013e 08B9     		cbnz	r0, .L317
 194:src/main.cpp  ****   }
 5448              		.loc 13 194 0
 5449 0140 9E4B     		ldr	r3, .L358+16
 5450 0142 1393     		str	r3, [sp, #76]	@ float
 5451              	.L317:
 197:src/main.cpp  ****     KI = 2000;
 5452              		.loc 13 197 0
 5453 0144 0123     		movs	r3, #1
 5454 0146 14AA     		add	r2, sp, #80
 5455 0148 9D49     		ldr	r1, .L358+20
 5456 014a 9948     		ldr	r0, .L358+4
 5457 014c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 5458              	.LVL589:
 5459 0150 08B9     		cbnz	r0, .L318
 198:src/main.cpp  ****   }
 5460              		.loc 13 198 0
 5461 0152 9C4B     		ldr	r3, .L358+24
 5462 0154 1493     		str	r3, [sp, #80]	@ float
 5463              	.L318:
 201:src/main.cpp  ****     KD = 40;
 5464              		.loc 13 201 0
 5465 0156 0123     		movs	r3, #1
 5466 0158 15AA     		add	r2, sp, #84
 5467 015a 9B49     		ldr	r1, .L358+28
 5468 015c 9448     		ldr	r0, .L358+4
 5469 015e FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 5470              	.LVL590:
 5471 0162 08B9     		cbnz	r0, .L319
 202:src/main.cpp  ****   }
 5472              		.loc 13 202 0
 5473 0164 994B     		ldr	r3, .L358+32
 5474 0166 1593     		str	r3, [sp, #84]	@ float
 5475              	.L319:
 207:src/main.cpp  ****     integralSaturation = 10;
 5476              		.loc 13 207 0
 5477 0168 0123     		movs	r3, #1
 5478 016a 16AA     		add	r2, sp, #88
 5479 016c 9849     		ldr	r1, .L358+36
 5480 016e 9048     		ldr	r0, .L358+4
 5481 0170 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 5482              	.LVL591:
 5483 0174 08B9     		cbnz	r0, .L320
 208:src/main.cpp  ****   }
 5484              		.loc 13 208 0
 5485 0176 974B     		ldr	r3, .L358+40
 5486 0178 1693     		str	r3, [sp, #88]	@ float
 5487              	.L320:
 211:src/main.cpp  ****     wheelRadius = 0.04;
 5488              		.loc 13 211 0
 5489 017a 0123     		movs	r3, #1
 5490 017c 17AA     		add	r2, sp, #92
 5491 017e 9649     		ldr	r1, .L358+44
 5492 0180 8B48     		ldr	r0, .L358+4
 5493 0182 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 5494              	.LVL592:
 5495 0186 08B9     		cbnz	r0, .L321
 212:src/main.cpp  ****   }
 5496              		.loc 13 212 0
 5497 0188 944B     		ldr	r3, .L358+48
 5498 018a 1793     		str	r3, [sp, #92]	@ float
 5499              	.L321:
 215:src/main.cpp  ****     L = 0.17;
 5500              		.loc 13 215 0
 5501 018c 944C     		ldr	r4, .L358+52
 5502 018e 0123     		movs	r3, #1
 5503 0190 04F64422 		addw	r2, r4, #2628
 5504 0194 9349     		ldr	r1, .L358+56
 5505 0196 04F59260 		add	r0, r4, #1168
 5506 019a FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 5507              	.LVL593:
 5508 019e 10B9     		cbnz	r0, .L322
 216:src/main.cpp  ****   }
 5509              		.loc 13 216 0
 5510 01a0 914B     		ldr	r3, .L358+60
 5511 01a2 C4F8443A 		str	r3, [r4, #2628]	@ float
 5512              	.L322:
 219:src/main.cpp  ****     d = 0.045;
 5513              		.loc 13 219 0
 5514 01a6 8E4C     		ldr	r4, .L358+52
 5515 01a8 0123     		movs	r3, #1
 5516 01aa 04F64822 		addw	r2, r4, #2632
 5517 01ae 8F49     		ldr	r1, .L358+64
 5518 01b0 04F59260 		add	r0, r4, #1168
 5519 01b4 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
 5520              	.LVL594:
 5521 01b8 10B9     		cbnz	r0, .L323
 220:src/main.cpp  ****   }
 5522              		.loc 13 220 0
 5523 01ba 8D4B     		ldr	r3, .L358+68
 5524 01bc C4F8483A 		str	r3, [r4, #2632]	@ float
 5525              	.L323:
 229:src/main.cpp  ****   SL.m_ServoLimitMin = 7925;
 5526              		.loc 13 229 0
 5527 01c0 40F2E975 		movw	r5, #2025
 230:src/main.cpp  **** 
 5528              		.loc 13 230 0
 5529 01c4 41F6F567 		movw	r7, #7925
 226:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 5530              		.loc 13 226 0
 5531 01c8 0426     		movs	r6, #4
 223:src/main.cpp  **** 
 5532              		.loc 13 223 0
 5533 01ca 4FF47A70 		mov	r0, #1000
 5534 01ce FFF7FEFF 		bl	delay
 5535              	.LVL595:
 226:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 5536              		.loc 13 226 0
 5537 01d2 884B     		ldr	r3, .L358+72
 5538 01d4 884A     		ldr	r2, .L358+76
 5539 01d6 0121     		movs	r1, #1
 5540 01d8 0096     		str	r6, [sp]
 5541 01da 34A8     		add	r0, sp, #208
 5542 01dc FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5543              	.LVL596:
 227:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 5544              		.loc 13 227 0
 5545 01e0 4FF40073 		mov	r3, #512
 228:src/main.cpp  ****   SL.m_ServoLimitMax = 2025;
 5546              		.loc 13 228 0
 5547 01e4 854C     		ldr	r4, .L358+80
 227:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 5548              		.loc 13 227 0
 5549 01e6 3A93     		str	r3, [sp, #232]
 232:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 5550              		.loc 13 232 0
 5551 01e8 0323     		movs	r3, #3
 5552 01ea 0093     		str	r3, [sp]
 5553 01ec 844A     		ldr	r2, .L358+84
 5554 01ee 814B     		ldr	r3, .L358+72
 5555 01f0 0121     		movs	r1, #1
 5556 01f2 4EA8     		add	r0, sp, #312
 228:src/main.cpp  ****   SL.m_ServoLimitMax = 2025;
 5557              		.loc 13 228 0
 5558 01f4 3B94     		str	r4, [sp, #236]
 229:src/main.cpp  ****   SL.m_ServoLimitMin = 7925;
 5559              		.loc 13 229 0
 5560 01f6 3895     		str	r5, [sp, #224]
 230:src/main.cpp  **** 
 5561              		.loc 13 230 0
 5562 01f8 3997     		str	r7, [sp, #228]
 232:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 5563              		.loc 13 232 0
 5564 01fa FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5565              	.LVL597:
 235:src/main.cpp  ****   SR.m_ServoLimitMin = 2025;
 5566              		.loc 13 235 0
 5567 01fe 5297     		str	r7, [sp, #328]
 238:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 5568              		.loc 13 238 0
 5569 0200 0127     		movs	r7, #1
 233:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 5570              		.loc 13 233 0
 5571 0202 4FF48078 		mov	r8, #256
 238:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 5572              		.loc 13 238 0
 5573 0206 0097     		str	r7, [sp]
 5574 0208 7E4B     		ldr	r3, .L358+88
 5575 020a 7F4A     		ldr	r2, .L358+92
 5576 020c 0221     		movs	r1, #2
 5577 020e 68A8     		add	r0, sp, #416
 233:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 5578              		.loc 13 233 0
 5579 0210 CDF85081 		str	r8, [sp, #336]
 234:src/main.cpp  ****   SR.m_ServoLimitMax = 7925;
 5580              		.loc 13 234 0
 5581 0214 5594     		str	r4, [sp, #340]
 236:src/main.cpp  **** 
 5582              		.loc 13 236 0
 5583 0216 5395     		str	r5, [sp, #332]
 238:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 5584              		.loc 13 238 0
 5585 0218 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5586              	.LVL598:
 241:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 5587              		.loc 13 241 0
 5588 021c 7B4D     		ldr	r5, .L358+96
 5589 021e 7C4A     		ldr	r2, .L358+100
 5590 0220 0397     		str	r7, [sp, #12]
 5591 0222 4FF40047 		mov	r7, #32768
 5592 0226 CDF81480 		str	r8, [sp, #20]
 5593 022a 0292     		str	r2, [sp, #8]
 5594 022c 8DE88400 		stmia	sp, {r2, r7}
 5595 0230 4FF48043 		mov	r3, #16384
 5596 0234 4FF40051 		mov	r1, #8192
 5597 0238 68A8     		add	r0, sp, #416
 5598 023a 0695     		str	r5, [sp, #24]
 5599 023c 0495     		str	r5, [sp, #16]
 5600 023e FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5601              	.LVL599:
 242:src/main.cpp  ****   FR.setRegulator(FF,KP,KI,KD,integralSaturation);
 5602              		.loc 13 242 0
 5603 0242 1823     		movs	r3, #24
 5604 0244 ADF8E831 		strh	r3, [sp, #488]	@ movhi
 243:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 5605              		.loc 13 243 0
 5606 0248 169B     		ldr	r3, [sp, #88]	@ float
 5607 024a 139A     		ldr	r2, [sp, #76]	@ float
 5608 024c 0193     		str	r3, [sp, #4]	@ float
 5609 024e 159B     		ldr	r3, [sp, #84]	@ float
 5610 0250 1299     		ldr	r1, [sp, #72]	@ float
 5611 0252 0093     		str	r3, [sp]	@ float
 5612 0254 68A8     		add	r0, sp, #416
 5613 0256 149B     		ldr	r3, [sp, #80]	@ float
 5614 0258 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5615              	.LVL600:
 244:src/main.cpp  **** 
 5616              		.loc 13 244 0
 5617 025c 179B     		ldr	r3, [sp, #92]	@ float
 246:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 5618              		.loc 13 246 0
 5619 025e 6D4A     		ldr	r2, .L358+104
 244:src/main.cpp  **** 
 5620              		.loc 13 244 0
 5621 0260 8193     		str	r3, [sp, #516]	@ float
 246:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 5622              		.loc 13 246 0
 5623 0262 0221     		movs	r1, #2
 5624 0264 6C4B     		ldr	r3, .L358+108
 5625 0266 0096     		str	r6, [sp]
 5626 0268 82A8     		add	r0, sp, #520
 5627 026a FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5628              	.LVL601:
 249:src/main.cpp  ****   FL.encoderAddr = (0x10);
 5629              		.loc 13 249 0
 5630 026e 4FF00208 		mov	r8, #2
 5631 0272 4FF01009 		mov	r9, #16
 5632 0276 4FF48063 		mov	r3, #1024
 5633 027a 2246     		mov	r2, r4
 5634 027c 0694     		str	r4, [sp, #24]
 5635 027e 0494     		str	r4, [sp, #16]
 5636 0280 0393     		str	r3, [sp, #12]
 5637 0282 8DE82002 		stmia	sp, {r5, r9}
 5638 0286 2023     		movs	r3, #32
 5639 0288 3146     		mov	r1, r6
 5640 028a 82A8     		add	r0, sp, #520
 5641 028c CDF81480 		str	r8, [sp, #20]
 5642 0290 0295     		str	r5, [sp, #8]
 5643 0292 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5644              	.LVL602:
 251:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 5645              		.loc 13 251 0
 5646 0296 169B     		ldr	r3, [sp, #88]	@ float
 5647 0298 139A     		ldr	r2, [sp, #76]	@ float
 5648 029a 0193     		str	r3, [sp, #4]	@ float
 5649 029c 159B     		ldr	r3, [sp, #84]	@ float
 5650 029e 1299     		ldr	r1, [sp, #72]	@ float
 5651 02a0 0093     		str	r3, [sp]	@ float
 5652 02a2 82A8     		add	r0, sp, #520
 5653 02a4 149B     		ldr	r3, [sp, #80]	@ float
 250:src/main.cpp  ****   FL.setRegulator(FF,KP,KI,KD,integralSaturation);
 5654              		.loc 13 250 0
 5655 02a6 ADF85092 		strh	r9, [sp, #592]	@ movhi
 251:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 5656              		.loc 13 251 0
 5657 02aa FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5658              	.LVL603:
 252:src/main.cpp  **** 
 5659              		.loc 13 252 0
 5660 02ae 179B     		ldr	r3, [sp, #92]	@ float
 254:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 5661              		.loc 13 254 0
 5662 02b0 5A4A     		ldr	r2, .L358+112
 252:src/main.cpp  **** 
 5663              		.loc 13 252 0
 5664 02b2 9B93     		str	r3, [sp, #620]	@ float
 254:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 5665              		.loc 13 254 0
 5666 02b4 4146     		mov	r1, r8
 5667 02b6 4FF08043 		mov	r3, #1073741824
 5668 02ba 0096     		str	r6, [sp]
 5669 02bc 9CA8     		add	r0, sp, #624
 5670 02be FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5671              	.LVL604:
 257:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 5672              		.loc 13 257 0
 5673 02c2 4FF48043 		mov	r3, #16384
 5674 02c6 4FF00809 		mov	r9, #8
 5675 02ca 0393     		str	r3, [sp, #12]
 5676 02cc 4FF40053 		mov	r3, #8192
 5677 02d0 2246     		mov	r2, r4
 5678 02d2 0494     		str	r4, [sp, #16]
 5679 02d4 0294     		str	r4, [sp, #8]
 5680 02d6 0193     		str	r3, [sp, #4]
 5681 02d8 0094     		str	r4, [sp]
 5682 02da 4FF48053 		mov	r3, #4096
 5683 02de 4FF40061 		mov	r1, #2048
 5684 02e2 9CA8     		add	r0, sp, #624
 5685 02e4 0695     		str	r5, [sp, #24]
 5686 02e6 CDF81490 		str	r9, [sp, #20]
 5687 02ea FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5688              	.LVL605:
 258:src/main.cpp  ****   RL.setRegulator(FF,KP,KI,KD,integralSaturation);
 5689              		.loc 13 258 0
 5690 02ee 1423     		movs	r3, #20
 5691 02f0 ADF8B832 		strh	r3, [sp, #696]	@ movhi
 259:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 5692              		.loc 13 259 0
 5693 02f4 169B     		ldr	r3, [sp, #88]	@ float
 5694 02f6 139A     		ldr	r2, [sp, #76]	@ float
 5695 02f8 0193     		str	r3, [sp, #4]	@ float
 5696 02fa 159B     		ldr	r3, [sp, #84]	@ float
 5697 02fc 1299     		ldr	r1, [sp, #72]	@ float
 5698 02fe 0093     		str	r3, [sp]	@ float
 5699 0300 9CA8     		add	r0, sp, #624
 5700 0302 149B     		ldr	r3, [sp, #80]	@ float
 5701 0304 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5702              	.LVL606:
 260:src/main.cpp  **** 
 5703              		.loc 13 260 0
 5704 0308 179B     		ldr	r3, [sp, #92]	@ float
 262:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 5705              		.loc 13 262 0
 5706 030a 454A     		ldr	r2, .L358+116
 260:src/main.cpp  **** 
 5707              		.loc 13 260 0
 5708 030c B593     		str	r3, [sp, #724]	@ float
 262:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 5709              		.loc 13 262 0
 5710 030e 4146     		mov	r1, r8
 5711 0310 3C4B     		ldr	r3, .L358+88
 5712 0312 0096     		str	r6, [sp]
 5713 0314 B6A8     		add	r0, sp, #728
 5714 0316 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5715              	.LVL607:
 265:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 5716              		.loc 13 265 0
 5717 031a 4FF40063 		mov	r3, #2048
 5718 031e 2246     		mov	r2, r4
 5719 0320 0593     		str	r3, [sp, #20]
 5720 0322 0494     		str	r4, [sp, #16]
 5721 0324 4FF48053 		mov	r3, #4096
 5722 0328 3946     		mov	r1, r7
 5723 032a B6A8     		add	r0, sp, #728
 5724 032c 0695     		str	r5, [sp, #24]
 5725 032e CDF80C90 		str	r9, [sp, #12]
 5726 0332 0295     		str	r5, [sp, #8]
 5727 0334 8DE8A000 		stmia	sp, {r5, r7}
 5728 0338 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5729              	.LVL608:
 266:src/main.cpp  ****   RR.setRegulator(FF,KP,KI,KD,integralSaturation);
 5730              		.loc 13 266 0
 5731 033c 1C23     		movs	r3, #28
 5732 033e ADF82033 		strh	r3, [sp, #800]	@ movhi
 267:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 5733              		.loc 13 267 0
 5734 0342 169B     		ldr	r3, [sp, #88]	@ float
 5735 0344 139A     		ldr	r2, [sp, #76]	@ float
 5736 0346 0193     		str	r3, [sp, #4]	@ float
 5737 0348 159B     		ldr	r3, [sp, #84]	@ float
 5738 034a 1299     		ldr	r1, [sp, #72]	@ float
 5739 034c 0093     		str	r3, [sp]	@ float
 5740 034e B6A8     		add	r0, sp, #728
 5741 0350 149B     		ldr	r3, [sp, #80]	@ float
 5742 0352 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5743              	.LVL609:
 268:src/main.cpp  **** 
 5744              		.loc 13 268 0
 5745 0356 179B     		ldr	r3, [sp, #92]	@ float
 271:src/main.cpp  ****   if(!servo_left->motorInit()){
 5746              		.loc 13 271 0
 5747 0358 34A8     		add	r0, sp, #208
 268:src/main.cpp  **** 
 5748              		.loc 13 268 0
 5749 035a CF93     		str	r3, [sp, #828]	@ float
 271:src/main.cpp  ****   if(!servo_left->motorInit()){
 5750              		.loc 13 271 0
 5751 035c FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5752              	.LVL610:
 5753 0360 1F4C     		ldr	r4, .L358+52
 272:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 5754              		.loc 13 272 0
 5755 0362 0368     		ldr	r3, [r0]
 271:src/main.cpp  ****   if(!servo_left->motorInit()){
 5756              		.loc 13 271 0
 5757 0364 E061     		str	r0, [r4, #28]
 272:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 5758              		.loc 13 272 0
 5759 0366 DB68     		ldr	r3, [r3, #12]
 5760 0368 9847     		blx	r3
 5761              	.LVL611:
 5762 036a 68B9     		cbnz	r0, .L324
 273:src/main.cpp  ****     nh.logerror(error);
 5763              		.loc 13 273 0
 5764 036c E069     		ldr	r0, [r4, #28]
 5765 036e 0368     		ldr	r3, [r0]
 5766 0370 1B69     		ldr	r3, [r3, #16]
 5767 0372 9847     		blx	r3
 5768              	.LVL612:
 5769 0374 2B49     		ldr	r1, .L358+120
 5770 0376 0246     		mov	r2, r0
 5771 0378 25A8     		add	r0, sp, #148
 5772 037a FFF7FEFF 		bl	sprintf
 5773              	.LVL613:
 274:src/main.cpp  ****   }
 5774              		.loc 13 274 0
 5775 037e 25A9     		add	r1, sp, #148
 5776 0380 04F59260 		add	r0, r4, #1168
 5777 0384 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5778              	.LVL614:
 5779              	.L324:
 277:src/main.cpp  ****   if(!servo_right->motorInit()){
 5780              		.loc 13 277 0
 5781 0388 4EA8     		add	r0, sp, #312
 5782 038a FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5783              	.LVL615:
 278:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 5784              		.loc 13 278 0
 5785 038e 0368     		ldr	r3, [r0]
 277:src/main.cpp  ****   if(!servo_right->motorInit()){
 5786              		.loc 13 277 0
 5787 0390 2062     		str	r0, [r4, #32]
 278:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 5788              		.loc 13 278 0
 5789 0392 DB68     		ldr	r3, [r3, #12]
 277:src/main.cpp  ****   if(!servo_right->motorInit()){
 5790              		.loc 13 277 0
 5791 0394 124D     		ldr	r5, .L358+52
 278:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 5792              		.loc 13 278 0
 5793 0396 9847     		blx	r3
 5794              	.LVL616:
 5795 0398 0028     		cmp	r0, #0
 5796 039a 4DD1     		bne	.L325
 279:src/main.cpp  ****     nh.logerror(error);
 5797              		.loc 13 279 0
 5798 039c 286A     		ldr	r0, [r5, #32]
 5799 039e 0368     		ldr	r3, [r0]
 5800 03a0 1B69     		ldr	r3, [r3, #16]
 5801 03a2 9847     		blx	r3
 5802              	.LVL617:
 5803 03a4 1F49     		ldr	r1, .L358+120
 5804 03a6 0246     		mov	r2, r0
 5805 03a8 3EE0     		b	.L359
 5806              	.L360:
 5807 03aa 00BF     		.align	2
 5808              	.L358:
 5809 03ac 68020000 		.word	.LC23
 5810 03b0 90040000 		.word	.LANCHOR1+1168
 5811 03b4 00004845 		.word	1162346496
 5812 03b8 77020000 		.word	.LC24
 5813 03bc 00803B45 		.word	1161527296
 5814 03c0 86020000 		.word	.LC25
 5815 03c4 0000FA44 		.word	1157234688
 5816 03c8 95020000 		.word	.LC26
 5817 03cc 00002042 		.word	1109393408
 5818 03d0 A4020000 		.word	.LC27
 5819 03d4 00002041 		.word	1092616192
 5820 03d8 C3020000 		.word	.LC28
 5821 03dc 0AD7233D 		.word	1025758986
 5822 03e0 00000000 		.word	.LANCHOR1
 5823 03e4 DB020000 		.word	.LC29
 5824 03e8 7B142E3E 		.word	1043207291
 5825 03ec 04030000 		.word	.LC30
 5826 03f0 EC51383D 		.word	1027101164
 5827 03f4 00080040 		.word	1073743872
 5828 03f8 27030000 		.word	.LC31
 5829 03fc 000C0140 		.word	1073810432
 5830 0400 32030000 		.word	.LC32
 5831 0404 002C0140 		.word	1073818624
 5832 0408 3E030000 		.word	.LC33
 5833 040c 00080140 		.word	1073809408
 5834 0410 00100140 		.word	1073811456
 5835 0414 4A030000 		.word	.LC34
 5836 0418 00040040 		.word	1073742848
 5837 041c 55030000 		.word	.LC35
 5838 0420 5F030000 		.word	.LC36
 5839 0424 6A030000 		.word	.LC37
 5840              	.L359:
 5841 0428 25A8     		add	r0, sp, #148
 5842 042a FFF7FEFF 		bl	sprintf
 5843              	.LVL618:
 280:src/main.cpp  ****   }
 5844              		.loc 13 280 0
 5845 042e 25A9     		add	r1, sp, #148
 5846 0430 05F59260 		add	r0, r5, #1168
 5847 0434 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5848              	.LVL619:
 5849              	.L325:
 283:src/main.cpp  ****   if(!front_left->motorInit()){
 5850              		.loc 13 283 0
 5851 0438 82A8     		add	r0, sp, #520
 5852 043a FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5853              	.LVL620:
 284:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 5854              		.loc 13 284 0
 5855 043e 0368     		ldr	r3, [r0]
 283:src/main.cpp  ****   if(!front_left->motorInit()){
 5856              		.loc 13 283 0
 5857 0440 C4F84C0A 		str	r0, [r4, #2636]
 284:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 5858              		.loc 13 284 0
 5859 0444 DB68     		ldr	r3, [r3, #12]
 283:src/main.cpp  ****   if(!front_left->motorInit()){
 5860              		.loc 13 283 0
 5861 0446 704D     		ldr	r5, .L361
 284:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 5862              		.loc 13 284 0
 5863 0448 9847     		blx	r3
 5864              	.LVL621:
 5865 044a 70B9     		cbnz	r0, .L326
 285:src/main.cpp  ****     nh.logerror(error);
 5866              		.loc 13 285 0
 5867 044c D5F84C0A 		ldr	r0, [r5, #2636]
 5868 0450 0368     		ldr	r3, [r0]
 5869 0452 1B69     		ldr	r3, [r3, #16]
 5870 0454 9847     		blx	r3
 5871              	.LVL622:
 5872 0456 6D49     		ldr	r1, .L361+4
 5873 0458 0246     		mov	r2, r0
 5874 045a 25A8     		add	r0, sp, #148
 5875 045c FFF7FEFF 		bl	sprintf
 5876              	.LVL623:
 286:src/main.cpp  ****   }
 5877              		.loc 13 286 0
 5878 0460 25A9     		add	r1, sp, #148
 5879 0462 05F59260 		add	r0, r5, #1168
 5880 0466 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5881              	.LVL624:
 5882              	.L326:
 289:src/main.cpp  ****   if(!front_right->motorInit()){
 5883              		.loc 13 289 0
 5884 046a 68A8     		add	r0, sp, #416
 5885 046c FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5886              	.LVL625:
 290:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 5887              		.loc 13 290 0
 5888 0470 0368     		ldr	r3, [r0]
 289:src/main.cpp  ****   if(!front_right->motorInit()){
 5889              		.loc 13 289 0
 5890 0472 C4F8500A 		str	r0, [r4, #2640]
 290:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 5891              		.loc 13 290 0
 5892 0476 DB68     		ldr	r3, [r3, #12]
 289:src/main.cpp  ****   if(!front_right->motorInit()){
 5893              		.loc 13 289 0
 5894 0478 634D     		ldr	r5, .L361
 290:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 5895              		.loc 13 290 0
 5896 047a 9847     		blx	r3
 5897              	.LVL626:
 5898 047c 70B9     		cbnz	r0, .L327
 291:src/main.cpp  ****     nh.logerror(error);
 5899              		.loc 13 291 0
 5900 047e D5F8500A 		ldr	r0, [r5, #2640]
 5901 0482 0368     		ldr	r3, [r0]
 5902 0484 1B69     		ldr	r3, [r3, #16]
 5903 0486 9847     		blx	r3
 5904              	.LVL627:
 5905 0488 6049     		ldr	r1, .L361+4
 5906 048a 0246     		mov	r2, r0
 5907 048c 25A8     		add	r0, sp, #148
 5908 048e FFF7FEFF 		bl	sprintf
 5909              	.LVL628:
 292:src/main.cpp  ****   }
 5910              		.loc 13 292 0
 5911 0492 25A9     		add	r1, sp, #148
 5912 0494 05F59260 		add	r0, r5, #1168
 5913 0498 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5914              	.LVL629:
 5915              	.L327:
 295:src/main.cpp  ****   if(!rear_left->motorInit()){
 5916              		.loc 13 295 0
 5917 049c 9CA8     		add	r0, sp, #624
 5918 049e FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5919              	.LVL630:
 296:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 5920              		.loc 13 296 0
 5921 04a2 0368     		ldr	r3, [r0]
 295:src/main.cpp  ****   if(!rear_left->motorInit()){
 5922              		.loc 13 295 0
 5923 04a4 C4F8540A 		str	r0, [r4, #2644]
 296:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 5924              		.loc 13 296 0
 5925 04a8 DB68     		ldr	r3, [r3, #12]
 295:src/main.cpp  ****   if(!rear_left->motorInit()){
 5926              		.loc 13 295 0
 5927 04aa 574D     		ldr	r5, .L361
 296:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 5928              		.loc 13 296 0
 5929 04ac 9847     		blx	r3
 5930              	.LVL631:
 5931 04ae 70B9     		cbnz	r0, .L328
 297:src/main.cpp  ****     nh.logerror(error);
 5932              		.loc 13 297 0
 5933 04b0 D5F8540A 		ldr	r0, [r5, #2644]
 5934 04b4 0368     		ldr	r3, [r0]
 5935 04b6 1B69     		ldr	r3, [r3, #16]
 5936 04b8 9847     		blx	r3
 5937              	.LVL632:
 5938 04ba 5449     		ldr	r1, .L361+4
 5939 04bc 0246     		mov	r2, r0
 5940 04be 25A8     		add	r0, sp, #148
 5941 04c0 FFF7FEFF 		bl	sprintf
 5942              	.LVL633:
 298:src/main.cpp  ****   }
 5943              		.loc 13 298 0
 5944 04c4 25A9     		add	r1, sp, #148
 5945 04c6 05F59260 		add	r0, r5, #1168
 5946 04ca FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5947              	.LVL634:
 5948              	.L328:
 301:src/main.cpp  ****   if(!rear_right->motorInit()){
 5949              		.loc 13 301 0
 5950 04ce B6A8     		add	r0, sp, #728
 5951 04d0 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5952              	.LVL635:
 302:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 5953              		.loc 13 302 0
 5954 04d4 0368     		ldr	r3, [r0]
 301:src/main.cpp  ****   if(!rear_right->motorInit()){
 5955              		.loc 13 301 0
 5956 04d6 C4F8580A 		str	r0, [r4, #2648]
 302:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 5957              		.loc 13 302 0
 5958 04da DB68     		ldr	r3, [r3, #12]
 301:src/main.cpp  ****   if(!rear_right->motorInit()){
 5959              		.loc 13 301 0
 5960 04dc 4A4D     		ldr	r5, .L361
 302:src/main.cpp  ****     sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 5961              		.loc 13 302 0
 5962 04de 9847     		blx	r3
 5963              	.LVL636:
 5964 04e0 70B9     		cbnz	r0, .L329
 303:src/main.cpp  ****     nh.logerror(error);
 5965              		.loc 13 303 0
 5966 04e2 D5F8580A 		ldr	r0, [r5, #2648]
 5967 04e6 0368     		ldr	r3, [r0]
 5968 04e8 1B69     		ldr	r3, [r3, #16]
 5969 04ea 9847     		blx	r3
 5970              	.LVL637:
 5971 04ec 4749     		ldr	r1, .L361+4
 5972 04ee 0246     		mov	r2, r0
 5973 04f0 25A8     		add	r0, sp, #148
 5974 04f2 FFF7FEFF 		bl	sprintf
 5975              	.LVL638:
 304:src/main.cpp  ****   }
 5976              		.loc 13 304 0
 5977 04f6 25A9     		add	r1, sp, #148
 5978 04f8 05F59260 		add	r0, r5, #1168
 5979 04fc FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 5980              	.LVL639:
 5981              	.L329:
 311:src/main.cpp  ****   servo_right->setReference(135);
 5982              		.loc 13 311 0
 5983 0500 E069     		ldr	r0, [r4, #28]
 5984 0502 4349     		ldr	r1, .L361+8
 5985 0504 0368     		ldr	r3, [r0]
 318:src/main.cpp  ****   bool connected = false;
 5986              		.loc 13 318 0
 5987 0506 0025     		movs	r5, #0
 311:src/main.cpp  ****   servo_right->setReference(135);
 5988              		.loc 13 311 0
 5989 0508 5B69     		ldr	r3, [r3, #20]
 5990 050a 9847     		blx	r3
 5991              	.LVL640:
 312:src/main.cpp  ****   front_right->setReference(0);
 5992              		.loc 13 312 0
 5993 050c 206A     		ldr	r0, [r4, #32]
 5994 050e 4049     		ldr	r1, .L361+8
 5995 0510 0368     		ldr	r3, [r0]
 5996 0512 5B69     		ldr	r3, [r3, #20]
 5997 0514 9847     		blx	r3
 5998              	.LVL641:
 313:src/main.cpp  ****   front_left->setReference(0);
 5999              		.loc 13 313 0
 6000 0516 D4F8500A 		ldr	r0, [r4, #2640]
 6001 051a 0021     		movs	r1, #0
 6002 051c 0368     		ldr	r3, [r0]
 6003 051e 5B69     		ldr	r3, [r3, #20]
 6004 0520 9847     		blx	r3
 6005              	.LVL642:
 314:src/main.cpp  ****   rear_right->setReference(0);
 6006              		.loc 13 314 0
 6007 0522 D4F84C0A 		ldr	r0, [r4, #2636]
 6008 0526 0021     		movs	r1, #0
 6009 0528 0368     		ldr	r3, [r0]
 6010 052a 5B69     		ldr	r3, [r3, #20]
 6011 052c 9847     		blx	r3
 6012              	.LVL643:
 315:src/main.cpp  ****   rear_left->setReference(0);
 6013              		.loc 13 315 0
 6014 052e D4F8580A 		ldr	r0, [r4, #2648]
 6015 0532 0021     		movs	r1, #0
 6016 0534 0368     		ldr	r3, [r0]
 6017 0536 5B69     		ldr	r3, [r3, #20]
 6018 0538 9847     		blx	r3
 6019              	.LVL644:
 316:src/main.cpp  **** 
 6020              		.loc 13 316 0
 6021 053a D4F8540A 		ldr	r0, [r4, #2644]
 6022 053e 0021     		movs	r1, #0
 6023 0540 0368     		ldr	r3, [r0]
 6024 0542 5B69     		ldr	r3, [r3, #20]
 6025 0544 9847     		blx	r3
 6026              	.LVL645:
 6027              	.L333:
 330:src/main.cpp  ****     if(cnt < 50)
 6028              		.loc 13 330 0
 6029 0546 FFF7FEFF 		bl	millis
 6030              	.LVL646:
 331:src/main.cpp  ****       servo_left->update(dt_s, connected, true);
 6031              		.loc 13 331 0
 6032 054a 312D     		cmp	r5, #49
 330:src/main.cpp  ****     if(cnt < 50)
 6033              		.loc 13 330 0
 6034 054c 0646     		mov	r6, r0
 6035              	.LVL647:
 332:src/main.cpp  ****     else
 6036              		.loc 13 332 0
 6037 054e D4BF     		ite	le
 6038 0550 E069     		ldrle	r0, [r4, #28]
 6039              	.LVL648:
 334:src/main.cpp  ****     while( millis() - start_time < dt);
 6040              		.loc 13 334 0
 6041 0552 206A     		ldrgt	r0, [r4, #32]
 6042 0554 0022     		movs	r2, #0
 6043 0556 0368     		ldr	r3, [r0]
 6044 0558 2E49     		ldr	r1, .L361+12
 6045 055a DF69     		ldr	r7, [r3, #28]
 6046 055c 0123     		movs	r3, #1
 6047 055e B847     		blx	r7
 6048              	.LVL649:
 6049              	.L331:
 335:src/main.cpp  ****     cnt++;
 6050              		.loc 13 335 0
 6051 0560 FFF7FEFF 		bl	millis
 6052              	.LVL650:
 6053 0564 801B     		subs	r0, r0, r6
 6054 0566 1328     		cmp	r0, #19
 6055 0568 FAD9     		bls	.L331
 336:src/main.cpp  ****   }
 6056              		.loc 13 336 0
 6057 056a 0135     		adds	r5, r5, #1
 6058              	.LVL651:
 329:src/main.cpp  ****     start_time = millis();
 6059              		.loc 13 329 0
 6060 056c 642D     		cmp	r5, #100
 6061 056e EAD1     		bne	.L333
 6062              	.LVL652:
 345:src/main.cpp  **** 
 6063              		.loc 13 345 0
 6064 0570 D4F8440A 		ldr	r0, [r4, #2628]	@ float
 6065 0574 4FF07C51 		mov	r1, #1056964608
 6066 0578 FFF7FEFF 		bl	__aeabi_fmul
 6067              	.LVL653:
 6068 057c FFF7FEFF 		bl	__aeabi_f2d
 6069              	.LVL654:
 6070 0580 0246     		mov	r2, r0
 6071 0582 0B46     		mov	r3, r1
 6072 0584 FFF7FEFF 		bl	__aeabi_dmul
 6073              	.LVL655:
 6074 0588 0246     		mov	r2, r0
 6075 058a 0B46     		mov	r3, r1
 6076 058c FFF7FEFF 		bl	__aeabi_dadd
 6077              	.LVL656:
 6078 0590 FFF7FEFF 		bl	sqrt
 6079              	.LVL657:
 6080 0594 FFF7FEFF 		bl	__aeabi_d2f
 6081              	.LVL658:
 348:src/main.cpp  ****   uint32_t elapsed;
 6082              		.loc 13 348 0
 6083 0598 1F4B     		ldr	r3, .L361+16
 6084 059a 18AD     		add	r5, sp, #96
 345:src/main.cpp  **** 
 6085              		.loc 13 345 0
 6086 059c 0B90     		str	r0, [sp, #44]	@ float
 6087              	.LVL659:
 348:src/main.cpp  ****   uint32_t elapsed;
 6088              		.loc 13 348 0
 6089 059e 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 6090              	.LVL660:
 6091 05a0 85E80F00 		stmia	r5, {r0, r1, r2, r3}
 350:src/main.cpp  **** 
 6092              		.loc 13 350 0
 6093 05a4 0123     		movs	r3, #1
 6094              	.LBB435:
 6095              	.LBB436:
 6096              	.LBB437:
 286:./lib/ros_lib/ros/node_handle.h ****       };
 6097              		.loc 11 286 0
 6098 05a6 184D     		ldr	r5, .L361
 6099              	.LBE437:
 6100              	.LBE436:
 6101              	.LBE435:
 350:src/main.cpp  **** 
 6102              		.loc 13 350 0
 6103 05a8 2370     		strb	r3, [r4]
 339:src/main.cpp  **** 
 6104              		.loc 13 339 0
 6105 05aa 0024     		movs	r4, #0
 6106              	.LVL661:
 6107              	.L342:
 6108              	.LBB449:
 356:src/main.cpp  **** 
 6109              		.loc 13 356 0
 6110 05ac FFF7FEFF 		bl	millis
 6111              	.LVL662:
 362:src/main.cpp  ****       debug_toggle();
 6112              		.loc 13 362 0
 6113 05b0 631C     		adds	r3, r4, #1
 6114 05b2 3222     		movs	r2, #50
 6115 05b4 1093     		str	r3, [sp, #64]
 6116 05b6 94FBF2F3 		sdiv	r3, r4, r2
 6117 05ba 02FB1344 		mls	r4, r2, r3, r4
 6118              	.LVL663:
 356:src/main.cpp  **** 
 6119              		.loc 13 356 0
 6120 05be 0A90     		str	r0, [sp, #40]
 6121              	.LVL664:
 362:src/main.cpp  ****       debug_toggle();
 6122              		.loc 13 362 0
 6123 05c0 0CB9     		cbnz	r4, .L334
 363:src/main.cpp  ****     connected = nh.connected();
 6124              		.loc 13 363 0
 6125 05c2 FFF7FEFF 		bl	debug_toggle
 6126              	.LVL665:
 6127              	.L334:
 367:src/main.cpp  ****     float sr = servo_right->update(dt_s, connected, true);
 6128              		.loc 13 367 0
 6129 05c6 E869     		ldr	r0, [r5, #28]
 6130              	.LBB439:
 6131              	.LBB438:
 286:./lib/ros_lib/ros/node_handle.h ****       };
 6132              		.loc 11 286 0
 6133 05c8 95F88469 		ldrb	r6, [r5, #2436]	@ zero_extendqisi2
 6134              	.LVL666:
 6135              	.LBE438:
 6136              	.LBE439:
 367:src/main.cpp  ****     float sr = servo_right->update(dt_s, connected, true);
 6137              		.loc 13 367 0
 6138 05cc 0368     		ldr	r3, [r0]
 6139 05ce 3246     		mov	r2, r6
 6140 05d0 DC69     		ldr	r4, [r3, #28]
 6141 05d2 1049     		ldr	r1, .L361+12
 6142 05d4 0123     		movs	r3, #1
 6143 05d6 A047     		blx	r4
 6144              	.LVL667:
 6145 05d8 8146     		mov	r9, r0
 6146              	.LVL668:
 368:src/main.cpp  **** 
 6147              		.loc 13 368 0
 6148 05da 286A     		ldr	r0, [r5, #32]
 6149              	.LVL669:
 6150 05dc 3246     		mov	r2, r6
 6151 05de 0368     		ldr	r3, [r0]
 6152 05e0 0C49     		ldr	r1, .L361+12
 6153 05e2 DC69     		ldr	r4, [r3, #28]
 6154 05e4 0123     		movs	r3, #1
 6155 05e6 A047     		blx	r4
 6156              	.LVL670:
 370:src/main.cpp  ****     debug_msg.data[1] = (float)sr;
 6157              		.loc 13 370 0
 6158 05e8 D5F85C34 		ldr	r3, [r5, #1116]
 368:src/main.cpp  **** 
 6159              		.loc 13 368 0
 6160 05ec 0746     		mov	r7, r0
 6161              	.LVL671:
 370:src/main.cpp  ****     debug_msg.data[1] = (float)sr;
 6162              		.loc 13 370 0
 6163 05ee C3F80090 		str	r9, [r3]	@ float
 371:src/main.cpp  **** 
 6164              		.loc 13 371 0
 6165 05f2 5860     		str	r0, [r3, #4]	@ float
 6166              	.LVL672:
 375:src/main.cpp  ****       waitForServos = false;
 6167              		.loc 13 375 0
 6168 05f4 6B7A     		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 6169 05f6 044C     		ldr	r4, .L361
 6170 05f8 83B9     		cbnz	r3, .L335
 6171              	.LVL673:
 6172              	.L338:
 6173 05fa 6368     		ldr	r3, [r4, #4]
 6174 05fc 0A9A     		ldr	r2, [sp, #40]
 6175 05fe 03F5FA73 		add	r3, r3, #500
 6176 0602 9A42     		cmp	r2, r3
 6177 0604 26D3     		bcc	.L336
 6178 0606 33E1     		b	.L355
 6179              	.L362:
 6180              		.align	2
 6181              	.L361:
 6182 0608 00000000 		.word	.LANCHOR1
 6183 060c 6A030000 		.word	.LC37
 6184 0610 00000743 		.word	1124532224
 6185 0614 0BD7A33C 		.word	1017370379
 6186 0618 1C000000 		.word	.LANCHOR0+28
 6187              	.LVL674:
 6188              	.L335:
 375:src/main.cpp  ****       waitForServos = false;
 6189              		.loc 13 375 0 is_stmt 0 discriminator 1
 6190 061c 286A     		ldr	r0, [r5, #32]
 6191              	.LVL675:
 6192 061e 0368     		ldr	r3, [r0]
 6193 0620 9B69     		ldr	r3, [r3, #24]
 6194 0622 9847     		blx	r3
 6195              	.LVL676:
 6196 0624 8246     		mov	r10, r0
 6197 0626 3846     		mov	r0, r7
 6198 0628 FFF7FEFF 		bl	__aeabi_f2iz
 6199              	.LVL677:
 6200 062c 8046     		mov	r8, r0
 6201 062e 5046     		mov	r0, r10
 6202 0630 FFF7FEFF 		bl	__aeabi_f2iz
 6203              	.LVL678:
 6204 0634 8045     		cmp	r8, r0
 6205 0636 E0D1     		bne	.L338
 375:src/main.cpp  ****       waitForServos = false;
 6206              		.loc 13 375 0 discriminator 4
 6207 0638 E869     		ldr	r0, [r5, #28]
 6208 063a 0368     		ldr	r3, [r0]
 6209 063c 9B69     		ldr	r3, [r3, #24]
 6210 063e 9847     		blx	r3
 6211              	.LVL679:
 6212 0640 8246     		mov	r10, r0
 6213 0642 4846     		mov	r0, r9
 6214 0644 FFF7FEFF 		bl	__aeabi_f2iz
 6215              	.LVL680:
 6216 0648 8046     		mov	r8, r0
 6217 064a 5046     		mov	r0, r10
 6218 064c FFF7FEFF 		bl	__aeabi_f2iz
 6219              	.LVL681:
 6220 0650 8045     		cmp	r8, r0
 6221 0652 D2D1     		bne	.L338
 6222              	.L336:
 377:src/main.cpp  ****       front_left->setReference(motorCmd[1]);
 6223              		.loc 13 377 0 is_stmt 1
 6224 0654 D4F8500A 		ldr	r0, [r4, #2640]
 376:src/main.cpp  ****       front_right->setReference(motorCmd[0]);
 6225              		.loc 13 376 0
 6226 0658 0023     		movs	r3, #0
 6227 065a 6372     		strb	r3, [r4, #9]
 377:src/main.cpp  ****       front_left->setReference(motorCmd[1]);
 6228              		.loc 13 377 0
 6229 065c 0368     		ldr	r3, [r0]
 6230 065e E168     		ldr	r1, [r4, #12]	@ float
 6231 0660 5B69     		ldr	r3, [r3, #20]
 6232 0662 9847     		blx	r3
 6233              	.LVL682:
 378:src/main.cpp  ****       rear_left->setReference(motorCmd[2]);
 6234              		.loc 13 378 0
 6235 0664 D4F84C0A 		ldr	r0, [r4, #2636]
 6236 0668 2169     		ldr	r1, [r4, #16]	@ float
 6237 066a 0368     		ldr	r3, [r0]
 373:src/main.cpp  **** 
 6238              		.loc 13 373 0
 6239 066c 4FF00108 		mov	r8, #1
 378:src/main.cpp  ****       rear_left->setReference(motorCmd[2]);
 6240              		.loc 13 378 0
 6241 0670 5B69     		ldr	r3, [r3, #20]
 6242 0672 9847     		blx	r3
 6243              	.LVL683:
 379:src/main.cpp  ****       rear_right->setReference(motorCmd[3]);
 6244              		.loc 13 379 0
 6245 0674 D4F8540A 		ldr	r0, [r4, #2644]
 6246 0678 6169     		ldr	r1, [r4, #20]	@ float
 6247 067a 0368     		ldr	r3, [r0]
 6248 067c 5B69     		ldr	r3, [r3, #20]
 6249 067e 9847     		blx	r3
 6250              	.LVL684:
 380:src/main.cpp  ****     }else{
 6251              		.loc 13 380 0
 6252 0680 D4F8580A 		ldr	r0, [r4, #2648]
 6253 0684 A169     		ldr	r1, [r4, #24]	@ float
 6254 0686 0368     		ldr	r3, [r0]
 6255 0688 5B69     		ldr	r3, [r3, #20]
 6256 068a 9847     		blx	r3
 6257              	.LVL685:
 6258              	.L343:
 389:src/main.cpp  ****     //udelay(500);
 6259              		.loc 13 389 0
 6260 068c D4F8500A 		ldr	r0, [r4, #2640]
 6261 0690 3246     		mov	r2, r6
 6262 0692 0368     		ldr	r3, [r0]
 6263 0694 8649     		ldr	r1, .L363+8
 6264 0696 D3F81CA0 		ldr	r10, [r3, #28]
 6265 069a 4346     		mov	r3, r8
 6266 069c D047     		blx	r10
 6267              	.LVL686:
 6268 069e 0890     		str	r0, [sp, #32]	@ float
 6269              	.LVL687:
 391:src/main.cpp  ****     //udelay(500);
 6270              		.loc 13 391 0
 6271 06a0 D4F84C0A 		ldr	r0, [r4, #2636]
 6272              	.LVL688:
 6273 06a4 3246     		mov	r2, r6
 6274 06a6 0368     		ldr	r3, [r0]
 6275 06a8 8149     		ldr	r1, .L363+8
 6276 06aa D3F81CA0 		ldr	r10, [r3, #28]
 6277 06ae 4346     		mov	r3, r8
 6278 06b0 D047     		blx	r10
 6279              	.LVL689:
 6280 06b2 8346     		mov	fp, r0
 6281              	.LVL690:
 393:src/main.cpp  ****     //udelay(500);
 6282              		.loc 13 393 0
 6283 06b4 D4F8540A 		ldr	r0, [r4, #2644]
 6284              	.LVL691:
 6285 06b8 3246     		mov	r2, r6
 6286 06ba 0368     		ldr	r3, [r0]
 6287 06bc 7C49     		ldr	r1, .L363+8
 6288 06be D3F81CA0 		ldr	r10, [r3, #28]
 6289 06c2 4346     		mov	r3, r8
 6290 06c4 D047     		blx	r10
 6291              	.LVL692:
 6292 06c6 8246     		mov	r10, r0
 6293              	.LVL693:
 395:src/main.cpp  ****     //udelay(1000);
 6294              		.loc 13 395 0
 6295 06c8 D4F8580A 		ldr	r0, [r4, #2648]
 6296              	.LVL694:
 6297 06cc 3246     		mov	r2, r6
 6298 06ce 0368     		ldr	r3, [r0]
 6299 06d0 7749     		ldr	r1, .L363+8
 6300 06d2 DB69     		ldr	r3, [r3, #28]
 6301 06d4 9E46     		mov	lr, r3
 6302 06d6 4346     		mov	r3, r8
 6303 06d8 7646     		mov	r6, lr
 6304 06da B047     		blx	r6
 6305              	.LVL695:
 400:src/main.cpp  ****     debug_msg.data[3] = fl;
 6306              		.loc 13 400 0
 6307 06dc D4F85C34 		ldr	r3, [r4, #1116]
 6308 06e0 089A     		ldr	r2, [sp, #32]	@ float
 401:src/main.cpp  ****     debug_msg.data[4] = rl;
 6309              		.loc 13 401 0
 6310 06e2 C3F80CB0 		str	fp, [r3, #12]	@ float
 403:src/main.cpp  **** 
 6311              		.loc 13 403 0
 6312 06e6 5861     		str	r0, [r3, #20]	@ float
 400:src/main.cpp  ****     debug_msg.data[3] = fl;
 6313              		.loc 13 400 0
 6314 06e8 9A60     		str	r2, [r3, #8]	@ float
 402:src/main.cpp  ****     debug_msg.data[5] = rr;
 6315              		.loc 13 402 0
 6316 06ea C3F810A0 		str	r10, [r3, #16]	@ float
 406:src/main.cpp  **** 
 6317              		.loc 13 406 0
 6318 06ee 7149     		ldr	r1, .L363+12
 6319 06f0 3846     		mov	r0, r7
 6320              	.LVL696:
 6321 06f2 FFF7FEFF 		bl	__aeabi_fsub
 6322              	.LVL697:
 6323 06f6 0DF1700B 		add	fp, sp, #112
 6324              	.LVL698:
 6325 06fa CBF80000 		str	r0, [fp]	@ float
 6326 06fe 4946     		mov	r1, r9
 6327 0700 6C48     		ldr	r0, .L363+12
 6328 0702 FFF7FEFF 		bl	__aeabi_fsub
 6329              	.LVL699:
 6330 0706 6B49     		ldr	r1, .L363+12
 6331 0708 CBF80400 		str	r0, [fp, #4]	@ float
 6332 070c 4846     		mov	r0, r9
 6333 070e FFF7FEFF 		bl	__aeabi_fadd
 6334              	.LVL700:
 6335 0712 6849     		ldr	r1, .L363+12
 6336 0714 CBF80800 		str	r0, [fp, #8]	@ float
 6337 0718 07F10040 		add	r0, r7, #-2147483648
 6338 071c FFF7FEFF 		bl	__aeabi_fsub
 6339              	.LVL701:
 6340              	.LBB440:
 6341              	.LBB441:
 417:src/main.cpp  ****       theta_dot += cos(angles[i] - delta)*speeds[i];
 6342              		.loc 13 417 0
 6343 0720 D4F88C34 		ldr	r3, [r4, #1164]
 6344              	.LBE441:
 6345              	.LBE440:
 406:src/main.cpp  **** 
 6346              		.loc 13 406 0
 6347 0724 CBF80C00 		str	r0, [fp, #12]	@ float
 6348              	.LVL702:
 6349              	.LBB444:
 6350              	.LBB442:
 417:src/main.cpp  ****       theta_dot += cos(angles[i] - delta)*speeds[i];
 6351              		.loc 13 417 0
 6352 0728 1193     		str	r3, [sp, #68]
 6353              	.LBE442:
 412:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 6354              		.loc 13 412 0
 6355 072a 0024     		movs	r4, #0
 6356              	.LVL703:
 6357              	.L339:
 6358              	.LBB443:
 413:src/main.cpp  ****       x_dot += cos(alpha[i]+angles[i])*speeds[i];
 6359              		.loc 13 413 0 discriminator 2
 6360 072c 5BF82400 		ldr	r0, [fp, r4, lsl #2]	@ float
 6361 0730 FFF7FEFF 		bl	__aeabi_f2d
 6362              	.LVL704:
 6363 0734 5CA3     		adr	r3, .L363
 6364 0736 D3E90023 		ldrd	r2, [r3]
 6365 073a FFF7FEFF 		bl	__aeabi_dmul
 6366              	.LVL705:
 6367 073e 0022     		movs	r2, #0
 6368 0740 5D4B     		ldr	r3, .L363+16
 6369 0742 FFF7FEFF 		bl	__aeabi_ddiv
 6370              	.LVL706:
 6371 0746 FFF7FEFF 		bl	__aeabi_d2f
 6372              	.LVL707:
 414:src/main.cpp  ****       y_dot += sin(alpha[i]+angles[i])*speeds[i];
 6373              		.loc 13 414 0 discriminator 2
 6374 074a 18AB     		add	r3, sp, #96
 6375 074c 53F824A0 		ldr	r10, [r3, r4, lsl #2]	@ float
 413:src/main.cpp  ****       x_dot += cos(alpha[i]+angles[i])*speeds[i];
 6376              		.loc 13 413 0 discriminator 2
 6377 0750 4BF82400 		str	r0, [fp, r4, lsl #2]	@ float
 414:src/main.cpp  ****       y_dot += sin(alpha[i]+angles[i])*speeds[i];
 6378              		.loc 13 414 0 discriminator 2
 6379 0754 5146     		mov	r1, r10
 6380 0756 FFF7FEFF 		bl	__aeabi_fadd
 6381              	.LVL708:
 6382 075a FFF7FEFF 		bl	__aeabi_f2d
 6383              	.LVL709:
 6384 075e 0646     		mov	r6, r0
 6385 0760 0F46     		mov	r7, r1
 6386 0762 FFF7FEFF 		bl	cos
 6387              	.LVL710:
 6388 0766 CDE90C01 		strd	r0, [sp, #48]
 6389              	.LVL711:
 415:src/main.cpp  ****       float delta = atan( (l*cos(alpha[i]+d*cos(alpha[i] + angles[i]))) / (l*sin(alpha[i] + d*sin(a
 6390              		.loc 13 415 0 discriminator 2
 6391 076a 3046     		mov	r0, r6
 6392 076c 3946     		mov	r1, r7
 6393 076e FFF7FEFF 		bl	sin
 6394              	.LVL712:
 6395 0772 CDE90E01 		strd	r0, [sp, #56]
 6396              	.LVL713:
 416:src/main.cpp  ****       odom_msg.data[i] = delta*180/M_PI;
 6397              		.loc 13 416 0 discriminator 2
 6398 0776 0B98     		ldr	r0, [sp, #44]	@ float
 6399 0778 FFF7FEFF 		bl	__aeabi_f2d
 6400              	.LVL714:
 6401 077c CDE90801 		strd	r0, [sp, #32]
 6402 0780 5046     		mov	r0, r10
 6403 0782 FFF7FEFF 		bl	__aeabi_f2d
 6404              	.LVL715:
 6405 0786 8046     		mov	r8, r0
 6406 0788 D5F8480A 		ldr	r0, [r5, #2632]	@ float
 6407 078c 8946     		mov	r9, r1
 6408 078e FFF7FEFF 		bl	__aeabi_f2d
 6409              	.LVL716:
 6410 0792 0646     		mov	r6, r0
 6411 0794 0F46     		mov	r7, r1
 6412 0796 0246     		mov	r2, r0
 6413 0798 0B46     		mov	r3, r1
 6414 079a DDE90C01 		ldrd	r0, [sp, #48]
 6415 079e FFF7FEFF 		bl	__aeabi_dmul
 6416              	.LVL717:
 6417 07a2 4246     		mov	r2, r8
 6418 07a4 4B46     		mov	r3, r9
 6419 07a6 FFF7FEFF 		bl	__aeabi_dadd
 6420              	.LVL718:
 6421 07aa FFF7FEFF 		bl	cos
 6422              	.LVL719:
 6423 07ae 3246     		mov	r2, r6
 6424 07b0 3B46     		mov	r3, r7
 6425 07b2 CDE90C01 		strd	r0, [sp, #48]
 6426 07b6 DDE90E01 		ldrd	r0, [sp, #56]
 6427 07ba FFF7FEFF 		bl	__aeabi_dmul
 6428              	.LVL720:
 6429 07be 4246     		mov	r2, r8
 6430 07c0 4B46     		mov	r3, r9
 6431 07c2 FFF7FEFF 		bl	__aeabi_dadd
 6432              	.LVL721:
 6433 07c6 FFF7FEFF 		bl	sin
 6434              	.LVL722:
 6435 07ca DDE90C23 		ldrd	r2, [sp, #48]
 6436 07ce 8046     		mov	r8, r0
 6437 07d0 8946     		mov	r9, r1
 6438 07d2 DDE90801 		ldrd	r0, [sp, #32]
 6439 07d6 FFF7FEFF 		bl	__aeabi_dmul
 6440              	.LVL723:
 6441 07da 4246     		mov	r2, r8
 6442 07dc 0646     		mov	r6, r0
 6443 07de 0F46     		mov	r7, r1
 6444 07e0 DDE90801 		ldrd	r0, [sp, #32]
 6445 07e4 4B46     		mov	r3, r9
 6446 07e6 FFF7FEFF 		bl	__aeabi_dmul
 6447              	.LVL724:
 6448 07ea 0246     		mov	r2, r0
 6449 07ec 0B46     		mov	r3, r1
 6450 07ee 3046     		mov	r0, r6
 6451 07f0 3946     		mov	r1, r7
 6452 07f2 FFF7FEFF 		bl	__aeabi_ddiv
 6453              	.LVL725:
 6454 07f6 FFF7FEFF 		bl	atan
 6455              	.LVL726:
 417:src/main.cpp  ****       theta_dot += cos(angles[i] - delta)*speeds[i];
 6456              		.loc 13 417 0 discriminator 2
 6457 07fa FFF7FEFF 		bl	__aeabi_d2f
 6458              	.LVL727:
 6459 07fe 2F49     		ldr	r1, .L363+20
 6460 0800 FFF7FEFF 		bl	__aeabi_fmul
 6461              	.LVL728:
 6462 0804 FFF7FEFF 		bl	__aeabi_f2d
 6463              	.LVL729:
 6464 0808 27A3     		adr	r3, .L363
 6465 080a D3E90023 		ldrd	r2, [r3]
 6466 080e FFF7FEFF 		bl	__aeabi_ddiv
 6467              	.LVL730:
 6468 0812 FFF7FEFF 		bl	__aeabi_d2f
 6469              	.LVL731:
 6470 0816 119B     		ldr	r3, [sp, #68]
 416:src/main.cpp  ****       odom_msg.data[i] = delta*180/M_PI;
 6471              		.loc 13 416 0 discriminator 2
 6472 0818 DFF8A8A0 		ldr	r10, .L363+28
 417:src/main.cpp  ****       theta_dot += cos(angles[i] - delta)*speeds[i];
 6473              		.loc 13 417 0 discriminator 2
 6474 081c 43F82400 		str	r0, [r3, r4, lsl #2]	@ float
 6475              	.LVL732:
 6476              	.LBE443:
 412:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 6477              		.loc 13 412 0 discriminator 2
 6478 0820 0134     		adds	r4, r4, #1
 6479              	.LVL733:
 6480 0822 042C     		cmp	r4, #4
 6481 0824 82D1     		bne	.L339
 6482              	.LVL734:
 6483              	.LBE444:
 6484              	.LBB445:
 6485              	.LBB446:
 6486              		.file 18 "./lib/ros_lib/ros/publisher.h"
   1:./lib/ros_lib/ros/publisher.h **** /* 
   2:./lib/ros_lib/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/publisher.h ****  *
   4:./lib/ros_lib/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/publisher.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/publisher.h ****  *
   7:./lib/ros_lib/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/publisher.h ****  * are met:
  10:./lib/ros_lib/ros/publisher.h ****  *
  11:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/publisher.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/publisher.h ****  *
  21:./lib/ros_lib/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/publisher.h ****  */
  34:./lib/ros_lib/ros/publisher.h **** 
  35:./lib/ros_lib/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:./lib/ros_lib/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:./lib/ros_lib/ros/publisher.h **** 
  38:./lib/ros_lib/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/publisher.h **** #include "node_handle.h"
  40:./lib/ros_lib/ros/publisher.h **** 
  41:./lib/ros_lib/ros/publisher.h **** namespace ros {
  42:./lib/ros_lib/ros/publisher.h **** 
  43:./lib/ros_lib/ros/publisher.h ****   /* Generic Publisher */
  44:./lib/ros_lib/ros/publisher.h ****   class Publisher
  45:./lib/ros_lib/ros/publisher.h ****   {
  46:./lib/ros_lib/ros/publisher.h ****     public:
  47:./lib/ros_lib/ros/publisher.h ****       Publisher( const char * topic_name, Msg * msg, int endpoint=rosserial_msgs::TopicInfo::ID_PUB
  48:./lib/ros_lib/ros/publisher.h ****         topic_(topic_name), 
  49:./lib/ros_lib/ros/publisher.h ****         msg_(msg),
  50:./lib/ros_lib/ros/publisher.h ****         endpoint_(endpoint) {};
  51:./lib/ros_lib/ros/publisher.h **** 
  52:./lib/ros_lib/ros/publisher.h ****       int publish( const Msg * msg ) { return nh_->publish(id_, msg); };
 6487              		.loc 18 52 0
 6488 0826 DAF8280A 		ldr	r0, [r10, #2600]
 6489 082a 0AF58C62 		add	r2, r10, #1120
 6490 082e 0368     		ldr	r3, [r0]
 6491 0830 DAF8241A 		ldr	r1, [r10, #2596]
 6492 0834 1B68     		ldr	r3, [r3]
 6493 0836 9847     		blx	r3
 6494              	.LVL735:
 6495              	.LBE446:
 6496              	.LBE445:
 433:src/main.cpp  **** 
 6497              		.loc 13 433 0
 6498 0838 0AF59260 		add	r0, r10, #1168
 6499 083c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 6500              	.LVL736:
 435:src/main.cpp  ****     if(elapsed > dt){
 6501              		.loc 13 435 0
 6502 0840 FFF7FEFF 		bl	millis
 6503              	.LVL737:
 6504 0844 0A9B     		ldr	r3, [sp, #40]
 6505 0846 C21A     		subs	r2, r0, r3
 6506              	.LVL738:
 6507              	.LBB447:
 436:src/main.cpp  ****       char elapsed_msg[18];
 6508              		.loc 13 436 0
 6509 0848 142A     		cmp	r2, #20
 6510 084a 09D9     		bls	.L344
 6511              	.LBB448:
 438:src/main.cpp  ****       nh.logerror(elapsed_msg);
 6512              		.loc 13 438 0
 6513 084c 1C49     		ldr	r1, .L363+24
 6514 084e 20A8     		add	r0, sp, #128
 6515 0850 FFF7FEFF 		bl	sprintf
 6516              	.LVL739:
 439:src/main.cpp  ****     }else{
 6517              		.loc 13 439 0
 6518 0854 20A9     		add	r1, sp, #128
 6519 0856 0AF59260 		add	r0, r10, #1168
 6520 085a FFF7FEFF 		bl	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
 6521              	.LVL740:
 6522              	.LBE448:
 6523 085e 05E0     		b	.L341
 6524              	.L344:
 444:src/main.cpp  ****     }
 6525              		.loc 13 444 0
 6526 0860 FFF7FEFF 		bl	millis
 6527              	.LVL741:
 6528 0864 0A9B     		ldr	r3, [sp, #40]
 6529 0866 C01A     		subs	r0, r0, r3
 6530 0868 1328     		cmp	r0, #19
 6531 086a F9D9     		bls	.L344
 6532              	.L341:
 6533              	.LBE447:
 362:src/main.cpp  ****       debug_toggle();
 6534              		.loc 13 362 0 discriminator 1
 6535 086c 109C     		ldr	r4, [sp, #64]
 6536              	.LVL742:
 6537              	.LBE449:
 353:src/main.cpp  ****    //printf("HELLOO!!!!");
 6538              		.loc 13 353 0 discriminator 1
 6539 086e 9DE6     		b	.L342
 6540              	.LVL743:
 6541              	.L355:
 6542              	.LBB450:
 383:src/main.cpp  ****       front_left->setReference(0);
 6543              		.loc 13 383 0
 6544 0870 D5F8500A 		ldr	r0, [r5, #2640]
 6545 0874 0021     		movs	r1, #0
 6546 0876 0368     		ldr	r3, [r0]
 382:src/main.cpp  ****       front_right->setReference(0);
 6547              		.loc 13 382 0
 6548 0878 4FF00008 		mov	r8, #0
 383:src/main.cpp  ****       front_left->setReference(0);
 6549              		.loc 13 383 0
 6550 087c 5B69     		ldr	r3, [r3, #20]
 6551 087e 9847     		blx	r3
 6552              	.LVL744:
 384:src/main.cpp  ****       rear_left->setReference(0);
 6553              		.loc 13 384 0
 6554 0880 D5F84C0A 		ldr	r0, [r5, #2636]
 6555 0884 0021     		movs	r1, #0
 6556 0886 0368     		ldr	r3, [r0]
 6557 0888 5B69     		ldr	r3, [r3, #20]
 6558 088a 9847     		blx	r3
 6559              	.LVL745:
 385:src/main.cpp  ****       rear_right->setReference(0);
 6560              		.loc 13 385 0
 6561 088c D5F8540A 		ldr	r0, [r5, #2644]
 6562 0890 0021     		movs	r1, #0
 6563 0892 0368     		ldr	r3, [r0]
 6564 0894 5B69     		ldr	r3, [r3, #20]
 6565 0896 9847     		blx	r3
 6566              	.LVL746:
 386:src/main.cpp  ****     }
 6567              		.loc 13 386 0
 6568 0898 D5F8580A 		ldr	r0, [r5, #2648]
 6569 089c 0021     		movs	r1, #0
 6570 089e 0368     		ldr	r3, [r0]
 6571 08a0 5B69     		ldr	r3, [r3, #20]
 6572 08a2 9847     		blx	r3
 6573              	.LVL747:
 6574 08a4 F2E6     		b	.L343
 6575              	.L364:
 6576 08a6 00BF     		.align	3
 6577              	.L363:
 6578 08a8 182D4454 		.word	1413754136
 6579 08ac FB210940 		.word	1074340347
 6580 08b0 0BD7A33C 		.word	1017370379
 6581 08b4 0000B442 		.word	1119092736
 6582 08b8 00806640 		.word	1080459264
 6583 08bc 00003443 		.word	1127481344
 6584 08c0 94030000 		.word	.LC38
 6585 08c4 00000000 		.word	.LANCHOR1
 6586              	.LBE450:
 6587              		.cfi_endproc
 6588              	.LFE1281:
 6589              		.fnend
 6591              		.align	1
 6592              		.thumb
 6593              		.thumb_func
 6595              	_GLOBAL__sub_I_USART_FIFO:
 6596              		.fnstart
 6597              	.LFB1339:
 534:src/main.cpp  ****     //nh.spinOnce();
 535:src/main.cpp  ****   }
 536:src/main.cpp  **** }
 6598              		.loc 13 536 0
 6599              		.cfi_startproc
 6600              		@ args = 0, pretend = 0, frame = 0
 6601              		@ frame_needed = 0, uses_anonymous_args = 0
 6602              	.LVL748:
 6603              	.LBB529:
 6604              	.LBB530:
 6605              	.LBB531:
 6606              	.LBB532:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6607              		.loc 11 119 0
 6608 08c8 5D4B     		ldr	r3, .L374
 6609 08ca 5E4A     		ldr	r2, .L374+4
 6610              	.LBE532:
 6611              	.LBE531:
 6612              	.LBE530:
 6613              	.LBE529:
 6614              		.loc 13 536 0
 6615 08cc 70B5     		push	{r4, r5, r6, lr}
 6616              	.LCFI61:
 6617              		.cfi_def_cfa_offset 16
 6618              		.cfi_offset 4, -16
 6619              		.cfi_offset 5, -12
 6620              		.cfi_offset 6, -8
 6621              		.cfi_offset 14, -4
 6622              	.LBB654:
 6623              	.LBB653:
 6624              	.LBB550:
 6625              	.LBB549:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6626              		.loc 11 119 0
 6627 08ce C3F89024 		str	r2, [r3, #1168]
 6628              	.LVL749:
 6629              	.LBB533:
 6630              	.LBB534:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
 6631              		.loc 15 60 0
 6632 08d2 5D4A     		ldr	r2, .L374+8
 6633              	.LBE534:
 6634              	.LBE533:
 6635              	.LBB537:
 6636              	.LBB538:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 6637              		.loc 4 70 0
 6638 08d4 5D49     		ldr	r1, .L374+12
 6639              	.LBE538:
 6640              	.LBE537:
 6641              	.LBB541:
 6642              	.LBB535:
  60:./lib/ros_lib/ArduinoHardware.h ****       baud_ = 115200;
 6643              		.loc 15 60 0
 6644 08d6 C3F89424 		str	r2, [r3, #1172]
  61:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTIN = 0;
 6645              		.loc 15 61 0
 6646 08da 4FF4E132 		mov	r2, #115200
 6647 08de C3F89824 		str	r2, [r3, #1176]
  62:./lib/ros_lib/ArduinoHardware.h ****       USART_CNTOUT = 0;
 6648              		.loc 15 62 0
 6649 08e2 0022     		movs	r2, #0
 6650 08e4 9A62     		str	r2, [r3, #40]
 6651              	.LBE535:
 6652              	.LBE541:
 6653              	.LBB542:
 6654              	.LBB539:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 6655              		.loc 4 70 0
 6656 08e6 C3F89819 		str	r1, [r3, #2456]
 6657              	.LBE539:
 6658              	.LBE542:
 6659              	.LBB543:
 6660              	.LBB536:
  63:./lib/ros_lib/ArduinoHardware.h ****     }
 6661              		.loc 15 63 0
 6662 08ea 5A62     		str	r2, [r3, #36]
 6663              	.LVL750:
 6664              	.LBE536:
 6665              	.LBE543:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6666              		.loc 11 119 0
 6667 08ec 83F88429 		strb	r2, [r3, #2436]
 6668              	.LVL751:
 6669              	.LBB544:
 6670              	.LBB540:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 6671              		.loc 4 70 0
 6672 08f0 83F89C29 		strb	r2, [r3, #2460]
 6673 08f4 C3F8A429 		str	r2, [r3, #2468]
 6674 08f8 83F8A829 		strb	r2, [r3, #2472]
 6675 08fc C3F8B029 		str	r2, [r3, #2480]
 6676 0900 83F8B429 		strb	r2, [r3, #2484]
 6677 0904 C3F8BC29 		str	r2, [r3, #2492]
 6678              	.LVL752:
 6679 0908 03F6A401 		addw	r1, r3, #2212
 6680 090c 03F60813 		addw	r3, r3, #2312
 6681              	.LVL753:
 6682              	.L366:
 6683              	.LBE540:
 6684              	.LBE544:
 6685              	.LBB545:
 122:./lib/ros_lib/ros/node_handle.h **** 
 6686              		.loc 11 122 0
 6687 0910 41F8042F 		str	r2, [r1, #4]!
 121:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 6688              		.loc 11 121 0
 6689 0914 8B42     		cmp	r3, r1
 6690 0916 FBD1     		bne	.L366
 6691 0918 4D4A     		ldr	r2, .L374+16
 6692              	.LBE545:
 6693              	.LBB546:
 125:./lib/ros_lib/ros/node_handle.h **** 
 6694              		.loc 11 125 0
 6695 091a 0021     		movs	r1, #0
 6696              	.L367:
 6697 091c 43F8041F 		str	r1, [r3, #4]!
 6698              	.LVL754:
 124:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 6699              		.loc 11 124 0
 6700 0920 9342     		cmp	r3, r2
 6701 0922 FBD1     		bne	.L367
 6702 0924 0023     		movs	r3, #0
 6703              	.LBE546:
 6704              	.LBB547:
 128:./lib/ros_lib/ros/node_handle.h **** 
 6705              		.loc 11 128 0
 6706 0926 1946     		mov	r1, r3
 6707 0928 4A48     		ldr	r0, .L374+20
 6708              	.L368:
 6709              	.LVL755:
 6710 092a C218     		adds	r2, r0, r3
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 6711              		.loc 11 127 0
 6712 092c 0133     		adds	r3, r3, #1
 6713              	.LVL756:
 6714 092e B3F5007F 		cmp	r3, #512
 128:./lib/ros_lib/ros/node_handle.h **** 
 6715              		.loc 11 128 0
 6716 0932 1176     		strb	r1, [r2, #24]
 6717 0934 474D     		ldr	r5, .L374+20
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 6718              		.loc 11 127 0
 6719 0936 F8D1     		bne	.L368
 6720 0938 0021     		movs	r1, #0
 6721              	.LBE547:
 6722              	.LBB548:
 131:./lib/ros_lib/ros/node_handle.h **** 
 6723              		.loc 11 131 0
 6724 093a 0C46     		mov	r4, r1
 6725              	.LVL757:
 6726              	.L369:
 6727 093c 6818     		adds	r0, r5, r1
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 6728              		.loc 11 130 0
 6729 093e 0131     		adds	r1, r1, #1
 6730              	.LVL758:
 6731 0940 B1F5007F 		cmp	r1, #512
 131:./lib/ros_lib/ros/node_handle.h **** 
 6732              		.loc 11 131 0
 6733 0944 3E4B     		ldr	r3, .L374
 6734 0946 4FF00002 		mov	r2, #0
 6735 094a 80F81842 		strb	r4, [r0, #536]
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 6736              		.loc 11 130 0
 6737 094e F5D1     		bne	.L369
 6738              	.LVL759:
 6739              	.LBE548:
 6740              	.LBE549:
 6741              	.LBE550:
 6742              	.LBB551:
 6743              	.LBB552:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6744              		.loc 12 67 0
 6745 0950 4149     		ldr	r1, .L374+24
  69:./lib/ros_lib/ros/subscriber.h ****       };
 6746              		.loc 12 69 0
 6747 0952 424C     		ldr	r4, .L374+28
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6748              		.loc 12 67 0
 6749 0954 C3F8C019 		str	r1, [r3, #2496]
 6750              	.LVL760:
 6751              	.LBB553:
 6752              	.LBB554:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6753              		.loc 10 33 0
 6754 0958 4149     		ldr	r1, .L374+32
 6755              	.LBE554:
 6756              	.LBE553:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 6757              		.loc 12 69 0
 6758 095a C3F8C849 		str	r4, [r3, #2504]
 6759              	.LBB572:
 6760              	.LBB567:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6761              		.loc 10 33 0
 6762 095e C3F8CC19 		str	r1, [r3, #2508]
 6763              	.LVL761:
 6764              	.LBB555:
 6765              	.LBB556:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6766              		.loc 9 23 0
 6767 0962 4049     		ldr	r1, .L374+36
 6768              	.LBE556:
 6769              	.LBE555:
 6770              	.LBE567:
 6771              	.LBE572:
 6772              	.LBE552:
 6773              	.LBE551:
 6774              	.LBB582:
 6775              	.LBB583:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6776              		.loc 12 67 0
 6777 0964 404C     		ldr	r4, .L374+40
 6778              	.LBE583:
 6779              	.LBE582:
 6780              	.LBB594:
 6781              	.LBB577:
 6782              	.LBB573:
 6783              	.LBB568:
 6784              	.LBB563:
 6785              	.LBB559:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6786              		.loc 9 23 0
 6787 0966 C3F8D019 		str	r1, [r3, #2512]
 6788              	.LBE559:
 6789              	.LBE563:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6790              		.loc 10 33 0
 6791 096a 0021     		movs	r1, #0
 6792 096c C3F8E419 		str	r1, [r3, #2532]	@ float
 6793 0970 C3F8E819 		str	r1, [r3, #2536]	@ float
 6794 0974 C3F8EC19 		str	r1, [r3, #2540]	@ float
 6795 0978 C3F8F019 		str	r1, [r3, #2544]	@ float
 6796              	.LBE568:
 6797              	.LBE573:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6798              		.loc 12 67 0
 6799 097c 3B49     		ldr	r1, .L374+44
 6800              	.LBE577:
 6801              	.LBE594:
 6802              	.LBB595:
 6803              	.LBB590:
 6804 097e C3F8004A 		str	r4, [r3, #2560]
 6805              	.LBB584:
 6806              	.LBB585:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 6807              		.loc 8 18 0
 6808 0982 3B4C     		ldr	r4, .L374+48
 6809              	.LBE585:
 6810              	.LBE584:
 6811              	.LBE590:
 6812              	.LBE595:
 6813              	.LBB596:
 6814              	.LBB578:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6815              		.loc 12 67 0
 6816 0984 C3F8F819 		str	r1, [r3, #2552]
 6817 0988 0121     		movs	r1, #1
 6818 098a C3F8FC19 		str	r1, [r3, #2556]
 6819              	.LBE578:
 6820              	.LBE596:
 6821              	.LBB597:
 6822              	.LBB591:
 6823              	.LBB588:
 6824              	.LBB586:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 6825              		.loc 8 18 0
 6826 098e C3F80C4A 		str	r4, [r3, #2572]
 6827              	.LBE586:
 6828              	.LBE588:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6829              		.loc 12 67 0
 6830 0992 C3F8181A 		str	r1, [r3, #2584]
 6831 0996 374C     		ldr	r4, .L374+52
  69:./lib/ros_lib/ros/subscriber.h ****       };
 6832              		.loc 12 69 0
 6833 0998 3749     		ldr	r1, .L374+56
 6834              	.LBE591:
 6835              	.LBE597:
 6836              	.LBB598:
 6837              	.LBB579:
 6838              	.LBB574:
 6839              	.LBB569:
 6840              	.LBB564:
 6841              	.LBB560:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6842              		.loc 9 23 0
 6843 099a 3848     		ldr	r0, .L374+60
 6844              	.LBE560:
 6845              	.LBE564:
 6846              	.LBE569:
 6847              	.LBE574:
 6848              	.LBE579:
 6849              	.LBE598:
 6850              	.LBB599:
 6851              	.LBB592:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6852              		.loc 12 67 0
 6853 099c C3F8144A 		str	r4, [r3, #2580]
  69:./lib/ros_lib/ros/subscriber.h ****       };
 6854              		.loc 12 69 0
 6855 09a0 C3F8081A 		str	r1, [r3, #2568]
 6856              	.LBE592:
 6857              	.LBE599:
 6858              	.LBB600:
 6859              	.LBB601:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6860              		.loc 7 23 0
 6861 09a4 364E     		ldr	r6, .L374+64
 6862              	.LBB602:
 6863              	.LBB603:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6864              		.loc 6 23 0
 6865 09a6 374D     		ldr	r5, .L374+68
 6866              	.LBB604:
 6867              	.LBB605:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6868              		.loc 5 22 0
 6869 09a8 374C     		ldr	r4, .L374+72
 6870              	.LBE605:
 6871              	.LBE604:
 6872              	.LBE603:
 6873              	.LBE602:
 6874              	.LBE601:
 6875              	.LBE600:
 6876              	.LBB616:
 6877              	.LBB617:
  50:./lib/ros_lib/ros/publisher.h **** 
 6878              		.loc 18 50 0
 6879 09aa 3849     		ldr	r1, .L374+76
 6880              	.LBE617:
 6881              	.LBE616:
 6882              	.LBB621:
 6883              	.LBB580:
 6884              	.LBB575:
 6885              	.LBB570:
 6886              	.LBB565:
 6887              	.LBB561:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6888              		.loc 9 23 0
 6889 09ac C3F8E009 		str	r0, [r3, #2528]
 6890              	.LBE561:
 6891              	.LBE565:
 6892              	.LBE570:
 6893              	.LBE575:
 6894              	.LBE580:
 6895              	.LBE621:
 6896              	.LBB622:
 6897              	.LBB614:
 6898              	.LBB612:
 6899              	.LBB610:
 6900              	.LBB608:
 6901              	.LBB606:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6902              		.loc 5 22 0
 6903 09b0 C3F84004 		str	r0, [r3, #1088]
 6904              	.LBE606:
 6905              	.LBE608:
 6906              	.LBE610:
 6907              	.LBE612:
 6908              	.LBE614:
 6909              	.LBE622:
 6910              	.LBB623:
 6911              	.LBB581:
 6912              	.LBB576:
 6913              	.LBB571:
 6914              	.LBB566:
 6915              	.LBB562:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6916              		.loc 9 23 0
 6917 09b4 C3F8D429 		str	r2, [r3, #2516]
 6918              	.LVL762:
 6919              	.LBB557:
 6920              	.LBB558:
 6921              		.loc 17 52 0
 6922 09b8 C3F8D829 		str	r2, [r3, #2520]
 6923 09bc C3F8DC29 		str	r2, [r3, #2524]
 6924              	.LVL763:
 6925              	.LBE558:
 6926              	.LBE557:
 6927              	.LBE562:
 6928              	.LBE566:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6929              		.loc 10 33 0
 6930 09c0 83F8F429 		strb	r2, [r3, #2548]
 6931              	.LVL764:
 6932              	.LBE571:
 6933              	.LBE576:
 6934              	.LBE581:
 6935              	.LBE623:
 6936              	.LBB624:
 6937              	.LBB593:
 6938              	.LBB589:
 6939              	.LBB587:
  18:./lib/ros_lib/std_msgs/UInt8.h ****     {
 6940              		.loc 8 18 0
 6941 09c4 83F8102A 		strb	r2, [r3, #2576]
 6942              	.LVL765:
 6943              	.LBE587:
 6944              	.LBE589:
 6945              	.LBE593:
 6946              	.LBE624:
 6947              	.LBB625:
 6948              	.LBB615:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6949              		.loc 7 23 0
 6950 09c8 C3F83064 		str	r6, [r3, #1072]
 6951              	.LVL766:
 6952              	.LBB613:
 6953              	.LBB611:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6954              		.loc 6 23 0
 6955 09cc C3F83454 		str	r5, [r3, #1076]
 6956 09d0 83F83824 		strb	r2, [r3, #1080]
 6957              	.LVL767:
 6958              	.LBB609:
 6959              	.LBB607:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6960              		.loc 5 22 0
 6961 09d4 C3F83C44 		str	r4, [r3, #1084]
 6962 09d8 C3F84424 		str	r2, [r3, #1092]
 6963 09dc C3F84824 		str	r2, [r3, #1096]
 6964              	.LVL768:
 6965              	.LBE607:
 6966              	.LBE609:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6967              		.loc 6 23 0
 6968 09e0 C3F84C24 		str	r2, [r3, #1100]
 6969 09e4 C3F85024 		str	r2, [r3, #1104]
 6970              	.LVL769:
 6971              	.LBE611:
 6972              	.LBE613:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6973              		.loc 7 23 0
 6974 09e8 83F85424 		strb	r2, [r3, #1108]
 6975 09ec C3F85C24 		str	r2, [r3, #1116]
 6976              	.LVL770:
 6977              	.LBE615:
 6978              	.LBE625:
 6979              	.LBB626:
 6980              	.LBB618:
  50:./lib/ros_lib/ros/publisher.h **** 
 6981              		.loc 18 50 0
 6982 09f0 C3F8301A 		str	r1, [r3, #2608]
 6983 09f4 03F58661 		add	r1, r3, #1072
 6984              	.LBE618:
 6985              	.LBE626:
 6986              	.LBB627:
 6987              	.LBB628:
 6988              	.LBB629:
 6989              	.LBB630:
 6990              	.LBB631:
 6991              	.LBB632:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6992              		.loc 5 22 0
 6993 09f8 C3F87004 		str	r0, [r3, #1136]
 6994              	.LBE632:
 6995              	.LBE631:
 6996              	.LBE630:
 6997              	.LBE629:
 6998              	.LBE628:
 6999              	.LBE627:
 7000              	.LBB642:
 7001              	.LBB643:
  50:./lib/ros_lib/ros/publisher.h **** 
 7002              		.loc 18 50 0
 7003 09fc 2448     		ldr	r0, .L374+80
 7004              	.LBE643:
 7005              	.LBE642:
 7006              	.LBB646:
 7007              	.LBB619:
 7008 09fe C3F8341A 		str	r1, [r3, #2612]
 7009              	.LBE619:
 7010              	.LBE646:
 7011              	.LBB647:
 7012              	.LBB639:
 7013              	.LBB637:
 7014              	.LBB635:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 7015              		.loc 6 23 0
 7016 0a02 83F86824 		strb	r2, [r3, #1128]
 7017              	.LBE635:
 7018              	.LBE637:
 7019              	.LBE639:
 7020              	.LBE647:
 7021              	.LBB648:
 7022              	.LBB644:
  50:./lib/ros_lib/ros/publisher.h **** 
 7023              		.loc 18 50 0
 7024 0a06 03F58C61 		add	r1, r3, #1120
 7025              	.LBE644:
 7026              	.LBE648:
 7027              	.LBB649:
 7028              	.LBB640:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 7029              		.loc 7 23 0
 7030 0a0a 83F88424 		strb	r2, [r3, #1156]
 7031              	.LBE640:
 7032              	.LBE649:
 7033              	.LBB650:
 7034              	.LBB620:
  50:./lib/ros_lib/ros/publisher.h **** 
 7035              		.loc 18 50 0
 7036 0a0e C3F8402A 		str	r2, [r3, #2624]
 7037              	.LVL771:
 7038              	.LBE620:
 7039              	.LBE650:
 7040              	.LBB651:
 7041              	.LBB641:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 7042              		.loc 7 23 0
 7043 0a12 C3F86064 		str	r6, [r3, #1120]
 7044              	.LVL772:
 7045              	.LBB638:
 7046              	.LBB636:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 7047              		.loc 6 23 0
 7048 0a16 C3F86454 		str	r5, [r3, #1124]
 7049              	.LBB634:
 7050              	.LBB633:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 7051              		.loc 5 22 0
 7052 0a1a C3F86C44 		str	r4, [r3, #1132]
 7053 0a1e C3F87424 		str	r2, [r3, #1140]
 7054 0a22 C3F87824 		str	r2, [r3, #1144]
 7055              	.LVL773:
 7056              	.LBE633:
 7057              	.LBE634:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 7058              		.loc 6 23 0
 7059 0a26 C3F87C24 		str	r2, [r3, #1148]
 7060 0a2a C3F88024 		str	r2, [r3, #1152]
 7061              	.LVL774:
 7062              	.LBE636:
 7063              	.LBE638:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 7064              		.loc 7 23 0
 7065 0a2e C3F88C24 		str	r2, [r3, #1164]
 7066              	.LVL775:
 7067              	.LBE641:
 7068              	.LBE651:
 7069              	.LBB652:
 7070              	.LBB645:
  50:./lib/ros_lib/ros/publisher.h **** 
 7071              		.loc 18 50 0
 7072 0a32 C3F81C0A 		str	r0, [r3, #2588]
 7073 0a36 C3F8201A 		str	r1, [r3, #2592]
 7074 0a3a C3F82C2A 		str	r2, [r3, #2604]
 7075              	.LVL776:
 7076 0a3e 70BD     		pop	{r4, r5, r6, pc}
 7077              	.L375:
 7078              		.align	2
 7079              	.L374:
 7080 0a40 00000000 		.word	.LANCHOR1
 7081 0a44 08000000 		.word	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE+8
 7082 0a48 00380140 		.word	1073821696
 7083 0a4c 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 7084 0a50 6C090000 		.word	.LANCHOR1+2412
 7085 0a54 90040000 		.word	.LANCHOR1+1168
 7086 0a58 08000000 		.word	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE+8
 7087 0a5c 9D030000 		.word	.LC39
 7088 0a60 08000000 		.word	_ZTVN12roberto_msgs10MotorStateE+8
 7089 0a64 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 7090 0a68 08000000 		.word	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE+8
 7091 0a6c 00000000 		.word	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 7092 0a70 08000000 		.word	_ZTVN8std_msgs5UInt8E+8
 7093 0a74 00000000 		.word	_Z6led_cbRKN8std_msgs5UInt8E
 7094 0a78 AF030000 		.word	.LC40
 7095 0a7c 67020000 		.word	.LC22
 7096 0a80 08000000 		.word	_ZTVN8std_msgs17Float32MultiArrayE+8
 7097 0a84 08000000 		.word	_ZTVN8std_msgs16MultiArrayLayoutE+8
 7098 0a88 08000000 		.word	_ZTVN8std_msgs19MultiArrayDimensionE+8
 7099 0a8c B3030000 		.word	.LC41
 7100 0a90 B9030000 		.word	.LC42
 7101              	.LBE645:
 7102              	.LBE652:
 7103              	.LBE653:
 7104              	.LBE654:
 7105              		.cfi_endproc
 7106              	.LFE1339:
 7107              		.cantunwind
 7108              		.fnend
 7110              		.section	.init_array,"aw",%init_array
 7111              		.align	2
 7112 0000 00000000 		.word	_GLOBAL__sub_I_USART_FIFO(target1)
 7113              		.weak	_ZTSN3ros3MsgE
 7114              		.section	.rodata._ZTSN3ros3MsgE,"aG",%progbits,_ZTSN3ros3MsgE,comdat
 7117              	_ZTSN3ros3MsgE:
 7118 0000 4E33726F 		.ascii	"N3ros3MsgE\000"
 7118      73334D73 
 7118      674500
 7119              		.weak	_ZTIN3ros3MsgE
 7120              		.section	.rodata._ZTIN3ros3MsgE,"aG",%progbits,_ZTIN3ros3MsgE,comdat
 7121              		.align	2
 7124              	_ZTIN3ros3MsgE:
 7125 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 7126 0004 00000000 		.word	_ZTSN3ros3MsgE
 7127              		.weak	_ZTSN8std_msgs4TimeE
 7128              		.section	.rodata._ZTSN8std_msgs4TimeE,"aG",%progbits,_ZTSN8std_msgs4TimeE,comdat
 7131              	_ZTSN8std_msgs4TimeE:
 7132 0000 4E387374 		.ascii	"N8std_msgs4TimeE\000"
 7132      645F6D73 
 7132      67733454 
 7132      696D6545 
 7132      00
 7133              		.weak	_ZTIN8std_msgs4TimeE
 7134              		.section	.rodata._ZTIN8std_msgs4TimeE,"aG",%progbits,_ZTIN8std_msgs4TimeE,comdat
 7135              		.align	2
 7138              	_ZTIN8std_msgs4TimeE:
 7139 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7140 0004 00000000 		.word	_ZTSN8std_msgs4TimeE
 7141 0008 00000000 		.word	_ZTIN3ros3MsgE
 7142              		.weak	_ZTSN14rosserial_msgs9TopicInfoE
 7143              		.section	.rodata._ZTSN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTSN14rosserial_msgs9TopicInfoE,
 7146              	_ZTSN14rosserial_msgs9TopicInfoE:
 7147 0000 4E313472 		.ascii	"N14rosserial_msgs9TopicInfoE\000"
 7147      6F737365 
 7147      7269616C 
 7147      5F6D7367 
 7147      7339546F 
 7148              		.weak	_ZTIN14rosserial_msgs9TopicInfoE
 7149              		.section	.rodata._ZTIN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTIN14rosserial_msgs9TopicInfoE,
 7150              		.align	2
 7153              	_ZTIN14rosserial_msgs9TopicInfoE:
 7154 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7155 0004 00000000 		.word	_ZTSN14rosserial_msgs9TopicInfoE
 7156 0008 00000000 		.word	_ZTIN3ros3MsgE
 7157              		.weak	_ZTSN14rosserial_msgs3LogE
 7158              		.section	.rodata._ZTSN14rosserial_msgs3LogE,"aG",%progbits,_ZTSN14rosserial_msgs3LogE,comdat
 7161              	_ZTSN14rosserial_msgs3LogE:
 7162 0000 4E313472 		.ascii	"N14rosserial_msgs3LogE\000"
 7162      6F737365 
 7162      7269616C 
 7162      5F6D7367 
 7162      73334C6F 
 7163              		.weak	_ZTIN14rosserial_msgs3LogE
 7164              		.section	.rodata._ZTIN14rosserial_msgs3LogE,"aG",%progbits,_ZTIN14rosserial_msgs3LogE,comdat
 7165              		.align	2
 7168              	_ZTIN14rosserial_msgs3LogE:
 7169 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7170 0004 00000000 		.word	_ZTSN14rosserial_msgs3LogE
 7171 0008 00000000 		.word	_ZTIN3ros3MsgE
 7172              		.weak	_ZTSN14rosserial_msgs19RequestParamRequestE
 7173              		.section	.rodata._ZTSN14rosserial_msgs19RequestParamRequestE,"aG",%progbits,_ZTSN14rosserial_msgs1
 7176              	_ZTSN14rosserial_msgs19RequestParamRequestE:
 7177 0000 4E313472 		.ascii	"N14rosserial_msgs19RequestParamRequestE\000"
 7177      6F737365 
 7177      7269616C 
 7177      5F6D7367 
 7177      73313952 
 7178              		.weak	_ZTIN14rosserial_msgs19RequestParamRequestE
 7179              		.section	.rodata._ZTIN14rosserial_msgs19RequestParamRequestE,"aG",%progbits,_ZTIN14rosserial_msgs1
 7180              		.align	2
 7183              	_ZTIN14rosserial_msgs19RequestParamRequestE:
 7184 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7185 0004 00000000 		.word	_ZTSN14rosserial_msgs19RequestParamRequestE
 7186 0008 00000000 		.word	_ZTIN3ros3MsgE
 7187              		.weak	_ZTSN14rosserial_msgs20RequestParamResponseE
 7188              		.section	.rodata._ZTSN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTSN14rosserial_msgs
 7191              	_ZTSN14rosserial_msgs20RequestParamResponseE:
 7192 0000 4E313472 		.ascii	"N14rosserial_msgs20RequestParamResponseE\000"
 7192      6F737365 
 7192      7269616C 
 7192      5F6D7367 
 7192      73323052 
 7193              		.weak	_ZTIN14rosserial_msgs20RequestParamResponseE
 7194              		.section	.rodata._ZTIN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTIN14rosserial_msgs
 7195              		.align	2
 7198              	_ZTIN14rosserial_msgs20RequestParamResponseE:
 7199 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7200 0004 00000000 		.word	_ZTSN14rosserial_msgs20RequestParamResponseE
 7201 0008 00000000 		.word	_ZTIN3ros3MsgE
 7202              		.weak	_ZTSN3ros15NodeHandleBase_E
 7203              		.section	.rodata._ZTSN3ros15NodeHandleBase_E,"aG",%progbits,_ZTSN3ros15NodeHandleBase_E,comdat
 7206              	_ZTSN3ros15NodeHandleBase_E:
 7207 0000 4E33726F 		.ascii	"N3ros15NodeHandleBase_E\000"
 7207      7331354E 
 7207      6F646548 
 7207      616E646C 
 7207      65426173 
 7208              		.weak	_ZTIN3ros15NodeHandleBase_E
 7209              		.section	.rodata._ZTIN3ros15NodeHandleBase_E,"aG",%progbits,_ZTIN3ros15NodeHandleBase_E,comdat
 7210              		.align	2
 7213              	_ZTIN3ros15NodeHandleBase_E:
 7214 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 7215 0004 00000000 		.word	_ZTSN3ros15NodeHandleBase_E
 7216              		.weak	_ZTSN3ros11Subscriber_E
 7217              		.section	.rodata._ZTSN3ros11Subscriber_E,"aG",%progbits,_ZTSN3ros11Subscriber_E,comdat
 7220              	_ZTSN3ros11Subscriber_E:
 7221 0000 4E33726F 		.ascii	"N3ros11Subscriber_E\000"
 7221      73313153 
 7221      75627363 
 7221      72696265 
 7221      725F4500 
 7222              		.weak	_ZTIN3ros11Subscriber_E
 7223              		.section	.rodata._ZTIN3ros11Subscriber_E,"aG",%progbits,_ZTIN3ros11Subscriber_E,comdat
 7224              		.align	2
 7227              	_ZTIN3ros11Subscriber_E:
 7228 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 7229 0004 00000000 		.word	_ZTSN3ros11Subscriber_E
 7230              		.weak	_ZTSN8std_msgs19MultiArrayDimensionE
 7231              		.section	.rodata._ZTSN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTSN8std_msgs19MultiArrayDim
 7234              	_ZTSN8std_msgs19MultiArrayDimensionE:
 7235 0000 4E387374 		.ascii	"N8std_msgs19MultiArrayDimensionE\000"
 7235      645F6D73 
 7235      67733139 
 7235      4D756C74 
 7235      69417272 
 7236              		.weak	_ZTIN8std_msgs19MultiArrayDimensionE
 7237              		.section	.rodata._ZTIN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTIN8std_msgs19MultiArrayDim
 7238              		.align	2
 7241              	_ZTIN8std_msgs19MultiArrayDimensionE:
 7242 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7243 0004 00000000 		.word	_ZTSN8std_msgs19MultiArrayDimensionE
 7244 0008 00000000 		.word	_ZTIN3ros3MsgE
 7245              		.weak	_ZTSN8std_msgs16MultiArrayLayoutE
 7246              		.section	.rodata._ZTSN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTSN8std_msgs16MultiArrayLayout
 7249              	_ZTSN8std_msgs16MultiArrayLayoutE:
 7250 0000 4E387374 		.ascii	"N8std_msgs16MultiArrayLayoutE\000"
 7250      645F6D73 
 7250      67733136 
 7250      4D756C74 
 7250      69417272 
 7251              		.weak	_ZTIN8std_msgs16MultiArrayLayoutE
 7252              		.section	.rodata._ZTIN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTIN8std_msgs16MultiArrayLayout
 7253              		.align	2
 7256              	_ZTIN8std_msgs16MultiArrayLayoutE:
 7257 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7258 0004 00000000 		.word	_ZTSN8std_msgs16MultiArrayLayoutE
 7259 0008 00000000 		.word	_ZTIN3ros3MsgE
 7260              		.weak	_ZTSN8std_msgs17Float32MultiArrayE
 7261              		.section	.rodata._ZTSN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTSN8std_msgs17Float32MultiArr
 7264              	_ZTSN8std_msgs17Float32MultiArrayE:
 7265 0000 4E387374 		.ascii	"N8std_msgs17Float32MultiArrayE\000"
 7265      645F6D73 
 7265      67733137 
 7265      466C6F61 
 7265      7433324D 
 7266              		.weak	_ZTIN8std_msgs17Float32MultiArrayE
 7267              		.section	.rodata._ZTIN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTIN8std_msgs17Float32MultiArr
 7268              		.align	2
 7271              	_ZTIN8std_msgs17Float32MultiArrayE:
 7272 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7273 0004 00000000 		.word	_ZTSN8std_msgs17Float32MultiArrayE
 7274 0008 00000000 		.word	_ZTIN3ros3MsgE
 7275              		.weak	_ZTSN8std_msgs5UInt8E
 7276              		.section	.rodata._ZTSN8std_msgs5UInt8E,"aG",%progbits,_ZTSN8std_msgs5UInt8E,comdat
 7279              	_ZTSN8std_msgs5UInt8E:
 7280 0000 4E387374 		.ascii	"N8std_msgs5UInt8E\000"
 7280      645F6D73 
 7280      67733555 
 7280      496E7438 
 7280      4500
 7281              		.weak	_ZTIN8std_msgs5UInt8E
 7282              		.section	.rodata._ZTIN8std_msgs5UInt8E,"aG",%progbits,_ZTIN8std_msgs5UInt8E,comdat
 7283              		.align	2
 7286              	_ZTIN8std_msgs5UInt8E:
 7287 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7288 0004 00000000 		.word	_ZTSN8std_msgs5UInt8E
 7289 0008 00000000 		.word	_ZTIN3ros3MsgE
 7290              		.weak	_ZTSN8std_msgs6HeaderE
 7291              		.section	.rodata._ZTSN8std_msgs6HeaderE,"aG",%progbits,_ZTSN8std_msgs6HeaderE,comdat
 7294              	_ZTSN8std_msgs6HeaderE:
 7295 0000 4E387374 		.ascii	"N8std_msgs6HeaderE\000"
 7295      645F6D73 
 7295      67733648 
 7295      65616465 
 7295      724500
 7296              		.weak	_ZTIN8std_msgs6HeaderE
 7297              		.section	.rodata._ZTIN8std_msgs6HeaderE,"aG",%progbits,_ZTIN8std_msgs6HeaderE,comdat
 7298              		.align	2
 7301              	_ZTIN8std_msgs6HeaderE:
 7302 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7303 0004 00000000 		.word	_ZTSN8std_msgs6HeaderE
 7304 0008 00000000 		.word	_ZTIN3ros3MsgE
 7305              		.weak	_ZTSN12roberto_msgs10MotorStateE
 7306              		.section	.rodata._ZTSN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTSN12roberto_msgs10MotorStateE,
 7309              	_ZTSN12roberto_msgs10MotorStateE:
 7310 0000 4E313272 		.ascii	"N12roberto_msgs10MotorStateE\000"
 7310      6F626572 
 7310      746F5F6D 
 7310      73677331 
 7310      304D6F74 
 7311              		.weak	_ZTIN12roberto_msgs10MotorStateE
 7312              		.section	.rodata._ZTIN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTIN12roberto_msgs10MotorStateE,
 7313              		.align	2
 7316              	_ZTIN12roberto_msgs10MotorStateE:
 7317 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7318 0004 00000000 		.word	_ZTSN12roberto_msgs10MotorStateE
 7319 0008 00000000 		.word	_ZTIN3ros3MsgE
 7320              		.weak	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 7321              		.section	.rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 7324              	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 7325 0000 4E33726F 		.ascii	"N3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512"
 7325      7331314E 
 7325      6F646548 
 7325      616E646C 
 7325      655F4931 
 7326 0033 454C6935 		.ascii	"ELi512EEE\000"
 7326      31324545 
 7326      4500
 7327              		.weak	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 7328              		.section	.rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 7329              		.align	2
 7332              	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 7333 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7334 0004 00000000 		.word	_ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 7335 0008 00000000 		.word	_ZTIN3ros15NodeHandleBase_E
 7336              		.weak	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7337              		.section	.rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTSN3ros10Su
 7340              	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 7341 0000 4E33726F 		.ascii	"N3ros10SubscriberIN12roberto_msgs10MotorStateEEE\000"
 7341      73313053 
 7341      75627363 
 7341      72696265 
 7341      72494E31 
 7342              		.weak	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7343              		.section	.rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTIN3ros10Su
 7344              		.align	2
 7347              	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 7348 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7349 0004 00000000 		.word	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7350 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 7351              		.weak	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 7352              		.section	.rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTSN3ros10SubscriberIN8
 7355              	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:
 7356 0000 4E33726F 		.ascii	"N3ros10SubscriberIN8std_msgs5UInt8EEE\000"
 7356      73313053 
 7356      75627363 
 7356      72696265 
 7356      72494E38 
 7357              		.weak	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 7358              		.section	.rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTIN3ros10SubscriberIN8
 7359              		.align	2
 7362              	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:
 7363 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7364 0004 00000000 		.word	_ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
 7365 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 7366              		.weak	_ZTVN8std_msgs4TimeE
 7367              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 7368              		.align	2
 7371              	_ZTVN8std_msgs4TimeE:
 7372 0000 00000000 		.word	0
 7373 0004 00000000 		.word	_ZTIN8std_msgs4TimeE
 7374 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 7375 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 7376 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 7377 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 7378              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 7379              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 7380              		.align	2
 7383              	_ZTVN14rosserial_msgs9TopicInfoE:
 7384 0000 00000000 		.word	0
 7385 0004 00000000 		.word	_ZTIN14rosserial_msgs9TopicInfoE
 7386 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 7387 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 7388 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 7389 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 7390              		.weak	_ZTVN14rosserial_msgs3LogE
 7391              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 7392              		.align	2
 7395              	_ZTVN14rosserial_msgs3LogE:
 7396 0000 00000000 		.word	0
 7397 0004 00000000 		.word	_ZTIN14rosserial_msgs3LogE
 7398 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 7399 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 7400 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 7401 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 7402              		.weak	_ZTVN14rosserial_msgs19RequestParamRequestE
 7403              		.section	.rodata._ZTVN14rosserial_msgs19RequestParamRequestE,"aG",%progbits,_ZTVN14rosserial_msgs1
 7404              		.align	2
 7407              	_ZTVN14rosserial_msgs19RequestParamRequestE:
 7408 0000 00000000 		.word	0
 7409 0004 00000000 		.word	_ZTIN14rosserial_msgs19RequestParamRequestE
 7410 0008 00000000 		.word	_ZNK14rosserial_msgs19RequestParamRequest9serializeEPh
 7411 000c 00000000 		.word	_ZN14rosserial_msgs19RequestParamRequest11deserializeEPh
 7412 0010 00000000 		.word	_ZN14rosserial_msgs19RequestParamRequest7getTypeEv
 7413 0014 00000000 		.word	_ZN14rosserial_msgs19RequestParamRequest6getMD5Ev
 7414              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 7415              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 7416              		.align	2
 7419              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 7420 0000 00000000 		.word	0
 7421 0004 00000000 		.word	_ZTIN14rosserial_msgs20RequestParamResponseE
 7422 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 7423 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 7424 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 7425 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 7426              		.weak	_ZTVN8std_msgs19MultiArrayDimensionE
 7427              		.section	.rodata._ZTVN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTVN8std_msgs19MultiArrayDim
 7428              		.align	2
 7431              	_ZTVN8std_msgs19MultiArrayDimensionE:
 7432 0000 00000000 		.word	0
 7433 0004 00000000 		.word	_ZTIN8std_msgs19MultiArrayDimensionE
 7434 0008 00000000 		.word	_ZNK8std_msgs19MultiArrayDimension9serializeEPh
 7435 000c 00000000 		.word	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 7436 0010 00000000 		.word	_ZN8std_msgs19MultiArrayDimension7getTypeEv
 7437 0014 00000000 		.word	_ZN8std_msgs19MultiArrayDimension6getMD5Ev
 7438              		.weak	_ZTVN8std_msgs16MultiArrayLayoutE
 7439              		.section	.rodata._ZTVN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTVN8std_msgs16MultiArrayLayout
 7440              		.align	2
 7443              	_ZTVN8std_msgs16MultiArrayLayoutE:
 7444 0000 00000000 		.word	0
 7445 0004 00000000 		.word	_ZTIN8std_msgs16MultiArrayLayoutE
 7446 0008 00000000 		.word	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 7447 000c 00000000 		.word	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 7448 0010 00000000 		.word	_ZN8std_msgs16MultiArrayLayout7getTypeEv
 7449 0014 00000000 		.word	_ZN8std_msgs16MultiArrayLayout6getMD5Ev
 7450              		.weak	_ZTVN8std_msgs17Float32MultiArrayE
 7451              		.section	.rodata._ZTVN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTVN8std_msgs17Float32MultiArr
 7452              		.align	2
 7455              	_ZTVN8std_msgs17Float32MultiArrayE:
 7456 0000 00000000 		.word	0
 7457 0004 00000000 		.word	_ZTIN8std_msgs17Float32MultiArrayE
 7458 0008 00000000 		.word	_ZNK8std_msgs17Float32MultiArray9serializeEPh
 7459 000c 00000000 		.word	_ZN8std_msgs17Float32MultiArray11deserializeEPh
 7460 0010 00000000 		.word	_ZN8std_msgs17Float32MultiArray7getTypeEv
 7461 0014 00000000 		.word	_ZN8std_msgs17Float32MultiArray6getMD5Ev
 7462              		.weak	_ZTVN8std_msgs5UInt8E
 7463              		.section	.rodata._ZTVN8std_msgs5UInt8E,"aG",%progbits,_ZTVN8std_msgs5UInt8E,comdat
 7464              		.align	2
 7467              	_ZTVN8std_msgs5UInt8E:
 7468 0000 00000000 		.word	0
 7469 0004 00000000 		.word	_ZTIN8std_msgs5UInt8E
 7470 0008 00000000 		.word	_ZNK8std_msgs5UInt89serializeEPh
 7471 000c 00000000 		.word	_ZN8std_msgs5UInt811deserializeEPh
 7472 0010 00000000 		.word	_ZN8std_msgs5UInt87getTypeEv
 7473 0014 00000000 		.word	_ZN8std_msgs5UInt86getMD5Ev
 7474              		.weak	_ZTVN8std_msgs6HeaderE
 7475              		.section	.rodata._ZTVN8std_msgs6HeaderE,"aG",%progbits,_ZTVN8std_msgs6HeaderE,comdat
 7476              		.align	2
 7479              	_ZTVN8std_msgs6HeaderE:
 7480 0000 00000000 		.word	0
 7481 0004 00000000 		.word	_ZTIN8std_msgs6HeaderE
 7482 0008 00000000 		.word	_ZNK8std_msgs6Header9serializeEPh
 7483 000c 00000000 		.word	_ZN8std_msgs6Header11deserializeEPh
 7484 0010 00000000 		.word	_ZN8std_msgs6Header7getTypeEv
 7485 0014 00000000 		.word	_ZN8std_msgs6Header6getMD5Ev
 7486              		.weak	_ZTVN12roberto_msgs10MotorStateE
 7487              		.section	.rodata._ZTVN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTVN12roberto_msgs10MotorStateE,
 7488              		.align	2
 7491              	_ZTVN12roberto_msgs10MotorStateE:
 7492 0000 00000000 		.word	0
 7493 0004 00000000 		.word	_ZTIN12roberto_msgs10MotorStateE
 7494 0008 00000000 		.word	_ZNK12roberto_msgs10MotorState9serializeEPh
 7495 000c 00000000 		.word	_ZN12roberto_msgs10MotorState11deserializeEPh
 7496 0010 00000000 		.word	_ZN12roberto_msgs10MotorState7getTypeEv
 7497 0014 00000000 		.word	_ZN12roberto_msgs10MotorState6getMD5Ev
 7498              		.weak	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 7499              		.section	.rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE,"aG",%progbits,_
 7500              		.align	2
 7503              	_ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:
 7504 0000 00000000 		.word	0
 7505 0004 00000000 		.word	_ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
 7506 0008 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
 7507 000c 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
 7508 0010 00000000 		.word	_ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
 7509              		.weak	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7510              		.section	.rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTVN3ros10Su
 7511              		.align	2
 7514              	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 7515 0000 00000000 		.word	0
 7516 0004 00000000 		.word	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7517 0008 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 7518 000c 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 7519 0010 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 7520 0014 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 7521              		.weak	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
 7522              		.section	.rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE,"aG",%progbits,_ZTVN3ros10SubscriberIN8
 7523              		.align	2
 7526              	_ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:
 7527 0000 00000000 		.word	0
 7528 0004 00000000 		.word	_ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
 7529 0008 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
 7530 000c 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
 7531 0010 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
 7532 0014 00000000 		.word	_ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
 7533              		.global	odom_pub
 7534              		.global	odom_msg
 7535              		.global	debug_pub
 7536              		.global	debug_msg
 7537              		.global	led_sub
 7538              		.global	motor_sub
 7539              		.global	waitForServos
 7540              		.global	shuttingDown
 7541              		.global	nh
 7542              		.global	initialized
 7543              		.global	lastMsg
 7544              		.global	currentMode
 7545              		.global	motorCmd
 7546              		.global	L
 7547              		.global	d
 7548              		.global	rear_left
 7549              		.global	rear_right
 7550              		.global	front_left
 7551              		.global	front_right
 7552              		.global	servo_right
 7553              		.global	servo_left
 7554              		.global	USART_CNTOUT
 7555              		.global	USART_CNTIN
 7556              		.global	USART_FIFO
 7557              		.section	.rodata
 7558              		.align	2
 7559              		.set	.LANCHOR0,. + 0
 7562              	_ZN14rosserial_msgsL12REQUESTPARAME:
 7563 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 7563      65726961 
 7563      6C5F6D73 
 7563      67732F52 
 7563      65717565 
 7564              	.LC0:
 7565 001c DB0F49BF 		.word	-1085730853
 7566 0020 DB0F493F 		.word	1061752795
 7567 0024 E4CB1640 		.word	1075235812
 7568 0028 E4CB16C0 		.word	-1072247836
 7569              		.section	.rodata.str1.1,"aMS",%progbits,1
 7570              	.LC1:
 7571 0000 7374645F 		.ascii	"std_msgs/Time\000"
 7571      6D736773 
 7571      2F54696D 
 7571      6500
 7572              	.LC2:
 7573 000e 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 7573      36366337 
 7573      34633535 
 7573      32633331 
 7573      31666263 
 7574              	.LC3:
 7575 002f 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 7575      65726961 
 7575      6C5F6D73 
 7575      67732F54 
 7575      6F706963 
 7576              	.LC4:
 7577 0048 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 7577      31663838 
 7577      66633434 
 7577      38393266 
 7577      38633130 
 7578              	.LC5:
 7579 0069 726F7373 		.ascii	"rosserial_msgs/Log\000"
 7579      65726961 
 7579      6C5F6D73 
 7579      67732F4C 
 7579      6F6700
 7580              	.LC6:
 7581 007c 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 7581      64373331 
 7581      63323539 
 7581      33333236 
 7581      31636436 
 7582              	.LC7:
 7583 009d 63316633 		.ascii	"c1f3d28f1b044c871e6eff2e9fc3c667\000"
 7583      64323866 
 7583      31623034 
 7583      34633837 
 7583      31653665 
 7584              	.LC8:
 7585 00be 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 7585      39386264 
 7585      61363539 
 7585      38313938 
 7585      36646466 
 7586              	.LC9:
 7587 00df 7374645F 		.ascii	"std_msgs/MultiArrayDimension\000"
 7587      6D736773 
 7587      2F4D756C 
 7587      74694172 
 7587      72617944 
 7588              	.LC10:
 7589 00fc 34636430 		.ascii	"4cd0c83a8683deae40ecdac60e53bfa8\000"
 7589      63383361 
 7589      38363833 
 7589      64656165 
 7589      34306563 
 7590              	.LC11:
 7591 011d 7374645F 		.ascii	"std_msgs/MultiArrayLayout\000"
 7591      6D736773 
 7591      2F4D756C 
 7591      74694172 
 7591      7261794C 
 7592              	.LC12:
 7593 0137 30666564 		.ascii	"0fed2a11c13e11c5571b4e2a995a91a3\000"
 7593      32613131 
 7593      63313365 
 7593      31316335 
 7593      35373162 
 7594              	.LC13:
 7595 0158 7374645F 		.ascii	"std_msgs/Float32MultiArray\000"
 7595      6D736773 
 7595      2F466C6F 
 7595      61743332 
 7595      4D756C74 
 7596              	.LC14:
 7597 0173 36613430 		.ascii	"6a40e0ffa6a17a503ac3f8616991b1f6\000"
 7597      65306666 
 7597      61366131 
 7597      37613530 
 7597      33616333 
 7598              	.LC15:
 7599 0194 7374645F 		.ascii	"std_msgs/UInt8\000"
 7599      6D736773 
 7599      2F55496E 
 7599      743800
 7600              	.LC16:
 7601 01a3 37633831 		.ascii	"7c8164229e7d2c17eb95e9231617fdee\000"
 7601      36343232 
 7601      39653764 
 7601      32633137 
 7601      65623935 
 7602              	.LC17:
 7603 01c4 7374645F 		.ascii	"std_msgs/Header\000"
 7603      6D736773 
 7603      2F486561 
 7603      64657200 
 7604              	.LC18:
 7605 01d4 32313736 		.ascii	"2176decaecbce78abc3b96ef049fabed\000"
 7605      64656361 
 7605      65636263 
 7605      65373861 
 7605      62633362 
 7606              	.LC19:
 7607 01f5 726F6265 		.ascii	"roberto_msgs/MotorState\000"
 7607      72746F5F 
 7607      6D736773 
 7607      2F4D6F74 
 7607      6F725374 
 7608              	.LC20:
 7609 020d 65386235 		.ascii	"e8b5d1162b85151c49e02b8224796c0e\000"
 7609      64313136 
 7609      32623835 
 7609      31353163 
 7609      34396530 
 7610              	.LC21:
 7611 022e 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 7611      61676520 
 7611      66726F6D 
 7611      20646576 
 7611      69636520 
 7612 0261 66666572 		.ascii	"ffer.\000"
 7612      2E00
 7613              	.LC22:
 7614 0267 00       		.ascii	"\000"
 7615              	.LC23:
 7616 0268 73657269 		.ascii	"serial_node/FF\000"
 7616      616C5F6E 
 7616      6F64652F 
 7616      464600
 7617              	.LC24:
 7618 0277 73657269 		.ascii	"serial_node/KP\000"
 7618      616C5F6E 
 7618      6F64652F 
 7618      4B5000
 7619              	.LC25:
 7620 0286 73657269 		.ascii	"serial_node/KI\000"
 7620      616C5F6E 
 7620      6F64652F 
 7620      4B4900
 7621              	.LC26:
 7622 0295 73657269 		.ascii	"serial_node/KD\000"
 7622      616C5F6E 
 7622      6F64652F 
 7622      4B4400
 7623              	.LC27:
 7624 02a4 73657269 		.ascii	"serial_node/integralSaturation\000"
 7624      616C5F6E 
 7624      6F64652F 
 7624      696E7465 
 7624      6772616C 
 7625              	.LC28:
 7626 02c3 73657269 		.ascii	"serial_node/wheelRadius\000"
 7626      616C5F6E 
 7626      6F64652F 
 7626      77686565 
 7626      6C526164 
 7627              	.LC29:
 7628 02db 73657269 		.ascii	"serial_node/widthBetweenMotorPivotPoints\000"
 7628      616C5F6E 
 7628      6F64652F 
 7628      77696474 
 7628      68426574 
 7629              	.LC30:
 7630 0304 73657269 		.ascii	"serial_node/motorPivotPointToWheel\000"
 7630      616C5F6E 
 7630      6F64652F 
 7630      6D6F746F 
 7630      72506976 
 7631              	.LC31:
 7632 0327 73657276 		.ascii	"servo_left\000"
 7632      6F5F6C65 
 7632      667400
 7633              	.LC32:
 7634 0332 73657276 		.ascii	"servo_right\000"
 7634      6F5F7269 
 7634      67687400 
 7635              	.LC33:
 7636 033e 66726F6E 		.ascii	"front_right\000"
 7636      745F7269 
 7636      67687400 
 7637              	.LC34:
 7638 034a 66726F6E 		.ascii	"front_left\000"
 7638      745F6C65 
 7638      667400
 7639              	.LC35:
 7640 0355 72656172 		.ascii	"rear_left\000"
 7640      5F6C6566 
 7640      7400
 7641              	.LC36:
 7642 035f 72656172 		.ascii	"rear_right\000"
 7642      5F726967 
 7642      687400
 7643              	.LC37:
 7644 036a 556E6162 		.ascii	"Unable to initialize motor: %s - [FAIL]\015\012\000"
 7644      6C652074 
 7644      6F20696E 
 7644      69746961 
 7644      6C697A65 
 7645              	.LC38:
 7646 0394 534C4F57 		.ascii	"SLOW! %u\000"
 7646      21202575 
 7646      00
 7647              	.LC39:
 7648 039d 7468726F 		.ascii	"throttled_joy_vel\000"
 7648      74746C65 
 7648      645F6A6F 
 7648      795F7665 
 7648      6C00
 7649              	.LC40:
 7650 03af 6C656400 		.ascii	"led\000"
 7651              	.LC41:
 7652 03b3 64656275 		.ascii	"debug\000"
 7652      6700
 7653              	.LC42:
 7654 03b9 6F646F6D 		.ascii	"odom\000"
 7654      00
 7655              		.bss
 7656              		.align	2
 7657              		.set	.LANCHOR1,. + 0
 7660              	initialized:
 7661 0000 00       		.space	1
 7662 0001 000000   		.space	3
 7665              	lastMsg:
 7666 0004 00000000 		.space	4
 7669              	currentMode:
 7670 0008 00       		.space	1
 7673              	waitForServos:
 7674 0009 00       		.space	1
 7675 000a 0000     		.space	2
 7678              	motorCmd:
 7679 000c 00000000 		.space	16
 7679      00000000 
 7679      00000000 
 7679      00000000 
 7682              	servo_left:
 7683 001c 00000000 		.space	4
 7686              	servo_right:
 7687 0020 00000000 		.space	4
 7690              	USART_CNTOUT:
 7691 0024 00000000 		.space	4
 7694              	USART_CNTIN:
 7695 0028 00000000 		.space	4
 7698              	USART_FIFO:
 7699 002c 00000000 		.space	1024
 7699      00000000 
 7699      00000000 
 7699      00000000 
 7699      00000000 
 7702              	shuttingDown:
 7703 042c 00       		.space	1
 7704 042d 000000   		.space	3
 7707              	debug_msg:
 7708 0430 00000000 		.space	48
 7708      00000000 
 7708      00000000 
 7708      00000000 
 7708      00000000 
 7711              	odom_msg:
 7712 0460 00000000 		.space	48
 7712      00000000 
 7712      00000000 
 7712      00000000 
 7712      00000000 
 7715              	nh:
 7716 0490 00000000 		.space	1328
 7716      00000000 
 7716      00000000 
 7716      00000000 
 7716      00000000 
 7719              	motor_sub:
 7720 09c0 00000000 		.space	64
 7720      00000000 
 7720      00000000 
 7720      00000000 
 7720      00000000 
 7723              	led_sub:
 7724 0a00 00000000 		.space	28
 7724      00000000 
 7724      00000000 
 7724      00000000 
 7724      00000000 
 7727              	odom_pub:
 7728 0a1c 00000000 		.space	20
 7728      00000000 
 7728      00000000 
 7728      00000000 
 7728      00000000 
 7731              	debug_pub:
 7732 0a30 00000000 		.space	20
 7732      00000000 
 7732      00000000 
 7732      00000000 
 7732      00000000 
 7735              	L:
 7736 0a44 00000000 		.space	4
 7739              	d:
 7740 0a48 00000000 		.space	4
 7743              	front_left:
 7744 0a4c 00000000 		.space	4
 7747              	front_right:
 7748 0a50 00000000 		.space	4
 7751              	rear_left:
 7752 0a54 00000000 		.space	4
 7755              	rear_right:
 7756 0a58 00000000 		.space	4
 7757              		.text
 7758              	.Letext0:
 7759              		.file 19 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 7760              		.file 20 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/machine/_default_types.h"
 7761              		.file 21 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_stdint.h"
 7762              		.file 22 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdint.h"
 7763              		.file 23 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 7764              		.file 24 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_usart.h"
 7765              		.file 25 "/opt/gcc-arm-none-eabi-5_2-2015q4/lib/gcc/arm-none-eabi/5.2.1/include/stddef.h"
 7766              		.file 26 "/opt/gcc-arm-none-eabi-5_2-2015q4/lib/gcc/arm-none-eabi/5.2.1/include/stdarg.h"
 7767              		.file 27 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/lock.h"
 7768              		.file 28 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/_types.h"
 7769              		.file 29 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/sys/reent.h"
 7770              		.file 30 "<built-in>"
 7771              		.file 31 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/type_traits"
 7772              		.file 32 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/exception_ptr.h"
 7773              		.file 33 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/arm-none-eabi/armv7-m/
 7774              		.file 34 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/debug/debug.h"
 7775              		.file 35 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/cwchar"
 7776              		.file 36 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/cstdint"
 7777              		.file 37 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/clocale"
 7778              		.file 38 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/stl_pair.h"
 7779              		.file 39 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/uses_allocator.h"
 7780              		.file 40 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/tuple"
 7781              		.file 41 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/bits/predefined_ops.h"
 7782              		.file 42 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/ext/new_allocator.h"
 7783              		.file 43 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/c++/5.2.1/ext/numeric_traits.h"
 7784              		.file 44 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/wchar.h"
 7785              		.file 45 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/locale.h"
 7786              		.file 46 "./inc/motorSettings.h"
 7787              		.file 47 "./lib/ros_lib/ros/duration.h"
 7788              		.file 48 "./lib/ros_lib/ros.h"
 7789              		.file 49 "./lib/ros_lib/geometry_msgs/Point.h"
 7790              		.file 50 "./lib/ros_lib/geometry_msgs/TransformStamped.h"
 7791              		.file 51 "./lib/ros_lib/geometry_msgs/Transform.h"
 7792              		.file 52 "./lib/ros_lib/geometry_msgs/Vector3.h"
 7793              		.file 53 "./lib/ros_lib/geometry_msgs/Quaternion.h"
 7794              		.file 54 "./lib/ros_lib/sensor_msgs/Joy.h"
 7795              		.file 55 "./lib/ros_lib/nav_msgs/Odometry.h"
 7796              		.file 56 "./inc/motor.h"
 7797              		.file 57 "./inc/led.h"
 7798              		.file 58 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/string.h"
 7799              		.file 59 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdlib.h"
 7800              		.file 60 "./inc/stm32_time.h"
 7801              		.file 61 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 7802              		.file 62 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_exti.h"
 7803              		.file 63 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/math.h"
 7804              		.file 64 "/opt/gcc-arm-none-eabi-5_2-2015q4/arm-none-eabi/include/stdio.h"
 7805              		.file 65 "./inc/encoder.h"
 7806              		.file 66 "./lib/ros_lib/tf/tf.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/cczANGZW.s:20     .text._ZNK8std_msgs4Time9serializeEPh:00000000 $t
     /tmp/cczANGZW.s:25     .text._ZNK8std_msgs4Time9serializeEPh:00000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:00000000 $d
     /tmp/cczANGZW.s:75     .text._ZN8std_msgs4Time11deserializeEPh:00000000 $t
     /tmp/cczANGZW.s:80     .text._ZN8std_msgs4Time11deserializeEPh:00000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:00000000 $d
     /tmp/cczANGZW.s:131    .text._ZN8std_msgs4Time7getTypeEv:00000000 $t
     /tmp/cczANGZW.s:136    .text._ZN8std_msgs4Time7getTypeEv:00000000 _ZN8std_msgs4Time7getTypeEv
     /tmp/cczANGZW.s:152    .text._ZN8std_msgs4Time7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:00000000 $d
     /tmp/cczANGZW.s:159    .text._ZN8std_msgs4Time6getMD5Ev:00000000 $t
     /tmp/cczANGZW.s:164    .text._ZN8std_msgs4Time6getMD5Ev:00000000 _ZN8std_msgs4Time6getMD5Ev
     /tmp/cczANGZW.s:180    .text._ZN8std_msgs4Time6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:00000000 $d
     /tmp/cczANGZW.s:187    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $t
     /tmp/cczANGZW.s:192    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
     /tmp/cczANGZW.s:209    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:00000000 $d
     /tmp/cczANGZW.s:216    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $t
     /tmp/cczANGZW.s:221    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
     /tmp/cczANGZW.s:237    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:00000000 $d
     /tmp/cczANGZW.s:244    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $t
     /tmp/cczANGZW.s:249    .text._ZN14rosserial_msgs3Log7getTypeEv:00000000 _ZN14rosserial_msgs3Log7getTypeEv
     /tmp/cczANGZW.s:266    .text._ZN14rosserial_msgs3Log7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:00000000 $d
     /tmp/cczANGZW.s:273    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $t
     /tmp/cczANGZW.s:278    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 _ZN14rosserial_msgs3Log6getMD5Ev
     /tmp/cczANGZW.s:294    .text._ZN14rosserial_msgs3Log6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:00000000 $d
     /tmp/cczANGZW.s:301    .text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000000 $t
     /tmp/cczANGZW.s:306    .text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000000 _ZN14rosserial_msgs19RequestParamRequest7getTypeEv
     /tmp/cczANGZW.s:323    .text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs19RequestParamRequest7getTypeEv:00000000 $d
     /tmp/cczANGZW.s:330    .text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000000 $t
     /tmp/cczANGZW.s:335    .text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000000 _ZN14rosserial_msgs19RequestParamRequest6getMD5Ev
     /tmp/cczANGZW.s:351    .text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs19RequestParamRequest6getMD5Ev:00000000 $d
     /tmp/cczANGZW.s:358    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $t
     /tmp/cczANGZW.s:363    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
     /tmp/cczANGZW.s:379    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:00000000 $d
     /tmp/cczANGZW.s:386    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $t
     /tmp/cczANGZW.s:391    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
     /tmp/cczANGZW.s:407    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:00000000 $d
     /tmp/cczANGZW.s:414    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 $t
     /tmp/cczANGZW.s:419    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 _ZN8std_msgs19MultiArrayDimension7getTypeEv
     /tmp/cczANGZW.s:436    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension7getTypeEv:00000000 $d
     /tmp/cczANGZW.s:443    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 $t
     /tmp/cczANGZW.s:448    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 _ZN8std_msgs19MultiArrayDimension6getMD5Ev
     /tmp/cczANGZW.s:464    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:00000000 $d
     /tmp/cczANGZW.s:471    .text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 $t
     /tmp/cczANGZW.s:476    .text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 _ZNK8std_msgs16MultiArrayLayout9serializeEPh
.ARM.exidx.text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:00000000 $d
     /tmp/cczANGZW.s:569    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 $t
     /tmp/cczANGZW.s:574    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 _ZN8std_msgs16MultiArrayLayout7getTypeEv
     /tmp/cczANGZW.s:590    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout7getTypeEv:00000000 $d
     /tmp/cczANGZW.s:597    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 $t
     /tmp/cczANGZW.s:602    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 _ZN8std_msgs16MultiArrayLayout6getMD5Ev
     /tmp/cczANGZW.s:618    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:00000000 $d
     /tmp/cczANGZW.s:625    .text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 $t
     /tmp/cczANGZW.s:630    .text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 _ZNK8std_msgs17Float32MultiArray9serializeEPh
.ARM.exidx.text._ZNK8std_msgs17Float32MultiArray9serializeEPh:00000000 $d
     /tmp/cczANGZW.s:722    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 $t
     /tmp/cczANGZW.s:727    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 _ZN8std_msgs17Float32MultiArray7getTypeEv
     /tmp/cczANGZW.s:743    .text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray7getTypeEv:00000000 $d
     /tmp/cczANGZW.s:750    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 $t
     /tmp/cczANGZW.s:755    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 _ZN8std_msgs17Float32MultiArray6getMD5Ev
     /tmp/cczANGZW.s:771    .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray6getMD5Ev:00000000 $d
     /tmp/cczANGZW.s:778    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 $t
     /tmp/cczANGZW.s:783    .text._ZNK8std_msgs5UInt89serializeEPh:00000000 _ZNK8std_msgs5UInt89serializeEPh
.ARM.exidx.text._ZNK8std_msgs5UInt89serializeEPh:00000000 $d
     /tmp/cczANGZW.s:809    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 $t
     /tmp/cczANGZW.s:814    .text._ZN8std_msgs5UInt811deserializeEPh:00000000 _ZN8std_msgs5UInt811deserializeEPh
.ARM.exidx.text._ZN8std_msgs5UInt811deserializeEPh:00000000 $d
     /tmp/cczANGZW.s:837    .text._ZN8std_msgs5UInt87getTypeEv:00000000 $t
     /tmp/cczANGZW.s:842    .text._ZN8std_msgs5UInt87getTypeEv:00000000 _ZN8std_msgs5UInt87getTypeEv
     /tmp/cczANGZW.s:858    .text._ZN8std_msgs5UInt87getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt87getTypeEv:00000000 $d
     /tmp/cczANGZW.s:865    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 $t
     /tmp/cczANGZW.s:870    .text._ZN8std_msgs5UInt86getMD5Ev:00000000 _ZN8std_msgs5UInt86getMD5Ev
     /tmp/cczANGZW.s:886    .text._ZN8std_msgs5UInt86getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs5UInt86getMD5Ev:00000000 $d
     /tmp/cczANGZW.s:893    .text._ZN8std_msgs6Header7getTypeEv:00000000 $t
     /tmp/cczANGZW.s:898    .text._ZN8std_msgs6Header7getTypeEv:00000000 _ZN8std_msgs6Header7getTypeEv
     /tmp/cczANGZW.s:915    .text._ZN8std_msgs6Header7getTypeEv:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header7getTypeEv:00000000 $d
     /tmp/cczANGZW.s:922    .text._ZN8std_msgs6Header6getMD5Ev:00000000 $t
     /tmp/cczANGZW.s:927    .text._ZN8std_msgs6Header6getMD5Ev:00000000 _ZN8std_msgs6Header6getMD5Ev
     /tmp/cczANGZW.s:943    .text._ZN8std_msgs6Header6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN8std_msgs6Header6getMD5Ev:00000000 $d
     /tmp/cczANGZW.s:950    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $t
     /tmp/cczANGZW.s:955    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 _ZN12roberto_msgs10MotorState7getTypeEv
     /tmp/cczANGZW.s:972    .text._ZN12roberto_msgs10MotorState7getTypeEv:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState7getTypeEv:00000000 $d
     /tmp/cczANGZW.s:979    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $t
     /tmp/cczANGZW.s:984    .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 _ZN12roberto_msgs10MotorState6getMD5Ev
     /tmp/cczANGZW.s:1000   .text._ZN12roberto_msgs10MotorState6getMD5Ev:00000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState6getMD5Ev:00000000 $d
     /tmp/cczANGZW.s:1007   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 $t
     /tmp/cczANGZW.s:1012   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE9connectedEv:00000000 $d
     /tmp/cczANGZW.s:1032   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $t
     /tmp/cczANGZW.s:1037   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE8callbackEPh:00000000 $d
     /tmp/cczANGZW.s:1073   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $t
     /tmp/cczANGZW.s:1078   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE15getEndpointTypeEv:00000000 $d
     /tmp/cczANGZW.s:1097   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $t
     /tmp/cczANGZW.s:1102   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv
     /tmp/cczANGZW.s:1118   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE10getMsgTypeEv:00000000 $d
     /tmp/cczANGZW.s:1125   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $t
     /tmp/cczANGZW.s:1130   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev
     /tmp/cczANGZW.s:1146   .text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN8std_msgs5UInt8EE9getMsgMD5Ev:00000000 $d
     /tmp/cczANGZW.s:1153   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $t
     /tmp/cczANGZW.s:1158   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:00000000 $d
     /tmp/cczANGZW.s:1177   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $t
     /tmp/cczANGZW.s:1182   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
     /tmp/cczANGZW.s:1198   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:00000000 $d
     /tmp/cczANGZW.s:1205   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $t
     /tmp/cczANGZW.s:1210   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
     /tmp/cczANGZW.s:1226   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:00000000 $d
     /tmp/cczANGZW.s:1233   .text:00000000 $t
     /tmp/cczANGZW.s:1238   .text:00000000 _Z6led_cbRKN8std_msgs5UInt8E
     /tmp/cczANGZW.s:1262   .text:00000010 $d
                       .ARM.exidx:00000000 $d
     /tmp/cczANGZW.s:1269   .text._ZNK8std_msgs6Header9serializeEPh:00000000 $t
     /tmp/cczANGZW.s:1274   .text._ZNK8std_msgs6Header9serializeEPh:00000000 _ZNK8std_msgs6Header9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6Header9serializeEPh:00000000 $d
     /tmp/cczANGZW.s:1373   .text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 $t
     /tmp/cczANGZW.s:1378   .text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 _ZNK8std_msgs19MultiArrayDimension9serializeEPh
.ARM.exidx.text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:00000000 $d
     /tmp/cczANGZW.s:1461   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $t
     /tmp/cczANGZW.s:1466   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:00000000 $d
     /tmp/cczANGZW.s:1679   .text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:00000000 $t
     /tmp/cczANGZW.s:1684   .text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:00000000 _ZNK14rosserial_msgs19RequestParamRequest9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs19RequestParamRequest9serializeEPh:00000000 $d
     /tmp/cczANGZW.s:1737   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $t
     /tmp/cczANGZW.s:1742   .text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:00000000 $d
     /tmp/cczANGZW.s:1801   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $t
     /tmp/cczANGZW.s:1806   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:00000000 $d
     /tmp/cczANGZW.s:1941   .text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:00000000 $t
     /tmp/cczANGZW.s:1946   .text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:00000000 _ZN14rosserial_msgs19RequestParamRequest11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs19RequestParamRequest11deserializeEPh:00000000 $d
     /tmp/cczANGZW.s:2014   .text._ZN8std_msgs6Header11deserializeEPh:00000000 $t
     /tmp/cczANGZW.s:2019   .text._ZN8std_msgs6Header11deserializeEPh:00000000 _ZN8std_msgs6Header11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6Header11deserializeEPh:00000000 $d
     /tmp/cczANGZW.s:2132   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $t
     /tmp/cczANGZW.s:2137   .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:00000000 $d
     /tmp/cczANGZW.s:2325   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $t
     /tmp/cczANGZW.s:2330   .text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:00000000 $d
     /tmp/cczANGZW.s:2404   .text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 $t
     /tmp/cczANGZW.s:2409   .text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 _ZN8std_msgs19MultiArrayDimension11deserializeEPh
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:00000000 $d
     /tmp/cczANGZW.s:2511   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $t
     /tmp/cczANGZW.s:2516   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:00000000 $d
     /tmp/cczANGZW.s:2771   .text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 $t
     /tmp/cczANGZW.s:2776   .text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 _ZN8std_msgs16MultiArrayLayout11deserializeEPh
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:00000000 $d
     /tmp/cczANGZW.s:2890   .text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 $t
     /tmp/cczANGZW.s:2895   .text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 _ZN8std_msgs17Float32MultiArray11deserializeEPh
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray11deserializeEPh:00000000 $d
     /tmp/cczANGZW.s:3003   .text:00000014 $t
     /tmp/cczANGZW.s:3008   .text:00000014 _Z8motor_cbRKN12roberto_msgs10MotorStateE
     /tmp/cczANGZW.s:3226   .text:00000104 $d
     /tmp/cczANGZW.s:3239   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $t
     /tmp/cczANGZW.s:3244   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 _ZN3ros3Msg19serializeAvrFloat64EPhf
.ARM.exidx.text._ZN3ros3Msg19serializeAvrFloat64EPhf:00000000 $d
     /tmp/cczANGZW.s:3331   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $t
     /tmp/cczANGZW.s:3336   .text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 _ZNK12roberto_msgs10MotorState9serializeEPh
.ARM.exidx.text._ZNK12roberto_msgs10MotorState9serializeEPh:00000000 $d
     /tmp/cczANGZW.s:3408   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $t
     /tmp/cczANGZW.s:3413   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 _ZN3ros3Msg21deserializeAvrFloat64EPKhPf
.ARM.exidx.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:00000000 $d
     /tmp/cczANGZW.s:3485   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $t
     /tmp/cczANGZW.s:3490   .text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 _ZN12roberto_msgs10MotorState11deserializeEPh
.ARM.exidx.text._ZN12roberto_msgs10MotorState11deserializeEPh:00000000 $d
     /tmp/cczANGZW.s:3564   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $t
     /tmp/cczANGZW.s:3569   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:00000000 $d
     /tmp/cczANGZW.s:3613   .text._ZN15ArduinoHardware4initEv:00000000 $t
     /tmp/cczANGZW.s:3618   .text._ZN15ArduinoHardware4initEv:00000000 _ZN15ArduinoHardware4initEv
     /tmp/cczANGZW.s:3736   .text._ZN15ArduinoHardware4initEv:0000008c $d
.ARM.exidx.text._ZN15ArduinoHardware4initEv:00000000 $d
     /tmp/cczANGZW.s:3743   .text:0000011c $t
     /tmp/cczANGZW.s:3748   .text:0000011c USART1_IRQHandler
     /tmp/cczANGZW.s:3810   .text:00000160 $d
     /tmp/cczANGZW.s:3816   .text:00000168 $t
     /tmp/cczANGZW.s:3821   .text:00000168 EXTI2_IRQHandler
     /tmp/cczANGZW.s:3862   .text:00000188 $d
                       .ARM.extab:00000000 $d
     /tmp/cczANGZW.s:3867   .text:0000018c $t
     /tmp/cczANGZW.s:3872   .text:0000018c HardFault_Handler
     /tmp/cczANGZW.s:3890   .text:0000019c _MSP
     /tmp/cczANGZW.s:3909   .text:000001a4 hard_fault_handler_c
     /tmp/cczANGZW.s:3930   .text:000001a6 _Z13assert_failedPhm
     /tmp/cczANGZW.s:3960   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:00000000 $t
     /tmp/cczANGZW.s:3965   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi
     /tmp/cczANGZW.s:4113   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:0000006c $d
     /tmp/cczANGZW.s:7407   .rodata._ZTVN14rosserial_msgs19RequestParamRequestE:00000000 _ZTVN14rosserial_msgs19RequestParamRequestE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8getParamEPKcPfi:00000000 $d
     /tmp/cczANGZW.s:4119   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 $t
     /tmp/cczANGZW.s:4124   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc
     /tmp/cczANGZW.s:4178   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000020 $d
     /tmp/cczANGZW.s:7395   .rodata._ZTVN14rosserial_msgs3LogE:00000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8logerrorEPKc:00000000 $d
     /tmp/cczANGZW.s:4184   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 $t
     /tmp/cczANGZW.s:4189   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE
     /tmp/cczANGZW.s:4353   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:000000bc $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE:00000000 $d
     /tmp/cczANGZW.s:4360   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 $t
     /tmp/cczANGZW.s:4365   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv
     /tmp/cczANGZW.s:4435   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000024 $d
     /tmp/cczANGZW.s:7371   .rodata._ZTVN8std_msgs4TimeE:00000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv:00000000 $d
     /tmp/cczANGZW.s:4441   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 $t
     /tmp/cczANGZW.s:4446   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv
     /tmp/cczANGZW.s:4608   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:000000b4 $d
     /tmp/cczANGZW.s:7383   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 _ZTVN14rosserial_msgs9TopicInfoE
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv:00000000 $d
     /tmp/cczANGZW.s:4615   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 $t
     /tmp/cczANGZW.s:4620   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh
     /tmp/cczANGZW.s:4753   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000074 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8syncTimeEPh:00000000 $d
     /tmp/cczANGZW.s:4761   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 $t
     /tmp/cczANGZW.s:4766   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 _ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv
     /tmp/cczANGZW.s:5164   .text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000210 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EE8spinOnceEv:00000000 $d
     /tmp/cczANGZW.s:5178   .text.startup:00000000 $t
     /tmp/cczANGZW.s:5183   .text.startup:00000000 main
     /tmp/cczANGZW.s:5407   .text.startup:000000f8 $d
     /tmp/cczANGZW.s:5417   .text.startup:00000114 $t
     /tmp/cczANGZW.s:5809   .text.startup:000003ac $d
     /tmp/cczANGZW.s:5841   .text.startup:00000428 $t
     /tmp/cczANGZW.s:6182   .text.startup:00000608 $d
     /tmp/cczANGZW.s:6190   .text.startup:0000061c $t
     /tmp/cczANGZW.s:6578   .text.startup:000008a8 $d
          .ARM.exidx.text.startup:00000000 $d
     /tmp/cczANGZW.s:6591   .text.startup:000008c8 $t
     /tmp/cczANGZW.s:6595   .text.startup:000008c8 _GLOBAL__sub_I_USART_FIFO
     /tmp/cczANGZW.s:7080   .text.startup:00000a40 $d
     /tmp/cczANGZW.s:7503   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/cczANGZW.s:7419   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 _ZTVN14rosserial_msgs20RequestParamResponseE
     /tmp/cczANGZW.s:7514   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/cczANGZW.s:7491   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 _ZTVN12roberto_msgs10MotorStateE
     /tmp/cczANGZW.s:7479   .rodata._ZTVN8std_msgs6HeaderE:00000000 _ZTVN8std_msgs6HeaderE
     /tmp/cczANGZW.s:7526   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/cczANGZW.s:7467   .rodata._ZTVN8std_msgs5UInt8E:00000000 _ZTVN8std_msgs5UInt8E
     /tmp/cczANGZW.s:7455   .rodata._ZTVN8std_msgs17Float32MultiArrayE:00000000 _ZTVN8std_msgs17Float32MultiArrayE
     /tmp/cczANGZW.s:7443   .rodata._ZTVN8std_msgs16MultiArrayLayoutE:00000000 _ZTVN8std_msgs16MultiArrayLayoutE
     /tmp/cczANGZW.s:7431   .rodata._ZTVN8std_msgs19MultiArrayDimensionE:00000000 _ZTVN8std_msgs19MultiArrayDimensionE
     /tmp/cczANGZW.s:7111   .init_array:00000000 $d
     /tmp/cczANGZW.s:7117   .rodata._ZTSN3ros3MsgE:00000000 _ZTSN3ros3MsgE
     /tmp/cczANGZW.s:7124   .rodata._ZTIN3ros3MsgE:00000000 _ZTIN3ros3MsgE
     /tmp/cczANGZW.s:7121   .rodata._ZTIN3ros3MsgE:00000000 $d
     /tmp/cczANGZW.s:7131   .rodata._ZTSN8std_msgs4TimeE:00000000 _ZTSN8std_msgs4TimeE
     /tmp/cczANGZW.s:7138   .rodata._ZTIN8std_msgs4TimeE:00000000 _ZTIN8std_msgs4TimeE
     /tmp/cczANGZW.s:7135   .rodata._ZTIN8std_msgs4TimeE:00000000 $d
     /tmp/cczANGZW.s:7146   .rodata._ZTSN14rosserial_msgs9TopicInfoE:00000000 _ZTSN14rosserial_msgs9TopicInfoE
     /tmp/cczANGZW.s:7153   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 _ZTIN14rosserial_msgs9TopicInfoE
     /tmp/cczANGZW.s:7150   .rodata._ZTIN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/cczANGZW.s:7161   .rodata._ZTSN14rosserial_msgs3LogE:00000000 _ZTSN14rosserial_msgs3LogE
     /tmp/cczANGZW.s:7168   .rodata._ZTIN14rosserial_msgs3LogE:00000000 _ZTIN14rosserial_msgs3LogE
     /tmp/cczANGZW.s:7165   .rodata._ZTIN14rosserial_msgs3LogE:00000000 $d
     /tmp/cczANGZW.s:7176   .rodata._ZTSN14rosserial_msgs19RequestParamRequestE:00000000 _ZTSN14rosserial_msgs19RequestParamRequestE
     /tmp/cczANGZW.s:7183   .rodata._ZTIN14rosserial_msgs19RequestParamRequestE:00000000 _ZTIN14rosserial_msgs19RequestParamRequestE
     /tmp/cczANGZW.s:7180   .rodata._ZTIN14rosserial_msgs19RequestParamRequestE:00000000 $d
     /tmp/cczANGZW.s:7191   .rodata._ZTSN14rosserial_msgs20RequestParamResponseE:00000000 _ZTSN14rosserial_msgs20RequestParamResponseE
     /tmp/cczANGZW.s:7198   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 _ZTIN14rosserial_msgs20RequestParamResponseE
     /tmp/cczANGZW.s:7195   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/cczANGZW.s:7206   .rodata._ZTSN3ros15NodeHandleBase_E:00000000 _ZTSN3ros15NodeHandleBase_E
     /tmp/cczANGZW.s:7213   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 _ZTIN3ros15NodeHandleBase_E
     /tmp/cczANGZW.s:7210   .rodata._ZTIN3ros15NodeHandleBase_E:00000000 $d
     /tmp/cczANGZW.s:7220   .rodata._ZTSN3ros11Subscriber_E:00000000 _ZTSN3ros11Subscriber_E
     /tmp/cczANGZW.s:7227   .rodata._ZTIN3ros11Subscriber_E:00000000 _ZTIN3ros11Subscriber_E
     /tmp/cczANGZW.s:7224   .rodata._ZTIN3ros11Subscriber_E:00000000 $d
     /tmp/cczANGZW.s:7234   .rodata._ZTSN8std_msgs19MultiArrayDimensionE:00000000 _ZTSN8std_msgs19MultiArrayDimensionE
     /tmp/cczANGZW.s:7241   .rodata._ZTIN8std_msgs19MultiArrayDimensionE:00000000 _ZTIN8std_msgs19MultiArrayDimensionE
     /tmp/cczANGZW.s:7238   .rodata._ZTIN8std_msgs19MultiArrayDimensionE:00000000 $d
     /tmp/cczANGZW.s:7249   .rodata._ZTSN8std_msgs16MultiArrayLayoutE:00000000 _ZTSN8std_msgs16MultiArrayLayoutE
     /tmp/cczANGZW.s:7256   .rodata._ZTIN8std_msgs16MultiArrayLayoutE:00000000 _ZTIN8std_msgs16MultiArrayLayoutE
     /tmp/cczANGZW.s:7253   .rodata._ZTIN8std_msgs16MultiArrayLayoutE:00000000 $d
     /tmp/cczANGZW.s:7264   .rodata._ZTSN8std_msgs17Float32MultiArrayE:00000000 _ZTSN8std_msgs17Float32MultiArrayE
     /tmp/cczANGZW.s:7271   .rodata._ZTIN8std_msgs17Float32MultiArrayE:00000000 _ZTIN8std_msgs17Float32MultiArrayE
     /tmp/cczANGZW.s:7268   .rodata._ZTIN8std_msgs17Float32MultiArrayE:00000000 $d
     /tmp/cczANGZW.s:7279   .rodata._ZTSN8std_msgs5UInt8E:00000000 _ZTSN8std_msgs5UInt8E
     /tmp/cczANGZW.s:7286   .rodata._ZTIN8std_msgs5UInt8E:00000000 _ZTIN8std_msgs5UInt8E
     /tmp/cczANGZW.s:7283   .rodata._ZTIN8std_msgs5UInt8E:00000000 $d
     /tmp/cczANGZW.s:7294   .rodata._ZTSN8std_msgs6HeaderE:00000000 _ZTSN8std_msgs6HeaderE
     /tmp/cczANGZW.s:7301   .rodata._ZTIN8std_msgs6HeaderE:00000000 _ZTIN8std_msgs6HeaderE
     /tmp/cczANGZW.s:7298   .rodata._ZTIN8std_msgs6HeaderE:00000000 $d
     /tmp/cczANGZW.s:7309   .rodata._ZTSN12roberto_msgs10MotorStateE:00000000 _ZTSN12roberto_msgs10MotorStateE
     /tmp/cczANGZW.s:7316   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 _ZTIN12roberto_msgs10MotorStateE
     /tmp/cczANGZW.s:7313   .rodata._ZTIN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/cczANGZW.s:7324   .rodata._ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTSN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/cczANGZW.s:7332   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 _ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE
     /tmp/cczANGZW.s:7329   .rodata._ZTIN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 $d
     /tmp/cczANGZW.s:7340   .rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/cczANGZW.s:7347   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 _ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/cczANGZW.s:7344   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/cczANGZW.s:7355   .rodata._ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTSN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/cczANGZW.s:7362   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 _ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE
     /tmp/cczANGZW.s:7359   .rodata._ZTIN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/cczANGZW.s:7368   .rodata._ZTVN8std_msgs4TimeE:00000000 $d
     /tmp/cczANGZW.s:7380   .rodata._ZTVN14rosserial_msgs9TopicInfoE:00000000 $d
     /tmp/cczANGZW.s:7392   .rodata._ZTVN14rosserial_msgs3LogE:00000000 $d
     /tmp/cczANGZW.s:7404   .rodata._ZTVN14rosserial_msgs19RequestParamRequestE:00000000 $d
     /tmp/cczANGZW.s:7416   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:00000000 $d
     /tmp/cczANGZW.s:7428   .rodata._ZTVN8std_msgs19MultiArrayDimensionE:00000000 $d
     /tmp/cczANGZW.s:7440   .rodata._ZTVN8std_msgs16MultiArrayLayoutE:00000000 $d
     /tmp/cczANGZW.s:7452   .rodata._ZTVN8std_msgs17Float32MultiArrayE:00000000 $d
     /tmp/cczANGZW.s:7464   .rodata._ZTVN8std_msgs5UInt8E:00000000 $d
     /tmp/cczANGZW.s:7476   .rodata._ZTVN8std_msgs6HeaderE:00000000 $d
     /tmp/cczANGZW.s:7488   .rodata._ZTVN12roberto_msgs10MotorStateE:00000000 $d
     /tmp/cczANGZW.s:7500   .rodata._ZTVN3ros11NodeHandle_I15ArduinoHardwareLi25ELi25ELi512ELi512EEE:00000000 $d
     /tmp/cczANGZW.s:7511   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:00000000 $d
     /tmp/cczANGZW.s:7523   .rodata._ZTVN3ros10SubscriberIN8std_msgs5UInt8EEE:00000000 $d
     /tmp/cczANGZW.s:7727   .bss:00000a1c odom_pub
     /tmp/cczANGZW.s:7711   .bss:00000460 odom_msg
     /tmp/cczANGZW.s:7731   .bss:00000a30 debug_pub
     /tmp/cczANGZW.s:7707   .bss:00000430 debug_msg
     /tmp/cczANGZW.s:7723   .bss:00000a00 led_sub
     /tmp/cczANGZW.s:7719   .bss:000009c0 motor_sub
     /tmp/cczANGZW.s:7673   .bss:00000009 waitForServos
     /tmp/cczANGZW.s:7702   .bss:0000042c shuttingDown
     /tmp/cczANGZW.s:7715   .bss:00000490 nh
     /tmp/cczANGZW.s:7660   .bss:00000000 initialized
     /tmp/cczANGZW.s:7665   .bss:00000004 lastMsg
     /tmp/cczANGZW.s:7669   .bss:00000008 currentMode
     /tmp/cczANGZW.s:7678   .bss:0000000c motorCmd
     /tmp/cczANGZW.s:7735   .bss:00000a44 L
     /tmp/cczANGZW.s:7739   .bss:00000a48 d
     /tmp/cczANGZW.s:7751   .bss:00000a54 rear_left
     /tmp/cczANGZW.s:7755   .bss:00000a58 rear_right
     /tmp/cczANGZW.s:7743   .bss:00000a4c front_left
     /tmp/cczANGZW.s:7747   .bss:00000a50 front_right
     /tmp/cczANGZW.s:7686   .bss:00000020 servo_right
     /tmp/cczANGZW.s:7682   .bss:0000001c servo_left
     /tmp/cczANGZW.s:7690   .bss:00000024 USART_CNTOUT
     /tmp/cczANGZW.s:7694   .bss:00000028 USART_CNTIN
     /tmp/cczANGZW.s:7698   .bss:0000002c USART_FIFO
     /tmp/cczANGZW.s:7558   .rodata:00000000 $d
     /tmp/cczANGZW.s:7562   .rodata:00000000 _ZN14rosserial_msgsL12REQUESTPARAME
     /tmp/cczANGZW.s:7656   .bss:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_unwind_cpp_pr0
led_set
strlen
memcpy
realloc
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_fadd
__aeabi_fsub
millis
RCC_APB2PeriphClockCmd
GPIO_Init
USART_Cmd
USART_Init
USART_ITConfig
USART_GetITStatus
USART_ReceiveData
EXTI_GetITStatus
EXTI_ClearITPendingBit
__aeabi_unwind_cpp_pr1
debug_toggle
delay
USART_SendData
_ZN3ros16normalizeSecNSecERmS0_
__aeabi_fmul
__aeabi_f2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
__aeabi_f2iz
__aeabi_ddiv
RCC_Configuration
SysTick_Init
GPIO_PinRemapConfig
I2C1_Init
DEBUG_Init
SHUTDOWN_Init
LED_Init
malloc
_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
_ZN13motorSettings12setRegulatorEfffff
_ZN5motor11createMotorEP13motorSettings
sprintf
sqrt
cos
sin
atan
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
